Version 4.0 HI-TECH Software Intermediate Code
"66 main.c
[; ;main.c: 66: volatile char OpMode = MANUAL_MODE;
[c E5395 0 1 2 .. ]
[n E5395 Op_Mode MANUAL_MODE IDLE_MODE AUTO_MODE  ]
[p mainexit ]
"17083 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 17083: extern volatile __bit GIE __attribute__((address(0x7F97)));
[v _GIE `Vb ~T0 @X0 0 e@32663 ]
"76 main.c
[; ;main.c: 76: void init(void);
[v _init `(v ~T0 @X0 0 ef ]
"89
[; ;main.c: 89: void InitSTLED316( unsigned char Brightness );
[v _InitSTLED316 `(v ~T0 @X0 0 ef1`uc ]
"77
[; ;main.c: 77: void initMotor(void);
[v _initMotor `(v ~T0 @X0 0 ef ]
"93
[; ;main.c: 93: void i2c_Init(void);
[v _i2c_Init `(v ~T0 @X0 0 ef ]
"105
[; ;main.c: 105: void initUSART(void);
[v _initUSART `(v ~T0 @X0 0 ef ]
"113
[; ;main.c: 113: void InitTimer1(void);
[v _InitTimer1 `(v ~T0 @X0 0 ef ]
"6333 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6333:     struct {
[s S256 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S256 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"6343
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6343:     struct {
[s S257 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S257 . LC0 LC1 LC2 LC3 LC4 LC5 LC6 LC7 ]
"6332
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6332: typedef union {
[u S255 `S256 1 `S257 1 ]
[n S255 . . . ]
"6354
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6354: extern volatile LATCbits_t LATCbits __attribute__((address(0xF8B)));
[v _LATCbits `VS255 ~T0 @X0 0 e@3979 ]
"6109
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6109:     struct {
[s S250 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S250 . LATA0 LATA1 LATA2 LATA3 LATA4 LATA5 LATA6 LATA7 ]
"6119
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6119:     struct {
[s S251 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S251 . LA0 LA1 LA2 LA3 LA4 LA5 LA6 LA7 ]
"6108
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6108: typedef union {
[u S249 `S250 1 `S251 1 ]
[n S249 . . . ]
"6130
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6130: extern volatile LATAbits_t LATAbits __attribute__((address(0xF89)));
[v _LATAbits `VS249 ~T0 @X0 0 e@3977 ]
"13971
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13971:     struct {
[s S555 :1 `uc 1 ]
[n S555 . NOT_BOR ]
"13974
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13974:     struct {
[s S556 :1 `uc 1 :1 `uc 1 ]
[n S556 . . NOT_POR ]
"13978
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13978:     struct {
[s S557 :2 `uc 1 :1 `uc 1 ]
[n S557 . . NOT_PD ]
"13982
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13982:     struct {
[s S558 :3 `uc 1 :1 `uc 1 ]
[n S558 . . NOT_TO ]
"13986
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13986:     struct {
[s S559 :4 `uc 1 :1 `uc 1 ]
[n S559 . . NOT_RI ]
"13990
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13990:     struct {
[s S560 :5 `uc 1 :1 `uc 1 ]
[n S560 . . NOT_CM ]
"13994
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13994:     struct {
[s S561 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S561 . nBOR nPOR nPD nTO nRI nCM . IPEN ]
"14004
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14004:     struct {
[s S562 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S562 . BOR POR PD TO RI CM ]
"13970
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13970: typedef union {
[u S554 `S555 1 `S556 1 `S557 1 `S558 1 `S559 1 `S560 1 `S561 1 `S562 1 ]
[n S554 . . . . . . . . . ]
"14013
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14013: extern volatile RCONbits_t RCONbits __attribute__((address(0xFD0)));
[v _RCONbits `VS554 ~T0 @X0 0 e@4048 ]
"8697
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8697:     struct {
[s S332 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S332 . TMR1IP TMR2IP CCP1IP SSP1IP TX1IP RC1IP ADIP PMPIP ]
"8707
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8707:     struct {
[s S333 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S333 . . SSPIP TXIP RCIP ]
"8713
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8713:     struct {
[s S334 :7 `uc 1 :1 `uc 1 ]
[n S334 . . PSPIP ]
"8696
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8696: typedef union {
[u S331 `S332 1 `S333 1 `S334 1 ]
[n S331 . . . . ]
"8718
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8718: extern volatile IPR1bits_t IPR1bits __attribute__((address(0xF9F)));
[v _IPR1bits `VS331 ~T0 @X0 0 e@3999 ]
"15447
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15447:     struct {
[s S621 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S621 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"15457
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15457:     struct {
[s S622 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S622 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"15467
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15467:     struct {
[s S623 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S623 . . GIEL GIEH ]
"15446
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15446: typedef union {
[u S620 `S621 1 `S622 1 `S623 1 ]
[n S620 . . . . ]
"15473
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15473: extern volatile INTCONbits_t INTCONbits __attribute__((address(0xFF2)));
[v _INTCONbits `VS620 ~T0 @X0 0 e@4082 ]
"11571
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11571:     struct {
[s S443 :1 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S443 . SWDTEN . ADSHR . LVDSTAT REGSLP ]
"11579
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11579:     struct {
[s S444 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S444 . SWDTE . DEVCFG ]
"11570
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11570: typedef union {
[u S442 `S443 1 `S444 1 ]
[n S442 . . . ]
"11585
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11585: extern volatile WDTCONbits_t WDTCONbits __attribute__((address(0xFC0)));
[v _WDTCONbits `VS442 ~T0 @X0 0 e@4032 ]
"6445
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6445:     struct {
[s S259 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S259 . LATD0 LATD1 LATD2 LATD3 LATD4 LATD5 LATD6 LATD7 ]
"6455
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6455:     struct {
[s S260 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . LD0 LD1 LD2 LD3 LD4 LD5 LD6 LD7 ]
"6444
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6444: typedef union {
[u S258 `S259 1 `S260 1 ]
[n S258 . . . ]
"6466
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6466: extern volatile LATDbits_t LATDbits __attribute__((address(0xF8C)));
[v _LATDbits `VS258 ~T0 @X0 0 e@3980 ]
"86 main.c
[; ;main.c: 86: void WriteSTLED316SData( int number, char v_mode);
[v _WriteSTLED316SData `(v ~T0 @X0 0 ef2`i`uc ]
[v F5325 `(v ~T0 @X0 1 tf1`ul ]
"183 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18.h
[v __delay `JF5325 ~T0 @X0 0 e ]
[p i __delay ]
"102 main.c
[; ;main.c: 102: int read_i2c(long address);
[v _read_i2c `(i ~T0 @X0 0 ef1`l ]
"101
[; ;main.c: 101: void write_i2c(long address, int data);
[v _write_i2c `(v ~T0 @X0 0 ef2`l`i ]
"83
[; ;main.c: 83: void MotorPosition_Init(void);
[v _MotorPosition_Init `(v ~T0 @X0 0 ef ]
"5073 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5073:     struct {
[s S212 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S212 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"5083
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5083:     struct {
[s S213 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S213 . INT0 INT1 INT2 INT3 KBI0 KBI1 KBI2 KBI3 ]
"5093
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5093:     struct {
[s S214 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S214 . . PMA4 PMA3 PMA2 PMA1 PMA0 ]
"5101
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5101:     struct {
[s S215 :1 `uc 1 ]
[n S215 . FLT0 ]
"5104
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5104:     struct {
[s S216 :5 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S216 . . PGC PGD ]
"5109
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5109:     struct {
[s S217 :3 `uc 1 :1 `uc 1 ]
[n S217 . . CCP2_PA2 ]
"5072
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5072: typedef union {
[u S211 `S212 1 `S213 1 `S214 1 `S215 1 `S216 1 `S217 1 ]
[n S211 . . . . . . . ]
"5114
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5114: extern volatile PORTBbits_t PORTBbits __attribute__((address(0xF81)));
[v _PORTBbits `VS211 ~T0 @X0 0 e@3969 ]
"91 main.c
[; ;main.c: 91: void ToggleVIB_Mode(void);
[v _ToggleVIB_Mode `(v ~T0 @X0 0 ef ]
"88
[; ;main.c: 88: void WriteSTLED316SVibMode( char v_mode);
[v _WriteSTLED316SVibMode `(v ~T0 @X0 0 ef1`uc ]
"4917 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4917:     struct {
[s S207 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S207 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"4927
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4927:     struct {
[s S208 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S208 . AN0 AN1 AN2 AN3 T0CKI AN4 OSC2 ]
"4936
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4936:     struct {
[s S209 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S209 . . VREFM VREFP . C2INA CLKO ]
"4944
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4944:     struct {
[s S210 :1 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S210 . ULPWUIN . LVDIN . RJPU ]
"4916
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4916: typedef union {
[u S206 `S207 1 `S208 1 `S209 1 `S210 1 ]
[n S206 . . . . . ]
"4952
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4952: extern volatile PORTAbits_t PORTAbits __attribute__((address(0xF80)));
[v _PORTAbits `VS206 ~T0 @X0 0 e@3968 ]
"92 main.c
[; ;main.c: 92: void Homing_Again_Manual(void);
[v _Homing_Again_Manual `(v ~T0 @X0 0 ef ]
"112
[; ;main.c: 112: void WriteSTLED316SErr( char msg);
[v _WriteSTLED316SErr `(v ~T0 @X0 0 ef1`uc ]
"111
[; ;main.c: 111: void Homing_Again_Auto(void);
[v _Homing_Again_Auto `(v ~T0 @X0 0 ef ]
"106
[; ;main.c: 106: void Write1USART(char data);
[v _Write1USART `(v ~T0 @X0 0 ef1`uc ]
"108
[; ;main.c: 108: void flush(void);
[v _flush `(v ~T0 @X0 0 ef ]
"109
[; ;main.c: 109: void flushOut(void);
[v _flushOut `(v ~T0 @X0 0 ef ]
[t ~ __interrupt . k ]
[t T109 __interrupt ]
"8605 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8605:     struct {
[s S328 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S328 . TMR1IF TMR2IF CCP1IF SSP1IF TX1IF RC1IF ADIF PMPIF ]
"8615
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8615:     struct {
[s S329 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S329 . . SSPIF TXIF RCIF ]
"8621
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8621:     struct {
[s S330 :7 `uc 1 :1 `uc 1 ]
[n S330 . . PSPIF ]
"8604
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8604: typedef union {
[u S327 `S328 1 `S329 1 `S330 1 ]
[n S327 . . . . ]
"8626
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8626: extern volatile PIR1bits_t PIR1bits __attribute__((address(0xF9E)));
[v _PIR1bits `VS327 ~T0 @X0 0 e@3998 ]
"107 main.c
[; ;main.c: 107: char Read1USART(void);
[v _Read1USART `(uc ~T0 @X0 0 ef ]
"9533 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9533:     struct {
[s S367 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S367 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"9543
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9543:     struct {
[s S368 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S368 . RCD8 . RC9 ]
"9548
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9548:     struct {
[s S369 :6 `uc 1 :1 `uc 1 ]
[n S369 . . NOT_RC8 ]
"9552
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9552:     struct {
[s S370 :6 `uc 1 :1 `uc 1 ]
[n S370 . . nRC8 ]
"9556
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9556:     struct {
[s S371 :6 `uc 1 :1 `uc 1 ]
[n S371 . . RC8_9 ]
"9560
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9560:     struct {
[s S372 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S372 . RX9D1 OERR1 FERR1 ADDEN1 CREN1 SREN1 RX91 SPEN1 ]
"9570
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9570:     struct {
[s S373 :5 `uc 1 :1 `uc 1 ]
[n S373 . . SRENA ]
"9532
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9532: typedef union {
[u S366 `S367 1 `S368 1 `S369 1 `S370 1 `S371 1 `S372 1 `S373 1 ]
[n S366 . . . . . . . . ]
"9575
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9575: extern volatile RCSTA1bits_t RCSTA1bits __attribute__((address(0xFAC)));
[v _RCSTA1bits `VS366 ~T0 @X0 0 e@4012 ]
"18967
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 18967: extern volatile __bit TMR1IF __attribute__((address(0x7CF0)));
[v _TMR1IF `Vb ~T0 @X0 0 e@31984 ]
"13860
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13860: extern volatile unsigned short TMR1 __attribute__((address(0xFCE)));
[v _TMR1 `Vus ~T0 @X0 0 e@4046 ]
"80 main.c
[; ;main.c: 80: void MotorON_PWM(void);
[v _MotorON_PWM `(v ~T0 @X0 0 ef ]
"81
[; ;main.c: 81: void MotorBREAK(void);
[v _MotorBREAK `(v ~T0 @X0 0 ef ]
"110
[; ;main.c: 110: void readWeighingData(void);
[v _readWeighingData `(v ~T0 @X0 0 ef ]
"87
[; ;main.c: 87: void WriteSTLED316SMode( char msg);
[v _WriteSTLED316SMode `(v ~T0 @X0 0 ef1`uc ]
"13722 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13722: extern volatile unsigned char T1CON __attribute__((address(0xFCD)));
[v _T1CON `Vuc ~T0 @X0 0 e@4045 ]
"18964
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 18964: extern volatile __bit TMR1IE __attribute__((address(0x7CE8)));
[v _TMR1IE `Vb ~T0 @X0 0 e@31976 ]
"54 C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 54: __asm("PMSTAT equ 0F40h");
[; <" PMSTAT equ 0F40h ;# ">
"61
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 61: __asm("PMSTATL equ 0F40h");
[; <" PMSTATL equ 0F40h ;# ">
"112
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 112: __asm("PMSTATH equ 0F41h");
[; <" PMSTATH equ 0F41h ;# ">
"163
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 163: __asm("PMEN equ 0F42h");
[; <" PMEN equ 0F42h ;# ">
"170
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 170: __asm("PMEL equ 0F42h");
[; <" PMEL equ 0F42h ;# ">
"240
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 240: __asm("PMEH equ 0F43h");
[; <" PMEH equ 0F43h ;# ">
"310
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 310: __asm("PMDIN2 equ 0F44h");
[; <" PMDIN2 equ 0F44h ;# ">
"317
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 317: __asm("PMDIN2L equ 0F44h");
[; <" PMDIN2L equ 0F44h ;# ">
"324
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 324: __asm("PMDIN2H equ 0F45h");
[; <" PMDIN2H equ 0F45h ;# ">
"331
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 331: __asm("PMDOUT2 equ 0F46h");
[; <" PMDOUT2 equ 0F46h ;# ">
"338
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 338: __asm("PMDOUT2L equ 0F46h");
[; <" PMDOUT2L equ 0F46h ;# ">
"345
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 345: __asm("PMDOUT2H equ 0F47h");
[; <" PMDOUT2H equ 0F47h ;# ">
"352
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 352: __asm("PMMODE equ 0F48h");
[; <" PMMODE equ 0F48h ;# ">
"359
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 359: __asm("PMMODEL equ 0F48h");
[; <" PMMODEL equ 0F48h ;# ">
"441
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 441: __asm("PMMODEH equ 0F49h");
[; <" PMMODEH equ 0F49h ;# ">
"524
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 524: __asm("PMCON equ 0F4Ah");
[; <" PMCON equ 0F4Ah ;# ">
"531
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 531: __asm("PMCONL equ 0F4Ah");
[; <" PMCONL equ 0F4Ah ;# ">
"593
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 593: __asm("PMCONH equ 0F4Bh");
[; <" PMCONH equ 0F4Bh ;# ">
"650
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 650: __asm("UEP0 equ 0F4Ch");
[; <" UEP0 equ 0F4Ch ;# ">
"758
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 758: __asm("UEP1 equ 0F4Dh");
[; <" UEP1 equ 0F4Dh ;# ">
"866
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 866: __asm("UEP2 equ 0F4Eh");
[; <" UEP2 equ 0F4Eh ;# ">
"974
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 974: __asm("UEP3 equ 0F4Fh");
[; <" UEP3 equ 0F4Fh ;# ">
"1082
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1082: __asm("UEP4 equ 0F50h");
[; <" UEP4 equ 0F50h ;# ">
"1190
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1190: __asm("UEP5 equ 0F51h");
[; <" UEP5 equ 0F51h ;# ">
"1298
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1298: __asm("UEP6 equ 0F52h");
[; <" UEP6 equ 0F52h ;# ">
"1406
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1406: __asm("UEP7 equ 0F53h");
[; <" UEP7 equ 0F53h ;# ">
"1514
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1514: __asm("UEP8 equ 0F54h");
[; <" UEP8 equ 0F54h ;# ">
"1590
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1590: __asm("UEP9 equ 0F55h");
[; <" UEP9 equ 0F55h ;# ">
"1666
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1666: __asm("UEP10 equ 0F56h");
[; <" UEP10 equ 0F56h ;# ">
"1742
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1742: __asm("UEP11 equ 0F57h");
[; <" UEP11 equ 0F57h ;# ">
"1818
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1818: __asm("UEP12 equ 0F58h");
[; <" UEP12 equ 0F58h ;# ">
"1894
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1894: __asm("UEP13 equ 0F59h");
[; <" UEP13 equ 0F59h ;# ">
"1970
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 1970: __asm("UEP14 equ 0F5Ah");
[; <" UEP14 equ 0F5Ah ;# ">
"2046
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2046: __asm("UEP15 equ 0F5Bh");
[; <" UEP15 equ 0F5Bh ;# ">
"2122
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2122: __asm("UIE equ 0F5Ch");
[; <" UIE equ 0F5Ch ;# ">
"2178
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2178: __asm("UEIE equ 0F5Dh");
[; <" UEIE equ 0F5Dh ;# ">
"2229
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2229: __asm("UADDR equ 0F5Eh");
[; <" UADDR equ 0F5Eh ;# ">
"2293
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2293: __asm("UCFG equ 0F5Fh");
[; <" UCFG equ 0F5Fh ;# ">
"2372
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2372: __asm("UFRM equ 0F60h");
[; <" UFRM equ 0F60h ;# ">
"2379
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2379: __asm("UFRML equ 0F60h");
[; <" UFRML equ 0F60h ;# ">
"2457
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2457: __asm("UFRMH equ 0F61h");
[; <" UFRMH equ 0F61h ;# ">
"2497
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2497: __asm("UIR equ 0F62h");
[; <" UIR equ 0F62h ;# ">
"2553
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2553: __asm("UEIR equ 0F63h");
[; <" UEIR equ 0F63h ;# ">
"2604
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2604: __asm("USTAT equ 0F64h");
[; <" USTAT equ 0F64h ;# ">
"2664
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2664: __asm("UCON equ 0F65h");
[; <" UCON equ 0F65h ;# ">
"2715
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2715: __asm("PMDIN1 equ 0F66h");
[; <" PMDIN1 equ 0F66h ;# ">
"2722
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2722: __asm("PMDIN1L equ 0F66h");
[; <" PMDIN1L equ 0F66h ;# ">
"2729
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2729: __asm("PMDIN1H equ 0F67h");
[; <" PMDIN1H equ 0F67h ;# ">
"2736
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2736: __asm("PMADDR equ 0F68h");
[; <" PMADDR equ 0F68h ;# ">
"2741
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2741: __asm("PMDOUT1 equ 0F68h");
[; <" PMDOUT1 equ 0F68h ;# ">
"2748
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2748: __asm("PMADDRL equ 0F68h");
[; <" PMADDRL equ 0F68h ;# ">
"2755
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2755: __asm("PMDOUT1L equ 0F68h");
[; <" PMDOUT1L equ 0F68h ;# ">
"2762
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2762: __asm("PMADDRH equ 0F69h");
[; <" PMADDRH equ 0F69h ;# ">
"2794
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2794: __asm("PMDOUT1H equ 0F69h");
[; <" PMDOUT1H equ 0F69h ;# ">
"2801
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2801: __asm("CMSTAT equ 0F6Ah");
[; <" CMSTAT equ 0F6Ah ;# ">
"2806
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2806: __asm("CMSTATUS equ 0F6Ah");
[; <" CMSTATUS equ 0F6Ah ;# ">
"2851
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 2851: __asm("SSP2CON2 equ 0F6Bh");
[; <" SSP2CON2 equ 0F6Bh ;# ">
"3029
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3029: __asm("SSP2CON1 equ 0F6Ch");
[; <" SSP2CON1 equ 0F6Ch ;# ">
"3149
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3149: __asm("SSP2STAT equ 0F6Dh");
[; <" SSP2STAT equ 0F6Dh ;# ">
"3576
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3576: __asm("SSP2ADD equ 0F6Eh");
[; <" SSP2ADD equ 0F6Eh ;# ">
"3638
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3638: __asm("SSP2MSK equ 0F6Eh");
[; <" SSP2MSK equ 0F6Eh ;# ">
"3700
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3700: __asm("SSP2BUF equ 0F6Fh");
[; <" SSP2BUF equ 0F6Fh ;# ">
"3707
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3707: __asm("CCP5CON equ 0F70h");
[; <" CCP5CON equ 0F70h ;# ">
"3801
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3801: __asm("CCPR5 equ 0F71h");
[; <" CCPR5 equ 0F71h ;# ">
"3808
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3808: __asm("CCPR5L equ 0F71h");
[; <" CCPR5L equ 0F71h ;# ">
"3815
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3815: __asm("CCPR5H equ 0F72h");
[; <" CCPR5H equ 0F72h ;# ">
"3822
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3822: __asm("CCP4CON equ 0F73h");
[; <" CCP4CON equ 0F73h ;# ">
"3916
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3916: __asm("CCPR4 equ 0F74h");
[; <" CCPR4 equ 0F74h ;# ">
"3923
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3923: __asm("CCPR4L equ 0F74h");
[; <" CCPR4L equ 0F74h ;# ">
"3930
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3930: __asm("CCPR4H equ 0F75h");
[; <" CCPR4H equ 0F75h ;# ">
"3937
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 3937: __asm("T4CON equ 0F76h");
[; <" T4CON equ 0F76h ;# ">
"4008
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4008: __asm("PR4 equ 0F77h");
[; <" PR4 equ 0F77h ;# ">
"4015
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4015: __asm("CVRCON equ 0F77h");
[; <" CVRCON equ 0F77h ;# ">
"4094
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4094: __asm("TMR4 equ 0F78h");
[; <" TMR4 equ 0F78h ;# ">
"4101
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4101: __asm("T3CON equ 0F79h");
[; <" T3CON equ 0F79h ;# ">
"4222
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4222: __asm("TMR3 equ 0F7Ah");
[; <" TMR3 equ 0F7Ah ;# ">
"4229
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4229: __asm("TMR3L equ 0F7Ah");
[; <" TMR3L equ 0F7Ah ;# ">
"4236
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4236: __asm("TMR3H equ 0F7Bh");
[; <" TMR3H equ 0F7Bh ;# ">
"4243
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4243: __asm("BAUDCON2 equ 0F7Ch");
[; <" BAUDCON2 equ 0F7Ch ;# ">
"4387
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4387: __asm("SPBRGH2 equ 0F7Dh");
[; <" SPBRGH2 equ 0F7Dh ;# ">
"4394
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4394: __asm("BAUDCON1 equ 0F7Eh");
[; <" BAUDCON1 equ 0F7Eh ;# ">
"4399
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4399: __asm("BAUDCON equ 0F7Eh");
[; <" BAUDCON equ 0F7Eh ;# ">
"4403
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4403: __asm("BAUDCTL equ 0F7Eh");
[; <" BAUDCTL equ 0F7Eh ;# ">
"4901
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4901: __asm("SPBRGH1 equ 0F7Fh");
[; <" SPBRGH1 equ 0F7Fh ;# ">
"4906
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4906: __asm("SPBRGH equ 0F7Fh");
[; <" SPBRGH equ 0F7Fh ;# ">
"4913
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 4913: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"5069
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5069: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"5246
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5246: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"5422
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5422: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"5576
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5576: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"5813
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5813: __asm("PORTF equ 0F85h");
[; <" PORTF equ 0F85h ;# ">
"5947
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 5947: __asm("PORTG equ 0F86h");
[; <" PORTG equ 0F86h ;# ">
"6105
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6105: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"6217
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6217: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"6329
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6329: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"6441
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6441: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"6553
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6553: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"6665
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6665: __asm("LATF equ 0F8Eh");
[; <" LATF equ 0F8Eh ;# ">
"6755
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6755: __asm("LATG equ 0F8Fh");
[; <" LATG equ 0F8Fh ;# ">
"6831
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6831: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"6836
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 6836: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"7053
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7053: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"7058
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7058: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"7275
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7275: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"7280
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7280: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"7497
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7497: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"7502
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7502: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"7719
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7719: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"7724
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7724: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"7941
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7941: __asm("TRISF equ 0F97h");
[; <" TRISF equ 0F97h ;# ">
"7946
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 7946: __asm("DDRF equ 0F97h");
[; <" DDRF equ 0F97h ;# ">
"8119
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8119: __asm("TRISG equ 0F98h");
[; <" TRISG equ 0F98h ;# ">
"8124
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8124: __asm("DDRG equ 0F98h");
[; <" DDRG equ 0F98h ;# ">
"8269
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8269: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"8331
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8331: __asm("RCSTA2 equ 0F9Ch");
[; <" RCSTA2 equ 0F9Ch ;# ">
"8509
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8509: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"8601
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8601: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"8693
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8693: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"8785
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8785: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"8865
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8865: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"8945
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 8945: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"9025
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9025: __asm("PIE3 equ 0FA3h");
[; <" PIE3 equ 0FA3h ;# ">
"9135
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9135: __asm("PIR3 equ 0FA4h");
[; <" PIR3 equ 0FA4h ;# ">
"9213
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9213: __asm("IPR3 equ 0FA5h");
[; <" IPR3 equ 0FA5h ;# ">
"9291
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9291: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"9336
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9336: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"9343
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9343: __asm("TXSTA2 equ 0FA8h");
[; <" TXSTA2 equ 0FA8h ;# ">
"9503
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9503: __asm("TXREG2 equ 0FA9h");
[; <" TXREG2 equ 0FA9h ;# ">
"9510
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9510: __asm("RCREG2 equ 0FAAh");
[; <" RCREG2 equ 0FAAh ;# ">
"9517
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9517: __asm("SPBRG2 equ 0FABh");
[; <" SPBRG2 equ 0FABh ;# ">
"9524
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9524: __asm("RCSTA1 equ 0FACh");
[; <" RCSTA1 equ 0FACh ;# ">
"9529
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9529: __asm("RCSTA equ 0FACh");
[; <" RCSTA equ 0FACh ;# ">
"9848
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9848: __asm("TXSTA1 equ 0FADh");
[; <" TXSTA1 equ 0FADh ;# ">
"9853
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 9853: __asm("TXSTA equ 0FADh");
[; <" TXSTA equ 0FADh ;# ">
"10136
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10136: __asm("TXREG1 equ 0FAEh");
[; <" TXREG1 equ 0FAEh ;# ">
"10141
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10141: __asm("TXREG equ 0FAEh");
[; <" TXREG equ 0FAEh ;# ">
"10148
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10148: __asm("RCREG1 equ 0FAFh");
[; <" RCREG1 equ 0FAFh ;# ">
"10153
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10153: __asm("RCREG equ 0FAFh");
[; <" RCREG equ 0FAFh ;# ">
"10160
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10160: __asm("SPBRG1 equ 0FB0h");
[; <" SPBRG1 equ 0FB0h ;# ">
"10165
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10165: __asm("SPBRG equ 0FB0h");
[; <" SPBRG equ 0FB0h ;# ">
"10172
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10172: __asm("ECCP3CON equ 0FB1h");
[; <" ECCP3CON equ 0FB1h ;# ">
"10177
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10177: __asm("CCP3CON equ 0FB1h");
[; <" CCP3CON equ 0FB1h ;# ">
"10364
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10364: __asm("CCPR3 equ 0FB2h");
[; <" CCPR3 equ 0FB2h ;# ">
"10371
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10371: __asm("CCPR3L equ 0FB2h");
[; <" CCPR3L equ 0FB2h ;# ">
"10378
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10378: __asm("CCPR3H equ 0FB3h");
[; <" CCPR3H equ 0FB3h ;# ">
"10385
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10385: __asm("ECCP3DEL equ 0FB4h");
[; <" ECCP3DEL equ 0FB4h ;# ">
"10505
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10505: __asm("ECCP3AS equ 0FB5h");
[; <" ECCP3AS equ 0FB5h ;# ">
"10637
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10637: __asm("ECCP2CON equ 0FB6h");
[; <" ECCP2CON equ 0FB6h ;# ">
"10642
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10642: __asm("CCP2CON equ 0FB6h");
[; <" CCP2CON equ 0FB6h ;# ">
"10829
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10829: __asm("CCPR2 equ 0FB7h");
[; <" CCPR2 equ 0FB7h ;# ">
"10836
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10836: __asm("CCPR2L equ 0FB7h");
[; <" CCPR2L equ 0FB7h ;# ">
"10843
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10843: __asm("CCPR2H equ 0FB8h");
[; <" CCPR2H equ 0FB8h ;# ">
"10850
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10850: __asm("ECCP2DEL equ 0FB9h");
[; <" ECCP2DEL equ 0FB9h ;# ">
"10970
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 10970: __asm("ECCP2AS equ 0FBAh");
[; <" ECCP2AS equ 0FBAh ;# ">
"11102
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11102: __asm("ECCP1CON equ 0FBBh");
[; <" ECCP1CON equ 0FBBh ;# ">
"11107
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11107: __asm("CCP1CON equ 0FBBh");
[; <" CCP1CON equ 0FBBh ;# ">
"11294
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11294: __asm("CCPR1 equ 0FBCh");
[; <" CCPR1 equ 0FBCh ;# ">
"11301
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11301: __asm("CCPR1L equ 0FBCh");
[; <" CCPR1L equ 0FBCh ;# ">
"11308
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11308: __asm("CCPR1H equ 0FBDh");
[; <" CCPR1H equ 0FBDh ;# ">
"11315
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11315: __asm("ECCP1DEL equ 0FBEh");
[; <" ECCP1DEL equ 0FBEh ;# ">
"11435
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11435: __asm("ECCP1AS equ 0FBFh");
[; <" ECCP1AS equ 0FBFh ;# ">
"11567
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11567: __asm("WDTCON equ 0FC0h");
[; <" WDTCON equ 0FC0h ;# ">
"11622
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11622: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"11719
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11719: __asm("ANCON0 equ 0FC1h");
[; <" ANCON0 equ 0FC1h ;# ">
"11793
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11793: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"11928
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 11928: __asm("ANCON1 equ 0FC2h");
[; <" ANCON1 equ 0FC2h ;# ">
"12001
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12001: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"12008
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12008: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"12015
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12015: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"12022
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12022: __asm("SSP1CON2 equ 0FC5h");
[; <" SSP1CON2 equ 0FC5h ;# ">
"12027
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12027: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"12376
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12376: __asm("SSP1CON1 equ 0FC6h");
[; <" SSP1CON1 equ 0FC6h ;# ">
"12381
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12381: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"12614
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12614: __asm("SSP1STAT equ 0FC7h");
[; <" SSP1STAT equ 0FC7h ;# ">
"12619
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 12619: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"13212
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13212: __asm("SSP1ADD equ 0FC8h");
[; <" SSP1ADD equ 0FC8h ;# ">
"13217
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13217: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"13434
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13434: __asm("SSP1MSK equ 0FC8h");
[; <" SSP1MSK equ 0FC8h ;# ">
"13496
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13496: __asm("SSP1BUF equ 0FC9h");
[; <" SSP1BUF equ 0FC9h ;# ">
"13501
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13501: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"13508
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13508: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"13579
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13579: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"13584
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13584: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"13689
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13689: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"13696
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13696: __asm("PADCFG1 equ 0FCCh");
[; <" PADCFG1 equ 0FCCh ;# ">
"13724
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13724: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"13836
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13836: __asm("ODCON3 equ 0FCDh");
[; <" ODCON3 equ 0FCDh ;# ">
"13862
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13862: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"13869
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13869: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"13876
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13876: __asm("ODCON2 equ 0FCEh");
[; <" ODCON2 equ 0FCEh ;# ">
"13916
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13916: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"13923
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13923: __asm("ODCON1 equ 0FCFh");
[; <" ODCON1 equ 0FCFh ;# ">
"13967
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 13967: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"14115
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14115: __asm("CM2CON1 equ 0FD1h");
[; <" CM2CON1 equ 0FD1h ;# ">
"14120
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14120: __asm("CM2CON equ 0FD1h");
[; <" CM2CON equ 0FD1h ;# ">
"14429
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14429: __asm("CM1CON1 equ 0FD2h");
[; <" CM1CON1 equ 0FD2h ;# ">
"14434
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14434: __asm("CM1CON equ 0FD2h");
[; <" CM1CON equ 0FD2h ;# ">
"14751
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14751: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"14823
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14823: __asm("REFOCON equ 0FD3h");
[; <" REFOCON equ 0FD3h ;# ">
"14888
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14888: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"14964
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14964: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"14971
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14971: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"14978
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14978: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"14985
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 14985: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"15056
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15056: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"15063
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15063: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"15070
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15070: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"15077
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15077: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"15084
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15084: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"15091
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15091: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"15098
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15098: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"15105
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15105: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"15112
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15112: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"15119
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15119: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"15126
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15126: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"15133
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15133: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"15140
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15140: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"15147
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15147: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"15154
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15154: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"15161
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15161: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"15168
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15168: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"15175
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15175: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"15182
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15182: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"15189
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15189: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"15196
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15196: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"15203
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15203: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"15210
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15210: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"15217
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15217: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"15224
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15224: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"15231
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15231: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"15238
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15238: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"15350
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15350: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"15443
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15443: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"15560
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15560: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"15567
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15567: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"15574
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15574: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"15581
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15581: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"15590
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15590: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"15597
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15597: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"15604
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15604: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"15611
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15611: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"15620
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15620: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"15627
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15627: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"15634
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15634: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"15641
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15641: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"15648
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15648: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"15655
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15655: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"15761
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15761: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"15768
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15768: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"15775
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15775: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"15782
[; ;C:\Program Files\Microchip\xc8\v2.05\pic\include\pic18f65j50.h: 15782: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"16 ./main.h
[p x WDTEN = OFF ]
"17
[p x PLLDIV = 1 ]
"18
[p x STVREN = ON ]
"19
[p x XINST = OFF ]
"20
[p x DEBUG = OFF ]
"23
[p x CPUDIV = OSC1 ]
"24
[p x CP0 = OFF ]
"27
[p x FOSC = INTOSCPLLO ]
"28
[p x FCMEN = OFF ]
"29
[p x IESO = OFF ]
"32
[p x WDTPS = 2048 ]
"37
[p x CCP2MX = DEFAULT ]
"38
[p x MSSPMSK = MSK5 ]
"43 main.c
[; ;main.c: 43: unsigned char Serial_Flag;
[v _Serial_Flag `uc ~T0 @X0 1 e ]
"44
[; ;main.c: 44: unsigned char Serial_GData;
[v _Serial_GData `uc ~T0 @X0 1 e ]
"45
[; ;main.c: 45: unsigned char Serial_Buffer[16];
[v _Serial_Buffer `uc ~T0 @X0 -> 16 `i e ]
"46
[; ;main.c: 46: unsigned char Serial_Temp_Buffer[16];
[v _Serial_Temp_Buffer `uc ~T0 @X0 -> 16 `i e ]
"47
[; ;main.c: 47: unsigned char Serial_Buffer_Out[16];
[v _Serial_Buffer_Out `uc ~T0 @X0 -> 16 `i e ]
"48
[; ;main.c: 48: unsigned char Stop = 0;
[v _Stop `uc ~T0 @X0 1 e ]
[i _Stop
-> -> 0 `i `uc
]
"49
[; ;main.c: 49: unsigned char motor_status;
[v _motor_status `uc ~T0 @X0 1 e ]
"50
[; ;main.c: 50: unsigned char Busy = 0;
[v _Busy `uc ~T0 @X0 1 e ]
[i _Busy
-> -> 0 `i `uc
]
"51
[; ;main.c: 51: unsigned char vibration_mode;
[v _vibration_mode `uc ~T0 @X0 1 e ]
"52
[; ;main.c: 52: unsigned char data;
[v _data `uc ~T0 @X0 1 e ]
"54
[; ;main.c: 54: unsigned int Serial_Count;
[v _Serial_Count `ui ~T0 @X0 1 e ]
"55
[; ;main.c: 55: unsigned int EAdd_High, EAdd_Low, ETemp;
[v _EAdd_High `ui ~T0 @X0 1 e ]
[v _EAdd_Low `ui ~T0 @X0 1 e ]
[v _ETemp `ui ~T0 @X0 1 e ]
"56
[; ;main.c: 56: unsigned int Motor_Speed;
[v _Motor_Speed `ui ~T0 @X0 1 e ]
"57
[; ;main.c: 57: unsigned int Vmotor_Time = 2000;
[v _Vmotor_Time `ui ~T0 @X0 1 e ]
[i _Vmotor_Time
-> -> 2000 `i `ui
]
"58
[; ;main.c: 58: unsigned int Motor_Stop_Delay_Time = 0;
[v _Motor_Stop_Delay_Time `ui ~T0 @X0 1 e ]
[i _Motor_Stop_Delay_Time
-> -> 0 `i `ui
]
"59
[; ;main.c: 59: unsigned int Device_ID;
[v _Device_ID `ui ~T0 @X0 1 e ]
"60
[; ;main.c: 60: unsigned int Motor_Pause_Time = 0;
[v _Motor_Pause_Time `ui ~T0 @X0 1 e ]
[i _Motor_Pause_Time
-> -> 0 `i `ui
]
"61
[; ;main.c: 61: unsigned int NUM;
[v _NUM `ui ~T0 @X0 1 e ]
"62
[; ;main.c: 62: unsigned int NUM_REC;
[v _NUM_REC `ui ~T0 @X0 1 e ]
"63
[; ;main.c: 63: unsigned int i=0;
[v _i `ui ~T0 @X0 1 e ]
[i _i
-> -> 0 `i `ui
]
"64
[; ;main.c: 64: unsigned int IR_SENSORF = 0;
[v _IR_SENSORF `ui ~T0 @X0 1 e ]
[i _IR_SENSORF
-> -> 0 `i `ui
]
"66
[; ;main.c: 66: volatile char OpMode = MANUAL_MODE;
[v _OpMode `Vuc ~T0 @X0 1 e ]
[i _OpMode
-> . `E5395 0 `uc
]
"67
[; ;main.c: 67: volatile long errorcounter = 30;
[v _errorcounter `Vl ~T0 @X0 1 e ]
[i _errorcounter
-> -> 30 `i `l
]
"69
[; ;main.c: 69: volatile unsigned char pause_Time;
[v _pause_Time `Vuc ~T0 @X0 1 e ]
"70
[; ;main.c: 70: volatile unsigned char vib_Time;
[v _vib_Time `Vuc ~T0 @X0 1 e ]
"71
[; ;main.c: 71: volatile unsigned char delay_motor_stop_time;
[v _delay_motor_stop_time `Vuc ~T0 @X0 1 e ]
"72
[; ;main.c: 72: volatile unsigned char PWM_Duty_Cycle;
[v _PWM_Duty_Cycle `Vuc ~T0 @X0 1 e ]
"73
[; ;main.c: 73: volatile char TMR1IF_triggered = 0;
[v _TMR1IF_triggered `Vuc ~T0 @X0 1 e ]
[i _TMR1IF_triggered
-> -> 0 `i `uc
]
"74
[; ;main.c: 74: unsigned char PWM_reg = 0x3F;
[v _PWM_reg `uc ~T0 @X0 1 e ]
[i _PWM_reg
-> -> 63 `i `uc
]
[v $root$_main `(v ~T0 @X0 0 e ]
"119
[; ;main.c: 119: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"120
[; ;main.c: 120: {
{
[e :U _main ]
[f ]
"121
[; ;main.c: 121:     GIE = 0;
[e = _GIE -> -> 0 `i `b ]
"122
[; ;main.c: 122:     init();
[e ( _init ..  ]
"123
[; ;main.c: 123:     InitSTLED316(0x77);
[e ( _InitSTLED316 (1 -> -> 119 `i `uc ]
"124
[; ;main.c: 124:     initMotor();
[e ( _initMotor ..  ]
"125
[; ;main.c: 125:     i2c_Init();
[e ( _i2c_Init ..  ]
"126
[; ;main.c: 126:     initUSART();
[e ( _initUSART ..  ]
"127
[; ;main.c: 127:     InitTimer1();
[e ( _InitTimer1 ..  ]
"129
[; ;main.c: 129:     LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"130
[; ;main.c: 130:     LATAbits.LATA2 = 0;
[e = . . _LATAbits 0 2 -> -> 0 `i `uc ]
"131
[; ;main.c: 131:     errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"135
[; ;main.c: 135:    RCONbits.IPEN = 1;
[e = . . _RCONbits 6 7 -> -> 1 `i `uc ]
"138
[; ;main.c: 138:    IPR1bits.RCIP = 1;
[e = . . _IPR1bits 1 3 -> -> 1 `i `uc ]
"141
[; ;main.c: 141:    INTCONbits.GIEH = 1;
[e = . . _INTCONbits 2 2 -> -> 1 `i `uc ]
"142
[; ;main.c: 142:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"147
[; ;main.c: 147:     WDTCONbits.SWDTEN = 0;
[e = . . _WDTCONbits 0 0 -> -> 0 `i `uc ]
"149
[; ;main.c: 149:     LATDbits.LATD0 = 1;
[e = . . _LATDbits 0 0 -> -> 1 `i `uc ]
"150
[; ;main.c: 150:     LATDbits.LATD1 = 0;
[e = . . _LATDbits 0 1 -> -> 0 `i `uc ]
"152
[; ;main.c: 152:     WriteSTLED316SData(32, 0xFF);
[e ( _WriteSTLED316SData (2 , -> 32 `i -> -> 255 `i `uc ]
"153
[; ;main.c: 153:     _delay((unsigned long)((100)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"162
[; ;main.c: 162:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"163
[; ;main.c: 163:     ETemp = read_i2c(0x0010);
[e = _ETemp -> ( _read_i2c (1 -> -> 16 `i `l `ui ]
"164
[; ;main.c: 164:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"166
[; ;main.c: 166:     vibration_mode = ETemp & 0x00FF;
[e = _vibration_mode -> & _ETemp -> -> 255 `i `ui `uc ]
"167
[; ;main.c: 167:     if(vibration_mode>1)
[e $ ! > -> _vibration_mode `i -> 1 `i 629  ]
"168
[; ;main.c: 168:     {
{
"169
[; ;main.c: 169:         vibration_mode = 1;
[e = _vibration_mode -> -> 1 `i `uc ]
"171
[; ;main.c: 171:         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"172
[; ;main.c: 172:         write_i2c(0x0010, vibration_mode);
[e ( _write_i2c (2 , -> -> 16 `i `l -> _vibration_mode `i ]
"173
[; ;main.c: 173:         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"174
[; ;main.c: 174:     }
}
[e :U 629 ]
"176
[; ;main.c: 176:     NUM = 1;
[e = _NUM -> -> 1 `i `ui ]
"177
[; ;main.c: 177:     WriteSTLED316SData(NUM, vibration_mode);
[e ( _WriteSTLED316SData (2 , -> _NUM `i -> _vibration_mode `uc ]
"178
[; ;main.c: 178:     NUM_REC = 1;
[e = _NUM_REC -> -> 1 `i `ui ]
"183
[; ;main.c: 183:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"184
[; ;main.c: 184:     ETemp = read_i2c(0x0020);
[e = _ETemp -> ( _read_i2c (1 -> -> 32 `i `l `ui ]
"185
[; ;main.c: 185:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"187
[; ;main.c: 187:     Device_ID = ETemp & 0x00FF;
[e = _Device_ID & _ETemp -> -> 255 `i `ui ]
"188
[; ;main.c: 188:     if(Device_ID<0x31 || Device_ID>0x3A)
[e $ ! || < _Device_ID -> -> 49 `i `ui > _Device_ID -> -> 58 `i `ui 630  ]
"189
[; ;main.c: 189:     {
{
"190
[; ;main.c: 190:         Device_ID=0x31;
[e = _Device_ID -> -> 49 `i `ui ]
"192
[; ;main.c: 192:         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"193
[; ;main.c: 193:         write_i2c(0x0020, Device_ID);
[e ( _write_i2c (2 , -> -> 32 `i `l -> _Device_ID `i ]
"194
[; ;main.c: 194:         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"195
[; ;main.c: 195:     }
}
[e :U 630 ]
"200
[; ;main.c: 200:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"201
[; ;main.c: 201:     ETemp = read_i2c(0x0060);
[e = _ETemp -> ( _read_i2c (1 -> -> 96 `i `l `ui ]
"202
[; ;main.c: 202:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"204
[; ;main.c: 204:     pause_Time = ETemp & 0x00FF;
[e = _pause_Time -> & _ETemp -> -> 255 `i `ui `uc ]
"205
[; ;main.c: 205:     if(pause_Time<0x30 || pause_Time>0x35)
[e $ ! || < -> _pause_Time `i -> 48 `i > -> _pause_Time `i -> 53 `i 631  ]
"206
[; ;main.c: 206:     {
{
"207
[; ;main.c: 207:         pause_Time = 0x30;
[e = _pause_Time -> -> 48 `i `uc ]
"208
[; ;main.c: 208:         Motor_Pause_Time=0;
[e = _Motor_Pause_Time -> -> 0 `i `ui ]
"210
[; ;main.c: 210:         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"211
[; ;main.c: 211:         write_i2c(0x0060, pause_Time);
[e ( _write_i2c (2 , -> -> 96 `i `l -> _pause_Time `i ]
"212
[; ;main.c: 212:         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"213
[; ;main.c: 213:     }
}
[e $U 632  ]
"214
[; ;main.c: 214:     else
[e :U 631 ]
"215
[; ;main.c: 215:     {
{
"216
[; ;main.c: 216:         switch(pause_Time)
[e $U 634  ]
"217
[; ;main.c: 217:         {
{
"218
[; ;main.c: 218:             case 0x30:
[e :U 635 ]
"219
[; ;main.c: 219:             default:
[e :U 636 ]
"220
[; ;main.c: 220:                 Motor_Pause_Time = 0;
[e = _Motor_Pause_Time -> -> 0 `i `ui ]
"221
[; ;main.c: 221:                 pause_Time = 0x30;
[e = _pause_Time -> -> 48 `i `uc ]
"222
[; ;main.c: 222:                 break;
[e $U 633  ]
"224
[; ;main.c: 224:             case 0x31:
[e :U 637 ]
"225
[; ;main.c: 225:                 Motor_Pause_Time = 1000;
[e = _Motor_Pause_Time -> -> 1000 `i `ui ]
"226
[; ;main.c: 226:                 break;
[e $U 633  ]
"228
[; ;main.c: 228:             case 0x32:
[e :U 638 ]
"229
[; ;main.c: 229:                 Motor_Pause_Time = 2000;
[e = _Motor_Pause_Time -> -> 2000 `i `ui ]
"230
[; ;main.c: 230:                 break;
[e $U 633  ]
"232
[; ;main.c: 232:             case 0x33:
[e :U 639 ]
"233
[; ;main.c: 233:                  Motor_Pause_Time = 3000;
[e = _Motor_Pause_Time -> -> 3000 `i `ui ]
"234
[; ;main.c: 234:                 break;
[e $U 633  ]
"236
[; ;main.c: 236:             case 0x34:
[e :U 640 ]
"237
[; ;main.c: 237:                 Motor_Pause_Time = 4000;
[e = _Motor_Pause_Time -> -> 4000 `i `ui ]
"238
[; ;main.c: 238:                 break;
[e $U 633  ]
"240
[; ;main.c: 240:             case 0x35:
[e :U 641 ]
"241
[; ;main.c: 241:                 Motor_Pause_Time = 5000;
[e = _Motor_Pause_Time -> -> 5000 `i `ui ]
"242
[; ;main.c: 242:                 break;
[e $U 633  ]
"243
[; ;main.c: 243:         }
}
[e $U 633  ]
[e :U 634 ]
[e [\ -> _pause_Time `i , $ -> 48 `i 635
 , $ -> 49 `i 637
 , $ -> 50 `i 638
 , $ -> 51 `i 639
 , $ -> 52 `i 640
 , $ -> 53 `i 641
 636 ]
[e :U 633 ]
"244
[; ;main.c: 244:     }
}
[e :U 632 ]
"249
[; ;main.c: 249:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"250
[; ;main.c: 250:     ETemp = read_i2c(0x0050);
[e = _ETemp -> ( _read_i2c (1 -> -> 80 `i `l `ui ]
"251
[; ;main.c: 251:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"253
[; ;main.c: 253:     delay_motor_stop_time = ETemp & 0x00FF;
[e = _delay_motor_stop_time -> & _ETemp -> -> 255 `i `ui `uc ]
"254
[; ;main.c: 254:     if(delay_motor_stop_time>0x96)
[e $ ! > -> _delay_motor_stop_time `i -> 150 `i 642  ]
"255
[; ;main.c: 255:     {
{
"256
[; ;main.c: 256:         delay_motor_stop_time=0x00;
[e = _delay_motor_stop_time -> -> 0 `i `uc ]
"258
[; ;main.c: 258:         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"259
[; ;main.c: 259:         write_i2c(0x0050, delay_motor_stop_time);
[e ( _write_i2c (2 , -> -> 80 `i `l -> _delay_motor_stop_time `i ]
"260
[; ;main.c: 260:         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"262
[; ;main.c: 262:         Motor_Stop_Delay_Time=0;
[e = _Motor_Stop_Delay_Time -> -> 0 `i `ui ]
"263
[; ;main.c: 263:     }
}
[e $U 643  ]
"264
[; ;main.c: 264:     else
[e :U 642 ]
"265
[; ;main.c: 265:     {
{
"266
[; ;main.c: 266:         Motor_Stop_Delay_Time = delay_motor_stop_time;
[e = _Motor_Stop_Delay_Time -> _delay_motor_stop_time `ui ]
"267
[; ;main.c: 267:     }
}
[e :U 643 ]
"272
[; ;main.c: 272:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"273
[; ;main.c: 273:     ETemp = read_i2c(0x0040);
[e = _ETemp -> ( _read_i2c (1 -> -> 64 `i `l `ui ]
"274
[; ;main.c: 274:     INTCONbits.GIE=1
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"276
[; ;main.c: 276:     vib_Time = ETemp & 0x00FF;
[e = _vib_Time -> & _ETemp -> -> 255 `i `ui `uc ]
"277
[; ;main.c: 277:     if( (vib_Time!=0x81 && vib_Time!=0x82 && vib_Time!=0x83 && vib_Time!=0x84 && vib_Time!=0x85) )
[e $ ! && && && && != -> _vib_Time `i -> 129 `i != -> _vib_Time `i -> 130 `i != -> _vib_Time `i -> 131 `i != -> _vib_Time `i -> 132 `i != -> _vib_Time `i -> 133 `i 644  ]
"278
[; ;main.c: 278:     {
{
"279
[; ;main.c: 279:         Vmotor_Time = 2000;
[e = _Vmotor_Time -> -> 2000 `i `ui ]
"280
[; ;main.c: 280:         vib_Time = 0x82;
[e = _vib_Time -> -> 130 `i `uc ]
"282
[; ;main.c: 282:         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"283
[; ;main.c: 283:         write_i2c(0x0040,vib_Time);
[e ( _write_i2c (2 , -> -> 64 `i `l -> _vib_Time `i ]
"284
[; ;main.c: 284:         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"285
[; ;main.c: 285:     }
}
[e $U 645  ]
"286
[; ;main.c: 286:     else
[e :U 644 ]
"287
[; ;main.c: 287:     {
{
"288
[; ;main.c: 288:         switch(vib_Time)
[e $U 647  ]
"289
[; ;main.c: 289:         {
{
"290
[; ;main.c: 290:             case 0x81:
[e :U 648 ]
"291
[; ;main.c: 291:                 Vmotor_Time=1000;
[e = _Vmotor_Time -> -> 1000 `i `ui ]
"292
[; ;main.c: 292:                 break;
[e $U 646  ]
"293
[; ;main.c: 293:             case 0x82:
[e :U 649 ]
"294
[; ;main.c: 294:             default:
[e :U 650 ]
"295
[; ;main.c: 295:                 Vmotor_Time=2000;
[e = _Vmotor_Time -> -> 2000 `i `ui ]
"296
[; ;main.c: 296:                 vib_Time=0x82;
[e = _vib_Time -> -> 130 `i `uc ]
"297
[; ;main.c: 297:                 break;
[e $U 646  ]
"298
[; ;main.c: 298:             case 0x83:
[e :U 651 ]
"299
[; ;main.c: 299:                 Vmotor_Time=3000;
[e = _Vmotor_Time -> -> 3000 `i `ui ]
"300
[; ;main.c: 300:                 break;
[e $U 646  ]
"301
[; ;main.c: 301:             case 0x84:
[e :U 652 ]
"302
[; ;main.c: 302:                 Vmotor_Time=4000;
[e = _Vmotor_Time -> -> 4000 `i `ui ]
"303
[; ;main.c: 303:                 break;
[e $U 646  ]
"304
[; ;main.c: 304:             case 0x85:
[e :U 653 ]
"305
[; ;main.c: 305:                 Vmotor_Time=5000;
[e = _Vmotor_Time -> -> 5000 `i `ui ]
"306
[; ;main.c: 306:                 break;
[e $U 646  ]
"307
[; ;main.c: 307:         }
}
[e $U 646  ]
[e :U 647 ]
[e [\ -> _vib_Time `i , $ -> 129 `i 648
 , $ -> 130 `i 649
 , $ -> 131 `i 651
 , $ -> 132 `i 652
 , $ -> 133 `i 653
 650 ]
[e :U 646 ]
"308
[; ;main.c: 308:     }
}
[e :U 645 ]
"313
[; ;main.c: 313:     PWM_reg = 0x3F;
[e = _PWM_reg -> -> 63 `i `uc ]
"315
[; ;main.c: 315:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"316
[; ;main.c: 316:     ETemp = read_i2c(0x0030);
[e = _ETemp -> ( _read_i2c (1 -> -> 48 `i `l `ui ]
"317
[; ;main.c: 317:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"319
[; ;main.c: 319:     PWM_reg = ETemp & 0x00FF;
[e = _PWM_reg -> & _ETemp -> -> 255 `i `ui `uc ]
"321
[; ;main.c: 321:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
[e $ ! && && != -> _PWM_reg `i -> 0 `i != -> _PWM_reg `i -> 63 `i != -> _PWM_reg `i -> 127 `i 654  ]
"322
[; ;main.c: 322:     {
{
"323
[; ;main.c: 323:         PWM_reg=0x3F;
[e = _PWM_reg -> -> 63 `i `uc ]
"325
[; ;main.c: 325:         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"326
[; ;main.c: 326:         write_i2c(0x0030,PWM_reg);
[e ( _write_i2c (2 , -> -> 48 `i `l -> _PWM_reg `i ]
"327
[; ;main.c: 327:         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"328
[; ;main.c: 328:     }
}
[e :U 654 ]
"330
[; ;main.c: 330:     errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"331
[; ;main.c: 331:     MotorPosition_Init();
[e ( _MotorPosition_Init ..  ]
"336
[; ;main.c: 336:     while(1)
[e :U 656 ]
"337
[; ;main.c: 337:     {
{
"338
[; ;main.c: 338:         __asm(" clrwdt");
[; <"  clrwdt ;# ">
"339
[; ;main.c: 339:         errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"341
[; ;main.c: 341:         switch(OpMode)
[e $U 659  ]
"342
[; ;main.c: 342:         {
{
"346
[; ;main.c: 346:             case MANUAL_MODE:
[e :U 660 ]
"348
[; ;main.c: 348:                 NUM = NUM_REC;
[e = _NUM _NUM_REC ]
"350
[; ;main.c: 350:                 if (PORTBbits.RB4 == 0)
[e $ ! == -> . . _PORTBbits 0 4 `i -> 0 `i 661  ]
"351
[; ;main.c: 351:                 {
{
"352
[; ;main.c: 352:                     do
[e :U 664 ]
"353
[; ;main.c: 353:                     {
{
"354
[; ;main.c: 354:                         if(PORTBbits.RB2 == 0)
[e $ ! == -> . . _PORTBbits 0 2 `i -> 0 `i 665  ]
"355
[; ;main.c: 355:                         {
{
"356
[; ;main.c: 356:                             ToggleVIB_Mode();
[e ( _ToggleVIB_Mode ..  ]
"357
[; ;main.c: 357:                         }
}
[e :U 665 ]
"359
[; ;main.c: 359:                         WriteSTLED316SVibMode(vibration_mode);
[e ( _WriteSTLED316SVibMode (1 -> _vibration_mode `uc ]
"360
[; ;main.c: 360:                          _delay((unsigned long)((100)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"362
[; ;main.c: 362:                     }while (PORTBbits.RB4 == 0);
}
[e $ == -> . . _PORTBbits 0 4 `i -> 0 `i 664  ]
[e :U 663 ]
"363
[; ;main.c: 363:                 }
}
[e :U 661 ]
"365
[; ;main.c: 365:                 if ((PORTBbits.RB3 == 0) && NUM != 99)
[e $ ! && == -> . . _PORTBbits 0 3 `i -> 0 `i != _NUM -> -> 99 `i `ui 666  ]
"366
[; ;main.c: 366:                 {
{
"367
[; ;main.c: 367:                     NUM = NUM + 1;
[e = _NUM + _NUM -> -> 1 `i `ui ]
"368
[; ;main.c: 368:                     while (PORTBbits.RB3 == 0);
[e $U 667  ]
[e :U 668 ]
[e :U 667 ]
[e $ == -> . . _PORTBbits 0 3 `i -> 0 `i 668  ]
[e :U 669 ]
"369
[; ;main.c: 369:                 }
}
[e :U 666 ]
"371
[; ;main.c: 371:                 if (PORTAbits.RA5 == 0 && NUM != 0)
[e $ ! && == -> . . _PORTAbits 0 5 `i -> 0 `i != _NUM -> -> 0 `i `ui 670  ]
"372
[; ;main.c: 372:                 {
{
"373
[; ;main.c: 373:                     NUM = NUM - 1;
[e = _NUM - _NUM -> -> 1 `i `ui ]
"374
[; ;main.c: 374:                     while (PORTAbits.RA5 == 0);
[e $U 671  ]
[e :U 672 ]
[e :U 671 ]
[e $ == -> . . _PORTAbits 0 5 `i -> 0 `i 672  ]
[e :U 673 ]
"375
[; ;main.c: 375:                 }
}
[e :U 670 ]
"377
[; ;main.c: 377:                 if (PORTAbits.RA4 == 0 && NUM <= 89)
[e $ ! && == -> . . _PORTAbits 0 4 `i -> 0 `i <= _NUM -> -> 89 `i `ui 674  ]
"378
[; ;main.c: 378:                 {
{
"379
[; ;main.c: 379:                     NUM = NUM + 10;
[e = _NUM + _NUM -> -> 10 `i `ui ]
"380
[; ;main.c: 380:                     while (PORTAbits.RA4 == 0);
[e $U 675  ]
[e :U 676 ]
[e :U 675 ]
[e $ == -> . . _PORTAbits 0 4 `i -> 0 `i 676  ]
[e :U 677 ]
"381
[; ;main.c: 381:                 }
}
[e :U 674 ]
"383
[; ;main.c: 383:                 if (PORTAbits.RA3 == 0 && NUM >= 10)
[e $ ! && == -> . . _PORTAbits 0 3 `i -> 0 `i >= _NUM -> -> 10 `i `ui 678  ]
"384
[; ;main.c: 384:                 {
{
"385
[; ;main.c: 385:                     NUM = NUM - 10;
[e = _NUM - _NUM -> -> 10 `i `ui ]
"386
[; ;main.c: 386:                     while (PORTAbits.RA3 == 0);
[e $U 679  ]
[e :U 680 ]
[e :U 679 ]
[e $ == -> . . _PORTAbits 0 3 `i -> 0 `i 680  ]
[e :U 681 ]
"387
[; ;main.c: 387:                 }
}
[e :U 678 ]
"389
[; ;main.c: 389:                 NUM_REC = NUM;
[e = _NUM_REC _NUM ]
"390
[; ;main.c: 390:                 WriteSTLED316SData(NUM, vibration_mode);
[e ( _WriteSTLED316SData (2 , -> _NUM `i -> _vibration_mode `uc ]
"392
[; ;main.c: 392:                 if (PORTBbits.RB2 == 0)
[e $ ! == -> . . _PORTBbits 0 2 `i -> 0 `i 682  ]
"393
[; ;main.c: 393:                 {
{
"394
[; ;main.c: 394:                     Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"395
[; ;main.c: 395:                     errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"396
[; ;main.c: 396:                     Homing_Again_Manual();
[e ( _Homing_Again_Manual ..  ]
"397
[; ;main.c: 397:                     Stop = 0;
[e = _Stop -> -> 0 `i `uc ]
"398
[; ;main.c: 398:                     Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"400
[; ;main.c: 400:                     do
[e :U 685 ]
"401
[; ;main.c: 401:                     {
{
"402
[; ;main.c: 402:                         WriteSTLED316SErr('E');
[e ( _WriteSTLED316SErr (1 -> -> 69 `ui `uc ]
"403
[; ;main.c: 403:                     }
}
[e $ ! != -> . . _PORTBbits 0 2 `i -> 0 `i 685  ]
[e :U 684 ]
"405
[; ;main.c: 405:                 }
}
[e :U 682 ]
"410
[; ;main.c: 410:             case AUTO_MODE:
[e :U 686 ]
"412
[; ;main.c: 412:                 if(Serial_Flag==1)
[e $ ! == -> _Serial_Flag `i -> 1 `i 687  ]
"413
[; ;main.c: 413:                 {
{
"415
[; ;main.c: 415:                     switch(Serial_Buffer[1])
[e $U 689  ]
"416
[; ;main.c: 416:                     {
{
"417
[; ;main.c: 417:                         case 0x44:
[e :U 690 ]
"419
[; ;main.c: 419:                             if(Serial_Buffer[2] == 0xF1 && Busy == 0)
[e $ ! && == -> *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i -> 241 `i == -> _Busy `i -> 0 `i 691  ]
"420
[; ;main.c: 420:                             {
{
"421
[; ;main.c: 421:                                 Stop = 0;
[e = _Stop -> -> 0 `i `uc ]
"422
[; ;main.c: 422:                                 Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"423
[; ;main.c: 423:                                 NUM = NUM_REC;
[e = _NUM _NUM_REC ]
"425
[; ;main.c: 425:                                 errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"426
[; ;main.c: 426:                                 Homing_Again_Auto();
[e ( _Homing_Again_Auto ..  ]
"428
[; ;main.c: 428:                             }
}
[e $U 692  ]
"429
[; ;main.c: 429:                             else if(Serial_Buffer[2] == 0xF2 && Busy == 0)
[e :U 691 ]
[e $ ! && == -> *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i -> 242 `i == -> _Busy `i -> 0 `i 693  ]
"430
[; ;main.c: 430:                            {
{
"431
[; ;main.c: 431:                                 Stop = 0;
[e = _Stop -> -> 0 `i `uc ]
"432
[; ;main.c: 432:                                 Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"433
[; ;main.c: 433:                                 NUM = NUM_REC;
[e = _NUM _NUM_REC ]
"434
[; ;main.c: 434:                                 WriteSTLED316SData(NUM, vibration_mode);
[e ( _WriteSTLED316SData (2 , -> _NUM `i -> _vibration_mode `uc ]
"436
[; ;main.c: 436:                                 errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"437
[; ;main.c: 437:                                 Homing_Again_Manual();
[e ( _Homing_Again_Manual ..  ]
"440
[; ;main.c: 440:                                 if(Stop == 0)
[e $ ! == -> _Stop `i -> 0 `i 694  ]
"441
[; ;main.c: 441:                                 {
{
"442
[; ;main.c: 442:                                     Serial_Buffer_Out[0] = 0xA5;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 0 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 165 `i `uc ]
"443
[; ;main.c: 443:                                     Serial_Buffer_Out[1] = 0x44;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 1 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 68 `i `uc ]
"444
[; ;main.c: 444:                                     Serial_Buffer_Out[2] = 0xF9;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 249 `i `uc ]
"445
[; ;main.c: 445:                                     Serial_Buffer_Out[3] = 0X3D;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 3 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 61 `i `uc ]
"446
[; ;main.c: 446:                                     Serial_Buffer_Out[4] = 0x5A;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 4 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 90 `i `uc ]
"448
[; ;main.c: 448:                                     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"449
[; ;main.c: 449:                                     for (i=0; i<5;i++)
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 5 `i `ui 695  ]
[e $U 696  ]
[e :U 695 ]
"450
[; ;main.c: 450:                                     {
{
"451
[; ;main.c: 451:                                         Write1USART(Serial_Buffer_Out[i]);
[e ( _Write1USART (1 -> *U + &U _Serial_Buffer_Out * -> _i `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux `uc ]
"452
[; ;main.c: 452:                                     }
}
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 5 `i `ui 695  ]
[e :U 696 ]
}
"453
[; ;main.c: 453:                                     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"454
[; ;main.c: 454:                                 }
}
[e :U 694 ]
"456
[; ;main.c: 456:                             }
}
[e :U 693 ]
[e :U 692 ]
"457
[; ;main.c: 457:                                 flush();
[e ( _flush ..  ]
"458
[; ;main.c: 458:                                 flushOut();
[e ( _flushOut ..  ]
"459
[; ;main.c: 459:                                 Stop = 0;
[e = _Stop -> -> 0 `i `uc ]
"460
[; ;main.c: 460:                                 Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"461
[; ;main.c: 461:                                 break;
[e $U 688  ]
"464
[; ;main.c: 464:                         case 0x23:
[e :U 698 ]
"466
[; ;main.c: 466:                             if(Busy==0)
[e $ ! == -> _Busy `i -> 0 `i 699  ]
"467
[; ;main.c: 467:                             {
{
"468
[; ;main.c: 468:                                 Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"472
[; ;main.c: 472:                                     pause_Time = Serial_Buffer[2];
[e = _pause_Time *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux ]
"473
[; ;main.c: 473:                                     switch(pause_Time)
[e $U 701  ]
"474
[; ;main.c: 474:                                     {
{
"475
[; ;main.c: 475:                                         case 0x30:
[e :U 702 ]
"476
[; ;main.c: 476:                                         default:
[e :U 703 ]
"477
[; ;main.c: 477:                                             Motor_Pause_Time = 0;
[e = _Motor_Pause_Time -> -> 0 `i `ui ]
"478
[; ;main.c: 478:                                             pause_Time = 0x30;
[e = _pause_Time -> -> 48 `i `uc ]
"479
[; ;main.c: 479:                                             break;
[e $U 700  ]
"481
[; ;main.c: 481:                                         case 0x31:
[e :U 704 ]
"482
[; ;main.c: 482:                                             Motor_Pause_Time = 1000;
[e = _Motor_Pause_Time -> -> 1000 `i `ui ]
"483
[; ;main.c: 483:                                             break;
[e $U 700  ]
"485
[; ;main.c: 485:                                         case 0x32:
[e :U 705 ]
"486
[; ;main.c: 486:                                             Motor_Pause_Time = 2000;
[e = _Motor_Pause_Time -> -> 2000 `i `ui ]
"487
[; ;main.c: 487:                                             break;
[e $U 700  ]
"489
[; ;main.c: 489:                                         case 0x33:
[e :U 706 ]
"490
[; ;main.c: 490:                                             Motor_Pause_Time = 3000;
[e = _Motor_Pause_Time -> -> 3000 `i `ui ]
"491
[; ;main.c: 491:                                             break;
[e $U 700  ]
"493
[; ;main.c: 493:                                         case 0x34:
[e :U 707 ]
"494
[; ;main.c: 494:                                             Motor_Pause_Time = 4000;
[e = _Motor_Pause_Time -> -> 4000 `i `ui ]
"495
[; ;main.c: 495:                                             break;
[e $U 700  ]
"497
[; ;main.c: 497:                                         case 0x35:
[e :U 708 ]
"498
[; ;main.c: 498:                                             Motor_Pause_Time = 5000;
[e = _Motor_Pause_Time -> -> 5000 `i `ui ]
"499
[; ;main.c: 499:                                             break;
[e $U 700  ]
"500
[; ;main.c: 500:                                     }
}
[e $U 700  ]
[e :U 701 ]
[e [\ -> _pause_Time `i , $ -> 48 `i 702
 , $ -> 49 `i 704
 , $ -> 50 `i 705
 , $ -> 51 `i 706
 , $ -> 52 `i 707
 , $ -> 53 `i 708
 703 ]
[e :U 700 ]
"504
[; ;main.c: 504:                                 INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"505
[; ;main.c: 505:                                 write_i2c(0x0060, pause_Time);
[e ( _write_i2c (2 , -> -> 96 `i `l -> _pause_Time `i ]
"506
[; ;main.c: 506:                                 INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"508
[; ;main.c: 508:                                 flush();
[e ( _flush ..  ]
"509
[; ;main.c: 509:                                 Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"510
[; ;main.c: 510:                             }
}
[e :U 699 ]
"511
[; ;main.c: 511:                             break;
[e $U 688  ]
"514
[; ;main.c: 514:                         case 0x51:
[e :U 709 ]
"516
[; ;main.c: 516:                             if(Busy==0)
[e $ ! == -> _Busy `i -> 0 `i 710  ]
"517
[; ;main.c: 517:                             {
{
"518
[; ;main.c: 518:                                 if (Serial_Buffer[2] == 0x00)
[e $ ! == -> *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i -> 0 `i 711  ]
"519
[; ;main.c: 519:                                 {
{
"520
[; ;main.c: 520:                                     Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"522
[; ;main.c: 522:                                     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"523
[; ;main.c: 523:                                     pause_Time = read_i2c(0x0060);
[e = _pause_Time -> ( _read_i2c (1 -> -> 96 `i `l `uc ]
"524
[; ;main.c: 524:                                     vib_Time = read_i2c(0x0040);
[e = _vib_Time -> ( _read_i2c (1 -> -> 64 `i `l `uc ]
"525
[; ;main.c: 525:                                     Motor_Speed = read_i2c(0x0030);
[e = _Motor_Speed -> ( _read_i2c (1 -> -> 48 `i `l `ui ]
"526
[; ;main.c: 526:                                     delay_motor_stop_time = read_i2c(0x0050);
[e = _delay_motor_stop_time -> ( _read_i2c (1 -> -> 80 `i `l `uc ]
"527
[; ;main.c: 527:                                     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"529
[; ;main.c: 529:                                     Serial_Buffer_Out[0] = 0x51;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 0 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 81 `i `uc ]
"530
[; ;main.c: 530:                                     Serial_Buffer_Out[1] = pause_Time;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 1 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux _pause_Time ]
"531
[; ;main.c: 531:                                     Serial_Buffer_Out[2] = Motor_Speed;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> _Motor_Speed `uc ]
"532
[; ;main.c: 532:                                     Serial_Buffer_Out[3] = vib_Time;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 3 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux _vib_Time ]
"533
[; ;main.c: 533:                                     Serial_Buffer_Out[4] = delay_motor_stop_time;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 4 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux _delay_motor_stop_time ]
"535
[; ;main.c: 535:                                     _delay((unsigned long)((100)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"537
[; ;main.c: 537:                                     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"538
[; ;main.c: 538:                                     for (i=0; i<5;i++)
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 5 `i `ui 712  ]
[e $U 713  ]
[e :U 712 ]
"539
[; ;main.c: 539:                                     {
{
"540
[; ;main.c: 540:                                         Write1USART(Serial_Buffer_Out[i]);
[e ( _Write1USART (1 -> *U + &U _Serial_Buffer_Out * -> _i `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux `uc ]
"541
[; ;main.c: 541:                                     }
}
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 5 `i `ui 712  ]
[e :U 713 ]
}
"542
[; ;main.c: 542:                                     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"543
[; ;main.c: 543:                                 }
}
[e :U 711 ]
"544
[; ;main.c: 544:                                 flushOut();
[e ( _flushOut ..  ]
"545
[; ;main.c: 545:                                 Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"546
[; ;main.c: 546:                             }
}
[e :U 710 ]
"547
[; ;main.c: 547:                             break;
[e $U 688  ]
"549
[; ;main.c: 549:                         case 0x64:
[e :U 715 ]
"551
[; ;main.c: 551:                             if(Busy==0)
[e $ ! == -> _Busy `i -> 0 `i 716  ]
"552
[; ;main.c: 552:                             {
{
"553
[; ;main.c: 553:                                 Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"554
[; ;main.c: 554:                                 PWM_Duty_Cycle = Serial_Buffer[2];
[e = _PWM_Duty_Cycle *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux ]
"556
[; ;main.c: 556:                                 switch(PWM_Duty_Cycle)
[e $U 718  ]
"557
[; ;main.c: 557:                                 {
{
"558
[; ;main.c: 558:                                     case 0x00:
[e :U 719 ]
"559
[; ;main.c: 559:                                         PWM_reg=0x00;
[e = _PWM_reg -> -> 0 `i `uc ]
"560
[; ;main.c: 560:                                         break;
[e $U 717  ]
"562
[; ;main.c: 562:                                     case 0x3F:
[e :U 720 ]
"563
[; ;main.c: 563:                                     default:
[e :U 721 ]
"564
[; ;main.c: 564:                                         PWM_reg=0x3F;
[e = _PWM_reg -> -> 63 `i `uc ]
"565
[; ;main.c: 565:                                         break;
[e $U 717  ]
"567
[; ;main.c: 567:                                     case 0x7F:
[e :U 722 ]
"568
[; ;main.c: 568:                                         PWM_reg=0x7F;
[e = _PWM_reg -> -> 127 `i `uc ]
"569
[; ;main.c: 569:                                         break;
[e $U 717  ]
"570
[; ;main.c: 570:                                 }
}
[e $U 717  ]
[e :U 718 ]
[e [\ -> _PWM_Duty_Cycle `i , $ -> 0 `i 719
 , $ -> 63 `i 720
 , $ -> 127 `i 722
 721 ]
[e :U 717 ]
"571
[; ;main.c: 571:                                     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"572
[; ;main.c: 572:                                     write_i2c(0x0030,PWM_reg);
[e ( _write_i2c (2 , -> -> 48 `i `l -> _PWM_reg `i ]
"573
[; ;main.c: 573:                                     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"575
[; ;main.c: 575:                                     Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"576
[; ;main.c: 576:                             }
}
[e :U 716 ]
"577
[; ;main.c: 577:                             break;
[e $U 688  ]
"579
[; ;main.c: 579:                         case 0x65:
[e :U 723 ]
"581
[; ;main.c: 581:                             if(Busy == 0)
[e $ ! == -> _Busy `i -> 0 `i 724  ]
"582
[; ;main.c: 582:                             {
{
"583
[; ;main.c: 583:                                 Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"584
[; ;main.c: 584:                                 vib_Time = Serial_Buffer[2];
[e = _vib_Time *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux ]
"586
[; ;main.c: 586:                                 switch(vib_Time)
[e $U 726  ]
"587
[; ;main.c: 587:                                 {
{
"588
[; ;main.c: 588:                                     case 0x81:
[e :U 727 ]
"589
[; ;main.c: 589:                                         Vmotor_Time=1000;
[e = _Vmotor_Time -> -> 1000 `i `ui ]
"590
[; ;main.c: 590:                                         break;
[e $U 725  ]
"592
[; ;main.c: 592:                                     case 0x82:
[e :U 728 ]
"593
[; ;main.c: 593:                                     default:
[e :U 729 ]
"594
[; ;main.c: 594:                                         Vmotor_Time=2000;
[e = _Vmotor_Time -> -> 2000 `i `ui ]
"595
[; ;main.c: 595:                                         vib_Time=0x82;
[e = _vib_Time -> -> 130 `i `uc ]
"596
[; ;main.c: 596:                                         break;
[e $U 725  ]
"598
[; ;main.c: 598:                                     case 0x83:
[e :U 730 ]
"599
[; ;main.c: 599:                                         Vmotor_Time=3000;
[e = _Vmotor_Time -> -> 3000 `i `ui ]
"600
[; ;main.c: 600:                                         break;
[e $U 725  ]
"602
[; ;main.c: 602:                                     case 0x84:
[e :U 731 ]
"603
[; ;main.c: 603:                                         Vmotor_Time=4000;
[e = _Vmotor_Time -> -> 4000 `i `ui ]
"604
[; ;main.c: 604:                                         break;
[e $U 725  ]
"606
[; ;main.c: 606:                                     case 0x85:
[e :U 732 ]
"607
[; ;main.c: 607:                                         Vmotor_Time=5000;
[e = _Vmotor_Time -> -> 5000 `i `ui ]
"608
[; ;main.c: 608:                                         break;
[e $U 725  ]
"609
[; ;main.c: 609:                                 }
}
[e $U 725  ]
[e :U 726 ]
[e [\ -> _vib_Time `i , $ -> 129 `i 727
 , $ -> 130 `i 728
 , $ -> 131 `i 730
 , $ -> 132 `i 731
 , $ -> 133 `i 732
 729 ]
[e :U 725 ]
"610
[; ;main.c: 610:                                     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"611
[; ;main.c: 611:                                     write_i2c(0x0040,vib_Time);
[e ( _write_i2c (2 , -> -> 64 `i `l -> _vib_Time `i ]
"612
[; ;main.c: 612:                                     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"614
[; ;main.c: 614:                                     Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"615
[; ;main.c: 615:                             }
}
[e :U 724 ]
"617
[; ;main.c: 617:                         case 0x66:
[e :U 733 ]
"619
[; ;main.c: 619:                             if(Busy == 0)
[e $ ! == -> _Busy `i -> 0 `i 734  ]
"620
[; ;main.c: 620:                             {
{
"621
[; ;main.c: 621:                                 Busy = 1;
[e = _Busy -> -> 1 `i `uc ]
"622
[; ;main.c: 622:                                 delay_motor_stop_time = Serial_Buffer[2];
[e = _delay_motor_stop_time *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux ]
"623
[; ;main.c: 623:                                 Motor_Stop_Delay_Time = delay_motor_stop_time;
[e = _Motor_Stop_Delay_Time -> _delay_motor_stop_time `ui ]
"625
[; ;main.c: 625:                                 INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"626
[; ;main.c: 626:                                 write_i2c(0x0050,delay_motor_stop_time);
[e ( _write_i2c (2 , -> -> 80 `i `l -> _delay_motor_stop_time `i ]
"627
[; ;main.c: 627:                                 INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"629
[; ;main.c: 629:                                 Busy = 0;
[e = _Busy -> -> 0 `i `uc ]
"630
[; ;main.c: 630:                             }
}
[e :U 734 ]
"632
[; ;main.c: 632:                             break;
[e $U 688  ]
"634
[; ;main.c: 634:                     }
}
[e $U 688  ]
[e :U 689 ]
[e [\ -> *U + &U _Serial_Buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i , $ -> 68 `i 690
 , $ -> 35 `i 698
 , $ -> 81 `i 709
 , $ -> 100 `i 715
 , $ -> 101 `i 723
 , $ -> 102 `i 733
 688 ]
[e :U 688 ]
"636
[; ;main.c: 636:                     Serial_Flag = 0;
[e = _Serial_Flag -> -> 0 `i `uc ]
"637
[; ;main.c: 637:                     Serial_GData = 0;
[e = _Serial_GData -> -> 0 `i `uc ]
"638
[; ;main.c: 638:                     OpMode = MANUAL_MODE;
[e = _OpMode -> . `E5395 0 `uc ]
"639
[; ;main.c: 639:                 }
}
[e $U 735  ]
"640
[; ;main.c: 640:                 else
[e :U 687 ]
"641
[; ;main.c: 641:                 {
{
"642
[; ;main.c: 642:                     OpMode = MANUAL_MODE;
[e = _OpMode -> . `E5395 0 `uc ]
"643
[; ;main.c: 643:                 }
}
[e :U 735 ]
"646
[; ;main.c: 646:         }
}
[e $U 658  ]
[e :U 659 ]
[e [\ -> _OpMode `i , $ . `E5395 0 660
 , $ . `E5395 2 686
 658 ]
[e :U 658 ]
"647
[; ;main.c: 647:     }
}
[e :U 655 ]
[e $U 656  ]
[e :U 657 ]
"651
[; ;main.c: 651: }
[e :UE 628 ]
}
[v $root$_high_isr `(v ~T0 @X0 0 e ]
"656
[; ;main.c: 656: void __attribute__((picinterrupt(("")))) high_isr(void)
[v _high_isr `(v ~T109 @X0 1 ef ]
"657
[; ;main.c: 657: {
{
[e :U _high_isr ]
[f ]
"658
[; ;main.c: 658:     unsigned char c, i;
[v _c `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
"659
[; ;main.c: 659:  unsigned char Temp;
[v _Temp `uc ~T0 @X0 1 a ]
"661
[; ;main.c: 661:     if ((PIR1bits.RC1IF))
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 737  ]
"662
[; ;main.c: 662:  {
{
"664
[; ;main.c: 664:   c=Read1USART();
[e = _c -> ( _Read1USART ..  `uc ]
"666
[; ;main.c: 666:   if ((c == 0xA5) && ((Serial_Flag == 0)||(Busy == 1)))
[e $ ! && == -> _c `i -> 165 `i || == -> _Serial_Flag `i -> 0 `i == -> _Busy `i -> 1 `i 738  ]
"667
[; ;main.c: 667:   {
{
"668
[; ;main.c: 668:    Serial_GData = 1;
[e = _Serial_GData -> -> 1 `i `uc ]
"669
[; ;main.c: 669:    Serial_Count = 0;
[e = _Serial_Count -> -> 0 `i `ui ]
"670
[; ;main.c: 670:    Serial_Buffer[Serial_Count] = c;
[e = *U + &U _Serial_Buffer * -> _Serial_Count `ux -> -> # *U &U _Serial_Buffer `ui `ux _c ]
"671
[; ;main.c: 671:             Serial_Count++;
[e ++ _Serial_Count -> -> 1 `i `ui ]
"672
[; ;main.c: 672:   }
}
[e $U 739  ]
"673
[; ;main.c: 673:   else if (Serial_GData == 1)
[e :U 738 ]
[e $ ! == -> _Serial_GData `i -> 1 `i 740  ]
"674
[; ;main.c: 674:   {
{
"675
[; ;main.c: 675:    Serial_Buffer[Serial_Count] = c;
[e = *U + &U _Serial_Buffer * -> _Serial_Count `ux -> -> # *U &U _Serial_Buffer `ui `ux _c ]
"677
[; ;main.c: 677:    if(Serial_Count<5)
[e $ ! < _Serial_Count -> -> 5 `i `ui 741  ]
"678
[; ;main.c: 678:             {
{
"679
[; ;main.c: 679:                 if (c == 0x5A)
[e $ ! == -> _c `i -> 90 `i 742  ]
"680
[; ;main.c: 680:                 {
{
"681
[; ;main.c: 681:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
[e = _Temp -> + -> *U + &U _Serial_Buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i -> *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i `uc ]
"683
[; ;main.c: 683:                     if (Temp == Serial_Buffer[3])
[e $ ! == -> _Temp `i -> *U + &U _Serial_Buffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i 743  ]
"684
[; ;main.c: 684:                     {
{
"685
[; ;main.c: 685:                         if(Busy==0 || Serial_Buffer[2]==0xF5)
[e $ ! || == -> _Busy `i -> 0 `i == -> *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i -> 245 `i 744  ]
"686
[; ;main.c: 686:                         {
{
"687
[; ;main.c: 687:                             INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"688
[; ;main.c: 688:                             for (i=0; i<5; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 5 `i 745  ]
[e $U 746  ]
[e :U 745 ]
"689
[; ;main.c: 689:                             {
{
"690
[; ;main.c: 690:                                 Write1USART(Serial_Buffer[i]);
[e ( _Write1USART (1 -> *U + &U _Serial_Buffer * -> _i `ux -> -> # *U &U _Serial_Buffer `ui `ux `uc ]
"691
[; ;main.c: 691:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 5 `i 745  ]
[e :U 746 ]
}
"692
[; ;main.c: 692:                             INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"693
[; ;main.c: 693:                         }
}
[e $U 748  ]
"694
[; ;main.c: 694:                         else
[e :U 744 ]
"695
[; ;main.c: 695:                         {
{
"696
[; ;main.c: 696:                             INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"697
[; ;main.c: 697:                             for (i=0; i<5; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 5 `i 749  ]
[e $U 750  ]
[e :U 749 ]
"698
[; ;main.c: 698:                             {
{
"699
[; ;main.c: 699:                                 Write1USART(0x16);
[e ( _Write1USART (1 -> -> 22 `i `uc ]
"700
[; ;main.c: 700:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 5 `i 749  ]
[e :U 750 ]
}
"701
[; ;main.c: 701:                             INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"702
[; ;main.c: 702:                         }
}
[e :U 748 ]
"704
[; ;main.c: 704:                         Serial_Flag = 1;
[e = _Serial_Flag -> -> 1 `i `uc ]
"705
[; ;main.c: 705:                         Serial_Count = 0;
[e = _Serial_Count -> -> 0 `i `ui ]
"706
[; ;main.c: 706:                         OpMode = AUTO_MODE;
[e = _OpMode -> . `E5395 2 `uc ]
"708
[; ;main.c: 708:                     }
}
[e $U 752  ]
"709
[; ;main.c: 709:                     else
[e :U 743 ]
"710
[; ;main.c: 710:                     {
{
"711
[; ;main.c: 711:                         Serial_Flag = 0;
[e = _Serial_Flag -> -> 0 `i `uc ]
"712
[; ;main.c: 712:                         Serial_Count = 0;
[e = _Serial_Count -> -> 0 `i `ui ]
"714
[; ;main.c: 714:                         INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"715
[; ;main.c: 715:                         for (i=0; i<5; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 5 `i 753  ]
[e $U 754  ]
[e :U 753 ]
"716
[; ;main.c: 716:                         {
{
"717
[; ;main.c: 717:                             Write1USART(0x15);
[e ( _Write1USART (1 -> -> 21 `i `uc ]
"718
[; ;main.c: 718:                         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 5 `i 753  ]
[e :U 754 ]
}
"719
[; ;main.c: 719:                         INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"720
[; ;main.c: 720:                     }
}
[e :U 752 ]
"722
[; ;main.c: 722:                     if(Serial_Buffer[2]==0xF5 && OpMode == AUTO_MODE)
[e $ ! && == -> *U + &U _Serial_Buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux `i -> 245 `i == -> _OpMode `i -> . `E5395 2 `i 756  ]
"723
[; ;main.c: 723:                     {
{
"724
[; ;main.c: 724:                         Stop = 1;
[e = _Stop -> -> 1 `i `uc ]
"725
[; ;main.c: 725:                     }
}
[e :U 756 ]
"726
[; ;main.c: 726:                 }
}
[e :U 742 ]
"727
[; ;main.c: 727:             }
}
[e $U 757  ]
"728
[; ;main.c: 728:             else
[e :U 741 ]
"729
[; ;main.c: 729:             {
{
"730
[; ;main.c: 730:                 Serial_GData = 0;
[e = _Serial_GData -> -> 0 `i `uc ]
"731
[; ;main.c: 731:             }
}
[e :U 757 ]
"733
[; ;main.c: 733:             Serial_Count++;
[e ++ _Serial_Count -> -> 1 `i `ui ]
"734
[; ;main.c: 734:   }
}
[e :U 740 ]
[e :U 739 ]
"735
[; ;main.c: 735:  }
}
[e $U 758  ]
"736
[; ;main.c: 736:     else
[e :U 737 ]
"737
[; ;main.c: 737:     {
{
"738
[; ;main.c: 738:         if (RCSTA1bits.OERR == 1)
[e $ ! == -> . . _RCSTA1bits 0 1 `i -> 1 `i 759  ]
"739
[; ;main.c: 739:         {
{
"740
[; ;main.c: 740:             RCSTA1bits.OERR = 0;
[e = . . _RCSTA1bits 0 1 -> -> 0 `i `uc ]
"741
[; ;main.c: 741:             RCSTA1bits.CREN = 0;
[e = . . _RCSTA1bits 0 4 -> -> 0 `i `uc ]
"742
[; ;main.c: 742:             RCSTA1bits.CREN = 1;
[e = . . _RCSTA1bits 0 4 -> -> 1 `i `uc ]
"743
[; ;main.c: 743:         }
}
[e :U 759 ]
"744
[; ;main.c: 744:     }
}
[e :U 758 ]
"746
[; ;main.c: 746:     if (TMR1IF_triggered == 1)
[e $ ! == -> _TMR1IF_triggered `i -> 1 `i 760  ]
"747
[; ;main.c: 747:     {
{
"748
[; ;main.c: 748:         if(errorcounter >0)
[e $ ! > _errorcounter -> -> 0 `i `l 761  ]
"749
[; ;main.c: 749:         {
{
"750
[; ;main.c: 750:             errorcounter--;
[e -- _errorcounter -> -> 1 `i `Vl ]
"751
[; ;main.c: 751:         }
}
[e $U 762  ]
"752
[; ;main.c: 752:         else
[e :U 761 ]
"753
[; ;main.c: 753:         {
{
"754
[; ;main.c: 754:             errorcounter = 0;
[e = _errorcounter -> -> 0 `i `l ]
"755
[; ;main.c: 755:         }
}
[e :U 762 ]
"757
[; ;main.c: 757:         TMR1IF_triggered = 0;
[e = _TMR1IF_triggered -> -> 0 `i `uc ]
"758
[; ;main.c: 758:     }
}
[e :U 760 ]
"760
[; ;main.c: 760:     if(TMR1IF)
[e $ ! _TMR1IF 763  ]
"761
[; ;main.c: 761:     {
{
"762
[; ;main.c: 762:         TMR1 = 0x9E57;
[e = _TMR1 -> -> 40535 `ui `us ]
"763
[; ;main.c: 763:         TMR1IF = 0;
[e = _TMR1IF -> -> 0 `i `b ]
"764
[; ;main.c: 764:         TMR1IF_triggered = 1;
[e = _TMR1IF_triggered -> -> 1 `i `uc ]
"765
[; ;main.c: 765:     }
}
[e :U 763 ]
"767
[; ;main.c: 767: }
[e :UE 736 ]
}
"772
[; ;main.c: 772: void delay_1ms(unsigned int time)
[v _delay_1ms `(v ~T0 @X0 1 ef1`ui ]
"773
[; ;main.c: 773:  {
{
[e :U _delay_1ms ]
"772
[; ;main.c: 772: void delay_1ms(unsigned int time)
[v _time `ui ~T0 @X0 1 r1 ]
"773
[; ;main.c: 773:  {
[f ]
"774
[; ;main.c: 774:    while(time > 0)
[e $U 765  ]
[e :U 766 ]
"775
[; ;main.c: 775:    {
{
"776
[; ;main.c: 776:        _delay((unsigned long)((1)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"777
[; ;main.c: 777:       time--;
[e -- _time -> -> 1 `i `ui ]
"778
[; ;main.c: 778:     }
}
[e :U 765 ]
"774
[; ;main.c: 774:    while(time > 0)
[e $ > _time -> -> 0 `i `ui 766  ]
[e :U 767 ]
"779
[; ;main.c: 779: }
[e :UE 764 ]
}
"784
[; ;main.c: 784: unsigned int Read_IR(void)
[v _Read_IR `(ui ~T0 @X0 1 ef ]
"785
[; ;main.c: 785: {
{
[e :U _Read_IR ]
[f ]
"787
[; ;main.c: 787:     if(PORTAbits.RA1 == 1)
[e $ ! == -> . . _PORTAbits 0 1 `i -> 1 `i 769  ]
"788
[; ;main.c: 788:     {
{
"789
[; ;main.c: 789:         return 0;
[e ) -> -> 0 `i `ui ]
[e $UE 768  ]
"790
[; ;main.c: 790:     }
}
[e $U 770  ]
"791
[; ;main.c: 791:     else
[e :U 769 ]
"792
[; ;main.c: 792:     {
{
"793
[; ;main.c: 793:         return 1;
[e ) -> -> 1 `i `ui ]
[e $UE 768  ]
"794
[; ;main.c: 794:     }
}
[e :U 770 ]
"796
[; ;main.c: 796: }
[e :UE 768 ]
}
"801
[; ;main.c: 801: void MotorPosition_Init(void)
[v _MotorPosition_Init `(v ~T0 @X0 1 ef ]
"802
[; ;main.c: 802: {
{
[e :U _MotorPosition_Init ]
[f ]
"803
[; ;main.c: 803:     LATAbits.LATA2 = 1;
[e = . . _LATAbits 0 2 -> -> 1 `i `uc ]
"804
[; ;main.c: 804:     MotorON_PWM();
[e ( _MotorON_PWM ..  ]
"805
[; ;main.c: 805:     _delay((unsigned long)((350)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 350 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"806
[; ;main.c: 806:     errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"808
[; ;main.c: 808:     do
[e :U 774 ]
"809
[; ;main.c: 809:     {
{
"810
[; ;main.c: 810:       IR_SENSORF = Read_IR();
[e = _IR_SENSORF ( _Read_IR ..  ]
"811
[; ;main.c: 811:       if(errorcounter == 0)
[e $ ! == _errorcounter -> -> 0 `i `l 775  ]
"812
[; ;main.c: 812:       {
{
"813
[; ;main.c: 813:           WriteSTLED316SErr('1');
[e ( _WriteSTLED316SErr (1 -> -> 49 `ui `uc ]
"814
[; ;main.c: 814:           MotorBREAK();
[e ( _MotorBREAK ..  ]
"815
[; ;main.c: 815:       }
}
[e :U 775 ]
"817
[; ;main.c: 817:     }while(IR_SENSORF != 0);
}
[e $ != _IR_SENSORF -> -> 0 `i `ui 774  ]
[e :U 773 ]
"819
[; ;main.c: 819:      _delay((unsigned long)((100)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"820
[; ;main.c: 820:     errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"821
[; ;main.c: 821:     do
[e :U 778 ]
"822
[; ;main.c: 822:     {
{
"823
[; ;main.c: 823:        IR_SENSORF = Read_IR();
[e = _IR_SENSORF ( _Read_IR ..  ]
"824
[; ;main.c: 824:        if(errorcounter == 0)
[e $ ! == _errorcounter -> -> 0 `i `l 779  ]
"825
[; ;main.c: 825:        {
{
"826
[; ;main.c: 826:             WriteSTLED316SErr('2');
[e ( _WriteSTLED316SErr (1 -> -> 50 `ui `uc ]
"827
[; ;main.c: 827:            MotorBREAK();
[e ( _MotorBREAK ..  ]
"828
[; ;main.c: 828:        }
}
[e :U 779 ]
"830
[; ;main.c: 830:     }while(IR_SENSORF != 1);
}
[e $ != _IR_SENSORF -> -> 1 `i `ui 778  ]
[e :U 777 ]
"832
[; ;main.c: 832:     errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"834
[; ;main.c: 834:     delay_1ms(Motor_Stop_Delay_Time);
[e ( _delay_1ms (1 _Motor_Stop_Delay_Time ]
"835
[; ;main.c: 835:     MotorBREAK();
[e ( _MotorBREAK ..  ]
"836
[; ;main.c: 836:     _delay((unsigned long)((500)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"837
[; ;main.c: 837:     IR_SENSORF=0;
[e = _IR_SENSORF -> -> 0 `i `ui ]
"839
[; ;main.c: 839:     LATAbits.LATA2 = 0;
[e = . . _LATAbits 0 2 -> -> 0 `i `uc ]
"841
[; ;main.c: 841: }
[e :UE 771 ]
}
"846
[; ;main.c: 846: void ToggleVIB_Mode(void)
[v _ToggleVIB_Mode `(v ~T0 @X0 1 ef ]
"847
[; ;main.c: 847: {
{
[e :U _ToggleVIB_Mode ]
[f ]
"848
[; ;main.c: 848:     if (vibration_mode)
[e $ ! != -> _vibration_mode `i -> 0 `i 781  ]
"849
[; ;main.c: 849:         vibration_mode = 0;
[e = _vibration_mode -> -> 0 `i `uc ]
[e $U 782  ]
"850
[; ;main.c: 850:     else
[e :U 781 ]
"851
[; ;main.c: 851:         vibration_mode = 1;
[e = _vibration_mode -> -> 1 `i `uc ]
[e :U 782 ]
"858
[; ;main.c: 858:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"859
[; ;main.c: 859:     write_i2c(0x0010, vibration_mode);
[e ( _write_i2c (2 , -> -> 16 `i `l -> _vibration_mode `i ]
"860
[; ;main.c: 860:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"863
[; ;main.c: 863: }
[e :UE 780 ]
}
"868
[; ;main.c: 868: void Homing_Again_Manual(void)
[v _Homing_Again_Manual `(v ~T0 @X0 1 ef ]
"869
[; ;main.c: 869: {
{
[e :U _Homing_Again_Manual ]
[f ]
"871
[; ;main.c: 871:     if (vibration_mode == 1)
[e $ ! == -> _vibration_mode `i -> 1 `i 784  ]
"872
[; ;main.c: 872:     {
{
"873
[; ;main.c: 873:         LATCbits.LATC1 = 1;
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
"874
[; ;main.c: 874:         delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"875
[; ;main.c: 875:         LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"876
[; ;main.c: 876:         _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"877
[; ;main.c: 877:     }
}
[e $U 785  ]
"878
[; ;main.c: 878:     else
[e :U 784 ]
"879
[; ;main.c: 879:     {
{
"880
[; ;main.c: 880:         LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"881
[; ;main.c: 881:         _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"882
[; ;main.c: 882:     }
}
[e :U 785 ]
"884
[; ;main.c: 884:     LATAbits.LATA2 = 1;
[e = . . _LATAbits 0 2 -> -> 1 `i `uc ]
"886
[; ;main.c: 886:     while (NUM>0)
[e $U 786  ]
[e :U 787 ]
"887
[; ;main.c: 887:     {
{
"888
[; ;main.c: 888:         __asm(" clrwdt");
[; <"  clrwdt ;# ">
"889
[; ;main.c: 889:         readWeighingData();
[e ( _readWeighingData ..  ]
"890
[; ;main.c: 890:         delay_1ms(Motor_Pause_Time);
[e ( _delay_1ms (1 _Motor_Pause_Time ]
"891
[; ;main.c: 891:         MotorON_PWM();
[e ( _MotorON_PWM ..  ]
"892
[; ;main.c: 892:         _delay((unsigned long)((350)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 350 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"893
[; ;main.c: 893:         errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"895
[; ;main.c: 895:         do
[e :U 791 ]
"896
[; ;main.c: 896:         {
{
"897
[; ;main.c: 897:             IR_SENSORF = Read_IR();
[e = _IR_SENSORF ( _Read_IR ..  ]
"898
[; ;main.c: 898:             if(errorcounter == 0)
[e $ ! == _errorcounter -> -> 0 `i `l 792  ]
"899
[; ;main.c: 899:             {
{
"900
[; ;main.c: 900:                 WriteSTLED316SErr('1');
[e ( _WriteSTLED316SErr (1 -> -> 49 `ui `uc ]
"901
[; ;main.c: 901:                 MotorBREAK();
[e ( _MotorBREAK ..  ]
"902
[; ;main.c: 902:             }
}
[e :U 792 ]
"904
[; ;main.c: 904:         }while(IR_SENSORF != 0);
}
[e $ != _IR_SENSORF -> -> 0 `i `ui 791  ]
[e :U 790 ]
"906
[; ;main.c: 906:          _delay((unsigned long)((100)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"908
[; ;main.c: 908:          errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"910
[; ;main.c: 910:         do
[e :U 795 ]
"911
[; ;main.c: 911:         {
{
"912
[; ;main.c: 912:             IR_SENSORF = Read_IR();
[e = _IR_SENSORF ( _Read_IR ..  ]
"913
[; ;main.c: 913:             if(errorcounter == 0)
[e $ ! == _errorcounter -> -> 0 `i `l 796  ]
"914
[; ;main.c: 914:             {
{
"915
[; ;main.c: 915:                 WriteSTLED316SErr('2');
[e ( _WriteSTLED316SErr (1 -> -> 50 `ui `uc ]
"916
[; ;main.c: 916:                 MotorBREAK();
[e ( _MotorBREAK ..  ]
"917
[; ;main.c: 917:             }
}
[e :U 796 ]
"918
[; ;main.c: 918:         }
}
[e $ != _IR_SENSORF -> -> 1 `i `ui 795  ]
[e :U 794 ]
"921
[; ;main.c: 921:         errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"922
[; ;main.c: 922:         delay_1ms(Motor_Stop_Delay_Time);
[e ( _delay_1ms (1 _Motor_Stop_Delay_Time ]
"923
[; ;main.c: 923:         MotorBREAK();
[e ( _MotorBREAK ..  ]
"925
[; ;main.c: 925:         NUM--;
[e -- _NUM -> -> 1 `i `ui ]
"926
[; ;main.c: 926:         WriteSTLED316SData(NUM, vibration_mode);
[e ( _WriteSTLED316SData (2 , -> _NUM `i -> _vibration_mode `uc ]
"928
[; ;main.c: 928:         if (vibration_mode == 1 && NUM != 0)
[e $ ! && == -> _vibration_mode `i -> 1 `i != _NUM -> -> 0 `i `ui 797  ]
"929
[; ;main.c: 929:         {
{
"930
[; ;main.c: 930:             LATCbits.LATC1 = 1;
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
"931
[; ;main.c: 931:             delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"933
[; ;main.c: 933:             LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"934
[; ;main.c: 934:             _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"935
[; ;main.c: 935:         }
}
[e $U 798  ]
"936
[; ;main.c: 936:         else if(vibration_mode == 0 && NUM != 0)
[e :U 797 ]
[e $ ! && == -> _vibration_mode `i -> 0 `i != _NUM -> -> 0 `i `ui 799  ]
"937
[; ;main.c: 937:         {
{
"938
[; ;main.c: 938:             LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"939
[; ;main.c: 939:             if (NUM != 0)
[e $ ! != _NUM -> -> 0 `i `ui 800  ]
"940
[; ;main.c: 940:             {
{
"941
[; ;main.c: 941:                 delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"942
[; ;main.c: 942:             }
}
[e $U 801  ]
"943
[; ;main.c: 943:             else
[e :U 800 ]
"944
[; ;main.c: 944:             {
{
"945
[; ;main.c: 945:                 _delay((unsigned long)((500)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"946
[; ;main.c: 946:             }
}
[e :U 801 ]
"947
[; ;main.c: 947:         }
}
[e :U 799 ]
[e :U 798 ]
"949
[; ;main.c: 949:         if(Stop==1)
[e $ ! == -> _Stop `i -> 1 `i 802  ]
"950
[; ;main.c: 950:             break;
[e $U 788  ]
[e :U 802 ]
"952
[; ;main.c: 952:     }
}
[e :U 786 ]
"886
[; ;main.c: 886:     while (NUM>0)
[e $ > _NUM -> -> 0 `i `ui 787  ]
[e :U 788 ]
"954
[; ;main.c: 954:     LATAbits.LATA2 = 0;
[e = . . _LATAbits 0 2 -> -> 0 `i `uc ]
"956
[; ;main.c: 956:     if (NUM == 0 || Stop==1)
[e $ ! || == _NUM -> -> 0 `i `ui == -> _Stop `i -> 1 `i 803  ]
"957
[; ;main.c: 957:     {
{
"959
[; ;main.c: 959:         if (vibration_mode == 1)
[e $ ! == -> _vibration_mode `i -> 1 `i 804  ]
"960
[; ;main.c: 960:         {
{
"961
[; ;main.c: 961:             LATCbits.LATC1 = 1;
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
"962
[; ;main.c: 962:             delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"964
[; ;main.c: 964:             LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"965
[; ;main.c: 965:             _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"966
[; ;main.c: 966:         }
}
[e :U 804 ]
"968
[; ;main.c: 968:     }
}
[e :U 803 ]
"970
[; ;main.c: 970:     NUM = 0;
[e = _NUM -> -> 0 `i `ui ]
"971
[; ;main.c: 971:     OpMode = MANUAL_MODE;
[e = _OpMode -> . `E5395 0 `uc ]
"973
[; ;main.c: 973: }
[e :UE 783 ]
}
"978
[; ;main.c: 978: void Homing_Again_Auto(void)
[v _Homing_Again_Auto `(v ~T0 @X0 1 ef ]
"979
[; ;main.c: 979: {
{
[e :U _Homing_Again_Auto ]
[f ]
"981
[; ;main.c: 981:     IR_SENSORF = 0;
[e = _IR_SENSORF -> -> 0 `i `ui ]
"982
[; ;main.c: 982:     WriteSTLED316SMode('A');
[e ( _WriteSTLED316SMode (1 -> -> 65 `ui `uc ]
"984
[; ;main.c: 984:     if (vibration_mode == 1)
[e $ ! == -> _vibration_mode `i -> 1 `i 806  ]
"985
[; ;main.c: 985:     {
{
"986
[; ;main.c: 986:         LATCbits.LATC1 = 1;
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
"987
[; ;main.c: 987:         delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"988
[; ;main.c: 988:         LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"989
[; ;main.c: 989:         _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"990
[; ;main.c: 990:     }
}
[e $U 807  ]
"991
[; ;main.c: 991:     else
[e :U 806 ]
"992
[; ;main.c: 992:     {
{
"993
[; ;main.c: 993:         LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"994
[; ;main.c: 994:         _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"995
[; ;main.c: 995:     }
}
[e :U 807 ]
"997
[; ;main.c: 997:     LATAbits.LATA2 = 1;
[e = . . _LATAbits 0 2 -> -> 1 `i `uc ]
"999
[; ;main.c: 999:     while ( Stop==0)
[e $U 808  ]
[e :U 809 ]
"1000
[; ;main.c: 1000:     {
{
"1001
[; ;main.c: 1001:         __asm(" clrwdt");
[; <"  clrwdt ;# ">
"1002
[; ;main.c: 1002:         readWeighingData();
[e ( _readWeighingData ..  ]
"1003
[; ;main.c: 1003:         delay_1ms(Motor_Pause_Time);
[e ( _delay_1ms (1 _Motor_Pause_Time ]
"1004
[; ;main.c: 1004:         MotorON_PWM();
[e ( _MotorON_PWM ..  ]
"1005
[; ;main.c: 1005:         _delay((unsigned long)((350)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 350 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"1007
[; ;main.c: 1007:         errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"1009
[; ;main.c: 1009:        do
[e :U 813 ]
"1010
[; ;main.c: 1010:         {
{
"1011
[; ;main.c: 1011:           IR_SENSORF = Read_IR();
[e = _IR_SENSORF ( _Read_IR ..  ]
"1012
[; ;main.c: 1012:           if(errorcounter == 0)
[e $ ! == _errorcounter -> -> 0 `i `l 814  ]
"1013
[; ;main.c: 1013:           {
{
"1014
[; ;main.c: 1014:               WriteSTLED316SErr('1');
[e ( _WriteSTLED316SErr (1 -> -> 49 `ui `uc ]
"1015
[; ;main.c: 1015:               MotorBREAK();
[e ( _MotorBREAK ..  ]
"1016
[; ;main.c: 1016:           }
}
[e :U 814 ]
"1017
[; ;main.c: 1017:         }while(IR_SENSORF != 0);
}
[e $ != _IR_SENSORF -> -> 0 `i `ui 813  ]
[e :U 812 ]
"1019
[; ;main.c: 1019:          _delay((unsigned long)((100)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"1020
[; ;main.c: 1020:          errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"1022
[; ;main.c: 1022:         do
[e :U 817 ]
"1023
[; ;main.c: 1023:         {
{
"1024
[; ;main.c: 1024:           IR_SENSORF = Read_IR();
[e = _IR_SENSORF ( _Read_IR ..  ]
"1025
[; ;main.c: 1025:           if(errorcounter == 0)
[e $ ! == _errorcounter -> -> 0 `i `l 818  ]
"1026
[; ;main.c: 1026:           {
{
"1027
[; ;main.c: 1027:               WriteSTLED316SErr('2');
[e ( _WriteSTLED316SErr (1 -> -> 50 `ui `uc ]
"1028
[; ;main.c: 1028:               MotorBREAK();
[e ( _MotorBREAK ..  ]
"1029
[; ;main.c: 1029:           }
}
[e :U 818 ]
"1030
[; ;main.c: 1030:         }while(IR_SENSORF != 1);
}
[e $ != _IR_SENSORF -> -> 1 `i `ui 817  ]
[e :U 816 ]
"1032
[; ;main.c: 1032:         errorcounter = 30;
[e = _errorcounter -> -> 30 `i `l ]
"1034
[; ;main.c: 1034:         delay_1ms(Motor_Stop_Delay_Time);
[e ( _delay_1ms (1 _Motor_Stop_Delay_Time ]
"1035
[; ;main.c: 1035:         MotorBREAK();
[e ( _MotorBREAK ..  ]
"1037
[; ;main.c: 1037:         if (vibration_mode == 1)
[e $ ! == -> _vibration_mode `i -> 1 `i 819  ]
"1038
[; ;main.c: 1038:         {
{
"1039
[; ;main.c: 1039:             LATCbits.LATC1 = 1;
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
"1040
[; ;main.c: 1040:             delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"1042
[; ;main.c: 1042:             LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"1043
[; ;main.c: 1043:             _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"1044
[; ;main.c: 1044:         }
}
[e $U 820  ]
"1045
[; ;main.c: 1045:         else
[e :U 819 ]
"1046
[; ;main.c: 1046:         {
{
"1047
[; ;main.c: 1047:             LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"1048
[; ;main.c: 1048:              delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"1049
[; ;main.c: 1049:         }
}
[e :U 820 ]
"1051
[; ;main.c: 1051:         if(Stop==1)
[e $ ! == -> _Stop `i -> 1 `i 821  ]
"1052
[; ;main.c: 1052:             break;
[e $U 810  ]
[e :U 821 ]
"1054
[; ;main.c: 1054:     }
}
[e :U 808 ]
"999
[; ;main.c: 999:     while ( Stop==0)
[e $ == -> _Stop `i -> 0 `i 809  ]
[e :U 810 ]
"1056
[; ;main.c: 1056:     LATAbits.LATA2 = 0;
[e = . . _LATAbits 0 2 -> -> 0 `i `uc ]
"1058
[; ;main.c: 1058:     if (NUM == 0 || Stop==1)
[e $ ! || == _NUM -> -> 0 `i `ui == -> _Stop `i -> 1 `i 822  ]
"1059
[; ;main.c: 1059:     {
{
"1061
[; ;main.c: 1061:         if (vibration_mode == 1)
[e $ ! == -> _vibration_mode `i -> 1 `i 823  ]
"1062
[; ;main.c: 1062:         {
{
"1063
[; ;main.c: 1063:             LATCbits.LATC1 = 1;
[e = . . _LATCbits 0 1 -> -> 1 `i `uc ]
"1064
[; ;main.c: 1064:             delay_1ms(Vmotor_Time);
[e ( _delay_1ms (1 _Vmotor_Time ]
"1066
[; ;main.c: 1066:             LATCbits.LATC1 = 0;
[e = . . _LATCbits 0 1 -> -> 0 `i `uc ]
"1067
[; ;main.c: 1067:             _delay((unsigned long)((300)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 300 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"1068
[; ;main.c: 1068:         }
}
[e :U 823 ]
"1070
[; ;main.c: 1070:     }
}
[e :U 822 ]
"1072
[; ;main.c: 1072:     NUM = 0;
[e = _NUM -> -> 0 `i `ui ]
"1073
[; ;main.c: 1073:     OpMode = AUTO_MODE;
[e = _OpMode -> . `E5395 2 `uc ]
"1075
[; ;main.c: 1075: }
[e :UE 805 ]
}
"1080
[; ;main.c: 1080: void flush(void)
[v _flush `(v ~T0 @X0 1 ef ]
"1081
[; ;main.c: 1081: {
{
[e :U _flush ]
[f ]
"1082
[; ;main.c: 1082:     int i;
[v _i `i ~T0 @X0 1 a ]
"1084
[; ;main.c: 1084:     for(i=0; i<16; i++)
{
[e = _i -> 0 `i ]
[e $ < _i -> 16 `i 825  ]
[e $U 826  ]
[e :U 825 ]
"1085
[; ;main.c: 1085:     {
{
"1086
[; ;main.c: 1086:         Serial_Buffer[i]=0x00;
[e = *U + &U _Serial_Buffer * -> -> _i `ui `ux -> -> # *U &U _Serial_Buffer `ui `ux -> -> 0 `i `uc ]
"1087
[; ;main.c: 1087:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 16 `i 825  ]
[e :U 826 ]
}
"1088
[; ;main.c: 1088: }
[e :UE 824 ]
}
"1093
[; ;main.c: 1093: void flushOut(void)
[v _flushOut `(v ~T0 @X0 1 ef ]
"1094
[; ;main.c: 1094: {
{
[e :U _flushOut ]
[f ]
"1095
[; ;main.c: 1095:     int i;
[v _i `i ~T0 @X0 1 a ]
"1097
[; ;main.c: 1097:     for(i=0; i<16; i++)
{
[e = _i -> 0 `i ]
[e $ < _i -> 16 `i 829  ]
[e $U 830  ]
[e :U 829 ]
"1098
[; ;main.c: 1098:     {
{
"1099
[; ;main.c: 1099:         Serial_Buffer_Out[i]=0x00;
[e = *U + &U _Serial_Buffer_Out * -> -> _i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 0 `i `uc ]
"1100
[; ;main.c: 1100:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 16 `i 829  ]
[e :U 830 ]
}
"1101
[; ;main.c: 1101: }
[e :UE 828 ]
}
"1106
[; ;main.c: 1106: void readWeighingData(void)
[v _readWeighingData `(v ~T0 @X0 1 ef ]
"1107
[; ;main.c: 1107: {
{
[e :U _readWeighingData ]
[f ]
"1108
[; ;main.c: 1108:     int i;
[v _i `i ~T0 @X0 1 a ]
"1110
[; ;main.c: 1110:     Serial_Buffer_Out[0] = 0xA5;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 0 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 165 `i `uc ]
"1111
[; ;main.c: 1111:     Serial_Buffer_Out[1] = 0x45;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 1 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 69 `i `uc ]
"1112
[; ;main.c: 1112:     Serial_Buffer_Out[2] = 0x00;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 2 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 0 `i `uc ]
"1113
[; ;main.c: 1113:     Serial_Buffer_Out[3] = 0x45;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 3 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 69 `i `uc ]
"1114
[; ;main.c: 1114:     Serial_Buffer_Out[4] = 0x5A;
[e = *U + &U _Serial_Buffer_Out * -> -> -> 4 `i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux -> -> 90 `i `uc ]
"1116
[; ;main.c: 1116:     INTCONbits.GIE=0;
[e = . . _INTCONbits 1 7 -> -> 0 `i `uc ]
"1117
[; ;main.c: 1117:     for (i=0; i<5;i++)
{
[e = _i -> 0 `i ]
[e $ < _i -> 5 `i 833  ]
[e $U 834  ]
[e :U 833 ]
"1118
[; ;main.c: 1118:     {
{
"1119
[; ;main.c: 1119:         Write1USART(Serial_Buffer_Out[i]);
[e ( _Write1USART (1 -> *U + &U _Serial_Buffer_Out * -> -> _i `ui `ux -> -> # *U &U _Serial_Buffer_Out `ui `ux `uc ]
"1120
[; ;main.c: 1120:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 5 `i 833  ]
[e :U 834 ]
}
"1121
[; ;main.c: 1121:     INTCONbits.GIE=1;
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"1123
[; ;main.c: 1123:     flushOut();
[e ( _flushOut ..  ]
"1124
[; ;main.c: 1124: }
[e :UE 832 ]
}
"1126
[; ;main.c: 1126: void InitTimer1(void)
[v _InitTimer1 `(v ~T0 @X0 1 ef ]
"1127
[; ;main.c: 1127: {
{
[e :U _InitTimer1 ]
[f ]
"1128
[; ;main.c: 1128:  T1CON = 0b00110001;
[e = _T1CON -> -> 49 `i `uc ]
"1131
[; ;main.c: 1131:     TMR1 = 0x9E57;
[e = _TMR1 -> -> 40535 `ui `us ]
"1132
[; ;main.c: 1132:  TMR1IF = 0;
[e = _TMR1IF -> -> 0 `i `b ]
"1133
[; ;main.c: 1133:  TMR1IE = 1;
[e = _TMR1IE -> -> 1 `i `b ]
"1134
[; ;main.c: 1134:     IPR1bits.TMR1IP=1;
[e = . . _IPR1bits 0 0 -> -> 1 `i `uc ]
"1136
[; ;main.c: 1136:     TMR1IF_triggered = 0;
[e = _TMR1IF_triggered -> -> 0 `i `uc ]
"1137
[; ;main.c: 1137: }
[e :UE 836 ]
}
