

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 16 10:29:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F65J50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   00233A                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _LowPowerCounter
   101   00233A  0014               	dw	20
   102   00233C  0000               	dw	0
   103                           
   104                           ;initializer for _errorcounter
   105   00233E  001E               	dw	30
   106   002340  0000               	dw	0
   107                           
   108                           ;initializer for _Vmotor_Time
   109   002342  07D0               	dw	2000
   110                           
   111                           ;initializer for _PWM_reg
   112   002344  3F                 	db	63
   113   000000                     _TMR1	set	4046
   114   000000                     _ADCON1bits	set	4033
   115   000000                     _TRISB	set	3987
   116   000000                     _RCREG1	set	4015
   117   000000                     _TXREG1	set	4014
   118   000000                     _SPBRGH1	set	3967
   119   000000                     _SPBRG1	set	4016
   120   000000                     _TXSTA1bits	set	4013
   121   000000                     _SSP2STAT	set	3949
   122   000000                     _SSP2ADD	set	3950
   123   000000                     _ADRESL	set	4035
   124   000000                     _ADRESH	set	4036
   125   000000                     _ADCON0bits	set	4034
   126   000000                     _T1CON	set	4045
   127   000000                     _ADRES	set	4035
   128   000000                     _T4CONbits	set	3958
   129   000000                     _ANCON0bits	set	4033
   130   000000                     _TRISD	set	3989
   131   000000                     _TRISC	set	3988
   132   000000                     _PIE1bits	set	3997
   133   000000                     _INTCONbits	set	4082
   134   000000                     _ACKEN2	set	31580
   135   000000                     _ACKDT2	set	31581
   136   000000                     _RCEN2	set	31579
   137   000000                     _PEN2	set	31578
   138   000000                     _RSEN2	set	31577
   139   000000                     _SEN2	set	31576
   140   000000                     _TRISD6	set	31918
   141   000000                     _TMR1IF	set	31984
   142   000000                     _SSP2CON2	set	3947
   143   000000                     _SSP2CON1	set	3948
   144   000000                     _PORTAbits	set	3968
   145   000000                     _PORTBbits	set	3969
   146   000000                     _LATAbits	set	3977
   147   000000                     _LATCbits	set	3979
   148   000000                     _GIE	set	32663
   149   000000                     _LATGbits	set	3983
   150   000000                     _TRISA	set	3986
   151   000000                     _TRISCbits	set	3988
   152   000000                     _PIR1bits	set	3998
   153   000000                     _LATDbits	set	3980
   154   000000                     _IPR1bits	set	3999
   155   000000                     _RCONbits	set	4048
   156   000000                     _TRISD5	set	31917
   157   000000                     _TMR1IE	set	31976
   158   000000                     _OSCCONbits	set	4051
   159   000000                     _INTCON3bits	set	4080
   160   000000                     _RCSTA1bits	set	4012
   161   000000                     _WDTCONbits	set	4032
   162   000000                     _TRISG	set	3992
   163   000000                     _TRISF	set	3991
   164   000000                     _TRISE	set	3990
   165   000000                     _CCP4CON	set	3955
   166   000000                     _T4CON	set	3958
   167   000000                     _PR4	set	3959
   168   000000                     _BAUDCON1bits	set	3966
   169   000000                     _SSP2BUF	set	3951
   170   000000                     _T3CONbits	set	3961
   171                           
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   002050                     __pcinit:
   176                           	callstack 0
   177   002050                     start_initialization:
   178                           	callstack 0
   179   002050                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Initialize objects allocated to COMRAM (11 bytes)
   183                           ; load TBLPTR registers with __pidataCOMRAM
   184   002050  0E3A               	movlw	low __pidataCOMRAM
   185   002052  6EF6               	movwf	tblptrl,c
   186   002054  0E23               	movlw	high __pidataCOMRAM
   187   002056  6EF7               	movwf	tblptrh,c
   188   002058  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   189   00205A  6EF8               	movwf	tblptru,c
   190   00205C  EE00  F04E         	lfsr	0,__pdataCOMRAM
   191   002060  EE10 F00B          	lfsr	1,11
   192   002064                     copy_data0:
   193   002064  0009               	tblrd		*+
   194   002066  CFF5 FFEE          	movff	tablat,postinc0
   195   00206A  50E5               	movf	postdec1,w,c
   196   00206C  50E1               	movf	fsr1l,w,c
   197   00206E  E1FA               	bnz	copy_data0
   198                           
   199                           ; Clear objects allocated to BANK0 (48 bytes)
   200   002070  EE00  F060         	lfsr	0,__pbssBANK0
   201   002074  0E30               	movlw	48
   202   002076                     clear_0:
   203   002076  6AEE               	clrf	postinc0,c
   204   002078  06E8               	decf	wreg,f,c
   205   00207A  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to COMRAM (49 bytes)
   208   00207C  EE00  F001         	lfsr	0,__pbssCOMRAM
   209   002080  0E31               	movlw	49
   210   002082                     clear_1:
   211   002082  6AEE               	clrf	postinc0,c
   212   002084  06E8               	decf	wreg,f,c
   213   002086  E1FD               	bnz	clear_1
   214   002088                     end_of_initialization:
   215                           	callstack 0
   216   002088                     __end_of__initialization:
   217                           	callstack 0
   218   002088  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   219   00208A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   220   00208C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   221   00208E  6EF8               	movwf	tblptru,c
   222   002090  0100               	movlb	0
   223   002092  EF83  F001         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226   000001                     __pbssCOMRAM:
   227                           	callstack 0
   228   000001                     _holdTimeLeft:
   229                           	callstack 0
   230   000001                     	ds	2
   231   000003                     _holdTimeRight:
   232                           	callstack 0
   233   000003                     	ds	2
   234   000005                     _temp:
   235                           	callstack 0
   236   000005                     	ds	2
   237   000007                     _dispense:
   238                           	callstack 0
   239   000007                     	ds	2
   240   000009                     _VOLTAGE:
   241                           	callstack 0
   242   000009                     	ds	2
   243   00000B                     _IR_SENSORF:
   244                           	callstack 0
   245   00000B                     	ds	2
   246   00000D                     _i:
   247                           	callstack 0
   248   00000D                     	ds	2
   249   00000F                     _NUM_REC:
   250                           	callstack 0
   251   00000F                     	ds	2
   252   000011                     _i_RUN_ZERO:
   253                           	callstack 0
   254   000011                     	ds	2
   255   000013                     _NUM:
   256                           	callstack 0
   257   000013                     	ds	2
   258   000015                     _Motor_Pause_Time:
   259                           	callstack 0
   260   000015                     	ds	2
   261   000017                     _Device_ID:
   262                           	callstack 0
   263   000017                     	ds	2
   264   000019                     _Motor_Stop_Delay_Time:
   265                           	callstack 0
   266   000019                     	ds	2
   267   00001B                     _Motor_Speed:
   268                           	callstack 0
   269   00001B                     	ds	2
   270   00001D                     _ETemp:
   271                           	callstack 0
   272   00001D                     	ds	2
   273   00001F                     _EAdd_Low:
   274                           	callstack 0
   275   00001F                     	ds	2
   276   000021                     _EAdd_High:
   277                           	callstack 0
   278   000021                     	ds	2
   279   000023                     _Serial_Count:
   280                           	callstack 0
   281   000023                     	ds	2
   282   000025                     _TMR1IF_triggered:
   283                           	callstack 0
   284   000025                     	ds	1
   285   000026                     _PWM_Duty_Cycle:
   286                           	callstack 0
   287   000026                     	ds	1
   288   000027                     _delay_motor_stop_time:
   289                           	callstack 0
   290   000027                     	ds	1
   291   000028                     _vib_Time:
   292                           	callstack 0
   293   000028                     	ds	1
   294   000029                     _pause_Time:
   295                           	callstack 0
   296   000029                     	ds	1
   297   00002A                     _OpMode:
   298                           	callstack 0
   299   00002A                     	ds	1
   300   00002B                     _data:
   301                           	callstack 0
   302   00002B                     	ds	1
   303   00002C                     _vibration_mode:
   304                           	callstack 0
   305   00002C                     	ds	1
   306   00002D                     _Busy:
   307                           	callstack 0
   308   00002D                     	ds	1
   309   00002E                     _motor_status:
   310                           	callstack 0
   311   00002E                     	ds	1
   312   00002F                     _Stop:
   313                           	callstack 0
   314   00002F                     	ds	1
   315   000030                     _Serial_GData:
   316                           	callstack 0
   317   000030                     	ds	1
   318   000031                     _Serial_Flag:
   319                           	callstack 0
   320   000031                     	ds	1
   321                           
   322                           	psect	dataCOMRAM
   323   00004E                     __pdataCOMRAM:
   324                           	callstack 0
   325   00004E                     _LowPowerCounter:
   326                           	callstack 0
   327   00004E                     	ds	4
   328   000052                     _errorcounter:
   329                           	callstack 0
   330   000052                     	ds	4
   331   000056                     _Vmotor_Time:
   332                           	callstack 0
   333   000056                     	ds	2
   334   000058                     _PWM_reg:
   335                           	callstack 0
   336   000058                     	ds	1
   337                           
   338                           	psect	bssBANK0
   339   000060                     __pbssBANK0:
   340                           	callstack 0
   341   000060                     _Serial_Buffer_Out:
   342                           	callstack 0
   343   000060                     	ds	16
   344   000070                     _Serial_Temp_Buffer:
   345                           	callstack 0
   346   000070                     	ds	16
   347   000080                     _Serial_Buffer:
   348                           	callstack 0
   349   000080                     	ds	16
   350                           
   351                           	psect	cstackCOMRAM
   352   000032                     __pcstackCOMRAM:
   353                           	callstack 0
   354   000032                     Read1USART@result:
   355                           	callstack 0
   356   000032                     i2Write1USART@data:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x0
   360   000032                     	ds	1
   361   000033                     ??_high_isr:
   362                           
   363                           ; 1 bytes @ 0x1
   364   000033                     	ds	2
   365   000035                     high_isr@Temp:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369   000035                     	ds	1
   370   000036                     high_isr@c:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x4
   374   000036                     	ds	1
   375   000037                     high_isr@i:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379   000037                     	ds	1
   380   000038                     ??_STLED316s_SPI_SendData:
   381   000038                     ??_i2c_Wait:
   382   000038                     ?_Read_IR:
   383                           	callstack 0
   384   000038                     ?___awdiv:
   385                           	callstack 0
   386   000038                     ?___awmod:
   387                           	callstack 0
   388   000038                     ?___aldiv:
   389                           	callstack 0
   390   000038                     Write1USART@data:
   391                           	callstack 0
   392   000038                     delay_1ms@time:
   393                           	callstack 0
   394   000038                     flush@i:
   395                           	callstack 0
   396   000038                     flushOut@i:
   397                           	callstack 0
   398   000038                     Get7Seg@Digit:
   399                           	callstack 0
   400   000038                     ___awdiv@dividend:
   401                           	callstack 0
   402   000038                     ___awmod@dividend:
   403                           	callstack 0
   404   000038                     ___aldiv@dividend:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x6
   408   000038                     	ds	1
   409   000039                     ?_i2c_Read:
   410                           	callstack 0
   411   000039                     i2c_Write@data:
   412                           	callstack 0
   413   000039                     i2c_Address@mode:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x7
   417   000039                     	ds	1
   418   00003A                     ??_delay_1ms:
   419   00003A                     ??_Get7Seg:
   420   00003A                     STLED316s_SPI_SendData@Data:
   421                           	callstack 0
   422   00003A                     i2c_Address@address:
   423                           	callstack 0
   424   00003A                     readWeighingData@i:
   425                           	callstack 0
   426   00003A                     ___awdiv@divisor:
   427                           	callstack 0
   428   00003A                     ___awmod@divisor:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x8
   432   00003A                     	ds	1
   433   00003B                     ??_AD_capture_BattVoltage:
   434   00003B                     STLED316s_SPI_SendData@temp:
   435                           	callstack 0
   436   00003B                     i2c_Address@l_address:
   437                           	callstack 0
   438   00003B                     i2c_Read@ack:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x9
   442   00003B                     	ds	1
   443   00003C                     STLED316s_SPI_SendData@i:
   444                           	callstack 0
   445   00003C                     Get7Seg@Data:
   446                           	callstack 0
   447   00003C                     i2c_Read@i2cReadData:
   448                           	callstack 0
   449   00003C                     ___awdiv@counter:
   450                           	callstack 0
   451   00003C                     ___awmod@counter:
   452                           	callstack 0
   453   00003C                     ___aldiv@divisor:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0xA
   457   00003C                     	ds	1
   458   00003D                     STLED316s_SPI_SendData@t:
   459                           	callstack 0
   460   00003D                     ___awdiv@sign:
   461                           	callstack 0
   462   00003D                     ___awmod@sign:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xB
   466   00003D                     	ds	1
   467   00003E                     ??_InitSTLED316:
   468   00003E                     ??_WriteSTLED316SErr:
   469   00003E                     ??_WriteSTLED316SMode:
   470   00003E                     WriteSTLED316SVibMode@v_mode:
   471                           	callstack 0
   472   00003E                     ___awdiv@quotient:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xC
   476   00003E                     	ds	2
   477   000040                     InitSTLED316@Brightness:
   478                           	callstack 0
   479   000040                     WriteSTLED316SMode@msg:
   480                           	callstack 0
   481   000040                     WriteSTLED316SErr@msg:
   482                           	callstack 0
   483   000040                     ___aldiv@counter:
   484                           	callstack 0
   485   000040                     WriteSTLED316SData@number:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0xE
   489   000040                     	ds	1
   490   000041                     ??_MotorPosition_Init:
   491   000041                     ??_Homing_Again_Auto:
   492   000041                     ___aldiv@sign:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0xF
   496   000041                     	ds	1
   497   000042                     WriteSTLED316SData@v_mode:
   498                           	callstack 0
   499   000042                     ___aldiv@quotient:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x10
   503   000042                     	ds	1
   504   000043                     WriteSTLED316SData@NUM_DIG0:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x11
   508   000043                     	ds	2
   509   000045                     WriteSTLED316SData@NUM_DIG1:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x13
   513   000045                     	ds	1
   514   000046                     ?_read_i2c:
   515                           	callstack 0
   516   000046                     write_i2c@address:
   517                           	callstack 0
   518   000046                     read_i2c@address:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x14
   522   000046                     	ds	1
   523   000047                     WriteSTLED316SData@data3:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x15
   527   000047                     	ds	1
   528   000048                     WriteSTLED316SData@data4:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x16
   532   000048                     	ds	1
   533   000049                     ??_Homing_Again_Manual:
   534                           
   535                           ; 1 bytes @ 0x17
   536   000049                     	ds	1
   537   00004A                     write_i2c@data:
   538                           	callstack 0
   539   00004A                     read_i2c@read_byte:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x18
   543   00004A                     	ds	2
   544   00004C                     ??_main:
   545                           
   546                           ; 1 bytes @ 0x1A
   547   00004C                     	ds	2
   548                           
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 158 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels required when called: 6
   574 ;; This function calls:
   575 ;;		_AD_capture_BattVoltage
   576 ;;		_Homing_Again_Auto
   577 ;;		_Homing_Again_Manual
   578 ;;		_InitSTLED316
   579 ;;		_InitTimer1
   580 ;;		_MotorPosition_Init
   581 ;;		_ToggleVIB_Mode
   582 ;;		_Write1USART
   583 ;;		_WriteSTLED316SData
   584 ;;		_WriteSTLED316SVibMode
   585 ;;		_flush
   586 ;;		_flushOut
   587 ;;		_i2c_Init
   588 ;;		_init
   589 ;;		_initMotor
   590 ;;		_initUSART
   591 ;;		_read_i2c
   592 ;;		_write_i2c
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text0
   599   000306                     __ptext0:
   600                           	callstack 0
   601   000306                     _main:
   602                           	callstack 25
   603   000306                     
   604                           ;main.c: 159:     GIE = 0;
   605   000306  9EF2               	bcf	4082,7,c	;volatile
   606   000308                     
   607                           ;main.c: 160:     init();
   608   000308  EC42  F00F         	call	_init	;wreg free
   609   00030C                     
   610                           ;main.c: 161:     InitSTLED316(0x77);
   611   00030C  0E77               	movlw	119
   612   00030E  ECBC  F00E         	call	_InitSTLED316
   613   000312                     
   614                           ;main.c: 162:     initMotor();
   615   000312  EC90  F011         	call	_initMotor	;wreg free
   616   000316                     
   617                           ;main.c: 163:     i2c_Init();
   618   000316  EC65  F011         	call	_i2c_Init	;wreg free
   619   00031A                     
   620                           ;main.c: 164:     initUSART();
   621   00031A  EC0E  F011         	call	_initUSART	;wreg free
   622   00031E                     
   623                           ;main.c: 165:     InitTimer1();
   624   00031E  EC59  F011         	call	_InitTimer1	;wreg free
   625   000322                     
   626                           ;main.c: 167:     LATCbits.LATC1 = 0;
   627   000322  928B               	bcf	139,1,c	;volatile
   628   000324                     
   629                           ;main.c: 168:     LATAbits.LATA2 = 0;
   630   000324  9489               	bcf	137,2,c	;volatile
   631   000326                     
   632                           ;main.c: 169:     errorcounter = 30;
   633   000326  0E1E               	movlw	30
   634   000328  6E52               	movwf	_errorcounter^0,c	;volatile
   635   00032A  0E00               	movlw	0
   636   00032C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   637   00032E  0E00               	movlw	0
   638   000330  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   639   000332  0E00               	movlw	0
   640   000334  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   641   000336                     
   642                           ;main.c: 173:     RCONbits.IPEN = 1;
   643   000336  8ED0               	bsf	208,7,c	;volatile
   644   000338                     
   645                           ;main.c: 176:     IPR1bits.RCIP = 1;
   646   000338  8A9F               	bsf	159,5,c	;volatile
   647   00033A                     
   648                           ;main.c: 179:     INTCONbits.GIEH = 1;
   649   00033A  8EF2               	bsf	242,7,c	;volatile
   650   00033C                     
   651                           ;main.c: 180:     INTCONbits.GIE = 1;
   652   00033C  8EF2               	bsf	242,7,c	;volatile
   653   00033E                     
   654                           ;main.c: 184:     WDTCONbits.SWDTEN = 0;
   655   00033E  90C0               	bcf	192,0,c	;volatile
   656   000340                     
   657                           ;main.c: 185:     LATDbits.LATD0 = 1;
   658   000340  808C               	bsf	140,0,c	;volatile
   659   000342                     
   660                           ;main.c: 186:     LATDbits.LATD1 = 1;
   661   000342  828C               	bsf	140,1,c	;volatile
   662   000344                     
   663                           ;main.c: 188:     WriteSTLED316SData(36, 0xFF);
   664   000344  0E00               	movlw	0
   665   000346  6E41               	movwf	(WriteSTLED316SData@number+1)^0,c
   666   000348  0E24               	movlw	36
   667   00034A  6E40               	movwf	WriteSTLED316SData@number^0,c
   668   00034C  0EFF               	movlw	255
   669   00034E  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
   670   000350  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
   671   000354                     
   672                           ;main.c: 189:     _delay((unsigned long)((500)*(8000000/4000.0)));
   673   000354  0E06               	movlw	6
   674   000356  6E4D               	movwf	(??_main+1)^0,c
   675   000358  0E13               	movlw	19
   676   00035A  6E4C               	movwf	??_main^0,c
   677   00035C  0EAE               	movlw	174
   678   00035E                     u3417:
   679   00035E  2EE8               	decfsz	wreg,f,c
   680   000360  D7FE               	bra	u3417
   681   000362  2E4C               	decfsz	??_main^0,f,c
   682   000364  D7FC               	bra	u3417
   683   000366  2E4D               	decfsz	(??_main+1)^0,f,c
   684   000368  D7FA               	bra	u3417
   685   00036A                     
   686                           ;main.c: 190:     AD_capture_BattVoltage();
   687   00036A  EC4B  F010         	call	_AD_capture_BattVoltage	;wreg free
   688   00036E                     
   689                           ;main.c: 199:     INTCONbits.GIE = 0;
   690   00036E  9EF2               	bcf	242,7,c	;volatile
   691   000370                     
   692                           ;main.c: 200:     ETemp = read_i2c(0x0010);
   693   000370  0E10               	movlw	16
   694   000372  6E46               	movwf	read_i2c@address^0,c
   695   000374  0E00               	movlw	0
   696   000376  6E47               	movwf	(read_i2c@address+1)^0,c
   697   000378  0E00               	movlw	0
   698   00037A  6E48               	movwf	(read_i2c@address+2)^0,c
   699   00037C  0E00               	movlw	0
   700   00037E  6E49               	movwf	(read_i2c@address+3)^0,c
   701   000380  EC7B  F00F         	call	_read_i2c	;wreg free
   702   000384  C046  F01D         	movff	?_read_i2c,_ETemp
   703   000388  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   704   00038C                     
   705                           ;main.c: 201:     INTCONbits.GIE = 1;
   706   00038C  8EF2               	bsf	242,7,c	;volatile
   707   00038E                     
   708                           ;main.c: 203:     vibration_mode = ETemp & 0x00FF;
   709   00038E  C01D  F02C         	movff	_ETemp,_vibration_mode
   710   000392                     
   711                           ;main.c: 204:     if (vibration_mode > 1) {
   712   000392  0E01               	movlw	1
   713   000394  642C               	cpfsgt	_vibration_mode^0,c
   714   000396  EFCF  F001         	goto	u2591
   715   00039A  EFD1  F001         	goto	u2590
   716   00039E                     u2591:
   717   00039E  EFE2  F001         	goto	l3841
   718   0003A2                     u2590:
   719   0003A2                     
   720                           ;main.c: 205:         vibration_mode = 1;
   721   0003A2  0E01               	movlw	1
   722   0003A4  6E2C               	movwf	_vibration_mode^0,c
   723   0003A6                     
   724                           ;main.c: 207:         INTCONbits.GIE = 0;
   725   0003A6  9EF2               	bcf	242,7,c	;volatile
   726   0003A8                     
   727                           ;main.c: 208:         write_i2c(0x0010, vibration_mode);
   728   0003A8  0E10               	movlw	16
   729   0003AA  6E46               	movwf	write_i2c@address^0,c
   730   0003AC  0E00               	movlw	0
   731   0003AE  6E47               	movwf	(write_i2c@address+1)^0,c
   732   0003B0  0E00               	movlw	0
   733   0003B2  6E48               	movwf	(write_i2c@address+2)^0,c
   734   0003B4  0E00               	movlw	0
   735   0003B6  6E49               	movwf	(write_i2c@address+3)^0,c
   736   0003B8  C02C  F04A         	movff	_vibration_mode,write_i2c@data
   737   0003BC  6A4B               	clrf	(write_i2c@data+1)^0,c
   738   0003BE  EC03  F010         	call	_write_i2c	;wreg free
   739   0003C2                     
   740                           ;main.c: 209:         INTCONbits.GIE = 1;
   741   0003C2  8EF2               	bsf	242,7,c	;volatile
   742   0003C4                     l3841:
   743                           
   744                           ;main.c: 212:     NUM = 1;
   745   0003C4  0E00               	movlw	0
   746   0003C6  6E14               	movwf	(_NUM+1)^0,c
   747   0003C8  0E01               	movlw	1
   748   0003CA  6E13               	movwf	_NUM^0,c
   749                           
   750                           ;main.c: 213:     WriteSTLED316SData(NUM, vibration_mode);
   751   0003CC  C013  F040         	movff	_NUM,WriteSTLED316SData@number
   752   0003D0  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
   753   0003D4  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   754   0003D8  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
   755   0003DC                     
   756                           ;main.c: 214:     NUM_REC = 1;
   757   0003DC  0E00               	movlw	0
   758   0003DE  6E10               	movwf	(_NUM_REC+1)^0,c
   759   0003E0  0E01               	movlw	1
   760   0003E2  6E0F               	movwf	_NUM_REC^0,c
   761   0003E4                     
   762                           ;main.c: 219:     INTCONbits.GIE = 0;
   763   0003E4  9EF2               	bcf	242,7,c	;volatile
   764   0003E6                     
   765                           ;main.c: 220:     ETemp = read_i2c(0x0020);
   766   0003E6  0E20               	movlw	32
   767   0003E8  6E46               	movwf	read_i2c@address^0,c
   768   0003EA  0E00               	movlw	0
   769   0003EC  6E47               	movwf	(read_i2c@address+1)^0,c
   770   0003EE  0E00               	movlw	0
   771   0003F0  6E48               	movwf	(read_i2c@address+2)^0,c
   772   0003F2  0E00               	movlw	0
   773   0003F4  6E49               	movwf	(read_i2c@address+3)^0,c
   774   0003F6  EC7B  F00F         	call	_read_i2c	;wreg free
   775   0003FA  C046  F01D         	movff	?_read_i2c,_ETemp
   776   0003FE  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   777   000402                     
   778                           ;main.c: 221:     INTCONbits.GIE = 1;
   779   000402  8EF2               	bsf	242,7,c	;volatile
   780                           
   781                           ;main.c: 223:     Device_ID = ETemp & 0x00FF;
   782   000404  501D               	movf	_ETemp^0,w,c
   783   000406  6E17               	movwf	_Device_ID^0,c
   784   000408  6A18               	clrf	(_Device_ID+1)^0,c
   785   00040A                     
   786                           ;main.c: 224:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   787   00040A  5018               	movf	(_Device_ID+1)^0,w,c
   788   00040C  E109               	bnz	u2600
   789   00040E  0E31               	movlw	49
   790   000410  5C17               	subwf	_Device_ID^0,w,c
   791   000412  A0D8               	btfss	status,0,c
   792   000414  EF0E  F002         	goto	u2601
   793   000418  EF10  F002         	goto	u2600
   794   00041C                     u2601:
   795   00041C  EF1B  F002         	goto	l3855
   796   000420                     u2600:
   797   000420  5018               	movf	(_Device_ID+1)^0,w,c
   798   000422  E109               	bnz	u2610
   799   000424  0E3B               	movlw	59
   800   000426  5C17               	subwf	_Device_ID^0,w,c
   801   000428  A0D8               	btfss	status,0,c
   802   00042A  EF19  F002         	goto	u2611
   803   00042E  EF1B  F002         	goto	u2610
   804   000432                     u2611:
   805   000432  EF2F  F002         	goto	l3863
   806   000436                     u2610:
   807   000436                     l3855:
   808                           
   809                           ;main.c: 225:         Device_ID = 0x31;
   810   000436  0E00               	movlw	0
   811   000438  6E18               	movwf	(_Device_ID+1)^0,c
   812   00043A  0E31               	movlw	49
   813   00043C  6E17               	movwf	_Device_ID^0,c
   814   00043E                     
   815                           ;main.c: 227:         INTCONbits.GIE = 0;
   816   00043E  9EF2               	bcf	242,7,c	;volatile
   817   000440                     
   818                           ;main.c: 228:         write_i2c(0x0020, Device_ID);
   819   000440  0E20               	movlw	32
   820   000442  6E46               	movwf	write_i2c@address^0,c
   821   000444  0E00               	movlw	0
   822   000446  6E47               	movwf	(write_i2c@address+1)^0,c
   823   000448  0E00               	movlw	0
   824   00044A  6E48               	movwf	(write_i2c@address+2)^0,c
   825   00044C  0E00               	movlw	0
   826   00044E  6E49               	movwf	(write_i2c@address+3)^0,c
   827   000450  C017  F04A         	movff	_Device_ID,write_i2c@data
   828   000454  C018  F04B         	movff	_Device_ID+1,write_i2c@data+1
   829   000458  EC03  F010         	call	_write_i2c	;wreg free
   830   00045C                     
   831                           ;main.c: 229:         INTCONbits.GIE = 1;
   832   00045C  8EF2               	bsf	242,7,c	;volatile
   833   00045E                     l3863:
   834                           
   835                           ;main.c: 235:     INTCONbits.GIE = 0;
   836   00045E  9EF2               	bcf	242,7,c	;volatile
   837   000460                     
   838                           ;main.c: 236:     ETemp = read_i2c(0x0060);
   839   000460  0E60               	movlw	96
   840   000462  6E46               	movwf	read_i2c@address^0,c
   841   000464  0E00               	movlw	0
   842   000466  6E47               	movwf	(read_i2c@address+1)^0,c
   843   000468  0E00               	movlw	0
   844   00046A  6E48               	movwf	(read_i2c@address+2)^0,c
   845   00046C  0E00               	movlw	0
   846   00046E  6E49               	movwf	(read_i2c@address+3)^0,c
   847   000470  EC7B  F00F         	call	_read_i2c	;wreg free
   848   000474  C046  F01D         	movff	?_read_i2c,_ETemp
   849   000478  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   850   00047C                     
   851                           ;main.c: 237:     INTCONbits.GIE = 1;
   852   00047C  8EF2               	bsf	242,7,c	;volatile
   853   00047E                     
   854                           ;main.c: 239:     pause_Time = ETemp & 0x00FF;
   855   00047E  C01D  F029         	movff	_ETemp,_pause_Time	;volatile
   856   000482                     
   857                           ;main.c: 240:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   858   000482  0E2F               	movlw	47
   859   000484  6429               	cpfsgt	_pause_Time^0,c	;volatile
   860   000486  EF47  F002         	goto	u2621
   861   00048A  EF49  F002         	goto	u2620
   862   00048E                     u2621:
   863   00048E  EF51  F002         	goto	l3875
   864   000492                     u2620:
   865   000492  0E35               	movlw	53
   866   000494  6429               	cpfsgt	_pause_Time^0,c	;volatile
   867   000496  EF4F  F002         	goto	u2631
   868   00049A  EF51  F002         	goto	u2630
   869   00049E                     u2631:
   870   00049E  EF8E  F002         	goto	l3897
   871   0004A2                     u2630:
   872   0004A2                     l3875:
   873                           
   874                           ;main.c: 241:         pause_Time = 0x30;
   875   0004A2  0E30               	movlw	48
   876   0004A4  6E29               	movwf	_pause_Time^0,c	;volatile
   877                           
   878                           ;main.c: 242:         Motor_Pause_Time = 0;
   879   0004A6  0E00               	movlw	0
   880   0004A8  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   881   0004AA  0E00               	movlw	0
   882   0004AC  6E15               	movwf	_Motor_Pause_Time^0,c
   883   0004AE                     
   884                           ;main.c: 244:         INTCONbits.GIE = 0;
   885   0004AE  9EF2               	bcf	242,7,c	;volatile
   886   0004B0                     
   887                           ;main.c: 245:         write_i2c(0x0060, pause_Time);
   888   0004B0  0E60               	movlw	96
   889   0004B2  6E46               	movwf	write_i2c@address^0,c
   890   0004B4  0E00               	movlw	0
   891   0004B6  6E47               	movwf	(write_i2c@address+1)^0,c
   892   0004B8  0E00               	movlw	0
   893   0004BA  6E48               	movwf	(write_i2c@address+2)^0,c
   894   0004BC  0E00               	movlw	0
   895   0004BE  6E49               	movwf	(write_i2c@address+3)^0,c
   896   0004C0  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
   897   0004C4  6A4B               	clrf	(write_i2c@data+1)^0,c
   898   0004C6  EC03  F010         	call	_write_i2c	;wreg free
   899   0004CA                     
   900                           ;main.c: 246:         INTCONbits.GIE = 1;
   901   0004CA  8EF2               	bsf	242,7,c	;volatile
   902                           
   903                           ;main.c: 247:     } else {
   904   0004CC  EFB3  F002         	goto	l180
   905   0004D0                     l3883:
   906                           
   907                           ;main.c: 251:                 Motor_Pause_Time = 0;
   908   0004D0  0E00               	movlw	0
   909   0004D2  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   910   0004D4  0E00               	movlw	0
   911   0004D6  6E15               	movwf	_Motor_Pause_Time^0,c
   912                           
   913                           ;main.c: 252:                 pause_Time = 0x30;
   914   0004D8  0E30               	movlw	48
   915   0004DA  6E29               	movwf	_pause_Time^0,c	;volatile
   916                           
   917                           ;main.c: 253:                 break;
   918   0004DC  EFB3  F002         	goto	l180
   919   0004E0                     l3885:
   920                           
   921                           ;main.c: 256:                 Motor_Pause_Time = 1000;
   922   0004E0  0E03               	movlw	3
   923   0004E2  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   924   0004E4  0EE8               	movlw	232
   925   0004E6  6E15               	movwf	_Motor_Pause_Time^0,c
   926                           
   927                           ;main.c: 257:                 break;
   928   0004E8  EFB3  F002         	goto	l180
   929   0004EC                     l3887:
   930                           
   931                           ;main.c: 260:                 Motor_Pause_Time = 2000;
   932   0004EC  0E07               	movlw	7
   933   0004EE  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   934   0004F0  0ED0               	movlw	208
   935   0004F2  6E15               	movwf	_Motor_Pause_Time^0,c
   936                           
   937                           ;main.c: 261:                 break;
   938   0004F4  EFB3  F002         	goto	l180
   939   0004F8                     l3889:
   940                           
   941                           ;main.c: 264:                 Motor_Pause_Time = 3000;
   942   0004F8  0E0B               	movlw	11
   943   0004FA  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   944   0004FC  0EB8               	movlw	184
   945   0004FE  6E15               	movwf	_Motor_Pause_Time^0,c
   946                           
   947                           ;main.c: 265:                 break;
   948   000500  EFB3  F002         	goto	l180
   949   000504                     l3891:
   950                           
   951                           ;main.c: 268:                 Motor_Pause_Time = 4000;
   952   000504  0E0F               	movlw	15
   953   000506  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   954   000508  0EA0               	movlw	160
   955   00050A  6E15               	movwf	_Motor_Pause_Time^0,c
   956                           
   957                           ;main.c: 269:                 break;
   958   00050C  EFB3  F002         	goto	l180
   959   000510                     l3893:
   960                           
   961                           ;main.c: 272:                 Motor_Pause_Time = 5000;
   962   000510  0E13               	movlw	19
   963   000512  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   964   000514  0E88               	movlw	136
   965   000516  6E15               	movwf	_Motor_Pause_Time^0,c
   966                           
   967                           ;main.c: 273:                 break;
   968   000518  EFB3  F002         	goto	l180
   969   00051C                     l3897:
   970   00051C  5029               	movf	_pause_Time^0,w,c	;volatile
   971   00051E  6E4C               	movwf	??_main^0,c
   972   000520  6A4D               	clrf	(??_main+1)^0,c
   973                           
   974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 1, Range of values is 0 to 0
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte            4     3 (average)
   980                           ;	Chosen strategy is simple_byte
   981   000522  504D               	movf	(??_main+1)^0,w,c
   982   000524  0A00               	xorlw	0	; case 0
   983   000526  B4D8               	btfsc	status,2,c
   984   000528  EF98  F002         	goto	l4751
   985   00052C  EF68  F002         	goto	l3883
   986   000530                     l4751:
   987                           
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 6, Range of values is 48 to 53
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte           19    10 (average)
   993                           ;	Chosen strategy is simple_byte
   994   000530  504C               	movf	??_main^0,w,c
   995   000532  0A30               	xorlw	48	; case 48
   996   000534  B4D8               	btfsc	status,2,c
   997   000536  EF68  F002         	goto	l3883
   998   00053A  0A01               	xorlw	1	; case 49
   999   00053C  B4D8               	btfsc	status,2,c
  1000   00053E  EF70  F002         	goto	l3885
  1001   000542  0A03               	xorlw	3	; case 50
  1002   000544  B4D8               	btfsc	status,2,c
  1003   000546  EF76  F002         	goto	l3887
  1004   00054A  0A01               	xorlw	1	; case 51
  1005   00054C  B4D8               	btfsc	status,2,c
  1006   00054E  EF7C  F002         	goto	l3889
  1007   000552  0A07               	xorlw	7	; case 52
  1008   000554  B4D8               	btfsc	status,2,c
  1009   000556  EF82  F002         	goto	l3891
  1010   00055A  0A01               	xorlw	1	; case 53
  1011   00055C  B4D8               	btfsc	status,2,c
  1012   00055E  EF88  F002         	goto	l3893
  1013   000562  EF68  F002         	goto	l3883
  1014   000566                     l180:
  1015                           
  1016                           ;main.c: 280:     INTCONbits.GIE = 0;
  1017   000566  9EF2               	bcf	242,7,c	;volatile
  1018   000568                     
  1019                           ;main.c: 281:     ETemp = read_i2c(0x0050);
  1020   000568  0E50               	movlw	80
  1021   00056A  6E46               	movwf	read_i2c@address^0,c
  1022   00056C  0E00               	movlw	0
  1023   00056E  6E47               	movwf	(read_i2c@address+1)^0,c
  1024   000570  0E00               	movlw	0
  1025   000572  6E48               	movwf	(read_i2c@address+2)^0,c
  1026   000574  0E00               	movlw	0
  1027   000576  6E49               	movwf	(read_i2c@address+3)^0,c
  1028   000578  EC7B  F00F         	call	_read_i2c	;wreg free
  1029   00057C  C046  F01D         	movff	?_read_i2c,_ETemp
  1030   000580  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1031   000584                     
  1032                           ;main.c: 282:     INTCONbits.GIE = 1;
  1033   000584  8EF2               	bsf	242,7,c	;volatile
  1034   000586                     
  1035                           ;main.c: 284:     delay_motor_stop_time = ETemp & 0x00FF;
  1036   000586  C01D  F027         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1037   00058A                     
  1038                           ;main.c: 285:     if (delay_motor_stop_time > 0x96) {
  1039   00058A  0E96               	movlw	150
  1040   00058C  6427               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1041   00058E  EFCB  F002         	goto	u2641
  1042   000592  EFCD  F002         	goto	u2640
  1043   000596                     u2641:
  1044   000596  EFE4  F002         	goto	l190
  1045   00059A                     u2640:
  1046   00059A                     
  1047                           ;main.c: 286:         delay_motor_stop_time = 0x00;
  1048   00059A  0E00               	movlw	0
  1049   00059C  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  1050   00059E                     
  1051                           ;main.c: 288:         INTCONbits.GIE = 0;
  1052   00059E  9EF2               	bcf	242,7,c	;volatile
  1053   0005A0                     
  1054                           ;main.c: 289:         write_i2c(0x0050, delay_motor_stop_time);
  1055   0005A0  0E50               	movlw	80
  1056   0005A2  6E46               	movwf	write_i2c@address^0,c
  1057   0005A4  0E00               	movlw	0
  1058   0005A6  6E47               	movwf	(write_i2c@address+1)^0,c
  1059   0005A8  0E00               	movlw	0
  1060   0005AA  6E48               	movwf	(write_i2c@address+2)^0,c
  1061   0005AC  0E00               	movlw	0
  1062   0005AE  6E49               	movwf	(write_i2c@address+3)^0,c
  1063   0005B0  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1064   0005B4  6A4B               	clrf	(write_i2c@data+1)^0,c
  1065   0005B6  EC03  F010         	call	_write_i2c	;wreg free
  1066   0005BA                     
  1067                           ;main.c: 290:         INTCONbits.GIE = 1;
  1068   0005BA  8EF2               	bsf	242,7,c	;volatile
  1069   0005BC                     
  1070                           ;main.c: 292:         Motor_Stop_Delay_Time = 0;
  1071   0005BC  0E00               	movlw	0
  1072   0005BE  6E1A               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1073   0005C0  0E00               	movlw	0
  1074   0005C2  6E19               	movwf	_Motor_Stop_Delay_Time^0,c
  1075                           
  1076                           ;main.c: 293:     } else {
  1077   0005C4  EFE7  F002         	goto	l191
  1078   0005C8                     l190:
  1079                           
  1080                           ;main.c: 294:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1081   0005C8  C027  F019         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1082   0005CC  6A1A               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1083   0005CE                     l191:
  1084                           
  1085                           ;main.c: 300:     INTCONbits.GIE = 0;
  1086   0005CE  9EF2               	bcf	242,7,c	;volatile
  1087   0005D0                     
  1088                           ;main.c: 301:     ETemp = read_i2c(0x0040);
  1089   0005D0  0E40               	movlw	64
  1090   0005D2  6E46               	movwf	read_i2c@address^0,c
  1091   0005D4  0E00               	movlw	0
  1092   0005D6  6E47               	movwf	(read_i2c@address+1)^0,c
  1093   0005D8  0E00               	movlw	0
  1094   0005DA  6E48               	movwf	(read_i2c@address+2)^0,c
  1095   0005DC  0E00               	movlw	0
  1096   0005DE  6E49               	movwf	(read_i2c@address+3)^0,c
  1097   0005E0  EC7B  F00F         	call	_read_i2c	;wreg free
  1098   0005E4  C046  F01D         	movff	?_read_i2c,_ETemp
  1099   0005E8  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1100   0005EC                     
  1101                           ;main.c: 302:     INTCONbits.GIE = 1
  1102   0005EC  8EF2               	bsf	242,7,c	;volatile
  1103   0005EE                     
  1104                           ;main.c: 304:     vib_Time = ETemp & 0x00FF;
  1105   0005EE  C01D  F028         	movff	_ETemp,_vib_Time	;volatile
  1106   0005F2                     
  1107                           ;main.c: 305:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85)) {
  1108   0005F2  0E81               	movlw	129
  1109   0005F4  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1110   0005F6  B4D8               	btfsc	status,2,c
  1111   0005F8  EF00  F003         	goto	u2651
  1112   0005FC  EF02  F003         	goto	u2650
  1113   000600                     u2651:
  1114   000600  EF5D  F003         	goto	l3953
  1115   000604                     u2650:
  1116   000604  0E82               	movlw	130
  1117   000606  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1118   000608  B4D8               	btfsc	status,2,c
  1119   00060A  EF09  F003         	goto	u2661
  1120   00060E  EF0B  F003         	goto	u2660
  1121   000612                     u2661:
  1122   000612  EF5D  F003         	goto	l3953
  1123   000616                     u2660:
  1124   000616  0E83               	movlw	131
  1125   000618  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1126   00061A  B4D8               	btfsc	status,2,c
  1127   00061C  EF12  F003         	goto	u2671
  1128   000620  EF14  F003         	goto	u2670
  1129   000624                     u2671:
  1130   000624  EF5D  F003         	goto	l3953
  1131   000628                     u2670:
  1132   000628  0E84               	movlw	132
  1133   00062A  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1134   00062C  B4D8               	btfsc	status,2,c
  1135   00062E  EF1B  F003         	goto	u2681
  1136   000632  EF1D  F003         	goto	u2680
  1137   000636                     u2681:
  1138   000636  EF5D  F003         	goto	l3953
  1139   00063A                     u2680:
  1140   00063A  0E85               	movlw	133
  1141   00063C  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1142   00063E  B4D8               	btfsc	status,2,c
  1143   000640  EF24  F003         	goto	u2691
  1144   000644  EF26  F003         	goto	u2690
  1145   000648                     u2691:
  1146   000648  EF5D  F003         	goto	l3953
  1147   00064C                     u2690:
  1148   00064C                     
  1149                           ;main.c: 306:         Vmotor_Time = 2000;
  1150   00064C  0E07               	movlw	7
  1151   00064E  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1152   000650  0ED0               	movlw	208
  1153   000652  6E56               	movwf	_Vmotor_Time^0,c
  1154                           
  1155                           ;main.c: 307:         vib_Time = 0x82;
  1156   000654  0E82               	movlw	130
  1157   000656  6E28               	movwf	_vib_Time^0,c	;volatile
  1158   000658                     
  1159                           ;main.c: 309:         INTCONbits.GIE = 0;
  1160   000658  9EF2               	bcf	242,7,c	;volatile
  1161   00065A                     
  1162                           ;main.c: 310:         write_i2c(0x0040, vib_Time);
  1163   00065A  0E40               	movlw	64
  1164   00065C  6E46               	movwf	write_i2c@address^0,c
  1165   00065E  0E00               	movlw	0
  1166   000660  6E47               	movwf	(write_i2c@address+1)^0,c
  1167   000662  0E00               	movlw	0
  1168   000664  6E48               	movwf	(write_i2c@address+2)^0,c
  1169   000666  0E00               	movlw	0
  1170   000668  6E49               	movwf	(write_i2c@address+3)^0,c
  1171   00066A  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  1172   00066E  6A4B               	clrf	(write_i2c@data+1)^0,c
  1173   000670  EC03  F010         	call	_write_i2c	;wreg free
  1174   000674                     
  1175                           ;main.c: 311:         INTCONbits.GIE = 1;
  1176   000674  8EF2               	bsf	242,7,c	;volatile
  1177                           
  1178                           ;main.c: 312:     } else {
  1179   000676  EF7E  F003         	goto	l3955
  1180   00067A                     l3941:
  1181                           
  1182                           ;main.c: 315:                 Vmotor_Time = 1000;
  1183   00067A  0E03               	movlw	3
  1184   00067C  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1185   00067E  0EE8               	movlw	232
  1186   000680  6E56               	movwf	_Vmotor_Time^0,c
  1187                           
  1188                           ;main.c: 316:                 break;
  1189   000682  EF7E  F003         	goto	l3955
  1190   000686                     l3943:
  1191                           
  1192                           ;main.c: 319:                 Vmotor_Time = 2000;
  1193   000686  0E07               	movlw	7
  1194   000688  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1195   00068A  0ED0               	movlw	208
  1196   00068C  6E56               	movwf	_Vmotor_Time^0,c
  1197                           
  1198                           ;main.c: 320:                 vib_Time = 0x82;
  1199   00068E  0E82               	movlw	130
  1200   000690  6E28               	movwf	_vib_Time^0,c	;volatile
  1201                           
  1202                           ;main.c: 321:                 break;
  1203   000692  EF7E  F003         	goto	l3955
  1204   000696                     l3945:
  1205                           
  1206                           ;main.c: 323:                 Vmotor_Time = 3000;
  1207   000696  0E0B               	movlw	11
  1208   000698  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1209   00069A  0EB8               	movlw	184
  1210   00069C  6E56               	movwf	_Vmotor_Time^0,c
  1211                           
  1212                           ;main.c: 324:                 break;
  1213   00069E  EF7E  F003         	goto	l3955
  1214   0006A2                     l3947:
  1215                           
  1216                           ;main.c: 326:                 Vmotor_Time = 4000;
  1217   0006A2  0E0F               	movlw	15
  1218   0006A4  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1219   0006A6  0EA0               	movlw	160
  1220   0006A8  6E56               	movwf	_Vmotor_Time^0,c
  1221                           
  1222                           ;main.c: 327:                 break;
  1223   0006AA  EF7E  F003         	goto	l3955
  1224   0006AE                     l3949:
  1225                           
  1226                           ;main.c: 329:                 Vmotor_Time = 5000;
  1227   0006AE  0E13               	movlw	19
  1228   0006B0  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1229   0006B2  0E88               	movlw	136
  1230   0006B4  6E56               	movwf	_Vmotor_Time^0,c
  1231                           
  1232                           ;main.c: 330:                 break;
  1233   0006B6  EF7E  F003         	goto	l3955
  1234   0006BA                     l3953:
  1235   0006BA  5028               	movf	_vib_Time^0,w,c	;volatile
  1236   0006BC  6E4C               	movwf	??_main^0,c
  1237   0006BE  6A4D               	clrf	(??_main+1)^0,c
  1238                           
  1239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1240                           ; Switch size 1, requested type "simple"
  1241                           ; Number of cases is 1, Range of values is 0 to 0
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte            4     3 (average)
  1245                           ;	Chosen strategy is simple_byte
  1246   0006C0  504D               	movf	(??_main+1)^0,w,c
  1247   0006C2  0A00               	xorlw	0	; case 0
  1248   0006C4  B4D8               	btfsc	status,2,c
  1249   0006C6  EF67  F003         	goto	l4753
  1250   0006CA  EF43  F003         	goto	l3943
  1251   0006CE                     l4753:
  1252                           
  1253                           ; Switch size 1, requested type "simple"
  1254                           ; Number of cases is 5, Range of values is 129 to 133
  1255                           ; switch strategies available:
  1256                           ; Name         Instructions Cycles
  1257                           ; simple_byte           16     9 (average)
  1258                           ;	Chosen strategy is simple_byte
  1259   0006CE  504C               	movf	??_main^0,w,c
  1260   0006D0  0A81               	xorlw	129	; case 129
  1261   0006D2  B4D8               	btfsc	status,2,c
  1262   0006D4  EF3D  F003         	goto	l3941
  1263   0006D8  0A03               	xorlw	3	; case 130
  1264   0006DA  B4D8               	btfsc	status,2,c
  1265   0006DC  EF43  F003         	goto	l3943
  1266   0006E0  0A01               	xorlw	1	; case 131
  1267   0006E2  B4D8               	btfsc	status,2,c
  1268   0006E4  EF4B  F003         	goto	l3945
  1269   0006E8  0A07               	xorlw	7	; case 132
  1270   0006EA  B4D8               	btfsc	status,2,c
  1271   0006EC  EF51  F003         	goto	l3947
  1272   0006F0  0A01               	xorlw	1	; case 133
  1273   0006F2  B4D8               	btfsc	status,2,c
  1274   0006F4  EF57  F003         	goto	l3949
  1275   0006F8  EF43  F003         	goto	l3943
  1276   0006FC                     l3955:
  1277                           
  1278                           ;main.c: 337:         PWM_reg = 0x3F;
  1279   0006FC  0E3F               	movlw	63
  1280   0006FE  6E58               	movwf	_PWM_reg^0,c
  1281   000700                     
  1282                           ;main.c: 339:     INTCONbits.GIE=0;
  1283   000700  9EF2               	bcf	242,7,c	;volatile
  1284   000702                     
  1285                           ;main.c: 340:     ETemp = read_i2c(0x0030);
  1286   000702  0E30               	movlw	48
  1287   000704  6E46               	movwf	read_i2c@address^0,c
  1288   000706  0E00               	movlw	0
  1289   000708  6E47               	movwf	(read_i2c@address+1)^0,c
  1290   00070A  0E00               	movlw	0
  1291   00070C  6E48               	movwf	(read_i2c@address+2)^0,c
  1292   00070E  0E00               	movlw	0
  1293   000710  6E49               	movwf	(read_i2c@address+3)^0,c
  1294   000712  EC7B  F00F         	call	_read_i2c	;wreg free
  1295   000716  C046  F01D         	movff	?_read_i2c,_ETemp
  1296   00071A  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1297   00071E                     
  1298                           ;main.c: 341:     INTCONbits.GIE=1;
  1299   00071E  8EF2               	bsf	242,7,c	;volatile
  1300   000720                     
  1301                           ;main.c: 343:     PWM_reg = ETemp & 0x00FF;
  1302   000720  C01D  F058         	movff	_ETemp,_PWM_reg
  1303   000724                     
  1304                           ;main.c: 345:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1305   000724  5058               	movf	_PWM_reg^0,w,c
  1306   000726  B4D8               	btfsc	status,2,c
  1307   000728  EF98  F003         	goto	u2701
  1308   00072C  EF9A  F003         	goto	u2700
  1309   000730                     u2701:
  1310   000730  EFBD  F003         	goto	l3979
  1311   000734                     u2700:
  1312   000734  0E3F               	movlw	63
  1313   000736  1858               	xorwf	_PWM_reg^0,w,c
  1314   000738  B4D8               	btfsc	status,2,c
  1315   00073A  EFA1  F003         	goto	u2711
  1316   00073E  EFA3  F003         	goto	u2710
  1317   000742                     u2711:
  1318   000742  EFBD  F003         	goto	l3979
  1319   000746                     u2710:
  1320   000746  0E7F               	movlw	127
  1321   000748  1858               	xorwf	_PWM_reg^0,w,c
  1322   00074A  B4D8               	btfsc	status,2,c
  1323   00074C  EFAA  F003         	goto	u2721
  1324   000750  EFAC  F003         	goto	u2720
  1325   000754                     u2721:
  1326   000754  EFBD  F003         	goto	l3979
  1327   000758                     u2720:
  1328   000758                     
  1329                           ;main.c: 346:     {;main.c: 347:         PWM_reg=0x3F;
  1330   000758  0E3F               	movlw	63
  1331   00075A  6E58               	movwf	_PWM_reg^0,c
  1332   00075C                     
  1333                           ;main.c: 349:         INTCONbits.GIE=0;
  1334   00075C  9EF2               	bcf	242,7,c	;volatile
  1335   00075E                     
  1336                           ;main.c: 350:         write_i2c(0x0030,PWM_reg);
  1337   00075E  0E30               	movlw	48
  1338   000760  6E46               	movwf	write_i2c@address^0,c
  1339   000762  0E00               	movlw	0
  1340   000764  6E47               	movwf	(write_i2c@address+1)^0,c
  1341   000766  0E00               	movlw	0
  1342   000768  6E48               	movwf	(write_i2c@address+2)^0,c
  1343   00076A  0E00               	movlw	0
  1344   00076C  6E49               	movwf	(write_i2c@address+3)^0,c
  1345   00076E  C058  F04A         	movff	_PWM_reg,write_i2c@data
  1346   000772  6A4B               	clrf	(write_i2c@data+1)^0,c
  1347   000774  EC03  F010         	call	_write_i2c	;wreg free
  1348   000778                     
  1349                           ;main.c: 351:         INTCONbits.GIE=1;
  1350   000778  8EF2               	bsf	242,7,c	;volatile
  1351   00077A                     l3979:
  1352                           
  1353                           ;main.c: 354:     errorcounter = 30;
  1354   00077A  0E1E               	movlw	30
  1355   00077C  6E52               	movwf	_errorcounter^0,c	;volatile
  1356   00077E  0E00               	movlw	0
  1357   000780  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1358   000782  0E00               	movlw	0
  1359   000784  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1360   000786  0E00               	movlw	0
  1361   000788  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1362                           
  1363                           ;main.c: 355:     MotorPosition_Init();
  1364   00078A  ECCE  F00B         	call	_MotorPosition_Init	;wreg free
  1365   00078E                     
  1366                           ;main.c: 356:     LATDbits.LATD1 = 0;
  1367   00078E  928C               	bcf	140,1,c	;volatile
  1368   000790                     l203:
  1369   000790  0004               	clrwdt		;# 
  1370   000792                     
  1371                           ;main.c: 363:         errorcounter = 30;
  1372   000792  0E1E               	movlw	30
  1373   000794  6E52               	movwf	_errorcounter^0,c	;volatile
  1374   000796  0E00               	movlw	0
  1375   000798  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1376   00079A  0E00               	movlw	0
  1377   00079C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1378   00079E  0E00               	movlw	0
  1379   0007A0  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1380   0007A2                     
  1381                           ;main.c: 364:         AD_capture_BattVoltage();
  1382   0007A2  EC4B  F010         	call	_AD_capture_BattVoltage	;wreg free
  1383                           
  1384                           ;main.c: 366:         switch (OpMode) {
  1385   0007A6  EF0D  F008         	goto	l4277
  1386   0007AA                     l205:
  1387                           
  1388                           ;main.c: 372:                 NUM = NUM_REC;
  1389   0007AA  C00F  F013         	movff	_NUM_REC,_NUM
  1390   0007AE  C010  F014         	movff	_NUM_REC+1,_NUM+1
  1391                           
  1392                           ;main.c: 373:                 if (PORTBbits.RB4 == 0) {
  1393   0007B2  B881               	btfsc	129,4,c	;volatile
  1394   0007B4  EFDE  F003         	goto	u2731
  1395   0007B8  EFE0  F003         	goto	u2730
  1396   0007BC                     u2731:
  1397   0007BC  EFFF  F003         	goto	l206
  1398   0007C0                     u2730:
  1399   0007C0                     l207:
  1400                           
  1401                           ;main.c: 375:                         if (PORTBbits.RB2 == 0) {
  1402   0007C0  B481               	btfsc	129,2,c	;volatile
  1403   0007C2  EFE5  F003         	goto	u2741
  1404   0007C6  EFE7  F003         	goto	u2740
  1405   0007CA                     u2741:
  1406   0007CA  EFE9  F003         	goto	l208
  1407   0007CE                     u2740:
  1408   0007CE                     
  1409                           ;main.c: 376:                             ToggleVIB_Mode();
  1410   0007CE  EC6A  F010         	call	_ToggleVIB_Mode	;wreg free
  1411   0007D2                     l208:
  1412                           
  1413                           ;main.c: 379:                         WriteSTLED316SVibMode(vibration_mode);
  1414   0007D2  502C               	movf	_vibration_mode^0,w,c
  1415   0007D4  ECDC  F00F         	call	_WriteSTLED316SVibMode
  1416   0007D8                     
  1417                           ;main.c: 380:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  1418   0007D8  0E02               	movlw	2
  1419   0007DA  6E4D               	movwf	(??_main+1)^0,c
  1420   0007DC  0E04               	movlw	4
  1421   0007DE  6E4C               	movwf	??_main^0,c
  1422   0007E0  0EBA               	movlw	186
  1423   0007E2                     u3427:
  1424   0007E2  2EE8               	decfsz	wreg,f,c
  1425   0007E4  D7FE               	bra	u3427
  1426   0007E6  2E4C               	decfsz	??_main^0,f,c
  1427   0007E8  D7FC               	bra	u3427
  1428   0007EA  2E4D               	decfsz	(??_main+1)^0,f,c
  1429   0007EC  D7FA               	bra	u3427
  1430   0007EE  D000               	nop2	
  1431   0007F0                     
  1432                           ;main.c: 382:                     } while (PORTBbits.RB4 == 0);
  1433   0007F0  A881               	btfss	129,4,c	;volatile
  1434   0007F2  EFFD  F003         	goto	u2751
  1435   0007F6  EFFF  F003         	goto	u2750
  1436   0007FA                     u2751:
  1437   0007FA  EFE0  F003         	goto	l207
  1438   0007FE                     u2750:
  1439   0007FE                     l206:
  1440                           
  1441                           ;main.c: 384:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1442   0007FE  B681               	btfsc	129,3,c	;volatile
  1443   000800  EF04  F004         	goto	u2761
  1444   000804  EF06  F004         	goto	u2760
  1445   000808                     u2761:
  1446   000808  EFB8  F004         	goto	l4033
  1447   00080C                     u2760:
  1448   00080C  0E63               	movlw	99
  1449   00080E  1813               	xorwf	_NUM^0,w,c
  1450   000810  1014               	iorwf	(_NUM+1)^0,w,c
  1451   000812  B4D8               	btfsc	status,2,c
  1452   000814  EF0E  F004         	goto	u2771
  1453   000818  EF10  F004         	goto	u2770
  1454   00081C                     u2771:
  1455   00081C  EFB8  F004         	goto	l4033
  1456   000820                     u2770:
  1457   000820                     
  1458                           ;main.c: 385:                     if(PORTBbits.RB3 == 0){
  1459   000820  B681               	btfsc	129,3,c	;volatile
  1460   000822  EF15  F004         	goto	u2781
  1461   000826  EF17  F004         	goto	u2780
  1462   00082A                     u2781:
  1463   00082A  EFBC  F004         	goto	l4035
  1464   00082E                     u2780:
  1465   00082E                     
  1466                           ;main.c: 387:                       if (holdTimeRight >= 1000 && NUM <= 89)
  1467   00082E  BE04               	btfsc	(_holdTimeRight+1)^0,7,c
  1468   000830  EF23  F004         	goto	u2791
  1469   000834  0EE8               	movlw	232
  1470   000836  5C03               	subwf	_holdTimeRight^0,w,c
  1471   000838  0E03               	movlw	3
  1472   00083A  5804               	subwfb	(_holdTimeRight+1)^0,w,c
  1473   00083C  A0D8               	btfss	status,0,c
  1474   00083E  EF23  F004         	goto	u2791
  1475   000842  EF25  F004         	goto	u2790
  1476   000846                     u2791:
  1477   000846  EF4B  F004         	goto	l4007
  1478   00084A                     u2790:
  1479   00084A  5014               	movf	(_NUM+1)^0,w,c
  1480   00084C  E107               	bnz	u2801
  1481   00084E  0E5A               	movlw	90
  1482   000850  5C13               	subwf	_NUM^0,w,c
  1483   000852  B0D8               	btfsc	status,0,c
  1484   000854  EF2E  F004         	goto	u2801
  1485   000858  EF30  F004         	goto	u2800
  1486   00085C                     u2801:
  1487   00085C  EF4B  F004         	goto	l4007
  1488   000860                     u2800:
  1489   000860                     
  1490                           ;main.c: 388:                       {;main.c: 389:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  1491   000860  0E06               	movlw	6
  1492   000862  6E4D               	movwf	(??_main+1)^0,c
  1493   000864  0E13               	movlw	19
  1494   000866  6E4C               	movwf	??_main^0,c
  1495   000868  0EAE               	movlw	174
  1496   00086A                     u3437:
  1497   00086A  2EE8               	decfsz	wreg,f,c
  1498   00086C  D7FE               	bra	u3437
  1499   00086E  2E4C               	decfsz	??_main^0,f,c
  1500   000870  D7FC               	bra	u3437
  1501   000872  2E4D               	decfsz	(??_main+1)^0,f,c
  1502   000874  D7FA               	bra	u3437
  1503   000876                     
  1504                           ;main.c: 390:                         NUM = NUM + 10;
  1505   000876  0E0A               	movlw	10
  1506   000878  2413               	addwf	_NUM^0,w,c
  1507   00087A  6E13               	movwf	_NUM^0,c
  1508   00087C  0E00               	movlw	0
  1509   00087E  2014               	addwfc	(_NUM+1)^0,w,c
  1510   000880  6E14               	movwf	(_NUM+1)^0,c
  1511   000882                     
  1512                           ;main.c: 391:                         WriteSTLED316SData(NUM, vibration_mode);
  1513   000882  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1514   000886  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1515   00088A  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1516   00088E  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1517                           
  1518                           ;main.c: 392:                       }
  1519   000892  EF77  F004         	goto	l4017
  1520   000896                     l4007:
  1521   000896  BE04               	btfsc	(_holdTimeRight+1)^0,7,c
  1522   000898  EF59  F004         	goto	u2810
  1523   00089C  0EE8               	movlw	232
  1524   00089E  5C03               	subwf	_holdTimeRight^0,w,c
  1525   0008A0  0E03               	movlw	3
  1526   0008A2  5804               	subwfb	(_holdTimeRight+1)^0,w,c
  1527   0008A4  B0D8               	btfsc	status,0,c
  1528   0008A6  EF57  F004         	goto	u2811
  1529   0008AA  EF59  F004         	goto	u2810
  1530   0008AE                     u2811:
  1531   0008AE  EF77  F004         	goto	l4017
  1532   0008B2                     u2810:
  1533   0008B2                     
  1534                           ;main.c: 394:                       {;main.c: 395:                         NUM = NUM + 1
      +                          ;
  1535   0008B2  0E01               	movlw	1
  1536   0008B4  2413               	addwf	_NUM^0,w,c
  1537   0008B6  6E13               	movwf	_NUM^0,c
  1538   0008B8  0E00               	movlw	0
  1539   0008BA  2014               	addwfc	(_NUM+1)^0,w,c
  1540   0008BC  6E14               	movwf	(_NUM+1)^0,c
  1541   0008BE                     
  1542                           ;main.c: 396:                         WriteSTLED316SData(NUM, vibration_mode);
  1543   0008BE  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1544   0008C2  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1545   0008C6  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1546   0008CA  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1547   0008CE                     
  1548                           ;main.c: 398:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  1549   0008CE  0E02               	movlw	2
  1550   0008D0  6E4D               	movwf	(??_main+1)^0,c
  1551   0008D2  0E86               	movlw	134
  1552   0008D4  6E4C               	movwf	??_main^0,c
  1553   0008D6  0E99               	movlw	153
  1554   0008D8                     u3447:
  1555   0008D8  2EE8               	decfsz	wreg,f,c
  1556   0008DA  D7FE               	bra	u3447
  1557   0008DC  2E4C               	decfsz	??_main^0,f,c
  1558   0008DE  D7FC               	bra	u3447
  1559   0008E0  2E4D               	decfsz	(??_main+1)^0,f,c
  1560   0008E2  D7FA               	bra	u3447
  1561   0008E4  F000               	nop	
  1562   0008E6                     
  1563                           ;main.c: 399:                         holdTimeRight = 0;
  1564   0008E6  0E00               	movlw	0
  1565   0008E8  6E04               	movwf	(_holdTimeRight+1)^0,c
  1566   0008EA  0E00               	movlw	0
  1567   0008EC  6E03               	movwf	_holdTimeRight^0,c
  1568   0008EE                     l4017:
  1569                           
  1570                           ;main.c: 403:                       if(PORTBbits.RB3 == 0 && PORTAbits.RA5 == 0)
  1571   0008EE  B681               	btfsc	129,3,c	;volatile
  1572   0008F0  EF7C  F004         	goto	u2821
  1573   0008F4  EF7E  F004         	goto	u2820
  1574   0008F8                     u2821:
  1575   0008F8  EF9F  F004         	goto	l4029
  1576   0008FC                     u2820:
  1577   0008FC  BA80               	btfsc	128,5,c	;volatile
  1578   0008FE  EF83  F004         	goto	u2831
  1579   000902  EF85  F004         	goto	u2830
  1580   000906                     u2831:
  1581   000906  EF9F  F004         	goto	l4029
  1582   00090A                     u2830:
  1583   00090A                     
  1584                           ;main.c: 404:                       {;main.c: 405:                           NUM = 0;
  1585   00090A  0E00               	movlw	0
  1586   00090C  6E14               	movwf	(_NUM+1)^0,c
  1587   00090E  0E00               	movlw	0
  1588   000910  6E13               	movwf	_NUM^0,c
  1589   000912                     
  1590                           ;main.c: 406:                           WriteSTLED316SData(NUM, vibration_mode);
  1591   000912  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1592   000916  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1593   00091A  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1594   00091E  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1595   000922  EF9F  F004         	goto	l4029
  1596   000926                     l4025:
  1597                           
  1598                           ;main.c: 410:                       {;main.c: 411:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  1599   000926  0E1A               	movlw	26
  1600   000928  6E4C               	movwf	??_main^0,c
  1601   00092A  0EF8               	movlw	248
  1602   00092C                     u3457:
  1603   00092C  2EE8               	decfsz	wreg,f,c
  1604   00092E  D7FE               	bra	u3457
  1605   000930  2E4C               	decfsz	??_main^0,f,c
  1606   000932  D7FC               	bra	u3457
  1607   000934  D000               	nop2	
  1608   000936                     
  1609                           ;main.c: 412:                         holdTimeRight += 10;
  1610   000936  0E0A               	movlw	10
  1611   000938  2603               	addwf	_holdTimeRight^0,f,c
  1612   00093A  0E00               	movlw	0
  1613   00093C  2204               	addwfc	(_holdTimeRight+1)^0,f,c
  1614   00093E                     l4029:
  1615                           
  1616                           ;main.c: 409:                       while(PORTBbits.RB3 == 0 && holdTimeRight < 1000)
  1617   00093E  B681               	btfsc	129,3,c	;volatile
  1618   000940  EFA4  F004         	goto	u2841
  1619   000944  EFA6  F004         	goto	u2840
  1620   000948                     u2841:
  1621   000948  EFB6  F004         	goto	l211
  1622   00094C                     u2840:
  1623   00094C  BE04               	btfsc	(_holdTimeRight+1)^0,7,c
  1624   00094E  EFB2  F004         	goto	u2851
  1625   000952  0EE8               	movlw	232
  1626   000954  5C03               	subwf	_holdTimeRight^0,w,c
  1627   000956  0E03               	movlw	3
  1628   000958  5804               	subwfb	(_holdTimeRight+1)^0,w,c
  1629   00095A  A0D8               	btfss	status,0,c
  1630   00095C  EFB2  F004         	goto	u2851
  1631   000960  EFB4  F004         	goto	u2850
  1632   000964                     u2851:
  1633   000964  EF93  F004         	goto	l4025
  1634   000968                     u2850:
  1635   000968  EFBC  F004         	goto	l4035
  1636   00096C                     l211:
  1637                           
  1638                           ;main.c: 415:                 }
  1639   00096C  EFBC  F004         	goto	l4035
  1640   000970                     l4033:
  1641                           
  1642                           ;main.c: 417:                   holdTimeRight = 0;
  1643   000970  0E00               	movlw	0
  1644   000972  6E04               	movwf	(_holdTimeRight+1)^0,c
  1645   000974  0E00               	movlw	0
  1646   000976  6E03               	movwf	_holdTimeRight^0,c
  1647   000978                     l4035:
  1648                           
  1649                           ;main.c: 420:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  1650   000978  BA80               	btfsc	128,5,c	;volatile
  1651   00097A  EFC1  F004         	goto	u2861
  1652   00097E  EFC3  F004         	goto	u2860
  1653   000982                     u2861:
  1654   000982  EF74  F005         	goto	l4077
  1655   000986                     u2860:
  1656   000986  5013               	movf	_NUM^0,w,c
  1657   000988  1014               	iorwf	(_NUM+1)^0,w,c
  1658   00098A  B4D8               	btfsc	status,2,c
  1659   00098C  EFCA  F004         	goto	u2871
  1660   000990  EFCC  F004         	goto	u2870
  1661   000994                     u2871:
  1662   000994  EF74  F005         	goto	l4077
  1663   000998                     u2870:
  1664   000998                     
  1665                           ;main.c: 421:                     if(PORTAbits.RA5 == 0){
  1666   000998  BA80               	btfsc	128,5,c	;volatile
  1667   00099A  EFD1  F004         	goto	u2881
  1668   00099E  EFD3  F004         	goto	u2880
  1669   0009A2                     u2881:
  1670   0009A2  EF78  F005         	goto	l4079
  1671   0009A6                     u2880:
  1672   0009A6                     
  1673                           ;main.c: 423:                       if (holdTimeLeft >= 1000 && NUM >= 10)
  1674   0009A6  BE02               	btfsc	(_holdTimeLeft+1)^0,7,c
  1675   0009A8  EFDF  F004         	goto	u2891
  1676   0009AC  0EE8               	movlw	232
  1677   0009AE  5C01               	subwf	_holdTimeLeft^0,w,c
  1678   0009B0  0E03               	movlw	3
  1679   0009B2  5802               	subwfb	(_holdTimeLeft+1)^0,w,c
  1680   0009B4  A0D8               	btfss	status,0,c
  1681   0009B6  EFDF  F004         	goto	u2891
  1682   0009BA  EFE1  F004         	goto	u2890
  1683   0009BE                     u2891:
  1684   0009BE  EF07  F005         	goto	l4051
  1685   0009C2                     u2890:
  1686   0009C2  5014               	movf	(_NUM+1)^0,w,c
  1687   0009C4  E109               	bnz	u2900
  1688   0009C6  0E0A               	movlw	10
  1689   0009C8  5C13               	subwf	_NUM^0,w,c
  1690   0009CA  A0D8               	btfss	status,0,c
  1691   0009CC  EFEA  F004         	goto	u2901
  1692   0009D0  EFEC  F004         	goto	u2900
  1693   0009D4                     u2901:
  1694   0009D4  EF07  F005         	goto	l4051
  1695   0009D8                     u2900:
  1696   0009D8                     
  1697                           ;main.c: 424:                       {;main.c: 425:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  1698   0009D8  0E06               	movlw	6
  1699   0009DA  6E4D               	movwf	(??_main+1)^0,c
  1700   0009DC  0E13               	movlw	19
  1701   0009DE  6E4C               	movwf	??_main^0,c
  1702   0009E0  0EAE               	movlw	174
  1703   0009E2                     u3467:
  1704   0009E2  2EE8               	decfsz	wreg,f,c
  1705   0009E4  D7FE               	bra	u3467
  1706   0009E6  2E4C               	decfsz	??_main^0,f,c
  1707   0009E8  D7FC               	bra	u3467
  1708   0009EA  2E4D               	decfsz	(??_main+1)^0,f,c
  1709   0009EC  D7FA               	bra	u3467
  1710   0009EE                     
  1711                           ;main.c: 426:                         NUM = NUM - 10;
  1712   0009EE  0EF6               	movlw	246
  1713   0009F0  2413               	addwf	_NUM^0,w,c
  1714   0009F2  6E13               	movwf	_NUM^0,c
  1715   0009F4  0EFF               	movlw	255
  1716   0009F6  2014               	addwfc	(_NUM+1)^0,w,c
  1717   0009F8  6E14               	movwf	(_NUM+1)^0,c
  1718   0009FA                     
  1719                           ;main.c: 427:                         WriteSTLED316SData(NUM, vibration_mode);
  1720   0009FA  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1721   0009FE  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1722   000A02  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1723   000A06  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1724                           
  1725                           ;main.c: 428:                       }
  1726   000A0A  EF33  F005         	goto	l4061
  1727   000A0E                     l4051:
  1728   000A0E  BE02               	btfsc	(_holdTimeLeft+1)^0,7,c
  1729   000A10  EF15  F005         	goto	u2910
  1730   000A14  0EE8               	movlw	232
  1731   000A16  5C01               	subwf	_holdTimeLeft^0,w,c
  1732   000A18  0E03               	movlw	3
  1733   000A1A  5802               	subwfb	(_holdTimeLeft+1)^0,w,c
  1734   000A1C  B0D8               	btfsc	status,0,c
  1735   000A1E  EF13  F005         	goto	u2911
  1736   000A22  EF15  F005         	goto	u2910
  1737   000A26                     u2911:
  1738   000A26  EF33  F005         	goto	l4061
  1739   000A2A                     u2910:
  1740   000A2A                     
  1741                           ;main.c: 430:                       {;main.c: 431:                         NUM = NUM - 1
      +                          ;
  1742   000A2A  0EFF               	movlw	255
  1743   000A2C  2413               	addwf	_NUM^0,w,c
  1744   000A2E  6E13               	movwf	_NUM^0,c
  1745   000A30  0EFF               	movlw	255
  1746   000A32  2014               	addwfc	(_NUM+1)^0,w,c
  1747   000A34  6E14               	movwf	(_NUM+1)^0,c
  1748   000A36                     
  1749                           ;main.c: 432:                         WriteSTLED316SData(NUM, vibration_mode);
  1750   000A36  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1751   000A3A  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1752   000A3E  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1753   000A42  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1754   000A46                     
  1755                           ;main.c: 434:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  1756   000A46  0E02               	movlw	2
  1757   000A48  6E4D               	movwf	(??_main+1)^0,c
  1758   000A4A  0E86               	movlw	134
  1759   000A4C  6E4C               	movwf	??_main^0,c
  1760   000A4E  0E99               	movlw	153
  1761   000A50                     u3477:
  1762   000A50  2EE8               	decfsz	wreg,f,c
  1763   000A52  D7FE               	bra	u3477
  1764   000A54  2E4C               	decfsz	??_main^0,f,c
  1765   000A56  D7FC               	bra	u3477
  1766   000A58  2E4D               	decfsz	(??_main+1)^0,f,c
  1767   000A5A  D7FA               	bra	u3477
  1768   000A5C  F000               	nop	
  1769   000A5E                     
  1770                           ;main.c: 435:                         holdTimeLeft = 0;
  1771   000A5E  0E00               	movlw	0
  1772   000A60  6E02               	movwf	(_holdTimeLeft+1)^0,c
  1773   000A62  0E00               	movlw	0
  1774   000A64  6E01               	movwf	_holdTimeLeft^0,c
  1775   000A66                     l4061:
  1776                           
  1777                           ;main.c: 439:                       if(PORTAbits.RA5 == 0 && PORTBbits.RB3 == 0)
  1778   000A66  BA80               	btfsc	128,5,c	;volatile
  1779   000A68  EF38  F005         	goto	u2921
  1780   000A6C  EF3A  F005         	goto	u2920
  1781   000A70                     u2921:
  1782   000A70  EF5B  F005         	goto	l4073
  1783   000A74                     u2920:
  1784   000A74  B681               	btfsc	129,3,c	;volatile
  1785   000A76  EF3F  F005         	goto	u2931
  1786   000A7A  EF41  F005         	goto	u2930
  1787   000A7E                     u2931:
  1788   000A7E  EF5B  F005         	goto	l4073
  1789   000A82                     u2930:
  1790   000A82                     
  1791                           ;main.c: 440:                       {;main.c: 441:                           NUM = 0;
  1792   000A82  0E00               	movlw	0
  1793   000A84  6E14               	movwf	(_NUM+1)^0,c
  1794   000A86  0E00               	movlw	0
  1795   000A88  6E13               	movwf	_NUM^0,c
  1796   000A8A                     
  1797                           ;main.c: 442:                           WriteSTLED316SData(NUM, vibration_mode);
  1798   000A8A  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1799   000A8E  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1800   000A92  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1801   000A96  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1802   000A9A  EF5B  F005         	goto	l4073
  1803   000A9E                     l4069:
  1804                           
  1805                           ;main.c: 445:                       {;main.c: 446:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  1806   000A9E  0E1A               	movlw	26
  1807   000AA0  6E4C               	movwf	??_main^0,c
  1808   000AA2  0EF8               	movlw	248
  1809   000AA4                     u3487:
  1810   000AA4  2EE8               	decfsz	wreg,f,c
  1811   000AA6  D7FE               	bra	u3487
  1812   000AA8  2E4C               	decfsz	??_main^0,f,c
  1813   000AAA  D7FC               	bra	u3487
  1814   000AAC  D000               	nop2	
  1815   000AAE                     
  1816                           ;main.c: 447:                         holdTimeLeft += 10;
  1817   000AAE  0E0A               	movlw	10
  1818   000AB0  2601               	addwf	_holdTimeLeft^0,f,c
  1819   000AB2  0E00               	movlw	0
  1820   000AB4  2202               	addwfc	(_holdTimeLeft+1)^0,f,c
  1821   000AB6                     l4073:
  1822                           
  1823                           ;main.c: 444:                       while(PORTAbits.RA5 == 0 && holdTimeLeft < 1000)
  1824   000AB6  BA80               	btfsc	128,5,c	;volatile
  1825   000AB8  EF60  F005         	goto	u2941
  1826   000ABC  EF62  F005         	goto	u2940
  1827   000AC0                     u2941:
  1828   000AC0  EF72  F005         	goto	l223
  1829   000AC4                     u2940:
  1830   000AC4  BE02               	btfsc	(_holdTimeLeft+1)^0,7,c
  1831   000AC6  EF6E  F005         	goto	u2951
  1832   000ACA  0EE8               	movlw	232
  1833   000ACC  5C01               	subwf	_holdTimeLeft^0,w,c
  1834   000ACE  0E03               	movlw	3
  1835   000AD0  5802               	subwfb	(_holdTimeLeft+1)^0,w,c
  1836   000AD2  A0D8               	btfss	status,0,c
  1837   000AD4  EF6E  F005         	goto	u2951
  1838   000AD8  EF70  F005         	goto	u2950
  1839   000ADC                     u2951:
  1840   000ADC  EF4F  F005         	goto	l4069
  1841   000AE0                     u2950:
  1842   000AE0  EF78  F005         	goto	l4079
  1843   000AE4                     l223:
  1844                           
  1845                           ;main.c: 450:                 }
  1846   000AE4  EF78  F005         	goto	l4079
  1847   000AE8                     l4077:
  1848                           
  1849                           ;main.c: 452:                   holdTimeLeft = 0;
  1850   000AE8  0E00               	movlw	0
  1851   000AEA  6E02               	movwf	(_holdTimeLeft+1)^0,c
  1852   000AEC  0E00               	movlw	0
  1853   000AEE  6E01               	movwf	_holdTimeLeft^0,c
  1854   000AF0                     l4079:
  1855                           
  1856                           ;main.c: 455:                 if (PORTAbits.RA4 == 0 && NUM <= 89) {
  1857   000AF0  B880               	btfsc	128,4,c	;volatile
  1858   000AF2  EF7D  F005         	goto	u2961
  1859   000AF6  EF7F  F005         	goto	u2960
  1860   000AFA                     u2961:
  1861   000AFA  EF97  F005         	goto	l234
  1862   000AFE                     u2960:
  1863   000AFE  5014               	movf	(_NUM+1)^0,w,c
  1864   000B00  E107               	bnz	u2971
  1865   000B02  0E5A               	movlw	90
  1866   000B04  5C13               	subwf	_NUM^0,w,c
  1867   000B06  B0D8               	btfsc	status,0,c
  1868   000B08  EF88  F005         	goto	u2971
  1869   000B0C  EF8A  F005         	goto	u2970
  1870   000B10                     u2971:
  1871   000B10  EF97  F005         	goto	l234
  1872   000B14                     u2970:
  1873   000B14                     
  1874                           ;main.c: 456:                     NUM = NUM + 10;
  1875   000B14  0E0A               	movlw	10
  1876   000B16  2413               	addwf	_NUM^0,w,c
  1877   000B18  6E13               	movwf	_NUM^0,c
  1878   000B1A  0E00               	movlw	0
  1879   000B1C  2014               	addwfc	(_NUM+1)^0,w,c
  1880   000B1E  6E14               	movwf	(_NUM+1)^0,c
  1881   000B20                     l235:
  1882   000B20  A880               	btfss	128,4,c	;volatile
  1883   000B22  EF95  F005         	goto	u2981
  1884   000B26  EF97  F005         	goto	u2980
  1885   000B2A                     u2981:
  1886   000B2A  EF90  F005         	goto	l235
  1887   000B2E                     u2980:
  1888   000B2E                     l234:
  1889                           
  1890                           ;main.c: 460:                 if (PORTAbits.RA3 == 0 && NUM >= 10) {
  1891   000B2E  B680               	btfsc	128,3,c	;volatile
  1892   000B30  EF9C  F005         	goto	u2991
  1893   000B34  EF9E  F005         	goto	u2990
  1894   000B38                     u2991:
  1895   000B38  EFB6  F005         	goto	l238
  1896   000B3C                     u2990:
  1897   000B3C  5014               	movf	(_NUM+1)^0,w,c
  1898   000B3E  E109               	bnz	u3000
  1899   000B40  0E0A               	movlw	10
  1900   000B42  5C13               	subwf	_NUM^0,w,c
  1901   000B44  A0D8               	btfss	status,0,c
  1902   000B46  EFA7  F005         	goto	u3001
  1903   000B4A  EFA9  F005         	goto	u3000
  1904   000B4E                     u3001:
  1905   000B4E  EFB6  F005         	goto	l238
  1906   000B52                     u3000:
  1907   000B52                     
  1908                           ;main.c: 461:                     NUM = NUM - 10;
  1909   000B52  0EF6               	movlw	246
  1910   000B54  2413               	addwf	_NUM^0,w,c
  1911   000B56  6E13               	movwf	_NUM^0,c
  1912   000B58  0EFF               	movlw	255
  1913   000B5A  2014               	addwfc	(_NUM+1)^0,w,c
  1914   000B5C  6E14               	movwf	(_NUM+1)^0,c
  1915   000B5E                     l239:
  1916   000B5E  A680               	btfss	128,3,c	;volatile
  1917   000B60  EFB4  F005         	goto	u3011
  1918   000B64  EFB6  F005         	goto	u3010
  1919   000B68                     u3011:
  1920   000B68  EFAF  F005         	goto	l239
  1921   000B6C                     u3010:
  1922   000B6C                     l238:
  1923                           
  1924                           ;main.c: 465:                 NUM_REC = NUM;
  1925   000B6C  C013  F00F         	movff	_NUM,_NUM_REC
  1926   000B70  C014  F010         	movff	_NUM+1,_NUM_REC+1
  1927   000B74                     
  1928                           ;main.c: 466:                 WriteSTLED316SData(NUM, vibration_mode);
  1929   000B74  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1930   000B78  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1931   000B7C  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1932   000B80  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  1933   000B84                     
  1934                           ;main.c: 471:                 if(dispense == 1)
  1935   000B84  0407               	decf	_dispense^0,w,c
  1936   000B86  1008               	iorwf	(_dispense+1)^0,w,c
  1937   000B88  A4D8               	btfss	status,2,c
  1938   000B8A  EFC9  F005         	goto	u3021
  1939   000B8E  EFCB  F005         	goto	u3020
  1940   000B92                     u3021:
  1941   000B92  EFDB  F005         	goto	l4101
  1942   000B96                     u3020:
  1943   000B96                     
  1944                           ;main.c: 472:                 {;main.c: 473:                     Busy = 1;
  1945   000B96  0E01               	movlw	1
  1946   000B98  6E2D               	movwf	_Busy^0,c
  1947                           
  1948                           ;main.c: 474:                     errorcounter = 30;
  1949   000B9A  0E1E               	movlw	30
  1950   000B9C  6E52               	movwf	_errorcounter^0,c	;volatile
  1951   000B9E  0E00               	movlw	0
  1952   000BA0  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1953   000BA2  0E00               	movlw	0
  1954   000BA4  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1955   000BA6  0E00               	movlw	0
  1956   000BA8  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1957   000BAA                     
  1958                           ;main.c: 475:                     Homing_Again_Manual();
  1959   000BAA  EC24  F008         	call	_Homing_Again_Manual	;wreg free
  1960   000BAE                     
  1961                           ;main.c: 476:                     Stop = 0;
  1962   000BAE  0E00               	movlw	0
  1963   000BB0  6E2F               	movwf	_Stop^0,c
  1964   000BB2                     
  1965                           ;main.c: 477:                     Busy = 0;
  1966   000BB2  0E00               	movlw	0
  1967   000BB4  6E2D               	movwf	_Busy^0,c
  1968   000BB6                     l4101:
  1969                           
  1970                           ;main.c: 491:                 if (Serial_Flag == 1) {
  1971   000BB6  0431               	decf	_Serial_Flag^0,w,c
  1972   000BB8  A4D8               	btfss	status,2,c
  1973   000BBA  EFE1  F005         	goto	u3031
  1974   000BBE  EFE3  F005         	goto	u3030
  1975   000BC2                     u3031:
  1976   000BC2  EF09  F008         	goto	l4275
  1977   000BC6                     u3030:
  1978   000BC6  EFDF  F007         	goto	l4271
  1979   000BCA                     l4105:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;main.c: 496:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  1983   000BCA  0EF1               	movlw	241
  1984   000BCC  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  1985   000BCE  A4D8               	btfss	status,2,c
  1986   000BD0  EFEC  F005         	goto	u3041
  1987   000BD4  EFEE  F005         	goto	u3040
  1988   000BD8                     u3041:
  1989   000BD8  EF0A  F006         	goto	l4115
  1990   000BDC                     u3040:
  1991   000BDC                     
  1992                           ; BSR set to: 0
  1993   000BDC  502D               	movf	_Busy^0,w,c
  1994   000BDE  A4D8               	btfss	status,2,c
  1995   000BE0  EFF4  F005         	goto	u3051
  1996   000BE4  EFF6  F005         	goto	u3050
  1997   000BE8                     u3051:
  1998   000BE8  EF0A  F006         	goto	l4115
  1999   000BEC                     u3050:
  2000   000BEC                     
  2001                           ; BSR set to: 0
  2002                           ;main.c: 497:                             {;main.c: 498:                                
      +                           Stop = 0;
  2003   000BEC  0E00               	movlw	0
  2004   000BEE  6E2F               	movwf	_Stop^0,c
  2005                           
  2006                           ;main.c: 499:                                 Busy = 1;
  2007   000BF0  0E01               	movlw	1
  2008   000BF2  6E2D               	movwf	_Busy^0,c
  2009   000BF4                     
  2010                           ; BSR set to: 0
  2011                           ;main.c: 500:                                 NUM = NUM_REC;
  2012   000BF4  C00F  F013         	movff	_NUM_REC,_NUM
  2013   000BF8  C010  F014         	movff	_NUM_REC+1,_NUM+1
  2014                           
  2015                           ;main.c: 502:                                 errorcounter = 30;
  2016   000BFC  0E1E               	movlw	30
  2017   000BFE  6E52               	movwf	_errorcounter^0,c	;volatile
  2018   000C00  0E00               	movlw	0
  2019   000C02  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2020   000C04  0E00               	movlw	0
  2021   000C06  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2022   000C08  0E00               	movlw	0
  2023   000C0A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2024   000C0C                     
  2025                           ; BSR set to: 0
  2026                           ;main.c: 503:                                 Homing_Again_Auto();
  2027   000C0C  EC35  F00A         	call	_Homing_Again_Auto	;wreg free
  2028                           
  2029                           ;main.c: 505:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  2030   000C10  EF68  F006         	goto	l4145
  2031   000C14                     l4115:
  2032                           
  2033                           ; BSR set to: 0
  2034   000C14  0EF2               	movlw	242
  2035   000C16  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2036   000C18  A4D8               	btfss	status,2,c
  2037   000C1A  EF11  F006         	goto	u3061
  2038   000C1E  EF13  F006         	goto	u3060
  2039   000C22                     u3061:
  2040   000C22  EF68  F006         	goto	l4145
  2041   000C26                     u3060:
  2042   000C26                     
  2043                           ; BSR set to: 0
  2044   000C26  502D               	movf	_Busy^0,w,c
  2045   000C28  A4D8               	btfss	status,2,c
  2046   000C2A  EF19  F006         	goto	u3071
  2047   000C2E  EF1B  F006         	goto	u3070
  2048   000C32                     u3071:
  2049   000C32  EF68  F006         	goto	l4145
  2050   000C36                     u3070:
  2051   000C36                     
  2052                           ; BSR set to: 0
  2053                           ;main.c: 506:                             {;main.c: 507:                                
      +                           Stop = 0;
  2054   000C36  0E00               	movlw	0
  2055   000C38  6E2F               	movwf	_Stop^0,c
  2056                           
  2057                           ;main.c: 508:                                 Busy = 1;
  2058   000C3A  0E01               	movlw	1
  2059   000C3C  6E2D               	movwf	_Busy^0,c
  2060   000C3E                     
  2061                           ; BSR set to: 0
  2062                           ;main.c: 509:                                 NUM = NUM_REC;
  2063   000C3E  C00F  F013         	movff	_NUM_REC,_NUM
  2064   000C42  C010  F014         	movff	_NUM_REC+1,_NUM+1
  2065   000C46                     
  2066                           ; BSR set to: 0
  2067                           ;main.c: 510:                                 WriteSTLED316SData(NUM, vibration_mode);
  2068   000C46  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  2069   000C4A  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2070   000C4E  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2071   000C52  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  2072   000C56                     
  2073                           ;main.c: 512:                                 errorcounter = 30;
  2074   000C56  0E1E               	movlw	30
  2075   000C58  6E52               	movwf	_errorcounter^0,c	;volatile
  2076   000C5A  0E00               	movlw	0
  2077   000C5C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2078   000C5E  0E00               	movlw	0
  2079   000C60  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2080   000C62  0E00               	movlw	0
  2081   000C64  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2082   000C66                     
  2083                           ;main.c: 513:                                 Homing_Again_Manual();
  2084   000C66  EC24  F008         	call	_Homing_Again_Manual	;wreg free
  2085   000C6A                     
  2086                           ;main.c: 516:                                 if (Stop == 0) {
  2087   000C6A  502F               	movf	_Stop^0,w,c
  2088   000C6C  A4D8               	btfss	status,2,c
  2089   000C6E  EF3B  F006         	goto	u3081
  2090   000C72  EF3D  F006         	goto	u3080
  2091   000C76                     u3081:
  2092   000C76  EF68  F006         	goto	l4145
  2093   000C7A                     u3080:
  2094   000C7A                     
  2095                           ;main.c: 517:                                     Serial_Buffer_Out[0] = 0xA5;
  2096   000C7A  0EA5               	movlw	165
  2097   000C7C  0100               	movlb	0	; () banked
  2098   000C7E  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2099                           
  2100                           ;main.c: 518:                                     Serial_Buffer_Out[1] = 0x44;
  2101   000C80  0E44               	movlw	68
  2102   000C82  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  2103                           
  2104                           ;main.c: 519:                                     Serial_Buffer_Out[2] = 0xF9;
  2105   000C84  0EF9               	movlw	249
  2106   000C86  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  2107                           
  2108                           ;main.c: 520:                                     Serial_Buffer_Out[3] = 0X3D;
  2109   000C88  0E3D               	movlw	61
  2110   000C8A  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  2111                           
  2112                           ;main.c: 521:                                     Serial_Buffer_Out[4] = 0x5A;
  2113   000C8C  0E5A               	movlw	90
  2114   000C8E  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  2115   000C90                     
  2116                           ; BSR set to: 0
  2117                           ;main.c: 523:                                     INTCONbits.GIE = 0;
  2118   000C90  9EF2               	bcf	242,7,c	;volatile
  2119                           
  2120                           ;main.c: 524:                                     for (i = 0; i < 5; i++) {
  2121   000C92  0E00               	movlw	0
  2122   000C94  6E0E               	movwf	(_i+1)^0,c
  2123   000C96  0E00               	movlw	0
  2124   000C98  6E0D               	movwf	_i^0,c
  2125   000C9A                     l4135:
  2126   000C9A  500E               	movf	(_i+1)^0,w,c
  2127   000C9C  E109               	bnz	u3090
  2128   000C9E  0E05               	movlw	5
  2129   000CA0  5C0D               	subwf	_i^0,w,c
  2130   000CA2  A0D8               	btfss	status,0,c
  2131   000CA4  EF56  F006         	goto	u3091
  2132   000CA8  EF58  F006         	goto	u3090
  2133   000CAC                     u3091:
  2134   000CAC  EF5A  F006         	goto	l4139
  2135   000CB0                     u3090:
  2136   000CB0  EF67  F006         	goto	l252
  2137   000CB4                     l4139:
  2138                           
  2139                           ;main.c: 525:                                         Write1USART(Serial_Buffer_Out[i]);
  2140   000CB4  0E60               	movlw	low _Serial_Buffer_Out
  2141   000CB6  240D               	addwf	_i^0,w,c
  2142   000CB8  6ED9               	movwf	fsr2l,c
  2143   000CBA  0E00               	movlw	high _Serial_Buffer_Out
  2144   000CBC  200E               	addwfc	(_i+1)^0,w,c
  2145   000CBE  6EDA               	movwf	fsr2h,c
  2146   000CC0  50DF               	movf	indf2,w,c
  2147   000CC2  EC70  F011         	call	_Write1USART
  2148   000CC6                     
  2149                           ;main.c: 526:                                     }
  2150   000CC6  4A0D               	infsnz	_i^0,f,c
  2151   000CC8  2A0E               	incf	(_i+1)^0,f,c
  2152   000CCA  EF4D  F006         	goto	l4135
  2153   000CCE                     l252:
  2154                           
  2155                           ;main.c: 527:                                     INTCONbits.GIE = 1;
  2156   000CCE  8EF2               	bsf	242,7,c	;volatile
  2157   000CD0                     l4145:
  2158                           
  2159                           ;main.c: 531:                             flush();
  2160   000CD0  EC88  F010         	call	_flush	;wreg free
  2161                           
  2162                           ;main.c: 532:                             flushOut();
  2163   000CD4  ECA5  F010         	call	_flushOut	;wreg free
  2164   000CD8                     
  2165                           ;main.c: 533:                             Stop = 0;
  2166   000CD8  0E00               	movlw	0
  2167   000CDA  6E2F               	movwf	_Stop^0,c
  2168   000CDC                     l4149:
  2169                           
  2170                           ;main.c: 534:                             Busy = 0;
  2171   000CDC  0E00               	movlw	0
  2172   000CDE  6E2D               	movwf	_Busy^0,c
  2173                           
  2174                           ;main.c: 535:                             break;
  2175   000CE0  EF01  F008         	goto	l4273
  2176   000CE4                     l4151:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;main.c: 540:                             if (Busy == 0) {
  2180   000CE4  502D               	movf	_Busy^0,w,c
  2181   000CE6  A4D8               	btfss	status,2,c
  2182   000CE8  EF78  F006         	goto	u3101
  2183   000CEC  EF7A  F006         	goto	u3100
  2184   000CF0                     u3101:
  2185   000CF0  EF01  F008         	goto	l4273
  2186   000CF4                     u3100:
  2187   000CF4                     
  2188                           ; BSR set to: 0
  2189                           ;main.c: 541:                                 Busy = 1;
  2190   000CF4  0E01               	movlw	1
  2191   000CF6  6E2D               	movwf	_Busy^0,c
  2192   000CF8                     
  2193                           ; BSR set to: 0
  2194                           ;main.c: 545:                                 pause_Time = Serial_Buffer[2];
  2195   000CF8  C082  F029         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  2196                           
  2197                           ;main.c: 546:                                 switch (pause_Time) {
  2198   000CFC  EFA6  F006         	goto	l4171
  2199   000D00                     l4157:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;main.c: 549:                                         Motor_Pause_Time = 0;
  2203   000D00  0E00               	movlw	0
  2204   000D02  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2205   000D04  0E00               	movlw	0
  2206   000D06  6E15               	movwf	_Motor_Pause_Time^0,c
  2207                           
  2208                           ;main.c: 550:                                         pause_Time = 0x30;
  2209   000D08  0E30               	movlw	48
  2210   000D0A  6E29               	movwf	_pause_Time^0,c	;volatile
  2211                           
  2212                           ;main.c: 551:                                         break;
  2213   000D0C  EFCB  F006         	goto	l259
  2214   000D10                     l4159:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;main.c: 554:                                         Motor_Pause_Time = 1000;
  2218   000D10  0E03               	movlw	3
  2219   000D12  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2220   000D14  0EE8               	movlw	232
  2221   000D16  6E15               	movwf	_Motor_Pause_Time^0,c
  2222                           
  2223                           ;main.c: 555:                                         break;
  2224   000D18  EFCB  F006         	goto	l259
  2225   000D1C                     l4161:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;main.c: 558:                                         Motor_Pause_Time = 2000;
  2229   000D1C  0E07               	movlw	7
  2230   000D1E  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2231   000D20  0ED0               	movlw	208
  2232   000D22  6E15               	movwf	_Motor_Pause_Time^0,c
  2233                           
  2234                           ;main.c: 559:                                         break;
  2235   000D24  EFCB  F006         	goto	l259
  2236   000D28                     l4163:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 562:                                         Motor_Pause_Time = 3000;
  2240   000D28  0E0B               	movlw	11
  2241   000D2A  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2242   000D2C  0EB8               	movlw	184
  2243   000D2E  6E15               	movwf	_Motor_Pause_Time^0,c
  2244                           
  2245                           ;main.c: 563:                                         break;
  2246   000D30  EFCB  F006         	goto	l259
  2247   000D34                     l4165:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;main.c: 566:                                         Motor_Pause_Time = 4000;
  2251   000D34  0E0F               	movlw	15
  2252   000D36  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2253   000D38  0EA0               	movlw	160
  2254   000D3A  6E15               	movwf	_Motor_Pause_Time^0,c
  2255                           
  2256                           ;main.c: 567:                                         break;
  2257   000D3C  EFCB  F006         	goto	l259
  2258   000D40                     l4167:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;main.c: 570:                                         Motor_Pause_Time = 5000;
  2262   000D40  0E13               	movlw	19
  2263   000D42  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2264   000D44  0E88               	movlw	136
  2265   000D46  6E15               	movwf	_Motor_Pause_Time^0,c
  2266                           
  2267                           ;main.c: 571:                                         break;
  2268   000D48  EFCB  F006         	goto	l259
  2269   000D4C                     l4171:
  2270                           
  2271                           ; BSR set to: 0
  2272   000D4C  5029               	movf	_pause_Time^0,w,c	;volatile
  2273   000D4E  6E4C               	movwf	??_main^0,c
  2274   000D50  6A4D               	clrf	(??_main+1)^0,c
  2275                           
  2276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2277                           ; Switch size 1, requested type "simple"
  2278                           ; Number of cases is 1, Range of values is 0 to 0
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte            4     3 (average)
  2282                           ;	Chosen strategy is simple_byte
  2283   000D52  504D               	movf	(??_main+1)^0,w,c
  2284   000D54  0A00               	xorlw	0	; case 0
  2285   000D56  B4D8               	btfsc	status,2,c
  2286   000D58  EFB0  F006         	goto	l4755
  2287   000D5C  EF80  F006         	goto	l4157
  2288   000D60                     l4755:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ; Switch size 1, requested type "simple"
  2292                           ; Number of cases is 6, Range of values is 48 to 53
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte           19    10 (average)
  2296                           ;	Chosen strategy is simple_byte
  2297   000D60  504C               	movf	??_main^0,w,c
  2298   000D62  0A30               	xorlw	48	; case 48
  2299   000D64  B4D8               	btfsc	status,2,c
  2300   000D66  EF80  F006         	goto	l4157
  2301   000D6A  0A01               	xorlw	1	; case 49
  2302   000D6C  B4D8               	btfsc	status,2,c
  2303   000D6E  EF88  F006         	goto	l4159
  2304   000D72  0A03               	xorlw	3	; case 50
  2305   000D74  B4D8               	btfsc	status,2,c
  2306   000D76  EF8E  F006         	goto	l4161
  2307   000D7A  0A01               	xorlw	1	; case 51
  2308   000D7C  B4D8               	btfsc	status,2,c
  2309   000D7E  EF94  F006         	goto	l4163
  2310   000D82  0A07               	xorlw	7	; case 52
  2311   000D84  B4D8               	btfsc	status,2,c
  2312   000D86  EF9A  F006         	goto	l4165
  2313   000D8A  0A01               	xorlw	1	; case 53
  2314   000D8C  B4D8               	btfsc	status,2,c
  2315   000D8E  EFA0  F006         	goto	l4167
  2316   000D92  EF80  F006         	goto	l4157
  2317   000D96                     l259:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;main.c: 576:                                 INTCONbits.GIE = 0;
  2321   000D96  9EF2               	bcf	242,7,c	;volatile
  2322   000D98                     
  2323                           ; BSR set to: 0
  2324                           ;main.c: 577:                                 write_i2c(0x0060, pause_Time);
  2325   000D98  0E60               	movlw	96
  2326   000D9A  6E46               	movwf	write_i2c@address^0,c
  2327   000D9C  0E00               	movlw	0
  2328   000D9E  6E47               	movwf	(write_i2c@address+1)^0,c
  2329   000DA0  0E00               	movlw	0
  2330   000DA2  6E48               	movwf	(write_i2c@address+2)^0,c
  2331   000DA4  0E00               	movlw	0
  2332   000DA6  6E49               	movwf	(write_i2c@address+3)^0,c
  2333   000DA8  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
  2334   000DAC  6A4B               	clrf	(write_i2c@data+1)^0,c
  2335   000DAE  EC03  F010         	call	_write_i2c	;wreg free
  2336   000DB2                     
  2337                           ;main.c: 578:                                 INTCONbits.GIE = 1;
  2338   000DB2  8EF2               	bsf	242,7,c	;volatile
  2339   000DB4                     
  2340                           ;main.c: 580:                                 flush();
  2341   000DB4  EC88  F010         	call	_flush	;wreg free
  2342   000DB8  EF6E  F006         	goto	l4149
  2343   000DBC                     l4181:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 588:                             if (Busy == 0) {
  2347   000DBC  502D               	movf	_Busy^0,w,c
  2348   000DBE  A4D8               	btfss	status,2,c
  2349   000DC0  EFE4  F006         	goto	u3111
  2350   000DC4  EFE6  F006         	goto	u3110
  2351   000DC8                     u3111:
  2352   000DC8  EF01  F008         	goto	l4273
  2353   000DCC                     u3110:
  2354   000DCC                     
  2355                           ; BSR set to: 0
  2356                           ;main.c: 589:                                 if (Serial_Buffer[2] == 0x00) {
  2357   000DCC  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  2358   000DCE  A4D8               	btfss	status,2,c
  2359   000DD0  EFEC  F006         	goto	u3121
  2360   000DD4  EFEE  F006         	goto	u3120
  2361   000DD8                     u3121:
  2362   000DD8  EF5B  F007         	goto	l4223
  2363   000DDC                     u3120:
  2364   000DDC                     
  2365                           ; BSR set to: 0
  2366                           ;main.c: 590:                                     Busy = 1;
  2367   000DDC  0E01               	movlw	1
  2368   000DDE  6E2D               	movwf	_Busy^0,c
  2369   000DE0                     
  2370                           ; BSR set to: 0
  2371                           ;main.c: 592:                                     INTCONbits.GIE = 0;
  2372   000DE0  9EF2               	bcf	242,7,c	;volatile
  2373   000DE2                     
  2374                           ; BSR set to: 0
  2375                           ;main.c: 593:                                     pause_Time = read_i2c(0x0060);
  2376   000DE2  0E60               	movlw	96
  2377   000DE4  6E46               	movwf	read_i2c@address^0,c
  2378   000DE6  0E00               	movlw	0
  2379   000DE8  6E47               	movwf	(read_i2c@address+1)^0,c
  2380   000DEA  0E00               	movlw	0
  2381   000DEC  6E48               	movwf	(read_i2c@address+2)^0,c
  2382   000DEE  0E00               	movlw	0
  2383   000DF0  6E49               	movwf	(read_i2c@address+3)^0,c
  2384   000DF2  EC7B  F00F         	call	_read_i2c	;wreg free
  2385   000DF6  5046               	movf	?_read_i2c^0,w,c
  2386   000DF8  6E29               	movwf	_pause_Time^0,c	;volatile
  2387   000DFA                     
  2388                           ;main.c: 594:                                     vib_Time = read_i2c(0x0040);
  2389   000DFA  0E40               	movlw	64
  2390   000DFC  6E46               	movwf	read_i2c@address^0,c
  2391   000DFE  0E00               	movlw	0
  2392   000E00  6E47               	movwf	(read_i2c@address+1)^0,c
  2393   000E02  0E00               	movlw	0
  2394   000E04  6E48               	movwf	(read_i2c@address+2)^0,c
  2395   000E06  0E00               	movlw	0
  2396   000E08  6E49               	movwf	(read_i2c@address+3)^0,c
  2397   000E0A  EC7B  F00F         	call	_read_i2c	;wreg free
  2398   000E0E  5046               	movf	?_read_i2c^0,w,c
  2399   000E10  6E28               	movwf	_vib_Time^0,c	;volatile
  2400   000E12                     
  2401                           ;main.c: 595:                                     Motor_Speed = read_i2c(0x0030);
  2402   000E12  0E30               	movlw	48
  2403   000E14  6E46               	movwf	read_i2c@address^0,c
  2404   000E16  0E00               	movlw	0
  2405   000E18  6E47               	movwf	(read_i2c@address+1)^0,c
  2406   000E1A  0E00               	movlw	0
  2407   000E1C  6E48               	movwf	(read_i2c@address+2)^0,c
  2408   000E1E  0E00               	movlw	0
  2409   000E20  6E49               	movwf	(read_i2c@address+3)^0,c
  2410   000E22  EC7B  F00F         	call	_read_i2c	;wreg free
  2411   000E26  C046  F01B         	movff	?_read_i2c,_Motor_Speed
  2412   000E2A  C047  F01C         	movff	?_read_i2c+1,_Motor_Speed+1
  2413   000E2E                     
  2414                           ;main.c: 596:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2415   000E2E  0E50               	movlw	80
  2416   000E30  6E46               	movwf	read_i2c@address^0,c
  2417   000E32  0E00               	movlw	0
  2418   000E34  6E47               	movwf	(read_i2c@address+1)^0,c
  2419   000E36  0E00               	movlw	0
  2420   000E38  6E48               	movwf	(read_i2c@address+2)^0,c
  2421   000E3A  0E00               	movlw	0
  2422   000E3C  6E49               	movwf	(read_i2c@address+3)^0,c
  2423   000E3E  EC7B  F00F         	call	_read_i2c	;wreg free
  2424   000E42  5046               	movf	?_read_i2c^0,w,c
  2425   000E44  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  2426   000E46                     
  2427                           ;main.c: 597:                                     INTCONbits.GIE = 1;
  2428   000E46  8EF2               	bsf	242,7,c	;volatile
  2429                           
  2430                           ;main.c: 599:                                     Serial_Buffer_Out[0] = 0x51;
  2431   000E48  0E51               	movlw	81
  2432   000E4A  0100               	movlb	0	; () banked
  2433   000E4C  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2434   000E4E                     
  2435                           ; BSR set to: 0
  2436                           ;main.c: 600:                                     Serial_Buffer_Out[1] = pause_Time;
  2437   000E4E  C029  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2438   000E52                     
  2439                           ; BSR set to: 0
  2440                           ;main.c: 601:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2441   000E52  C01B  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2442   000E56                     
  2443                           ; BSR set to: 0
  2444                           ;main.c: 602:                                     Serial_Buffer_Out[3] = vib_Time;
  2445   000E56  C028  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2446   000E5A                     
  2447                           ; BSR set to: 0
  2448                           ;main.c: 603:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2449   000E5A  C027  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2450   000E5E                     
  2451                           ; BSR set to: 0
  2452                           ;main.c: 605:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2453   000E5E  0E02               	movlw	2
  2454   000E60  6E4D               	movwf	(??_main+1)^0,c
  2455   000E62  0E04               	movlw	4
  2456   000E64  6E4C               	movwf	??_main^0,c
  2457   000E66  0EBA               	movlw	186
  2458   000E68                     u3497:
  2459   000E68  2EE8               	decfsz	wreg,f,c
  2460   000E6A  D7FE               	bra	u3497
  2461   000E6C  2E4C               	decfsz	??_main^0,f,c
  2462   000E6E  D7FC               	bra	u3497
  2463   000E70  2E4D               	decfsz	(??_main+1)^0,f,c
  2464   000E72  D7FA               	bra	u3497
  2465   000E74  D000               	nop2	
  2466   000E76                     
  2467                           ;main.c: 607:                                     INTCONbits.GIE = 0;
  2468   000E76  9EF2               	bcf	242,7,c	;volatile
  2469   000E78                     
  2470                           ;main.c: 608:                                     for (i = 0; i < 5; i++) {
  2471   000E78  0E00               	movlw	0
  2472   000E7A  6E0E               	movwf	(_i+1)^0,c
  2473   000E7C  0E00               	movlw	0
  2474   000E7E  6E0D               	movwf	_i^0,c
  2475   000E80                     l4213:
  2476   000E80  500E               	movf	(_i+1)^0,w,c
  2477   000E82  E109               	bnz	u3130
  2478   000E84  0E05               	movlw	5
  2479   000E86  5C0D               	subwf	_i^0,w,c
  2480   000E88  A0D8               	btfss	status,0,c
  2481   000E8A  EF49  F007         	goto	u3131
  2482   000E8E  EF4B  F007         	goto	u3130
  2483   000E92                     u3131:
  2484   000E92  EF4D  F007         	goto	l4217
  2485   000E96                     u3130:
  2486   000E96  EF5A  F007         	goto	l269
  2487   000E9A                     l4217:
  2488                           
  2489                           ;main.c: 609:                                         Write1USART(Serial_Buffer_Out[i]);
  2490   000E9A  0E60               	movlw	low _Serial_Buffer_Out
  2491   000E9C  240D               	addwf	_i^0,w,c
  2492   000E9E  6ED9               	movwf	fsr2l,c
  2493   000EA0  0E00               	movlw	high _Serial_Buffer_Out
  2494   000EA2  200E               	addwfc	(_i+1)^0,w,c
  2495   000EA4  6EDA               	movwf	fsr2h,c
  2496   000EA6  50DF               	movf	indf2,w,c
  2497   000EA8  EC70  F011         	call	_Write1USART
  2498   000EAC                     
  2499                           ;main.c: 610:                                     }
  2500   000EAC  4A0D               	infsnz	_i^0,f,c
  2501   000EAE  2A0E               	incf	(_i+1)^0,f,c
  2502   000EB0  EF40  F007         	goto	l4213
  2503   000EB4                     l269:
  2504                           
  2505                           ;main.c: 611:                                     INTCONbits.GIE = 1;
  2506   000EB4  8EF2               	bsf	242,7,c	;volatile
  2507   000EB6                     l4223:
  2508                           
  2509                           ;main.c: 613:                                 flushOut();
  2510   000EB6  ECA5  F010         	call	_flushOut	;wreg free
  2511   000EBA  EF6E  F006         	goto	l4149
  2512   000EBE                     l4227:
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 650:                             if (Busy == 0) {
  2516   000EBE  502D               	movf	_Busy^0,w,c
  2517   000EC0  A4D8               	btfss	status,2,c
  2518   000EC2  EF65  F007         	goto	u3141
  2519   000EC6  EF67  F007         	goto	u3140
  2520   000ECA                     u3141:
  2521   000ECA  EFBF  F007         	goto	l4253
  2522   000ECE                     u3140:
  2523   000ECE                     
  2524                           ; BSR set to: 0
  2525                           ;main.c: 651:                                 Busy = 1;
  2526   000ECE  0E01               	movlw	1
  2527   000ED0  6E2D               	movwf	_Busy^0,c
  2528   000ED2                     
  2529                           ; BSR set to: 0
  2530                           ;main.c: 652:                                 vib_Time = Serial_Buffer[2];
  2531   000ED2  C082  F028         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2532                           
  2533                           ;main.c: 654:                                 switch (vib_Time) {
  2534   000ED6  EF8D  F007         	goto	l4245
  2535   000EDA                     l4233:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;main.c: 656:                                         Vmotor_Time = 1000;
  2539   000EDA  0E03               	movlw	3
  2540   000EDC  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2541   000EDE  0EE8               	movlw	232
  2542   000EE0  6E56               	movwf	_Vmotor_Time^0,c
  2543                           
  2544                           ;main.c: 657:                                         break;
  2545   000EE2  EFAE  F007         	goto	l274
  2546   000EE6                     l4235:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;main.c: 661:                                         Vmotor_Time = 2000;
  2550   000EE6  0E07               	movlw	7
  2551   000EE8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2552   000EEA  0ED0               	movlw	208
  2553   000EEC  6E56               	movwf	_Vmotor_Time^0,c
  2554                           
  2555                           ;main.c: 662:                                         vib_Time = 0x82;
  2556   000EEE  0E82               	movlw	130
  2557   000EF0  6E28               	movwf	_vib_Time^0,c	;volatile
  2558                           
  2559                           ;main.c: 663:                                         break;
  2560   000EF2  EFAE  F007         	goto	l274
  2561   000EF6                     l4237:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;main.c: 666:                                         Vmotor_Time = 3000;
  2565   000EF6  0E0B               	movlw	11
  2566   000EF8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2567   000EFA  0EB8               	movlw	184
  2568   000EFC  6E56               	movwf	_Vmotor_Time^0,c
  2569                           
  2570                           ;main.c: 667:                                         break;
  2571   000EFE  EFAE  F007         	goto	l274
  2572   000F02                     l4239:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;main.c: 670:                                         Vmotor_Time = 4000;
  2576   000F02  0E0F               	movlw	15
  2577   000F04  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2578   000F06  0EA0               	movlw	160
  2579   000F08  6E56               	movwf	_Vmotor_Time^0,c
  2580                           
  2581                           ;main.c: 671:                                         break;
  2582   000F0A  EFAE  F007         	goto	l274
  2583   000F0E                     l4241:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;main.c: 674:                                         Vmotor_Time = 5000;
  2587   000F0E  0E13               	movlw	19
  2588   000F10  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2589   000F12  0E88               	movlw	136
  2590   000F14  6E56               	movwf	_Vmotor_Time^0,c
  2591                           
  2592                           ;main.c: 675:                                         break;
  2593   000F16  EFAE  F007         	goto	l274
  2594   000F1A                     l4245:
  2595                           
  2596                           ; BSR set to: 0
  2597   000F1A  5028               	movf	_vib_Time^0,w,c	;volatile
  2598   000F1C  6E4C               	movwf	??_main^0,c
  2599   000F1E  6A4D               	clrf	(??_main+1)^0,c
  2600                           
  2601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2602                           ; Switch size 1, requested type "simple"
  2603                           ; Number of cases is 1, Range of values is 0 to 0
  2604                           ; switch strategies available:
  2605                           ; Name         Instructions Cycles
  2606                           ; simple_byte            4     3 (average)
  2607                           ;	Chosen strategy is simple_byte
  2608   000F20  504D               	movf	(??_main+1)^0,w,c
  2609   000F22  0A00               	xorlw	0	; case 0
  2610   000F24  B4D8               	btfsc	status,2,c
  2611   000F26  EF97  F007         	goto	l4757
  2612   000F2A  EF73  F007         	goto	l4235
  2613   000F2E                     l4757:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ; Switch size 1, requested type "simple"
  2617                           ; Number of cases is 5, Range of values is 129 to 133
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte           16     9 (average)
  2621                           ;	Chosen strategy is simple_byte
  2622   000F2E  504C               	movf	??_main^0,w,c
  2623   000F30  0A81               	xorlw	129	; case 129
  2624   000F32  B4D8               	btfsc	status,2,c
  2625   000F34  EF6D  F007         	goto	l4233
  2626   000F38  0A03               	xorlw	3	; case 130
  2627   000F3A  B4D8               	btfsc	status,2,c
  2628   000F3C  EF73  F007         	goto	l4235
  2629   000F40  0A01               	xorlw	1	; case 131
  2630   000F42  B4D8               	btfsc	status,2,c
  2631   000F44  EF7B  F007         	goto	l4237
  2632   000F48  0A07               	xorlw	7	; case 132
  2633   000F4A  B4D8               	btfsc	status,2,c
  2634   000F4C  EF81  F007         	goto	l4239
  2635   000F50  0A01               	xorlw	1	; case 133
  2636   000F52  B4D8               	btfsc	status,2,c
  2637   000F54  EF87  F007         	goto	l4241
  2638   000F58  EF73  F007         	goto	l4235
  2639   000F5C                     l274:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;main.c: 677:                                 INTCONbits.GIE = 0;
  2643   000F5C  9EF2               	bcf	242,7,c	;volatile
  2644   000F5E                     
  2645                           ; BSR set to: 0
  2646                           ;main.c: 678:                                 write_i2c(0x0040, vib_Time);
  2647   000F5E  0E40               	movlw	64
  2648   000F60  6E46               	movwf	write_i2c@address^0,c
  2649   000F62  0E00               	movlw	0
  2650   000F64  6E47               	movwf	(write_i2c@address+1)^0,c
  2651   000F66  0E00               	movlw	0
  2652   000F68  6E48               	movwf	(write_i2c@address+2)^0,c
  2653   000F6A  0E00               	movlw	0
  2654   000F6C  6E49               	movwf	(write_i2c@address+3)^0,c
  2655   000F6E  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  2656   000F72  6A4B               	clrf	(write_i2c@data+1)^0,c
  2657   000F74  EC03  F010         	call	_write_i2c	;wreg free
  2658   000F78                     
  2659                           ;main.c: 679:                                 INTCONbits.GIE = 1;
  2660   000F78  8EF2               	bsf	242,7,c	;volatile
  2661   000F7A                     
  2662                           ;main.c: 681:                                 Busy = 0;
  2663   000F7A  0E00               	movlw	0
  2664   000F7C  6E2D               	movwf	_Busy^0,c
  2665   000F7E                     l4253:
  2666                           
  2667                           ;main.c: 686:                             if (Busy == 0) {
  2668   000F7E  502D               	movf	_Busy^0,w,c
  2669   000F80  A4D8               	btfss	status,2,c
  2670   000F82  EFC5  F007         	goto	u3151
  2671   000F86  EFC7  F007         	goto	u3150
  2672   000F8A                     u3151:
  2673   000F8A  EF01  F008         	goto	l4273
  2674   000F8E                     u3150:
  2675   000F8E                     
  2676                           ;main.c: 687:                                 Busy = 1;
  2677   000F8E  0E01               	movlw	1
  2678   000F90  6E2D               	movwf	_Busy^0,c
  2679   000F92                     
  2680                           ;main.c: 688:                                 delay_motor_stop_time = Serial_Buffer[2];
  2681   000F92  C082  F027         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2682   000F96                     
  2683                           ;main.c: 689:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2684   000F96  C027  F019         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2685   000F9A  6A1A               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2686   000F9C                     
  2687                           ;main.c: 691:                                 INTCONbits.GIE = 0;
  2688   000F9C  9EF2               	bcf	242,7,c	;volatile
  2689   000F9E                     
  2690                           ;main.c: 692:                                 write_i2c(0x0050, delay_motor_stop_time);
  2691   000F9E  0E50               	movlw	80
  2692   000FA0  6E46               	movwf	write_i2c@address^0,c
  2693   000FA2  0E00               	movlw	0
  2694   000FA4  6E47               	movwf	(write_i2c@address+1)^0,c
  2695   000FA6  0E00               	movlw	0
  2696   000FA8  6E48               	movwf	(write_i2c@address+2)^0,c
  2697   000FAA  0E00               	movlw	0
  2698   000FAC  6E49               	movwf	(write_i2c@address+3)^0,c
  2699   000FAE  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2700   000FB2  6A4B               	clrf	(write_i2c@data+1)^0,c
  2701   000FB4  EC03  F010         	call	_write_i2c	;wreg free
  2702   000FB8                     
  2703                           ;main.c: 693:                                 INTCONbits.GIE = 1;
  2704   000FB8  8EF2               	bsf	242,7,c	;volatile
  2705   000FBA  EF6E  F006         	goto	l4149
  2706   000FBE                     l4271:
  2707   000FBE  0100               	movlb	0	; () banked
  2708   000FC0  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  2709   000FC2  6E4C               	movwf	??_main^0,c
  2710   000FC4  6A4D               	clrf	(??_main+1)^0,c
  2711                           
  2712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2713                           ; Switch size 1, requested type "simple"
  2714                           ; Number of cases is 1, Range of values is 0 to 0
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte            4     3 (average)
  2718                           ;	Chosen strategy is simple_byte
  2719   000FC6  504D               	movf	(??_main+1)^0,w,c
  2720   000FC8  0A00               	xorlw	0	; case 0
  2721   000FCA  B4D8               	btfsc	status,2,c
  2722   000FCC  EFEA  F007         	goto	l4759
  2723   000FD0  EF01  F008         	goto	l4273
  2724   000FD4                     l4759:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ; Switch size 1, requested type "simple"
  2728                           ; Number of cases is 5, Range of values is 35 to 102
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte           16     9 (average)
  2732                           ;	Chosen strategy is simple_byte
  2733   000FD4  504C               	movf	??_main^0,w,c
  2734   000FD6  0A23               	xorlw	35	; case 35
  2735   000FD8  B4D8               	btfsc	status,2,c
  2736   000FDA  EF72  F006         	goto	l4151
  2737   000FDE  0A67               	xorlw	103	; case 68
  2738   000FE0  B4D8               	btfsc	status,2,c
  2739   000FE2  EFE5  F005         	goto	l4105
  2740   000FE6  0A15               	xorlw	21	; case 81
  2741   000FE8  B4D8               	btfsc	status,2,c
  2742   000FEA  EFDE  F006         	goto	l4181
  2743   000FEE  0A34               	xorlw	52	; case 101
  2744   000FF0  B4D8               	btfsc	status,2,c
  2745   000FF2  EF5F  F007         	goto	l4227
  2746   000FF6  0A03               	xorlw	3	; case 102
  2747   000FF8  B4D8               	btfsc	status,2,c
  2748   000FFA  EFBF  F007         	goto	l4253
  2749   000FFE  EF01  F008         	goto	l4273
  2750   001002                     l4273:
  2751                           
  2752                           ;main.c: 702:                     Serial_Flag = 0;
  2753   001002  0E00               	movlw	0
  2754   001004  6E31               	movwf	_Serial_Flag^0,c
  2755                           
  2756                           ;main.c: 703:                     Serial_GData = 0;
  2757   001006  0E00               	movlw	0
  2758   001008  6E30               	movwf	_Serial_GData^0,c
  2759                           
  2760                           ;main.c: 704:                     OpMode = MANUAL_MODE;
  2761   00100A  0E00               	movlw	0
  2762   00100C  6E2A               	movwf	_OpMode^0,c	;volatile
  2763                           
  2764                           ;main.c: 705:                 } else {
  2765   00100E  EFC8  F003         	goto	l203
  2766   001012                     l4275:
  2767                           
  2768                           ;main.c: 706:                     OpMode = MANUAL_MODE;
  2769   001012  0E00               	movlw	0
  2770   001014  6E2A               	movwf	_OpMode^0,c	;volatile
  2771   001016  EFC8  F003         	goto	l203
  2772   00101A                     l4277:
  2773   00101A  502A               	movf	_OpMode^0,w,c	;volatile
  2774   00101C  6E4C               	movwf	??_main^0,c
  2775   00101E  6A4D               	clrf	(??_main+1)^0,c
  2776                           
  2777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2778                           ; Switch size 1, requested type "simple"
  2779                           ; Number of cases is 1, Range of values is 0 to 0
  2780                           ; switch strategies available:
  2781                           ; Name         Instructions Cycles
  2782                           ; simple_byte            4     3 (average)
  2783                           ;	Chosen strategy is simple_byte
  2784   001020  504D               	movf	(??_main+1)^0,w,c
  2785   001022  0A00               	xorlw	0	; case 0
  2786   001024  B4D8               	btfsc	status,2,c
  2787   001026  EF17  F008         	goto	l4761
  2788   00102A  EFC8  F003         	goto	l203
  2789   00102E                     l4761:
  2790                           
  2791                           ; Switch size 1, requested type "simple"
  2792                           ; Number of cases is 2, Range of values is 0 to 2
  2793                           ; switch strategies available:
  2794                           ; Name         Instructions Cycles
  2795                           ; simple_byte            7     4 (average)
  2796                           ;	Chosen strategy is simple_byte
  2797   00102E  504C               	movf	??_main^0,w,c
  2798   001030  0A00               	xorlw	0	; case 0
  2799   001032  B4D8               	btfsc	status,2,c
  2800   001034  EFD5  F003         	goto	l205
  2801   001038  0A02               	xorlw	2	; case 2
  2802   00103A  B4D8               	btfsc	status,2,c
  2803   00103C  EFDB  F005         	goto	l4101
  2804   001040  EFC8  F003         	goto	l203
  2805   001044  EF81  F001         	goto	start
  2806   001048                     __end_of_main:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _read_i2c *****************
  2810 ;; Defined at:
  2811 ;;		line 120 in file "i2c.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  address         4   20[COMRAM] long 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  read_byte       2   24[COMRAM] int 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2   20[COMRAM] int 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        6 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 4
  2832 ;; This function calls:
  2833 ;;		___aldiv
  2834 ;;		_i2c_Address
  2835 ;;		_i2c_Read
  2836 ;;		_i2c_Restart
  2837 ;;		_i2c_Start
  2838 ;;		_i2c_Stop
  2839 ;;		_i2c_Write
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text1
  2846   001EF6                     __ptext1:
  2847                           	callstack 0
  2848   001EF6                     _read_i2c:
  2849                           	callstack 26
  2850   001EF6                     
  2851                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  2852   001EF6  ECB5  F011         	call	_i2c_Start	;wreg free
  2853                           
  2854                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  2855   001EFA  0E00               	movlw	0
  2856   001EFC  6E39               	movwf	i2c_Address@mode^0,c
  2857   001EFE  0EA0               	movlw	160
  2858   001F00  EC86  F011         	call	_i2c_Address
  2859                           
  2860                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  2861   001F04  C046  F038         	movff	read_i2c@address,___aldiv@dividend
  2862   001F08  C047  F039         	movff	read_i2c@address+1,___aldiv@dividend+1
  2863   001F0C  C048  F03A         	movff	read_i2c@address+2,___aldiv@dividend+2
  2864   001F10  C049  F03B         	movff	read_i2c@address+3,___aldiv@dividend+3
  2865   001F14  0E00               	movlw	0
  2866   001F16  6E3C               	movwf	___aldiv@divisor^0,c
  2867   001F18  0E01               	movlw	1
  2868   001F1A  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  2869   001F1C  0E00               	movlw	0
  2870   001F1E  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  2871   001F20  0E00               	movlw	0
  2872   001F22  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  2873   001F24  EC48  F00B         	call	___aldiv	;wreg free
  2874   001F28  5038               	movf	?___aldiv^0,w,c
  2875   001F2A  EC97  F011         	call	_i2c_Write
  2876                           
  2877                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  2878   001F2E  5046               	movf	read_i2c@address^0,w,c
  2879   001F30  EC97  F011         	call	_i2c_Write
  2880                           
  2881                           ;i2c.c: 128:     i2c_Restart();
  2882   001F34  ECAD  F011         	call	_i2c_Restart	;wreg free
  2883                           
  2884                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  2885   001F38  0E01               	movlw	1
  2886   001F3A  6E39               	movwf	i2c_Address@mode^0,c
  2887   001F3C  0EA0               	movlw	160
  2888   001F3E  EC86  F011         	call	_i2c_Address
  2889                           
  2890                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  2891   001F42  0E00               	movlw	0
  2892   001F44  ECC2  F010         	call	_i2c_Read
  2893   001F48  C039  F04A         	movff	?_i2c_Read,read_i2c@read_byte
  2894   001F4C  C03A  F04B         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2895                           
  2896                           ;i2c.c: 134:     i2c_Stop();
  2897   001F50  ECB1  F011         	call	_i2c_Stop	;wreg free
  2898   001F54                     
  2899                           ;i2c.c: 135:     return (read_byte);
  2900   001F54  C04A  F046         	movff	read_i2c@read_byte,?_read_i2c
  2901   001F58  C04B  F047         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2902   001F5C  0012               	return		;funcret
  2903   001F5E                     __end_of_read_i2c:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _i2c_Restart *****************
  2907 ;; Defined at:
  2908 ;;		line 56 in file "i2c.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 3
  2929 ;; This function calls:
  2930 ;;		_i2c_Wait
  2931 ;; This function is called by:
  2932 ;;		_read_i2c
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text2
  2937   00235A                     __ptext2:
  2938                           	callstack 0
  2939   00235A                     _i2c_Restart:
  2940                           	callstack 26
  2941   00235A                     
  2942                           ;i2c.c: 57:     i2c_Wait();
  2943   00235A  EC21  F011         	call	_i2c_Wait	;wreg free
  2944   00235E                     
  2945                           ;i2c.c: 58:     RSEN2 = 1;
  2946   00235E  826B               	bsf	3947,1,c	;volatile
  2947   002360  0012               	return		;funcret
  2948   002362                     __end_of_i2c_Restart:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _i2c_Read *****************
  2952 ;; Defined at:
  2953 ;;		line 89 in file "i2c.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  ack             1    wreg     unsigned char 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  ack             1    9[COMRAM] unsigned char 
  2958 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  2    7[COMRAM] int 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        4 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 3
  2975 ;; This function calls:
  2976 ;;		_i2c_Wait
  2977 ;; This function is called by:
  2978 ;;		_read_i2c
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text3
  2983   002184                     __ptext3:
  2984                           	callstack 0
  2985   002184                     _i2c_Read:
  2986                           	callstack 26
  2987                           
  2988                           ;incstack = 0
  2989                           ;i2c_Read@ack stored from wreg
  2990   002184  6E3B               	movwf	i2c_Read@ack^0,c
  2991   002186                     
  2992                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  2993   002186  EC21  F011         	call	_i2c_Wait	;wreg free
  2994   00218A                     
  2995                           ;i2c.c: 96:     RCEN2 = 1;
  2996   00218A  866B               	bsf	3947,3,c	;volatile
  2997                           
  2998                           ;i2c.c: 97:     i2c_Wait();
  2999   00218C  EC21  F011         	call	_i2c_Wait	;wreg free
  3000   002190                     
  3001                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  3002   002190  CF6F F03C          	movff	3951,i2c_Read@i2cReadData	;volatile
  3003                           
  3004                           ;i2c.c: 99:     i2c_Wait();
  3005   002194  EC21  F011         	call	_i2c_Wait	;wreg free
  3006   002198                     
  3007                           ;i2c.c: 100:     if (ack)
  3008   002198  503B               	movf	i2c_Read@ack^0,w,c
  3009   00219A  B4D8               	btfsc	status,2,c
  3010   00219C  EFD2  F010         	goto	u2041
  3011   0021A0  EFD4  F010         	goto	u2040
  3012   0021A4                     u2041:
  3013   0021A4  EFD7  F010         	goto	l568
  3014   0021A8                     u2040:
  3015   0021A8                     
  3016                           ;i2c.c: 101:         ACKDT2 = 0;
  3017   0021A8  9A6B               	bcf	3947,5,c	;volatile
  3018   0021AA  EFD8  F010         	goto	l569
  3019   0021AE                     l568:
  3020                           
  3021                           ;i2c.c: 103:         ACKDT2 = 1;
  3022   0021AE  8A6B               	bsf	3947,5,c	;volatile
  3023   0021B0                     l569:
  3024                           
  3025                           ;i2c.c: 104:     ACKEN2 = 1;
  3026   0021B0  886B               	bsf	3947,4,c	;volatile
  3027                           
  3028                           ;i2c.c: 106:     return ( i2cReadData);
  3029   0021B2  C03C  F039         	movff	i2c_Read@i2cReadData,?_i2c_Read
  3030   0021B6  6A3A               	clrf	(?_i2c_Read+1)^0,c
  3031   0021B8  0012               	return		;funcret
  3032   0021BA                     __end_of_i2c_Read:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _initUSART *****************
  3036 ;; Defined at:
  3037 ;;		line 20 in file "usart.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 2
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text4
  3066   00221C                     __ptext4:
  3067                           	callstack 0
  3068   00221C                     _initUSART:
  3069                           	callstack 28
  3070   00221C                     
  3071                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  3072   00221C  9C94               	bcf	148,6,c	;volatile
  3073                           
  3074                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  3075   00221E  8E94               	bsf	148,7,c	;volatile
  3076                           
  3077                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  3078   002220  98AD               	bcf	173,4,c	;volatile
  3079                           
  3080                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  3081   002222  9CAD               	bcf	173,6,c	;volatile
  3082                           
  3083                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  3084   002224  8AAD               	bsf	173,5,c	;volatile
  3085                           
  3086                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  3087   002226  9CAC               	bcf	172,6,c	;volatile
  3088                           
  3089                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  3090   002228  88AC               	bsf	172,4,c	;volatile
  3091                           
  3092                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  3093   00222A  9EAD               	bcf	173,7,c	;volatile
  3094                           
  3095                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  3096   00222C  86AC               	bsf	172,3,c	;volatile
  3097                           
  3098                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  3099   00222E  8EAC               	bsf	172,7,c	;volatile
  3100                           
  3101                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  3102   002230  967E               	bcf	126,3,c	;volatile
  3103                           
  3104                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  3105   002232  84AD               	bsf	173,2,c	;volatile
  3106                           
  3107                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  3108   002234  8A9D               	bsf	157,5,c	;volatile
  3109                           
  3110                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  3111   002236  989D               	bcf	157,4,c	;volatile
  3112   002238                     
  3113                           ;usart.c: 39:     SPBRG1 = 25;
  3114   002238  0E19               	movlw	25
  3115   00223A  6EB0               	movwf	176,c	;volatile
  3116                           
  3117                           ;usart.c: 40:     SPBRGH1 = 0;
  3118   00223C  0E00               	movlw	0
  3119   00223E  6E7F               	movwf	127,c	;volatile
  3120   002240  0012               	return		;funcret
  3121   002242                     __end_of_initUSART:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _initMotor *****************
  3125 ;; Defined at:
  3126 ;;		line 21 in file "MotorDriver.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 2
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text5
  3155   002320                     __ptext5:
  3156                           	callstack 0
  3157   002320                     _initMotor:
  3158                           	callstack 28
  3159   002320  0EC7               	movlw	199
  3160   002322  6E77               	movwf	119,c	;volatile
  3161   002324  9679               	bcf	121,3,c	;volatile
  3162   002326  8C79               	bsf	121,6,c	;volatile
  3163   002328  0E00               	movlw	0
  3164   00232A  6E76               	movwf	118,c	;volatile
  3165   00232C  0012               	return		;funcret
  3166   00232E                     __end_of_initMotor:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _init *****************
  3170 ;; Defined at:
  3171 ;;		line 18 in file "IO.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 2
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text6
  3200   001E84                     __ptext6:
  3201                           	callstack 0
  3202   001E84                     _init:
  3203                           	callstack 28
  3204   001E84                     
  3205                           ;IO.c: 19:     TRISA = 0xFB;
  3206   001E84  0EFB               	movlw	251
  3207   001E86  6E92               	movwf	146,c	;volatile
  3208   001E88                     
  3209                           ;IO.c: 20:     TRISB = 0XFF;
  3210   001E88  6893               	setf	147,c	;volatile
  3211                           
  3212                           ;IO.c: 21:     TRISC = 0X84;
  3213   001E8A  0E84               	movlw	132
  3214   001E8C  6E94               	movwf	148,c	;volatile
  3215                           
  3216                           ;IO.c: 22:     TRISD = 0XC0;
  3217   001E8E  0EC0               	movlw	192
  3218   001E90  6E95               	movwf	149,c	;volatile
  3219                           
  3220                           ;IO.c: 23:     TRISE = 0X00;
  3221   001E92  0E00               	movlw	0
  3222   001E94  6E96               	movwf	150,c	;volatile
  3223                           
  3224                           ;IO.c: 24:     TRISF = 0X00;
  3225   001E96  0E00               	movlw	0
  3226   001E98  6E97               	movwf	151,c	;volatile
  3227                           
  3228                           ;IO.c: 25:     TRISG = 0X05;
  3229   001E9A  0E05               	movlw	5
  3230   001E9C  6E98               	movwf	152,c	;volatile
  3231   001E9E                     
  3232                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3233   001E9E  9EC2               	bcf	194,7,c	;volatile
  3234   001EA0                     
  3235                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3236   001EA0  9CC2               	bcf	194,6,c	;volatile
  3237   001EA2                     
  3238                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3239   001EA2  90C2               	bcf	194,0,c	;volatile
  3240   001EA4                     
  3241                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3242   001EA4  8EC1               	bsf	193,7,c	;volatile
  3243   001EA6                     
  3244                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3245   001EA6  9CC1               	bcf	193,6,c	;volatile
  3246   001EA8                     
  3247                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3248   001EA8  9AC1               	bcf	193,5,c	;volatile
  3249   001EAA                     
  3250                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3251   001EAA  88C1               	bsf	193,4,c	;volatile
  3252   001EAC                     
  3253                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3254   001EAC  96C1               	bcf	193,3,c	;volatile
  3255   001EAE                     
  3256                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3257   001EAE  84C1               	bsf	193,2,c	;volatile
  3258   001EB0                     
  3259                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3260   001EB0  92C1               	bcf	193,1,c	;volatile
  3261   001EB2                     
  3262                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3263   001EB2  90C1               	bcf	193,0,c	;volatile
  3264   001EB4                     
  3265                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3266   001EB4  88C0               	bsf	192,4,c	;volatile
  3267   001EB6                     
  3268                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3269   001EB6  90C1               	bcf	193,0,c	;volatile
  3270   001EB8                     
  3271                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3272   001EB8  82C1               	bsf	193,1,c	;volatile
  3273   001EBA                     
  3274                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3275   001EBA  84C1               	bsf	193,2,c	;volatile
  3276   001EBC                     
  3277                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3278   001EBC  86C1               	bsf	193,3,c	;volatile
  3279   001EBE                     
  3280                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3281   001EBE  88C1               	bsf	193,4,c	;volatile
  3282   001EC0                     
  3283                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3284   001EC0  8EC1               	bsf	193,7,c	;volatile
  3285   001EC2                     
  3286                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3287   001EC2  98C0               	bcf	192,4,c	;volatile
  3288   001EC4                     
  3289                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3290   001EC4  8EF2               	bsf	242,7,c	;volatile
  3291                           
  3292                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3293   001EC6  0E03               	movlw	3
  3294   001EC8  12D3               	iorwf	211,f,c	;volatile
  3295                           
  3296                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3297   001ECA  0E70               	movlw	112
  3298   001ECC  12D3               	iorwf	211,f,c	;volatile
  3299                           
  3300                           ;IO.c: 68:     ADRES = 0;
  3301   001ECE  0E00               	movlw	0
  3302   001ED0  6EC4               	movwf	196,c	;volatile
  3303   001ED2  0E00               	movlw	0
  3304   001ED4  6EC3               	movwf	195,c	;volatile
  3305   001ED6                     
  3306                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3307   001ED6  94C2               	bcf	194,2,c	;volatile
  3308   001ED8                     
  3309                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3310   001ED8  96C2               	bcf	194,3,c	;volatile
  3311   001EDA                     
  3312                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3313   001EDA  98C2               	bcf	194,4,c	;volatile
  3314   001EDC                     
  3315                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3316   001EDC  9AC2               	bcf	194,5,c	;volatile
  3317   001EDE                     
  3318                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3319   001EDE  8CC1               	bsf	193,6,c	;volatile
  3320   001EE0                     
  3321                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3322   001EE0  80C2               	bsf	194,0,c	;volatile
  3323   001EE2                     
  3324                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3325   001EE2  82C2               	bsf	194,1,c	;volatile
  3326   001EE4                     l639:
  3327                           
  3328                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3329   001EE4  B2C2               	btfsc	194,1,c	;volatile
  3330   001EE6  EF77  F00F         	goto	u2051
  3331   001EEA  EF79  F00F         	goto	u2050
  3332   001EEE                     u2051:
  3333   001EEE  EF72  F00F         	goto	l639
  3334   001EF2                     u2050:
  3335   001EF2                     
  3336                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3337   001EF2  9CC1               	bcf	193,6,c	;volatile
  3338   001EF4  0012               	return		;funcret
  3339   001EF6                     __end_of_init:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _i2c_Init *****************
  3343 ;; Defined at:
  3344 ;;		line 25 in file "i2c.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 2
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text7
  3373   0022CA                     __ptext7:
  3374                           	callstack 0
  3375   0022CA                     _i2c_Init:
  3376                           	callstack 28
  3377   0022CA                     
  3378                           ;i2c.c: 29:     TRISD5 = 1;
  3379   0022CA  8A95               	bsf	3989,5,c	;volatile
  3380                           
  3381                           ;i2c.c: 30:     TRISD6 = 1;
  3382   0022CC  8C95               	bsf	3989,6,c	;volatile
  3383   0022CE                     
  3384                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3385   0022CE  0E28               	movlw	40
  3386   0022D0  6E6C               	movwf	108,c	;volatile
  3387                           
  3388                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3389   0022D2  0E00               	movlw	0
  3390   0022D4  6E6B               	movwf	107,c	;volatile
  3391                           
  3392                           ;i2c.c: 35:     SSP2ADD = 39;
  3393   0022D6  0E27               	movlw	39
  3394   0022D8  6E6E               	movwf	110,c	;volatile
  3395                           
  3396                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3397   0022DA  0EC0               	movlw	192
  3398   0022DC  6E6D               	movwf	109,c	;volatile
  3399   0022DE  0012               	return		;funcret
  3400   0022E0                     __end_of_i2c_Init:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function _flush *****************
  3404 ;; Defined at:
  3405 ;;		line 1144 in file "main.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  i               2    6[COMRAM] int 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 2
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text8
  3434   002110                     __ptext8:
  3435                           	callstack 0
  3436   002110                     _flush:
  3437                           	callstack 28
  3438   002110                     
  3439                           ;main.c: 1145:     int i;;main.c: 1147:     for (i = 0; i < 16; i++) {
  3440   002110  0E00               	movlw	0
  3441   002112  6E39               	movwf	(flush@i+1)^0,c
  3442   002114  0E00               	movlw	0
  3443   002116  6E38               	movwf	flush@i^0,c
  3444   002118                     l3759:
  3445                           
  3446                           ;main.c: 1148:         Serial_Buffer[i] = 0x00;
  3447   002118  0E80               	movlw	low _Serial_Buffer
  3448   00211A  2438               	addwf	flush@i^0,w,c
  3449   00211C  6ED9               	movwf	fsr2l,c
  3450   00211E  0E00               	movlw	high _Serial_Buffer
  3451   002120  2039               	addwfc	(flush@i+1)^0,w,c
  3452   002122  6EDA               	movwf	fsr2h,c
  3453   002124  0E00               	movlw	0
  3454   002126  6EDF               	movwf	indf2,c
  3455   002128                     
  3456                           ;main.c: 1149:     }
  3457   002128  4A38               	infsnz	flush@i^0,f,c
  3458   00212A  2A39               	incf	(flush@i+1)^0,f,c
  3459   00212C  BE39               	btfsc	(flush@i+1)^0,7,c
  3460   00212E  EFA2  F010         	goto	u2541
  3461   002132  5039               	movf	(flush@i+1)^0,w,c
  3462   002134  E109               	bnz	u2540
  3463   002136  0E10               	movlw	16
  3464   002138  5C38               	subwf	flush@i^0,w,c
  3465   00213A  A0D8               	btfss	status,0,c
  3466   00213C  EFA2  F010         	goto	u2541
  3467   002140  EFA4  F010         	goto	u2540
  3468   002144                     u2541:
  3469   002144  EF8C  F010         	goto	l3759
  3470   002148                     u2540:
  3471   002148  0012               	return		;funcret
  3472   00214A                     __end_of_flush:
  3473                           	callstack 0
  3474                           
  3475 ;; *************** function _WriteSTLED316SVibMode *****************
  3476 ;; Defined at:
  3477 ;;		line 244 in file "Display.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  v_mode          1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  v_mode          1   12[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 3
  3498 ;; This function calls:
  3499 ;;		_STLED316s_SPI_SendData
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text9
  3506   001FB8                     __ptext9:
  3507                           	callstack 0
  3508   001FB8                     _WriteSTLED316SVibMode:
  3509                           	callstack 27
  3510                           
  3511                           ;incstack = 0
  3512                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3513   001FB8  6E3E               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3514   001FBA                     
  3515                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  3516   001FBA  988B               	bcf	139,4,c	;volatile
  3517   001FBC                     
  3518                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  3519   001FBC  0E00               	movlw	0
  3520   001FBE  EC02  F00F         	call	_STLED316s_SPI_SendData
  3521   001FC2                     
  3522                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  3523   001FC2  888B               	bsf	139,4,c	;volatile
  3524   001FC4                     
  3525                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  3526   001FC4  988B               	bcf	139,4,c	;volatile
  3527                           
  3528                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  3529   001FC6  0E00               	movlw	0
  3530   001FC8  EC02  F00F         	call	_STLED316s_SPI_SendData
  3531   001FCC                     
  3532                           ;Display.c: 261:     if (v_mode == 1) {
  3533   001FCC  043E               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3534   001FCE  A4D8               	btfss	status,2,c
  3535   001FD0  EFEC  F00F         	goto	u2121
  3536   001FD4  EFEE  F00F         	goto	u2120
  3537   001FD8                     u2121:
  3538   001FD8  EFF6  F00F         	goto	l3495
  3539   001FDC                     u2120:
  3540   001FDC                     
  3541                           ;Display.c: 262:         STLED316s_SPI_SendData(0x00);
  3542   001FDC  0E00               	movlw	0
  3543   001FDE  EC02  F00F         	call	_STLED316s_SPI_SendData
  3544                           
  3545                           ;Display.c: 263:         STLED316s_SPI_SendData(0xBE);
  3546   001FE2  0EBE               	movlw	190
  3547   001FE4  EC02  F00F         	call	_STLED316s_SPI_SendData
  3548                           
  3549                           ;Display.c: 264:     } else {
  3550   001FE8  EFFC  F00F         	goto	l3497
  3551   001FEC                     l3495:
  3552                           
  3553                           ;Display.c: 265:         STLED316s_SPI_SendData(0x00);
  3554   001FEC  0E00               	movlw	0
  3555   001FEE  EC02  F00F         	call	_STLED316s_SPI_SendData
  3556                           
  3557                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  3558   001FF2  0E3E               	movlw	62
  3559   001FF4  EC02  F00F         	call	_STLED316s_SPI_SendData
  3560   001FF8                     l3497:
  3561                           
  3562                           ;Display.c: 269:     LATCbits.LATC4 = 1;
  3563   001FF8  888B               	bsf	139,4,c	;volatile
  3564   001FFA                     
  3565                           ;Display.c: 271:     LATCbits.LATC4 = 0;
  3566   001FFA  988B               	bcf	139,4,c	;volatile
  3567                           
  3568                           ;Display.c: 273:     STLED316s_SPI_SendData(0x0D);
  3569   001FFC  0E0D               	movlw	13
  3570   001FFE  EC02  F00F         	call	_STLED316s_SPI_SendData
  3571   002002                     
  3572                           ;Display.c: 275:     LATCbits.LATC4 = 1;
  3573   002002  888B               	bsf	139,4,c	;volatile
  3574   002004  0012               	return		;funcret
  3575   002006                     __end_of_WriteSTLED316SVibMode:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _ToggleVIB_Mode *****************
  3579 ;; Defined at:
  3580 ;;		line 901 in file "main.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 5
  3601 ;; This function calls:
  3602 ;;		_write_i2c
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text10
  3609   0020D4                     __ptext10:
  3610                           	callstack 0
  3611   0020D4                     _ToggleVIB_Mode:
  3612                           	callstack 25
  3613   0020D4                     
  3614                           ;main.c: 902:     if (vibration_mode)
  3615   0020D4  502C               	movf	_vibration_mode^0,w,c
  3616   0020D6  B4D8               	btfsc	status,2,c
  3617   0020D8  EF70  F010         	goto	u2111
  3618   0020DC  EF72  F010         	goto	u2110
  3619   0020E0                     u2111:
  3620   0020E0  EF76  F010         	goto	l3475
  3621   0020E4                     u2110:
  3622   0020E4                     
  3623                           ;main.c: 903:         vibration_mode = 0;
  3624   0020E4  0E00               	movlw	0
  3625   0020E6  6E2C               	movwf	_vibration_mode^0,c
  3626   0020E8  EF78  F010         	goto	l3477
  3627   0020EC                     l3475:
  3628                           
  3629                           ;main.c: 905:         vibration_mode = 1;
  3630   0020EC  0E01               	movlw	1
  3631   0020EE  6E2C               	movwf	_vibration_mode^0,c
  3632   0020F0                     l3477:
  3633                           
  3634                           ;main.c: 912:     INTCONbits.GIE = 0;
  3635   0020F0  9EF2               	bcf	242,7,c	;volatile
  3636   0020F2                     
  3637                           ;main.c: 913:     write_i2c(0x0010, vibration_mode);
  3638   0020F2  0E10               	movlw	16
  3639   0020F4  6E46               	movwf	write_i2c@address^0,c
  3640   0020F6  0E00               	movlw	0
  3641   0020F8  6E47               	movwf	(write_i2c@address+1)^0,c
  3642   0020FA  0E00               	movlw	0
  3643   0020FC  6E48               	movwf	(write_i2c@address+2)^0,c
  3644   0020FE  0E00               	movlw	0
  3645   002100  6E49               	movwf	(write_i2c@address+3)^0,c
  3646   002102  C02C  F04A         	movff	_vibration_mode,write_i2c@data
  3647   002106  6A4B               	clrf	(write_i2c@data+1)^0,c
  3648   002108  EC03  F010         	call	_write_i2c	;wreg free
  3649   00210C                     
  3650                           ;main.c: 914:     INTCONbits.GIE = 1;
  3651   00210C  8EF2               	bsf	242,7,c	;volatile
  3652   00210E  0012               	return		;funcret
  3653   002110                     __end_of_ToggleVIB_Mode:
  3654                           	callstack 0
  3655                           
  3656 ;; *************** function _write_i2c *****************
  3657 ;; Defined at:
  3658 ;;		line 109 in file "i2c.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  address         4   20[COMRAM] long 
  3661 ;;  data            2   24[COMRAM] int 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3673 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;Total ram usage:        6 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 4
  3680 ;; This function calls:
  3681 ;;		___aldiv
  3682 ;;		_i2c_Address
  3683 ;;		_i2c_Start
  3684 ;;		_i2c_Stop
  3685 ;;		_i2c_Write
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;;		_ToggleVIB_Mode
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text11
  3693   002006                     __ptext11:
  3694                           	callstack 0
  3695   002006                     _write_i2c:
  3696                           	callstack 26
  3697   002006                     
  3698                           ;i2c.c: 110:     i2c_Start();
  3699   002006  ECB5  F011         	call	_i2c_Start	;wreg free
  3700                           
  3701                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  3702   00200A  0E00               	movlw	0
  3703   00200C  6E39               	movwf	i2c_Address@mode^0,c
  3704   00200E  0EA0               	movlw	160
  3705   002010  EC86  F011         	call	_i2c_Address
  3706                           
  3707                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  3708   002014  C046  F038         	movff	write_i2c@address,___aldiv@dividend
  3709   002018  C047  F039         	movff	write_i2c@address+1,___aldiv@dividend+1
  3710   00201C  C048  F03A         	movff	write_i2c@address+2,___aldiv@dividend+2
  3711   002020  C049  F03B         	movff	write_i2c@address+3,___aldiv@dividend+3
  3712   002024  0E00               	movlw	0
  3713   002026  6E3C               	movwf	___aldiv@divisor^0,c
  3714   002028  0E01               	movlw	1
  3715   00202A  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  3716   00202C  0E00               	movlw	0
  3717   00202E  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  3718   002030  0E00               	movlw	0
  3719   002032  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  3720   002034  EC48  F00B         	call	___aldiv	;wreg free
  3721   002038  5038               	movf	?___aldiv^0,w,c
  3722   00203A  EC97  F011         	call	_i2c_Write
  3723                           
  3724                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  3725   00203E  5046               	movf	write_i2c@address^0,w,c
  3726   002040  EC97  F011         	call	_i2c_Write
  3727                           
  3728                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  3729   002044  504A               	movf	write_i2c@data^0,w,c
  3730   002046  EC97  F011         	call	_i2c_Write
  3731                           
  3732                           ;i2c.c: 115:     i2c_Stop();
  3733   00204A  ECB1  F011         	call	_i2c_Stop	;wreg free
  3734   00204E  0012               	return		;funcret
  3735   002050                     __end_of_write_i2c:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _i2c_Write *****************
  3739 ;; Defined at:
  3740 ;;		line 70 in file "i2c.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  data            1    wreg     unsigned char 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  data            1    7[COMRAM] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;Total ram usage:        1 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 3
  3761 ;; This function calls:
  3762 ;;		_i2c_Wait
  3763 ;; This function is called by:
  3764 ;;		_write_i2c
  3765 ;;		_read_i2c
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text12
  3770   00232E                     __ptext12:
  3771                           	callstack 0
  3772   00232E                     _i2c_Write:
  3773                           	callstack 26
  3774                           
  3775                           ;incstack = 0
  3776                           ;i2c_Write@data stored from wreg
  3777   00232E  6E39               	movwf	i2c_Write@data^0,c
  3778   002330                     
  3779                           ;i2c.c: 71:     i2c_Wait();
  3780   002330  EC21  F011         	call	_i2c_Wait	;wreg free
  3781   002334                     
  3782                           ;i2c.c: 72:     SSP2BUF = data;
  3783   002334  C039  FF6F         	movff	i2c_Write@data,3951	;volatile
  3784   002338  0012               	return		;funcret
  3785   00233A                     __end_of_i2c_Write:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _i2c_Stop *****************
  3789 ;; Defined at:
  3790 ;;		line 63 in file "i2c.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 3
  3811 ;; This function calls:
  3812 ;;		_i2c_Wait
  3813 ;; This function is called by:
  3814 ;;		_write_i2c
  3815 ;;		_read_i2c
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text13
  3820   002362                     __ptext13:
  3821                           	callstack 0
  3822   002362                     _i2c_Stop:
  3823                           	callstack 26
  3824   002362                     
  3825                           ;i2c.c: 64:     i2c_Wait();
  3826   002362  EC21  F011         	call	_i2c_Wait	;wreg free
  3827   002366                     
  3828                           ;i2c.c: 65:     PEN2 = 1;
  3829   002366  846B               	bsf	3947,2,c	;volatile
  3830   002368  0012               	return		;funcret
  3831   00236A                     __end_of_i2c_Stop:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _i2c_Start *****************
  3835 ;; Defined at:
  3836 ;;		line 49 in file "i2c.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 3
  3857 ;; This function calls:
  3858 ;;		_i2c_Wait
  3859 ;; This function is called by:
  3860 ;;		_write_i2c
  3861 ;;		_read_i2c
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text14
  3866   00236A                     __ptext14:
  3867                           	callstack 0
  3868   00236A                     _i2c_Start:
  3869                           	callstack 26
  3870   00236A                     
  3871                           ;i2c.c: 50:     i2c_Wait();
  3872   00236A  EC21  F011         	call	_i2c_Wait	;wreg free
  3873   00236E                     
  3874                           ;i2c.c: 51:     SEN2 = 1;
  3875   00236E  806B               	bsf	3947,0,c	;volatile
  3876   002370  0012               	return		;funcret
  3877   002372                     __end_of_i2c_Start:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _i2c_Address *****************
  3881 ;; Defined at:
  3882 ;;		line 78 in file "i2c.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  address         1    wreg     unsigned char 
  3885 ;;  mode            1    7[COMRAM] unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  address         1    8[COMRAM] unsigned char 
  3888 ;;  l_address       1    9[COMRAM] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;Total ram usage:        3 bytes
  3903 ;; Hardware stack levels used: 1
  3904 ;; Hardware stack levels required when called: 3
  3905 ;; This function calls:
  3906 ;;		_i2c_Wait
  3907 ;; This function is called by:
  3908 ;;		_write_i2c
  3909 ;;		_read_i2c
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text15
  3914   00230C                     __ptext15:
  3915                           	callstack 0
  3916   00230C                     _i2c_Address:
  3917                           	callstack 26
  3918                           
  3919                           ;incstack = 0
  3920                           ;i2c_Address@address stored from wreg
  3921   00230C  6E3A               	movwf	i2c_Address@address^0,c
  3922   00230E                     
  3923                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  3924   00230E  C03A  F03B         	movff	i2c_Address@address,i2c_Address@l_address
  3925   002312                     
  3926                           ;i2c.c: 82:     l_address += mode;
  3927   002312  5039               	movf	i2c_Address@mode^0,w,c
  3928   002314  263B               	addwf	i2c_Address@l_address^0,f,c
  3929   002316                     
  3930                           ;i2c.c: 83:     i2c_Wait();
  3931   002316  EC21  F011         	call	_i2c_Wait	;wreg free
  3932   00231A                     
  3933                           ;i2c.c: 84:     SSP2BUF = l_address;
  3934   00231A  C03B  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3935   00231E  0012               	return		;funcret
  3936   002320                     __end_of_i2c_Address:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _i2c_Wait *****************
  3940 ;; Defined at:
  3941 ;;		line 43 in file "i2c.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        1 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 2
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_i2c_Start
  3966 ;;		_i2c_Restart
  3967 ;;		_i2c_Stop
  3968 ;;		_i2c_Write
  3969 ;;		_i2c_Address
  3970 ;;		_i2c_Read
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text16
  3975   002242                     __ptext16:
  3976                           	callstack 0
  3977   002242                     _i2c_Wait:
  3978                           	callstack 26
  3979   002242                     l2907:
  3980   002242  CF6B F038          	movff	3947,??_i2c_Wait	;volatile
  3981   002246  0E1F               	movlw	31
  3982   002248  1638               	andwf	??_i2c_Wait^0,f,c
  3983   00224A  A4D8               	btfss	status,2,c
  3984   00224C  EF2A  F011         	goto	u1711
  3985   002250  EF2C  F011         	goto	u1710
  3986   002254                     u1711:
  3987   002254  EF21  F011         	goto	l2907
  3988   002258                     u1710:
  3989   002258  B46D               	btfsc	109,2,c	;volatile
  3990   00225A  EF31  F011         	goto	u1721
  3991   00225E  EF33  F011         	goto	u1720
  3992   002262                     u1721:
  3993   002262  EF21  F011         	goto	l2907
  3994   002266                     u1720:
  3995   002266  0012               	return		;funcret
  3996   002268                     __end_of_i2c_Wait:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function ___aldiv *****************
  4000 ;; Defined at:
  4001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  dividend        4    6[COMRAM] long 
  4004 ;;  divisor         4   10[COMRAM] long 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  quotient        4   16[COMRAM] long 
  4007 ;;  sign            1   15[COMRAM] unsigned char 
  4008 ;;  counter         1   14[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  4    6[COMRAM] long 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:       14 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 2
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_write_i2c
  4029 ;;		_read_i2c
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text17
  4034   001690                     __ptext17:
  4035                           	callstack 0
  4036   001690                     ___aldiv:
  4037                           	callstack 27
  4038   001690  0E00               	movlw	0
  4039   001692  6E41               	movwf	___aldiv@sign^0,c
  4040   001694  BE3F               	btfsc	(___aldiv@divisor+3)^0,7,c
  4041   001696  EF51  F00B         	goto	u1810
  4042   00169A  EF4F  F00B         	goto	u1811
  4043   00169E                     u1811:
  4044   00169E  EF5B  F00B         	goto	l3039
  4045   0016A2                     u1810:
  4046   0016A2  1E3F               	comf	(___aldiv@divisor+3)^0,f,c
  4047   0016A4  1E3E               	comf	(___aldiv@divisor+2)^0,f,c
  4048   0016A6  1E3D               	comf	(___aldiv@divisor+1)^0,f,c
  4049   0016A8  6C3C               	negf	___aldiv@divisor^0,c
  4050   0016AA  0E00               	movlw	0
  4051   0016AC  223D               	addwfc	(___aldiv@divisor+1)^0,f,c
  4052   0016AE  223E               	addwfc	(___aldiv@divisor+2)^0,f,c
  4053   0016B0  223F               	addwfc	(___aldiv@divisor+3)^0,f,c
  4054   0016B2  0E01               	movlw	1
  4055   0016B4  6E41               	movwf	___aldiv@sign^0,c
  4056   0016B6                     l3039:
  4057   0016B6  BE3B               	btfsc	(___aldiv@dividend+3)^0,7,c
  4058   0016B8  EF62  F00B         	goto	u1820
  4059   0016BC  EF60  F00B         	goto	u1821
  4060   0016C0                     u1821:
  4061   0016C0  EF6C  F00B         	goto	l3045
  4062   0016C4                     u1820:
  4063   0016C4  1E3B               	comf	(___aldiv@dividend+3)^0,f,c
  4064   0016C6  1E3A               	comf	(___aldiv@dividend+2)^0,f,c
  4065   0016C8  1E39               	comf	(___aldiv@dividend+1)^0,f,c
  4066   0016CA  6C38               	negf	___aldiv@dividend^0,c
  4067   0016CC  0E00               	movlw	0
  4068   0016CE  2239               	addwfc	(___aldiv@dividend+1)^0,f,c
  4069   0016D0  223A               	addwfc	(___aldiv@dividend+2)^0,f,c
  4070   0016D2  223B               	addwfc	(___aldiv@dividend+3)^0,f,c
  4071   0016D4  0E01               	movlw	1
  4072   0016D6  1A41               	xorwf	___aldiv@sign^0,f,c
  4073   0016D8                     l3045:
  4074   0016D8  0E00               	movlw	0
  4075   0016DA  6E42               	movwf	___aldiv@quotient^0,c
  4076   0016DC  0E00               	movlw	0
  4077   0016DE  6E43               	movwf	(___aldiv@quotient+1)^0,c
  4078   0016E0  0E00               	movlw	0
  4079   0016E2  6E44               	movwf	(___aldiv@quotient+2)^0,c
  4080   0016E4  0E00               	movlw	0
  4081   0016E6  6E45               	movwf	(___aldiv@quotient+3)^0,c
  4082   0016E8  503C               	movf	___aldiv@divisor^0,w,c
  4083   0016EA  103D               	iorwf	(___aldiv@divisor+1)^0,w,c
  4084   0016EC  103E               	iorwf	(___aldiv@divisor+2)^0,w,c
  4085   0016EE  103F               	iorwf	(___aldiv@divisor+3)^0,w,c
  4086   0016F0  B4D8               	btfsc	status,2,c
  4087   0016F2  EF7D  F00B         	goto	u1831
  4088   0016F6  EF7F  F00B         	goto	u1830
  4089   0016FA                     u1831:
  4090   0016FA  EFB5  F00B         	goto	l3067
  4091   0016FE                     u1830:
  4092   0016FE  0E01               	movlw	1
  4093   001700  6E40               	movwf	___aldiv@counter^0,c
  4094   001702  EF89  F00B         	goto	l3053
  4095   001706                     l3051:
  4096   001706  90D8               	bcf	status,0,c
  4097   001708  363C               	rlcf	___aldiv@divisor^0,f,c
  4098   00170A  363D               	rlcf	(___aldiv@divisor+1)^0,f,c
  4099   00170C  363E               	rlcf	(___aldiv@divisor+2)^0,f,c
  4100   00170E  363F               	rlcf	(___aldiv@divisor+3)^0,f,c
  4101   001710  2A40               	incf	___aldiv@counter^0,f,c
  4102   001712                     l3053:
  4103   001712  AE3F               	btfss	(___aldiv@divisor+3)^0,7,c
  4104   001714  EF8E  F00B         	goto	u1841
  4105   001718  EF90  F00B         	goto	u1840
  4106   00171C                     u1841:
  4107   00171C  EF83  F00B         	goto	l3051
  4108   001720                     u1840:
  4109   001720                     l3055:
  4110   001720  90D8               	bcf	status,0,c
  4111   001722  3642               	rlcf	___aldiv@quotient^0,f,c
  4112   001724  3643               	rlcf	(___aldiv@quotient+1)^0,f,c
  4113   001726  3644               	rlcf	(___aldiv@quotient+2)^0,f,c
  4114   001728  3645               	rlcf	(___aldiv@quotient+3)^0,f,c
  4115   00172A  503C               	movf	___aldiv@divisor^0,w,c
  4116   00172C  5C38               	subwf	___aldiv@dividend^0,w,c
  4117   00172E  503D               	movf	(___aldiv@divisor+1)^0,w,c
  4118   001730  5839               	subwfb	(___aldiv@dividend+1)^0,w,c
  4119   001732  503E               	movf	(___aldiv@divisor+2)^0,w,c
  4120   001734  583A               	subwfb	(___aldiv@dividend+2)^0,w,c
  4121   001736  503F               	movf	(___aldiv@divisor+3)^0,w,c
  4122   001738  583B               	subwfb	(___aldiv@dividend+3)^0,w,c
  4123   00173A  A0D8               	btfss	status,0,c
  4124   00173C  EFA2  F00B         	goto	u1851
  4125   001740  EFA4  F00B         	goto	u1850
  4126   001744                     u1851:
  4127   001744  EFAD  F00B         	goto	l3063
  4128   001748                     u1850:
  4129   001748  503C               	movf	___aldiv@divisor^0,w,c
  4130   00174A  5E38               	subwf	___aldiv@dividend^0,f,c
  4131   00174C  503D               	movf	(___aldiv@divisor+1)^0,w,c
  4132   00174E  5A39               	subwfb	(___aldiv@dividend+1)^0,f,c
  4133   001750  503E               	movf	(___aldiv@divisor+2)^0,w,c
  4134   001752  5A3A               	subwfb	(___aldiv@dividend+2)^0,f,c
  4135   001754  503F               	movf	(___aldiv@divisor+3)^0,w,c
  4136   001756  5A3B               	subwfb	(___aldiv@dividend+3)^0,f,c
  4137   001758  8042               	bsf	___aldiv@quotient^0,0,c
  4138   00175A                     l3063:
  4139   00175A  90D8               	bcf	status,0,c
  4140   00175C  323F               	rrcf	(___aldiv@divisor+3)^0,f,c
  4141   00175E  323E               	rrcf	(___aldiv@divisor+2)^0,f,c
  4142   001760  323D               	rrcf	(___aldiv@divisor+1)^0,f,c
  4143   001762  323C               	rrcf	___aldiv@divisor^0,f,c
  4144   001764  2E40               	decfsz	___aldiv@counter^0,f,c
  4145   001766  EF90  F00B         	goto	l3055
  4146   00176A                     l3067:
  4147   00176A  5041               	movf	___aldiv@sign^0,w,c
  4148   00176C  B4D8               	btfsc	status,2,c
  4149   00176E  EFBB  F00B         	goto	u1861
  4150   001772  EFBD  F00B         	goto	u1860
  4151   001776                     u1861:
  4152   001776  EFC5  F00B         	goto	l3071
  4153   00177A                     u1860:
  4154   00177A  1E45               	comf	(___aldiv@quotient+3)^0,f,c
  4155   00177C  1E44               	comf	(___aldiv@quotient+2)^0,f,c
  4156   00177E  1E43               	comf	(___aldiv@quotient+1)^0,f,c
  4157   001780  6C42               	negf	___aldiv@quotient^0,c
  4158   001782  0E00               	movlw	0
  4159   001784  2243               	addwfc	(___aldiv@quotient+1)^0,f,c
  4160   001786  2244               	addwfc	(___aldiv@quotient+2)^0,f,c
  4161   001788  2245               	addwfc	(___aldiv@quotient+3)^0,f,c
  4162   00178A                     l3071:
  4163   00178A  C042  F038         	movff	___aldiv@quotient,?___aldiv
  4164   00178E  C043  F039         	movff	___aldiv@quotient+1,?___aldiv+1
  4165   001792  C044  F03A         	movff	___aldiv@quotient+2,?___aldiv+2
  4166   001796  C045  F03B         	movff	___aldiv@quotient+3,?___aldiv+3
  4167   00179A  0012               	return		;funcret
  4168   00179C                     __end_of___aldiv:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _MotorPosition_Init *****************
  4172 ;; Defined at:
  4173 ;;		line 861 in file "main.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 4
  4194 ;; This function calls:
  4195 ;;		_MotorBREAK
  4196 ;;		_MotorON
  4197 ;;		_Read_IR
  4198 ;;		_WriteSTLED316SErr
  4199 ;;		_delay_1ms
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text18
  4206   00179C                     __ptext18:
  4207                           	callstack 0
  4208   00179C                     _MotorPosition_Init:
  4209                           	callstack 26
  4210   00179C                     
  4211                           ;main.c: 862:     LATAbits.LATA2 = 1;
  4212   00179C  8489               	bsf	137,2,c	;volatile
  4213   00179E                     
  4214                           ;main.c: 863:     MotorON();
  4215   00179E  ECA3  F011         	call	_MotorON	;wreg free
  4216   0017A2                     
  4217                           ;main.c: 864:     _delay((unsigned long)((350)*(8000000/4000.0)));
  4218   0017A2  0E04               	movlw	4
  4219   0017A4  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4220   0017A6  0E8E               	movlw	142
  4221   0017A8  6E41               	movwf	??_MotorPosition_Init^0,c
  4222   0017AA  0E12               	movlw	18
  4223   0017AC                     u3507:
  4224   0017AC  2EE8               	decfsz	wreg,f,c
  4225   0017AE  D7FE               	bra	u3507
  4226   0017B0  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4227   0017B2  D7FC               	bra	u3507
  4228   0017B4  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4229   0017B6  D7FA               	bra	u3507
  4230   0017B8  D000               	nop2	
  4231   0017BA                     
  4232                           ;main.c: 865:     errorcounter = 30;
  4233   0017BA  0E1E               	movlw	30
  4234   0017BC  6E52               	movwf	_errorcounter^0,c	;volatile
  4235   0017BE  0E00               	movlw	0
  4236   0017C0  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4237   0017C2  0E00               	movlw	0
  4238   0017C4  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4239   0017C6  0E00               	movlw	0
  4240   0017C8  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4241   0017CA                     l3435:
  4242                           
  4243                           ;main.c: 868:         IR_SENSORF = Read_IR();
  4244   0017CA  EC47  F011         	call	_Read_IR	;wreg free
  4245   0017CE  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4246   0017D2  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4247   0017D6                     
  4248                           ;main.c: 869:         if (errorcounter == 0) {
  4249   0017D6  5052               	movf	_errorcounter^0,w,c	;volatile
  4250   0017D8  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4251   0017DA  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4252   0017DC  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4253   0017DE  A4D8               	btfss	status,2,c
  4254   0017E0  EFF4  F00B         	goto	u2071
  4255   0017E4  EFF6  F00B         	goto	u2070
  4256   0017E8                     u2071:
  4257   0017E8  EFFB  F00B         	goto	l3443
  4258   0017EC                     u2070:
  4259   0017EC                     
  4260                           ;main.c: 870:             WriteSTLED316SErr('1');
  4261   0017EC  0E31               	movlw	49
  4262   0017EE  ECD4  F00C         	call	_WriteSTLED316SErr
  4263   0017F2                     
  4264                           ;main.c: 871:             MotorBREAK();
  4265   0017F2  ECA8  F011         	call	_MotorBREAK	;wreg free
  4266   0017F6                     l3443:
  4267                           
  4268                           ;main.c: 874:     } while (IR_SENSORF != 0);
  4269   0017F6  500B               	movf	_IR_SENSORF^0,w,c
  4270   0017F8  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4271   0017FA  A4D8               	btfss	status,2,c
  4272   0017FC  EF02  F00C         	goto	u2081
  4273   001800  EF04  F00C         	goto	u2080
  4274   001804                     u2081:
  4275   001804  EFE5  F00B         	goto	l3435
  4276   001808                     u2080:
  4277   001808                     
  4278                           ;main.c: 876:     _delay((unsigned long)((30)*(8000000/4000.0)));
  4279   001808  0E4E               	movlw	78
  4280   00180A  6E41               	movwf	??_MotorPosition_Init^0,c
  4281   00180C  0EEB               	movlw	235
  4282   00180E                     u3517:
  4283   00180E  2EE8               	decfsz	wreg,f,c
  4284   001810  D7FE               	bra	u3517
  4285   001812  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4286   001814  D7FC               	bra	u3517
  4287   001816  F000               	nop	
  4288   001818                     
  4289                           ;main.c: 877:     errorcounter = 30;
  4290   001818  0E1E               	movlw	30
  4291   00181A  6E52               	movwf	_errorcounter^0,c	;volatile
  4292   00181C  0E00               	movlw	0
  4293   00181E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4294   001820  0E00               	movlw	0
  4295   001822  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4296   001824  0E00               	movlw	0
  4297   001826  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4298   001828                     l3449:
  4299                           
  4300                           ;main.c: 879:         IR_SENSORF = Read_IR();
  4301   001828  EC47  F011         	call	_Read_IR	;wreg free
  4302   00182C  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4303   001830  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4304   001834                     
  4305                           ;main.c: 880:         if (errorcounter == 0) {
  4306   001834  5052               	movf	_errorcounter^0,w,c	;volatile
  4307   001836  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4308   001838  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4309   00183A  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4310   00183C  A4D8               	btfss	status,2,c
  4311   00183E  EF23  F00C         	goto	u2091
  4312   001842  EF25  F00C         	goto	u2090
  4313   001846                     u2091:
  4314   001846  EF2A  F00C         	goto	l3457
  4315   00184A                     u2090:
  4316   00184A                     
  4317                           ;main.c: 881:             WriteSTLED316SErr('2');
  4318   00184A  0E32               	movlw	50
  4319   00184C  ECD4  F00C         	call	_WriteSTLED316SErr
  4320   001850                     
  4321                           ;main.c: 882:             MotorBREAK();
  4322   001850  ECA8  F011         	call	_MotorBREAK	;wreg free
  4323   001854                     l3457:
  4324                           
  4325                           ;main.c: 885:     } while (IR_SENSORF != 1);
  4326   001854  040B               	decf	_IR_SENSORF^0,w,c
  4327   001856  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4328   001858  A4D8               	btfss	status,2,c
  4329   00185A  EF31  F00C         	goto	u2101
  4330   00185E  EF33  F00C         	goto	u2100
  4331   001862                     u2101:
  4332   001862  EF14  F00C         	goto	l3449
  4333   001866                     u2100:
  4334   001866                     
  4335                           ;main.c: 887:     errorcounter = 30;
  4336   001866  0E1E               	movlw	30
  4337   001868  6E52               	movwf	_errorcounter^0,c	;volatile
  4338   00186A  0E00               	movlw	0
  4339   00186C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4340   00186E  0E00               	movlw	0
  4341   001870  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4342   001872  0E00               	movlw	0
  4343   001874  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4344   001876                     
  4345                           ;main.c: 889:     delay_1ms(Motor_Stop_Delay_Time);
  4346   001876  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4347   00187A  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4348   00187E  ECF8  F010         	call	_delay_1ms	;wreg free
  4349   001882                     
  4350                           ;main.c: 890:     MotorBREAK();
  4351   001882  ECA8  F011         	call	_MotorBREAK	;wreg free
  4352   001886                     
  4353                           ;main.c: 891:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4354   001886  0E06               	movlw	6
  4355   001888  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4356   00188A  0E13               	movlw	19
  4357   00188C  6E41               	movwf	??_MotorPosition_Init^0,c
  4358   00188E  0EAE               	movlw	174
  4359   001890                     u3527:
  4360   001890  2EE8               	decfsz	wreg,f,c
  4361   001892  D7FE               	bra	u3527
  4362   001894  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4363   001896  D7FC               	bra	u3527
  4364   001898  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4365   00189A  D7FA               	bra	u3527
  4366   00189C                     
  4367                           ;main.c: 892:     IR_SENSORF = 0;
  4368   00189C  0E00               	movlw	0
  4369   00189E  6E0C               	movwf	(_IR_SENSORF+1)^0,c
  4370   0018A0  0E00               	movlw	0
  4371   0018A2  6E0B               	movwf	_IR_SENSORF^0,c
  4372   0018A4                     
  4373                           ;main.c: 894:     LATAbits.LATA2 = 0;
  4374   0018A4  9489               	bcf	137,2,c	;volatile
  4375   0018A6  0012               	return		;funcret
  4376   0018A8                     __end_of_MotorPosition_Init:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _InitTimer1 *****************
  4380 ;; Defined at:
  4381 ;;		line 1184 in file "main.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;Total ram usage:        0 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 2
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_main
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text19
  4410   0022B2                     __ptext19:
  4411                           	callstack 0
  4412   0022B2                     _InitTimer1:
  4413                           	callstack 28
  4414   0022B2                     
  4415                           ;main.c: 1185:     T1CON = 0b00110001;
  4416   0022B2  0E31               	movlw	49
  4417   0022B4  6ECD               	movwf	205,c	;volatile
  4418                           
  4419                           ;main.c: 1188:     TMR1 = 0x9E57;
  4420   0022B6  0E9E               	movlw	158
  4421   0022B8  6ECF               	movwf	207,c	;volatile
  4422   0022BA  0E57               	movlw	87
  4423   0022BC  6ECE               	movwf	206,c	;volatile
  4424   0022BE                     
  4425                           ;main.c: 1189:     TMR1IF = 0;
  4426   0022BE  909E               	bcf	3998,0,c	;volatile
  4427   0022C0                     
  4428                           ;main.c: 1190:     TMR1IE = 1;
  4429   0022C0  809D               	bsf	3997,0,c	;volatile
  4430   0022C2                     
  4431                           ;main.c: 1191:     IPR1bits.TMR1IP = 1;
  4432   0022C2  809F               	bsf	159,0,c	;volatile
  4433                           
  4434                           ;main.c: 1193:     TMR1IF_triggered = 0;
  4435   0022C4  0E00               	movlw	0
  4436   0022C6  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  4437   0022C8  0012               	return		;funcret
  4438   0022CA                     __end_of_InitTimer1:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _InitSTLED316 *****************
  4442 ;; Defined at:
  4443 ;;		line 14 in file "Display.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  Brightness      1    wreg     unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  Brightness      1   14[COMRAM] unsigned char 
  4448 ;;  i               2    0        int 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;Total ram usage:        3 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 3
  4465 ;; This function calls:
  4466 ;;		_STLED316s_SPI_SendData
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text20
  4473   001D78                     __ptext20:
  4474                           	callstack 0
  4475   001D78                     _InitSTLED316:
  4476                           	callstack 27
  4477                           
  4478                           ;incstack = 0
  4479                           ;InitSTLED316@Brightness stored from wreg
  4480   001D78  6E40               	movwf	InitSTLED316@Brightness^0,c
  4481   001D7A                     
  4482                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  4483   001D7A  888B               	bsf	139,4,c	;volatile
  4484                           
  4485                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  4486   001D7C  988B               	bcf	139,4,c	;volatile
  4487   001D7E                     
  4488                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4489   001D7E  0E30               	movlw	48
  4490   001D80  EC02  F00F         	call	_STLED316s_SPI_SendData
  4491   001D84                     
  4492                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  4493   001D84  888B               	bsf	139,4,c	;volatile
  4494   001D86                     
  4495                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  4496   001D86  988B               	bcf	139,4,c	;volatile
  4497                           
  4498                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4499   001D88  0E30               	movlw	48
  4500   001D8A  EC02  F00F         	call	_STLED316s_SPI_SendData
  4501                           
  4502                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  4503   001D8E  C040  F03E         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4504   001D92  3A3E               	swapf	??_InitSTLED316^0,f,c
  4505   001D94  0E0F               	movlw	15
  4506   001D96  163E               	andwf	??_InitSTLED316^0,f,c
  4507   001D98  0E05               	movlw	5
  4508   001D9A  6E3F               	movwf	(??_InitSTLED316+1)^0,c
  4509   001D9C                     u2065:
  4510   001D9C  90D8               	bcf	status,0,c
  4511   001D9E  363E               	rlcf	??_InitSTLED316^0,f,c
  4512   001DA0  2E3F               	decfsz	(??_InitSTLED316+1)^0,f,c
  4513   001DA2  EFCE  F00E         	goto	u2065
  4514   001DA6  503E               	movf	??_InitSTLED316^0,w,c
  4515   001DA8  0905               	iorlw	5
  4516   001DAA  EC02  F00F         	call	_STLED316s_SPI_SendData
  4517   001DAE                     
  4518                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  4519   001DAE  888B               	bsf	139,4,c	;volatile
  4520   001DB0                     
  4521                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  4522   001DB0  988B               	bcf	139,4,c	;volatile
  4523                           
  4524                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4525   001DB2  0E11               	movlw	17
  4526   001DB4  EC02  F00F         	call	_STLED316s_SPI_SendData
  4527   001DB8                     
  4528                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  4529   001DB8  888B               	bsf	139,4,c	;volatile
  4530   001DBA                     
  4531                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  4532   001DBA  988B               	bcf	139,4,c	;volatile
  4533                           
  4534                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4535   001DBC  0E11               	movlw	17
  4536   001DBE  EC02  F00F         	call	_STLED316s_SPI_SendData
  4537                           
  4538                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  4539   001DC2  5040               	movf	InitSTLED316@Brightness^0,w,c
  4540   001DC4  EC02  F00F         	call	_STLED316s_SPI_SendData
  4541                           
  4542                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  4543   001DC8  5040               	movf	InitSTLED316@Brightness^0,w,c
  4544   001DCA  EC02  F00F         	call	_STLED316s_SPI_SendData
  4545                           
  4546                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  4547   001DCE  5040               	movf	InitSTLED316@Brightness^0,w,c
  4548   001DD0  EC02  F00F         	call	_STLED316s_SPI_SendData
  4549   001DD4                     
  4550                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  4551   001DD4  888B               	bsf	139,4,c	;volatile
  4552   001DD6                     
  4553                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  4554   001DD6  988B               	bcf	139,4,c	;volatile
  4555                           
  4556                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  4557   001DD8  0E18               	movlw	24
  4558   001DDA  EC02  F00F         	call	_STLED316s_SPI_SendData
  4559   001DDE                     
  4560                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  4561   001DDE  888B               	bsf	139,4,c	;volatile
  4562   001DE0                     
  4563                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  4564   001DE0  988B               	bcf	139,4,c	;volatile
  4565                           
  4566                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  4567   001DE2  0E18               	movlw	24
  4568   001DE4  EC02  F00F         	call	_STLED316s_SPI_SendData
  4569                           
  4570                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  4571   001DE8  5040               	movf	InitSTLED316@Brightness^0,w,c
  4572   001DEA  EC02  F00F         	call	_STLED316s_SPI_SendData
  4573                           
  4574                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  4575   001DEE  5040               	movf	InitSTLED316@Brightness^0,w,c
  4576   001DF0  EC02  F00F         	call	_STLED316s_SPI_SendData
  4577                           
  4578                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  4579   001DF4  5040               	movf	InitSTLED316@Brightness^0,w,c
  4580   001DF6  EC02  F00F         	call	_STLED316s_SPI_SendData
  4581                           
  4582                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  4583   001DFA  5040               	movf	InitSTLED316@Brightness^0,w,c
  4584   001DFC  EC02  F00F         	call	_STLED316s_SPI_SendData
  4585   001E00                     
  4586                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  4587   001E00  888B               	bsf	139,4,c	;volatile
  4588   001E02  0012               	return		;funcret
  4589   001E04                     __end_of_InitSTLED316:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _Homing_Again_Manual *****************
  4593 ;; Defined at:
  4594 ;;		line 922 in file "main.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  NUMInit         2    0        int 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;Total ram usage:        2 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 4
  4615 ;; This function calls:
  4616 ;;		_AD_capture_BattVoltage
  4617 ;;		_MotorBREAK
  4618 ;;		_MotorON
  4619 ;;		_Read_IR
  4620 ;;		_WriteSTLED316SData
  4621 ;;		_WriteSTLED316SErr
  4622 ;;		_delay_1ms
  4623 ;;		_readWeighingData
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text21
  4630   001048                     __ptext21:
  4631                           	callstack 0
  4632   001048                     _Homing_Again_Manual:
  4633                           	callstack 26
  4634   001048                     
  4635                           ;main.c: 925:     if (vibration_mode == 1) {
  4636   001048  042C               	decf	_vibration_mode^0,w,c
  4637   00104A  A4D8               	btfss	status,2,c
  4638   00104C  EF2A  F008         	goto	u2131
  4639   001050  EF2C  F008         	goto	u2130
  4640   001054                     u2131:
  4641   001054  EF41  F008         	goto	l353
  4642   001058                     u2130:
  4643   001058                     
  4644                           ;main.c: 926:         LATCbits.LATC1 = 1;
  4645   001058  828B               	bsf	139,1,c	;volatile
  4646   00105A                     
  4647                           ;main.c: 927:         delay_1ms(Vmotor_Time);
  4648   00105A  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  4649   00105E  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4650   001062  ECF8  F010         	call	_delay_1ms	;wreg free
  4651   001066                     
  4652                           ;main.c: 928:         LATCbits.LATC1 = 0;
  4653   001066  928B               	bcf	139,1,c	;volatile
  4654   001068                     l3511:
  4655                           
  4656                           ;main.c: 929:         _delay((unsigned long)((300)*(8000000/4000.0)));
  4657   001068  0E04               	movlw	4
  4658   00106A  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4659   00106C  0E0C               	movlw	12
  4660   00106E  6E49               	movwf	??_Homing_Again_Manual^0,c
  4661   001070  0E34               	movlw	52
  4662   001072                     u3537:
  4663   001072  2EE8               	decfsz	wreg,f,c
  4664   001074  D7FE               	bra	u3537
  4665   001076  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4666   001078  D7FC               	bra	u3537
  4667   00107A  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4668   00107C  D7FA               	bra	u3537
  4669                           
  4670                           ;main.c: 930:     } else {
  4671   00107E  EF44  F008         	goto	l3515
  4672   001082                     l353:
  4673                           
  4674                           ;main.c: 931:         LATCbits.LATC1 = 0;
  4675   001082  928B               	bcf	139,1,c	;volatile
  4676   001084  EF34  F008         	goto	l3511
  4677   001088                     l3515:
  4678                           
  4679                           ;main.c: 935:     LATAbits.LATA2 = 1;
  4680   001088  8489               	bsf	137,2,c	;volatile
  4681   00108A                     
  4682                           ;main.c: 938:     if (NUM == 0) {
  4683   00108A  5013               	movf	_NUM^0,w,c
  4684   00108C  1014               	iorwf	(_NUM+1)^0,w,c
  4685   00108E  A4D8               	btfss	status,2,c
  4686   001090  EF4C  F008         	goto	u2141
  4687   001094  EF4E  F008         	goto	u2140
  4688   001098                     u2141:
  4689   001098  EF54  F008         	goto	l3523
  4690   00109C                     u2140:
  4691   00109C                     
  4692                           ;main.c: 939:         i_RUN_ZERO = 1;
  4693   00109C  0E00               	movlw	0
  4694   00109E  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  4695   0010A0  0E01               	movlw	1
  4696   0010A2  6E11               	movwf	_i_RUN_ZERO^0,c
  4697                           
  4698                           ;main.c: 940:     }
  4699   0010A4  EFDE  F009         	goto	l3631
  4700   0010A8                     l3523:
  4701                           
  4702                           ;main.c: 942:     {;main.c: 943:         i_RUN_ZERO = 0;
  4703   0010A8  0E00               	movlw	0
  4704   0010AA  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  4705   0010AC  0E00               	movlw	0
  4706   0010AE  6E11               	movwf	_i_RUN_ZERO^0,c
  4707   0010B0  EFDE  F009         	goto	l3631
  4708   0010B4                     l358:
  4709   0010B4  0004               	clrwdt		;# 
  4710   0010B6                     
  4711                           ;main.c: 949:         readWeighingData();
  4712   0010B6  ECAF  F00F         	call	_readWeighingData	;wreg free
  4713   0010BA                     
  4714                           ;main.c: 950:         AD_capture_BattVoltage();
  4715   0010BA  EC4B  F010         	call	_AD_capture_BattVoltage	;wreg free
  4716   0010BE                     
  4717                           ;main.c: 951:         delay_1ms(Motor_Pause_Time);
  4718   0010BE  C015  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  4719   0010C2  C016  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4720   0010C6  ECF8  F010         	call	_delay_1ms	;wreg free
  4721   0010CA                     
  4722                           ;main.c: 952:         MotorON();
  4723   0010CA  ECA3  F011         	call	_MotorON	;wreg free
  4724   0010CE                     
  4725                           ;main.c: 953:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4726   0010CE  0E04               	movlw	4
  4727   0010D0  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4728   0010D2  0E8E               	movlw	142
  4729   0010D4  6E49               	movwf	??_Homing_Again_Manual^0,c
  4730   0010D6  0E12               	movlw	18
  4731   0010D8                     u3547:
  4732   0010D8  2EE8               	decfsz	wreg,f,c
  4733   0010DA  D7FE               	bra	u3547
  4734   0010DC  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4735   0010DE  D7FC               	bra	u3547
  4736   0010E0  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4737   0010E2  D7FA               	bra	u3547
  4738   0010E4  D000               	nop2	
  4739   0010E6                     
  4740                           ;main.c: 954:         errorcounter = 30;
  4741   0010E6  0E1E               	movlw	30
  4742   0010E8  6E52               	movwf	_errorcounter^0,c	;volatile
  4743   0010EA  0E00               	movlw	0
  4744   0010EC  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4745   0010EE  0E00               	movlw	0
  4746   0010F0  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4747   0010F2  0E00               	movlw	0
  4748   0010F4  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4749   0010F6                     l3537:
  4750                           
  4751                           ;main.c: 958:             IR_SENSORF = Read_IR();
  4752   0010F6  EC47  F011         	call	_Read_IR	;wreg free
  4753   0010FA  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4754   0010FE  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4755   001102                     
  4756                           ;main.c: 959:             if (errorcounter == 0) {
  4757   001102  5052               	movf	_errorcounter^0,w,c	;volatile
  4758   001104  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4759   001106  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4760   001108  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4761   00110A  A4D8               	btfss	status,2,c
  4762   00110C  EF8A  F008         	goto	u2151
  4763   001110  EF8C  F008         	goto	u2150
  4764   001114                     u2151:
  4765   001114  EF91  F008         	goto	l3545
  4766   001118                     u2150:
  4767   001118                     
  4768                           ;main.c: 960:                 WriteSTLED316SErr('1');
  4769   001118  0E31               	movlw	49
  4770   00111A  ECD4  F00C         	call	_WriteSTLED316SErr
  4771   00111E                     
  4772                           ;main.c: 961:                 MotorBREAK();
  4773   00111E  ECA8  F011         	call	_MotorBREAK	;wreg free
  4774   001122                     l3545:
  4775                           
  4776                           ;main.c: 964:         } while (IR_SENSORF != 0);
  4777   001122  500B               	movf	_IR_SENSORF^0,w,c
  4778   001124  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4779   001126  A4D8               	btfss	status,2,c
  4780   001128  EF98  F008         	goto	u2161
  4781   00112C  EF9A  F008         	goto	u2160
  4782   001130                     u2161:
  4783   001130  EF7B  F008         	goto	l3537
  4784   001134                     u2160:
  4785   001134                     
  4786                           ;main.c: 966:         _delay((unsigned long)((30)*(8000000/4000.0)));
  4787   001134  0E4E               	movlw	78
  4788   001136  6E49               	movwf	??_Homing_Again_Manual^0,c
  4789   001138  0EEB               	movlw	235
  4790   00113A                     u3557:
  4791   00113A  2EE8               	decfsz	wreg,f,c
  4792   00113C  D7FE               	bra	u3557
  4793   00113E  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4794   001140  D7FC               	bra	u3557
  4795   001142  F000               	nop	
  4796   001144                     
  4797                           ;main.c: 968:         errorcounter = 30;
  4798   001144  0E1E               	movlw	30
  4799   001146  6E52               	movwf	_errorcounter^0,c	;volatile
  4800   001148  0E00               	movlw	0
  4801   00114A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4802   00114C  0E00               	movlw	0
  4803   00114E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4804   001150  0E00               	movlw	0
  4805   001152  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4806   001154                     l3551:
  4807                           
  4808                           ;main.c: 971:             IR_SENSORF = Read_IR();
  4809   001154  EC47  F011         	call	_Read_IR	;wreg free
  4810   001158  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4811   00115C  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4812   001160                     
  4813                           ;main.c: 972:             if (errorcounter == 0) {
  4814   001160  5052               	movf	_errorcounter^0,w,c	;volatile
  4815   001162  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4816   001164  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4817   001166  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4818   001168  A4D8               	btfss	status,2,c
  4819   00116A  EFB9  F008         	goto	u2171
  4820   00116E  EFBB  F008         	goto	u2170
  4821   001172                     u2171:
  4822   001172  EFC0  F008         	goto	l3559
  4823   001176                     u2170:
  4824   001176                     
  4825                           ;main.c: 973:                 WriteSTLED316SErr('2');
  4826   001176  0E32               	movlw	50
  4827   001178  ECD4  F00C         	call	_WriteSTLED316SErr
  4828   00117C                     
  4829                           ;main.c: 974:                 MotorBREAK();
  4830   00117C  ECA8  F011         	call	_MotorBREAK	;wreg free
  4831   001180                     l3559:
  4832                           
  4833                           ;main.c: 976:         } while (IR_SENSORF != 1);
  4834   001180  040B               	decf	_IR_SENSORF^0,w,c
  4835   001182  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4836   001184  A4D8               	btfss	status,2,c
  4837   001186  EFC7  F008         	goto	u2181
  4838   00118A  EFC9  F008         	goto	u2180
  4839   00118E                     u2181:
  4840   00118E  EFAA  F008         	goto	l3551
  4841   001192                     u2180:
  4842   001192                     
  4843                           ;main.c: 979:         errorcounter = 30;
  4844   001192  0E1E               	movlw	30
  4845   001194  6E52               	movwf	_errorcounter^0,c	;volatile
  4846   001196  0E00               	movlw	0
  4847   001198  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4848   00119A  0E00               	movlw	0
  4849   00119C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4850   00119E  0E00               	movlw	0
  4851   0011A0  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4852   0011A2                     
  4853                           ;main.c: 980:         delay_1ms(Motor_Stop_Delay_Time);
  4854   0011A2  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4855   0011A6  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4856   0011AA  ECF8  F010         	call	_delay_1ms	;wreg free
  4857   0011AE                     
  4858                           ;main.c: 981:         MotorBREAK();
  4859   0011AE  ECA8  F011         	call	_MotorBREAK	;wreg free
  4860                           
  4861                           ;main.c: 984:         if (NUM > 0 && i_RUN_ZERO != 1) {
  4862   0011B2  5013               	movf	_NUM^0,w,c
  4863   0011B4  1014               	iorwf	(_NUM+1)^0,w,c
  4864   0011B6  B4D8               	btfsc	status,2,c
  4865   0011B8  EFE0  F008         	goto	u2191
  4866   0011BC  EFE2  F008         	goto	u2190
  4867   0011C0                     u2191:
  4868   0011C0  EFEE  F008         	goto	l3571
  4869   0011C4                     u2190:
  4870   0011C4  0411               	decf	_i_RUN_ZERO^0,w,c
  4871   0011C6  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4872   0011C8  B4D8               	btfsc	status,2,c
  4873   0011CA  EFE9  F008         	goto	u2201
  4874   0011CE  EFEB  F008         	goto	u2200
  4875   0011D2                     u2201:
  4876   0011D2  EFEE  F008         	goto	l3571
  4877   0011D6                     u2200:
  4878   0011D6                     
  4879                           ;main.c: 985:             NUM--;
  4880   0011D6  0613               	decf	_NUM^0,f,c
  4881   0011D8  A0D8               	btfss	status,0,c
  4882   0011DA  0614               	decf	(_NUM+1)^0,f,c
  4883   0011DC                     l3571:
  4884                           
  4885                           ;main.c: 988:         WriteSTLED316SData(NUM, vibration_mode);
  4886   0011DC  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  4887   0011E0  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  4888   0011E4  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4889   0011E8  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  4890   0011EC                     
  4891                           ;main.c: 989:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  4892   0011EC  042C               	decf	_vibration_mode^0,w,c
  4893   0011EE  A4D8               	btfss	status,2,c
  4894   0011F0  EFFC  F008         	goto	u2211
  4895   0011F4  EFFE  F008         	goto	u2210
  4896   0011F8                     u2211:
  4897   0011F8  EF25  F009         	goto	l3585
  4898   0011FC                     u2210:
  4899   0011FC  5013               	movf	_NUM^0,w,c
  4900   0011FE  1014               	iorwf	(_NUM+1)^0,w,c
  4901   001200  A4D8               	btfss	status,2,c
  4902   001202  EF05  F009         	goto	u2221
  4903   001206  EF07  F009         	goto	u2220
  4904   00120A                     u2221:
  4905   00120A  EF10  F009         	goto	l368
  4906   00120E                     u2220:
  4907   00120E  0411               	decf	_i_RUN_ZERO^0,w,c
  4908   001210  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4909   001212  A4D8               	btfss	status,2,c
  4910   001214  EF0E  F009         	goto	u2231
  4911   001218  EF10  F009         	goto	u2230
  4912   00121C                     u2231:
  4913   00121C  EF25  F009         	goto	l3585
  4914   001220                     u2230:
  4915   001220                     l368:
  4916                           
  4917                           ;main.c: 990:             LATCbits.LATC1 = 1;
  4918   001220  828B               	bsf	139,1,c	;volatile
  4919   001222                     
  4920                           ;main.c: 991:             delay_1ms(Vmotor_Time);
  4921   001222  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  4922   001226  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4923   00122A  ECF8  F010         	call	_delay_1ms	;wreg free
  4924   00122E                     
  4925                           ;main.c: 992:             LATCbits.LATC1 = 0;
  4926   00122E  928B               	bcf	139,1,c	;volatile
  4927   001230                     
  4928                           ;main.c: 993:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4929   001230  0E04               	movlw	4
  4930   001232  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4931   001234  0E0C               	movlw	12
  4932   001236  6E49               	movwf	??_Homing_Again_Manual^0,c
  4933   001238  0E34               	movlw	52
  4934   00123A                     u3567:
  4935   00123A  2EE8               	decfsz	wreg,f,c
  4936   00123C  D7FE               	bra	u3567
  4937   00123E  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4938   001240  D7FC               	bra	u3567
  4939   001242  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4940   001244  D7FA               	bra	u3567
  4941                           
  4942                           ;main.c: 995:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) {
  4943   001246  EF65  F009         	goto	l3599
  4944   00124A                     l3585:
  4945   00124A  502C               	movf	_vibration_mode^0,w,c
  4946   00124C  A4D8               	btfss	status,2,c
  4947   00124E  EF2B  F009         	goto	u2241
  4948   001252  EF2D  F009         	goto	u2240
  4949   001256                     u2241:
  4950   001256  EF65  F009         	goto	l3599
  4951   00125A                     u2240:
  4952   00125A  5013               	movf	_NUM^0,w,c
  4953   00125C  1014               	iorwf	(_NUM+1)^0,w,c
  4954   00125E  A4D8               	btfss	status,2,c
  4955   001260  EF34  F009         	goto	u2251
  4956   001264  EF36  F009         	goto	u2250
  4957   001268                     u2251:
  4958   001268  EF3F  F009         	goto	l372
  4959   00126C                     u2250:
  4960   00126C  0411               	decf	_i_RUN_ZERO^0,w,c
  4961   00126E  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4962   001270  A4D8               	btfss	status,2,c
  4963   001272  EF3D  F009         	goto	u2261
  4964   001276  EF3F  F009         	goto	u2260
  4965   00127A                     u2261:
  4966   00127A  EF65  F009         	goto	l3599
  4967   00127E                     u2260:
  4968   00127E                     l372:
  4969                           
  4970                           ;main.c: 996:             LATCbits.LATC1 = 0;
  4971   00127E  928B               	bcf	139,1,c	;volatile
  4972   001280                     
  4973                           ;main.c: 997:             if (NUM != 0 || i_RUN_ZERO == 1) {
  4974   001280  5013               	movf	_NUM^0,w,c
  4975   001282  1014               	iorwf	(_NUM+1)^0,w,c
  4976   001284  A4D8               	btfss	status,2,c
  4977   001286  EF47  F009         	goto	u2271
  4978   00128A  EF49  F009         	goto	u2270
  4979   00128E                     u2271:
  4980   00128E  EF52  F009         	goto	l3595
  4981   001292                     u2270:
  4982   001292  0411               	decf	_i_RUN_ZERO^0,w,c
  4983   001294  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4984   001296  A4D8               	btfss	status,2,c
  4985   001298  EF50  F009         	goto	u2281
  4986   00129C  EF52  F009         	goto	u2280
  4987   0012A0                     u2281:
  4988   0012A0  EF5A  F009         	goto	l3597
  4989   0012A4                     u2280:
  4990   0012A4                     l3595:
  4991                           
  4992                           ;main.c: 998:                 delay_1ms(Vmotor_Time);
  4993   0012A4  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  4994   0012A8  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4995   0012AC  ECF8  F010         	call	_delay_1ms	;wreg free
  4996                           
  4997                           ;main.c: 999:             } else {
  4998   0012B0  EF65  F009         	goto	l3599
  4999   0012B4                     l3597:
  5000                           
  5001                           ;main.c: 1000:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  5002   0012B4  0E06               	movlw	6
  5003   0012B6  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5004   0012B8  0E13               	movlw	19
  5005   0012BA  6E49               	movwf	??_Homing_Again_Manual^0,c
  5006   0012BC  0EAE               	movlw	174
  5007   0012BE                     u3577:
  5008   0012BE  2EE8               	decfsz	wreg,f,c
  5009   0012C0  D7FE               	bra	u3577
  5010   0012C2  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5011   0012C4  D7FC               	bra	u3577
  5012   0012C6  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5013   0012C8  D7FA               	bra	u3577
  5014   0012CA                     l3599:
  5015                           
  5016                           ;main.c: 1006:         if (Stop == 1)
  5017   0012CA  042F               	decf	_Stop^0,w,c
  5018   0012CC  A4D8               	btfss	status,2,c
  5019   0012CE  EF6B  F009         	goto	u2291
  5020   0012D2  EF6D  F009         	goto	u2290
  5021   0012D6                     u2291:
  5022   0012D6  EF9A  F009         	goto	l3613
  5023   0012DA                     u2290:
  5024   0012DA  EFF0  F009         	goto	l378
  5025   0012DE                     l3603:
  5026                           
  5027                           ;main.c: 1013:             i_RUN_ZERO = 2;
  5028   0012DE  0E00               	movlw	0
  5029   0012E0  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5030   0012E2  0E02               	movlw	2
  5031   0012E4  6E11               	movwf	_i_RUN_ZERO^0,c
  5032   0012E6                     
  5033                           ;main.c: 1014:             WriteSTLED316SData(NUM, !vibration_mode);
  5034   0012E6  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5035   0012EA  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5036   0012EE  502C               	movf	_vibration_mode^0,w,c
  5037   0012F0  B4D8               	btfsc	status,2,c
  5038   0012F2  EF7D  F009         	goto	u2301
  5039   0012F6  EF80  F009         	goto	u2300
  5040   0012FA                     u2301:
  5041   0012FA  0E01               	movlw	1
  5042   0012FC  EF81  F009         	goto	u2310
  5043   001300                     u2300:
  5044   001300  0E00               	movlw	0
  5045   001302                     u2310:
  5046   001302  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
  5047   001304  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  5048   001308                     
  5049                           ;main.c: 1015:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5050   001308  0E82               	movlw	130
  5051   00130A  6E49               	movwf	??_Homing_Again_Manual^0,c
  5052   00130C  0EDE               	movlw	222
  5053   00130E                     u3587:
  5054   00130E  2EE8               	decfsz	wreg,f,c
  5055   001310  D7FE               	bra	u3587
  5056   001312  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5057   001314  D7FC               	bra	u3587
  5058   001316                     
  5059                           ;main.c: 1016:             WriteSTLED316SData(NUM, vibration_mode);
  5060   001316  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5061   00131A  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5062   00131E  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5063   001322  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  5064   001326                     
  5065                           ;main.c: 1017:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5066   001326  0E82               	movlw	130
  5067   001328  6E49               	movwf	??_Homing_Again_Manual^0,c
  5068   00132A  0EDE               	movlw	222
  5069   00132C                     u3597:
  5070   00132C  2EE8               	decfsz	wreg,f,c
  5071   00132E  D7FE               	bra	u3597
  5072   001330  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5073   001332  D7FC               	bra	u3597
  5074   001334                     l3613:
  5075                           
  5076                           ;main.c: 1012:         while (dispense == 0 && (i_RUN_ZERO == 1 || i_RUN_ZERO == 0)) {
  5077   001334  5007               	movf	_dispense^0,w,c
  5078   001336  1008               	iorwf	(_dispense+1)^0,w,c
  5079   001338  A4D8               	btfss	status,2,c
  5080   00133A  EFA1  F009         	goto	u2321
  5081   00133E  EFA3  F009         	goto	u2320
  5082   001342                     u2321:
  5083   001342  EFB5  F009         	goto	l3619
  5084   001346                     u2320:
  5085   001346  0411               	decf	_i_RUN_ZERO^0,w,c
  5086   001348  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5087   00134A  B4D8               	btfsc	status,2,c
  5088   00134C  EFAA  F009         	goto	u2331
  5089   001350  EFAC  F009         	goto	u2330
  5090   001354                     u2331:
  5091   001354  EF6F  F009         	goto	l3603
  5092   001358                     u2330:
  5093   001358  5011               	movf	_i_RUN_ZERO^0,w,c
  5094   00135A  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5095   00135C  B4D8               	btfsc	status,2,c
  5096   00135E  EFB3  F009         	goto	u2341
  5097   001362  EFB5  F009         	goto	u2340
  5098   001366                     u2341:
  5099   001366  EF6F  F009         	goto	l3603
  5100   00136A                     u2340:
  5101   00136A                     l3619:
  5102                           
  5103                           ;main.c: 1019:         WriteSTLED316SData(NUM, vibration_mode);
  5104   00136A  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5105   00136E  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5106   001372  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5107   001376  EC68  F00E         	call	_WriteSTLED316SData	;wreg free
  5108   00137A                     
  5109                           ;main.c: 1022:         if(dispense == 0 && NUM != 0)
  5110   00137A  5007               	movf	_dispense^0,w,c
  5111   00137C  1008               	iorwf	(_dispense+1)^0,w,c
  5112   00137E  A4D8               	btfss	status,2,c
  5113   001380  EFC4  F009         	goto	u2351
  5114   001384  EFC6  F009         	goto	u2350
  5115   001388                     u2351:
  5116   001388  EFD7  F009         	goto	l3629
  5117   00138C                     u2350:
  5118   00138C  5013               	movf	_NUM^0,w,c
  5119   00138E  1014               	iorwf	(_NUM+1)^0,w,c
  5120   001390  B4D8               	btfsc	status,2,c
  5121   001392  EFCD  F009         	goto	u2361
  5122   001396  EFCF  F009         	goto	u2360
  5123   00139A                     u2361:
  5124   00139A  EFD7  F009         	goto	l3629
  5125   00139E                     u2360:
  5126   00139E                     
  5127                           ;main.c: 1023:         {;main.c: 1024:             NUM_REC = NUM;
  5128   00139E  C013  F00F         	movff	_NUM,_NUM_REC
  5129   0013A2  C014  F010         	movff	_NUM+1,_NUM_REC+1
  5130   0013A6                     
  5131                           ;main.c: 1025:             NUM = 0;
  5132   0013A6  0E00               	movlw	0
  5133   0013A8  6E14               	movwf	(_NUM+1)^0,c
  5134   0013AA  0E00               	movlw	0
  5135   0013AC  6E13               	movwf	_NUM^0,c
  5136   0013AE                     l3629:
  5137                           
  5138                           ;main.c: 1027:         _delay((unsigned long)((50)*(8000000/4000.0)));
  5139   0013AE  0E82               	movlw	130
  5140   0013B0  6E49               	movwf	??_Homing_Again_Manual^0,c
  5141   0013B2  0EDE               	movlw	222
  5142   0013B4                     u3607:
  5143   0013B4  2EE8               	decfsz	wreg,f,c
  5144   0013B6  D7FE               	bra	u3607
  5145   0013B8  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5146   0013BA  D7FC               	bra	u3607
  5147   0013BC                     l3631:
  5148                           
  5149                           ;main.c: 947:     while (NUM > 0 || i_RUN_ZERO == 1) {
  5150   0013BC  5013               	movf	_NUM^0,w,c
  5151   0013BE  1014               	iorwf	(_NUM+1)^0,w,c
  5152   0013C0  A4D8               	btfss	status,2,c
  5153   0013C2  EFE5  F009         	goto	u2371
  5154   0013C6  EFE7  F009         	goto	u2370
  5155   0013CA                     u2371:
  5156   0013CA  EF5A  F008         	goto	l358
  5157   0013CE                     u2370:
  5158   0013CE  0411               	decf	_i_RUN_ZERO^0,w,c
  5159   0013D0  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5160   0013D2  B4D8               	btfsc	status,2,c
  5161   0013D4  EFEE  F009         	goto	u2381
  5162   0013D8  EFF0  F009         	goto	u2380
  5163   0013DC                     u2381:
  5164   0013DC  EF5A  F008         	goto	l358
  5165   0013E0                     u2380:
  5166   0013E0                     l378:
  5167                           
  5168                           ;main.c: 1031:     LATAbits.LATA2 = 0;
  5169   0013E0  9489               	bcf	137,2,c	;volatile
  5170   0013E2                     
  5171                           ;main.c: 1033:     if ((NUM == 0 || Stop == 1) && i_RUN_ZERO == 0) {
  5172   0013E2  5013               	movf	_NUM^0,w,c
  5173   0013E4  1014               	iorwf	(_NUM+1)^0,w,c
  5174   0013E6  B4D8               	btfsc	status,2,c
  5175   0013E8  EFF8  F009         	goto	u2391
  5176   0013EC  EFFA  F009         	goto	u2390
  5177   0013F0                     u2391:
  5178   0013F0  EF02  F00A         	goto	l3639
  5179   0013F4                     u2390:
  5180   0013F4  042F               	decf	_Stop^0,w,c
  5181   0013F6  A4D8               	btfss	status,2,c
  5182   0013F8  EF00  F00A         	goto	u2401
  5183   0013FC  EF02  F00A         	goto	u2400
  5184   001400                     u2401:
  5185   001400  EF26  F00A         	goto	l3651
  5186   001404                     u2400:
  5187   001404                     l3639:
  5188   001404  5011               	movf	_i_RUN_ZERO^0,w,c
  5189   001406  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5190   001408  A4D8               	btfss	status,2,c
  5191   00140A  EF09  F00A         	goto	u2411
  5192   00140E  EF0B  F00A         	goto	u2410
  5193   001412                     u2411:
  5194   001412  EF26  F00A         	goto	l3651
  5195   001416                     u2410:
  5196   001416                     
  5197                           ;main.c: 1035:         if (vibration_mode == 1) {
  5198   001416  042C               	decf	_vibration_mode^0,w,c
  5199   001418  A4D8               	btfss	status,2,c
  5200   00141A  EF11  F00A         	goto	u2421
  5201   00141E  EF13  F00A         	goto	u2420
  5202   001422                     u2421:
  5203   001422  EF26  F00A         	goto	l3651
  5204   001426                     u2420:
  5205   001426                     
  5206                           ;main.c: 1036:             LATCbits.LATC1 = 1;
  5207   001426  828B               	bsf	139,1,c	;volatile
  5208   001428                     
  5209                           ;main.c: 1037:             delay_1ms(Vmotor_Time);
  5210   001428  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5211   00142C  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5212   001430  ECF8  F010         	call	_delay_1ms	;wreg free
  5213   001434                     
  5214                           ;main.c: 1039:             LATCbits.LATC1 = 0;
  5215   001434  928B               	bcf	139,1,c	;volatile
  5216   001436                     
  5217                           ;main.c: 1040:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5218   001436  0E04               	movlw	4
  5219   001438  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5220   00143A  0E0C               	movlw	12
  5221   00143C  6E49               	movwf	??_Homing_Again_Manual^0,c
  5222   00143E  0E34               	movlw	52
  5223   001440                     u3617:
  5224   001440  2EE8               	decfsz	wreg,f,c
  5225   001442  D7FE               	bra	u3617
  5226   001444  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5227   001446  D7FC               	bra	u3617
  5228   001448  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5229   00144A  D7FA               	bra	u3617
  5230   00144C                     l3651:
  5231                           
  5232                           ;main.c: 1044:     i_RUN_ZERO = 0;
  5233   00144C  0E00               	movlw	0
  5234   00144E  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5235   001450  0E00               	movlw	0
  5236   001452  6E11               	movwf	_i_RUN_ZERO^0,c
  5237   001454                     
  5238                           ;main.c: 1045:     NUM = 0;
  5239   001454  0E00               	movlw	0
  5240   001456  6E14               	movwf	(_NUM+1)^0,c
  5241   001458  0E00               	movlw	0
  5242   00145A  6E13               	movwf	_NUM^0,c
  5243   00145C                     
  5244                           ;main.c: 1047:     dispense = 0;
  5245   00145C  0E00               	movlw	0
  5246   00145E  6E08               	movwf	(_dispense+1)^0,c
  5247   001460  0E00               	movlw	0
  5248   001462  6E07               	movwf	_dispense^0,c
  5249   001464                     
  5250                           ;main.c: 1048:     OpMode = MANUAL_MODE;
  5251   001464  0E00               	movlw	0
  5252   001466  6E2A               	movwf	_OpMode^0,c	;volatile
  5253   001468  0012               	return		;funcret
  5254   00146A                     __end_of_Homing_Again_Manual:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function _WriteSTLED316SData *****************
  5258 ;; Defined at:
  5259 ;;		line 145 in file "Display.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  number          2   14[COMRAM] int 
  5262 ;;  v_mode          1   16[COMRAM] unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  NUM_DIG1        2   19[COMRAM] int 
  5265 ;;  NUM_DIG0        2   17[COMRAM] int 
  5266 ;;  data4           1   22[COMRAM] unsigned char 
  5267 ;;  data3           1   21[COMRAM] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;Total ram usage:        9 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; Hardware stack levels required when called: 3
  5284 ;; This function calls:
  5285 ;;		_Get7Seg
  5286 ;;		_STLED316s_SPI_SendData
  5287 ;;		___awdiv
  5288 ;;		___awmod
  5289 ;; This function is called by:
  5290 ;;		_main
  5291 ;;		_Homing_Again_Manual
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text22
  5296   001CD0                     __ptext22:
  5297                           	callstack 0
  5298   001CD0                     _WriteSTLED316SData:
  5299                           	callstack 27
  5300   001CD0                     
  5301                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  5302   001CD0  C040  F038         	movff	WriteSTLED316SData@number,___awmod@dividend
  5303   001CD4  C041  F039         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  5304   001CD8  0E00               	movlw	0
  5305   001CDA  6E3B               	movwf	(___awmod@divisor+1)^0,c
  5306   001CDC  0E0A               	movlw	10
  5307   001CDE  6E3A               	movwf	___awmod@divisor^0,c
  5308   001CE0  EC10  F00E         	call	___awmod	;wreg free
  5309   001CE4  C038  F043         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  5310   001CE8  C039  F044         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  5311                           
  5312                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  5313   001CEC  C040  F038         	movff	WriteSTLED316SData@number,___awdiv@dividend
  5314   001CF0  C041  F039         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  5315   001CF4  0E00               	movlw	0
  5316   001CF6  6E3B               	movwf	(___awdiv@divisor+1)^0,c
  5317   001CF8  0E0A               	movlw	10
  5318   001CFA  6E3A               	movwf	___awdiv@divisor^0,c
  5319   001CFC  ECAE  F00D         	call	___awdiv	;wreg free
  5320   001D00  C038  F045         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  5321   001D04  C039  F046         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  5322   001D08                     
  5323                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  5324   001D08  988B               	bcf	139,4,c	;volatile
  5325                           
  5326                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  5327   001D0A  0E00               	movlw	0
  5328   001D0C  EC02  F00F         	call	_STLED316s_SPI_SendData
  5329   001D10                     
  5330                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  5331   001D10  888B               	bsf	139,4,c	;volatile
  5332   001D12                     
  5333                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  5334   001D12  988B               	bcf	139,4,c	;volatile
  5335                           
  5336                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  5337   001D14  0E00               	movlw	0
  5338   001D16  EC02  F00F         	call	_STLED316s_SPI_SendData
  5339                           
  5340                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  5341   001D1A  C045  F038         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  5342   001D1E  C046  F039         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  5343   001D22  EC48  F00D         	call	_Get7Seg	;wreg free
  5344   001D26  6E48               	movwf	WriteSTLED316SData@data4^0,c
  5345                           
  5346                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  5347   001D28  C043  F038         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  5348   001D2C  C044  F039         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  5349   001D30  EC48  F00D         	call	_Get7Seg	;wreg free
  5350   001D34  6E47               	movwf	WriteSTLED316SData@data3^0,c
  5351   001D36                     
  5352                           ;Display.c: 165:     if (v_mode) {
  5353   001D36  5042               	movf	WriteSTLED316SData@v_mode^0,w,c
  5354   001D38  B4D8               	btfsc	status,2,c
  5355   001D3A  EFA1  F00E         	goto	u1991
  5356   001D3E  EFA3  F00E         	goto	u1990
  5357   001D42                     u1991:
  5358   001D42  EFAF  F00E         	goto	l3171
  5359   001D46                     u1990:
  5360   001D46                     
  5361                           ;Display.c: 166:         if (v_mode == 0xFF)
  5362   001D46  2842               	incf	WriteSTLED316SData@v_mode^0,w,c
  5363   001D48  A4D8               	btfss	status,2,c
  5364   001D4A  EFA9  F00E         	goto	u2001
  5365   001D4E  EFAB  F00E         	goto	u2000
  5366   001D52                     u2001:
  5367   001D52  EFAE  F00E         	goto	l3169
  5368   001D56                     u2000:
  5369   001D56                     
  5370                           ;Display.c: 167:             data4 |= 0x80;
  5371   001D56  8E48               	bsf	WriteSTLED316SData@data4^0,7,c
  5372   001D58  EFAF  F00E         	goto	l3171
  5373   001D5C                     l3169:
  5374                           
  5375                           ;Display.c: 169:             data3 |= 0x80;
  5376   001D5C  8E47               	bsf	WriteSTLED316SData@data3^0,7,c
  5377   001D5E                     l3171:
  5378                           
  5379                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  5380   001D5E  5048               	movf	WriteSTLED316SData@data4^0,w,c
  5381   001D60  EC02  F00F         	call	_STLED316s_SPI_SendData
  5382   001D64                     
  5383                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  5384   001D64  5047               	movf	WriteSTLED316SData@data3^0,w,c
  5385   001D66  EC02  F00F         	call	_STLED316s_SPI_SendData
  5386   001D6A                     
  5387                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  5388   001D6A  888B               	bsf	139,4,c	;volatile
  5389   001D6C                     
  5390                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  5391   001D6C  988B               	bcf	139,4,c	;volatile
  5392   001D6E                     
  5393                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  5394   001D6E  0E0D               	movlw	13
  5395   001D70  EC02  F00F         	call	_STLED316s_SPI_SendData
  5396   001D74                     
  5397                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  5398   001D74  888B               	bsf	139,4,c	;volatile
  5399   001D76  0012               	return		;funcret
  5400   001D78                     __end_of_WriteSTLED316SData:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function ___awmod *****************
  5404 ;; Defined at:
  5405 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  dividend        2    6[COMRAM] int 
  5408 ;;  divisor         2    8[COMRAM] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  sign            1   11[COMRAM] unsigned char 
  5411 ;;  counter         1   10[COMRAM] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  2    6[COMRAM] int 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:        6 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 2
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_WriteSTLED316SData
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text23
  5436   001C20                     __ptext23:
  5437                           	callstack 0
  5438   001C20                     ___awmod:
  5439                           	callstack 27
  5440   001C20  0E00               	movlw	0
  5441   001C22  6E3D               	movwf	___awmod@sign^0,c
  5442   001C24  BE39               	btfsc	(___awmod@dividend+1)^0,7,c
  5443   001C26  EF19  F00E         	goto	u1930
  5444   001C2A  EF17  F00E         	goto	u1931
  5445   001C2E                     u1931:
  5446   001C2E  EF1F  F00E         	goto	l3127
  5447   001C32                     u1930:
  5448   001C32  6C38               	negf	___awmod@dividend^0,c
  5449   001C34  1E39               	comf	(___awmod@dividend+1)^0,f,c
  5450   001C36  B0D8               	btfsc	status,0,c
  5451   001C38  2A39               	incf	(___awmod@dividend+1)^0,f,c
  5452   001C3A  0E01               	movlw	1
  5453   001C3C  6E3D               	movwf	___awmod@sign^0,c
  5454   001C3E                     l3127:
  5455   001C3E  BE3B               	btfsc	(___awmod@divisor+1)^0,7,c
  5456   001C40  EF26  F00E         	goto	u1940
  5457   001C44  EF24  F00E         	goto	u1941
  5458   001C48                     u1941:
  5459   001C48  EF2A  F00E         	goto	l3131
  5460   001C4C                     u1940:
  5461   001C4C  6C3A               	negf	___awmod@divisor^0,c
  5462   001C4E  1E3B               	comf	(___awmod@divisor+1)^0,f,c
  5463   001C50  B0D8               	btfsc	status,0,c
  5464   001C52  2A3B               	incf	(___awmod@divisor+1)^0,f,c
  5465   001C54                     l3131:
  5466   001C54  503A               	movf	___awmod@divisor^0,w,c
  5467   001C56  103B               	iorwf	(___awmod@divisor+1)^0,w,c
  5468   001C58  B4D8               	btfsc	status,2,c
  5469   001C5A  EF31  F00E         	goto	u1951
  5470   001C5E  EF33  F00E         	goto	u1950
  5471   001C62                     u1951:
  5472   001C62  EF57  F00E         	goto	l3147
  5473   001C66                     u1950:
  5474   001C66  0E01               	movlw	1
  5475   001C68  6E3C               	movwf	___awmod@counter^0,c
  5476   001C6A  EF3B  F00E         	goto	l3137
  5477   001C6E                     l3135:
  5478   001C6E  90D8               	bcf	status,0,c
  5479   001C70  363A               	rlcf	___awmod@divisor^0,f,c
  5480   001C72  363B               	rlcf	(___awmod@divisor+1)^0,f,c
  5481   001C74  2A3C               	incf	___awmod@counter^0,f,c
  5482   001C76                     l3137:
  5483   001C76  AE3B               	btfss	(___awmod@divisor+1)^0,7,c
  5484   001C78  EF40  F00E         	goto	u1961
  5485   001C7C  EF42  F00E         	goto	u1960
  5486   001C80                     u1961:
  5487   001C80  EF37  F00E         	goto	l3135
  5488   001C84                     u1960:
  5489   001C84                     l3139:
  5490   001C84  503A               	movf	___awmod@divisor^0,w,c
  5491   001C86  5C38               	subwf	___awmod@dividend^0,w,c
  5492   001C88  503B               	movf	(___awmod@divisor+1)^0,w,c
  5493   001C8A  5839               	subwfb	(___awmod@dividend+1)^0,w,c
  5494   001C8C  A0D8               	btfss	status,0,c
  5495   001C8E  EF4B  F00E         	goto	u1971
  5496   001C92  EF4D  F00E         	goto	u1970
  5497   001C96                     u1971:
  5498   001C96  EF51  F00E         	goto	l3143
  5499   001C9A                     u1970:
  5500   001C9A  503A               	movf	___awmod@divisor^0,w,c
  5501   001C9C  5E38               	subwf	___awmod@dividend^0,f,c
  5502   001C9E  503B               	movf	(___awmod@divisor+1)^0,w,c
  5503   001CA0  5A39               	subwfb	(___awmod@dividend+1)^0,f,c
  5504   001CA2                     l3143:
  5505   001CA2  90D8               	bcf	status,0,c
  5506   001CA4  323B               	rrcf	(___awmod@divisor+1)^0,f,c
  5507   001CA6  323A               	rrcf	___awmod@divisor^0,f,c
  5508   001CA8  2E3C               	decfsz	___awmod@counter^0,f,c
  5509   001CAA  EF42  F00E         	goto	l3139
  5510   001CAE                     l3147:
  5511   001CAE  503D               	movf	___awmod@sign^0,w,c
  5512   001CB0  B4D8               	btfsc	status,2,c
  5513   001CB2  EF5D  F00E         	goto	u1981
  5514   001CB6  EF5F  F00E         	goto	u1980
  5515   001CBA                     u1981:
  5516   001CBA  EF63  F00E         	goto	l3151
  5517   001CBE                     u1980:
  5518   001CBE  6C38               	negf	___awmod@dividend^0,c
  5519   001CC0  1E39               	comf	(___awmod@dividend+1)^0,f,c
  5520   001CC2  B0D8               	btfsc	status,0,c
  5521   001CC4  2A39               	incf	(___awmod@dividend+1)^0,f,c
  5522   001CC6                     l3151:
  5523   001CC6  C038  F038         	movff	___awmod@dividend,?___awmod
  5524   001CCA  C039  F039         	movff	___awmod@dividend+1,?___awmod+1
  5525   001CCE  0012               	return		;funcret
  5526   001CD0                     __end_of___awmod:
  5527                           	callstack 0
  5528                           
  5529 ;; *************** function ___awdiv *****************
  5530 ;; Defined at:
  5531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  dividend        2    6[COMRAM] int 
  5534 ;;  divisor         2    8[COMRAM] int 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  quotient        2   12[COMRAM] int 
  5537 ;;  sign            1   11[COMRAM] unsigned char 
  5538 ;;  counter         1   10[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  2    6[COMRAM] int 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;Total ram usage:        8 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 2
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_WriteSTLED316SData
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text24
  5563   001B5C                     __ptext24:
  5564                           	callstack 0
  5565   001B5C                     ___awdiv:
  5566                           	callstack 27
  5567   001B5C  0E00               	movlw	0
  5568   001B5E  6E3D               	movwf	___awdiv@sign^0,c
  5569   001B60  BE3B               	btfsc	(___awdiv@divisor+1)^0,7,c
  5570   001B62  EFB7  F00D         	goto	u1870
  5571   001B66  EFB5  F00D         	goto	u1871
  5572   001B6A                     u1871:
  5573   001B6A  EFBD  F00D         	goto	l3083
  5574   001B6E                     u1870:
  5575   001B6E  6C3A               	negf	___awdiv@divisor^0,c
  5576   001B70  1E3B               	comf	(___awdiv@divisor+1)^0,f,c
  5577   001B72  B0D8               	btfsc	status,0,c
  5578   001B74  2A3B               	incf	(___awdiv@divisor+1)^0,f,c
  5579   001B76  0E01               	movlw	1
  5580   001B78  6E3D               	movwf	___awdiv@sign^0,c
  5581   001B7A                     l3083:
  5582   001B7A  BE39               	btfsc	(___awdiv@dividend+1)^0,7,c
  5583   001B7C  EFC4  F00D         	goto	u1880
  5584   001B80  EFC2  F00D         	goto	u1881
  5585   001B84                     u1881:
  5586   001B84  EFCA  F00D         	goto	l3089
  5587   001B88                     u1880:
  5588   001B88  6C38               	negf	___awdiv@dividend^0,c
  5589   001B8A  1E39               	comf	(___awdiv@dividend+1)^0,f,c
  5590   001B8C  B0D8               	btfsc	status,0,c
  5591   001B8E  2A39               	incf	(___awdiv@dividend+1)^0,f,c
  5592   001B90  0E01               	movlw	1
  5593   001B92  1A3D               	xorwf	___awdiv@sign^0,f,c
  5594   001B94                     l3089:
  5595   001B94  0E00               	movlw	0
  5596   001B96  6E3F               	movwf	(___awdiv@quotient+1)^0,c
  5597   001B98  0E00               	movlw	0
  5598   001B9A  6E3E               	movwf	___awdiv@quotient^0,c
  5599   001B9C  503A               	movf	___awdiv@divisor^0,w,c
  5600   001B9E  103B               	iorwf	(___awdiv@divisor+1)^0,w,c
  5601   001BA0  B4D8               	btfsc	status,2,c
  5602   001BA2  EFD5  F00D         	goto	u1891
  5603   001BA6  EFD7  F00D         	goto	u1890
  5604   001BAA                     u1891:
  5605   001BAA  EFFF  F00D         	goto	l3111
  5606   001BAE                     u1890:
  5607   001BAE  0E01               	movlw	1
  5608   001BB0  6E3C               	movwf	___awdiv@counter^0,c
  5609   001BB2  EFDF  F00D         	goto	l3097
  5610   001BB6                     l3095:
  5611   001BB6  90D8               	bcf	status,0,c
  5612   001BB8  363A               	rlcf	___awdiv@divisor^0,f,c
  5613   001BBA  363B               	rlcf	(___awdiv@divisor+1)^0,f,c
  5614   001BBC  2A3C               	incf	___awdiv@counter^0,f,c
  5615   001BBE                     l3097:
  5616   001BBE  AE3B               	btfss	(___awdiv@divisor+1)^0,7,c
  5617   001BC0  EFE4  F00D         	goto	u1901
  5618   001BC4  EFE6  F00D         	goto	u1900
  5619   001BC8                     u1901:
  5620   001BC8  EFDB  F00D         	goto	l3095
  5621   001BCC                     u1900:
  5622   001BCC                     l3099:
  5623   001BCC  90D8               	bcf	status,0,c
  5624   001BCE  363E               	rlcf	___awdiv@quotient^0,f,c
  5625   001BD0  363F               	rlcf	(___awdiv@quotient+1)^0,f,c
  5626   001BD2  503A               	movf	___awdiv@divisor^0,w,c
  5627   001BD4  5C38               	subwf	___awdiv@dividend^0,w,c
  5628   001BD6  503B               	movf	(___awdiv@divisor+1)^0,w,c
  5629   001BD8  5839               	subwfb	(___awdiv@dividend+1)^0,w,c
  5630   001BDA  A0D8               	btfss	status,0,c
  5631   001BDC  EFF2  F00D         	goto	u1911
  5632   001BE0  EFF4  F00D         	goto	u1910
  5633   001BE4                     u1911:
  5634   001BE4  EFF9  F00D         	goto	l3107
  5635   001BE8                     u1910:
  5636   001BE8  503A               	movf	___awdiv@divisor^0,w,c
  5637   001BEA  5E38               	subwf	___awdiv@dividend^0,f,c
  5638   001BEC  503B               	movf	(___awdiv@divisor+1)^0,w,c
  5639   001BEE  5A39               	subwfb	(___awdiv@dividend+1)^0,f,c
  5640   001BF0  803E               	bsf	___awdiv@quotient^0,0,c
  5641   001BF2                     l3107:
  5642   001BF2  90D8               	bcf	status,0,c
  5643   001BF4  323B               	rrcf	(___awdiv@divisor+1)^0,f,c
  5644   001BF6  323A               	rrcf	___awdiv@divisor^0,f,c
  5645   001BF8  2E3C               	decfsz	___awdiv@counter^0,f,c
  5646   001BFA  EFE6  F00D         	goto	l3099
  5647   001BFE                     l3111:
  5648   001BFE  503D               	movf	___awdiv@sign^0,w,c
  5649   001C00  B4D8               	btfsc	status,2,c
  5650   001C02  EF05  F00E         	goto	u1921
  5651   001C06  EF07  F00E         	goto	u1920
  5652   001C0A                     u1921:
  5653   001C0A  EF0B  F00E         	goto	l3115
  5654   001C0E                     u1920:
  5655   001C0E  6C3E               	negf	___awdiv@quotient^0,c
  5656   001C10  1E3F               	comf	(___awdiv@quotient+1)^0,f,c
  5657   001C12  B0D8               	btfsc	status,0,c
  5658   001C14  2A3F               	incf	(___awdiv@quotient+1)^0,f,c
  5659   001C16                     l3115:
  5660   001C16  C03E  F038         	movff	___awdiv@quotient,?___awdiv
  5661   001C1A  C03F  F039         	movff	___awdiv@quotient+1,?___awdiv+1
  5662   001C1E  0012               	return		;funcret
  5663   001C20                     __end_of___awdiv:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _Get7Seg *****************
  5667 ;; Defined at:
  5668 ;;		line 104 in file "Display.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  Digit           2    6[COMRAM] int 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  Data            1   10[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      unsigned char 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        5 bytes
  5687 ;; Hardware stack levels used: 1
  5688 ;; Hardware stack levels required when called: 2
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_WriteSTLED316SData
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text25
  5697   001A90                     __ptext25:
  5698                           	callstack 0
  5699   001A90                     _Get7Seg:
  5700                           	callstack 27
  5701   001A90                     
  5702                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  5703   001A90  EF76  F00D         	goto	l2993
  5704   001A94                     l2969:
  5705                           
  5706                           ;Display.c: 109:             Data = 0x3F;
  5707   001A94  0E3F               	movlw	63
  5708   001A96  6E3C               	movwf	Get7Seg@Data^0,c
  5709                           
  5710                           ;Display.c: 110:             break;
  5711   001A98  EFAC  F00D         	goto	l2995
  5712   001A9C                     l2971:
  5713                           
  5714                           ;Display.c: 112:             Data = 0x06;
  5715   001A9C  0E06               	movlw	6
  5716   001A9E  6E3C               	movwf	Get7Seg@Data^0,c
  5717                           
  5718                           ;Display.c: 113:             break;
  5719   001AA0  EFAC  F00D         	goto	l2995
  5720   001AA4                     l2973:
  5721                           
  5722                           ;Display.c: 115:             Data = 0x5B;
  5723   001AA4  0E5B               	movlw	91
  5724   001AA6  6E3C               	movwf	Get7Seg@Data^0,c
  5725                           
  5726                           ;Display.c: 116:             break;
  5727   001AA8  EFAC  F00D         	goto	l2995
  5728   001AAC                     l2975:
  5729                           
  5730                           ;Display.c: 118:             Data = 0x4F;
  5731   001AAC  0E4F               	movlw	79
  5732   001AAE  6E3C               	movwf	Get7Seg@Data^0,c
  5733                           
  5734                           ;Display.c: 119:             break;
  5735   001AB0  EFAC  F00D         	goto	l2995
  5736   001AB4                     l2977:
  5737                           
  5738                           ;Display.c: 121:             Data = 0x66;
  5739   001AB4  0E66               	movlw	102
  5740   001AB6  6E3C               	movwf	Get7Seg@Data^0,c
  5741                           
  5742                           ;Display.c: 122:             break;
  5743   001AB8  EFAC  F00D         	goto	l2995
  5744   001ABC                     l2979:
  5745                           
  5746                           ;Display.c: 124:             Data = 0x6D;
  5747   001ABC  0E6D               	movlw	109
  5748   001ABE  6E3C               	movwf	Get7Seg@Data^0,c
  5749                           
  5750                           ;Display.c: 125:             break;
  5751   001AC0  EFAC  F00D         	goto	l2995
  5752   001AC4                     l2981:
  5753                           
  5754                           ;Display.c: 127:             Data = 0x7D;
  5755   001AC4  0E7D               	movlw	125
  5756   001AC6  6E3C               	movwf	Get7Seg@Data^0,c
  5757                           
  5758                           ;Display.c: 128:             break;
  5759   001AC8  EFAC  F00D         	goto	l2995
  5760   001ACC                     l2983:
  5761                           
  5762                           ;Display.c: 130:             Data = 0x07;
  5763   001ACC  0E07               	movlw	7
  5764   001ACE  6E3C               	movwf	Get7Seg@Data^0,c
  5765                           
  5766                           ;Display.c: 131:             break;
  5767   001AD0  EFAC  F00D         	goto	l2995
  5768   001AD4                     l2985:
  5769                           
  5770                           ;Display.c: 133:             Data = 0x7F;
  5771   001AD4  0E7F               	movlw	127
  5772   001AD6  6E3C               	movwf	Get7Seg@Data^0,c
  5773                           
  5774                           ;Display.c: 134:             break;
  5775   001AD8  EFAC  F00D         	goto	l2995
  5776   001ADC                     l2987:
  5777                           
  5778                           ;Display.c: 136:             Data = 0x6F;
  5779   001ADC  0E6F               	movlw	111
  5780   001ADE  6E3C               	movwf	Get7Seg@Data^0,c
  5781                           
  5782                           ;Display.c: 137:             break;
  5783   001AE0  EFAC  F00D         	goto	l2995
  5784   001AE4                     l2989:
  5785                           
  5786                           ;Display.c: 139:             Data = 0x00;
  5787   001AE4  0E00               	movlw	0
  5788   001AE6  6E3C               	movwf	Get7Seg@Data^0,c
  5789                           
  5790                           ;Display.c: 140:             break;
  5791   001AE8  EFAC  F00D         	goto	l2995
  5792   001AEC                     l2993:
  5793   001AEC  C038  F03A         	movff	Get7Seg@Digit,??_Get7Seg
  5794   001AF0  C039  F03B         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5795                           
  5796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5797                           ; Switch size 1, requested type "simple"
  5798                           ; Number of cases is 1, Range of values is 0 to 0
  5799                           ; switch strategies available:
  5800                           ; Name         Instructions Cycles
  5801                           ; simple_byte            4     3 (average)
  5802                           ;	Chosen strategy is simple_byte
  5803   001AF4  503B               	movf	(??_Get7Seg+1)^0,w,c
  5804   001AF6  0A00               	xorlw	0	; case 0
  5805   001AF8  B4D8               	btfsc	status,2,c
  5806   001AFA  EF81  F00D         	goto	l4763
  5807   001AFE  EF72  F00D         	goto	l2989
  5808   001B02                     l4763:
  5809                           
  5810                           ; Switch size 1, requested type "simple"
  5811                           ; Number of cases is 10, Range of values is 0 to 9
  5812                           ; switch strategies available:
  5813                           ; Name         Instructions Cycles
  5814                           ; simple_byte           31    16 (average)
  5815                           ;	Chosen strategy is simple_byte
  5816   001B02  503A               	movf	??_Get7Seg^0,w,c
  5817   001B04  0A00               	xorlw	0	; case 0
  5818   001B06  B4D8               	btfsc	status,2,c
  5819   001B08  EF4A  F00D         	goto	l2969
  5820   001B0C  0A01               	xorlw	1	; case 1
  5821   001B0E  B4D8               	btfsc	status,2,c
  5822   001B10  EF4E  F00D         	goto	l2971
  5823   001B14  0A03               	xorlw	3	; case 2
  5824   001B16  B4D8               	btfsc	status,2,c
  5825   001B18  EF52  F00D         	goto	l2973
  5826   001B1C  0A01               	xorlw	1	; case 3
  5827   001B1E  B4D8               	btfsc	status,2,c
  5828   001B20  EF56  F00D         	goto	l2975
  5829   001B24  0A07               	xorlw	7	; case 4
  5830   001B26  B4D8               	btfsc	status,2,c
  5831   001B28  EF5A  F00D         	goto	l2977
  5832   001B2C  0A01               	xorlw	1	; case 5
  5833   001B2E  B4D8               	btfsc	status,2,c
  5834   001B30  EF5E  F00D         	goto	l2979
  5835   001B34  0A03               	xorlw	3	; case 6
  5836   001B36  B4D8               	btfsc	status,2,c
  5837   001B38  EF62  F00D         	goto	l2981
  5838   001B3C  0A01               	xorlw	1	; case 7
  5839   001B3E  B4D8               	btfsc	status,2,c
  5840   001B40  EF66  F00D         	goto	l2983
  5841   001B44  0A0F               	xorlw	15	; case 8
  5842   001B46  B4D8               	btfsc	status,2,c
  5843   001B48  EF6A  F00D         	goto	l2985
  5844   001B4C  0A01               	xorlw	1	; case 9
  5845   001B4E  B4D8               	btfsc	status,2,c
  5846   001B50  EF6E  F00D         	goto	l2987
  5847   001B54  EF72  F00D         	goto	l2989
  5848   001B58                     l2995:
  5849                           
  5850                           ;Display.c: 142:     return (Data);
  5851   001B58  503C               	movf	Get7Seg@Data^0,w,c
  5852   001B5A  0012               	return		;funcret
  5853   001B5C                     __end_of_Get7Seg:
  5854                           	callstack 0
  5855                           
  5856 ;; *************** function _Homing_Again_Auto *****************
  5857 ;; Defined at:
  5858 ;;		line 1055 in file "main.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;Total ram usage:        2 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; Hardware stack levels required when called: 4
  5879 ;; This function calls:
  5880 ;;		_AD_capture_BattVoltage
  5881 ;;		_MotorBREAK
  5882 ;;		_MotorON
  5883 ;;		_Read_IR
  5884 ;;		_WriteSTLED316SErr
  5885 ;;		_WriteSTLED316SMode
  5886 ;;		_delay_1ms
  5887 ;;		_readWeighingData
  5888 ;; This function is called by:
  5889 ;;		_main
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text26
  5894   00146A                     __ptext26:
  5895                           	callstack 0
  5896   00146A                     _Homing_Again_Auto:
  5897                           	callstack 26
  5898   00146A                     
  5899                           ;main.c: 1057:     IR_SENSORF = 0;
  5900   00146A  0E00               	movlw	0
  5901   00146C  6E0C               	movwf	(_IR_SENSORF+1)^0,c
  5902   00146E  0E00               	movlw	0
  5903   001470  6E0B               	movwf	_IR_SENSORF^0,c
  5904   001472                     
  5905                           ;main.c: 1058:     WriteSTLED316SMode('A');
  5906   001472  0E41               	movlw	65
  5907   001474  EC54  F00C         	call	_WriteSTLED316SMode
  5908   001478                     
  5909                           ;main.c: 1060:     if (vibration_mode == 1) {
  5910   001478  042C               	decf	_vibration_mode^0,w,c
  5911   00147A  A4D8               	btfss	status,2,c
  5912   00147C  EF42  F00A         	goto	u2431
  5913   001480  EF44  F00A         	goto	u2430
  5914   001484                     u2431:
  5915   001484  EF59  F00A         	goto	l392
  5916   001488                     u2430:
  5917   001488                     
  5918                           ;main.c: 1061:         LATCbits.LATC1 = 1;
  5919   001488  828B               	bsf	139,1,c	;volatile
  5920   00148A                     
  5921                           ;main.c: 1062:         delay_1ms(Vmotor_Time);
  5922   00148A  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5923   00148E  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5924   001492  ECF8  F010         	call	_delay_1ms	;wreg free
  5925   001496                     
  5926                           ;main.c: 1063:         LATCbits.LATC1 = 0;
  5927   001496  928B               	bcf	139,1,c	;volatile
  5928   001498                     l3671:
  5929                           
  5930                           ;main.c: 1064:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5931   001498  0E04               	movlw	4
  5932   00149A  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  5933   00149C  0E0C               	movlw	12
  5934   00149E  6E41               	movwf	??_Homing_Again_Auto^0,c
  5935   0014A0  0E34               	movlw	52
  5936   0014A2                     u3627:
  5937   0014A2  2EE8               	decfsz	wreg,f,c
  5938   0014A4  D7FE               	bra	u3627
  5939   0014A6  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  5940   0014A8  D7FC               	bra	u3627
  5941   0014AA  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5942   0014AC  D7FA               	bra	u3627
  5943                           
  5944                           ;main.c: 1065:     } else {
  5945   0014AE  EF5C  F00A         	goto	l3675
  5946   0014B2                     l392:
  5947                           
  5948                           ;main.c: 1066:         LATCbits.LATC1 = 0;
  5949   0014B2  928B               	bcf	139,1,c	;volatile
  5950   0014B4  EF4C  F00A         	goto	l3671
  5951   0014B8                     l3675:
  5952                           
  5953                           ;main.c: 1070:     LATAbits.LATA2 = 1;
  5954   0014B8  8489               	bsf	137,2,c	;volatile
  5955                           
  5956                           ;main.c: 1072:     while (Stop == 0) {
  5957   0014BA  EF0C  F00B         	goto	l3733
  5958   0014BE                     l395:
  5959   0014BE  0004               	clrwdt		;# 
  5960   0014C0                     
  5961                           ;main.c: 1074:         readWeighingData();
  5962   0014C0  ECAF  F00F         	call	_readWeighingData	;wreg free
  5963   0014C4                     
  5964                           ;main.c: 1075:         AD_capture_BattVoltage();
  5965   0014C4  EC4B  F010         	call	_AD_capture_BattVoltage	;wreg free
  5966   0014C8                     
  5967                           ;main.c: 1076:         delay_1ms(Motor_Pause_Time);
  5968   0014C8  C015  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  5969   0014CC  C016  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5970   0014D0  ECF8  F010         	call	_delay_1ms	;wreg free
  5971   0014D4                     
  5972                           ;main.c: 1077:         MotorON();
  5973   0014D4  ECA3  F011         	call	_MotorON	;wreg free
  5974   0014D8                     
  5975                           ;main.c: 1078:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5976   0014D8  0E04               	movlw	4
  5977   0014DA  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  5978   0014DC  0E8E               	movlw	142
  5979   0014DE  6E41               	movwf	??_Homing_Again_Auto^0,c
  5980   0014E0  0E12               	movlw	18
  5981   0014E2                     u3637:
  5982   0014E2  2EE8               	decfsz	wreg,f,c
  5983   0014E4  D7FE               	bra	u3637
  5984   0014E6  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  5985   0014E8  D7FC               	bra	u3637
  5986   0014EA  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5987   0014EC  D7FA               	bra	u3637
  5988   0014EE  D000               	nop2	
  5989   0014F0                     
  5990                           ;main.c: 1080:         errorcounter = 30;
  5991   0014F0  0E1E               	movlw	30
  5992   0014F2  6E52               	movwf	_errorcounter^0,c	;volatile
  5993   0014F4  0E00               	movlw	0
  5994   0014F6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5995   0014F8  0E00               	movlw	0
  5996   0014FA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5997   0014FC  0E00               	movlw	0
  5998   0014FE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5999   001500                     l3689:
  6000                           
  6001                           ;main.c: 1083:             IR_SENSORF = Read_IR();
  6002   001500  EC47  F011         	call	_Read_IR	;wreg free
  6003   001504  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  6004   001508  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  6005   00150C                     
  6006                           ;main.c: 1084:             if (errorcounter == 0) {
  6007   00150C  5052               	movf	_errorcounter^0,w,c	;volatile
  6008   00150E  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6009   001510  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6010   001512  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6011   001514  A4D8               	btfss	status,2,c
  6012   001516  EF8F  F00A         	goto	u2441
  6013   00151A  EF91  F00A         	goto	u2440
  6014   00151E                     u2441:
  6015   00151E  EF96  F00A         	goto	l3697
  6016   001522                     u2440:
  6017   001522                     
  6018                           ;main.c: 1085:                 WriteSTLED316SErr('1');
  6019   001522  0E31               	movlw	49
  6020   001524  ECD4  F00C         	call	_WriteSTLED316SErr
  6021   001528                     
  6022                           ;main.c: 1086:                 MotorBREAK();
  6023   001528  ECA8  F011         	call	_MotorBREAK	;wreg free
  6024   00152C                     l3697:
  6025                           
  6026                           ;main.c: 1088:         } while (IR_SENSORF != 0);
  6027   00152C  500B               	movf	_IR_SENSORF^0,w,c
  6028   00152E  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  6029   001530  A4D8               	btfss	status,2,c
  6030   001532  EF9D  F00A         	goto	u2451
  6031   001536  EF9F  F00A         	goto	u2450
  6032   00153A                     u2451:
  6033   00153A  EF80  F00A         	goto	l3689
  6034   00153E                     u2450:
  6035   00153E                     
  6036                           ;main.c: 1090:         _delay((unsigned long)((30)*(8000000/4000.0)));
  6037   00153E  0E4E               	movlw	78
  6038   001540  6E41               	movwf	??_Homing_Again_Auto^0,c
  6039   001542  0EEB               	movlw	235
  6040   001544                     u3647:
  6041   001544  2EE8               	decfsz	wreg,f,c
  6042   001546  D7FE               	bra	u3647
  6043   001548  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6044   00154A  D7FC               	bra	u3647
  6045   00154C  F000               	nop	
  6046   00154E                     
  6047                           ;main.c: 1091:         errorcounter = 30;
  6048   00154E  0E1E               	movlw	30
  6049   001550  6E52               	movwf	_errorcounter^0,c	;volatile
  6050   001552  0E00               	movlw	0
  6051   001554  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6052   001556  0E00               	movlw	0
  6053   001558  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6054   00155A  0E00               	movlw	0
  6055   00155C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6056   00155E                     l3703:
  6057                           
  6058                           ;main.c: 1094:             IR_SENSORF = Read_IR();
  6059   00155E  EC47  F011         	call	_Read_IR	;wreg free
  6060   001562  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  6061   001566  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  6062   00156A                     
  6063                           ;main.c: 1095:             if (errorcounter == 0) {
  6064   00156A  5052               	movf	_errorcounter^0,w,c	;volatile
  6065   00156C  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6066   00156E  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6067   001570  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6068   001572  A4D8               	btfss	status,2,c
  6069   001574  EFBE  F00A         	goto	u2461
  6070   001578  EFC0  F00A         	goto	u2460
  6071   00157C                     u2461:
  6072   00157C  EFC5  F00A         	goto	l3711
  6073   001580                     u2460:
  6074   001580                     
  6075                           ;main.c: 1096:                 WriteSTLED316SErr('2');
  6076   001580  0E32               	movlw	50
  6077   001582  ECD4  F00C         	call	_WriteSTLED316SErr
  6078   001586                     
  6079                           ;main.c: 1097:                 MotorBREAK();
  6080   001586  ECA8  F011         	call	_MotorBREAK	;wreg free
  6081   00158A                     l3711:
  6082                           
  6083                           ;main.c: 1099:         } while (IR_SENSORF != 1);
  6084   00158A  040B               	decf	_IR_SENSORF^0,w,c
  6085   00158C  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  6086   00158E  A4D8               	btfss	status,2,c
  6087   001590  EFCC  F00A         	goto	u2471
  6088   001594  EFCE  F00A         	goto	u2470
  6089   001598                     u2471:
  6090   001598  EFAF  F00A         	goto	l3703
  6091   00159C                     u2470:
  6092   00159C                     
  6093                           ;main.c: 1101:         errorcounter = 30;
  6094   00159C  0E1E               	movlw	30
  6095   00159E  6E52               	movwf	_errorcounter^0,c	;volatile
  6096   0015A0  0E00               	movlw	0
  6097   0015A2  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6098   0015A4  0E00               	movlw	0
  6099   0015A6  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6100   0015A8  0E00               	movlw	0
  6101   0015AA  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6102   0015AC                     
  6103                           ;main.c: 1103:         delay_1ms(Motor_Stop_Delay_Time);
  6104   0015AC  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  6105   0015B0  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  6106   0015B4  ECF8  F010         	call	_delay_1ms	;wreg free
  6107   0015B8                     
  6108                           ;main.c: 1104:         MotorBREAK();
  6109   0015B8  ECA8  F011         	call	_MotorBREAK	;wreg free
  6110                           
  6111                           ;main.c: 1106:         if (vibration_mode == 1) {
  6112   0015BC  042C               	decf	_vibration_mode^0,w,c
  6113   0015BE  A4D8               	btfss	status,2,c
  6114   0015C0  EFE4  F00A         	goto	u2481
  6115   0015C4  EFE6  F00A         	goto	u2480
  6116   0015C8                     u2481:
  6117   0015C8  EFFB  F00A         	goto	l402
  6118   0015CC                     u2480:
  6119   0015CC                     
  6120                           ;main.c: 1107:             LATCbits.LATC1 = 1;
  6121   0015CC  828B               	bsf	139,1,c	;volatile
  6122   0015CE                     
  6123                           ;main.c: 1108:             delay_1ms(Vmotor_Time);
  6124   0015CE  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6125   0015D2  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6126   0015D6  ECF8  F010         	call	_delay_1ms	;wreg free
  6127   0015DA                     
  6128                           ;main.c: 1110:             LATCbits.LATC1 = 0;
  6129   0015DA  928B               	bcf	139,1,c	;volatile
  6130   0015DC                     
  6131                           ;main.c: 1111:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6132   0015DC  0E04               	movlw	4
  6133   0015DE  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6134   0015E0  0E0C               	movlw	12
  6135   0015E2  6E41               	movwf	??_Homing_Again_Auto^0,c
  6136   0015E4  0E34               	movlw	52
  6137   0015E6                     u3657:
  6138   0015E6  2EE8               	decfsz	wreg,f,c
  6139   0015E8  D7FE               	bra	u3657
  6140   0015EA  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6141   0015EC  D7FC               	bra	u3657
  6142   0015EE  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6143   0015F0  D7FA               	bra	u3657
  6144                           
  6145                           ;main.c: 1112:         } else {
  6146   0015F2  EF02  F00B         	goto	l3729
  6147   0015F6                     l402:
  6148                           
  6149                           ;main.c: 1113:             LATCbits.LATC1 = 0;
  6150   0015F6  928B               	bcf	139,1,c	;volatile
  6151   0015F8                     
  6152                           ;main.c: 1114:             delay_1ms(Vmotor_Time);
  6153   0015F8  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6154   0015FC  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6155   001600  ECF8  F010         	call	_delay_1ms	;wreg free
  6156   001604                     l3729:
  6157                           
  6158                           ;main.c: 1117:         if (Stop == 1)
  6159   001604  042F               	decf	_Stop^0,w,c
  6160   001606  A4D8               	btfss	status,2,c
  6161   001608  EF08  F00B         	goto	u2491
  6162   00160C  EF0A  F00B         	goto	u2490
  6163   001610                     u2491:
  6164   001610  EF0C  F00B         	goto	l3733
  6165   001614                     u2490:
  6166   001614  EF14  F00B         	goto	l405
  6167   001618                     l3733:
  6168                           
  6169                           ;main.c: 1072:     while (Stop == 0) {
  6170   001618  502F               	movf	_Stop^0,w,c
  6171   00161A  B4D8               	btfsc	status,2,c
  6172   00161C  EF12  F00B         	goto	u2501
  6173   001620  EF14  F00B         	goto	u2500
  6174   001624                     u2501:
  6175   001624  EF5F  F00A         	goto	l395
  6176   001628                     u2500:
  6177   001628                     l405:
  6178                           
  6179                           ;main.c: 1122:     LATAbits.LATA2 = 0;
  6180   001628  9489               	bcf	137,2,c	;volatile
  6181   00162A                     
  6182                           ;main.c: 1124:     if (NUM == 0 || Stop == 1) {
  6183   00162A  5013               	movf	_NUM^0,w,c
  6184   00162C  1014               	iorwf	(_NUM+1)^0,w,c
  6185   00162E  B4D8               	btfsc	status,2,c
  6186   001630  EF1C  F00B         	goto	u2511
  6187   001634  EF1E  F00B         	goto	u2510
  6188   001638                     u2511:
  6189   001638  EF26  F00B         	goto	l3739
  6190   00163C                     u2510:
  6191   00163C  042F               	decf	_Stop^0,w,c
  6192   00163E  A4D8               	btfss	status,2,c
  6193   001640  EF24  F00B         	goto	u2521
  6194   001644  EF26  F00B         	goto	u2520
  6195   001648                     u2521:
  6196   001648  EF41  F00B         	goto	l3749
  6197   00164C                     u2520:
  6198   00164C                     l3739:
  6199                           
  6200                           ;main.c: 1126:         if (vibration_mode == 1) {
  6201   00164C  042C               	decf	_vibration_mode^0,w,c
  6202   00164E  A4D8               	btfss	status,2,c
  6203   001650  EF2C  F00B         	goto	u2531
  6204   001654  EF2E  F00B         	goto	u2530
  6205   001658                     u2531:
  6206   001658  EF41  F00B         	goto	l3749
  6207   00165C                     u2530:
  6208   00165C                     
  6209                           ;main.c: 1127:             LATCbits.LATC1 = 1;
  6210   00165C  828B               	bsf	139,1,c	;volatile
  6211   00165E                     
  6212                           ;main.c: 1128:             delay_1ms(Vmotor_Time);
  6213   00165E  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6214   001662  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6215   001666  ECF8  F010         	call	_delay_1ms	;wreg free
  6216   00166A                     
  6217                           ;main.c: 1130:             LATCbits.LATC1 = 0;
  6218   00166A  928B               	bcf	139,1,c	;volatile
  6219   00166C                     
  6220                           ;main.c: 1131:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6221   00166C  0E04               	movlw	4
  6222   00166E  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6223   001670  0E0C               	movlw	12
  6224   001672  6E41               	movwf	??_Homing_Again_Auto^0,c
  6225   001674  0E34               	movlw	52
  6226   001676                     u3667:
  6227   001676  2EE8               	decfsz	wreg,f,c
  6228   001678  D7FE               	bra	u3667
  6229   00167A  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6230   00167C  D7FC               	bra	u3667
  6231   00167E  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6232   001680  D7FA               	bra	u3667
  6233   001682                     l3749:
  6234                           
  6235                           ;main.c: 1136:     NUM = 0;
  6236   001682  0E00               	movlw	0
  6237   001684  6E14               	movwf	(_NUM+1)^0,c
  6238   001686  0E00               	movlw	0
  6239   001688  6E13               	movwf	_NUM^0,c
  6240   00168A                     
  6241                           ;main.c: 1137:     OpMode = AUTO_MODE;
  6242   00168A  0E02               	movlw	2
  6243   00168C  6E2A               	movwf	_OpMode^0,c	;volatile
  6244   00168E  0012               	return		;funcret
  6245   001690                     __end_of_Homing_Again_Auto:
  6246                           	callstack 0
  6247                           
  6248 ;; *************** function _readWeighingData *****************
  6249 ;; Defined at:
  6250 ;;		line 1166 in file "main.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  i               2    8[COMRAM] int 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        2 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 3
  6271 ;; This function calls:
  6272 ;;		_Write1USART
  6273 ;;		_flushOut
  6274 ;; This function is called by:
  6275 ;;		_Homing_Again_Manual
  6276 ;;		_Homing_Again_Auto
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text27
  6281   001F5E                     __ptext27:
  6282                           	callstack 0
  6283   001F5E                     _readWeighingData:
  6284                           	callstack 26
  6285   001F5E                     
  6286                           ;main.c: 1167:     int i;;main.c: 1169:     Serial_Buffer_Out[0] = 0xA5;
  6287   001F5E  0EA5               	movlw	165
  6288   001F60  0100               	movlb	0	; () banked
  6289   001F62  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  6290                           
  6291                           ;main.c: 1170:     Serial_Buffer_Out[1] = 0x45;
  6292   001F64  0E45               	movlw	69
  6293   001F66  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  6294                           
  6295                           ;main.c: 1171:     Serial_Buffer_Out[2] = 0x00;
  6296   001F68  0E00               	movlw	0
  6297   001F6A  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  6298                           
  6299                           ;main.c: 1172:     Serial_Buffer_Out[3] = 0x45;
  6300   001F6C  0E45               	movlw	69
  6301   001F6E  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  6302                           
  6303                           ;main.c: 1173:     Serial_Buffer_Out[4] = 0x5A;
  6304   001F70  0E5A               	movlw	90
  6305   001F72  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  6306   001F74                     
  6307                           ; BSR set to: 0
  6308                           ;main.c: 1175:     INTCONbits.GIE = 0;
  6309   001F74  9EF2               	bcf	242,7,c	;volatile
  6310                           
  6311                           ;main.c: 1176:     for (i = 0; i < 5; i++) {
  6312   001F76  0E00               	movlw	0
  6313   001F78  6E3B               	movwf	(readWeighingData@i+1)^0,c
  6314   001F7A  0E00               	movlw	0
  6315   001F7C  6E3A               	movwf	readWeighingData@i^0,c
  6316   001F7E                     l3257:
  6317                           
  6318                           ;main.c: 1177:         Write1USART(Serial_Buffer_Out[i]);
  6319   001F7E  0E60               	movlw	low _Serial_Buffer_Out
  6320   001F80  243A               	addwf	readWeighingData@i^0,w,c
  6321   001F82  6ED9               	movwf	fsr2l,c
  6322   001F84  0E00               	movlw	high _Serial_Buffer_Out
  6323   001F86  203B               	addwfc	(readWeighingData@i+1)^0,w,c
  6324   001F88  6EDA               	movwf	fsr2h,c
  6325   001F8A  50DF               	movf	indf2,w,c
  6326   001F8C  EC70  F011         	call	_Write1USART
  6327   001F90                     
  6328                           ;main.c: 1178:     }
  6329   001F90  4A3A               	infsnz	readWeighingData@i^0,f,c
  6330   001F92  2A3B               	incf	(readWeighingData@i+1)^0,f,c
  6331   001F94  BE3B               	btfsc	(readWeighingData@i+1)^0,7,c
  6332   001F96  EFD6  F00F         	goto	u2031
  6333   001F9A  503B               	movf	(readWeighingData@i+1)^0,w,c
  6334   001F9C  E109               	bnz	u2030
  6335   001F9E  0E05               	movlw	5
  6336   001FA0  5C3A               	subwf	readWeighingData@i^0,w,c
  6337   001FA2  A0D8               	btfss	status,0,c
  6338   001FA4  EFD6  F00F         	goto	u2031
  6339   001FA8  EFD8  F00F         	goto	u2030
  6340   001FAC                     u2031:
  6341   001FAC  EFBF  F00F         	goto	l3257
  6342   001FB0                     u2030:
  6343   001FB0                     
  6344                           ;main.c: 1179:     INTCONbits.GIE = 1;
  6345   001FB0  8EF2               	bsf	242,7,c	;volatile
  6346   001FB2                     
  6347                           ;main.c: 1181:     flushOut();
  6348   001FB2  ECA5  F010         	call	_flushOut	;wreg free
  6349   001FB6  0012               	return		;funcret
  6350   001FB8                     __end_of_readWeighingData:
  6351                           	callstack 0
  6352                           
  6353 ;; *************** function _flushOut *****************
  6354 ;; Defined at:
  6355 ;;		line 1155 in file "main.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  i               2    6[COMRAM] int 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;Total ram usage:        2 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; Hardware stack levels required when called: 2
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_main
  6380 ;;		_readWeighingData
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text28
  6385   00214A                     __ptext28:
  6386                           	callstack 0
  6387   00214A                     _flushOut:
  6388                           	callstack 28
  6389   00214A                     
  6390                           ;main.c: 1156:     int i;;main.c: 1158:     for (i = 0; i < 16; i++) {
  6391   00214A  0E00               	movlw	0
  6392   00214C  6E39               	movwf	(flushOut@i+1)^0,c
  6393   00214E  0E00               	movlw	0
  6394   002150  6E38               	movwf	flushOut@i^0,c
  6395   002152                     l2919:
  6396                           
  6397                           ;main.c: 1159:         Serial_Buffer_Out[i] = 0x00;
  6398   002152  0E60               	movlw	low _Serial_Buffer_Out
  6399   002154  2438               	addwf	flushOut@i^0,w,c
  6400   002156  6ED9               	movwf	fsr2l,c
  6401   002158  0E00               	movlw	high _Serial_Buffer_Out
  6402   00215A  2039               	addwfc	(flushOut@i+1)^0,w,c
  6403   00215C  6EDA               	movwf	fsr2h,c
  6404   00215E  0E00               	movlw	0
  6405   002160  6EDF               	movwf	indf2,c
  6406   002162                     
  6407                           ;main.c: 1160:     }
  6408   002162  4A38               	infsnz	flushOut@i^0,f,c
  6409   002164  2A39               	incf	(flushOut@i+1)^0,f,c
  6410   002166  BE39               	btfsc	(flushOut@i+1)^0,7,c
  6411   002168  EFBF  F010         	goto	u1741
  6412   00216C  5039               	movf	(flushOut@i+1)^0,w,c
  6413   00216E  E109               	bnz	u1740
  6414   002170  0E10               	movlw	16
  6415   002172  5C38               	subwf	flushOut@i^0,w,c
  6416   002174  A0D8               	btfss	status,0,c
  6417   002176  EFBF  F010         	goto	u1741
  6418   00217A  EFC1  F010         	goto	u1740
  6419   00217E                     u1741:
  6420   00217E  EFA9  F010         	goto	l2919
  6421   002182                     u1740:
  6422   002182  0012               	return		;funcret
  6423   002184                     __end_of_flushOut:
  6424                           	callstack 0
  6425                           
  6426 ;; *************** function _Write1USART *****************
  6427 ;; Defined at:
  6428 ;;		line 47 in file "usart.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  data            1    wreg     unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  data            1    6[COMRAM] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;Total ram usage:        1 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 2
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_main
  6453 ;;		_readWeighingData
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text29
  6458   0022E0                     __ptext29:
  6459                           	callstack 0
  6460   0022E0                     _Write1USART:
  6461                           	callstack 28
  6462                           
  6463                           ;incstack = 0
  6464                           ;Write1USART@data stored from wreg
  6465   0022E0  6E38               	movwf	Write1USART@data^0,c
  6466   0022E2                     
  6467                           ;usart.c: 48:     TXREG1 = data;
  6468   0022E2  C038  FFAE         	movff	Write1USART@data,4014	;volatile
  6469   0022E6                     l600:
  6470   0022E6  A2AD               	btfss	173,1,c	;volatile
  6471   0022E8  EF78  F011         	goto	u1731
  6472   0022EC  EF7A  F011         	goto	u1730
  6473   0022F0                     u1731:
  6474   0022F0  EF73  F011         	goto	l600
  6475   0022F4                     u1730:
  6476   0022F4  0012               	return		;funcret
  6477   0022F6                     __end_of_Write1USART:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _WriteSTLED316SMode *****************
  6481 ;; Defined at:
  6482 ;;		line 184 in file "Display.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  msg             1    wreg     unsigned char 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  msg             1   14[COMRAM] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;Total ram usage:        3 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 3
  6503 ;; This function calls:
  6504 ;;		_STLED316s_SPI_SendData
  6505 ;; This function is called by:
  6506 ;;		_Homing_Again_Auto
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text30
  6511   0018A8                     __ptext30:
  6512                           	callstack 0
  6513   0018A8                     _WriteSTLED316SMode:
  6514                           	callstack 26
  6515                           
  6516                           ;incstack = 0
  6517                           ;WriteSTLED316SMode@msg stored from wreg
  6518   0018A8  6E40               	movwf	WriteSTLED316SMode@msg^0,c
  6519   0018AA                     
  6520                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  6521   0018AA  988B               	bcf	139,4,c	;volatile
  6522   0018AC                     
  6523                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  6524   0018AC  0E00               	movlw	0
  6525   0018AE  EC02  F00F         	call	_STLED316s_SPI_SendData
  6526   0018B2                     
  6527                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  6528   0018B2  888B               	bsf	139,4,c	;volatile
  6529   0018B4                     
  6530                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  6531   0018B4  988B               	bcf	139,4,c	;volatile
  6532                           
  6533                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  6534   0018B6  0E00               	movlw	0
  6535   0018B8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6536                           
  6537                           ;Display.c: 196:     switch (msg) {
  6538   0018BC  EFA0  F00C         	goto	l3291
  6539   0018C0                     l3273:
  6540                           
  6541                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  6542   0018C0  0E79               	movlw	121
  6543   0018C2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6544                           
  6545                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  6546   0018C6  0E3F               	movlw	63
  6547   0018C8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6548                           
  6549                           ;Display.c: 200:             break;
  6550   0018CC  EFCD  F00C         	goto	l488
  6551   0018D0                     l3275:
  6552                           
  6553                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  6554   0018D0  0E3F               	movlw	63
  6555   0018D2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6556                           
  6557                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  6558   0018D6  0E73               	movlw	115
  6559   0018D8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6560                           
  6561                           ;Display.c: 204:             break;
  6562   0018DC  EFCD  F00C         	goto	l488
  6563   0018E0                     l3277:
  6564                           
  6565                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  6566   0018E0  0E39               	movlw	57
  6567   0018E2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6568                           
  6569                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  6570   0018E6  0E77               	movlw	119
  6571   0018E8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6572                           
  6573                           ;Display.c: 208:             break;
  6574   0018EC  EFCD  F00C         	goto	l488
  6575   0018F0                     l3279:
  6576                           
  6577                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  6578   0018F0  0E00               	movlw	0
  6579   0018F2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6580                           
  6581                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  6582   0018F6  0E00               	movlw	0
  6583   0018F8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6584                           
  6585                           ;Display.c: 212:             break;
  6586   0018FC  EFCD  F00C         	goto	l488
  6587   001900                     l3281:
  6588                           
  6589                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  6590   001900  0E00               	movlw	0
  6591   001902  EC02  F00F         	call	_STLED316s_SPI_SendData
  6592                           
  6593                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  6594   001906  0E3F               	movlw	63
  6595   001908  EC02  F00F         	call	_STLED316s_SPI_SendData
  6596                           
  6597                           ;Display.c: 216:             break;
  6598   00190C  EFCD  F00C         	goto	l488
  6599   001910                     l3283:
  6600                           
  6601                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  6602   001910  0E79               	movlw	121
  6603   001912  EC02  F00F         	call	_STLED316s_SPI_SendData
  6604                           
  6605                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  6606   001916  0E06               	movlw	6
  6607   001918  EC02  F00F         	call	_STLED316s_SPI_SendData
  6608                           
  6609                           ;Display.c: 220:             break;
  6610   00191C  EFCD  F00C         	goto	l488
  6611   001920                     l3285:
  6612                           
  6613                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  6614   001920  0E77               	movlw	119
  6615   001922  EC02  F00F         	call	_STLED316s_SPI_SendData
  6616                           
  6617                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  6618   001926  0E3E               	movlw	62
  6619   001928  EC02  F00F         	call	_STLED316s_SPI_SendData
  6620                           
  6621                           ;Display.c: 224:             break;
  6622   00192C  EFCD  F00C         	goto	l488
  6623   001930                     l3287:
  6624                           
  6625                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  6626   001930  0E00               	movlw	0
  6627   001932  EC02  F00F         	call	_STLED316s_SPI_SendData
  6628                           
  6629                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  6630   001936  0E3E               	movlw	62
  6631   001938  EC02  F00F         	call	_STLED316s_SPI_SendData
  6632                           
  6633                           ;Display.c: 228:             break;
  6634   00193C  EFCD  F00C         	goto	l488
  6635   001940                     l3291:
  6636   001940  5040               	movf	WriteSTLED316SMode@msg^0,w,c
  6637   001942  6E3E               	movwf	??_WriteSTLED316SMode^0,c
  6638   001944  6A3F               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6639                           
  6640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6641                           ; Switch size 1, requested type "simple"
  6642                           ; Number of cases is 1, Range of values is 0 to 0
  6643                           ; switch strategies available:
  6644                           ; Name         Instructions Cycles
  6645                           ; simple_byte            4     3 (average)
  6646                           ;	Chosen strategy is simple_byte
  6647   001946  503F               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6648   001948  0A00               	xorlw	0	; case 0
  6649   00194A  B4D8               	btfsc	status,2,c
  6650   00194C  EFAA  F00C         	goto	l4765
  6651   001950  EFCD  F00C         	goto	l488
  6652   001954                     l4765:
  6653                           
  6654                           ; Switch size 1, requested type "simple"
  6655                           ; Number of cases is 8, Range of values is 65 to 88
  6656                           ; switch strategies available:
  6657                           ; Name         Instructions Cycles
  6658                           ; simple_byte           25    13 (average)
  6659                           ;	Chosen strategy is simple_byte
  6660   001954  503E               	movf	??_WriteSTLED316SMode^0,w,c
  6661   001956  0A41               	xorlw	65	; case 65
  6662   001958  B4D8               	btfsc	status,2,c
  6663   00195A  EF90  F00C         	goto	l3285
  6664   00195E  0A02               	xorlw	2	; case 67
  6665   001960  B4D8               	btfsc	status,2,c
  6666   001962  EF70  F00C         	goto	l3277
  6667   001966  0A06               	xorlw	6	; case 69
  6668   001968  B4D8               	btfsc	status,2,c
  6669   00196A  EF60  F00C         	goto	l3273
  6670   00196E  0A02               	xorlw	2	; case 71
  6671   001970  B4D8               	btfsc	status,2,c
  6672   001972  EF80  F00C         	goto	l3281
  6673   001976  0A08               	xorlw	8	; case 79
  6674   001978  B4D8               	btfsc	status,2,c
  6675   00197A  EF68  F00C         	goto	l3275
  6676   00197E  0A1C               	xorlw	28	; case 83
  6677   001980  B4D8               	btfsc	status,2,c
  6678   001982  EF88  F00C         	goto	l3283
  6679   001986  0A05               	xorlw	5	; case 86
  6680   001988  B4D8               	btfsc	status,2,c
  6681   00198A  EF98  F00C         	goto	l3287
  6682   00198E  0A0E               	xorlw	14	; case 88
  6683   001990  B4D8               	btfsc	status,2,c
  6684   001992  EF78  F00C         	goto	l3279
  6685   001996  EFCD  F00C         	goto	l488
  6686   00199A                     l488:
  6687                           
  6688                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  6689   00199A  888B               	bsf	139,4,c	;volatile
  6690                           
  6691                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  6692   00199C  988B               	bcf	139,4,c	;volatile
  6693   00199E                     
  6694                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  6695   00199E  0E0D               	movlw	13
  6696   0019A0  EC02  F00F         	call	_STLED316s_SPI_SendData
  6697   0019A4                     
  6698                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  6699   0019A4  888B               	bsf	139,4,c	;volatile
  6700   0019A6  0012               	return		;funcret
  6701   0019A8                     __end_of_WriteSTLED316SMode:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _WriteSTLED316SErr *****************
  6705 ;; Defined at:
  6706 ;;		line 278 in file "Display.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  msg             1    wreg     unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  msg             1   14[COMRAM] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, status,2, status,0, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:        3 bytes
  6725 ;; Hardware stack levels used: 1
  6726 ;; Hardware stack levels required when called: 3
  6727 ;; This function calls:
  6728 ;;		_STLED316s_SPI_SendData
  6729 ;; This function is called by:
  6730 ;;		_MotorPosition_Init
  6731 ;;		_Homing_Again_Manual
  6732 ;;		_Homing_Again_Auto
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text31
  6737   0019A8                     __ptext31:
  6738                           	callstack 0
  6739   0019A8                     _WriteSTLED316SErr:
  6740                           	callstack 26
  6741                           
  6742                           ;incstack = 0
  6743                           ;WriteSTLED316SErr@msg stored from wreg
  6744   0019A8  6E40               	movwf	WriteSTLED316SErr@msg^0,c
  6745   0019AA                     
  6746                           ;Display.c: 279:     LATCbits.LATC4 = 0;
  6747   0019AA  988B               	bcf	139,4,c	;volatile
  6748   0019AC                     
  6749                           ;Display.c: 281:     STLED316s_SPI_SendData(0x00);
  6750   0019AC  0E00               	movlw	0
  6751   0019AE  EC02  F00F         	call	_STLED316s_SPI_SendData
  6752   0019B2                     
  6753                           ;Display.c: 284:     LATCbits.LATC4 = 1;
  6754   0019B2  888B               	bsf	139,4,c	;volatile
  6755   0019B4                     
  6756                           ;Display.c: 286:     LATCbits.LATC4 = 0;
  6757   0019B4  988B               	bcf	139,4,c	;volatile
  6758                           
  6759                           ;Display.c: 288:     STLED316s_SPI_SendData(0x00);
  6760   0019B6  0E00               	movlw	0
  6761   0019B8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6762                           
  6763                           ;Display.c: 290:     switch (msg) {
  6764   0019BC  EF18  F00D         	goto	l3233
  6765   0019C0                     l3217:
  6766                           
  6767                           ;Display.c: 292:             STLED316s_SPI_SendData(0x79);
  6768   0019C0  0E79               	movlw	121
  6769   0019C2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6770                           
  6771                           ;Display.c: 293:             STLED316s_SPI_SendData(0x77);
  6772   0019C6  0E77               	movlw	119
  6773   0019C8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6774                           
  6775                           ;Display.c: 294:             break;
  6776   0019CC  EF41  F00D         	goto	l507
  6777   0019D0                     l3219:
  6778                           
  6779                           ;Display.c: 296:             STLED316s_SPI_SendData(0x79);
  6780   0019D0  0E79               	movlw	121
  6781   0019D2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6782                           
  6783                           ;Display.c: 297:             STLED316s_SPI_SendData(0x3F);
  6784   0019D6  0E3F               	movlw	63
  6785   0019D8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6786                           
  6787                           ;Display.c: 298:             break;
  6788   0019DC  EF41  F00D         	goto	l507
  6789   0019E0                     l3221:
  6790                           
  6791                           ;Display.c: 300:             STLED316s_SPI_SendData(0x79);
  6792   0019E0  0E79               	movlw	121
  6793   0019E2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6794                           
  6795                           ;Display.c: 301:             STLED316s_SPI_SendData(0x06);
  6796   0019E6  0E06               	movlw	6
  6797   0019E8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6798                           
  6799                           ;Display.c: 302:             break;
  6800   0019EC  EF41  F00D         	goto	l507
  6801   0019F0                     l3223:
  6802                           
  6803                           ;Display.c: 304:             STLED316s_SPI_SendData(0x79);
  6804   0019F0  0E79               	movlw	121
  6805   0019F2  EC02  F00F         	call	_STLED316s_SPI_SendData
  6806                           
  6807                           ;Display.c: 305:             STLED316s_SPI_SendData(0x5B);
  6808   0019F6  0E5B               	movlw	91
  6809   0019F8  EC02  F00F         	call	_STLED316s_SPI_SendData
  6810                           
  6811                           ;Display.c: 306:             break;
  6812   0019FC  EF41  F00D         	goto	l507
  6813   001A00                     l3225:
  6814                           
  6815                           ;Display.c: 308:             STLED316s_SPI_SendData(0x00);
  6816   001A00  0E00               	movlw	0
  6817   001A02  EC02  F00F         	call	_STLED316s_SPI_SendData
  6818                           
  6819                           ;Display.c: 309:             STLED316s_SPI_SendData(0x3F);
  6820   001A06  0E3F               	movlw	63
  6821   001A08  EC02  F00F         	call	_STLED316s_SPI_SendData
  6822                           
  6823                           ;Display.c: 310:             break;
  6824   001A0C  EF41  F00D         	goto	l507
  6825   001A10                     l3227:
  6826                           
  6827                           ;Display.c: 312:             STLED316s_SPI_SendData(0x79);
  6828   001A10  0E79               	movlw	121
  6829   001A12  EC02  F00F         	call	_STLED316s_SPI_SendData
  6830                           
  6831                           ;Display.c: 313:             STLED316s_SPI_SendData(0x06);
  6832   001A16  0E06               	movlw	6
  6833   001A18  EC02  F00F         	call	_STLED316s_SPI_SendData
  6834                           
  6835                           ;Display.c: 314:             break;
  6836   001A1C  EF41  F00D         	goto	l507
  6837   001A20                     l3229:
  6838                           
  6839                           ;Display.c: 316:             STLED316s_SPI_SendData(0x77);
  6840   001A20  0E77               	movlw	119
  6841   001A22  EC02  F00F         	call	_STLED316s_SPI_SendData
  6842                           
  6843                           ;Display.c: 317:             STLED316s_SPI_SendData(0x3E);
  6844   001A26  0E3E               	movlw	62
  6845   001A28  EC02  F00F         	call	_STLED316s_SPI_SendData
  6846                           
  6847                           ;Display.c: 318:             break;
  6848   001A2C  EF41  F00D         	goto	l507
  6849   001A30                     l3233:
  6850   001A30  5040               	movf	WriteSTLED316SErr@msg^0,w,c
  6851   001A32  6E3E               	movwf	??_WriteSTLED316SErr^0,c
  6852   001A34  6A3F               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6853                           
  6854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6855                           ; Switch size 1, requested type "simple"
  6856                           ; Number of cases is 1, Range of values is 0 to 0
  6857                           ; switch strategies available:
  6858                           ; Name         Instructions Cycles
  6859                           ; simple_byte            4     3 (average)
  6860                           ;	Chosen strategy is simple_byte
  6861   001A36  503F               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6862   001A38  0A00               	xorlw	0	; case 0
  6863   001A3A  B4D8               	btfsc	status,2,c
  6864   001A3C  EF22  F00D         	goto	l4767
  6865   001A40  EF41  F00D         	goto	l507
  6866   001A44                     l4767:
  6867                           
  6868                           ; Switch size 1, requested type "simple"
  6869                           ; Number of cases is 7, Range of values is 48 to 83
  6870                           ; switch strategies available:
  6871                           ; Name         Instructions Cycles
  6872                           ; simple_byte           22    12 (average)
  6873                           ;	Chosen strategy is simple_byte
  6874   001A44  503E               	movf	??_WriteSTLED316SErr^0,w,c
  6875   001A46  0A30               	xorlw	48	; case 48
  6876   001A48  B4D8               	btfsc	status,2,c
  6877   001A4A  EFE8  F00C         	goto	l3219
  6878   001A4E  0A01               	xorlw	1	; case 49
  6879   001A50  B4D8               	btfsc	status,2,c
  6880   001A52  EFF0  F00C         	goto	l3221
  6881   001A56  0A03               	xorlw	3	; case 50
  6882   001A58  B4D8               	btfsc	status,2,c
  6883   001A5A  EFF8  F00C         	goto	l3223
  6884   001A5E  0A73               	xorlw	115	; case 65
  6885   001A60  B4D8               	btfsc	status,2,c
  6886   001A62  EF10  F00D         	goto	l3229
  6887   001A66  0A04               	xorlw	4	; case 69
  6888   001A68  B4D8               	btfsc	status,2,c
  6889   001A6A  EFE0  F00C         	goto	l3217
  6890   001A6E  0A02               	xorlw	2	; case 71
  6891   001A70  B4D8               	btfsc	status,2,c
  6892   001A72  EF00  F00D         	goto	l3225
  6893   001A76  0A14               	xorlw	20	; case 83
  6894   001A78  B4D8               	btfsc	status,2,c
  6895   001A7A  EF08  F00D         	goto	l3227
  6896   001A7E  EF41  F00D         	goto	l507
  6897   001A82                     l507:
  6898                           
  6899                           ;Display.c: 323:     LATCbits.LATC4 = 1;
  6900   001A82  888B               	bsf	139,4,c	;volatile
  6901                           
  6902                           ;Display.c: 325:     LATCbits.LATC4 = 0;
  6903   001A84  988B               	bcf	139,4,c	;volatile
  6904   001A86                     
  6905                           ;Display.c: 327:     STLED316s_SPI_SendData(0x0D);
  6906   001A86  0E0D               	movlw	13
  6907   001A88  EC02  F00F         	call	_STLED316s_SPI_SendData
  6908   001A8C                     
  6909                           ;Display.c: 329:     LATCbits.LATC4 = 1;
  6910   001A8C  888B               	bsf	139,4,c	;volatile
  6911   001A8E  0012               	return		;funcret
  6912   001A90                     __end_of_WriteSTLED316SErr:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _STLED316s_SPI_SendData *****************
  6916 ;; Defined at:
  6917 ;;		line 88 in file "Display.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  Data            1    wreg     unsigned char 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  Data            1    8[COMRAM] unsigned char 
  6922 ;;  t               1   11[COMRAM] unsigned char 
  6923 ;;  i               1   10[COMRAM] unsigned char 
  6924 ;;  temp            1    9[COMRAM] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;Total ram usage:        6 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 2
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_InitSTLED316
  6945 ;;		_WriteSTLED316SData
  6946 ;;		_WriteSTLED316SMode
  6947 ;;		_WriteSTLED316SVibMode
  6948 ;;		_WriteSTLED316SErr
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text32
  6953   001E04                     __ptext32:
  6954                           	callstack 0
  6955   001E04                     _STLED316s_SPI_SendData:
  6956                           	callstack 27
  6957                           
  6958                           ;incstack = 0
  6959                           ;STLED316s_SPI_SendData@Data stored from wreg
  6960   001E04  6E3A               	movwf	STLED316s_SPI_SendData@Data^0,c
  6961   001E06                     
  6962                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  6963   001E06  0E00               	movlw	0
  6964   001E08  6E3C               	movwf	STLED316s_SPI_SendData@i^0,c
  6965   001E0A                     l453:
  6966                           
  6967                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  6968   001E0A  968B               	bcf	139,3,c	;volatile
  6969   001E0C                     
  6970                           ;Display.c: 93:         temp = Data & (0x1 << i);
  6971   001E0C  C03C  F038         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6972   001E10  0E01               	movlw	1
  6973   001E12  6E39               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6974   001E14  2A38               	incf	??_STLED316s_SPI_SendData^0,f,c
  6975   001E16  EF0F  F00F         	goto	u1764
  6976   001E1A                     u1765:
  6977   001E1A  90D8               	bcf	status,0,c
  6978   001E1C  3639               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6979   001E1E                     u1764:
  6980   001E1E  2E38               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6981   001E20  EF0D  F00F         	goto	u1765
  6982   001E24  5039               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6983   001E26  143A               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6984   001E28  6E3B               	movwf	STLED316s_SPI_SendData@temp^0,c
  6985   001E2A                     
  6986                           ;Display.c: 94:         if (temp)
  6987   001E2A  503B               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6988   001E2C  B4D8               	btfsc	status,2,c
  6989   001E2E  EF1B  F00F         	goto	u1771
  6990   001E32  EF1D  F00F         	goto	u1770
  6991   001E36                     u1771:
  6992   001E36  EF20  F00F         	goto	l455
  6993   001E3A                     u1770:
  6994   001E3A                     
  6995                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  6996   001E3A  8A8B               	bsf	139,5,c	;volatile
  6997   001E3C  EF21  F00F         	goto	l2943
  6998   001E40                     l455:
  6999                           
  7000                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  7001   001E40  9A8B               	bcf	139,5,c	;volatile
  7002   001E42                     l2943:
  7003                           
  7004                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  7005   001E42  0E00               	movlw	0
  7006   001E44  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  7007   001E46                     l2949:
  7008   001E46  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  7009   001E48  0E04               	movlw	4
  7010   001E4A  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7011   001E4C  EF2A  F00F         	goto	u1781
  7012   001E50  EF2C  F00F         	goto	u1780
  7013   001E54                     u1781:
  7014   001E54  EF23  F00F         	goto	l2949
  7015   001E58                     u1780:
  7016   001E58                     
  7017                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  7018   001E58  868B               	bsf	139,3,c	;volatile
  7019   001E5A                     
  7020                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  7021   001E5A  0E00               	movlw	0
  7022   001E5C  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  7023   001E5E                     l2959:
  7024   001E5E  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  7025   001E60  0E04               	movlw	4
  7026   001E62  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7027   001E64  EF36  F00F         	goto	u1791
  7028   001E68  EF38  F00F         	goto	u1790
  7029   001E6C                     u1791:
  7030   001E6C  EF2F  F00F         	goto	l2959
  7031   001E70                     u1790:
  7032   001E70                     
  7033                           ;Display.c: 101:     }
  7034   001E70  2A3C               	incf	STLED316s_SPI_SendData@i^0,f,c
  7035   001E72  0E07               	movlw	7
  7036   001E74  643C               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  7037   001E76  EF3F  F00F         	goto	u1801
  7038   001E7A  EF41  F00F         	goto	u1800
  7039   001E7E                     u1801:
  7040   001E7E  EF05  F00F         	goto	l453
  7041   001E82                     u1800:
  7042   001E82  0012               	return		;funcret
  7043   001E84                     __end_of_STLED316s_SPI_SendData:
  7044                           	callstack 0
  7045                           
  7046 ;; *************** function _Read_IR *****************
  7047 ;; Defined at:
  7048 ;;		line 846 in file "main.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2    6[COMRAM] unsigned int 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;Total ram usage:        2 bytes
  7067 ;; Hardware stack levels used: 1
  7068 ;; Hardware stack levels required when called: 2
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_MotorPosition_Init
  7073 ;;		_Homing_Again_Manual
  7074 ;;		_Homing_Again_Auto
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text33
  7079   00228E                     __ptext33:
  7080                           	callstack 0
  7081   00228E                     _Read_IR:
  7082                           	callstack 27
  7083   00228E                     
  7084                           ;main.c: 848:     if (PORTAbits.RA1 == 1)
  7085   00228E  A280               	btfss	128,1,c	;volatile
  7086   002290  EF4C  F011         	goto	u2021
  7087   002294  EF4E  F011         	goto	u2020
  7088   002298                     u2021:
  7089   002298  EF54  F011         	goto	l3201
  7090   00229C                     u2020:
  7091   00229C                     
  7092                           ;main.c: 849:     {;main.c: 850:         return 0;
  7093   00229C  0E00               	movlw	0
  7094   00229E  6E39               	movwf	(?_Read_IR+1)^0,c
  7095   0022A0  0E00               	movlw	0
  7096   0022A2  6E38               	movwf	?_Read_IR^0,c
  7097   0022A4  EF58  F011         	goto	l335
  7098   0022A8                     l3201:
  7099                           
  7100                           ;main.c: 852:     {;main.c: 853:         return 1;
  7101   0022A8  0E00               	movlw	0
  7102   0022AA  6E39               	movwf	(?_Read_IR+1)^0,c
  7103   0022AC  0E01               	movlw	1
  7104   0022AE  6E38               	movwf	?_Read_IR^0,c
  7105   0022B0                     l335:
  7106   0022B0  0012               	return		;funcret
  7107   0022B2                     __end_of_Read_IR:
  7108                           	callstack 0
  7109                           
  7110 ;; *************** function _MotorON *****************
  7111 ;; Defined at:
  7112 ;;		line 40 in file "MotorDriver.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;Total ram usage:        0 bytes
  7131 ;; Hardware stack levels used: 1
  7132 ;; Hardware stack levels required when called: 3
  7133 ;; This function calls:
  7134 ;;		_Set_RG3
  7135 ;; This function is called by:
  7136 ;;		_MotorPosition_Init
  7137 ;;		_Homing_Again_Manual
  7138 ;;		_Homing_Again_Auto
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text34
  7143   002346                     __ptext34:
  7144                           	callstack 0
  7145   002346                     _MotorON:
  7146                           	callstack 26
  7147   002346  868F               	bsf	143,3,c	;volatile
  7148   002348  888F               	bsf	143,4,c	;volatile
  7149   00234A  ECB9  F011         	call	_Set_RG3	;wreg free
  7150   00234E  0012               	return		;funcret
  7151   002350                     __end_of_MotorON:
  7152                           	callstack 0
  7153                           
  7154 ;; *************** function _Set_RG3 *****************
  7155 ;; Defined at:
  7156 ;;		line 28 in file "MotorDriver.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used: 1
  7176 ;; Hardware stack levels required when called: 2
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_MotorON
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text35
  7185   002372                     __ptext35:
  7186                           	callstack 0
  7187   002372                     _Set_RG3:
  7188                           	callstack 26
  7189   002372  0E08               	movlw	8
  7190   002374  6E73               	movwf	115,c	;volatile
  7191   002376  8476               	bsf	118,2,c	;volatile
  7192   002378  0012               	return		;funcret
  7193   00237A                     __end_of_Set_RG3:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _MotorBREAK *****************
  7197 ;; Defined at:
  7198 ;;		line 47 in file "MotorDriver.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      void 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;Total ram usage:        0 bytes
  7217 ;; Hardware stack levels used: 1
  7218 ;; Hardware stack levels required when called: 3
  7219 ;; This function calls:
  7220 ;;		_Clr_RG3
  7221 ;; This function is called by:
  7222 ;;		_MotorPosition_Init
  7223 ;;		_Homing_Again_Manual
  7224 ;;		_Homing_Again_Auto
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text36
  7229   002350                     __ptext36:
  7230                           	callstack 0
  7231   002350                     _MotorBREAK:
  7232                           	callstack 26
  7233   002350  ECBD  F011         	call	_Clr_RG3	;wreg free
  7234   002354  868F               	bsf	143,3,c	;volatile
  7235   002356  888F               	bsf	143,4,c	;volatile
  7236   002358  0012               	return		;funcret
  7237   00235A                     __end_of_MotorBREAK:
  7238                           	callstack 0
  7239                           
  7240 ;; *************** function _Clr_RG3 *****************
  7241 ;; Defined at:
  7242 ;;		line 35 in file "MotorDriver.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used: 1
  7262 ;; Hardware stack levels required when called: 2
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_MotorBREAK
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text37
  7271   00237A                     __ptext37:
  7272                           	callstack 0
  7273   00237A                     _Clr_RG3:
  7274                           	callstack 26
  7275   00237A  0E00               	movlw	0
  7276   00237C  6E73               	movwf	115,c	;volatile
  7277   00237E  9476               	bcf	118,2,c	;volatile
  7278   002380  0012               	return		;funcret
  7279   002382                     __end_of_Clr_RG3:
  7280                           	callstack 0
  7281                           
  7282 ;; *************** function _AD_capture_BattVoltage *****************
  7283 ;; Defined at:
  7284 ;;		line 1198 in file "main.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;		None
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;		None
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg, status,2, status,0, cstack
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;Total ram usage:        2 bytes
  7303 ;; Hardware stack levels used: 1
  7304 ;; Hardware stack levels required when called: 3
  7305 ;; This function calls:
  7306 ;;		_delay_1ms
  7307 ;; This function is called by:
  7308 ;;		_main
  7309 ;;		_Homing_Again_Manual
  7310 ;;		_Homing_Again_Auto
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text38
  7315   002096                     __ptext38:
  7316                           	callstack 0
  7317   002096                     _AD_capture_BattVoltage:
  7318                           	callstack 26
  7319   002096                     
  7320                           ;main.c: 1200:     ADCON0bits.CHS0 = 0;
  7321   002096  94C2               	bcf	194,2,c	;volatile
  7322                           
  7323                           ;main.c: 1201:     ADCON0bits.CHS1 = 0;
  7324   002098  96C2               	bcf	194,3,c	;volatile
  7325                           
  7326                           ;main.c: 1202:     ADCON0bits.CHS2 = 0;
  7327   00209A  98C2               	bcf	194,4,c	;volatile
  7328                           
  7329                           ;main.c: 1203:     ADCON0bits.CHS3 = 0;
  7330   00209C  9AC2               	bcf	194,5,c	;volatile
  7331                           
  7332                           ;main.c: 1205:     ADCON0bits.ADON = 1;
  7333   00209E  80C2               	bsf	194,0,c	;volatile
  7334   0020A0                     
  7335                           ;main.c: 1206:     delay_1ms(5);
  7336   0020A0  0E00               	movlw	0
  7337   0020A2  6E39               	movwf	(delay_1ms@time+1)^0,c
  7338   0020A4  0E05               	movlw	5
  7339   0020A6  6E38               	movwf	delay_1ms@time^0,c
  7340   0020A8  ECF8  F010         	call	_delay_1ms	;wreg free
  7341   0020AC                     
  7342                           ;main.c: 1207:     ADCON0bits.GO = 1;
  7343   0020AC  82C2               	bsf	194,1,c	;volatile
  7344   0020AE                     l431:
  7345                           
  7346                           ;main.c: 1209:     while (ADCON0bits.GO == 1) {
  7347   0020AE  B2C2               	btfsc	194,1,c	;volatile
  7348   0020B0  EF5C  F010         	goto	u2011
  7349   0020B4  EF5E  F010         	goto	u2010
  7350   0020B8                     u2011:
  7351   0020B8  EF57  F010         	goto	l431
  7352   0020BC                     u2010:
  7353   0020BC                     
  7354                           ;main.c: 1213:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  7355   0020BC  50C3               	movf	195,w,c	;volatile
  7356   0020BE  CFC4 F03B          	movff	4036,??_AD_capture_BattVoltage	;volatile
  7357   0020C2  6A3C               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  7358   0020C4  C03B  F03C         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  7359   0020C8  6A3B               	clrf	??_AD_capture_BattVoltage^0,c
  7360   0020CA  103B               	iorwf	??_AD_capture_BattVoltage^0,w,c
  7361   0020CC  6E09               	movwf	_VOLTAGE^0,c
  7362   0020CE  503C               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  7363   0020D0  6E0A               	movwf	(_VOLTAGE+1)^0,c
  7364   0020D2  0012               	return		;funcret
  7365   0020D4                     __end_of_AD_capture_BattVoltage:
  7366                           	callstack 0
  7367                           
  7368 ;; *************** function _delay_1ms *****************
  7369 ;; Defined at:
  7370 ;;		line 836 in file "main.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  time            2    6[COMRAM] unsigned int 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;		None
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      void 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;Total ram usage:        3 bytes
  7389 ;; Hardware stack levels used: 1
  7390 ;; Hardware stack levels required when called: 2
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_MotorPosition_Init
  7395 ;;		_Homing_Again_Manual
  7396 ;;		_Homing_Again_Auto
  7397 ;;		_AD_capture_BattVoltage
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text39
  7402   0021F0                     __ptext39:
  7403                           	callstack 0
  7404   0021F0                     _delay_1ms:
  7405                           	callstack 27
  7406   0021F0                     
  7407                           ;main.c: 837:     while (time > 0) {
  7408   0021F0  EF04  F011         	goto	l328
  7409   0021F4                     l2927:
  7410                           
  7411                           ;main.c: 838:         _delay((unsigned long)((1)*(8000000/4000.0)));
  7412   0021F4  0E03               	movlw	3
  7413   0021F6  6E3A               	movwf	??_delay_1ms^0,c
  7414   0021F8  0E98               	movlw	152
  7415   0021FA                     u3677:
  7416   0021FA  2EE8               	decfsz	wreg,f,c
  7417   0021FC  D7FE               	bra	u3677
  7418   0021FE  2E3A               	decfsz	??_delay_1ms^0,f,c
  7419   002200  D7FC               	bra	u3677
  7420   002202                     
  7421                           ;main.c: 839:         time--;
  7422   002202  0638               	decf	delay_1ms@time^0,f,c
  7423   002204  A0D8               	btfss	status,0,c
  7424   002206  0639               	decf	(delay_1ms@time+1)^0,f,c
  7425   002208                     l328:
  7426                           
  7427                           ;main.c: 837:     while (time > 0) {
  7428   002208  5038               	movf	delay_1ms@time^0,w,c
  7429   00220A  1039               	iorwf	(delay_1ms@time+1)^0,w,c
  7430   00220C  A4D8               	btfss	status,2,c
  7431   00220E  EF0B  F011         	goto	u1751
  7432   002212  EF0D  F011         	goto	u1750
  7433   002216                     u1751:
  7434   002216  EFFA  F010         	goto	l2927
  7435   00221A                     u1750:
  7436   00221A  0012               	return		;funcret
  7437   00221C                     __end_of_delay_1ms:
  7438                           	callstack 0
  7439                           
  7440 ;; *************** function _high_isr *****************
  7441 ;; Defined at:
  7442 ;;		line 720 in file "main.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;		None
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  i               1    5[COMRAM] unsigned char 
  7447 ;;  c               1    4[COMRAM] unsigned char 
  7448 ;;  Temp            1    3[COMRAM] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;Total ram usage:        5 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 1
  7465 ;; This function calls:
  7466 ;;		_Low_Power_Indicator
  7467 ;;		_Read1USART
  7468 ;;		i2_Write1USART
  7469 ;; This function is called by:
  7470 ;;		Interrupt level 2
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	intcode
  7475   000008                     __pintcode:
  7476                           	callstack 0
  7477   000008                     _high_isr:
  7478                           	callstack 25
  7479                           
  7480                           ;incstack = 0
  7481   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7482   00000A  CFD9 F033          	movff	fsr2l,??_high_isr
  7483   00000E  CFDA F034          	movff	fsr2h,??_high_isr+1
  7484   000012                     
  7485                           ;main.c: 721:     unsigned char c, i;;main.c: 722:     unsigned char Temp;;main.c: 724: 
      +                              if ((PIR1bits.RC1IF))
  7486   000012  AA9E               	btfss	158,5,c	;volatile
  7487   000014  EF0E  F000         	goto	i2u316_41
  7488   000018  EF10  F000         	goto	i2u316_40
  7489   00001C                     i2u316_41:
  7490   00001C  EFE3  F000         	goto	i2l291
  7491   000020                     i2u316_40:
  7492   000020                     
  7493                           ;main.c: 725:     {;main.c: 727:         c = Read1USART();
  7494   000020  EC34  F011         	call	_Read1USART	;wreg free
  7495   000024  6E36               	movwf	high_isr@c^0,c
  7496   000026                     
  7497                           ;main.c: 729:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  7498   000026  0EA5               	movlw	165
  7499   000028  1836               	xorwf	high_isr@c^0,w,c
  7500   00002A  A4D8               	btfss	status,2,c
  7501   00002C  EF1A  F000         	goto	i2u317_41
  7502   000030  EF1C  F000         	goto	i2u317_40
  7503   000034                     i2u317_41:
  7504   000034  EF3E  F000         	goto	i2l4343
  7505   000038                     i2u317_40:
  7506   000038  5031               	movf	_Serial_Flag^0,w,c
  7507   00003A  B4D8               	btfsc	status,2,c
  7508   00003C  EF22  F000         	goto	i2u318_41
  7509   000040  EF24  F000         	goto	i2u318_40
  7510   000044                     i2u318_41:
  7511   000044  EF2C  F000         	goto	i2l4337
  7512   000048                     i2u318_40:
  7513   000048  042D               	decf	_Busy^0,w,c
  7514   00004A  A4D8               	btfss	status,2,c
  7515   00004C  EF2A  F000         	goto	i2u319_41
  7516   000050  EF2C  F000         	goto	i2u319_40
  7517   000054                     i2u319_41:
  7518   000054  EF3E  F000         	goto	i2l4343
  7519   000058                     i2u319_40:
  7520   000058                     i2l4337:
  7521                           
  7522                           ;main.c: 730:             Serial_GData = 1;
  7523   000058  0E01               	movlw	1
  7524   00005A  6E30               	movwf	_Serial_GData^0,c
  7525                           
  7526                           ;main.c: 731:             Serial_Count = 0;
  7527   00005C  0E00               	movlw	0
  7528   00005E  6E24               	movwf	(_Serial_Count+1)^0,c
  7529   000060  0E00               	movlw	0
  7530   000062  6E23               	movwf	_Serial_Count^0,c
  7531   000064                     
  7532                           ;main.c: 732:             Serial_Buffer[Serial_Count] = c;
  7533   000064  0E80               	movlw	low _Serial_Buffer
  7534   000066  2423               	addwf	_Serial_Count^0,w,c
  7535   000068  6ED9               	movwf	fsr2l,c
  7536   00006A  0E00               	movlw	high _Serial_Buffer
  7537   00006C  2024               	addwfc	(_Serial_Count+1)^0,w,c
  7538   00006E  6EDA               	movwf	fsr2h,c
  7539   000070  C036  FFDF         	movff	high_isr@c,indf2
  7540   000074                     i2l4341:
  7541                           
  7542                           ;main.c: 733:             Serial_Count++;
  7543   000074  4A23               	infsnz	_Serial_Count^0,f,c
  7544   000076  2A24               	incf	(_Serial_Count+1)^0,f,c
  7545                           
  7546                           ;main.c: 734:         } else if (Serial_GData == 1) {
  7547   000078  EFED  F000         	goto	i2l4409
  7548   00007C                     i2l4343:
  7549   00007C  0430               	decf	_Serial_GData^0,w,c
  7550   00007E  A4D8               	btfss	status,2,c
  7551   000080  EF44  F000         	goto	i2u320_41
  7552   000084  EF46  F000         	goto	i2u320_40
  7553   000088                     i2u320_41:
  7554   000088  EFED  F000         	goto	i2l4409
  7555   00008C                     i2u320_40:
  7556   00008C                     
  7557                           ;main.c: 735:             Serial_Buffer[Serial_Count] = c;
  7558   00008C  0E80               	movlw	low _Serial_Buffer
  7559   00008E  2423               	addwf	_Serial_Count^0,w,c
  7560   000090  6ED9               	movwf	fsr2l,c
  7561   000092  0E00               	movlw	high _Serial_Buffer
  7562   000094  2024               	addwfc	(_Serial_Count+1)^0,w,c
  7563   000096  6EDA               	movwf	fsr2h,c
  7564   000098  C036  FFDF         	movff	high_isr@c,indf2
  7565   00009C                     
  7566                           ;main.c: 737:             if (Serial_Count < 5) {
  7567   00009C  5024               	movf	(_Serial_Count+1)^0,w,c
  7568   00009E  E107               	bnz	i2u321_41
  7569   0000A0  0E05               	movlw	5
  7570   0000A2  5C23               	subwf	_Serial_Count^0,w,c
  7571   0000A4  B0D8               	btfsc	status,0,c
  7572   0000A6  EF57  F000         	goto	i2u321_41
  7573   0000AA  EF59  F000         	goto	i2u321_40
  7574   0000AE                     i2u321_41:
  7575   0000AE  EFDF  F000         	goto	i2l4403
  7576   0000B2                     i2u321_40:
  7577   0000B2                     
  7578                           ;main.c: 738:                 if (c == 0x5A) {
  7579   0000B2  0E5A               	movlw	90
  7580   0000B4  1836               	xorwf	high_isr@c^0,w,c
  7581   0000B6  A4D8               	btfss	status,2,c
  7582   0000B8  EF60  F000         	goto	i2u322_41
  7583   0000BC  EF62  F000         	goto	i2u322_40
  7584   0000C0                     i2u322_41:
  7585   0000C0  EF3A  F000         	goto	i2l4341
  7586   0000C4                     i2u322_40:
  7587   0000C4                     
  7588                           ;main.c: 739:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  7589   0000C4  0100               	movlb	0	; () banked
  7590   0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  7591   0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  7592   0000CA  6E35               	movwf	high_isr@Temp^0,c
  7593                           
  7594                           ;main.c: 741:                     if (Temp == Serial_Buffer[3]) {
  7595   0000CC  5035               	movf	high_isr@Temp^0,w,c
  7596   0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  7597   0000D0  A4D8               	btfss	status,2,c
  7598   0000D2  EF6D  F000         	goto	i2u323_41
  7599   0000D6  EF6F  F000         	goto	i2u323_40
  7600   0000DA                     i2u323_41:
  7601   0000DA  EFB2  F000         	goto	i2l4383
  7602   0000DE                     i2u323_40:
  7603   0000DE                     
  7604                           ; BSR set to: 0
  7605                           ;main.c: 742:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  7606   0000DE  502D               	movf	_Busy^0,w,c
  7607   0000E0  B4D8               	btfsc	status,2,c
  7608   0000E2  EF75  F000         	goto	i2u324_41
  7609   0000E6  EF77  F000         	goto	i2u324_40
  7610   0000EA                     i2u324_41:
  7611   0000EA  EF80  F000         	goto	i2l302
  7612   0000EE                     i2u324_40:
  7613   0000EE                     
  7614                           ; BSR set to: 0
  7615   0000EE  0EF5               	movlw	245
  7616   0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7617   0000F2  A4D8               	btfss	status,2,c
  7618   0000F4  EF7E  F000         	goto	i2u325_41
  7619   0000F8  EF80  F000         	goto	i2u325_40
  7620   0000FC                     i2u325_41:
  7621   0000FC  EF98  F000         	goto	i2l300
  7622   000100                     i2u325_40:
  7623   000100                     i2l302:
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;main.c: 743:                             INTCONbits.GIE = 0;
  7627   000100  9EF2               	bcf	242,7,c	;volatile
  7628   000102                     
  7629                           ; BSR set to: 0
  7630                           ;main.c: 744:                             for (i = 0; i < 5; i++) {
  7631   000102  0E00               	movlw	0
  7632   000104  6E37               	movwf	high_isr@i^0,c
  7633   000106                     i2l4363:
  7634                           
  7635                           ;main.c: 745:                                 Write1USART(Serial_Buffer[i]);
  7636   000106  0E80               	movlw	low _Serial_Buffer
  7637   000108  2437               	addwf	high_isr@i^0,w,c
  7638   00010A  6ED9               	movwf	fsr2l,c
  7639   00010C  6ADA               	clrf	fsr2h,c
  7640   00010E  0E00               	movlw	high _Serial_Buffer
  7641   000110  22DA               	addwfc	fsr2h,f,c
  7642   000112  50DF               	movf	indf2,w,c
  7643   000114  EC7B  F011         	call	i2_Write1USART
  7644   000118                     
  7645                           ;main.c: 746:                             }
  7646   000118  2A37               	incf	high_isr@i^0,f,c
  7647   00011A  0E04               	movlw	4
  7648   00011C  6437               	cpfsgt	high_isr@i^0,c
  7649   00011E  EF93  F000         	goto	i2u326_41
  7650   000122  EF95  F000         	goto	i2u326_40
  7651   000126                     i2u326_41:
  7652   000126  EF83  F000         	goto	i2l4363
  7653   00012A                     i2u326_40:
  7654   00012A                     
  7655                           ;main.c: 747:                             INTCONbits.GIE = 1;
  7656   00012A  8EF2               	bsf	242,7,c	;volatile
  7657                           
  7658                           ;main.c: 748:                         } else {
  7659   00012C  EFA8  F000         	goto	i2l4381
  7660   000130                     i2l300:
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;main.c: 749:                             INTCONbits.GIE = 0;
  7664   000130  9EF2               	bcf	242,7,c	;volatile
  7665   000132                     
  7666                           ; BSR set to: 0
  7667                           ;main.c: 750:                             for (i = 0; i < 5; i++) {
  7668   000132  0E00               	movlw	0
  7669   000134  6E37               	movwf	high_isr@i^0,c
  7670   000136                     i2l4375:
  7671                           
  7672                           ;main.c: 751:                                 Write1USART(0x16);
  7673   000136  0E16               	movlw	22
  7674   000138  EC7B  F011         	call	i2_Write1USART
  7675   00013C                     
  7676                           ;main.c: 752:                             }
  7677   00013C  2A37               	incf	high_isr@i^0,f,c
  7678   00013E  0E04               	movlw	4
  7679   000140  6437               	cpfsgt	high_isr@i^0,c
  7680   000142  EFA5  F000         	goto	i2u327_41
  7681   000146  EFA7  F000         	goto	i2u327_40
  7682   00014A                     i2u327_41:
  7683   00014A  EF9B  F000         	goto	i2l4375
  7684   00014E                     i2u327_40:
  7685   00014E                     
  7686                           ;main.c: 753:                             INTCONbits.GIE = 1;
  7687   00014E  8EF2               	bsf	242,7,c	;volatile
  7688   000150                     i2l4381:
  7689                           
  7690                           ;main.c: 756:                         Serial_Flag = 1;
  7691   000150  0E01               	movlw	1
  7692   000152  6E31               	movwf	_Serial_Flag^0,c
  7693                           
  7694                           ;main.c: 757:                         Serial_Count = 0;
  7695   000154  0E00               	movlw	0
  7696   000156  6E24               	movwf	(_Serial_Count+1)^0,c
  7697   000158  0E00               	movlw	0
  7698   00015A  6E23               	movwf	_Serial_Count^0,c
  7699                           
  7700                           ;main.c: 758:                         OpMode = AUTO_MODE;
  7701   00015C  0E02               	movlw	2
  7702   00015E  6E2A               	movwf	_OpMode^0,c	;volatile
  7703                           
  7704                           ;main.c: 760:                     } else {
  7705   000160  EFC8  F000         	goto	i2l4397
  7706   000164                     i2l4383:
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;main.c: 761:                         Serial_Flag = 0;
  7710   000164  0E00               	movlw	0
  7711   000166  6E31               	movwf	_Serial_Flag^0,c
  7712                           
  7713                           ;main.c: 762:                         Serial_Count = 0;
  7714   000168  0E00               	movlw	0
  7715   00016A  6E24               	movwf	(_Serial_Count+1)^0,c
  7716   00016C  0E00               	movlw	0
  7717   00016E  6E23               	movwf	_Serial_Count^0,c
  7718   000170                     
  7719                           ; BSR set to: 0
  7720                           ;main.c: 764:                         INTCONbits.GIE = 0;
  7721   000170  9EF2               	bcf	242,7,c	;volatile
  7722                           
  7723                           ;main.c: 765:                         for (i = 0; i < 5; i++) {
  7724   000172  0E00               	movlw	0
  7725   000174  6E37               	movwf	high_isr@i^0,c
  7726   000176                     i2l4391:
  7727                           
  7728                           ;main.c: 766:                             Write1USART(0x15);
  7729   000176  0E15               	movlw	21
  7730   000178  EC7B  F011         	call	i2_Write1USART
  7731   00017C                     
  7732                           ;main.c: 767:                         }
  7733   00017C  2A37               	incf	high_isr@i^0,f,c
  7734   00017E  0E04               	movlw	4
  7735   000180  6437               	cpfsgt	high_isr@i^0,c
  7736   000182  EFC5  F000         	goto	i2u328_41
  7737   000186  EFC7  F000         	goto	i2u328_40
  7738   00018A                     i2u328_41:
  7739   00018A  EFBB  F000         	goto	i2l4391
  7740   00018E                     i2u328_40:
  7741   00018E                     
  7742                           ;main.c: 768:                         INTCONbits.GIE = 1;
  7743   00018E  8EF2               	bsf	242,7,c	;volatile
  7744   000190                     i2l4397:
  7745                           
  7746                           ;main.c: 771:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  7747   000190  0EF5               	movlw	245
  7748   000192  0100               	movlb	0	; () banked
  7749   000194  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7750   000196  A4D8               	btfss	status,2,c
  7751   000198  EFD0  F000         	goto	i2u329_41
  7752   00019C  EFD2  F000         	goto	i2u329_40
  7753   0001A0                     i2u329_41:
  7754   0001A0  EF3A  F000         	goto	i2l4341
  7755   0001A4                     i2u329_40:
  7756   0001A4                     
  7757                           ; BSR set to: 0
  7758   0001A4  0E02               	movlw	2
  7759   0001A6  182A               	xorwf	_OpMode^0,w,c	;volatile
  7760   0001A8  A4D8               	btfss	status,2,c
  7761   0001AA  EFD9  F000         	goto	i2u330_41
  7762   0001AE  EFDB  F000         	goto	i2u330_40
  7763   0001B2                     i2u330_41:
  7764   0001B2  EF3A  F000         	goto	i2l4341
  7765   0001B6                     i2u330_40:
  7766   0001B6                     
  7767                           ; BSR set to: 0
  7768                           ;main.c: 772:                         Stop = 1;
  7769   0001B6  0E01               	movlw	1
  7770   0001B8  6E2F               	movwf	_Stop^0,c
  7771   0001BA  EF3A  F000         	goto	i2l4341
  7772   0001BE                     i2l4403:
  7773                           
  7774                           ;main.c: 776:                 Serial_GData = 0;
  7775   0001BE  0E00               	movlw	0
  7776   0001C0  6E30               	movwf	_Serial_GData^0,c
  7777   0001C2  EF3A  F000         	goto	i2l4341
  7778   0001C6                     i2l291:
  7779                           
  7780                           ;main.c: 782:         if (RCSTA1bits.OERR == 1) {
  7781   0001C6  A2AC               	btfss	172,1,c	;volatile
  7782   0001C8  EFE8  F000         	goto	i2u331_41
  7783   0001CC  EFEA  F000         	goto	i2u331_40
  7784   0001D0                     i2u331_41:
  7785   0001D0  EFED  F000         	goto	i2l4409
  7786   0001D4                     i2u331_40:
  7787   0001D4                     
  7788                           ;main.c: 783:             RCSTA1bits.OERR = 0;
  7789   0001D4  92AC               	bcf	172,1,c	;volatile
  7790                           
  7791                           ;main.c: 784:             RCSTA1bits.CREN = 0;
  7792   0001D6  98AC               	bcf	172,4,c	;volatile
  7793                           
  7794                           ;main.c: 785:             RCSTA1bits.CREN = 1;
  7795   0001D8  88AC               	bsf	172,4,c	;volatile
  7796   0001DA                     i2l4409:
  7797                           
  7798                           ;main.c: 789:     if (TMR1IF_triggered == 1) {
  7799   0001DA  0425               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7800   0001DC  A4D8               	btfss	status,2,c
  7801   0001DE  EFF3  F000         	goto	i2u332_41
  7802   0001E2  EFF5  F000         	goto	i2u332_40
  7803   0001E6                     i2u332_41:
  7804   0001E6  EF3B  F001         	goto	i2l4427
  7805   0001EA                     i2u332_40:
  7806   0001EA                     
  7807                           ;main.c: 790:         if (errorcounter > 0) {
  7808   0001EA  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7809   0001EC  EF02  F001         	goto	i2u333_41
  7810   0001F0  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  7811   0001F2  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7812   0001F4  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7813   0001F6  E108               	bnz	i2u333_40
  7814   0001F8  0452               	decf	_errorcounter^0,w,c	;volatile
  7815   0001FA  A0D8               	btfss	status,0,c
  7816   0001FC  EF02  F001         	goto	i2u333_41
  7817   000200  EF04  F001         	goto	i2u333_40
  7818   000204                     i2u333_41:
  7819   000204  EF0E  F001         	goto	i2l4415
  7820   000208                     i2u333_40:
  7821   000208                     
  7822                           ;main.c: 791:             errorcounter--;
  7823   000208  0EFF               	movlw	255
  7824   00020A  2652               	addwf	_errorcounter^0,f,c	;volatile
  7825   00020C  0EFF               	movlw	255
  7826   00020E  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7827   000210  0EFF               	movlw	255
  7828   000212  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7829   000214  0EFF               	movlw	255
  7830   000216  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7831                           
  7832                           ;main.c: 792:         } else {
  7833   000218  EF16  F001         	goto	i2l4417
  7834   00021C                     i2l4415:
  7835                           
  7836                           ;main.c: 793:             errorcounter = 0;
  7837   00021C  0E00               	movlw	0
  7838   00021E  6E52               	movwf	_errorcounter^0,c	;volatile
  7839   000220  0E00               	movlw	0
  7840   000222  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  7841   000224  0E00               	movlw	0
  7842   000226  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  7843   000228  0E00               	movlw	0
  7844   00022A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  7845   00022C                     i2l4417:
  7846                           
  7847                           ;main.c: 796:         if (LowPowerCounter > 0) {
  7848   00022C  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7849   00022E  EF23  F001         	goto	i2u334_41
  7850   000232  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7851   000234  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7852   000236  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7853   000238  E108               	bnz	i2u334_40
  7854   00023A  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  7855   00023C  A0D8               	btfss	status,0,c
  7856   00023E  EF23  F001         	goto	i2u334_41
  7857   000242  EF25  F001         	goto	i2u334_40
  7858   000246                     i2u334_41:
  7859   000246  EF2F  F001         	goto	i2l4421
  7860   00024A                     i2u334_40:
  7861   00024A                     
  7862                           ;main.c: 797:             LowPowerCounter--;
  7863   00024A  0EFF               	movlw	255
  7864   00024C  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  7865   00024E  0EFF               	movlw	255
  7866   000250  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7867   000252  0EFF               	movlw	255
  7868   000254  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7869   000256  0EFF               	movlw	255
  7870   000258  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7871                           
  7872                           ;main.c: 798:         } else {
  7873   00025A  EF39  F001         	goto	i2l4425
  7874   00025E                     i2l4421:
  7875                           
  7876                           ;main.c: 799:             LowPowerCounter = 20;
  7877   00025E  0E14               	movlw	20
  7878   000260  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  7879   000262  0E00               	movlw	0
  7880   000264  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7881   000266  0E00               	movlw	0
  7882   000268  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7883   00026A  0E00               	movlw	0
  7884   00026C  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7885   00026E                     
  7886                           ;main.c: 800:             Low_Power_Indicator();
  7887   00026E  ECDD  F010         	call	_Low_Power_Indicator	;wreg free
  7888   000272                     i2l4425:
  7889                           
  7890                           ;main.c: 803:         TMR1IF_triggered = 0;
  7891   000272  0E00               	movlw	0
  7892   000274  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  7893   000276                     i2l4427:
  7894                           
  7895                           ;main.c: 806:     if (TMR1IF) {
  7896   000276  A09E               	btfss	3998,0,c	;volatile
  7897   000278  EF40  F001         	goto	i2u335_41
  7898   00027C  EF42  F001         	goto	i2u335_40
  7899   000280                     i2u335_41:
  7900   000280  EF49  F001         	goto	i2l4433
  7901   000284                     i2u335_40:
  7902   000284                     
  7903                           ;main.c: 807:         TMR1 = 0x9E57;
  7904   000284  0E9E               	movlw	158
  7905   000286  6ECF               	movwf	207,c	;volatile
  7906   000288  0E57               	movlw	87
  7907   00028A  6ECE               	movwf	206,c	;volatile
  7908   00028C                     
  7909                           ;main.c: 808:         TMR1IF = 0;
  7910   00028C  909E               	bcf	3998,0,c	;volatile
  7911                           
  7912                           ;main.c: 809:         TMR1IF_triggered = 1;
  7913   00028E  0E01               	movlw	1
  7914   000290  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  7915   000292                     i2l4433:
  7916                           
  7917                           ;main.c: 814:     if(INTCON3bits.INT2F == 1) {
  7918   000292  A2F0               	btfss	240,1,c	;volatile
  7919   000294  EF4E  F001         	goto	i2u336_41
  7920   000298  EF50  F001         	goto	i2u336_40
  7921   00029C                     i2u336_41:
  7922   00029C  EF7B  F001         	goto	i2l325
  7923   0002A0                     i2u336_40:
  7924   0002A0                     
  7925                           ;main.c: 816:       if (dispense == 0 && PORTBbits.RB4 != 0)
  7926   0002A0  5007               	movf	_dispense^0,w,c
  7927   0002A2  1008               	iorwf	(_dispense+1)^0,w,c
  7928   0002A4  A4D8               	btfss	status,2,c
  7929   0002A6  EF57  F001         	goto	i2u337_41
  7930   0002AA  EF59  F001         	goto	i2u337_40
  7931   0002AE                     i2u337_41:
  7932   0002AE  EF66  F001         	goto	i2l4441
  7933   0002B2                     i2u337_40:
  7934   0002B2  A881               	btfss	129,4,c	;volatile
  7935   0002B4  EF5E  F001         	goto	i2u338_41
  7936   0002B8  EF60  F001         	goto	i2u338_40
  7937   0002BC                     i2u338_41:
  7938   0002BC  EF66  F001         	goto	i2l4441
  7939   0002C0                     i2u338_40:
  7940   0002C0                     
  7941                           ;main.c: 817:       {;main.c: 819:         dispense = 1;
  7942   0002C0  0E00               	movlw	0
  7943   0002C2  6E08               	movwf	(_dispense+1)^0,c
  7944   0002C4  0E01               	movlw	1
  7945   0002C6  6E07               	movwf	_dispense^0,c
  7946                           
  7947                           ;main.c: 820:       }
  7948   0002C8  EF7A  F001         	goto	i2l4447
  7949   0002CC                     i2l4441:
  7950   0002CC  0407               	decf	_dispense^0,w,c
  7951   0002CE  1008               	iorwf	(_dispense+1)^0,w,c
  7952   0002D0  A4D8               	btfss	status,2,c
  7953   0002D2  EF6D  F001         	goto	i2u339_41
  7954   0002D6  EF6F  F001         	goto	i2u339_40
  7955   0002DA                     i2u339_41:
  7956   0002DA  EF7A  F001         	goto	i2l4447
  7957   0002DE                     i2u339_40:
  7958   0002DE  A881               	btfss	129,4,c	;volatile
  7959   0002E0  EF74  F001         	goto	i2u340_41
  7960   0002E4  EF76  F001         	goto	i2u340_40
  7961   0002E8                     i2u340_41:
  7962   0002E8  EF7A  F001         	goto	i2l4447
  7963   0002EC                     i2u340_40:
  7964   0002EC                     
  7965                           ;main.c: 823:       {;main.c: 825:         dispense = 0;
  7966   0002EC  0E00               	movlw	0
  7967   0002EE  6E08               	movwf	(_dispense+1)^0,c
  7968   0002F0  0E00               	movlw	0
  7969   0002F2  6E07               	movwf	_dispense^0,c
  7970   0002F4                     i2l4447:
  7971                           
  7972                           ;main.c: 828:       INTCON3bits.INT2F = 0;
  7973   0002F4  92F0               	bcf	240,1,c	;volatile
  7974   0002F6                     i2l325:
  7975   0002F6  C034  FFDA         	movff	??_high_isr+1,fsr2h
  7976   0002FA  C033  FFD9         	movff	??_high_isr,fsr2l
  7977   0002FE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7978   000300  0011               	retfie		f
  7979   000302                     __end_of_high_isr:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function i2_Write1USART *****************
  7983 ;; Defined at:
  7984 ;;		line 47 in file "usart.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  data            1    wreg     unsigned char 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  data            1    0[COMRAM] unsigned char 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;Total ram usage:        1 bytes
  8003 ;; Hardware stack levels used: 1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_high_isr
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text41
  8012   0022F6                     __ptext41:
  8013                           	callstack 0
  8014   0022F6                     i2_Write1USART:
  8015                           	callstack 25
  8016                           
  8017                           ;incstack = 0
  8018                           ;i2Write1USART@data stored from wreg
  8019   0022F6  6E32               	movwf	i2Write1USART@data^0,c
  8020   0022F8                     
  8021                           ;usart.c: 48:     TXREG1 = data;
  8022   0022F8  C032  FFAE         	movff	i2Write1USART@data,4014	;volatile
  8023   0022FC                     i2l600:
  8024   0022FC  A2AD               	btfss	173,1,c	;volatile
  8025   0022FE  EF83  F011         	goto	i2u258_41
  8026   002302  EF85  F011         	goto	i2u258_40
  8027   002306                     i2u258_41:
  8028   002306  EF7E  F011         	goto	i2l600
  8029   00230A                     i2u258_40:
  8030   00230A  0012               	return		;funcret
  8031   00230C                     __end_ofi2_Write1USART:
  8032                           	callstack 0
  8033                           
  8034 ;; *************** function _Read1USART *****************
  8035 ;; Defined at:
  8036 ;;		line 56 in file "usart.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;		None
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  result          1    0[COMRAM] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      unsigned char 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;Total ram usage:        1 bytes
  8055 ;; Hardware stack levels used: 1
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_high_isr
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text42
  8064   002268                     __ptext42:
  8065                           	callstack 0
  8066   002268                     _Read1USART:
  8067                           	callstack 25
  8068   002268                     
  8069                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  8070   002268  A2AC               	btfss	172,1,c	;volatile
  8071   00226A  EF39  F011         	goto	i2u255_41
  8072   00226E  EF3B  F011         	goto	i2u255_40
  8073   002272                     i2u255_41:
  8074   002272  EF43  F011         	goto	i2l606
  8075   002276                     i2u255_40:
  8076   002276                     
  8077                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  8078   002276  98AC               	bcf	172,4,c	;volatile
  8079                           
  8080                           ;usart.c: 61:         result = RCREG1;
  8081   002278  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8082                           
  8083                           ;usart.c: 62:         result = RCREG1;
  8084   00227C  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8085                           
  8086                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  8087   002280  88AC               	bsf	172,4,c	;volatile
  8088                           
  8089                           ;usart.c: 64:     } else {
  8090   002282  EF45  F011         	goto	i2l3769
  8091   002286                     i2l606:
  8092                           
  8093                           ;usart.c: 65:         result = RCREG1;
  8094   002286  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8095   00228A                     i2l3769:
  8096                           
  8097                           ;usart.c: 68:     return result;
  8098   00228A  5032               	movf	Read1USART@result^0,w,c
  8099   00228C  0012               	return		;funcret
  8100   00228E                     __end_of_Read1USART:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function _Low_Power_Indicator *****************
  8104 ;; Defined at:
  8105 ;;		line 1216 in file "main.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;Total ram usage:        0 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_high_isr
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text43
  8133   0021BA                     __ptext43:
  8134                           	callstack 0
  8135   0021BA                     _Low_Power_Indicator:
  8136                           	callstack 25
  8137   0021BA                     
  8138                           ;main.c: 1218:     if (VOLTAGE <= 0x0366)
  8139   0021BA  0E67               	movlw	103
  8140   0021BC  5C09               	subwf	_VOLTAGE^0,w,c
  8141   0021BE  0E03               	movlw	3
  8142   0021C0  580A               	subwfb	(_VOLTAGE+1)^0,w,c
  8143   0021C2  B0D8               	btfsc	status,0,c
  8144   0021C4  EFE6  F010         	goto	i2u256_41
  8145   0021C8  EFE8  F010         	goto	i2u256_40
  8146   0021CC                     i2u256_41:
  8147   0021CC  EFEB  F010         	goto	i2l3777
  8148   0021D0                     i2u256_40:
  8149   0021D0                     
  8150                           ;main.c: 1219:     {;main.c: 1221:         LATDbits.LATD1 = 1;
  8151   0021D0  828C               	bsf	140,1,c	;volatile
  8152                           
  8153                           ;main.c: 1223:     } else if (VOLTAGE >= 0x03C0)
  8154   0021D2  EFF7  F010         	goto	i2l440
  8155   0021D6                     i2l3777:
  8156   0021D6  0EC0               	movlw	192
  8157   0021D8  5C09               	subwf	_VOLTAGE^0,w,c
  8158   0021DA  0E03               	movlw	3
  8159   0021DC  580A               	subwfb	(_VOLTAGE+1)^0,w,c
  8160   0021DE  A0D8               	btfss	status,0,c
  8161   0021E0  EFF4  F010         	goto	i2u257_41
  8162   0021E4  EFF6  F010         	goto	i2u257_40
  8163   0021E8                     i2u257_41:
  8164   0021E8  EFF7  F010         	goto	i2l440
  8165   0021EC                     i2u257_40:
  8166   0021EC                     
  8167                           ;main.c: 1224:     {;main.c: 1225:         LATDbits.LATD1 = 0;
  8168   0021EC  928C               	bcf	140,1,c	;volatile
  8169   0021EE                     i2l440:
  8170   0021EE  0012               	return		;funcret
  8171   0021F0                     __end_of_Low_Power_Indicator:
  8172                           	callstack 0
  8173   000000                     
  8174                           	psect	rparam
  8175   000000                     
  8176                           	psect	temp
  8177   000059                     btemp:
  8178                           	callstack 0
  8179   000059                     	ds	1
  8180   000000                     int$flags	set	btemp
  8181   000000                     wtemp8	set	btemp+1
  8182   000000                     ttemp5	set	btemp+1
  8183   000000                     ttemp6	set	btemp+4
  8184   000000                     ttemp7	set	btemp+8
  8185                           
  8186                           	psect	config
  8187                           
  8188                           ;Config register CONFIG1L @ 0x7FF8
  8189                           ;	Watchdog Timer Enable bit
  8190                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  8191                           ;	PLL Prescaler Selection bits
  8192                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8193                           ;	Stack Overflow/Underflow Reset Enable bit
  8194                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  8195                           ;	Extended Instruction Set Enable bit
  8196                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8197                           ;	Background Debugger Enable bit
  8198                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  8199   007FF8                     	org	32760
  8200   007FF8  AE                 	db	174
  8201                           
  8202                           ;Config register CONFIG1H @ 0x7FF9
  8203                           ;	CPU System Clock Postscaler
  8204                           ;	CPUDIV = OSC1, No CPU system clock divide
  8205                           ;	Code Protection bit
  8206                           ;	CP0 = OFF, Program memory is not code-protected
  8207   007FF9                     	org	32761
  8208   007FF9  F7                 	db	247
  8209                           
  8210                           ;Config register CONFIG2L @ 0x7FFA
  8211                           ;	Oscillator Selection bits
  8212                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  8213                           ;	Fail-Safe Clock Monitor Enable bit
  8214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8215                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  8216                           ;	IESO = OFF, Two-Speed Start-up disabled
  8217   007FFA                     	org	32762
  8218   007FFA  03                 	db	3
  8219                           
  8220                           ;Config register CONFIG2H @ 0x7FFB
  8221                           ;	Watchdog Timer Postscaler Select bits
  8222                           ;	WDTPS = 2048, 1:2048
  8223   007FFB                     	org	32763
  8224   007FFB  FB                 	db	251
  8225                           
  8226                           ;Config register CONFIG3L @ 0x7FFC
  8227                           ;	unspecified, using default values
  8228   007FFC                     	org	32764
  8229   007FFC  F8                 	db	248
  8230                           
  8231                           ;Config register CONFIG3H @ 0x7FFD
  8232                           ;	ECCP2 MUX bit
  8233                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  8234                           ;	MSSP Address Masking Mode Select bit
  8235                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  8236   007FFD                     	org	32765
  8237   007FFD  F1                 	db	241
  8238                           tosu	equ	0xFFF
  8239                           tosh	equ	0xFFE
  8240                           tosl	equ	0xFFD
  8241                           stkptr	equ	0xFFC
  8242                           pclatu	equ	0xFFB
  8243                           pclath	equ	0xFFA
  8244                           pcl	equ	0xFF9
  8245                           tblptru	equ	0xFF8
  8246                           tblptrh	equ	0xFF7
  8247                           tblptrl	equ	0xFF6
  8248                           tablat	equ	0xFF5
  8249                           prodh	equ	0xFF4
  8250                           prodl	equ	0xFF3
  8251                           indf0	equ	0xFEF
  8252                           postinc0	equ	0xFEE
  8253                           postdec0	equ	0xFED
  8254                           preinc0	equ	0xFEC
  8255                           plusw0	equ	0xFEB
  8256                           fsr0h	equ	0xFEA
  8257                           fsr0l	equ	0xFE9
  8258                           wreg	equ	0xFE8
  8259                           indf1	equ	0xFE7
  8260                           postinc1	equ	0xFE6
  8261                           postdec1	equ	0xFE5
  8262                           preinc1	equ	0xFE4
  8263                           plusw1	equ	0xFE3
  8264                           fsr1h	equ	0xFE2
  8265                           fsr1l	equ	0xFE1
  8266                           bsr	equ	0xFE0
  8267                           indf2	equ	0xFDF
  8268                           postinc2	equ	0xFDE
  8269                           postdec2	equ	0xFDD
  8270                           preinc2	equ	0xFDC
  8271                           plusw2	equ	0xFDB
  8272                           fsr2h	equ	0xFDA
  8273                           fsr2l	equ	0xFD9
  8274                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      88
    BANK0           160      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _main->_write_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22567
                                             26 COMRAM     2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1794
                                             20 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     227
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2508
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2508
                                             20 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  4     4      0    6182
                                             23 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    3622
                                             14 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2786
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     319
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
     _delay_1ms
     _readWeighingData
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SErr
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      54        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      30       5       30.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      58       1       93.6%
BITBANK15           40      0       0      34        0.0%
BANK15              40      0       0      35        0.0%
BITBIGSFRlllll      2B      0       0      52        0.0%
BITBIGSFRlhhlh      1C      0       0      38        0.0%
BITBIGSFRlhlhlh      F      0       0      41        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRlhlhll      C      0       0      42        0.0%
BITBIGSFRlhlhhh      8      0       0      40        0.0%
BITBIGSFRlllh        7      0       0      47        0.0%
BITBIGSFRllllhh      4      0       0      48        0.0%
BITBIGSFRlhllh       4      0       0      43        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlhllll      2      0       0      44        0.0%
BITBIGSFRllllhh      2      0       0      50        0.0%
BITBIGSFRlhhll       2      0       0      39        0.0%
BITBIGSFRlhllll      2      0       0      45        0.0%
BITBIGSFRllllhh      1      0       0      49        0.0%
BITBIGSFRlhhh        1      0       0      37        0.0%
BITBIGSFRllh         1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      53        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 16 10:29:16 2023

                             _i 000D                   ??_i2c_Address 003A                    ___awdiv@sign 003D  
                 ?_InitSTLED316 0032                     i2c_Read@ack 003B                             l211 096C  
                           l203 0790                             l205 07AA                             l206 07FE  
                           l223 0AE4                             l207 07C0                             l208 07D2  
                           l410 168E                             l402 15F6                             l234 0B2E  
                           l331 221A                             l235 0B20                             l420 2182  
                           l252 0CCE                             l180 0566                             l405 1628  
                           l350 210E                             l502 2004                             l238 0B6C  
                           l190 05C8                             l431 20AE                             l335 22B0  
                           l415 2148                             l239 0B5E                             l191 05CE  
                           l328 2208                             l600 22E6                             l424 1FB0  
                           l425 1FB6                             l353 1082                             l345 18A6  
                           l434 20D2                             l274 0F5C                             l515 1A8E  
                           l507 1A82                             l603 22F4                             l259 0D96  
                           l372 127E                             l428 22C8                             l461 1E82  
                           l453 1E0A                             l269 0EB4                             l358 10B4  
                           l550 2266                             l455 1E40                             l447 1E02  
                           l392 14B2                             l368 1220                             l544 22DE  
                           l553 2370                             l641 1EF2                             l458 1E58  
                           l378 13E0                             l562 2338                             l642 1EF4  
                           l570 21B8                             l395 14BE                             l483 1D76  
                           l556 2360                             l477 1B5A                             l389 1468  
                           l565 231E                             l573 204E                             l662 2378  
                           l671 2358                             l559 2368                             l639 1EE4  
                           l488 199A                             l568 21AE                             l576 1F5C  
                           l665 2380                             l497 19A6                             l905 1C1E  
                           l753 179A                             l569 21B0                             l659 232C  
                           l668 234E                             l597 2240                             l918 1CCE  
                           _GIE 007F97                             _PR4 000F77                             _NUM 0013  
                  ___awmod@sign 003D                             wreg 000FE8                      _TXSTA1bits 000FAD  
                 ??_i2c_Restart 0039                            l3003 236A                            l3011 2330  
                          l3101 1BD2                            l3021 231A                            l3005 236E  
                          l3013 2334                            l3023 2372                            l3103 1BE8  
                          l3111 1BFE                            l3031 1690                            l3015 230E  
                          l3007 2362                            l3025 2376                            l3201 22A8  
                          l3113 1C0E                            l3105 1BF0                            l3121 1C24  
                          l3041 16C4                            l3033 1694                            l3017 2312  
                          l3009 2366                            l4001 0860                            l3027 237A  
                          l3211 19AC                            l3115 1C16                            l3107 1BF2  
                          l3131 1C54                            l3123 1C32                            l3051 1706  
                          l3043 16D4                            l3035 16A2                            l3019 2316  
                          l4011 08BE                            l4003 0876                            l3029 237E  
                          l3205 2346                            l3221 19E0                            l3213 19B2  
                          l3109 1BF8                            l3141 1C9A                            l3133 1C66  
                          l3125 1C3A                            l3061 1758                            l3053 1712  
                          l3045 16D8                            l3037 16B2                            l3301 235A  
                          l4101 0BB6                            l4021 090A                            l4013 08CE  
                          l4005 0882                            l3207 234A                            l3223 19F0  
                          l3215 19B4                            l3151 1CC6                            l3143 1CA2  
                          l3135 1C6E                            l3127 1C3E                            l3119 1C20  
                          l3071 178A                            l3063 175A                            l3055 1720  
                          l3047 16E8                            l3039 16B6                            l3311 2198  
                          l3303 235E                            l4111 0BF4                            l4031 094C  
                          l4023 0912                            l4015 08E6                            l4007 0896  
                          l3225 1A00                            l3217 19C0                            l3233 1A30  
                          l3209 19AA                            l3081 1B76                            l3145 1CA8  
                          l3137 1C76                            l3129 1C4C                            l3161 1D12  
                          l3065 1764                            l3057 172A                            l3049 16FE  
                          l3321 1EA0                            l3401 2324                            l3313 21A8  
                          l3305 2186                            l4201 0E52                            l4121 0C3E  
                          l4113 0C0C                            l4105 0BCA                            l4041 09A6  
                          l4025 0926                            l4009 08B2                            l4017 08EE  
                          l4033 0970                            l3243 2350                            l3235 1A86  
                          l3227 1A10                            l3219 19D0                            l3251 1F74  
                          l3091 1B9C                            l3083 1B7A                            l3075 1B5C  
                          l3139 1C84                            l3147 1CAE                            l3171 1D5E  
                          l3163 1D36                            l3155 1CD0                            l3059 1748  
                          l3067 176A                            l3331 1EAA                            l3323 1EA2  
                          l3315 1E84                            l3403 2326                            l3411 2238  
                          l3307 218A                            l4211 0E78                            l4203 0E56  
                          l4131 0C7A                            l4123 0C46                            l4107 0BDC  
                          l4115 0C14                            l4043 09C2                            l4051 0A0E  
                          l4027 0936                            l4019 08FC                            l4035 0978  
                          l3245 2354                            l3237 1A8C                            l3229 1A20  
                          l3261 1F94                            l3093 1BAE                            l3085 1B88  
                          l3077 1B60                            l3149 1CBE                            l3181 1D74  
                          l3173 1D64                            l3165 1D46                            l3157 1D08  
                          l3413 22B2                            l3069 177A                            l3501 2002  
                          l3405 22CA                            l3341 1EB4                            l3333 1EAC  
                          l3325 1EA4                            l3317 1E88                            l3309 2190  
                          l3421 1EF6                            l4213 0E80                            l4205 0E5A  
                          l4141 0CC6                            l4133 0C90                            l4125 0C56  
                          l4117 0C26                            l4109 0BEC                            l4053 0A2A  
                          l4061 0A66                            l4045 09D8                            l4037 0986  
                          l4029 093E                            l3183 2096                            l3247 2356  
                          l3271 18B4                            l3263 1FB2                            l3095 1BB6  
                          l3087 1B90                            l3079 1B6E                            l3175 1D6A  
                          l3167 1D56                            l3159 1D10                            l3511 1068  
                          l3503 1048                            l3415 22BE                            l3431 17A2  
                          l3191 2006                            l3407 22CE                            l3351 1EBE  
                          l3343 1EB6                            l3335 1EAE                            l3327 1EA6  
                          l3319 1E9E                            l3423 1F54                            l4231 0ED2  
                          l4207 0E5E                            l4223 0EB6                            l4151 0CE4  
                          l4135 0C9A                            l4127 0C66                            l4119 0C36  
                          l4071 0AAE                            l4063 0A74                            l4055 0A36  
                          l4047 09EE                            l4039 0998                            l3185 20A0  
                          l3193 228E                            l3281 1900                            l3273 18C0  
                          l3265 18AA                            l3257 1F7E                            l3249 1F5E  
                          l3097 1BBE                            l3089 1B94                            l3177 1D6C  
                          l3169 1D5C                            l3521 109C                            l3505 1058  
                          l3417 22C0                            l3441 17F2                            l3433 17BA  
                          l3361 1ED8                            l3353 1EC0                            l3345 1EB8  
                          l3337 1EB0                            l3329 1EA8                            l3409 221C  
                          l4241 0F0E                            l4233 0EDA                            l4217 0E9A  
                          l4209 0E76                            l4161 0D1C                            l4153 0CF4  
                          l4129 0C6A                            l4145 0CD0                            l4081 0AFE  
                          l4065 0A82                            l4073 0AB6                            l4057 0A46  
                          l4049 09FA                            l3187 20AC                            l3195 229C  
                          l3283 1910                            l3275 18D0                            l3291 1940  
                          l3267 18AC                            l3259 1F90                            l3099 1BCC  
                          l3179 1D6E                            l3611 1326                            l3603 12DE  
                          l3531 10CA                            l3523 10A8                            l3515 1088  
                          l3507 105A                            l3419 22C2                            l3451 1834  
                          l3443 17F6                            l3435 17CA                            l3427 179C  
                          l3371 1EE2                            l3363 1EDA                            l3355 1EC2  
                          l3347 1EBA                            l3339 1EB2                            l4251 0F7A  
                          l4235 0EE6                            l4227 0EBE                            l4219 0EAC  
                          l4163 0D28                            l4171 0D4C                            l4155 0CF8  
                          l4147 0CD8                            l4139 0CB4                            l4091 0B84  
                          l4083 0B14                            l4075 0AC4                            l4067 0A8A  
                          l4059 0A5E                            l3189 20BC                            l3293 199E  
                          l3285 1920                            l3277 18E0                            l3269 18B2  
                          l3701 154E                            l3621 137A                            l3605 12E6  
                          l3613 1334                            l3541 1118                            l3533 10CE  
                          l3525 10B6                            l3517 108A                            l3509 1066  
                          l3381 1DAE                            l3373 1D7A                            l3461 1876  
                          l3453 184A                            l3445 1808                            l3437 17D6  
                          l3429 179E                            l3365 1EDC                            l3357 1EC4  
                          l3349 1EBC                            l4261 0F9C                            l4237 0EF6  
                          l4245 0F1A                            l4229 0ECE                            l4253 0F7E  
                          l4181 0DBC                            l4173 0D98                            l4165 0D34  
                          l4157 0D00                            l4149 0CDC                            l4093 0B96  
                          l4085 0B3C                            l4069 0A9E                            l4077 0AE8  
                          l3295 19A4                            l3287 1930                            l3279 18F0  
                          l2911 22E2                            l3711 158A                            l3703 155E  
                          l3623 138C                            l3615 1346                            l3607 1308  
                          l3551 1154                            l3543 111E                            l3535 10E6  
                          l3527 10BA                            l3631 13BC                            l3519 108A  
                          l3391 1DD6                            l3383 1DB0                            l3375 1D7E  
                          l3463 1882                            l3455 1850                            l3447 1818  
                          l3439 17EC                            l3471 20D4                            l3367 1EDE  
                          l3359 1ED6                            l4263 0F9E                            l4255 0F8E  
                          l4247 0F5E                            l4239 0F02                            l4191 0DFA  
                          l4183 0DCC                            l4175 0DB2                            l4167 0D40  
                          l4159 0D10                            l4271 0FBE                            l4095 0BAA  
                          l4087 0B52                            l4079 0AF0                            l2921 2162  
                          l2913 214A                            l3721 15CE                            l3713 159C  
                          l3705 156A                            l3641 1416                            l3633 13CE  
                          l3625 139E                            l3617 1358                            l3609 1316  
                          l3561 1192                            l3553 1160                            l3545 1122  
                          l3537 10F6                            l3529 10BE                            l3393 1DDE  
                          l3385 1DB8                            l3377 1D84                            l3465 1886  
                          l3457 1854                            l3449 1828                            l2905 2242  
                          l3481 210C                            l3473 20E4                            l3369 1EE0  
                          l4265 0FB8                            l4257 0F92                            l4249 0F78  
                          l4193 0E12                            l4185 0DDC                            l4177 0DB4  
                          l4273 1002                            l4097 0BAE                            l4089 0B74  
                          l3801 0326                            l2931 1E06                            l2923 2166  
                          l3723 15DA                            l3715 15AC                            l3707 1580  
                          l3643 1426                            l3651 144C                            l3635 13E2  
                          l3627 13A6                            l3619 136A                            l3571 11DC  
                          l3563 11A2                            l3555 1176                            l3547 1134  
                          l3539 1102                            l3395 1DE0                            l3387 1DBA  
                          l3379 1D86                            l3467 189C                            l3459 1866  
                          l2907 2242                            l3475 20EC                            l3491 1FCC  
                          l3483 1FBA                            l4259 0F96                            l4195 0E2E  
                          l4187 0DE0                            l4275 1012                            l4099 0BB2  
                          l3811 033E                            l3803 0336                            l2925 21F0  
                          l2941 1E3A                            l3741 165C                            l3725 15DC  
                          l3717 15B8                            l3709 1586                            l3733 1618  
                          l3661 1472                            l3653 1454                            l3645 1428  
                          l3637 13F4                            l3629 13AE                            l3581 122E  
                          l3573 11EC                            l3565 11AE                            l3557 117C  
                          l3549 1144                            l3397 1E00                            l3389 1DD4  
                          l3469 18A4                            l2909 2258                            l3477 20F0  
                          l3493 1FDC                            l3485 1FBC                            l4197 0E46  
                          l4189 0DE2                            l4277 101A                            l3901 0584  
                          l3821 036A                            l3813 0340                            l3805 0338  
                          l2927 21F4                            l2951 1E48                            l2943 1E42  
                          l2919 2152                            l3751 168A                            l3743 165E  
                          l3735 162A                            l3727 15F8                            l3719 15CC  
                          l3671 1498                            l3663 1478                            l3655 145C  
                          l3647 1434                            l3639 1404                            l3591 1280  
                          l3583 1230                            l3575 11FC                            l3567 11C4  
                          l3559 1180                            l3479 20F2                            l3495 1FEC  
                          l3487 1FC2                            l3399 2320                            l4199 0E4E  
                          l3911 05A0                            l3903 0586                            l3831 0392  
                          l3823 036E                            l3815 0342                            l3807 033A  
                          l2929 2202                            l2961 1E60                            l2953 1E5A  
                          l2937 1E0C                            l3745 166A                            l3737 163C  
                          l3729 1604                            l3681 14C8                            l3665 1488  
                          l3657 1464                            l3649 1436                            l3593 1292  
                          l3577 120E                            l3585 124A                            l3569 11D6  
                          l3497 1FF8                            l3489 1FC4                            l3761 2128  
                          l3753 2110                            l3921 05EE                            l3913 05BA  
                          l3905 058A                            l3833 03A2                            l3841 03C4  
                          l3825 0370                            l3817 0344                            l3809 033C  
                          l2963 1E70                            l2939 1E2A                            l3747 166C  
                          l3739 164C                            l3691 150C                            l3683 14D4  
                          l3675 14B8                            l3667 148A                            l3659 146A  
                          l2971 1A9C                            l3595 12A4                            l3587 125A  
                          l3579 1222                            l3499 1FFA                            l3763 212C  
                          l3931 063A                            l3923 05F2                            l3915 05BC  
                          l3907 059A                            l3851 040A                            l3843 03DC  
                          l3835 03A6                            l3827 038C                            l3819 0354  
                          l2965 1E72                            l2949 1E46                            l3749 1682  
                          l3693 1522                            l3685 14D8                            l3677 14C0  
                          l3669 1496                            l2981 1AC4                            l2973 1AA4  
                          l3597 12B4                            l3589 126C                            l3941 067A  
                          l3933 064C                            l3925 0604                            l3917 05D0  
                          l3909 059E                            l3861 045C                            l3853 0420  
                          l3845 03E4                            l3837 03A8                            l3829 038E  
                          l2959 1E5E                            l3695 1528                            l3687 14F0  
                          l3679 14C4                            l2983 1ACC                            l2975 1AAC  
                          l2967 1A90                            l3599 12CA                            l3759 2118  
                          l3943 0686                            l3935 0658                            l3927 0616  
                          l3919 05EC                            l4751 0530                            l3871 0482  
                          l3863 045E                            l3855 0436                            l3847 03E6  
                          l3839 03C2                            l3791 0316                            l3783 0306  
                          l3697 152C                            l3689 1500                            l2985 1AD4  
                          l2977 1AB4                            l2969 1A94                            l2993 1AEC  
                          l4761 102E                            l3961 071E                            l4753 06CE  
                          l3945 0696                            l3937 065A                            l3929 0628  
                          l3953 06BA                            l3881 04CA                            l3873 0492  
                          l3865 0460                            l3857 043E                            l3849 0402  
                          l3793 031A                            l3785 0308                            l3699 153E  
                          l4763 1B02                            l2987 1ADC                            l2979 1ABC  
                          l2995 1B58                            l4755 0D60                            l3971 0758  
                          l3963 0720                            l3947 06A2                            l3955 06FC  
                          l3939 0674                            l3891 0504                            l3883 04D0  
                          l3875 04A2                            l3867 047C                            l3859 0440  
                          l3795 031E                            l3787 030C                            l4765 1954  
                          l2989 1AE4                            l4757 0F2E                            l3981 078E  
                          l3973 075C                            l3965 0724                            l3957 0700  
                          l3949 06AE                            l3893 0510                            l3885 04E0  
                          l3877 04AE                            l3869 047E                            l3797 0322  
                          l3789 0312                            l4767 1A44                            l4759 0FD4  
                          l3991 07F0                            l3983 0792                            l3975 075E  
                          l3967 0734                            l3959 0702                            l3887 04EC  
                          l3879 04B0                            l3799 0324                            l3993 080C  
                          l3985 07A2                            l3977 0778                            l3969 0746  
                          l3889 04F8                            l3897 051C                            l3995 0820  
                          l3987 07CE                            l3979 077A                            l3899 0568  
                          l3997 082E                            l3989 07D8                            l3999 084A  
                          u2000 1D56                            u2001 1D52                            u2010 20BC  
                          u2011 20B8                            u2020 229C                            u2100 1866  
                          u2021 2298                            u2101 1862                            u2030 1FB0  
                          u2110 20E4                            u2031 1FAC                            u2111 20E0  
                          u2200 11D6                            u2120 1FDC                            u2040 21A8  
                          u3000 0B52                            u2201 11D2                            u2121 1FD8  
                          u2041 21A4                            u3001 0B4E                            u2210 11FC  
                          u2130 1058                            u2050 1EF2                            u3010 0B6C  
                          u2211 11F8                            u2131 1054                            u2051 1EEE  
                          u3011 0B68                            u2300 1300                            u2220 120E  
                          u2140 109C                            u3100 0CF4                            u3020 0B96  
                          u2301 12FA                            u2221 120A                            u2141 1098  
                          u3101 0CF0                            u3021 0B92                            u2310 1302  
                          u2230 1220                            u2150 1118                            u2070 17EC  
                          u3110 0DCC                            u3030 0BC6                            u2231 121C  
                          u2151 1114                            u2071 17E8                            u3111 0DC8  
                          u3031 0BC2                            u2400 1404                            u2320 1346  
                          u2240 125A                            u2160 1134                            u2080 1808  
                          u3120 0DDC                            u3040 0BDC                            u2401 1400  
                          u2321 1342                            u2241 1256                            u2161 1130  
                          u2065 1D9C                            u2081 1804                            u3121 0DD8  
                          u3041 0BD8                            u2410 1416                            u2330 1358  
                          u2250 126C                            u2170 1176                            u2090 184A  
                          u3130 0E96                            u3050 0BEC                            u2411 1412  
                          u2331 1354                            u2251 1268                            u2171 1172  
                          u2091 1846                            u3131 0E92                            u3051 0BE8  
                          u2500 1628                            u2420 1426                            u2340 136A  
                          u2260 127E                            u2180 1192                            u3140 0ECE  
                          u3060 0C26                            u2501 1624                            u2421 1422  
                          u2341 1366                            u2261 127A                            u2181 118E  
                          u3141 0ECA                            u3061 0C22                            u2510 163C  
                          u2430 1488                            u2350 138C                            u2270 1292  
                          u2190 11C4                            u1710 2258                            u3150 0F8E  
                          u3070 0C36                            u2511 1638                            u2431 1484  
                          u2351 1388                            u2271 128E                            u2191 11C0  
                          u1711 2254                            u3151 0F8A                            u3071 0C32  
                          u1800 1E82                            u2520 164C                            u2440 1522  
                          u2360 139E                            u2280 12A4                            u1720 2266  
                          u3080 0C7A                            u2600 0420                            u1801 1E7E  
                          u2521 1648                            u2441 151E                            u2361 139A  
                          u2281 12A0                            u1721 2262                            u3081 0C76  
                          u2601 041C                            u1730 22F4                            u2530 165C  
                          u2450 153E                            u2370 13CE                            u2290 12DA  
                          u1810 16A2                            u3090 0CB0                            u2610 0436  
                          u1731 22F0                            u2531 1658                            u2451 153A  
                          u2371 13CA                            u2291 12D6                            u1811 169E  
                          u3091 0CAC                            u2611 0432                            u1740 2182  
                          u2460 1580                            u1900 1BCC                            u2380 13E0  
                          u1820 16C4                            u2540 2148                            u2700 0734  
                          u2620 0492                            u1741 217E                            u2461 157C  
                          u1901 1BC8                            u2381 13DC                            u1821 16C0  
                          u2541 2144                            u2701 0730                            u2621 048E  
                          u1750 221A                            u2470 159C                            u1910 1BE8  
                          u2390 13F4                            u1830 16FE                            u2710 0746  
                          u2630 04A2                            u1751 2216                            u2471 1598  
                          u1911 1BE4                            u2391 13F0                            u1831 16FA  
                          u2711 0742                            u2631 049E                            u2480 15CC  
                          u1920 1C0E                            u1840 1720                            u2800 0860  
                          u2720 0758                            u2640 059A                            u2481 15C8  
                          u1921 1C0A                            u1841 171C                            u2801 085C  
                          u2721 0754                            u2641 0596                            u3417 035E  
                          u1770 1E3A                            u2490 1614                            u1930 1C32  
                          u1850 1748                            u2810 08B2                            u2730 07C0  
                          u2650 0604                            _PEN2 007B5A                            u1771 1E36  
                          u2491 1610                            u1931 1C2E                            u3507 17AC  
                          u1851 1744                            u2811 08AE                            u3427 07E2  
                          u2731 07BC                            u2651 0600                            u1780 1E58  
                          u1764 1E1E                            u1940 1C4C                            u1860 177A  
                          u2900 09D8                            u2820 08FC                            u2740 07CE  
                          u2660 0616                            u1781 1E54                            u1765 1E1A  
                          u1941 1C48                            u3517 180E                            u1861 1776  
                          u2901 09D4                            u2821 08F8                            u3437 086A  
                          u2741 07CA                            u2661 0612                            u1790 1E70  
                          u1870 1B6E                            u1950 1C66                            u2910 0A2A  
                          u2830 090A                            u2750 07FE                            u2670 0628  
                          u2590 03A2                            u1791 1E6C                            u1871 1B6A  
                          u1951 1C62                            u3607 13B4                            u3527 1890  
                          u2911 0A26                            u2831 0906                            u3447 08D8  
                          u2751 07FA                            u2671 0624                            u2591 039E  
                          u1880 1B88                            u1960 1C84                            u2920 0A74  
                          u2840 094C                            u2760 080C                            u2680 063A  
                          u1881 1B84                            u1961 1C80                            u3617 1440  
                          u3537 1072                            u2921 0A70                            u2841 0948  
                          u3457 092C                            u2761 0808                            u2681 0636  
                          u1890 1BAE                            u1970 1C9A                            u2930 0A82  
                          u2850 0968                            u2770 0820                            u2690 064C  
                          u3627 14A2                            u1891 1BAA                            u1971 1C96  
                          u3547 10D8                            u2931 0A7E                            u3467 09E2  
                          u2851 0964                            u2771 081C                            u2691 0648  
                          u1980 1CBE                            u2940 0AC4                            u2860 0986  
                          u2780 082E                            u3637 14E2                            u1981 1CBA  
                          u3557 113A                            u2941 0AC0                            u3477 0A50  
                          u2861 0982                            u2781 082A                            u1990 1D46  
                          u2950 0AE0                            u2870 0998                            u2790 084A  
                          u3647 1544                            u1991 1D42                            u3567 123A  
                          u2951 0ADC                            u3487 0AA4                            u2871 0994  
                          u2791 0846                            u2960 0AFE                            u2880 09A6  
                          u3657 15E6                            u3577 12BE                            u3497 0E68  
                          u2961 0AFA                            u2881 09A2                            u2970 0B14  
                          u2890 09C2                            u3667 1676                            u3587 130E  
                          u2971 0B10                            u2891 09BE                            u2980 0B2E  
                          u3677 21FA                            u3597 132C                            u2981 0B2A  
                          u2990 0B3C                            u2991 0B38                            _SEN2 007B58  
                          _TMR1 000FCE                            _Busy 002D                            _Stop 002F  
                          _data 002B  __end_of_AD_capture_BattVoltage 20D4                            _main 0306  
                          _init 1E84                            _temp 0005                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
            _MotorPosition_Init 179C                            btemp 0059                            start 0302  
               __end_of_Get7Seg 1B5C                 __end_of_Clr_RG3 2382     __end_of_Homing_Again_Manual 146A  
                  ___param_bank 000000                    high_isr@Temp 0035             ?_MotorPosition_Init 0032  
               __end_of_Read_IR 22B2                 __end_of_Set_RG3 237A                  ??_InitSTLED316 003E  
               __end_of_MotorON 2350                    _BAUDCON1bits 000F7E                 __end_of___aldiv 179C  
                         ?_main 0032                           ?_init 0032                 __end_of___awdiv 1C20  
                         _ADRES 000FC3                 __end_of___awmod 1CD0                 ___awdiv@divisor 003A  
                         _T1CON 000FCD                           _T4CON 000F76                           _RCEN2 007B5B  
                         i2l300 0130                           i2l310 018E                           i2l302 0100  
                         i2l304 012A                           i2l307 014E                           i2l325 02F6  
                         i2l440 21EE                           i2l600 22FC                           i2l603 230A  
                         i2l291 01C6                           i2l606 2286                           i2l608 228C  
               ___awdiv@counter 003C                           _RSEN2 007B59                           _ETemp 001D  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TRISF 000F97  
                         _TRISG 000F98             __end_of_i2c_Address 2320            ??_MotorPosition_Init 0041  
                         _flush 2110                      _Read1USART 2268                _TMR1IF_triggered 0025  
                         tablat 000FF5        ??_STLED316s_SPI_SendData 0038             __end_of_i2c_Restart 2362  
                         ttemp5 005A                           ttemp6 005D                           ttemp7 0061  
                         status 000FD8                           wtemp8 005A                   i2_Write1USART 22F6  
         _WriteSTLED316SVibMode 1FB8                 __initialization 2050                   _holdTimeRight 0003  
                    _InitTimer1 22B2                    __end_of_main 1048                    __end_of_init 1EF6  
              __end_of_i2c_Init 22E0                __end_of_i2c_Read 21BA                __end_of_i2c_Wait 2268  
              __end_of_i2c_Stop 236A                          ??_main 004C                          ??_init 0038  
                 __activetblptr 000002                          _ACKEN2 007B5C                          _ACKDT2 007B5D  
                        ?_flush 0032                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 0038                       ??_Get7Seg 003A                          i2l4401 01B6  
                        i2l4411 01EA                          i2l4403 01BE                          i2l4331 0026  
                        i2l4421 025E                          i2l4413 0208                          i2l4341 0074  
                        i2l4333 0038                          i2l4431 028C                          i2l4423 026E  
                        i2l4415 021C                          i2l4407 01D4                          i2l4351 00C4  
                        i2l4335 0048                          i2l4343 007C                          i2l4327 0012  
                        i2l4441 02CC                          i2l4433 0292                          i2l4425 0272  
                        i2l4417 022C                          i2l4353 00DE                          i2l4345 008C  
                        i2l4409 01DA                          i2l4337 0058                          i2l4329 0020  
                        i2l4443 02DE                          i2l4435 02A0                          i2l4419 024A  
                        i2l4427 0276                          i2l4363 0106                          i2l4355 00EE  
                        i2l4347 009C                          i2l4339 0064                          i2l4445 02EC  
                        i2l4437 02B2                          i2l4429 0284                          i2l4381 0150  
                        i2l4365 0118                          i2l4357 0102                          i2l4349 00B2  
                        i2l4447 02F4                          i2l4439 02C0                          i2l4391 0176  
                        i2l4375 0136                          i2l4367 011A                          i2l4383 0164  
                        i2l4393 017C                          i2l4385 0170                          i2l4377 013C  
                        i2l4369 0132                          i2l4395 017E                          i2l4379 013E  
                        i2l3773 21BA                          i2l3765 2268                          i2l3781 22F8  
                        i2l4397 0190                          i2l3775 21D0                          i2l3767 2276  
                        i2l4399 01A4                          i2l3777 21D6                          i2l3769 228A  
                        i2l3779 21EC                          _RCREG1 000FAF                       ??_Clr_RG3 0038  
                        _SPBRG1 000FB0                          _TMR1IE 007CE8                          _TMR1IF 007CF0  
                        _TRISD5 007CAD                          _TRISD6 007CAE                  ?i2_Write1USART 0032  
                        _TXREG1 000FAE                      _MotorBREAK 2350                       ??_Read_IR 003A  
                     ??_Set_RG3 0038                 read_i2c@address 0046                          _OpMode 002A  
                     ??_MotorON 0038                __end_of_high_isr 0302                       ??___aldiv 0040  
                     ??___awdiv 003C                       ??___awmod 003C                  _PWM_Duty_Cycle 0026  
              __end_of_flushOut 2184                __end_of_read_i2c 1F5E                     _i2c_Address 230C  
                        clear_0 2076                          clear_1 2082                ___awdiv@quotient 003E  
               ___awmod@divisor 003A                          isa$std 000001                 ___awmod@counter 003C  
              Read1USART@result 0032      __end_of_WriteSTLED316SData 1D78      __end_of_WriteSTLED316SMode 19A8  
                        flush@i 0038                   i2c_Write@data 0039                    __pdataCOMRAM 004E  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   _i2c_Restart 235A                     ?_Read1USART 0032            __end_of_InitSTLED316 1E04  
                    __accesstop 0060                      _i_RUN_ZERO 0011         __end_of__initialization 2088  
           _Low_Power_Indicator 21BA               _WriteSTLED316SErr 19A8                   ___rparam_used 000001  
        ?_WriteSTLED316SVibMode 0032              ?_WriteSTLED316SErr 0032                  __pcstackCOMRAM 0032  
                   ?_InitTimer1 0032                   __end_of_flush 214A               __end_of_i2c_Start 2372  
           ??_WriteSTLED316SErr 003E               __end_of_i2c_Write 233A            ?_Low_Power_Indicator 0032  
                       ??_flush 0038                       ?_i2c_Init 0032                       ?_i2c_Read 0039  
                    __pbssBANK0 0060                       ?_i2c_Wait 0032                 ??i2_Write1USART 0032  
                     ?_i2c_Stop 0032       __end_of_WriteSTLED316SErr 1A90                   ??_Write1USART 0038  
                   ?_MotorBREAK 0032                         _CCP4CON 000F73           ??_Low_Power_Indicator 0032  
        _STLED316s_SPI_SendData 1E04                _readWeighingData 1F5E              i2c_Address@address 003A  
                       _SPBRGH1 000F7F                         _SSP2ADD 000F6E                         _SSP2BUF 000F6F  
                       _NUM_REC 000F                         _VOLTAGE 0009                       ?_high_isr 0032  
                    ??_i2c_Init 0038                      ??_i2c_Read 003B                         _PWM_reg 0058  
                    ??_i2c_Wait 0038                         _Get7Seg 1A90     WriteSTLED316SVibMode@v_mode 003E  
                    ??_i2c_Stop 0039                         _Clr_RG3 237A               __end_of_delay_1ms 221C  
             i2Write1USART@data 0032                       ?_flushOut 0032                       ?_read_i2c 0046  
                   _Serial_Flag 0031                         _Read_IR 228E           WriteSTLED316SMode@msg 0040  
                       _Set_RG3 2372                         __Hparam 0000                         __Lparam 0000  
                       _MotorON 2346             __end_of_Write1USART 22F6      WriteSTLED316SData@NUM_DIG0 0043  
    WriteSTLED316SData@NUM_DIG1 0045                         ___aldiv 1690                     _Motor_Speed 001B  
                       ___awdiv 1B5C                         ___awmod 1C20                    Get7Seg@Digit 0038  
                       __pcinit 2050                         __ramtop 1000               __end_of_initUSART 2242  
                       __ptext0 0306                         __ptext1 1EF6                         __ptext2 235A  
                       __ptext3 2184                         __ptext4 221C                         __ptext5 2320  
                       __ptext6 1E84                         __ptext7 22CA                         __ptext8 2110  
                       __ptext9 1FB8               __end_of_initMotor 232E                       _T3CONbits 000F79  
              ___awmod@dividend 0038                ___aldiv@dividend 0038                       _T4CONbits 000F76  
                 delay_1ms@time 0038                      _pause_Time 0029                       _EAdd_High 0021  
                    ??_high_isr 0033            end_of_initialization 2088            i2c_Address@l_address 003B  
                    ??_flushOut 0038                      ??_read_i2c 004A                   __Lmediumconst 0000  
       WriteSTLED316SData@data3 0047         WriteSTLED316SData@data4 0048                ___aldiv@quotient 0042  
                       postdec1 000FE5                         postinc0 000FEE                    ?_i2c_Address 0039  
                  _InitSTLED316 1D78                       _PORTAbits 000F80                       _PORTBbits 000F81  
             __end_of_write_i2c 2050                       _TRISCbits 000F94                    ?_i2c_Restart 0032  
      ??_AD_capture_BattVoltage 003B                    ??_Read1USART 0032              _WriteSTLED316SData 1CD0  
       ??_WriteSTLED316SVibMode 003E              _WriteSTLED316SMode 18A8                     _Write1USART 22E0  
           ?_WriteSTLED316SData 0040             ?_WriteSTLED316SMode 0032                    ??_InitTimer1 0038  
                _ToggleVIB_Mode 20D4                       _Device_ID 0017                     _Vmotor_Time 0056  
                 __pidataCOMRAM 233A              __end_of_Read1USART 228E                   _Serial_Buffer 0080  
                     _i2c_Start 236A                       _i2c_Write 232E            ??_WriteSTLED316SData 0043  
           start_initialization 2050            ??_WriteSTLED316SMode 003E                    _holdTimeLeft 0001  
            __end_of_InitTimer1 22CA                 _LowPowerCounter 004E        __end_of_readWeighingData 1FB8  
                  ??_MotorBREAK 0038          __end_of_ToggleVIB_Mode 2110         ?_STLED316s_SPI_SendData 0032  
                    ?_i2c_Start 0032                      ?_i2c_Write 0032                     __pbssCOMRAM 0001  
            __end_of_MotorBREAK 235A                        ?_Get7Seg 0038             _Homing_Again_Manual 1048  
                      ?_Clr_RG3 0032           __end_ofi2_Write1USART 230C                        ?_Read_IR 0038  
                     _delay_1ms 21F0               _Homing_Again_Auto 146A                        ?_Set_RG3 0032  
               ?_ToggleVIB_Mode 0032                        ?_MotorON 0032  __end_of_STLED316s_SPI_SendData 1E84  
   __end_of_Low_Power_Indicator 21F0              ?_Homing_Again_Auto 0032                       __pintcode 0008  
                      ?___aldiv 0038                        ?___awdiv 0038                        ?___awmod 0038  
          ?_Homing_Again_Manual 0032                    _errorcounter 0052             ??_Homing_Again_Auto 0041  
          WriteSTLED316SErr@msg 0040                       _initUSART 221C                       _initMotor 2320  
                   Get7Seg@Data 003C                 Write1USART@data 0038                 ___aldiv@divisor 003C  
               ___aldiv@counter 0040       __end_of_Homing_Again_Auto 1690                        _LATAbits 000F89  
                      _EAdd_Low 001F                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _LATGbits 000F8F                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                    ?_delay_1ms 0038               readWeighingData@i 003A                        i2u320_40 008C  
                      i2u320_41 0088                        i2u321_40 00B2                        i2u321_41 00AE  
                      i2u330_40 01B6                        i2u322_40 00C4                        i2u330_41 01B2  
                      i2u322_41 00C0                        i2u331_40 01D4                        i2u323_40 00DE  
                      i2u331_41 01D0                        i2u323_41 00DA                        i2u340_40 02EC  
                      i2u332_40 01EA                        i2u324_40 00EE                        i2u316_40 0020  
                      i2u340_41 02E8                        i2u332_41 01E6                        i2u324_41 00EA  
                      i2u316_41 001C                        i2u333_40 0208                        i2u325_40 0100  
                      i2u317_40 0038                        i2u333_41 0204                        i2u325_41 00FC  
                      i2u317_41 0034                        i2u334_40 024A                        i2u326_40 012A  
                      i2u318_40 0048                        i2u334_41 0246                        i2u326_41 0126  
                      i2u318_41 0044                        i2u255_40 2276                        i2u335_40 0284  
                      i2u327_40 014E                        i2u319_40 0058                        i2u255_41 2272  
                      i2u335_41 0280                        i2u327_41 014A                        i2u319_41 0054  
                      i2u256_40 21D0                        i2u336_40 02A0                        i2u328_40 018E  
                      i2u256_41 21CC                        i2u336_41 029C                        i2u328_41 018A  
                      i2u257_40 21EC                        i2u337_40 02B2                        i2u329_40 01A4  
                      i2u257_41 21E8                        i2u337_41 02AE                        i2u329_41 01A0  
                      _PIR1bits 000F9E                        i2u258_40 230A                        i2u338_40 02C0  
                      i2u258_41 2306                        i2u338_41 02BC                        i2u339_40 02DE  
                      i2u339_41 02DA                        _RCONbits 000FD0          _AD_capture_BattVoltage 2096  
                      _SSP2CON1 000F6C                        _SSP2CON2 000F6B                        _SSP2STAT 000F6D  
         ??_Homing_Again_Manual 0049                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                     high_isr@c 0036                       high_isr@i 0037                     ??_i2c_Start 0039  
                   ??_i2c_Write 0039      __end_of_MotorPosition_Init 18A8                      ?_initUSART 0032  
         _delay_motor_stop_time 0027                      ?_initMotor 0032                    _Serial_GData 0030  
                     _write_i2c 2006                     _INTCON3bits 000FF0                       copy_data0 2064  
        InitSTLED316@Brightness 0040                    _Serial_Count 0023                        _i2c_Init 22CA  
                      _i2c_Read 2184                        _i2c_Wait 2242                        _i2c_Stop 2362  
                  ?_Write1USART 0032   __end_of_WriteSTLED316SVibMode 2006                       flushOut@i 0038  
                    _ANCON0bits 000FC1                        __Hrparam 0000                        __Lrparam 0000  
                _vibration_mode 002C                        __ptext10 20D4                        __ptext11 2006  
                      __ptext20 1D78                        __ptext12 232E                        __ptext21 1048  
                      __ptext13 2362                        __ptext30 18A8                        __ptext22 1CD0  
                      __ptext14 236A                        __ptext31 19A8                        __ptext23 1C20  
                      __ptext15 230C                        __ptext32 1E04                        __ptext24 1B5C  
                      __ptext16 2242                        __ptext41 22F6                        __ptext33 228E  
                      __ptext25 1A90                        __ptext17 1690                        __ptext42 2268  
                      __ptext34 2346                        __ptext26 146A                        __ptext18 179C  
                      __ptext43 21BA                        __ptext35 2372                        __ptext27 1F5E  
                      __ptext19 22B2                        __ptext36 2350                        __ptext28 214A  
                      __ptext37 237A                        __ptext29 22E0                        __ptext38 2096  
                      __ptext39 21F0                      ?_write_i2c 0046                write_i2c@address 0046  
                      _high_isr 0008                        _dispense 0007               read_i2c@read_byte 004A  
                      _flushOut 214A                        _read_i2c 1EF6               ?_readWeighingData 0032  
                   ??_delay_1ms 003A              ??_readWeighingData 003A                        _vib_Time 0028  
         _Motor_Stop_Delay_Time 0019                        isa$xinst 000000                        int$flags 0059  
             _Serial_Buffer_Out 0060      STLED316s_SPI_SendData@Data 003A                      _INTCONbits 000FF2  
                   ??_initUSART 0038      STLED316s_SPI_SendData@temp 003B                     ??_initMotor 0038  
                      intlevel2 0000                    _motor_status 002E                ??_ToggleVIB_Mode 004C  
               i2c_Address@mode 0039                      _RCSTA1bits 000FAC                      _OSCCONbits 000FD3  
      WriteSTLED316SData@v_mode 0042        WriteSTLED316SData@number 0040                      _IR_SENSORF 000B  
              _Motor_Pause_Time 0015              _Serial_Temp_Buffer 0070         STLED316s_SPI_SendData@i 003C  
       STLED316s_SPI_SendData@t 003D                    ___aldiv@sign 0041                      _WDTCONbits 000FC0  
                   ??_write_i2c 004C             i2c_Read@i2cReadData 003C                   write_i2c@data 004A  
       ?_AD_capture_BattVoltage 0032  
