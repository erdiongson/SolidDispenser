

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jul 13 17:11:06 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F65J50 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  001F98                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _LowPowerCounter
   100  001F98  0014               	dw	20
   101  001F9A  0000               	dw	0
   102                           
   103                           ;initializer for _errorcounter
   104  001F9C  001E               	dw	30
   105  001F9E  0000               	dw	0
   106                           
   107                           ;initializer for _Vmotor_Time
   108  001FA0  07D0               	dw	2000
   109                           
   110                           ;initializer for _PWM_reg
   111  001FA2  3F                 	db	63
   112  0000                     _ADRES	set	4035
   113  0000                     _TMR1	set	4046
   114  0000                     _LATGbits	set	3983
   115  0000                     _T4CONbits	set	3958
   116  0000                     _CCPR4L	set	3956
   117  0000                     _CCP4CON	set	3955
   118  0000                     _T4CON	set	3958
   119  0000                     _T3CONbits	set	3961
   120  0000                     _PR4	set	3959
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _ANCON0bits	set	4033
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _TRISG	set	3992
   125  0000                     _TRISF	set	3991
   126  0000                     _TRISE	set	3990
   127  0000                     _TRISD	set	3989
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _RCREG1	set	4015
   132  0000                     _TXREG1	set	4014
   133  0000                     _SPBRGH1	set	3967
   134  0000                     _SPBRG1	set	4016
   135  0000                     _PIE1bits	set	3997
   136  0000                     _BAUDCON1bits	set	3966
   137  0000                     _TXSTA1bits	set	4013
   138  0000                     _TRISCbits	set	3988
   139  0000                     _SSP2BUF	set	3951
   140  0000                     _SSP2STAT	set	3949
   141  0000                     _SSP2ADD	set	3950
   142  0000                     _SSP2CON2	set	3947
   143  0000                     _SSP2CON1	set	3948
   144  0000                     _ADRESL	set	4035
   145  0000                     _ADRESH	set	4036
   146  0000                     _ADCON0bits	set	4034
   147  0000                     _T1CON	set	4045
   148  0000                     _RCSTA1bits	set	4012
   149  0000                     _PIR1bits	set	3998
   150  0000                     _PORTAbits	set	3968
   151  0000                     _PORTBbits	set	3969
   152  0000                     _LATDbits	set	3980
   153  0000                     _WDTCONbits	set	4032
   154  0000                     _INTCONbits	set	4082
   155  0000                     _IPR1bits	set	3999
   156  0000                     _RCONbits	set	4048
   157  0000                     _LATAbits	set	3977
   158  0000                     _LATCbits	set	3979
   159  0000                     _ACKEN2	set	31580
   160  0000                     _ACKDT2	set	31581
   161  0000                     _RCEN2	set	31579
   162  0000                     _PEN2	set	31578
   163  0000                     _RSEN2	set	31577
   164  0000                     _SEN2	set	31576
   165  0000                     _TRISD6	set	31918
   166  0000                     _TRISD5	set	31917
   167  0000                     _TMR1IE	set	31976
   168  0000                     _TMR1IF	set	31984
   169  0000                     _GIE	set	32663
   170                           
   171                           ; #config settings
   172  0000                     
   173                           	psect	cinit
   174  001CA0                     __pcinit:
   175                           	opt callstack 0
   176  001CA0                     start_initialization:
   177                           	opt callstack 0
   178  001CA0                     __initialization:
   179                           	opt callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (11 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  001CA0  0E98               	movlw	low __pidataCOMRAM
   184  001CA2  6EF6               	movwf	tblptrl,c
   185  001CA4  0E1F               	movlw	high __pidataCOMRAM
   186  001CA6  6EF7               	movwf	tblptrh,c
   187  001CA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001CAA  6EF8               	movwf	tblptru,c
   189  001CAC  EE00  F04E         	lfsr	0,__pdataCOMRAM
   190  001CB0  EE10 F00B          	lfsr	1,11
   191  001CB4                     copy_data0:
   192  001CB4  0009               	tblrd		*+
   193  001CB6  CFF5 FFEE          	movff	tablat,postinc0
   194  001CBA  50E5               	movf	postdec1,w,c
   195  001CBC  50E1               	movf	fsr1l,w,c
   196  001CBE  E1FA               	bnz	copy_data0
   197                           
   198                           ; Clear objects allocated to BANK0 (32 bytes)
   199  001CC0  EE00  F060         	lfsr	0,__pbssBANK0
   200  001CC4  0E20               	movlw	32
   201  001CC6                     clear_0:
   202  001CC6  6AEE               	clrf	postinc0,c
   203  001CC8  06E8               	decf	wreg,f,c
   204  001CCA  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to COMRAM (55 bytes)
   207  001CCC  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  001CD0  0E37               	movlw	55
   209  001CD2                     clear_1:
   210  001CD2  6AEE               	clrf	postinc0,c
   211  001CD4  06E8               	decf	wreg,f,c
   212  001CD6  E1FD               	bnz	clear_1
   213  001CD8                     end_of_initialization:
   214                           	opt callstack 0
   215  001CD8                     __end_of__initialization:
   216                           	opt callstack 0
   217  001CD8  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  001CDA  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  001CDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  001CDE  6EF8               	movwf	tblptru,c
   221  001CE0  0100               	movlb	0
   222  001CE2  EF4F  F001         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  000001                     __pbssCOMRAM:
   226                           	opt callstack 0
   227  000001                     _Serial_Buffer:
   228                           	opt callstack 0
   229  000001                     	ds	16
   230  000011                     _VOLTAGE:
   231                           	opt callstack 0
   232  000011                     	ds	2
   233  000013                     _IR_SENSORF:
   234                           	opt callstack 0
   235  000013                     	ds	2
   236  000015                     _i:
   237                           	opt callstack 0
   238  000015                     	ds	2
   239  000017                     _NUM_REC:
   240                           	opt callstack 0
   241  000017                     	ds	2
   242  000019                     _NUM:
   243                           	opt callstack 0
   244  000019                     	ds	2
   245  00001B                     _Motor_Pause_Time:
   246                           	opt callstack 0
   247  00001B                     	ds	2
   248  00001D                     _Device_ID:
   249                           	opt callstack 0
   250  00001D                     	ds	2
   251  00001F                     _Motor_Stop_Delay_Time:
   252                           	opt callstack 0
   253  00001F                     	ds	2
   254  000021                     _Motor_Speed:
   255                           	opt callstack 0
   256  000021                     	ds	2
   257  000023                     _ETemp:
   258                           	opt callstack 0
   259  000023                     	ds	2
   260  000025                     _EAdd_Low:
   261                           	opt callstack 0
   262  000025                     	ds	2
   263  000027                     _EAdd_High:
   264                           	opt callstack 0
   265  000027                     	ds	2
   266  000029                     _Serial_Count:
   267                           	opt callstack 0
   268  000029                     	ds	2
   269  00002B                     _TMR1IF_triggered:
   270                           	opt callstack 0
   271  00002B                     	ds	1
   272  00002C                     _PWM_Duty_Cycle:
   273                           	opt callstack 0
   274  00002C                     	ds	1
   275  00002D                     _delay_motor_stop_time:
   276                           	opt callstack 0
   277  00002D                     	ds	1
   278  00002E                     _vib_Time:
   279                           	opt callstack 0
   280  00002E                     	ds	1
   281  00002F                     _pause_Time:
   282                           	opt callstack 0
   283  00002F                     	ds	1
   284  000030                     _OpMode:
   285                           	opt callstack 0
   286  000030                     	ds	1
   287  000031                     _data:
   288                           	opt callstack 0
   289  000031                     	ds	1
   290  000032                     _vibration_mode:
   291                           	opt callstack 0
   292  000032                     	ds	1
   293  000033                     _Busy:
   294                           	opt callstack 0
   295  000033                     	ds	1
   296  000034                     _motor_status:
   297                           	opt callstack 0
   298  000034                     	ds	1
   299  000035                     _Stop:
   300                           	opt callstack 0
   301  000035                     	ds	1
   302  000036                     _Serial_GData:
   303                           	opt callstack 0
   304  000036                     	ds	1
   305  000037                     _Serial_Flag:
   306                           	opt callstack 0
   307  000037                     	ds	1
   308                           
   309                           	psect	dataCOMRAM
   310  00004E                     __pdataCOMRAM:
   311                           	opt callstack 0
   312  00004E                     _LowPowerCounter:
   313                           	opt callstack 0
   314  00004E                     	ds	4
   315  000052                     _errorcounter:
   316                           	opt callstack 0
   317  000052                     	ds	4
   318  000056                     _Vmotor_Time:
   319                           	opt callstack 0
   320  000056                     	ds	2
   321  000058                     _PWM_reg:
   322                           	opt callstack 0
   323  000058                     	ds	1
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt callstack 0
   328  000060                     _Serial_Buffer_Out:
   329                           	opt callstack 0
   330  000060                     	ds	16
   331  000070                     _Serial_Temp_Buffer:
   332                           	opt callstack 0
   333  000070                     	ds	16
   334                           
   335                           	psect	cstackBANK0
   336  000080                     __pcstackBANK0:
   337                           	opt callstack 0
   338  000080                     ?_read_i2c:
   339                           	opt callstack 0
   340  000080                     WriteSTLED316SData@NUM_DIG0:
   341                           	opt callstack 0
   342  000080                     write_i2c@address:
   343                           	opt callstack 0
   344  000080                     read_i2c@address:
   345                           	opt callstack 0
   346                           
   347                           ; 4 bytes @ 0x0
   348  000080                     	ds	2
   349  000082                     WriteSTLED316SData@NUM_DIG1:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x2
   353  000082                     	ds	2
   354  000084                     WriteSTLED316SData@data3:
   355                           	opt callstack 0
   356  000084                     write_i2c@data:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x4
   360  000084                     	ds	1
   361  000085                     WriteSTLED316SData@data4:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0x5
   365  000085                     	ds	1
   366  000086                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x6
   369  000086                     	ds	2
   370                           
   371                           	psect	cstackCOMRAM
   372  000038                     __pcstackCOMRAM:
   373                           	opt callstack 0
   374  000038                     Read1USART@result:
   375                           	opt callstack 0
   376  000038                     i2Write1USART@data:
   377                           	opt callstack 0
   378                           
   379                           ; 1 bytes @ 0x0
   380  000038                     	ds	1
   381  000039                     ??_high_isr:
   382                           
   383                           ; 1 bytes @ 0x1
   384  000039                     	ds	2
   385  00003B                     high_isr@Temp:
   386                           	opt callstack 0
   387                           
   388                           ; 1 bytes @ 0x3
   389  00003B                     	ds	1
   390  00003C                     high_isr@c:
   391                           	opt callstack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394  00003C                     	ds	1
   395  00003D                     high_isr@i:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  00003D                     	ds	1
   400  00003E                     ??_STLED316s_SPI_SendData:
   401  00003E                     ??_i2c_Wait:
   402  00003E                     ?_Read_IR:
   403                           	opt callstack 0
   404  00003E                     ?___awdiv:
   405                           	opt callstack 0
   406  00003E                     ?___awmod:
   407                           	opt callstack 0
   408  00003E                     ?___aldiv:
   409                           	opt callstack 0
   410  00003E                     Write1USART@data:
   411                           	opt callstack 0
   412  00003E                     delay_1ms@time:
   413                           	opt callstack 0
   414  00003E                     flush@i:
   415                           	opt callstack 0
   416  00003E                     flushOut@i:
   417                           	opt callstack 0
   418  00003E                     Get7Seg@Digit:
   419                           	opt callstack 0
   420  00003E                     ___awdiv@dividend:
   421                           	opt callstack 0
   422  00003E                     ___awmod@dividend:
   423                           	opt callstack 0
   424  00003E                     ___aldiv@dividend:
   425                           	opt callstack 0
   426                           
   427                           ; 4 bytes @ 0x6
   428  00003E                     	ds	1
   429  00003F                     ?_i2c_Read:
   430                           	opt callstack 0
   431  00003F                     i2c_Write@data:
   432                           	opt callstack 0
   433  00003F                     i2c_Address@mode:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0x7
   437  00003F                     	ds	1
   438  000040                     ??_delay_1ms:
   439  000040                     ??_Get7Seg:
   440  000040                     STLED316s_SPI_SendData@Data:
   441                           	opt callstack 0
   442  000040                     i2c_Address@address:
   443                           	opt callstack 0
   444  000040                     readWeighingData@i:
   445                           	opt callstack 0
   446  000040                     ___awdiv@divisor:
   447                           	opt callstack 0
   448  000040                     ___awmod@divisor:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x8
   452  000040                     	ds	1
   453  000041                     ??_AD_capture_BattVoltage:
   454  000041                     STLED316s_SPI_SendData@temp:
   455                           	opt callstack 0
   456  000041                     i2c_Address@l_address:
   457                           	opt callstack 0
   458  000041                     i2c_Read@ack:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x9
   462  000041                     	ds	1
   463  000042                     STLED316s_SPI_SendData@i:
   464                           	opt callstack 0
   465  000042                     Get7Seg@Data:
   466                           	opt callstack 0
   467  000042                     i2c_Read@i2cReadData:
   468                           	opt callstack 0
   469  000042                     ___awdiv@counter:
   470                           	opt callstack 0
   471  000042                     ___awmod@counter:
   472                           	opt callstack 0
   473  000042                     ___aldiv@divisor:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0xA
   477  000042                     	ds	1
   478  000043                     STLED316s_SPI_SendData@t:
   479                           	opt callstack 0
   480  000043                     ___awdiv@sign:
   481                           	opt callstack 0
   482  000043                     ___awmod@sign:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0xB
   486  000043                     	ds	1
   487  000044                     ??_InitSTLED316:
   488  000044                     ??_WriteSTLED316SErr:
   489  000044                     ??_WriteSTLED316SMode:
   490  000044                     WriteSTLED316SVibMode@v_mode:
   491                           	opt callstack 0
   492  000044                     ___awdiv@quotient:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0xC
   496  000044                     	ds	2
   497  000046                     InitSTLED316@Brightness:
   498                           	opt callstack 0
   499  000046                     WriteSTLED316SMode@msg:
   500                           	opt callstack 0
   501  000046                     WriteSTLED316SErr@msg:
   502                           	opt callstack 0
   503  000046                     ___aldiv@counter:
   504                           	opt callstack 0
   505  000046                     WriteSTLED316SData@number:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0xE
   509  000046                     	ds	1
   510  000047                     ??_MotorPosition_Init:
   511  000047                     ??_Homing_Again_Auto:
   512  000047                     ___aldiv@sign:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0xF
   516  000047                     	ds	1
   517  000048                     WriteSTLED316SData@v_mode:
   518                           	opt callstack 0
   519  000048                     ___aldiv@quotient:
   520                           	opt callstack 0
   521                           
   522                           ; 4 bytes @ 0x10
   523  000048                     	ds	1
   524  000049                     ??_Homing_Again_Manual:
   525                           
   526                           ; 1 bytes @ 0x11
   527  000049                     	ds	3
   528  00004C                     read_i2c@read_byte:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x14
   532  00004C                     	ds	2
   533                           
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 124 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels required when called:    6
   559 ;; This function calls:
   560 ;;		_AD_capture_BattVoltage
   561 ;;		_Homing_Again_Auto
   562 ;;		_Homing_Again_Manual
   563 ;;		_InitSTLED316
   564 ;;		_InitTimer1
   565 ;;		_MotorPosition_Init
   566 ;;		_ToggleVIB_Mode
   567 ;;		_Write1USART
   568 ;;		_WriteSTLED316SData
   569 ;;		_WriteSTLED316SVibMode
   570 ;;		_flush
   571 ;;		_flushOut
   572 ;;		_i2c_Init
   573 ;;		_init
   574 ;;		_initMotor
   575 ;;		_initUSART
   576 ;;		_read_i2c
   577 ;;		_write_i2c
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  00029E                     __ptext0:
   585                           	opt callstack 0
   586  00029E                     _main:
   587                           	opt callstack 25
   588  00029E                     
   589                           ;main.c: 126:     GIE = 0;
   590  00029E  9EF2               	bcf	4082,7,c	;volatile
   591  0002A0                     
   592                           ;main.c: 127:     init();
   593  0002A0  EC67  F00D         	call	_init	;wreg free
   594  0002A4                     
   595                           ;main.c: 128:     InitSTLED316(0x77);
   596  0002A4  0E77               	movlw	119
   597  0002A6  ECE1  F00C         	call	_InitSTLED316
   598  0002AA                     
   599                           ;main.c: 129:     initMotor();
   600  0002AA  ECB9  F00F         	call	_initMotor	;wreg free
   601  0002AE                     
   602                           ;main.c: 130:     i2c_Init();
   603  0002AE  EC8E  F00F         	call	_i2c_Init	;wreg free
   604  0002B2                     
   605                           ;main.c: 131:     initUSART();
   606  0002B2  EC37  F00F         	call	_initUSART	;wreg free
   607  0002B6                     
   608                           ;main.c: 132:     InitTimer1();
   609  0002B6  EC82  F00F         	call	_InitTimer1	;wreg free
   610  0002BA                     
   611                           ;main.c: 134:     LATCbits.LATC1 = 0;
   612  0002BA  928B               	bcf	139,1,c	;volatile
   613  0002BC                     
   614                           ;main.c: 135:     LATAbits.LATA2 = 0;
   615  0002BC  9489               	bcf	137,2,c	;volatile
   616  0002BE                     
   617                           ;main.c: 136:     errorcounter = 30;
   618  0002BE  0E1E               	movlw	30
   619  0002C0  6E52               	movwf	_errorcounter^0,c	;volatile
   620  0002C2  0E00               	movlw	0
   621  0002C4  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   622  0002C6  0E00               	movlw	0
   623  0002C8  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   624  0002CA  0E00               	movlw	0
   625  0002CC  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   626  0002CE                     
   627                           ;main.c: 140:    RCONbits.IPEN = 1;
   628  0002CE  8ED0               	bsf	208,7,c	;volatile
   629  0002D0                     
   630                           ;main.c: 143:    IPR1bits.RCIP = 1;
   631  0002D0  8A9F               	bsf	159,5,c	;volatile
   632  0002D2                     
   633                           ;main.c: 146:    INTCONbits.GIEH = 1;
   634  0002D2  8EF2               	bsf	242,7,c	;volatile
   635  0002D4                     
   636                           ;main.c: 147:     INTCONbits.GIE=1;
   637  0002D4  8EF2               	bsf	242,7,c	;volatile
   638  0002D6                     
   639                           ;main.c: 152:     WDTCONbits.SWDTEN = 0;
   640  0002D6  90C0               	bcf	192,0,c	;volatile
   641  0002D8                     
   642                           ;main.c: 154:     LATDbits.LATD0 = 1;
   643  0002D8  808C               	bsf	140,0,c	;volatile
   644  0002DA                     
   645                           ;main.c: 155:     LATDbits.LATD1 = 1;
   646  0002DA  828C               	bsf	140,1,c	;volatile
   647  0002DC                     
   648                           ;main.c: 157:     WriteSTLED316SData(33, 0xFF);
   649  0002DC  0E00               	movlw	0
   650  0002DE  6E47               	movwf	(WriteSTLED316SData@number+1)^0,c
   651  0002E0  0E21               	movlw	33
   652  0002E2  6E46               	movwf	WriteSTLED316SData@number^0,c
   653  0002E4  0EFF               	movlw	255
   654  0002E6  6E48               	movwf	WriteSTLED316SData@v_mode^0,c
   655  0002E8  EC8A  F00C         	call	_WriteSTLED316SData	;wreg free
   656  0002EC                     
   657                           ;main.c: 158:     _delay((unsigned long)((500)*(8000000/4000.0)));
   658  0002EC  0E06               	movlw	6
   659  0002EE  0100               	movlb	0	; () banked
   660  0002F0  6F87               	movwf	(??_main+1)& (0+255),b
   661  0002F2  0E13               	movlw	19
   662  0002F4  6F86               	movwf	??_main& (0+255),b
   663  0002F6  0EAD               	movlw	173
   664  0002F8                     u3687:
   665  0002F8  2EE8               	decfsz	wreg,f,c
   666  0002FA  D7FE               	bra	u3687
   667  0002FC  2F86               	decfsz	??_main& (0+255),f,b
   668  0002FE  D7FC               	bra	u3687
   669  000300  2F87               	decfsz	(??_main+1)& (0+255),f,b
   670  000302  D7FA               	bra	u3687
   671  000304  D000               	nop2	
   672  000306                     
   673                           ;main.c: 159:     AD_capture_BattVoltage();
   674  000306  EC92  F00E         	call	_AD_capture_BattVoltage	;wreg free
   675  00030A                     
   676                           ;main.c: 167:     INTCONbits.GIE=0;
   677  00030A  9EF2               	bcf	242,7,c	;volatile
   678  00030C                     
   679                           ;main.c: 168:     ETemp = read_i2c(0x0010);
   680  00030C  0E10               	movlw	16
   681  00030E  0100               	movlb	0	; () banked
   682  000310  6F80               	movwf	read_i2c@address& (0+255),b
   683  000312  0E00               	movlw	0
   684  000314  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   685  000316  0E00               	movlw	0
   686  000318  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   687  00031A  0E00               	movlw	0
   688  00031C  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   689  00031E  ECA0  F00D         	call	_read_i2c	;wreg free
   690  000322  C080  F023         	movff	?_read_i2c,_ETemp
   691  000326  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   692  00032A                     
   693                           ;main.c: 169:     INTCONbits.GIE=1;
   694  00032A  8EF2               	bsf	242,7,c	;volatile
   695  00032C                     
   696                           ;main.c: 171:     vibration_mode = ETemp & 0x00FF;
   697  00032C  C023  F032         	movff	_ETemp,_vibration_mode
   698  000330                     
   699                           ;main.c: 172:     if(vibration_mode>1)
   700  000330  0E01               	movlw	1
   701  000332  6432               	cpfsgt	_vibration_mode^0,c
   702  000334  EF9E  F001         	goto	u3241
   703  000338  EFA0  F001         	goto	u3240
   704  00033C                     u3241:
   705  00033C  EFB2  F001         	goto	l4962
   706  000340                     u3240:
   707  000340                     
   708                           ;main.c: 173:     {;main.c: 174:         vibration_mode = 1;
   709  000340  0E01               	movlw	1
   710  000342  6E32               	movwf	_vibration_mode^0,c
   711  000344                     
   712                           ;main.c: 176:         INTCONbits.GIE=0;
   713  000344  9EF2               	bcf	242,7,c	;volatile
   714  000346                     
   715                           ;main.c: 177:         write_i2c(0x0010, vibration_mode);
   716  000346  0E10               	movlw	16
   717  000348  0100               	movlb	0	; () banked
   718  00034A  6F80               	movwf	write_i2c@address& (0+255),b
   719  00034C  0E00               	movlw	0
   720  00034E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   721  000350  0E00               	movlw	0
   722  000352  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   723  000354  0E00               	movlw	0
   724  000356  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   725  000358  C032  F084         	movff	_vibration_mode,write_i2c@data
   726  00035C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   727  00035E  EC29  F00E         	call	_write_i2c	;wreg free
   728  000362                     
   729                           ;main.c: 178:         INTCONbits.GIE=1;
   730  000362  8EF2               	bsf	242,7,c	;volatile
   731  000364                     l4962:
   732                           
   733                           ;main.c: 181:     NUM = 1;
   734  000364  0E00               	movlw	0
   735  000366  6E1A               	movwf	(_NUM+1)^0,c
   736  000368  0E01               	movlw	1
   737  00036A  6E19               	movwf	_NUM^0,c
   738                           
   739                           ;main.c: 182:     WriteSTLED316SData(NUM, vibration_mode);
   740  00036C  C019  F046         	movff	_NUM,WriteSTLED316SData@number
   741  000370  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
   742  000374  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   743  000378  EC8A  F00C         	call	_WriteSTLED316SData	;wreg free
   744  00037C                     
   745                           ;main.c: 183:     NUM_REC = 1;
   746  00037C  0E00               	movlw	0
   747  00037E  6E18               	movwf	(_NUM_REC+1)^0,c
   748  000380  0E01               	movlw	1
   749  000382  6E17               	movwf	_NUM_REC^0,c
   750  000384                     
   751                           ;main.c: 188:     INTCONbits.GIE=0;
   752  000384  9EF2               	bcf	242,7,c	;volatile
   753  000386                     
   754                           ;main.c: 189:     ETemp = read_i2c(0x0020);
   755  000386  0E20               	movlw	32
   756  000388  0100               	movlb	0	; () banked
   757  00038A  6F80               	movwf	read_i2c@address& (0+255),b
   758  00038C  0E00               	movlw	0
   759  00038E  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   760  000390  0E00               	movlw	0
   761  000392  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   762  000394  0E00               	movlw	0
   763  000396  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   764  000398  ECA0  F00D         	call	_read_i2c	;wreg free
   765  00039C  C080  F023         	movff	?_read_i2c,_ETemp
   766  0003A0  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   767  0003A4                     
   768                           ;main.c: 190:     INTCONbits.GIE=1;
   769  0003A4  8EF2               	bsf	242,7,c	;volatile
   770                           
   771                           ;main.c: 192:     Device_ID = ETemp & 0x00FF;
   772  0003A6  5023               	movf	_ETemp^0,w,c
   773  0003A8  6E1D               	movwf	_Device_ID^0,c
   774  0003AA  6A1E               	clrf	(_Device_ID+1)^0,c
   775  0003AC                     
   776                           ;main.c: 193:     if(Device_ID<0x31 || Device_ID>0x3A)
   777  0003AC  501E               	movf	(_Device_ID+1)^0,w,c
   778  0003AE  E109               	bnz	u3250
   779  0003B0  0E31               	movlw	49
   780  0003B2  5C1D               	subwf	_Device_ID^0,w,c
   781  0003B4  A0D8               	btfss	status,0,c
   782  0003B6  EFDF  F001         	goto	u3251
   783  0003BA  EFE1  F001         	goto	u3250
   784  0003BE                     u3251:
   785  0003BE  EFEC  F001         	goto	l4976
   786  0003C2                     u3250:
   787  0003C2  501E               	movf	(_Device_ID+1)^0,w,c
   788  0003C4  E109               	bnz	u3260
   789  0003C6  0E3B               	movlw	59
   790  0003C8  5C1D               	subwf	_Device_ID^0,w,c
   791  0003CA  A0D8               	btfss	status,0,c
   792  0003CC  EFEA  F001         	goto	u3261
   793  0003D0  EFEC  F001         	goto	u3260
   794  0003D4                     u3261:
   795  0003D4  EF01  F002         	goto	l4984
   796  0003D8                     u3260:
   797  0003D8                     l4976:
   798                           
   799                           ;main.c: 194:     {;main.c: 195:         Device_ID=0x31;
   800  0003D8  0E00               	movlw	0
   801  0003DA  6E1E               	movwf	(_Device_ID+1)^0,c
   802  0003DC  0E31               	movlw	49
   803  0003DE  6E1D               	movwf	_Device_ID^0,c
   804  0003E0                     
   805                           ;main.c: 197:         INTCONbits.GIE=0;
   806  0003E0  9EF2               	bcf	242,7,c	;volatile
   807  0003E2                     
   808                           ;main.c: 198:         write_i2c(0x0020, Device_ID);
   809  0003E2  0E20               	movlw	32
   810  0003E4  0100               	movlb	0	; () banked
   811  0003E6  6F80               	movwf	write_i2c@address& (0+255),b
   812  0003E8  0E00               	movlw	0
   813  0003EA  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   814  0003EC  0E00               	movlw	0
   815  0003EE  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   816  0003F0  0E00               	movlw	0
   817  0003F2  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   818  0003F4  C01D  F084         	movff	_Device_ID,write_i2c@data
   819  0003F8  C01E  F085         	movff	_Device_ID+1,write_i2c@data+1
   820  0003FC  EC29  F00E         	call	_write_i2c	;wreg free
   821  000400                     
   822                           ;main.c: 199:         INTCONbits.GIE=1;
   823  000400  8EF2               	bsf	242,7,c	;volatile
   824  000402                     l4984:
   825                           
   826                           ;main.c: 205:     INTCONbits.GIE=0;
   827  000402  9EF2               	bcf	242,7,c	;volatile
   828  000404                     
   829                           ;main.c: 206:     ETemp = read_i2c(0x0060);
   830  000404  0E60               	movlw	96
   831  000406  0100               	movlb	0	; () banked
   832  000408  6F80               	movwf	read_i2c@address& (0+255),b
   833  00040A  0E00               	movlw	0
   834  00040C  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   835  00040E  0E00               	movlw	0
   836  000410  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   837  000412  0E00               	movlw	0
   838  000414  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   839  000416  ECA0  F00D         	call	_read_i2c	;wreg free
   840  00041A  C080  F023         	movff	?_read_i2c,_ETemp
   841  00041E  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   842  000422                     
   843                           ;main.c: 207:     INTCONbits.GIE=1;
   844  000422  8EF2               	bsf	242,7,c	;volatile
   845  000424                     
   846                           ;main.c: 209:     pause_Time = ETemp & 0x00FF;
   847  000424  C023  F02F         	movff	_ETemp,_pause_Time	;volatile
   848  000428                     
   849                           ;main.c: 210:     if(pause_Time<0x30 || pause_Time>0x35)
   850  000428  0E2F               	movlw	47
   851  00042A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   852  00042C  EF1A  F002         	goto	u3271
   853  000430  EF1C  F002         	goto	u3270
   854  000434                     u3271:
   855  000434  EF24  F002         	goto	l4996
   856  000438                     u3270:
   857  000438  0E35               	movlw	53
   858  00043A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   859  00043C  EF22  F002         	goto	u3281
   860  000440  EF24  F002         	goto	u3280
   861  000444                     u3281:
   862  000444  EF62  F002         	goto	l5018
   863  000448                     u3280:
   864  000448                     l4996:
   865                           
   866                           ;main.c: 211:     {;main.c: 212:         pause_Time = 0x30;
   867  000448  0E30               	movlw	48
   868  00044A  6E2F               	movwf	_pause_Time^0,c	;volatile
   869                           
   870                           ;main.c: 213:         Motor_Pause_Time=0;
   871  00044C  0E00               	movlw	0
   872  00044E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   873  000450  0E00               	movlw	0
   874  000452  6E1B               	movwf	_Motor_Pause_Time^0,c
   875  000454                     
   876                           ;main.c: 215:         INTCONbits.GIE=0;
   877  000454  9EF2               	bcf	242,7,c	;volatile
   878  000456                     
   879                           ;main.c: 216:         write_i2c(0x0060, pause_Time);
   880  000456  0E60               	movlw	96
   881  000458  0100               	movlb	0	; () banked
   882  00045A  6F80               	movwf	write_i2c@address& (0+255),b
   883  00045C  0E00               	movlw	0
   884  00045E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   885  000460  0E00               	movlw	0
   886  000462  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   887  000464  0E00               	movlw	0
   888  000466  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   889  000468  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
   890  00046C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   891  00046E  EC29  F00E         	call	_write_i2c	;wreg free
   892  000472                     
   893                           ;main.c: 217:         INTCONbits.GIE=1;
   894  000472  8EF2               	bsf	242,7,c	;volatile
   895                           
   896                           ;main.c: 218:     }
   897  000474  EF88  F002         	goto	l168
   898  000478                     l5004:
   899                           
   900                           ; BSR set to: 0
   901                           ;main.c: 225:                 Motor_Pause_Time = 0;
   902  000478  0E00               	movlw	0
   903  00047A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   904  00047C  0E00               	movlw	0
   905  00047E  6E1B               	movwf	_Motor_Pause_Time^0,c
   906                           
   907                           ;main.c: 226:                 pause_Time = 0x30;
   908  000480  0E30               	movlw	48
   909  000482  6E2F               	movwf	_pause_Time^0,c	;volatile
   910                           
   911                           ;main.c: 227:                 break;
   912  000484  EF88  F002         	goto	l168
   913  000488                     l5006:
   914                           
   915                           ; BSR set to: 0
   916                           ;main.c: 230:                 Motor_Pause_Time = 1000;
   917  000488  0E03               	movlw	3
   918  00048A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   919  00048C  0EE8               	movlw	232
   920  00048E  6E1B               	movwf	_Motor_Pause_Time^0,c
   921                           
   922                           ;main.c: 231:                 break;
   923  000490  EF88  F002         	goto	l168
   924  000494                     l5008:
   925                           
   926                           ; BSR set to: 0
   927                           ;main.c: 234:                 Motor_Pause_Time = 2000;
   928  000494  0E07               	movlw	7
   929  000496  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   930  000498  0ED0               	movlw	208
   931  00049A  6E1B               	movwf	_Motor_Pause_Time^0,c
   932                           
   933                           ;main.c: 235:                 break;
   934  00049C  EF88  F002         	goto	l168
   935  0004A0                     l5010:
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 238:                  Motor_Pause_Time = 3000;
   939  0004A0  0E0B               	movlw	11
   940  0004A2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   941  0004A4  0EB8               	movlw	184
   942  0004A6  6E1B               	movwf	_Motor_Pause_Time^0,c
   943                           
   944                           ;main.c: 239:                 break;
   945  0004A8  EF88  F002         	goto	l168
   946  0004AC                     l5012:
   947                           
   948                           ; BSR set to: 0
   949                           ;main.c: 242:                 Motor_Pause_Time = 4000;
   950  0004AC  0E0F               	movlw	15
   951  0004AE  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   952  0004B0  0EA0               	movlw	160
   953  0004B2  6E1B               	movwf	_Motor_Pause_Time^0,c
   954                           
   955                           ;main.c: 243:                 break;
   956  0004B4  EF88  F002         	goto	l168
   957  0004B8                     l5014:
   958                           
   959                           ; BSR set to: 0
   960                           ;main.c: 246:                 Motor_Pause_Time = 5000;
   961  0004B8  0E13               	movlw	19
   962  0004BA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   963  0004BC  0E88               	movlw	136
   964  0004BE  6E1B               	movwf	_Motor_Pause_Time^0,c
   965                           
   966                           ;main.c: 247:                 break;
   967  0004C0  EF88  F002         	goto	l168
   968  0004C4                     l5018:
   969  0004C4  502F               	movf	_pause_Time^0,w,c	;volatile
   970  0004C6  0100               	movlb	0	; () banked
   971  0004C8  6F86               	movwf	??_main& (0+255),b
   972  0004CA  6B87               	clrf	(??_main+1)& (0+255),b
   973                           
   974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 1, Range of values is 0 to 0
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte            4     3 (average)
   980                           ;	Chosen strategy is simple_byte
   981  0004CC  5187               	movf	(??_main+1)& (0+255),w,b
   982  0004CE  0A00               	xorlw	0	; case 0
   983  0004D0  B4D8               	btfsc	status,2,c
   984  0004D2  EF6D  F002         	goto	l5654
   985  0004D6  EF3C  F002         	goto	l5004
   986  0004DA                     l5654:
   987                           
   988                           ; BSR set to: 0
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 6, Range of values is 48 to 53
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           19    10 (average)
   994                           ;	Chosen strategy is simple_byte
   995  0004DA  5186               	movf	??_main& (0+255),w,b
   996  0004DC  0A30               	xorlw	48	; case 48
   997  0004DE  B4D8               	btfsc	status,2,c
   998  0004E0  EF3C  F002         	goto	l5004
   999  0004E4  0A01               	xorlw	1	; case 49
  1000  0004E6  B4D8               	btfsc	status,2,c
  1001  0004E8  EF44  F002         	goto	l5006
  1002  0004EC  0A03               	xorlw	3	; case 50
  1003  0004EE  B4D8               	btfsc	status,2,c
  1004  0004F0  EF4A  F002         	goto	l5008
  1005  0004F4  0A01               	xorlw	1	; case 51
  1006  0004F6  B4D8               	btfsc	status,2,c
  1007  0004F8  EF50  F002         	goto	l5010
  1008  0004FC  0A07               	xorlw	7	; case 52
  1009  0004FE  B4D8               	btfsc	status,2,c
  1010  000500  EF56  F002         	goto	l5012
  1011  000504  0A01               	xorlw	1	; case 53
  1012  000506  B4D8               	btfsc	status,2,c
  1013  000508  EF5C  F002         	goto	l5014
  1014  00050C  EF3C  F002         	goto	l5004
  1015  000510                     l168:
  1016                           
  1017                           ;main.c: 254:     INTCONbits.GIE=0;
  1018  000510  9EF2               	bcf	242,7,c	;volatile
  1019  000512                     
  1020                           ;main.c: 255:     ETemp = read_i2c(0x0050);
  1021  000512  0E50               	movlw	80
  1022  000514  0100               	movlb	0	; () banked
  1023  000516  6F80               	movwf	read_i2c@address& (0+255),b
  1024  000518  0E00               	movlw	0
  1025  00051A  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1026  00051C  0E00               	movlw	0
  1027  00051E  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1028  000520  0E00               	movlw	0
  1029  000522  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1030  000524  ECA0  F00D         	call	_read_i2c	;wreg free
  1031  000528  C080  F023         	movff	?_read_i2c,_ETemp
  1032  00052C  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1033  000530                     
  1034                           ;main.c: 256:     INTCONbits.GIE=1;
  1035  000530  8EF2               	bsf	242,7,c	;volatile
  1036  000532                     
  1037                           ;main.c: 258:     delay_motor_stop_time = ETemp & 0x00FF;
  1038  000532  C023  F02D         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1039  000536                     
  1040                           ;main.c: 259:     if(delay_motor_stop_time>0x96)
  1041  000536  0E96               	movlw	150
  1042  000538  642D               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1043  00053A  EFA1  F002         	goto	u3291
  1044  00053E  EFA3  F002         	goto	u3290
  1045  000542                     u3291:
  1046  000542  EFBB  F002         	goto	l178
  1047  000546                     u3290:
  1048  000546                     
  1049                           ;main.c: 260:     {;main.c: 261:         delay_motor_stop_time=0x00;
  1050  000546  0E00               	movlw	0
  1051  000548  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  1052  00054A                     
  1053                           ;main.c: 263:         INTCONbits.GIE=0;
  1054  00054A  9EF2               	bcf	242,7,c	;volatile
  1055  00054C                     
  1056                           ;main.c: 264:         write_i2c(0x0050, delay_motor_stop_time);
  1057  00054C  0E50               	movlw	80
  1058  00054E  0100               	movlb	0	; () banked
  1059  000550  6F80               	movwf	write_i2c@address& (0+255),b
  1060  000552  0E00               	movlw	0
  1061  000554  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1062  000556  0E00               	movlw	0
  1063  000558  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1064  00055A  0E00               	movlw	0
  1065  00055C  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1066  00055E  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1067  000562  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1068  000564  EC29  F00E         	call	_write_i2c	;wreg free
  1069  000568                     
  1070                           ;main.c: 265:         INTCONbits.GIE=1;
  1071  000568  8EF2               	bsf	242,7,c	;volatile
  1072  00056A                     
  1073                           ;main.c: 267:         Motor_Stop_Delay_Time=0;
  1074  00056A  0E00               	movlw	0
  1075  00056C  6E20               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1076  00056E  0E00               	movlw	0
  1077  000570  6E1F               	movwf	_Motor_Stop_Delay_Time^0,c
  1078                           
  1079                           ;main.c: 268:     }
  1080  000572  EFBE  F002         	goto	l179
  1081  000576                     l178:
  1082                           
  1083                           ;main.c: 270:     {;main.c: 271:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1084  000576  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1085  00057A  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1086  00057C                     l179:
  1087                           
  1088                           ;main.c: 277:     INTCONbits.GIE=0;
  1089  00057C  9EF2               	bcf	242,7,c	;volatile
  1090  00057E                     
  1091                           ;main.c: 278:     ETemp = read_i2c(0x0040);
  1092  00057E  0E40               	movlw	64
  1093  000580  0100               	movlb	0	; () banked
  1094  000582  6F80               	movwf	read_i2c@address& (0+255),b
  1095  000584  0E00               	movlw	0
  1096  000586  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1097  000588  0E00               	movlw	0
  1098  00058A  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1099  00058C  0E00               	movlw	0
  1100  00058E  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1101  000590  ECA0  F00D         	call	_read_i2c	;wreg free
  1102  000594  C080  F023         	movff	?_read_i2c,_ETemp
  1103  000598  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1104  00059C                     
  1105                           ;main.c: 279:     INTCONbits.GIE=1
  1106  00059C  8EF2               	bsf	242,7,c	;volatile
  1107  00059E                     
  1108                           ;main.c: 281:     vib_Time = ETemp & 0x00FF;
  1109  00059E  C023  F02E         	movff	_ETemp,_vib_Time	;volatile
  1110  0005A2                     
  1111                           ;main.c: 282:     if( (vib_Time!=0x81 && vib_Time!=0x82 && vib_Time!=0x83 && vib_Time!=0
      +                          x84 && vib_Time!=0x85) )
  1112  0005A2  0E81               	movlw	129
  1113  0005A4  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1114  0005A6  B4D8               	btfsc	status,2,c
  1115  0005A8  EFD8  F002         	goto	u3301
  1116  0005AC  EFDA  F002         	goto	u3300
  1117  0005B0                     u3301:
  1118  0005B0  EF36  F003         	goto	l5074
  1119  0005B4                     u3300:
  1120  0005B4  0E82               	movlw	130
  1121  0005B6  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1122  0005B8  B4D8               	btfsc	status,2,c
  1123  0005BA  EFE1  F002         	goto	u3311
  1124  0005BE  EFE3  F002         	goto	u3310
  1125  0005C2                     u3311:
  1126  0005C2  EF36  F003         	goto	l5074
  1127  0005C6                     u3310:
  1128  0005C6  0E83               	movlw	131
  1129  0005C8  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1130  0005CA  B4D8               	btfsc	status,2,c
  1131  0005CC  EFEA  F002         	goto	u3321
  1132  0005D0  EFEC  F002         	goto	u3320
  1133  0005D4                     u3321:
  1134  0005D4  EF36  F003         	goto	l5074
  1135  0005D8                     u3320:
  1136  0005D8  0E84               	movlw	132
  1137  0005DA  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1138  0005DC  B4D8               	btfsc	status,2,c
  1139  0005DE  EFF3  F002         	goto	u3331
  1140  0005E2  EFF5  F002         	goto	u3330
  1141  0005E6                     u3331:
  1142  0005E6  EF36  F003         	goto	l5074
  1143  0005EA                     u3330:
  1144  0005EA  0E85               	movlw	133
  1145  0005EC  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1146  0005EE  B4D8               	btfsc	status,2,c
  1147  0005F0  EFFC  F002         	goto	u3341
  1148  0005F4  EFFE  F002         	goto	u3340
  1149  0005F8                     u3341:
  1150  0005F8  EF36  F003         	goto	l5074
  1151  0005FC                     u3340:
  1152  0005FC                     
  1153                           ;main.c: 283:     {;main.c: 284:         Vmotor_Time = 2000;
  1154  0005FC  0E07               	movlw	7
  1155  0005FE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1156  000600  0ED0               	movlw	208
  1157  000602  6E56               	movwf	_Vmotor_Time^0,c
  1158                           
  1159                           ;main.c: 285:         vib_Time = 0x82;
  1160  000604  0E82               	movlw	130
  1161  000606  6E2E               	movwf	_vib_Time^0,c	;volatile
  1162  000608                     
  1163                           ;main.c: 287:         INTCONbits.GIE=0;
  1164  000608  9EF2               	bcf	242,7,c	;volatile
  1165  00060A                     
  1166                           ;main.c: 288:         write_i2c(0x0040,vib_Time);
  1167  00060A  0E40               	movlw	64
  1168  00060C  0100               	movlb	0	; () banked
  1169  00060E  6F80               	movwf	write_i2c@address& (0+255),b
  1170  000610  0E00               	movlw	0
  1171  000612  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1172  000614  0E00               	movlw	0
  1173  000616  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1174  000618  0E00               	movlw	0
  1175  00061A  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1176  00061C  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  1177  000620  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1178  000622  EC29  F00E         	call	_write_i2c	;wreg free
  1179  000626                     
  1180                           ;main.c: 289:         INTCONbits.GIE=1;
  1181  000626  8EF2               	bsf	242,7,c	;volatile
  1182                           
  1183                           ;main.c: 290:     }
  1184  000628  EF58  F003         	goto	l5076
  1185  00062C                     l5062:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 296:                 Vmotor_Time=1000;
  1189  00062C  0E03               	movlw	3
  1190  00062E  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1191  000630  0EE8               	movlw	232
  1192  000632  6E56               	movwf	_Vmotor_Time^0,c
  1193                           
  1194                           ;main.c: 297:                 break;
  1195  000634  EF58  F003         	goto	l5076
  1196  000638                     l5064:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 300:                 Vmotor_Time=2000;
  1200  000638  0E07               	movlw	7
  1201  00063A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1202  00063C  0ED0               	movlw	208
  1203  00063E  6E56               	movwf	_Vmotor_Time^0,c
  1204                           
  1205                           ;main.c: 301:                 vib_Time=0x82;
  1206  000640  0E82               	movlw	130
  1207  000642  6E2E               	movwf	_vib_Time^0,c	;volatile
  1208                           
  1209                           ;main.c: 302:                 break;
  1210  000644  EF58  F003         	goto	l5076
  1211  000648                     l5066:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;main.c: 304:                 Vmotor_Time=3000;
  1215  000648  0E0B               	movlw	11
  1216  00064A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1217  00064C  0EB8               	movlw	184
  1218  00064E  6E56               	movwf	_Vmotor_Time^0,c
  1219                           
  1220                           ;main.c: 305:                 break;
  1221  000650  EF58  F003         	goto	l5076
  1222  000654                     l5068:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 307:                 Vmotor_Time=4000;
  1226  000654  0E0F               	movlw	15
  1227  000656  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1228  000658  0EA0               	movlw	160
  1229  00065A  6E56               	movwf	_Vmotor_Time^0,c
  1230                           
  1231                           ;main.c: 308:                 break;
  1232  00065C  EF58  F003         	goto	l5076
  1233  000660                     l5070:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 310:                 Vmotor_Time=5000;
  1237  000660  0E13               	movlw	19
  1238  000662  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1239  000664  0E88               	movlw	136
  1240  000666  6E56               	movwf	_Vmotor_Time^0,c
  1241                           
  1242                           ;main.c: 311:                 break;
  1243  000668  EF58  F003         	goto	l5076
  1244  00066C                     l5074:
  1245  00066C  502E               	movf	_vib_Time^0,w,c	;volatile
  1246  00066E  0100               	movlb	0	; () banked
  1247  000670  6F86               	movwf	??_main& (0+255),b
  1248  000672  6B87               	clrf	(??_main+1)& (0+255),b
  1249                           
  1250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 1, Range of values is 0 to 0
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte            4     3 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257  000674  5187               	movf	(??_main+1)& (0+255),w,b
  1258  000676  0A00               	xorlw	0	; case 0
  1259  000678  B4D8               	btfsc	status,2,c
  1260  00067A  EF41  F003         	goto	l5656
  1261  00067E  EF1C  F003         	goto	l5064
  1262  000682                     l5656:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ; Switch size 1, requested type "simple"
  1266                           ; Number of cases is 5, Range of values is 129 to 133
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte           16     9 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271  000682  5186               	movf	??_main& (0+255),w,b
  1272  000684  0A81               	xorlw	129	; case 129
  1273  000686  B4D8               	btfsc	status,2,c
  1274  000688  EF16  F003         	goto	l5062
  1275  00068C  0A03               	xorlw	3	; case 130
  1276  00068E  B4D8               	btfsc	status,2,c
  1277  000690  EF1C  F003         	goto	l5064
  1278  000694  0A01               	xorlw	1	; case 131
  1279  000696  B4D8               	btfsc	status,2,c
  1280  000698  EF24  F003         	goto	l5066
  1281  00069C  0A07               	xorlw	7	; case 132
  1282  00069E  B4D8               	btfsc	status,2,c
  1283  0006A0  EF2A  F003         	goto	l5068
  1284  0006A4  0A01               	xorlw	1	; case 133
  1285  0006A6  B4D8               	btfsc	status,2,c
  1286  0006A8  EF30  F003         	goto	l5070
  1287  0006AC  EF1C  F003         	goto	l5064
  1288  0006B0                     l5076:
  1289                           
  1290                           ;main.c: 318:     PWM_reg = 0x3F;
  1291  0006B0  0E3F               	movlw	63
  1292  0006B2  6E58               	movwf	_PWM_reg^0,c
  1293  0006B4                     
  1294                           ;main.c: 320:     INTCONbits.GIE=0;
  1295  0006B4  9EF2               	bcf	242,7,c	;volatile
  1296  0006B6                     
  1297                           ;main.c: 321:     ETemp = read_i2c(0x0030);
  1298  0006B6  0E30               	movlw	48
  1299  0006B8  0100               	movlb	0	; () banked
  1300  0006BA  6F80               	movwf	read_i2c@address& (0+255),b
  1301  0006BC  0E00               	movlw	0
  1302  0006BE  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1303  0006C0  0E00               	movlw	0
  1304  0006C2  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1305  0006C4  0E00               	movlw	0
  1306  0006C6  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1307  0006C8  ECA0  F00D         	call	_read_i2c	;wreg free
  1308  0006CC  C080  F023         	movff	?_read_i2c,_ETemp
  1309  0006D0  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1310  0006D4                     
  1311                           ;main.c: 322:     INTCONbits.GIE=1;
  1312  0006D4  8EF2               	bsf	242,7,c	;volatile
  1313  0006D6                     
  1314                           ;main.c: 324:     PWM_reg = ETemp & 0x00FF;
  1315  0006D6  C023  F058         	movff	_ETemp,_PWM_reg
  1316  0006DA                     
  1317                           ;main.c: 326:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1318  0006DA  5058               	movf	_PWM_reg^0,w,c
  1319  0006DC  B4D8               	btfsc	status,2,c
  1320  0006DE  EF73  F003         	goto	u3351
  1321  0006E2  EF75  F003         	goto	u3350
  1322  0006E6                     u3351:
  1323  0006E6  EF99  F003         	goto	l5100
  1324  0006EA                     u3350:
  1325  0006EA  0E3F               	movlw	63
  1326  0006EC  1858               	xorwf	_PWM_reg^0,w,c
  1327  0006EE  B4D8               	btfsc	status,2,c
  1328  0006F0  EF7C  F003         	goto	u3361
  1329  0006F4  EF7E  F003         	goto	u3360
  1330  0006F8                     u3361:
  1331  0006F8  EF99  F003         	goto	l5100
  1332  0006FC                     u3360:
  1333  0006FC  0E7F               	movlw	127
  1334  0006FE  1858               	xorwf	_PWM_reg^0,w,c
  1335  000700  B4D8               	btfsc	status,2,c
  1336  000702  EF85  F003         	goto	u3371
  1337  000706  EF87  F003         	goto	u3370
  1338  00070A                     u3371:
  1339  00070A  EF99  F003         	goto	l5100
  1340  00070E                     u3370:
  1341  00070E                     
  1342                           ;main.c: 327:     {;main.c: 328:         PWM_reg=0x3F;
  1343  00070E  0E3F               	movlw	63
  1344  000710  6E58               	movwf	_PWM_reg^0,c
  1345  000712                     
  1346                           ;main.c: 330:         INTCONbits.GIE=0;
  1347  000712  9EF2               	bcf	242,7,c	;volatile
  1348  000714                     
  1349                           ;main.c: 331:         write_i2c(0x0030,PWM_reg);
  1350  000714  0E30               	movlw	48
  1351  000716  0100               	movlb	0	; () banked
  1352  000718  6F80               	movwf	write_i2c@address& (0+255),b
  1353  00071A  0E00               	movlw	0
  1354  00071C  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1355  00071E  0E00               	movlw	0
  1356  000720  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1357  000722  0E00               	movlw	0
  1358  000724  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1359  000726  C058  F084         	movff	_PWM_reg,write_i2c@data
  1360  00072A  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1361  00072C  EC29  F00E         	call	_write_i2c	;wreg free
  1362  000730                     
  1363                           ;main.c: 332:         INTCONbits.GIE=1;
  1364  000730  8EF2               	bsf	242,7,c	;volatile
  1365  000732                     l5100:
  1366                           
  1367                           ;main.c: 335:     errorcounter = 30;
  1368  000732  0E1E               	movlw	30
  1369  000734  6E52               	movwf	_errorcounter^0,c	;volatile
  1370  000736  0E00               	movlw	0
  1371  000738  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1372  00073A  0E00               	movlw	0
  1373  00073C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1374  00073E  0E00               	movlw	0
  1375  000740  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1376                           
  1377                           ;main.c: 336:     MotorPosition_Init();
  1378  000742  ECF0  F009         	call	_MotorPosition_Init	;wreg free
  1379  000746                     
  1380                           ;main.c: 337:     LATDbits.LATD1 = 0;
  1381  000746  928C               	bcf	140,1,c	;volatile
  1382  000748                     l191:
  1383  000748  0004               	clrwdt		;# 
  1384  00074A                     
  1385                           ;main.c: 345:         errorcounter = 30;
  1386  00074A  0E1E               	movlw	30
  1387  00074C  6E52               	movwf	_errorcounter^0,c	;volatile
  1388  00074E  0E00               	movlw	0
  1389  000750  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1390  000752  0E00               	movlw	0
  1391  000754  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1392  000756  0E00               	movlw	0
  1393  000758  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1394  00075A                     
  1395                           ;main.c: 346:         AD_capture_BattVoltage();
  1396  00075A  EC92  F00E         	call	_AD_capture_BattVoltage	;wreg free
  1397                           
  1398                           ;main.c: 348:         switch(OpMode)
  1399  00075E  EFF7  F006         	goto	l5340
  1400  000762                     l193:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 355:                 NUM = NUM_REC;
  1404  000762  C017  F019         	movff	_NUM_REC,_NUM
  1405  000766  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1406                           
  1407                           ;main.c: 357:                 if (PORTBbits.RB4 == 0)
  1408  00076A  B881               	btfsc	129,4,c	;volatile
  1409  00076C  EFBA  F003         	goto	u3381
  1410  000770  EFBC  F003         	goto	u3380
  1411  000774                     u3381:
  1412  000774  EFDC  F003         	goto	l194
  1413  000778                     u3380:
  1414  000778                     l195:
  1415                           
  1416                           ;main.c: 360:                     {;main.c: 361:                         if(PORTBbits.RB
      +                          2 == 0)
  1417  000778  B481               	btfsc	129,2,c	;volatile
  1418  00077A  EFC1  F003         	goto	u3391
  1419  00077E  EFC3  F003         	goto	u3390
  1420  000782                     u3391:
  1421  000782  EFC5  F003         	goto	l196
  1422  000786                     u3390:
  1423  000786                     
  1424                           ;main.c: 362:                         {;main.c: 363:                             ToggleV
      +                          IB_Mode();
  1425  000786  EC73  F00E         	call	_ToggleVIB_Mode	;wreg free
  1426  00078A                     l196:
  1427                           
  1428                           ;main.c: 366:                         WriteSTLED316SVibMode(vibration_mode);
  1429  00078A  5032               	movf	_vibration_mode^0,w,c
  1430  00078C  EC02  F00E         	call	_WriteSTLED316SVibMode
  1431  000790                     
  1432                           ;main.c: 367:                          _delay((unsigned long)((100)*(8000000/4000.0)));
  1433  000790  0E02               	movlw	2
  1434  000792  0100               	movlb	0	; () banked
  1435  000794  6F87               	movwf	(??_main+1)& (0+255),b
  1436  000796  0E04               	movlw	4
  1437  000798  6F86               	movwf	??_main& (0+255),b
  1438  00079A  0EBA               	movlw	186
  1439  00079C                     u3697:
  1440  00079C  2EE8               	decfsz	wreg,f,c
  1441  00079E  D7FE               	bra	u3697
  1442  0007A0  2F86               	decfsz	??_main& (0+255),f,b
  1443  0007A2  D7FC               	bra	u3697
  1444  0007A4  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1445  0007A6  D7FA               	bra	u3697
  1446  0007A8  F000               	nop	
  1447  0007AA                     
  1448                           ;main.c: 369:                     }while (PORTBbits.RB4 == 0);
  1449  0007AA  A881               	btfss	129,4,c	;volatile
  1450  0007AC  EFDA  F003         	goto	u3401
  1451  0007B0  EFDC  F003         	goto	u3400
  1452  0007B4                     u3401:
  1453  0007B4  EFBC  F003         	goto	l195
  1454  0007B8                     u3400:
  1455  0007B8                     l194:
  1456                           
  1457                           ;main.c: 372:                 if ((PORTBbits.RB3 == 0) && NUM != 99)
  1458  0007B8  B681               	btfsc	129,3,c	;volatile
  1459  0007BA  EFE1  F003         	goto	u3411
  1460  0007BE  EFE3  F003         	goto	u3410
  1461  0007C2                     u3411:
  1462  0007C2  EFFA  F003         	goto	l198
  1463  0007C6                     u3410:
  1464  0007C6  0E63               	movlw	99
  1465  0007C8  1819               	xorwf	_NUM^0,w,c
  1466  0007CA  101A               	iorwf	(_NUM+1)^0,w,c
  1467  0007CC  B4D8               	btfsc	status,2,c
  1468  0007CE  EFEB  F003         	goto	u3421
  1469  0007D2  EFED  F003         	goto	u3420
  1470  0007D6                     u3421:
  1471  0007D6  EFFA  F003         	goto	l198
  1472  0007DA                     u3420:
  1473  0007DA                     
  1474                           ;main.c: 373:                 {;main.c: 374:                     NUM = NUM + 1;
  1475  0007DA  0E01               	movlw	1
  1476  0007DC  2419               	addwf	_NUM^0,w,c
  1477  0007DE  6E19               	movwf	_NUM^0,c
  1478  0007E0  0E00               	movlw	0
  1479  0007E2  201A               	addwfc	(_NUM+1)^0,w,c
  1480  0007E4  6E1A               	movwf	(_NUM+1)^0,c
  1481  0007E6                     l199:
  1482  0007E6  A681               	btfss	129,3,c	;volatile
  1483  0007E8  EFF8  F003         	goto	u3431
  1484  0007EC  EFFA  F003         	goto	u3430
  1485  0007F0                     u3431:
  1486  0007F0  EFF3  F003         	goto	l199
  1487  0007F4                     u3430:
  1488  0007F4                     l198:
  1489                           
  1490                           ;main.c: 378:                 if (PORTAbits.RA5 == 0 && NUM != 0)
  1491  0007F4  BA80               	btfsc	128,5,c	;volatile
  1492  0007F6  EFFF  F003         	goto	u3441
  1493  0007FA  EF01  F004         	goto	u3440
  1494  0007FE                     u3441:
  1495  0007FE  EF17  F004         	goto	l202
  1496  000802                     u3440:
  1497  000802  5019               	movf	_NUM^0,w,c
  1498  000804  101A               	iorwf	(_NUM+1)^0,w,c
  1499  000806  B4D8               	btfsc	status,2,c
  1500  000808  EF08  F004         	goto	u3451
  1501  00080C  EF0A  F004         	goto	u3450
  1502  000810                     u3451:
  1503  000810  EF17  F004         	goto	l202
  1504  000814                     u3450:
  1505  000814                     
  1506                           ;main.c: 379:                 {;main.c: 380:                     NUM = NUM - 1;
  1507  000814  0EFF               	movlw	255
  1508  000816  2419               	addwf	_NUM^0,w,c
  1509  000818  6E19               	movwf	_NUM^0,c
  1510  00081A  0EFF               	movlw	255
  1511  00081C  201A               	addwfc	(_NUM+1)^0,w,c
  1512  00081E  6E1A               	movwf	(_NUM+1)^0,c
  1513  000820                     l203:
  1514  000820  AA80               	btfss	128,5,c	;volatile
  1515  000822  EF15  F004         	goto	u3461
  1516  000826  EF17  F004         	goto	u3460
  1517  00082A                     u3461:
  1518  00082A  EF10  F004         	goto	l203
  1519  00082E                     u3460:
  1520  00082E                     l202:
  1521                           
  1522                           ;main.c: 384:                 if (PORTAbits.RA4 == 0 && NUM <= 89)
  1523  00082E  B880               	btfsc	128,4,c	;volatile
  1524  000830  EF1C  F004         	goto	u3471
  1525  000834  EF1E  F004         	goto	u3470
  1526  000838                     u3471:
  1527  000838  EF36  F004         	goto	l206
  1528  00083C                     u3470:
  1529  00083C  501A               	movf	(_NUM+1)^0,w,c
  1530  00083E  E107               	bnz	u3481
  1531  000840  0E5A               	movlw	90
  1532  000842  5C19               	subwf	_NUM^0,w,c
  1533  000844  B0D8               	btfsc	status,0,c
  1534  000846  EF27  F004         	goto	u3481
  1535  00084A  EF29  F004         	goto	u3480
  1536  00084E                     u3481:
  1537  00084E  EF36  F004         	goto	l206
  1538  000852                     u3480:
  1539  000852                     
  1540                           ;main.c: 385:                 {;main.c: 386:                     NUM = NUM + 10;
  1541  000852  0E0A               	movlw	10
  1542  000854  2419               	addwf	_NUM^0,w,c
  1543  000856  6E19               	movwf	_NUM^0,c
  1544  000858  0E00               	movlw	0
  1545  00085A  201A               	addwfc	(_NUM+1)^0,w,c
  1546  00085C  6E1A               	movwf	(_NUM+1)^0,c
  1547  00085E                     l207:
  1548  00085E  A880               	btfss	128,4,c	;volatile
  1549  000860  EF34  F004         	goto	u3491
  1550  000864  EF36  F004         	goto	u3490
  1551  000868                     u3491:
  1552  000868  EF2F  F004         	goto	l207
  1553  00086C                     u3490:
  1554  00086C                     l206:
  1555                           
  1556                           ;main.c: 390:                 if (PORTAbits.RA3 == 0 && NUM >= 10)
  1557  00086C  B680               	btfsc	128,3,c	;volatile
  1558  00086E  EF3B  F004         	goto	u3501
  1559  000872  EF3D  F004         	goto	u3500
  1560  000876                     u3501:
  1561  000876  EF55  F004         	goto	l210
  1562  00087A                     u3500:
  1563  00087A  501A               	movf	(_NUM+1)^0,w,c
  1564  00087C  E109               	bnz	u3510
  1565  00087E  0E0A               	movlw	10
  1566  000880  5C19               	subwf	_NUM^0,w,c
  1567  000882  A0D8               	btfss	status,0,c
  1568  000884  EF46  F004         	goto	u3511
  1569  000888  EF48  F004         	goto	u3510
  1570  00088C                     u3511:
  1571  00088C  EF55  F004         	goto	l210
  1572  000890                     u3510:
  1573  000890                     
  1574                           ;main.c: 391:                 {;main.c: 392:                     NUM = NUM - 10;
  1575  000890  0EF6               	movlw	246
  1576  000892  2419               	addwf	_NUM^0,w,c
  1577  000894  6E19               	movwf	_NUM^0,c
  1578  000896  0EFF               	movlw	255
  1579  000898  201A               	addwfc	(_NUM+1)^0,w,c
  1580  00089A  6E1A               	movwf	(_NUM+1)^0,c
  1581  00089C                     l211:
  1582  00089C  A680               	btfss	128,3,c	;volatile
  1583  00089E  EF53  F004         	goto	u3521
  1584  0008A2  EF55  F004         	goto	u3520
  1585  0008A6                     u3521:
  1586  0008A6  EF4E  F004         	goto	l211
  1587  0008AA                     u3520:
  1588  0008AA                     l210:
  1589                           
  1590                           ;main.c: 396:                 NUM_REC = NUM;
  1591  0008AA  C019  F017         	movff	_NUM,_NUM_REC
  1592  0008AE  C01A  F018         	movff	_NUM+1,_NUM_REC+1
  1593  0008B2                     
  1594                           ;main.c: 397:                 WriteSTLED316SData(NUM, vibration_mode);
  1595  0008B2  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1596  0008B6  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1597  0008BA  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1598  0008BE  EC8A  F00C         	call	_WriteSTLED316SData	;wreg free
  1599  0008C2                     
  1600                           ;main.c: 399:                 if (PORTBbits.RB2 == 0)
  1601  0008C2  B481               	btfsc	129,2,c	;volatile
  1602  0008C4  EF66  F004         	goto	u3531
  1603  0008C8  EF68  F004         	goto	u3530
  1604  0008CC                     u3531:
  1605  0008CC  EF78  F004         	goto	l5142
  1606  0008D0                     u3530:
  1607  0008D0                     
  1608                           ;main.c: 400:                 {;main.c: 401:                     Busy = 1;
  1609  0008D0  0E01               	movlw	1
  1610  0008D2  6E33               	movwf	_Busy^0,c
  1611                           
  1612                           ;main.c: 402:                     errorcounter = 30;
  1613  0008D4  0E1E               	movlw	30
  1614  0008D6  6E52               	movwf	_errorcounter^0,c	;volatile
  1615  0008D8  0E00               	movlw	0
  1616  0008DA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1617  0008DC  0E00               	movlw	0
  1618  0008DE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1619  0008E0  0E00               	movlw	0
  1620  0008E2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1621  0008E4                     
  1622                           ;main.c: 403:                     Homing_Again_Manual();
  1623  0008E4  EC0F  F007         	call	_Homing_Again_Manual	;wreg free
  1624  0008E8                     
  1625                           ;main.c: 404:                     Stop = 0;
  1626  0008E8  0E00               	movlw	0
  1627  0008EA  6E35               	movwf	_Stop^0,c
  1628  0008EC                     
  1629                           ;main.c: 405:                     Busy = 0;
  1630  0008EC  0E00               	movlw	0
  1631  0008EE  6E33               	movwf	_Busy^0,c
  1632  0008F0                     l5142:
  1633                           
  1634                           ;main.c: 419:                 if(Serial_Flag==1)
  1635  0008F0  0437               	decf	_Serial_Flag^0,w,c
  1636  0008F2  A4D8               	btfss	status,2,c
  1637  0008F4  EF7E  F004         	goto	u3541
  1638  0008F8  EF80  F004         	goto	u3540
  1639  0008FC                     u3541:
  1640  0008FC  EFF3  F006         	goto	l5338
  1641  000900                     u3540:
  1642  000900  EFC5  F006         	goto	l5334
  1643  000904                     l5146:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;main.c: 426:                             if(Serial_Buffer[2] == 0xF1 && Busy == 0)
  1647  000904  0EF1               	movlw	241
  1648  000906  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1649  000908  A4D8               	btfss	status,2,c
  1650  00090A  EF89  F004         	goto	u3551
  1651  00090E  EF8B  F004         	goto	u3550
  1652  000912                     u3551:
  1653  000912  EFA7  F004         	goto	l5156
  1654  000916                     u3550:
  1655  000916                     
  1656                           ; BSR set to: 0
  1657  000916  5033               	movf	_Busy^0,w,c
  1658  000918  A4D8               	btfss	status,2,c
  1659  00091A  EF91  F004         	goto	u3561
  1660  00091E  EF93  F004         	goto	u3560
  1661  000922                     u3561:
  1662  000922  EFA7  F004         	goto	l5156
  1663  000926                     u3560:
  1664  000926                     
  1665                           ; BSR set to: 0
  1666                           ;main.c: 427:                             {;main.c: 428:                                
      +                           Stop = 0;
  1667  000926  0E00               	movlw	0
  1668  000928  6E35               	movwf	_Stop^0,c
  1669                           
  1670                           ;main.c: 429:                                 Busy = 1;
  1671  00092A  0E01               	movlw	1
  1672  00092C  6E33               	movwf	_Busy^0,c
  1673  00092E                     
  1674                           ; BSR set to: 0
  1675                           ;main.c: 430:                                 NUM = NUM_REC;
  1676  00092E  C017  F019         	movff	_NUM_REC,_NUM
  1677  000932  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1678                           
  1679                           ;main.c: 432:                                 errorcounter = 30;
  1680  000936  0E1E               	movlw	30
  1681  000938  6E52               	movwf	_errorcounter^0,c	;volatile
  1682  00093A  0E00               	movlw	0
  1683  00093C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1684  00093E  0E00               	movlw	0
  1685  000940  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1686  000942  0E00               	movlw	0
  1687  000944  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1688  000946                     
  1689                           ; BSR set to: 0
  1690                           ;main.c: 433:                                 Homing_Again_Auto();
  1691  000946  EC57  F008         	call	_Homing_Again_Auto	;wreg free
  1692                           
  1693                           ;main.c: 435:                             }
  1694  00094A  EF05  F005         	goto	l5186
  1695  00094E                     l5156:
  1696                           
  1697                           ; BSR set to: 0
  1698  00094E  0EF2               	movlw	242
  1699  000950  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1700  000952  A4D8               	btfss	status,2,c
  1701  000954  EFAE  F004         	goto	u3571
  1702  000958  EFB0  F004         	goto	u3570
  1703  00095C                     u3571:
  1704  00095C  EF05  F005         	goto	l5186
  1705  000960                     u3570:
  1706  000960                     
  1707                           ; BSR set to: 0
  1708  000960  5033               	movf	_Busy^0,w,c
  1709  000962  A4D8               	btfss	status,2,c
  1710  000964  EFB6  F004         	goto	u3581
  1711  000968  EFB8  F004         	goto	u3580
  1712  00096C                     u3581:
  1713  00096C  EF05  F005         	goto	l5186
  1714  000970                     u3580:
  1715  000970                     
  1716                           ; BSR set to: 0
  1717                           ;main.c: 437:                            {;main.c: 438:                                 
      +                          Stop = 0;
  1718  000970  0E00               	movlw	0
  1719  000972  6E35               	movwf	_Stop^0,c
  1720                           
  1721                           ;main.c: 439:                                 Busy = 1;
  1722  000974  0E01               	movlw	1
  1723  000976  6E33               	movwf	_Busy^0,c
  1724  000978                     
  1725                           ; BSR set to: 0
  1726                           ;main.c: 440:                                 NUM = NUM_REC;
  1727  000978  C017  F019         	movff	_NUM_REC,_NUM
  1728  00097C  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1729  000980                     
  1730                           ; BSR set to: 0
  1731                           ;main.c: 441:                                 WriteSTLED316SData(NUM, vibration_mode);
  1732  000980  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1733  000984  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1734  000988  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1735  00098C  EC8A  F00C         	call	_WriteSTLED316SData	;wreg free
  1736  000990                     
  1737                           ;main.c: 443:                                 errorcounter = 30;
  1738  000990  0E1E               	movlw	30
  1739  000992  6E52               	movwf	_errorcounter^0,c	;volatile
  1740  000994  0E00               	movlw	0
  1741  000996  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1742  000998  0E00               	movlw	0
  1743  00099A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1744  00099C  0E00               	movlw	0
  1745  00099E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1746  0009A0                     
  1747                           ;main.c: 444:                                 Homing_Again_Manual();
  1748  0009A0  EC0F  F007         	call	_Homing_Again_Manual	;wreg free
  1749  0009A4                     
  1750                           ;main.c: 447:                                 if(Stop == 0)
  1751  0009A4  5035               	movf	_Stop^0,w,c
  1752  0009A6  A4D8               	btfss	status,2,c
  1753  0009A8  EFD8  F004         	goto	u3591
  1754  0009AC  EFDA  F004         	goto	u3590
  1755  0009B0                     u3591:
  1756  0009B0  EF05  F005         	goto	l5186
  1757  0009B4                     u3590:
  1758  0009B4                     
  1759                           ;main.c: 448:                                 {;main.c: 449:                            
      +                                   Serial_Buffer_Out[0] = 0xA5;
  1760  0009B4  0EA5               	movlw	165
  1761  0009B6  0100               	movlb	0	; () banked
  1762  0009B8  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1763                           
  1764                           ;main.c: 450:                                     Serial_Buffer_Out[1] = 0x44;
  1765  0009BA  0E44               	movlw	68
  1766  0009BC  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  1767                           
  1768                           ;main.c: 451:                                     Serial_Buffer_Out[2] = 0xF9;
  1769  0009BE  0EF9               	movlw	249
  1770  0009C0  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  1771                           
  1772                           ;main.c: 452:                                     Serial_Buffer_Out[3] = 0X3D;
  1773  0009C2  0E3D               	movlw	61
  1774  0009C4  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  1775                           
  1776                           ;main.c: 453:                                     Serial_Buffer_Out[4] = 0x5A;
  1777  0009C6  0E5A               	movlw	90
  1778  0009C8  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  1779  0009CA                     
  1780                           ; BSR set to: 0
  1781                           ;main.c: 455:                                     INTCONbits.GIE=0;
  1782  0009CA  9EF2               	bcf	242,7,c	;volatile
  1783                           
  1784                           ;main.c: 456:                                     for (i=0; i<5;i++)
  1785  0009CC  0E00               	movlw	0
  1786  0009CE  6E16               	movwf	(_i+1)^0,c
  1787  0009D0  0E00               	movlw	0
  1788  0009D2  6E15               	movwf	_i^0,c
  1789  0009D4                     l5176:
  1790  0009D4  5016               	movf	(_i+1)^0,w,c
  1791  0009D6  E109               	bnz	u3600
  1792  0009D8  0E05               	movlw	5
  1793  0009DA  5C15               	subwf	_i^0,w,c
  1794  0009DC  A0D8               	btfss	status,0,c
  1795  0009DE  EFF3  F004         	goto	u3601
  1796  0009E2  EFF5  F004         	goto	u3600
  1797  0009E6                     u3601:
  1798  0009E6  EFF7  F004         	goto	l5180
  1799  0009EA                     u3600:
  1800  0009EA  EF04  F005         	goto	l224
  1801  0009EE                     l5180:
  1802                           
  1803                           ;main.c: 457:                                     {;main.c: 458:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  1804  0009EE  0E60               	movlw	low _Serial_Buffer_Out
  1805  0009F0  2415               	addwf	_i^0,w,c
  1806  0009F2  6ED9               	movwf	fsr2l,c
  1807  0009F4  0E00               	movlw	high _Serial_Buffer_Out
  1808  0009F6  2016               	addwfc	(_i+1)^0,w,c
  1809  0009F8  6EDA               	movwf	fsr2h,c
  1810  0009FA  50DF               	movf	indf2,w,c
  1811  0009FC  EC99  F00F         	call	_Write1USART
  1812  000A00                     
  1813                           ;main.c: 459:                                     }
  1814  000A00  4A15               	infsnz	_i^0,f,c
  1815  000A02  2A16               	incf	(_i+1)^0,f,c
  1816  000A04  EFEA  F004         	goto	l5176
  1817  000A08                     l224:
  1818                           
  1819                           ;main.c: 460:                                     INTCONbits.GIE=1;
  1820  000A08  8EF2               	bsf	242,7,c	;volatile
  1821  000A0A                     l5186:
  1822                           
  1823                           ;main.c: 464:                                 flush();
  1824  000A0A  ECB1  F00E         	call	_flush	;wreg free
  1825                           
  1826                           ;main.c: 465:                                 flushOut();
  1827  000A0E  ECCE  F00E         	call	_flushOut	;wreg free
  1828  000A12                     
  1829                           ;main.c: 466:                                 Stop = 0;
  1830  000A12  0E00               	movlw	0
  1831  000A14  6E35               	movwf	_Stop^0,c
  1832  000A16                     l5190:
  1833                           
  1834                           ;main.c: 467:                                 Busy = 0;
  1835  000A16  0E00               	movlw	0
  1836  000A18  6E33               	movwf	_Busy^0,c
  1837                           
  1838                           ;main.c: 468:                                 break;
  1839  000A1A  EFEB  F006         	goto	l5336
  1840  000A1E                     l5192:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 473:                             if(Busy==0)
  1844  000A1E  5033               	movf	_Busy^0,w,c
  1845  000A20  A4D8               	btfss	status,2,c
  1846  000A22  EF15  F005         	goto	u3611
  1847  000A26  EF17  F005         	goto	u3610
  1848  000A2A                     u3611:
  1849  000A2A  EFEB  F006         	goto	l5336
  1850  000A2E                     u3610:
  1851  000A2E                     
  1852                           ; BSR set to: 0
  1853                           ;main.c: 474:                             {;main.c: 475:                                
      +                           Busy = 1;
  1854  000A2E  0E01               	movlw	1
  1855  000A30  6E33               	movwf	_Busy^0,c
  1856  000A32                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 479:                                     pause_Time = Serial_Buffer[2];
  1859  000A32  C003  F02F         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  1860                           
  1861                           ;main.c: 480:                                     switch(pause_Time)
  1862  000A36  EF43  F005         	goto	l5212
  1863  000A3A                     l5198:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 484:                                             Motor_Pause_Time = 0;
  1867  000A3A  0E00               	movlw	0
  1868  000A3C  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1869  000A3E  0E00               	movlw	0
  1870  000A40  6E1B               	movwf	_Motor_Pause_Time^0,c
  1871                           
  1872                           ;main.c: 485:                                             pause_Time = 0x30;
  1873  000A42  0E30               	movlw	48
  1874  000A44  6E2F               	movwf	_pause_Time^0,c	;volatile
  1875                           
  1876                           ;main.c: 486:                                             break;
  1877  000A46  EF68  F005         	goto	l231
  1878  000A4A                     l5200:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 489:                                             Motor_Pause_Time = 1000;
  1882  000A4A  0E03               	movlw	3
  1883  000A4C  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1884  000A4E  0EE8               	movlw	232
  1885  000A50  6E1B               	movwf	_Motor_Pause_Time^0,c
  1886                           
  1887                           ;main.c: 490:                                             break;
  1888  000A52  EF68  F005         	goto	l231
  1889  000A56                     l5202:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 493:                                             Motor_Pause_Time = 2000;
  1893  000A56  0E07               	movlw	7
  1894  000A58  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1895  000A5A  0ED0               	movlw	208
  1896  000A5C  6E1B               	movwf	_Motor_Pause_Time^0,c
  1897                           
  1898                           ;main.c: 494:                                             break;
  1899  000A5E  EF68  F005         	goto	l231
  1900  000A62                     l5204:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;main.c: 497:                                             Motor_Pause_Time = 3000;
  1904  000A62  0E0B               	movlw	11
  1905  000A64  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1906  000A66  0EB8               	movlw	184
  1907  000A68  6E1B               	movwf	_Motor_Pause_Time^0,c
  1908                           
  1909                           ;main.c: 498:                                             break;
  1910  000A6A  EF68  F005         	goto	l231
  1911  000A6E                     l5206:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;main.c: 501:                                             Motor_Pause_Time = 4000;
  1915  000A6E  0E0F               	movlw	15
  1916  000A70  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1917  000A72  0EA0               	movlw	160
  1918  000A74  6E1B               	movwf	_Motor_Pause_Time^0,c
  1919                           
  1920                           ;main.c: 502:                                             break;
  1921  000A76  EF68  F005         	goto	l231
  1922  000A7A                     l5208:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 505:                                             Motor_Pause_Time = 5000;
  1926  000A7A  0E13               	movlw	19
  1927  000A7C  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1928  000A7E  0E88               	movlw	136
  1929  000A80  6E1B               	movwf	_Motor_Pause_Time^0,c
  1930                           
  1931                           ;main.c: 506:                                             break;
  1932  000A82  EF68  F005         	goto	l231
  1933  000A86                     l5212:
  1934                           
  1935                           ; BSR set to: 0
  1936  000A86  502F               	movf	_pause_Time^0,w,c	;volatile
  1937  000A88  6F86               	movwf	??_main& (0+255),b
  1938  000A8A  6B87               	clrf	(??_main+1)& (0+255),b
  1939                           
  1940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1941                           ; Switch size 1, requested type "simple"
  1942                           ; Number of cases is 1, Range of values is 0 to 0
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte            4     3 (average)
  1946                           ;	Chosen strategy is simple_byte
  1947  000A8C  5187               	movf	(??_main+1)& (0+255),w,b
  1948  000A8E  0A00               	xorlw	0	; case 0
  1949  000A90  B4D8               	btfsc	status,2,c
  1950  000A92  EF4D  F005         	goto	l5658
  1951  000A96  EF1D  F005         	goto	l5198
  1952  000A9A                     l5658:
  1953                           
  1954                           ; BSR set to: 0
  1955                           ; Switch size 1, requested type "simple"
  1956                           ; Number of cases is 6, Range of values is 48 to 53
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte           19    10 (average)
  1960                           ;	Chosen strategy is simple_byte
  1961  000A9A  5186               	movf	??_main& (0+255),w,b
  1962  000A9C  0A30               	xorlw	48	; case 48
  1963  000A9E  B4D8               	btfsc	status,2,c
  1964  000AA0  EF1D  F005         	goto	l5198
  1965  000AA4  0A01               	xorlw	1	; case 49
  1966  000AA6  B4D8               	btfsc	status,2,c
  1967  000AA8  EF25  F005         	goto	l5200
  1968  000AAC  0A03               	xorlw	3	; case 50
  1969  000AAE  B4D8               	btfsc	status,2,c
  1970  000AB0  EF2B  F005         	goto	l5202
  1971  000AB4  0A01               	xorlw	1	; case 51
  1972  000AB6  B4D8               	btfsc	status,2,c
  1973  000AB8  EF31  F005         	goto	l5204
  1974  000ABC  0A07               	xorlw	7	; case 52
  1975  000ABE  B4D8               	btfsc	status,2,c
  1976  000AC0  EF37  F005         	goto	l5206
  1977  000AC4  0A01               	xorlw	1	; case 53
  1978  000AC6  B4D8               	btfsc	status,2,c
  1979  000AC8  EF3D  F005         	goto	l5208
  1980  000ACC  EF1D  F005         	goto	l5198
  1981  000AD0                     l231:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;main.c: 511:                                 INTCONbits.GIE=0;
  1985  000AD0  9EF2               	bcf	242,7,c	;volatile
  1986  000AD2                     
  1987                           ; BSR set to: 0
  1988                           ;main.c: 512:                                 write_i2c(0x0060, pause_Time);
  1989  000AD2  0E60               	movlw	96
  1990  000AD4  6F80               	movwf	write_i2c@address& (0+255),b
  1991  000AD6  0E00               	movlw	0
  1992  000AD8  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1993  000ADA  0E00               	movlw	0
  1994  000ADC  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1995  000ADE  0E00               	movlw	0
  1996  000AE0  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1997  000AE2  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
  1998  000AE6  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1999  000AE8  EC29  F00E         	call	_write_i2c	;wreg free
  2000  000AEC                     
  2001                           ;main.c: 513:                                 INTCONbits.GIE=1;
  2002  000AEC  8EF2               	bsf	242,7,c	;volatile
  2003  000AEE                     
  2004                           ;main.c: 515:                                 flush();
  2005  000AEE  ECB1  F00E         	call	_flush	;wreg free
  2006  000AF2  EF0B  F005         	goto	l5190
  2007  000AF6                     l5222:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 523:                             if(Busy==0)
  2011  000AF6  5033               	movf	_Busy^0,w,c
  2012  000AF8  A4D8               	btfss	status,2,c
  2013  000AFA  EF81  F005         	goto	u3621
  2014  000AFE  EF83  F005         	goto	u3620
  2015  000B02                     u3621:
  2016  000B02  EFEB  F006         	goto	l5336
  2017  000B06                     u3620:
  2018  000B06                     
  2019                           ; BSR set to: 0
  2020                           ;main.c: 524:                             {;main.c: 525:                                
      +                           if (Serial_Buffer[2] == 0x00)
  2021  000B06  5003               	movf	(_Serial_Buffer+2)^0,w,c
  2022  000B08  A4D8               	btfss	status,2,c
  2023  000B0A  EF89  F005         	goto	u3631
  2024  000B0E  EF8B  F005         	goto	u3630
  2025  000B12                     u3631:
  2026  000B12  EFFC  F005         	goto	l5264
  2027  000B16                     u3630:
  2028  000B16                     
  2029                           ; BSR set to: 0
  2030                           ;main.c: 526:                                 {;main.c: 527:                            
      +                                   Busy = 1;
  2031  000B16  0E01               	movlw	1
  2032  000B18  6E33               	movwf	_Busy^0,c
  2033  000B1A                     
  2034                           ; BSR set to: 0
  2035                           ;main.c: 529:                                     INTCONbits.GIE=0;
  2036  000B1A  9EF2               	bcf	242,7,c	;volatile
  2037  000B1C                     
  2038                           ; BSR set to: 0
  2039                           ;main.c: 530:                                     pause_Time = read_i2c(0x0060);
  2040  000B1C  0E60               	movlw	96
  2041  000B1E  6F80               	movwf	read_i2c@address& (0+255),b
  2042  000B20  0E00               	movlw	0
  2043  000B22  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2044  000B24  0E00               	movlw	0
  2045  000B26  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2046  000B28  0E00               	movlw	0
  2047  000B2A  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2048  000B2C  ECA0  F00D         	call	_read_i2c	;wreg free
  2049  000B30  0100               	movlb	0	; () banked
  2050  000B32  5180               	movf	?_read_i2c& (0+255),w,b
  2051  000B34  6E2F               	movwf	_pause_Time^0,c	;volatile
  2052  000B36                     
  2053                           ; BSR set to: 0
  2054                           ;main.c: 531:                                     vib_Time = read_i2c(0x0040);
  2055  000B36  0E40               	movlw	64
  2056  000B38  6F80               	movwf	read_i2c@address& (0+255),b
  2057  000B3A  0E00               	movlw	0
  2058  000B3C  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2059  000B3E  0E00               	movlw	0
  2060  000B40  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2061  000B42  0E00               	movlw	0
  2062  000B44  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2063  000B46  ECA0  F00D         	call	_read_i2c	;wreg free
  2064  000B4A  0100               	movlb	0	; () banked
  2065  000B4C  5180               	movf	?_read_i2c& (0+255),w,b
  2066  000B4E  6E2E               	movwf	_vib_Time^0,c	;volatile
  2067  000B50                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 532:                                     Motor_Speed = read_i2c(0x0030);
  2070  000B50  0E30               	movlw	48
  2071  000B52  6F80               	movwf	read_i2c@address& (0+255),b
  2072  000B54  0E00               	movlw	0
  2073  000B56  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2074  000B58  0E00               	movlw	0
  2075  000B5A  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2076  000B5C  0E00               	movlw	0
  2077  000B5E  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2078  000B60  ECA0  F00D         	call	_read_i2c	;wreg free
  2079  000B64  C080  F021         	movff	?_read_i2c,_Motor_Speed
  2080  000B68  C081  F022         	movff	?_read_i2c+1,_Motor_Speed+1
  2081  000B6C                     
  2082                           ;main.c: 533:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2083  000B6C  0E50               	movlw	80
  2084  000B6E  0100               	movlb	0	; () banked
  2085  000B70  6F80               	movwf	read_i2c@address& (0+255),b
  2086  000B72  0E00               	movlw	0
  2087  000B74  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2088  000B76  0E00               	movlw	0
  2089  000B78  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2090  000B7A  0E00               	movlw	0
  2091  000B7C  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2092  000B7E  ECA0  F00D         	call	_read_i2c	;wreg free
  2093  000B82  0100               	movlb	0	; () banked
  2094  000B84  5180               	movf	?_read_i2c& (0+255),w,b
  2095  000B86  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  2096  000B88                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 534:                                     INTCONbits.GIE=1;
  2099  000B88  8EF2               	bsf	242,7,c	;volatile
  2100                           
  2101                           ;main.c: 536:                                     Serial_Buffer_Out[0] = 0x51;
  2102  000B8A  0E51               	movlw	81
  2103  000B8C  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2104  000B8E                     
  2105                           ; BSR set to: 0
  2106                           ;main.c: 537:                                     Serial_Buffer_Out[1] = pause_Time;
  2107  000B8E  C02F  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2108  000B92                     
  2109                           ; BSR set to: 0
  2110                           ;main.c: 538:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2111  000B92  C021  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2112  000B96                     
  2113                           ; BSR set to: 0
  2114                           ;main.c: 539:                                     Serial_Buffer_Out[3] = vib_Time;
  2115  000B96  C02E  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2116  000B9A                     
  2117                           ; BSR set to: 0
  2118                           ;main.c: 540:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2119  000B9A  C02D  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2120  000B9E                     
  2121                           ; BSR set to: 0
  2122                           ;main.c: 542:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2123  000B9E  0E02               	movlw	2
  2124  000BA0  0100               	movlb	0	; () banked
  2125  000BA2  6F87               	movwf	(??_main+1)& (0+255),b
  2126  000BA4  0E04               	movlw	4
  2127  000BA6  6F86               	movwf	??_main& (0+255),b
  2128  000BA8  0EBA               	movlw	186
  2129  000BAA                     u3707:
  2130  000BAA  2EE8               	decfsz	wreg,f,c
  2131  000BAC  D7FE               	bra	u3707
  2132  000BAE  2F86               	decfsz	??_main& (0+255),f,b
  2133  000BB0  D7FC               	bra	u3707
  2134  000BB2  2F87               	decfsz	(??_main+1)& (0+255),f,b
  2135  000BB4  D7FA               	bra	u3707
  2136  000BB6  F000               	nop	
  2137  000BB8                     
  2138                           ;main.c: 544:                                     INTCONbits.GIE=0;
  2139  000BB8  9EF2               	bcf	242,7,c	;volatile
  2140  000BBA                     
  2141                           ;main.c: 545:                                     for (i=0; i<5;i++)
  2142  000BBA  0E00               	movlw	0
  2143  000BBC  6E16               	movwf	(_i+1)^0,c
  2144  000BBE  0E00               	movlw	0
  2145  000BC0  6E15               	movwf	_i^0,c
  2146  000BC2                     l5254:
  2147  000BC2  5016               	movf	(_i+1)^0,w,c
  2148  000BC4  E109               	bnz	u3640
  2149  000BC6  0E05               	movlw	5
  2150  000BC8  5C15               	subwf	_i^0,w,c
  2151  000BCA  A0D8               	btfss	status,0,c
  2152  000BCC  EFEA  F005         	goto	u3641
  2153  000BD0  EFEC  F005         	goto	u3640
  2154  000BD4                     u3641:
  2155  000BD4  EFEE  F005         	goto	l5258
  2156  000BD8                     u3640:
  2157  000BD8  EFFB  F005         	goto	l241
  2158  000BDC                     l5258:
  2159                           
  2160                           ;main.c: 546:                                     {;main.c: 547:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  2161  000BDC  0E60               	movlw	low _Serial_Buffer_Out
  2162  000BDE  2415               	addwf	_i^0,w,c
  2163  000BE0  6ED9               	movwf	fsr2l,c
  2164  000BE2  0E00               	movlw	high _Serial_Buffer_Out
  2165  000BE4  2016               	addwfc	(_i+1)^0,w,c
  2166  000BE6  6EDA               	movwf	fsr2h,c
  2167  000BE8  50DF               	movf	indf2,w,c
  2168  000BEA  EC99  F00F         	call	_Write1USART
  2169  000BEE                     
  2170                           ;main.c: 548:                                     }
  2171  000BEE  4A15               	infsnz	_i^0,f,c
  2172  000BF0  2A16               	incf	(_i+1)^0,f,c
  2173  000BF2  EFE1  F005         	goto	l5254
  2174  000BF6                     l241:
  2175                           
  2176                           ;main.c: 549:                                     INTCONbits.GIE=1;
  2177  000BF6  8EF2               	bsf	242,7,c	;volatile
  2178  000BF8                     l5264:
  2179                           
  2180                           ;main.c: 551:                                 flushOut();
  2181  000BF8  ECCE  F00E         	call	_flushOut	;wreg free
  2182  000BFC  EF0B  F005         	goto	l5190
  2183  000C00                     l5268:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;main.c: 558:                             if(Busy==0)
  2187  000C00  5033               	movf	_Busy^0,w,c
  2188  000C02  A4D8               	btfss	status,2,c
  2189  000C04  EF06  F006         	goto	u3651
  2190  000C08  EF08  F006         	goto	u3650
  2191  000C0C                     u3651:
  2192  000C0C  EFEB  F006         	goto	l5336
  2193  000C10                     u3650:
  2194  000C10                     
  2195                           ; BSR set to: 0
  2196                           ;main.c: 559:                             {;main.c: 560:                                
      +                           Busy = 1;
  2197  000C10  0E01               	movlw	1
  2198  000C12  6E33               	movwf	_Busy^0,c
  2199  000C14                     
  2200                           ; BSR set to: 0
  2201                           ;main.c: 561:                                 PWM_Duty_Cycle = Serial_Buffer[2];
  2202  000C14  C003  F02C         	movff	_Serial_Buffer+2,_PWM_Duty_Cycle	;volatile
  2203                           
  2204                           ;main.c: 563:                                 switch(PWM_Duty_Cycle)
  2205  000C18  EF1A  F006         	goto	l5282
  2206  000C1C                     l5274:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 566:                                         PWM_reg=0x00;
  2210  000C1C  0E00               	movlw	0
  2211  000C1E  6E58               	movwf	_PWM_reg^0,c
  2212                           
  2213                           ;main.c: 567:                                         break;
  2214  000C20  EF33  F006         	goto	l246
  2215  000C24                     l5276:
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;main.c: 571:                                         PWM_reg=0x3F;
  2219  000C24  0E3F               	movlw	63
  2220  000C26  6E58               	movwf	_PWM_reg^0,c
  2221                           
  2222                           ;main.c: 572:                                         break;
  2223  000C28  EF33  F006         	goto	l246
  2224  000C2C                     l5278:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 575:                                         PWM_reg=0x7F;
  2228  000C2C  0E7F               	movlw	127
  2229  000C2E  6E58               	movwf	_PWM_reg^0,c
  2230                           
  2231                           ;main.c: 576:                                         break;
  2232  000C30  EF33  F006         	goto	l246
  2233  000C34                     l5282:
  2234                           
  2235                           ; BSR set to: 0
  2236  000C34  502C               	movf	_PWM_Duty_Cycle^0,w,c	;volatile
  2237  000C36  6F86               	movwf	??_main& (0+255),b
  2238  000C38  6B87               	clrf	(??_main+1)& (0+255),b
  2239                           
  2240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2241                           ; Switch size 1, requested type "simple"
  2242                           ; Number of cases is 1, Range of values is 0 to 0
  2243                           ; switch strategies available:
  2244                           ; Name         Instructions Cycles
  2245                           ; simple_byte            4     3 (average)
  2246                           ;	Chosen strategy is simple_byte
  2247  000C3A  5187               	movf	(??_main+1)& (0+255),w,b
  2248  000C3C  0A00               	xorlw	0	; case 0
  2249  000C3E  B4D8               	btfsc	status,2,c
  2250  000C40  EF24  F006         	goto	l5660
  2251  000C44  EF12  F006         	goto	l5276
  2252  000C48                     l5660:
  2253                           
  2254                           ; BSR set to: 0
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 3, Range of values is 0 to 127
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           10     6 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  000C48  5186               	movf	??_main& (0+255),w,b
  2262  000C4A  0A00               	xorlw	0	; case 0
  2263  000C4C  B4D8               	btfsc	status,2,c
  2264  000C4E  EF0E  F006         	goto	l5274
  2265  000C52  0A3F               	xorlw	63	; case 63
  2266  000C54  B4D8               	btfsc	status,2,c
  2267  000C56  EF12  F006         	goto	l5276
  2268  000C5A  0A40               	xorlw	64	; case 127
  2269  000C5C  B4D8               	btfsc	status,2,c
  2270  000C5E  EF16  F006         	goto	l5278
  2271  000C62  EF12  F006         	goto	l5276
  2272  000C66                     l246:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 578:                                     INTCONbits.GIE=0;
  2276  000C66  9EF2               	bcf	242,7,c	;volatile
  2277  000C68                     
  2278                           ; BSR set to: 0
  2279                           ;main.c: 579:                                     write_i2c(0x0030,PWM_reg);
  2280  000C68  0E30               	movlw	48
  2281  000C6A  6F80               	movwf	write_i2c@address& (0+255),b
  2282  000C6C  0E00               	movlw	0
  2283  000C6E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2284  000C70  0E00               	movlw	0
  2285  000C72  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2286  000C74  0E00               	movlw	0
  2287  000C76  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2288  000C78  C058  F084         	movff	_PWM_reg,write_i2c@data
  2289  000C7C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2290  000C7E  EC29  F00E         	call	_write_i2c	;wreg free
  2291  000C82                     
  2292                           ;main.c: 580:                                     INTCONbits.GIE=1;
  2293  000C82  8EF2               	bsf	242,7,c	;volatile
  2294  000C84  EF0B  F005         	goto	l5190
  2295  000C88                     l5290:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 588:                             if(Busy == 0)
  2299  000C88  5033               	movf	_Busy^0,w,c
  2300  000C8A  A4D8               	btfss	status,2,c
  2301  000C8C  EF4A  F006         	goto	u3661
  2302  000C90  EF4C  F006         	goto	u3660
  2303  000C94                     u3661:
  2304  000C94  EFA4  F006         	goto	l5316
  2305  000C98                     u3660:
  2306  000C98                     
  2307                           ; BSR set to: 0
  2308                           ;main.c: 589:                             {;main.c: 590:                                
      +                           Busy = 1;
  2309  000C98  0E01               	movlw	1
  2310  000C9A  6E33               	movwf	_Busy^0,c
  2311  000C9C                     
  2312                           ; BSR set to: 0
  2313                           ;main.c: 591:                                 vib_Time = Serial_Buffer[2];
  2314  000C9C  C003  F02E         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2315                           
  2316                           ;main.c: 593:                                 switch(vib_Time)
  2317  000CA0  EF72  F006         	goto	l5308
  2318  000CA4                     l5296:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;main.c: 596:                                         Vmotor_Time=1000;
  2322  000CA4  0E03               	movlw	3
  2323  000CA6  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2324  000CA8  0EE8               	movlw	232
  2325  000CAA  6E56               	movwf	_Vmotor_Time^0,c
  2326                           
  2327                           ;main.c: 597:                                         break;
  2328  000CAC  EF93  F006         	goto	l254
  2329  000CB0                     l5298:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 601:                                         Vmotor_Time=2000;
  2333  000CB0  0E07               	movlw	7
  2334  000CB2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2335  000CB4  0ED0               	movlw	208
  2336  000CB6  6E56               	movwf	_Vmotor_Time^0,c
  2337                           
  2338                           ;main.c: 602:                                         vib_Time=0x82;
  2339  000CB8  0E82               	movlw	130
  2340  000CBA  6E2E               	movwf	_vib_Time^0,c	;volatile
  2341                           
  2342                           ;main.c: 603:                                         break;
  2343  000CBC  EF93  F006         	goto	l254
  2344  000CC0                     l5300:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;main.c: 606:                                         Vmotor_Time=3000;
  2348  000CC0  0E0B               	movlw	11
  2349  000CC2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2350  000CC4  0EB8               	movlw	184
  2351  000CC6  6E56               	movwf	_Vmotor_Time^0,c
  2352                           
  2353                           ;main.c: 607:                                         break;
  2354  000CC8  EF93  F006         	goto	l254
  2355  000CCC                     l5302:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;main.c: 610:                                         Vmotor_Time=4000;
  2359  000CCC  0E0F               	movlw	15
  2360  000CCE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2361  000CD0  0EA0               	movlw	160
  2362  000CD2  6E56               	movwf	_Vmotor_Time^0,c
  2363                           
  2364                           ;main.c: 611:                                         break;
  2365  000CD4  EF93  F006         	goto	l254
  2366  000CD8                     l5304:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 614:                                         Vmotor_Time=5000;
  2370  000CD8  0E13               	movlw	19
  2371  000CDA  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2372  000CDC  0E88               	movlw	136
  2373  000CDE  6E56               	movwf	_Vmotor_Time^0,c
  2374                           
  2375                           ;main.c: 615:                                         break;
  2376  000CE0  EF93  F006         	goto	l254
  2377  000CE4                     l5308:
  2378                           
  2379                           ; BSR set to: 0
  2380  000CE4  502E               	movf	_vib_Time^0,w,c	;volatile
  2381  000CE6  6F86               	movwf	??_main& (0+255),b
  2382  000CE8  6B87               	clrf	(??_main+1)& (0+255),b
  2383                           
  2384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 1, Range of values is 0 to 0
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte            4     3 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391  000CEA  5187               	movf	(??_main+1)& (0+255),w,b
  2392  000CEC  0A00               	xorlw	0	; case 0
  2393  000CEE  B4D8               	btfsc	status,2,c
  2394  000CF0  EF7C  F006         	goto	l5662
  2395  000CF4  EF58  F006         	goto	l5298
  2396  000CF8                     l5662:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 5, Range of values is 129 to 133
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte           16     9 (average)
  2404                           ;	Chosen strategy is simple_byte
  2405  000CF8  5186               	movf	??_main& (0+255),w,b
  2406  000CFA  0A81               	xorlw	129	; case 129
  2407  000CFC  B4D8               	btfsc	status,2,c
  2408  000CFE  EF52  F006         	goto	l5296
  2409  000D02  0A03               	xorlw	3	; case 130
  2410  000D04  B4D8               	btfsc	status,2,c
  2411  000D06  EF58  F006         	goto	l5298
  2412  000D0A  0A01               	xorlw	1	; case 131
  2413  000D0C  B4D8               	btfsc	status,2,c
  2414  000D0E  EF60  F006         	goto	l5300
  2415  000D12  0A07               	xorlw	7	; case 132
  2416  000D14  B4D8               	btfsc	status,2,c
  2417  000D16  EF66  F006         	goto	l5302
  2418  000D1A  0A01               	xorlw	1	; case 133
  2419  000D1C  B4D8               	btfsc	status,2,c
  2420  000D1E  EF6C  F006         	goto	l5304
  2421  000D22  EF58  F006         	goto	l5298
  2422  000D26                     l254:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 617:                                     INTCONbits.GIE=0;
  2426  000D26  9EF2               	bcf	242,7,c	;volatile
  2427  000D28                     
  2428                           ; BSR set to: 0
  2429                           ;main.c: 618:                                     write_i2c(0x0040,vib_Time);
  2430  000D28  0E40               	movlw	64
  2431  000D2A  6F80               	movwf	write_i2c@address& (0+255),b
  2432  000D2C  0E00               	movlw	0
  2433  000D2E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2434  000D30  0E00               	movlw	0
  2435  000D32  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2436  000D34  0E00               	movlw	0
  2437  000D36  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2438  000D38  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  2439  000D3C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2440  000D3E  EC29  F00E         	call	_write_i2c	;wreg free
  2441  000D42                     
  2442                           ;main.c: 619:                                     INTCONbits.GIE=1;
  2443  000D42  8EF2               	bsf	242,7,c	;volatile
  2444  000D44                     
  2445                           ;main.c: 621:                                     Busy = 0;
  2446  000D44  0E00               	movlw	0
  2447  000D46  6E33               	movwf	_Busy^0,c
  2448  000D48                     l5316:
  2449                           
  2450                           ;main.c: 626:                             if(Busy == 0)
  2451  000D48  5033               	movf	_Busy^0,w,c
  2452  000D4A  A4D8               	btfss	status,2,c
  2453  000D4C  EFAA  F006         	goto	u3671
  2454  000D50  EFAC  F006         	goto	u3670
  2455  000D54                     u3671:
  2456  000D54  EFEB  F006         	goto	l5336
  2457  000D58                     u3670:
  2458  000D58                     
  2459                           ;main.c: 627:                             {;main.c: 628:                                
      +                           Busy = 1;
  2460  000D58  0E01               	movlw	1
  2461  000D5A  6E33               	movwf	_Busy^0,c
  2462  000D5C                     
  2463                           ;main.c: 629:                                 delay_motor_stop_time = Serial_Buffer[2];
  2464  000D5C  C003  F02D         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2465  000D60                     
  2466                           ;main.c: 630:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2467  000D60  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2468  000D64  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2469  000D66                     
  2470                           ;main.c: 632:                                 INTCONbits.GIE=0;
  2471  000D66  9EF2               	bcf	242,7,c	;volatile
  2472  000D68                     
  2473                           ;main.c: 633:                                 write_i2c(0x0050,delay_motor_stop_time);
  2474  000D68  0E50               	movlw	80
  2475  000D6A  0100               	movlb	0	; () banked
  2476  000D6C  6F80               	movwf	write_i2c@address& (0+255),b
  2477  000D6E  0E00               	movlw	0
  2478  000D70  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2479  000D72  0E00               	movlw	0
  2480  000D74  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2481  000D76  0E00               	movlw	0
  2482  000D78  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2483  000D7A  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2484  000D7E  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2485  000D80  EC29  F00E         	call	_write_i2c	;wreg free
  2486  000D84                     
  2487                           ;main.c: 634:                                 INTCONbits.GIE=1;
  2488  000D84  8EF2               	bsf	242,7,c	;volatile
  2489  000D86  EF0B  F005         	goto	l5190
  2490  000D8A                     l5334:
  2491  000D8A  5002               	movf	(_Serial_Buffer+1)^0,w,c
  2492  000D8C  0100               	movlb	0	; () banked
  2493  000D8E  6F86               	movwf	??_main& (0+255),b
  2494  000D90  6B87               	clrf	(??_main+1)& (0+255),b
  2495                           
  2496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2497                           ; Switch size 1, requested type "simple"
  2498                           ; Number of cases is 1, Range of values is 0 to 0
  2499                           ; switch strategies available:
  2500                           ; Name         Instructions Cycles
  2501                           ; simple_byte            4     3 (average)
  2502                           ;	Chosen strategy is simple_byte
  2503  000D92  5187               	movf	(??_main+1)& (0+255),w,b
  2504  000D94  0A00               	xorlw	0	; case 0
  2505  000D96  B4D8               	btfsc	status,2,c
  2506  000D98  EFD0  F006         	goto	l5664
  2507  000D9C  EFEB  F006         	goto	l5336
  2508  000DA0                     l5664:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ; Switch size 1, requested type "simple"
  2512                           ; Number of cases is 6, Range of values is 35 to 102
  2513                           ; switch strategies available:
  2514                           ; Name         Instructions Cycles
  2515                           ; simple_byte           19    10 (average)
  2516                           ;	Chosen strategy is simple_byte
  2517  000DA0  5186               	movf	??_main& (0+255),w,b
  2518  000DA2  0A23               	xorlw	35	; case 35
  2519  000DA4  B4D8               	btfsc	status,2,c
  2520  000DA6  EF0F  F005         	goto	l5192
  2521  000DAA  0A67               	xorlw	103	; case 68
  2522  000DAC  B4D8               	btfsc	status,2,c
  2523  000DAE  EF82  F004         	goto	l5146
  2524  000DB2  0A15               	xorlw	21	; case 81
  2525  000DB4  B4D8               	btfsc	status,2,c
  2526  000DB6  EF7B  F005         	goto	l5222
  2527  000DBA  0A35               	xorlw	53	; case 100
  2528  000DBC  B4D8               	btfsc	status,2,c
  2529  000DBE  EF00  F006         	goto	l5268
  2530  000DC2  0A01               	xorlw	1	; case 101
  2531  000DC4  B4D8               	btfsc	status,2,c
  2532  000DC6  EF44  F006         	goto	l5290
  2533  000DCA  0A03               	xorlw	3	; case 102
  2534  000DCC  B4D8               	btfsc	status,2,c
  2535  000DCE  EFA4  F006         	goto	l5316
  2536  000DD2  EFEB  F006         	goto	l5336
  2537  000DD6                     l5336:
  2538                           
  2539                           ;main.c: 643:                     Serial_Flag = 0;
  2540  000DD6  0E00               	movlw	0
  2541  000DD8  6E37               	movwf	_Serial_Flag^0,c
  2542                           
  2543                           ;main.c: 644:                     Serial_GData = 0;
  2544  000DDA  0E00               	movlw	0
  2545  000DDC  6E36               	movwf	_Serial_GData^0,c
  2546                           
  2547                           ;main.c: 645:                     OpMode = MANUAL_MODE;
  2548  000DDE  0E00               	movlw	0
  2549  000DE0  6E30               	movwf	_OpMode^0,c	;volatile
  2550                           
  2551                           ;main.c: 646:                 }
  2552  000DE2  EFA4  F003         	goto	l191
  2553  000DE6                     l5338:
  2554                           
  2555                           ;main.c: 648:                 {;main.c: 649:                     OpMode = MANUAL_MODE;
  2556  000DE6  0E00               	movlw	0
  2557  000DE8  6E30               	movwf	_OpMode^0,c	;volatile
  2558  000DEA  EFA4  F003         	goto	l191
  2559  000DEE                     l5340:
  2560  000DEE  5030               	movf	_OpMode^0,w,c	;volatile
  2561  000DF0  0100               	movlb	0	; () banked
  2562  000DF2  6F86               	movwf	??_main& (0+255),b
  2563  000DF4  6B87               	clrf	(??_main+1)& (0+255),b
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  000DF6  5187               	movf	(??_main+1)& (0+255),w,b
  2573  000DF8  0A00               	xorlw	0	; case 0
  2574  000DFA  B4D8               	btfsc	status,2,c
  2575  000DFC  EF02  F007         	goto	l5666
  2576  000E00  EFA4  F003         	goto	l191
  2577  000E04                     l5666:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 2, Range of values is 0 to 2
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            7     4 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  000E04  5186               	movf	??_main& (0+255),w,b
  2587  000E06  0A00               	xorlw	0	; case 0
  2588  000E08  B4D8               	btfsc	status,2,c
  2589  000E0A  EFB1  F003         	goto	l193
  2590  000E0E  0A02               	xorlw	2	; case 2
  2591  000E10  B4D8               	btfsc	status,2,c
  2592  000E12  EF78  F004         	goto	l5142
  2593  000E16  EFA4  F003         	goto	l191
  2594  000E1A  EF4D  F001         	goto	start
  2595  000E1E                     __end_of_main:
  2596                           	opt callstack 0
  2597                           
  2598 ;; *************** function _read_i2c *****************
  2599 ;; Defined at:
  2600 ;;		line 118 in file "i2c.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  address         4    0[BANK0 ] long 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  read_byte       2   20[COMRAM] int 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2    0[BANK0 ] int 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:        6 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		___aldiv
  2623 ;;		_i2c_Address
  2624 ;;		_i2c_Read
  2625 ;;		_i2c_Restart
  2626 ;;		_i2c_Start
  2627 ;;		_i2c_Stop
  2628 ;;		_i2c_Write
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text1
  2635  001B40                     __ptext1:
  2636                           	opt callstack 0
  2637  001B40                     _read_i2c:
  2638                           	opt callstack 26
  2639  001B40                     
  2640                           ;i2c.c: 118: int read_i2c(long address);i2c.c: 119: {;i2c.c: 120:  int read_byte;;i2c.c:
      +                           123:  i2c_Start();
  2641  001B40  ECE4  F00F         	call	_i2c_Start	;wreg free
  2642                           
  2643                           ;i2c.c: 124:  i2c_Address(0xA0, 0);
  2644  001B44  0E00               	movlw	0
  2645  001B46  6E3F               	movwf	i2c_Address@mode^0,c
  2646  001B48  0EA0               	movlw	160
  2647  001B4A  ECAF  F00F         	call	_i2c_Address
  2648                           
  2649                           ;i2c.c: 125:  i2c_Write((unsigned char)(address/0x100));
  2650  001B4E  C080  F03E         	movff	read_i2c@address,___aldiv@dividend
  2651  001B52  C081  F03F         	movff	read_i2c@address+1,___aldiv@dividend+1
  2652  001B56  C082  F040         	movff	read_i2c@address+2,___aldiv@dividend+2
  2653  001B5A  C083  F041         	movff	read_i2c@address+3,___aldiv@dividend+3
  2654  001B5E  0E00               	movlw	0
  2655  001B60  6E42               	movwf	___aldiv@divisor^0,c
  2656  001B62  0E01               	movlw	1
  2657  001B64  6E43               	movwf	(___aldiv@divisor+1)^0,c
  2658  001B66  0E00               	movlw	0
  2659  001B68  6E44               	movwf	(___aldiv@divisor+2)^0,c
  2660  001B6A  0E00               	movlw	0
  2661  001B6C  6E45               	movwf	(___aldiv@divisor+3)^0,c
  2662  001B6E  EC6A  F009         	call	___aldiv	;wreg free
  2663  001B72  503E               	movf	?___aldiv^0,w,c
  2664  001B74  ECC0  F00F         	call	_i2c_Write
  2665                           
  2666                           ;i2c.c: 126:  i2c_Write((unsigned char)(address&0xFF));
  2667  001B78  0100               	movlb	0	; () banked
  2668  001B7A  5180               	movf	read_i2c@address& (0+255),w,b
  2669  001B7C  ECC0  F00F         	call	_i2c_Write
  2670                           
  2671                           ;i2c.c: 127:  i2c_Restart();
  2672  001B80  ECDC  F00F         	call	_i2c_Restart	;wreg free
  2673                           
  2674                           ;i2c.c: 128:  i2c_Address(0xA0, 1);
  2675  001B84  0E01               	movlw	1
  2676  001B86  6E3F               	movwf	i2c_Address@mode^0,c
  2677  001B88  0EA0               	movlw	160
  2678  001B8A  ECAF  F00F         	call	_i2c_Address
  2679                           
  2680                           ;i2c.c: 129:  read_byte = i2c_Read(0);
  2681  001B8E  0E00               	movlw	0
  2682  001B90  ECEB  F00E         	call	_i2c_Read
  2683  001B94  C03F  F04C         	movff	?_i2c_Read,read_i2c@read_byte
  2684  001B98  C040  F04D         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2685                           
  2686                           ;i2c.c: 133:     i2c_Stop();
  2687  001B9C  ECE0  F00F         	call	_i2c_Stop	;wreg free
  2688  001BA0                     
  2689                           ;i2c.c: 134:  return (read_byte);
  2690  001BA0  C04C  F080         	movff	read_i2c@read_byte,?_read_i2c
  2691  001BA4  C04D  F081         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2692  001BA8  0012               	return		;funcret
  2693  001BAA                     __end_of_read_i2c:
  2694                           	opt callstack 0
  2695                           
  2696 ;; *************** function _i2c_Restart *****************
  2697 ;; Defined at:
  2698 ;;		line 53 in file "i2c.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    3
  2719 ;; This function calls:
  2720 ;;		_i2c_Wait
  2721 ;; This function is called by:
  2722 ;;		_read_i2c
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text2
  2727  001FB8                     __ptext2:
  2728                           	opt callstack 0
  2729  001FB8                     _i2c_Restart:
  2730                           	opt callstack 26
  2731  001FB8                     
  2732                           ;i2c.c: 54:   i2c_Wait();
  2733  001FB8  EC4A  F00F         	call	_i2c_Wait	;wreg free
  2734  001FBC                     
  2735                           ;i2c.c: 55:  RSEN2=1;
  2736  001FBC  826B               	bsf	3947,1,c	;volatile
  2737  001FBE  0012               	return		;funcret
  2738  001FC0                     __end_of_i2c_Restart:
  2739                           	opt callstack 0
  2740                           
  2741 ;; *************** function _i2c_Read *****************
  2742 ;; Defined at:
  2743 ;;		line 85 in file "i2c.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  ack             1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  ack             1    9[COMRAM] unsigned char 
  2748 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2    7[COMRAM] int 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        4 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    3
  2765 ;; This function calls:
  2766 ;;		_i2c_Wait
  2767 ;; This function is called by:
  2768 ;;		_read_i2c
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text3
  2773  001DD6                     __ptext3:
  2774                           	opt callstack 0
  2775  001DD6                     _i2c_Read:
  2776                           	opt callstack 26
  2777                           
  2778                           ;incstack = 0
  2779                           ;i2c_Read@ack stored from wreg
  2780  001DD6  6E41               	movwf	i2c_Read@ack^0,c
  2781  001DD8                     
  2782                           ;i2c.c: 85: int i2c_Read(unsigned char ack);i2c.c: 86: {;i2c.c: 90:   unsigned char i2cR
      +                          eadData;;i2c.c: 92:   i2c_Wait();
  2783  001DD8  EC4A  F00F         	call	_i2c_Wait	;wreg free
  2784  001DDC                     
  2785                           ;i2c.c: 93:  RCEN2=1;
  2786  001DDC  866B               	bsf	3947,3,c	;volatile
  2787                           
  2788                           ;i2c.c: 94:   i2c_Wait();
  2789  001DDE  EC4A  F00F         	call	_i2c_Wait	;wreg free
  2790  001DE2                     
  2791                           ;i2c.c: 95:   i2cReadData = SSP2BUF;
  2792  001DE2  CF6F F042          	movff	3951,i2c_Read@i2cReadData	;volatile
  2793                           
  2794                           ;i2c.c: 96:   i2c_Wait();
  2795  001DE6  EC4A  F00F         	call	_i2c_Wait	;wreg free
  2796  001DEA                     
  2797                           ;i2c.c: 97:   if ( ack )
  2798  001DEA  5041               	movf	i2c_Read@ack^0,w,c
  2799  001DEC  B4D8               	btfsc	status,2,c
  2800  001DEE  EFFB  F00E         	goto	u1711
  2801  001DF2  EFFD  F00E         	goto	u1710
  2802  001DF6                     u1711:
  2803  001DF6  EF00  F00F         	goto	l529
  2804  001DFA                     u1710:
  2805  001DFA                     
  2806                           ;i2c.c: 98:   ACKDT2=0;
  2807  001DFA  9A6B               	bcf	3947,5,c	;volatile
  2808  001DFC  EF01  F00F         	goto	l530
  2809  001E00                     l529:
  2810                           
  2811                           ;i2c.c: 100:   ACKDT2=1;
  2812  001E00  8A6B               	bsf	3947,5,c	;volatile
  2813  001E02                     l530:
  2814                           
  2815                           ;i2c.c: 101:  ACKEN2=1;
  2816  001E02  886B               	bsf	3947,4,c	;volatile
  2817                           
  2818                           ;i2c.c: 103:  return( i2cReadData );
  2819  001E04  C042  F03F         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2820  001E08  6A40               	clrf	(?_i2c_Read+1)^0,c
  2821  001E0A  0012               	return		;funcret
  2822  001E0C                     __end_of_i2c_Read:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _initUSART *****************
  2826 ;; Defined at:
  2827 ;;		line 20 in file "usart.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text4
  2856  001E6E                     __ptext4:
  2857                           	opt callstack 0
  2858  001E6E                     _initUSART:
  2859                           	opt callstack 28
  2860  001E6E                     
  2861                           ;usart.c: 23:     TRISCbits.TRISC6 = 0;
  2862  001E6E  9C94               	bcf	148,6,c	;volatile
  2863                           
  2864                           ;usart.c: 24:     TRISCbits.TRISC7 = 1;
  2865  001E70  8E94               	bsf	148,7,c	;volatile
  2866                           
  2867                           ;usart.c: 25:     TXSTA1bits.SYNC = 0;
  2868  001E72  98AD               	bcf	173,4,c	;volatile
  2869                           
  2870                           ;usart.c: 26:     TXSTA1bits.TX9 = 0;
  2871  001E74  9CAD               	bcf	173,6,c	;volatile
  2872                           
  2873                           ;usart.c: 27:     TXSTA1bits.TXEN = 1;
  2874  001E76  8AAD               	bsf	173,5,c	;volatile
  2875                           
  2876                           ;usart.c: 28:     RCSTA1bits.RX9 = 0;
  2877  001E78  9CAC               	bcf	172,6,c	;volatile
  2878                           
  2879                           ;usart.c: 29:     RCSTA1bits.CREN = 1;
  2880  001E7A  88AC               	bsf	172,4,c	;volatile
  2881                           
  2882                           ;usart.c: 30:     TXSTA1bits.CSRC = 0;
  2883  001E7C  9EAD               	bcf	173,7,c	;volatile
  2884                           
  2885                           ;usart.c: 31:     RCSTA1bits.ADDEN = 1;
  2886  001E7E  86AC               	bsf	172,3,c	;volatile
  2887                           
  2888                           ;usart.c: 32:     RCSTA1bits.SPEN = 1;
  2889  001E80  8EAC               	bsf	172,7,c	;volatile
  2890                           
  2891                           ;usart.c: 35:     BAUDCON1bits.BRG16 = 0;
  2892  001E82  967E               	bcf	126,3,c	;volatile
  2893                           
  2894                           ;usart.c: 36:     TXSTA1bits.BRGH = 1;
  2895  001E84  84AD               	bsf	173,2,c	;volatile
  2896                           
  2897                           ;usart.c: 37:     PIE1bits.RC1IE = 1;
  2898  001E86  8A9D               	bsf	157,5,c	;volatile
  2899                           
  2900                           ;usart.c: 38:     PIE1bits.TX1IE = 0;
  2901  001E88  989D               	bcf	157,4,c	;volatile
  2902  001E8A                     
  2903                           ;usart.c: 40:     SPBRG1 = 25;
  2904  001E8A  0E19               	movlw	25
  2905  001E8C  6EB0               	movwf	176,c	;volatile
  2906                           
  2907                           ;usart.c: 41:     SPBRGH1 = 0;
  2908  001E8E  0E00               	movlw	0
  2909  001E90  6E7F               	movwf	127,c	;volatile
  2910  001E92  0012               	return		;funcret
  2911  001E94                     __end_of_initUSART:
  2912                           	opt callstack 0
  2913                           
  2914 ;; *************** function _initMotor *****************
  2915 ;; Defined at:
  2916 ;;		line 21 in file "MotorDriver.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text5
  2945  001F72                     __ptext5:
  2946                           	opt callstack 0
  2947  001F72                     _initMotor:
  2948                           	opt callstack 28
  2949  001F72                     
  2950                           ;MotorDriver.c: 23:     PR4 = 0xC7;
  2951  001F72  0EC7               	movlw	199
  2952  001F74  6E77               	movwf	119,c	;volatile
  2953  001F76                     
  2954                           ;MotorDriver.c: 24:     T3CONbits.T3CCP1 = 0;
  2955  001F76  9679               	bcf	121,3,c	;volatile
  2956  001F78                     
  2957                           ;MotorDriver.c: 25:     T3CONbits.T3CCP2 = 1;
  2958  001F78  8C79               	bsf	121,6,c	;volatile
  2959                           
  2960                           ;MotorDriver.c: 26:     T4CON = 0x00;
  2961  001F7A  0E00               	movlw	0
  2962  001F7C  6E76               	movwf	118,c	;volatile
  2963  001F7E  0012               	return		;funcret
  2964  001F80                     __end_of_initMotor:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _init *****************
  2968 ;; Defined at:
  2969 ;;		line 18 in file "IO.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    2
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text6
  2998  001ACE                     __ptext6:
  2999                           	opt callstack 0
  3000  001ACE                     _init:
  3001                           	opt callstack 28
  3002  001ACE                     
  3003                           ;IO.c: 20:     TRISA = 0xFB;
  3004  001ACE  0EFB               	movlw	251
  3005  001AD0  6E92               	movwf	146,c	;volatile
  3006  001AD2                     
  3007                           ;IO.c: 21:     TRISB = 0XFF;
  3008  001AD2  6893               	setf	147,c	;volatile
  3009                           
  3010                           ;IO.c: 22:     TRISC = 0X84;
  3011  001AD4  0E84               	movlw	132
  3012  001AD6  6E94               	movwf	148,c	;volatile
  3013                           
  3014                           ;IO.c: 23:     TRISD = 0XC0;
  3015  001AD8  0EC0               	movlw	192
  3016  001ADA  6E95               	movwf	149,c	;volatile
  3017                           
  3018                           ;IO.c: 24:     TRISE = 0X00;
  3019  001ADC  0E00               	movlw	0
  3020  001ADE  6E96               	movwf	150,c	;volatile
  3021                           
  3022                           ;IO.c: 25:     TRISF = 0X00;
  3023  001AE0  0E00               	movlw	0
  3024  001AE2  6E97               	movwf	151,c	;volatile
  3025                           
  3026                           ;IO.c: 26:     TRISG = 0X05;
  3027  001AE4  0E05               	movlw	5
  3028  001AE6  6E98               	movwf	152,c	;volatile
  3029  001AE8                     
  3030                           ;IO.c: 29:     ADCON0bits.VCFG1 = 0;
  3031  001AE8  9EC2               	bcf	194,7,c	;volatile
  3032  001AEA                     
  3033                           ;IO.c: 30:  ADCON0bits.VCFG0 = 0;
  3034  001AEA  9CC2               	bcf	194,6,c	;volatile
  3035  001AEC                     
  3036                           ;IO.c: 31:     ADCON0bits.ADON=0;
  3037  001AEC  90C2               	bcf	194,0,c	;volatile
  3038  001AEE                     
  3039                           ;IO.c: 34:  ADCON1bits.ADFM = 1;
  3040  001AEE  8EC1               	bsf	193,7,c	;volatile
  3041  001AF0                     
  3042                           ;IO.c: 35:  ADCON1bits.ADCAL = 0;
  3043  001AF0  9CC1               	bcf	193,6,c	;volatile
  3044  001AF2                     
  3045                           ;IO.c: 36:  ADCON1bits.ACQT2 = 0;
  3046  001AF2  9AC1               	bcf	193,5,c	;volatile
  3047  001AF4                     
  3048                           ;IO.c: 37:  ADCON1bits.ACQT1 = 1;
  3049  001AF4  88C1               	bsf	193,4,c	;volatile
  3050  001AF6                     
  3051                           ;IO.c: 38:  ADCON1bits.ACQT0 = 0;
  3052  001AF6  96C1               	bcf	193,3,c	;volatile
  3053  001AF8                     
  3054                           ;IO.c: 39:  ADCON1bits.ADCS2 = 1;
  3055  001AF8  84C1               	bsf	193,2,c	;volatile
  3056  001AFA                     
  3057                           ;IO.c: 40:  ADCON1bits.ADCS1 = 0;
  3058  001AFA  92C1               	bcf	193,1,c	;volatile
  3059  001AFC                     
  3060                           ;IO.c: 41:  ADCON1bits.ADCS0 = 0;
  3061  001AFC  90C1               	bcf	193,0,c	;volatile
  3062  001AFE                     
  3063                           ;IO.c: 46:  WDTCONbits.ADSHR = 1;
  3064  001AFE  88C0               	bsf	192,4,c	;volatile
  3065  001B00                     
  3066                           ;IO.c: 52:  ANCON0bits.PCFG0 = 0;
  3067  001B00  90C1               	bcf	193,0,c	;volatile
  3068  001B02                     
  3069                           ;IO.c: 53:  ANCON0bits.PCFG1 = 1;
  3070  001B02  82C1               	bsf	193,1,c	;volatile
  3071  001B04                     
  3072                           ;IO.c: 54:  ANCON0bits.PCFG2 = 1;
  3073  001B04  84C1               	bsf	193,2,c	;volatile
  3074  001B06                     
  3075                           ;IO.c: 55:  ANCON0bits.PCFG3 = 1;
  3076  001B06  86C1               	bsf	193,3,c	;volatile
  3077  001B08                     
  3078                           ;IO.c: 56:  ANCON0bits.PCFG4 = 1;
  3079  001B08  88C1               	bsf	193,4,c	;volatile
  3080  001B0A                     
  3081                           ;IO.c: 57:     ANCON0bits.PCFG7 = 1;
  3082  001B0A  8EC1               	bsf	193,7,c	;volatile
  3083  001B0C                     
  3084                           ;IO.c: 59:     WDTCONbits.ADSHR = 0;
  3085  001B0C  98C0               	bcf	192,4,c	;volatile
  3086  001B0E                     
  3087                           ;IO.c: 61:     INTCONbits.GIE = 1;
  3088  001B0E  8EF2               	bsf	242,7,c	;volatile
  3089                           
  3090                           ;IO.c: 66:     OSCCONbits.SCS = 0b11;
  3091  001B10  0E03               	movlw	3
  3092  001B12  12D3               	iorwf	211,f,c	;volatile
  3093                           
  3094                           ;IO.c: 67:     OSCCONbits.IRCF = 0b111;
  3095  001B14  0E70               	movlw	112
  3096  001B16  12D3               	iorwf	211,f,c	;volatile
  3097                           
  3098                           ;IO.c: 69:     ADRES = 0;
  3099  001B18  0E00               	movlw	0
  3100  001B1A  6EC4               	movwf	196,c	;volatile
  3101  001B1C  0E00               	movlw	0
  3102  001B1E  6EC3               	movwf	195,c	;volatile
  3103  001B20                     
  3104                           ;IO.c: 72:  ADCON0bits.CHS0 = 0;
  3105  001B20  94C2               	bcf	194,2,c	;volatile
  3106  001B22                     
  3107                           ;IO.c: 73:  ADCON0bits.CHS1 = 0;
  3108  001B22  96C2               	bcf	194,3,c	;volatile
  3109  001B24                     
  3110                           ;IO.c: 74:  ADCON0bits.CHS2 = 0;
  3111  001B24  98C2               	bcf	194,4,c	;volatile
  3112  001B26                     
  3113                           ;IO.c: 75:  ADCON0bits.CHS3 = 0;
  3114  001B26  9AC2               	bcf	194,5,c	;volatile
  3115  001B28                     
  3116                           ;IO.c: 76:  ADCON1bits.ADCAL = 1;
  3117  001B28  8CC1               	bsf	193,6,c	;volatile
  3118  001B2A                     
  3119                           ;IO.c: 77:  ADCON0bits.ADON=1;
  3120  001B2A  80C2               	bsf	194,0,c	;volatile
  3121  001B2C                     
  3122                           ;IO.c: 79:  ADCON0bits.GO=1;
  3123  001B2C  82C2               	bsf	194,1,c	;volatile
  3124  001B2E                     l600:
  3125  001B2E  B2C2               	btfsc	194,1,c	;volatile
  3126  001B30  EF9C  F00D         	goto	u1721
  3127  001B34  EF9E  F00D         	goto	u1720
  3128  001B38                     u1721:
  3129  001B38  EF97  F00D         	goto	l600
  3130  001B3C                     u1720:
  3131  001B3C                     
  3132                           ;IO.c: 81:  ADCON1bits.ADCAL = 0;
  3133  001B3C  9CC1               	bcf	193,6,c	;volatile
  3134  001B3E  0012               	return		;funcret
  3135  001B40                     __end_of_init:
  3136                           	opt callstack 0
  3137                           
  3138 ;; *************** function _i2c_Init *****************
  3139 ;; Defined at:
  3140 ;;		line 24 in file "i2c.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text7
  3169  001F1C                     __ptext7:
  3170                           	opt callstack 0
  3171  001F1C                     _i2c_Init:
  3172                           	opt callstack 28
  3173  001F1C                     
  3174                           ;i2c.c: 28:  TRISD5=1;
  3175  001F1C  8A95               	bsf	3989,5,c	;volatile
  3176                           
  3177                           ;i2c.c: 29:  TRISD6=1;
  3178  001F1E  8C95               	bsf	3989,6,c	;volatile
  3179  001F20                     
  3180                           ;i2c.c: 31:  SSP2CON1 = 0b00101000;
  3181  001F20  0E28               	movlw	40
  3182  001F22  6E6C               	movwf	108,c	;volatile
  3183                           
  3184                           ;i2c.c: 32:  SSP2CON2 = 0x00;
  3185  001F24  0E00               	movlw	0
  3186  001F26  6E6B               	movwf	107,c	;volatile
  3187                           
  3188                           ;i2c.c: 34:     SSP2ADD = 39;
  3189  001F28  0E27               	movlw	39
  3190  001F2A  6E6E               	movwf	110,c	;volatile
  3191                           
  3192                           ;i2c.c: 36:  SSP2STAT = 0b11000000;
  3193  001F2C  0EC0               	movlw	192
  3194  001F2E  6E6D               	movwf	109,c	;volatile
  3195  001F30  0012               	return		;funcret
  3196  001F32                     __end_of_i2c_Init:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _flush *****************
  3200 ;; Defined at:
  3201 ;;		line 1099 in file "main.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  i               2    6[COMRAM] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text8
  3230  001D62                     __ptext8:
  3231                           	opt callstack 0
  3232  001D62                     _flush:
  3233                           	opt callstack 28
  3234  001D62                     
  3235                           ;main.c: 1101:     int i;;main.c: 1103:     for(i=0; i<16; i++)
  3236  001D62  0E00               	movlw	0
  3237  001D64  6E3F               	movwf	(flush@i+1)^0,c
  3238  001D66  0E00               	movlw	0
  3239  001D68  6E3E               	movwf	flush@i^0,c
  3240  001D6A                     l3562:
  3241                           
  3242                           ;main.c: 1104:     {;main.c: 1105:         Serial_Buffer[i]=0x00;
  3243  001D6A  0E01               	movlw	low _Serial_Buffer
  3244  001D6C  243E               	addwf	flush@i^0,w,c
  3245  001D6E  6ED9               	movwf	fsr2l,c
  3246  001D70  0E00               	movlw	high _Serial_Buffer
  3247  001D72  203F               	addwfc	(flush@i+1)^0,w,c
  3248  001D74  6EDA               	movwf	fsr2h,c
  3249  001D76  0E00               	movlw	0
  3250  001D78  6EDF               	movwf	indf2,c
  3251  001D7A                     
  3252                           ;main.c: 1106:     }
  3253  001D7A  4A3E               	infsnz	flush@i^0,f,c
  3254  001D7C  2A3F               	incf	(flush@i+1)^0,f,c
  3255  001D7E  BE3F               	btfsc	(flush@i+1)^0,7,c
  3256  001D80  EFCB  F00E         	goto	u2061
  3257  001D84  503F               	movf	(flush@i+1)^0,w,c
  3258  001D86  E109               	bnz	u2060
  3259  001D88  0E10               	movlw	16
  3260  001D8A  5C3E               	subwf	flush@i^0,w,c
  3261  001D8C  A0D8               	btfss	status,0,c
  3262  001D8E  EFCB  F00E         	goto	u2061
  3263  001D92  EFCD  F00E         	goto	u2060
  3264  001D96                     u2061:
  3265  001D96  EFB5  F00E         	goto	l3562
  3266  001D9A                     u2060:
  3267  001D9A  0012               	return		;funcret
  3268  001D9C                     __end_of_flush:
  3269                           	opt callstack 0
  3270                           
  3271 ;; *************** function _WriteSTLED316SVibMode *****************
  3272 ;; Defined at:
  3273 ;;		line 253 in file "Display.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  v_mode          1    wreg     unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  v_mode          1   12[COMRAM] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:        1 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    3
  3294 ;; This function calls:
  3295 ;;		_STLED316s_SPI_SendData
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text9
  3302  001C04                     __ptext9:
  3303                           	opt callstack 0
  3304  001C04                     _WriteSTLED316SVibMode:
  3305                           	opt callstack 27
  3306                           
  3307                           ;incstack = 0
  3308                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3309  001C04  6E44               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3310  001C06                     
  3311                           ;Display.c: 253: void WriteSTLED316SVibMode( char v_mode);Display.c: 254: {;Display.c: 2
      +                          56:  LATCbits.LATC4 = 0;
  3312  001C06  988B               	bcf	139,4,c	;volatile
  3313  001C08                     
  3314                           ;Display.c: 258:  STLED316s_SPI_SendData (0x00 );
  3315  001C08  0E00               	movlw	0
  3316  001C0A  EC27  F00D         	call	_STLED316s_SPI_SendData
  3317  001C0E                     
  3318                           ;Display.c: 261:  LATCbits.LATC4 = 1;
  3319  001C0E  888B               	bsf	139,4,c	;volatile
  3320  001C10                     
  3321                           ;Display.c: 263:  LATCbits.LATC4 = 0;
  3322  001C10  988B               	bcf	139,4,c	;volatile
  3323                           
  3324                           ;Display.c: 265:  STLED316s_SPI_SendData (0x00);
  3325  001C12  0E00               	movlw	0
  3326  001C14  EC27  F00D         	call	_STLED316s_SPI_SendData
  3327  001C18                     
  3328                           ;Display.c: 271:     if (v_mode == 1)
  3329  001C18  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3330  001C1A  A4D8               	btfss	status,2,c
  3331  001C1C  EF12  F00E         	goto	u2971
  3332  001C20  EF14  F00E         	goto	u2970
  3333  001C24                     u2971:
  3334  001C24  EF1C  F00E         	goto	l4694
  3335  001C28                     u2970:
  3336  001C28                     
  3337                           ;Display.c: 272:     {;Display.c: 273:   STLED316s_SPI_SendData (0x00);
  3338  001C28  0E00               	movlw	0
  3339  001C2A  EC27  F00D         	call	_STLED316s_SPI_SendData
  3340                           
  3341                           ;Display.c: 274:         STLED316s_SPI_SendData (0xBE);
  3342  001C2E  0EBE               	movlw	190
  3343  001C30  EC27  F00D         	call	_STLED316s_SPI_SendData
  3344                           
  3345                           ;Display.c: 275:     }
  3346  001C34  EF22  F00E         	goto	l4696
  3347  001C38                     l4694:
  3348                           
  3349                           ;Display.c: 277:     {;Display.c: 278:         STLED316s_SPI_SendData (0x00);
  3350  001C38  0E00               	movlw	0
  3351  001C3A  EC27  F00D         	call	_STLED316s_SPI_SendData
  3352                           
  3353                           ;Display.c: 279:         STLED316s_SPI_SendData (0x3E);
  3354  001C3E  0E3E               	movlw	62
  3355  001C40  EC27  F00D         	call	_STLED316s_SPI_SendData
  3356  001C44                     l4696:
  3357                           
  3358                           ;Display.c: 282:  LATCbits.LATC4 = 1;
  3359  001C44  888B               	bsf	139,4,c	;volatile
  3360  001C46                     
  3361                           ;Display.c: 284:  LATCbits.LATC4 = 0;
  3362  001C46  988B               	bcf	139,4,c	;volatile
  3363                           
  3364                           ;Display.c: 286:  STLED316s_SPI_SendData ( 0x0D );
  3365  001C48  0E0D               	movlw	13
  3366  001C4A  EC27  F00D         	call	_STLED316s_SPI_SendData
  3367  001C4E                     
  3368                           ;Display.c: 288:  LATCbits.LATC4 = 1;
  3369  001C4E  888B               	bsf	139,4,c	;volatile
  3370  001C50  0012               	return		;funcret
  3371  001C52                     __end_of_WriteSTLED316SVibMode:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _ToggleVIB_Mode *****************
  3375 ;; Defined at:
  3376 ;;		line 863 in file "main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    5
  3397 ;; This function calls:
  3398 ;;		_write_i2c
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text10
  3405  001CE6                     __ptext10:
  3406                           	opt callstack 0
  3407  001CE6                     _ToggleVIB_Mode:
  3408                           	opt callstack 25
  3409  001CE6                     
  3410                           ;main.c: 865:     if (vibration_mode)
  3411  001CE6  5032               	movf	_vibration_mode^0,w,c
  3412  001CE8  B4D8               	btfsc	status,2,c
  3413  001CEA  EF79  F00E         	goto	u2961
  3414  001CEE  EF7B  F00E         	goto	u2960
  3415  001CF2                     u2961:
  3416  001CF2  EF7F  F00E         	goto	l4674
  3417  001CF6                     u2960:
  3418  001CF6                     
  3419                           ;main.c: 866:         vibration_mode = 0;
  3420  001CF6  0E00               	movlw	0
  3421  001CF8  6E32               	movwf	_vibration_mode^0,c
  3422  001CFA  EF81  F00E         	goto	l4676
  3423  001CFE                     l4674:
  3424                           
  3425                           ;main.c: 868:         vibration_mode = 1;
  3426  001CFE  0E01               	movlw	1
  3427  001D00  6E32               	movwf	_vibration_mode^0,c
  3428  001D02                     l4676:
  3429                           
  3430                           ;main.c: 875:     INTCONbits.GIE=0;
  3431  001D02  9EF2               	bcf	242,7,c	;volatile
  3432  001D04                     
  3433                           ;main.c: 876:     write_i2c(0x0010, vibration_mode);
  3434  001D04  0E10               	movlw	16
  3435  001D06  0100               	movlb	0	; () banked
  3436  001D08  6F80               	movwf	write_i2c@address& (0+255),b
  3437  001D0A  0E00               	movlw	0
  3438  001D0C  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  3439  001D0E  0E00               	movlw	0
  3440  001D10  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  3441  001D12  0E00               	movlw	0
  3442  001D14  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  3443  001D16  C032  F084         	movff	_vibration_mode,write_i2c@data
  3444  001D1A  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  3445  001D1C  EC29  F00E         	call	_write_i2c	;wreg free
  3446  001D20                     
  3447                           ;main.c: 877:     INTCONbits.GIE=1;
  3448  001D20  8EF2               	bsf	242,7,c	;volatile
  3449  001D22  0012               	return		;funcret
  3450  001D24                     __end_of_ToggleVIB_Mode:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function _write_i2c *****************
  3454 ;; Defined at:
  3455 ;;		line 107 in file "i2c.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  address         4    0[BANK0 ] long 
  3458 ;;  data            2    4[BANK0 ] int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:        6 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    4
  3477 ;; This function calls:
  3478 ;;		___aldiv
  3479 ;;		_i2c_Address
  3480 ;;		_i2c_Start
  3481 ;;		_i2c_Stop
  3482 ;;		_i2c_Write
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;;		_ToggleVIB_Mode
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text11
  3490  001C52                     __ptext11:
  3491                           	opt callstack 0
  3492  001C52                     _write_i2c:
  3493                           	opt callstack 26
  3494  001C52                     
  3495                           ;i2c.c: 107: void write_i2c(long address, int data);i2c.c: 108: {;i2c.c: 109:  i2c_Start
      +                          ();
  3496  001C52  ECE4  F00F         	call	_i2c_Start	;wreg free
  3497                           
  3498                           ;i2c.c: 110:  i2c_Address(0xA0, 0);
  3499  001C56  0E00               	movlw	0
  3500  001C58  6E3F               	movwf	i2c_Address@mode^0,c
  3501  001C5A  0EA0               	movlw	160
  3502  001C5C  ECAF  F00F         	call	_i2c_Address
  3503                           
  3504                           ;i2c.c: 111:  i2c_Write((unsigned char)(address/0x100));
  3505  001C60  C080  F03E         	movff	write_i2c@address,___aldiv@dividend
  3506  001C64  C081  F03F         	movff	write_i2c@address+1,___aldiv@dividend+1
  3507  001C68  C082  F040         	movff	write_i2c@address+2,___aldiv@dividend+2
  3508  001C6C  C083  F041         	movff	write_i2c@address+3,___aldiv@dividend+3
  3509  001C70  0E00               	movlw	0
  3510  001C72  6E42               	movwf	___aldiv@divisor^0,c
  3511  001C74  0E01               	movlw	1
  3512  001C76  6E43               	movwf	(___aldiv@divisor+1)^0,c
  3513  001C78  0E00               	movlw	0
  3514  001C7A  6E44               	movwf	(___aldiv@divisor+2)^0,c
  3515  001C7C  0E00               	movlw	0
  3516  001C7E  6E45               	movwf	(___aldiv@divisor+3)^0,c
  3517  001C80  EC6A  F009         	call	___aldiv	;wreg free
  3518  001C84  503E               	movf	?___aldiv^0,w,c
  3519  001C86  ECC0  F00F         	call	_i2c_Write
  3520                           
  3521                           ;i2c.c: 112:  i2c_Write((unsigned char)(address&0xFF));
  3522  001C8A  0100               	movlb	0	; () banked
  3523  001C8C  5180               	movf	write_i2c@address& (0+255),w,b
  3524  001C8E  ECC0  F00F         	call	_i2c_Write
  3525                           
  3526                           ;i2c.c: 113:  i2c_Write((unsigned char)data);
  3527  001C92  0100               	movlb	0	; () banked
  3528  001C94  5184               	movf	write_i2c@data& (0+255),w,b
  3529  001C96  ECC0  F00F         	call	_i2c_Write
  3530                           
  3531                           ;i2c.c: 114:   i2c_Stop();
  3532  001C9A  ECE0  F00F         	call	_i2c_Stop	;wreg free
  3533  001C9E  0012               	return		;funcret
  3534  001CA0                     __end_of_write_i2c:
  3535                           	opt callstack 0
  3536                           
  3537 ;; *************** function _i2c_Write *****************
  3538 ;; Defined at:
  3539 ;;		line 66 in file "i2c.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  data            1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  data            1    7[COMRAM] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;Total ram usage:        1 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    3
  3560 ;; This function calls:
  3561 ;;		_i2c_Wait
  3562 ;; This function is called by:
  3563 ;;		_write_i2c
  3564 ;;		_read_i2c
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text12
  3569  001F80                     __ptext12:
  3570                           	opt callstack 0
  3571  001F80                     _i2c_Write:
  3572                           	opt callstack 26
  3573                           
  3574                           ;incstack = 0
  3575                           ;i2c_Write@data stored from wreg
  3576  001F80  6E3F               	movwf	i2c_Write@data^0,c
  3577  001F82                     
  3578                           ;i2c.c: 66: void i2c_Write(unsigned char data);i2c.c: 67: {;i2c.c: 68:   i2c_Wait();
  3579  001F82  EC4A  F00F         	call	_i2c_Wait	;wreg free
  3580  001F86                     
  3581                           ;i2c.c: 69:   SSP2BUF = data;
  3582  001F86  C03F  FF6F         	movff	i2c_Write@data,3951	;volatile
  3583  001F8A  0012               	return		;funcret
  3584  001F8C                     __end_of_i2c_Write:
  3585                           	opt callstack 0
  3586                           
  3587 ;; *************** function _i2c_Stop *****************
  3588 ;; Defined at:
  3589 ;;		line 59 in file "i2c.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    3
  3610 ;; This function calls:
  3611 ;;		_i2c_Wait
  3612 ;; This function is called by:
  3613 ;;		_write_i2c
  3614 ;;		_read_i2c
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text13
  3619  001FC0                     __ptext13:
  3620                           	opt callstack 0
  3621  001FC0                     _i2c_Stop:
  3622                           	opt callstack 26
  3623  001FC0                     
  3624                           ;i2c.c: 61:   i2c_Wait();
  3625  001FC0  EC4A  F00F         	call	_i2c_Wait	;wreg free
  3626  001FC4                     
  3627                           ;i2c.c: 62:   PEN2=1;
  3628  001FC4  846B               	bsf	3947,2,c	;volatile
  3629  001FC6  0012               	return		;funcret
  3630  001FC8                     __end_of_i2c_Stop:
  3631                           	opt callstack 0
  3632                           
  3633 ;; *************** function _i2c_Start *****************
  3634 ;; Defined at:
  3635 ;;		line 46 in file "i2c.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    3
  3656 ;; This function calls:
  3657 ;;		_i2c_Wait
  3658 ;; This function is called by:
  3659 ;;		_write_i2c
  3660 ;;		_read_i2c
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text14
  3665  001FC8                     __ptext14:
  3666                           	opt callstack 0
  3667  001FC8                     _i2c_Start:
  3668                           	opt callstack 26
  3669  001FC8                     
  3670                           ;i2c.c: 48:   i2c_Wait();
  3671  001FC8  EC4A  F00F         	call	_i2c_Wait	;wreg free
  3672  001FCC                     
  3673                           ;i2c.c: 49:  SEN2=1;
  3674  001FCC  806B               	bsf	3947,0,c	;volatile
  3675  001FCE  0012               	return		;funcret
  3676  001FD0                     __end_of_i2c_Start:
  3677                           	opt callstack 0
  3678                           
  3679 ;; *************** function _i2c_Address *****************
  3680 ;; Defined at:
  3681 ;;		line 74 in file "i2c.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  address         1    wreg     unsigned char 
  3684 ;;  mode            1    7[COMRAM] unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  address         1    8[COMRAM] unsigned char 
  3687 ;;  l_address       1    9[COMRAM] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;Total ram usage:        3 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    3
  3704 ;; This function calls:
  3705 ;;		_i2c_Wait
  3706 ;; This function is called by:
  3707 ;;		_write_i2c
  3708 ;;		_read_i2c
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text15
  3713  001F5E                     __ptext15:
  3714                           	opt callstack 0
  3715  001F5E                     _i2c_Address:
  3716                           	opt callstack 26
  3717                           
  3718                           ;incstack = 0
  3719                           ;i2c_Address@address stored from wreg
  3720  001F5E  6E40               	movwf	i2c_Address@address^0,c
  3721  001F60                     
  3722                           ;i2c.c: 74: void i2c_Address(unsigned char address, unsigned char mode);i2c.c: 75: {;i2c
      +                          .c: 76:  unsigned char l_address;;i2c.c: 78:  l_address=address;
  3723  001F60  C040  F041         	movff	i2c_Address@address,i2c_Address@l_address
  3724  001F64                     
  3725                           ;i2c.c: 79:  l_address += mode;
  3726  001F64  503F               	movf	i2c_Address@mode^0,w,c
  3727  001F66  2641               	addwf	i2c_Address@l_address^0,f,c
  3728  001F68                     
  3729                           ;i2c.c: 80:   i2c_Wait();
  3730  001F68  EC4A  F00F         	call	_i2c_Wait	;wreg free
  3731  001F6C                     
  3732                           ;i2c.c: 81:   SSP2BUF = l_address;
  3733  001F6C  C041  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3734  001F70  0012               	return		;funcret
  3735  001F72                     __end_of_i2c_Address:
  3736                           	opt callstack 0
  3737                           
  3738 ;; *************** function _i2c_Wait *****************
  3739 ;; Defined at:
  3740 ;;		line 41 in file "i2c.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;Total ram usage:        1 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    2
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_i2c_Start
  3765 ;;		_i2c_Restart
  3766 ;;		_i2c_Stop
  3767 ;;		_i2c_Write
  3768 ;;		_i2c_Address
  3769 ;;		_i2c_Read
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text16
  3774  001E94                     __ptext16:
  3775                           	opt callstack 0
  3776  001E94                     _i2c_Wait:
  3777                           	opt callstack 26
  3778  001E94                     l2756:
  3779  001E94  CF6B F03E          	movff	3947,??_i2c_Wait	;volatile
  3780  001E98  0E1F               	movlw	31
  3781  001E9A  163E               	andwf	??_i2c_Wait^0,f,c
  3782  001E9C  A4D8               	btfss	status,2,c
  3783  001E9E  EF53  F00F         	goto	u1381
  3784  001EA2  EF55  F00F         	goto	u1380
  3785  001EA6                     u1381:
  3786  001EA6  EF4A  F00F         	goto	l2756
  3787  001EAA                     u1380:
  3788  001EAA  B46D               	btfsc	109,2,c	;volatile
  3789  001EAC  EF5A  F00F         	goto	u1391
  3790  001EB0  EF5C  F00F         	goto	u1390
  3791  001EB4                     u1391:
  3792  001EB4  EF4A  F00F         	goto	l2756
  3793  001EB8                     u1390:
  3794  001EB8  0012               	return		;funcret
  3795  001EBA                     __end_of_i2c_Wait:
  3796                           	opt callstack 0
  3797                           
  3798 ;; *************** function ___aldiv *****************
  3799 ;; Defined at:
  3800 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  dividend        4    6[COMRAM] long 
  3803 ;;  divisor         4   10[COMRAM] long 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  quotient        4   16[COMRAM] long 
  3806 ;;  sign            1   15[COMRAM] unsigned char 
  3807 ;;  counter         1   14[COMRAM] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  4    6[COMRAM] long 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:       14 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    2
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_write_i2c
  3828 ;;		_read_i2c
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text17
  3833  0012D4                     __ptext17:
  3834                           	opt callstack 0
  3835  0012D4                     ___aldiv:
  3836                           	opt callstack 27
  3837  0012D4  0E00               	movlw	0
  3838  0012D6  6E47               	movwf	___aldiv@sign^0,c
  3839  0012D8  BE45               	btfsc	(___aldiv@divisor+3)^0,7,c
  3840  0012DA  EF73  F009         	goto	u1480
  3841  0012DE  EF71  F009         	goto	u1481
  3842  0012E2                     u1481:
  3843  0012E2  EF7D  F009         	goto	l2890
  3844  0012E6                     u1480:
  3845  0012E6  1E45               	comf	(___aldiv@divisor+3)^0,f,c
  3846  0012E8  1E44               	comf	(___aldiv@divisor+2)^0,f,c
  3847  0012EA  1E43               	comf	(___aldiv@divisor+1)^0,f,c
  3848  0012EC  6C42               	negf	___aldiv@divisor^0,c
  3849  0012EE  0E00               	movlw	0
  3850  0012F0  2243               	addwfc	(___aldiv@divisor+1)^0,f,c
  3851  0012F2  2244               	addwfc	(___aldiv@divisor+2)^0,f,c
  3852  0012F4  2245               	addwfc	(___aldiv@divisor+3)^0,f,c
  3853  0012F6  0E01               	movlw	1
  3854  0012F8  6E47               	movwf	___aldiv@sign^0,c
  3855  0012FA                     l2890:
  3856  0012FA  BE41               	btfsc	(___aldiv@dividend+3)^0,7,c
  3857  0012FC  EF84  F009         	goto	u1490
  3858  001300  EF82  F009         	goto	u1491
  3859  001304                     u1491:
  3860  001304  EF8E  F009         	goto	l2896
  3861  001308                     u1490:
  3862  001308  1E41               	comf	(___aldiv@dividend+3)^0,f,c
  3863  00130A  1E40               	comf	(___aldiv@dividend+2)^0,f,c
  3864  00130C  1E3F               	comf	(___aldiv@dividend+1)^0,f,c
  3865  00130E  6C3E               	negf	___aldiv@dividend^0,c
  3866  001310  0E00               	movlw	0
  3867  001312  223F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3868  001314  2240               	addwfc	(___aldiv@dividend+2)^0,f,c
  3869  001316  2241               	addwfc	(___aldiv@dividend+3)^0,f,c
  3870  001318  0E01               	movlw	1
  3871  00131A  1A47               	xorwf	___aldiv@sign^0,f,c
  3872  00131C                     l2896:
  3873  00131C  0E00               	movlw	0
  3874  00131E  6E48               	movwf	___aldiv@quotient^0,c
  3875  001320  0E00               	movlw	0
  3876  001322  6E49               	movwf	(___aldiv@quotient+1)^0,c
  3877  001324  0E00               	movlw	0
  3878  001326  6E4A               	movwf	(___aldiv@quotient+2)^0,c
  3879  001328  0E00               	movlw	0
  3880  00132A  6E4B               	movwf	(___aldiv@quotient+3)^0,c
  3881  00132C  5042               	movf	___aldiv@divisor^0,w,c
  3882  00132E  1043               	iorwf	(___aldiv@divisor+1)^0,w,c
  3883  001330  1044               	iorwf	(___aldiv@divisor+2)^0,w,c
  3884  001332  1045               	iorwf	(___aldiv@divisor+3)^0,w,c
  3885  001334  B4D8               	btfsc	status,2,c
  3886  001336  EF9F  F009         	goto	u1501
  3887  00133A  EFA1  F009         	goto	u1500
  3888  00133E                     u1501:
  3889  00133E  EFD7  F009         	goto	l2918
  3890  001342                     u1500:
  3891  001342  0E01               	movlw	1
  3892  001344  6E46               	movwf	___aldiv@counter^0,c
  3893  001346  EFAB  F009         	goto	l2904
  3894  00134A                     l2902:
  3895  00134A  90D8               	bcf	status,0,c
  3896  00134C  3642               	rlcf	___aldiv@divisor^0,f,c
  3897  00134E  3643               	rlcf	(___aldiv@divisor+1)^0,f,c
  3898  001350  3644               	rlcf	(___aldiv@divisor+2)^0,f,c
  3899  001352  3645               	rlcf	(___aldiv@divisor+3)^0,f,c
  3900  001354  2A46               	incf	___aldiv@counter^0,f,c
  3901  001356                     l2904:
  3902  001356  AE45               	btfss	(___aldiv@divisor+3)^0,7,c
  3903  001358  EFB0  F009         	goto	u1511
  3904  00135C  EFB2  F009         	goto	u1510
  3905  001360                     u1511:
  3906  001360  EFA5  F009         	goto	l2902
  3907  001364                     u1510:
  3908  001364                     l2906:
  3909  001364  90D8               	bcf	status,0,c
  3910  001366  3648               	rlcf	___aldiv@quotient^0,f,c
  3911  001368  3649               	rlcf	(___aldiv@quotient+1)^0,f,c
  3912  00136A  364A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3913  00136C  364B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3914  00136E  5042               	movf	___aldiv@divisor^0,w,c
  3915  001370  5C3E               	subwf	___aldiv@dividend^0,w,c
  3916  001372  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3917  001374  583F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3918  001376  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3919  001378  5840               	subwfb	(___aldiv@dividend+2)^0,w,c
  3920  00137A  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3921  00137C  5841               	subwfb	(___aldiv@dividend+3)^0,w,c
  3922  00137E  A0D8               	btfss	status,0,c
  3923  001380  EFC4  F009         	goto	u1521
  3924  001384  EFC6  F009         	goto	u1520
  3925  001388                     u1521:
  3926  001388  EFCF  F009         	goto	l2914
  3927  00138C                     u1520:
  3928  00138C  5042               	movf	___aldiv@divisor^0,w,c
  3929  00138E  5E3E               	subwf	___aldiv@dividend^0,f,c
  3930  001390  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3931  001392  5A3F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3932  001394  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3933  001396  5A40               	subwfb	(___aldiv@dividend+2)^0,f,c
  3934  001398  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3935  00139A  5A41               	subwfb	(___aldiv@dividend+3)^0,f,c
  3936  00139C  8048               	bsf	___aldiv@quotient^0,0,c
  3937  00139E                     l2914:
  3938  00139E  90D8               	bcf	status,0,c
  3939  0013A0  3245               	rrcf	(___aldiv@divisor+3)^0,f,c
  3940  0013A2  3244               	rrcf	(___aldiv@divisor+2)^0,f,c
  3941  0013A4  3243               	rrcf	(___aldiv@divisor+1)^0,f,c
  3942  0013A6  3242               	rrcf	___aldiv@divisor^0,f,c
  3943  0013A8  2E46               	decfsz	___aldiv@counter^0,f,c
  3944  0013AA  EFB2  F009         	goto	l2906
  3945  0013AE                     l2918:
  3946  0013AE  5047               	movf	___aldiv@sign^0,w,c
  3947  0013B0  B4D8               	btfsc	status,2,c
  3948  0013B2  EFDD  F009         	goto	u1531
  3949  0013B6  EFDF  F009         	goto	u1530
  3950  0013BA                     u1531:
  3951  0013BA  EFE7  F009         	goto	l2922
  3952  0013BE                     u1530:
  3953  0013BE  1E4B               	comf	(___aldiv@quotient+3)^0,f,c
  3954  0013C0  1E4A               	comf	(___aldiv@quotient+2)^0,f,c
  3955  0013C2  1E49               	comf	(___aldiv@quotient+1)^0,f,c
  3956  0013C4  6C48               	negf	___aldiv@quotient^0,c
  3957  0013C6  0E00               	movlw	0
  3958  0013C8  2249               	addwfc	(___aldiv@quotient+1)^0,f,c
  3959  0013CA  224A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3960  0013CC  224B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3961  0013CE                     l2922:
  3962  0013CE  C048  F03E         	movff	___aldiv@quotient,?___aldiv
  3963  0013D2  C049  F03F         	movff	___aldiv@quotient+1,?___aldiv+1
  3964  0013D6  C04A  F040         	movff	___aldiv@quotient+2,?___aldiv+2
  3965  0013DA  C04B  F041         	movff	___aldiv@quotient+3,?___aldiv+3
  3966  0013DE  0012               	return		;funcret
  3967  0013E0                     __end_of___aldiv:
  3968                           	opt callstack 0
  3969                           
  3970 ;; *************** function _MotorPosition_Init *****************
  3971 ;; Defined at:
  3972 ;;		line 818 in file "main.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        2 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    4
  3993 ;; This function calls:
  3994 ;;		_MotorBREAK
  3995 ;;		_MotorON_PWM
  3996 ;;		_Read_IR
  3997 ;;		_WriteSTLED316SErr
  3998 ;;		_delay_1ms
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text18
  4005  0013E0                     __ptext18:
  4006                           	opt callstack 0
  4007  0013E0                     _MotorPosition_Init:
  4008                           	opt callstack 26
  4009  0013E0                     
  4010                           ;main.c: 820:     LATAbits.LATA2 = 1;
  4011  0013E0  8489               	bsf	137,2,c	;volatile
  4012  0013E2                     
  4013                           ;main.c: 821:     MotorON_PWM();
  4014  0013E2  ECD2  F00F         	call	_MotorON_PWM	;wreg free
  4015  0013E6                     
  4016                           ;main.c: 822:     _delay((unsigned long)((350)*(8000000/4000.0)));
  4017  0013E6  0E04               	movlw	4
  4018  0013E8  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  4019  0013EA  0E8E               	movlw	142
  4020  0013EC  6E47               	movwf	??_MotorPosition_Init^0,c
  4021  0013EE  0E12               	movlw	18
  4022  0013F0                     u3717:
  4023  0013F0  2EE8               	decfsz	wreg,f,c
  4024  0013F2  D7FE               	bra	u3717
  4025  0013F4  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  4026  0013F6  D7FC               	bra	u3717
  4027  0013F8  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4028  0013FA  D7FA               	bra	u3717
  4029  0013FC  D000               	nop2	
  4030  0013FE                     
  4031                           ;main.c: 823:     errorcounter = 30;
  4032  0013FE  0E1E               	movlw	30
  4033  001400  6E52               	movwf	_errorcounter^0,c	;volatile
  4034  001402  0E00               	movlw	0
  4035  001404  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4036  001406  0E00               	movlw	0
  4037  001408  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4038  00140A  0E00               	movlw	0
  4039  00140C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4040  00140E                     l4634:
  4041                           
  4042                           ;main.c: 826:     {;main.c: 827:       IR_SENSORF = Read_IR();
  4043  00140E  EC70  F00F         	call	_Read_IR	;wreg free
  4044  001412  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4045  001416  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4046  00141A                     
  4047                           ;main.c: 828:       if(errorcounter == 0)
  4048  00141A  5052               	movf	_errorcounter^0,w,c	;volatile
  4049  00141C  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4050  00141E  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4051  001420  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4052  001422  A4D8               	btfss	status,2,c
  4053  001424  EF16  F00A         	goto	u2921
  4054  001428  EF18  F00A         	goto	u2920
  4055  00142C                     u2921:
  4056  00142C  EF1D  F00A         	goto	l4642
  4057  001430                     u2920:
  4058  001430                     
  4059                           ;main.c: 829:       {;main.c: 830:           WriteSTLED316SErr('1');
  4060  001430  0E31               	movlw	49
  4061  001432  ECF6  F00A         	call	_WriteSTLED316SErr
  4062  001436                     
  4063                           ;main.c: 831:           MotorBREAK();
  4064  001436  ECD7  F00F         	call	_MotorBREAK	;wreg free
  4065  00143A                     l4642:
  4066                           
  4067                           ;main.c: 834:     }while(IR_SENSORF != 0);
  4068  00143A  5013               	movf	_IR_SENSORF^0,w,c
  4069  00143C  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4070  00143E  A4D8               	btfss	status,2,c
  4071  001440  EF24  F00A         	goto	u2931
  4072  001444  EF26  F00A         	goto	u2930
  4073  001448                     u2931:
  4074  001448  EF07  F00A         	goto	l4634
  4075  00144C                     u2930:
  4076  00144C                     
  4077                           ;main.c: 836:      _delay((unsigned long)((30)*(8000000/4000.0)));
  4078  00144C  0E4E               	movlw	78
  4079  00144E  6E47               	movwf	??_MotorPosition_Init^0,c
  4080  001450  0EEB               	movlw	235
  4081  001452                     u3727:
  4082  001452  2EE8               	decfsz	wreg,f,c
  4083  001454  D7FE               	bra	u3727
  4084  001456  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  4085  001458  D7FC               	bra	u3727
  4086  00145A  F000               	nop	
  4087  00145C                     
  4088                           ;main.c: 837:     errorcounter = 30;
  4089  00145C  0E1E               	movlw	30
  4090  00145E  6E52               	movwf	_errorcounter^0,c	;volatile
  4091  001460  0E00               	movlw	0
  4092  001462  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4093  001464  0E00               	movlw	0
  4094  001466  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4095  001468  0E00               	movlw	0
  4096  00146A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4097  00146C                     l4648:
  4098                           
  4099                           ;main.c: 839:     {;main.c: 840:        IR_SENSORF = Read_IR();
  4100  00146C  EC70  F00F         	call	_Read_IR	;wreg free
  4101  001470  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4102  001474  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4103  001478                     
  4104                           ;main.c: 841:        if(errorcounter == 0)
  4105  001478  5052               	movf	_errorcounter^0,w,c	;volatile
  4106  00147A  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4107  00147C  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4108  00147E  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4109  001480  A4D8               	btfss	status,2,c
  4110  001482  EF45  F00A         	goto	u2941
  4111  001486  EF47  F00A         	goto	u2940
  4112  00148A                     u2941:
  4113  00148A  EF4C  F00A         	goto	l4656
  4114  00148E                     u2940:
  4115  00148E                     
  4116                           ;main.c: 842:        {;main.c: 843:             WriteSTLED316SErr('2');
  4117  00148E  0E32               	movlw	50
  4118  001490  ECF6  F00A         	call	_WriteSTLED316SErr
  4119  001494                     
  4120                           ;main.c: 844:            MotorBREAK();
  4121  001494  ECD7  F00F         	call	_MotorBREAK	;wreg free
  4122  001498                     l4656:
  4123                           
  4124                           ;main.c: 847:     }while(IR_SENSORF != 1);
  4125  001498  0413               	decf	_IR_SENSORF^0,w,c
  4126  00149A  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4127  00149C  A4D8               	btfss	status,2,c
  4128  00149E  EF53  F00A         	goto	u2951
  4129  0014A2  EF55  F00A         	goto	u2950
  4130  0014A6                     u2951:
  4131  0014A6  EF36  F00A         	goto	l4648
  4132  0014AA                     u2950:
  4133  0014AA                     
  4134                           ;main.c: 849:     errorcounter = 30;
  4135  0014AA  0E1E               	movlw	30
  4136  0014AC  6E52               	movwf	_errorcounter^0,c	;volatile
  4137  0014AE  0E00               	movlw	0
  4138  0014B0  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4139  0014B2  0E00               	movlw	0
  4140  0014B4  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4141  0014B6  0E00               	movlw	0
  4142  0014B8  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4143  0014BA                     
  4144                           ;main.c: 851:     delay_1ms(Motor_Stop_Delay_Time);
  4145  0014BA  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4146  0014BE  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4147  0014C2  EC21  F00F         	call	_delay_1ms	;wreg free
  4148  0014C6                     
  4149                           ;main.c: 852:     MotorBREAK();
  4150  0014C6  ECD7  F00F         	call	_MotorBREAK	;wreg free
  4151  0014CA                     
  4152                           ;main.c: 853:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4153  0014CA  0E06               	movlw	6
  4154  0014CC  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  4155  0014CE  0E13               	movlw	19
  4156  0014D0  6E47               	movwf	??_MotorPosition_Init^0,c
  4157  0014D2  0EAE               	movlw	174
  4158  0014D4                     u3737:
  4159  0014D4  2EE8               	decfsz	wreg,f,c
  4160  0014D6  D7FE               	bra	u3737
  4161  0014D8  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  4162  0014DA  D7FC               	bra	u3737
  4163  0014DC  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4164  0014DE  D7FA               	bra	u3737
  4165  0014E0                     
  4166                           ;main.c: 854:     IR_SENSORF=0;
  4167  0014E0  0E00               	movlw	0
  4168  0014E2  6E14               	movwf	(_IR_SENSORF+1)^0,c
  4169  0014E4  0E00               	movlw	0
  4170  0014E6  6E13               	movwf	_IR_SENSORF^0,c
  4171  0014E8                     
  4172                           ;main.c: 856:     LATAbits.LATA2 = 0;
  4173  0014E8  9489               	bcf	137,2,c	;volatile
  4174  0014EA  0012               	return		;funcret
  4175  0014EC                     __end_of_MotorPosition_Init:
  4176                           	opt callstack 0
  4177                           
  4178 ;; *************** function _InitTimer1 *****************
  4179 ;; Defined at:
  4180 ;;		line 1145 in file "main.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text19
  4209  001F04                     __ptext19:
  4210                           	opt callstack 0
  4211  001F04                     _InitTimer1:
  4212                           	opt callstack 28
  4213  001F04                     
  4214                           ;main.c: 1147:  T1CON = 0b00110001;
  4215  001F04  0E31               	movlw	49
  4216  001F06  6ECD               	movwf	205,c	;volatile
  4217                           
  4218                           ;main.c: 1150:     TMR1 = 0x9E57;
  4219  001F08  0E9E               	movlw	158
  4220  001F0A  6ECF               	movwf	207,c	;volatile
  4221  001F0C  0E57               	movlw	87
  4222  001F0E  6ECE               	movwf	206,c	;volatile
  4223  001F10                     
  4224                           ;main.c: 1151:  TMR1IF = 0;
  4225  001F10  909E               	bcf	3998,0,c	;volatile
  4226  001F12                     
  4227                           ;main.c: 1152:  TMR1IE = 1;
  4228  001F12  809D               	bsf	3997,0,c	;volatile
  4229  001F14                     
  4230                           ;main.c: 1153:     IPR1bits.TMR1IP=1;
  4231  001F14  809F               	bsf	159,0,c	;volatile
  4232                           
  4233                           ;main.c: 1155:     TMR1IF_triggered = 0;
  4234  001F16  0E00               	movlw	0
  4235  001F18  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  4236  001F1A  0012               	return		;funcret
  4237  001F1C                     __end_of_InitTimer1:
  4238                           	opt callstack 0
  4239                           
  4240 ;; *************** function _InitSTLED316 *****************
  4241 ;; Defined at:
  4242 ;;		line 14 in file "Display.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  Brightness      1    wreg     unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  Brightness      1   14[COMRAM] unsigned char 
  4247 ;;  i               2    0        int 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        3 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		_STLED316s_SPI_SendData
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text20
  4272  0019C2                     __ptext20:
  4273                           	opt callstack 0
  4274  0019C2                     _InitSTLED316:
  4275                           	opt callstack 27
  4276                           
  4277                           ;incstack = 0
  4278                           ;InitSTLED316@Brightness stored from wreg
  4279  0019C2  6E46               	movwf	InitSTLED316@Brightness^0,c
  4280  0019C4                     
  4281                           ;Display.c: 14: void InitSTLED316( unsigned char Brightness );Display.c: 15: {;Display.c
      +                          : 16:  int i;;Display.c: 18:  LATCbits.LATC4 = 1;
  4282  0019C4  888B               	bsf	139,4,c	;volatile
  4283                           
  4284                           ;Display.c: 20:  LATCbits.LATC4 = 0;
  4285  0019C6  988B               	bcf	139,4,c	;volatile
  4286  0019C8                     
  4287                           ;Display.c: 22:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4288  0019C8  0E30               	movlw	48
  4289  0019CA  EC27  F00D         	call	_STLED316s_SPI_SendData
  4290  0019CE                     
  4291                           ;Display.c: 25:  LATCbits.LATC4 = 1;
  4292  0019CE  888B               	bsf	139,4,c	;volatile
  4293  0019D0                     
  4294                           ;Display.c: 27:  LATCbits.LATC4 = 0;
  4295  0019D0  988B               	bcf	139,4,c	;volatile
  4296                           
  4297                           ;Display.c: 30:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4298  0019D2  0E30               	movlw	48
  4299  0019D4  EC27  F00D         	call	_STLED316s_SPI_SendData
  4300                           
  4301                           ;Display.c: 32:  STLED316s_SPI_SendData ( ( ( Brightness>>4 )<<5 ) | 0x00 | 0x5 );
  4302  0019D8  C046  F044         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4303  0019DC  3A44               	swapf	??_InitSTLED316^0,f,c
  4304  0019DE  0E0F               	movlw	15
  4305  0019E0  1644               	andwf	??_InitSTLED316^0,f,c
  4306  0019E2  0E05               	movlw	5
  4307  0019E4  6E45               	movwf	(??_InitSTLED316+1)^0,c
  4308  0019E6                     u2915:
  4309  0019E6  90D8               	bcf	status,0,c
  4310  0019E8  3644               	rlcf	??_InitSTLED316^0,f,c
  4311  0019EA  2E45               	decfsz	(??_InitSTLED316+1)^0,f,c
  4312  0019EC  EFF3  F00C         	goto	u2915
  4313  0019F0  5044               	movf	??_InitSTLED316^0,w,c
  4314  0019F2  0905               	iorlw	5
  4315  0019F4  EC27  F00D         	call	_STLED316s_SPI_SendData
  4316  0019F8                     
  4317                           ;Display.c: 34:  LATCbits.LATC4 = 1;
  4318  0019F8  888B               	bsf	139,4,c	;volatile
  4319  0019FA                     
  4320                           ;Display.c: 36:  LATCbits.LATC4 = 0;
  4321  0019FA  988B               	bcf	139,4,c	;volatile
  4322                           
  4323                           ;Display.c: 39:  STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4324  0019FC  0E11               	movlw	17
  4325  0019FE  EC27  F00D         	call	_STLED316s_SPI_SendData
  4326  001A02                     
  4327                           ;Display.c: 45:  LATCbits.LATC4 = 1;
  4328  001A02  888B               	bsf	139,4,c	;volatile
  4329  001A04                     
  4330                           ;Display.c: 47:  LATCbits.LATC4 = 0;
  4331  001A04  988B               	bcf	139,4,c	;volatile
  4332                           
  4333                           ;Display.c: 50:     STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4334  001A06  0E11               	movlw	17
  4335  001A08  EC27  F00D         	call	_STLED316s_SPI_SendData
  4336                           
  4337                           ;Display.c: 52:  STLED316s_SPI_SendData ( Brightness );
  4338  001A0C  5046               	movf	InitSTLED316@Brightness^0,w,c
  4339  001A0E  EC27  F00D         	call	_STLED316s_SPI_SendData
  4340                           
  4341                           ;Display.c: 53:  STLED316s_SPI_SendData ( Brightness );
  4342  001A12  5046               	movf	InitSTLED316@Brightness^0,w,c
  4343  001A14  EC27  F00D         	call	_STLED316s_SPI_SendData
  4344                           
  4345                           ;Display.c: 54:  STLED316s_SPI_SendData ( Brightness );
  4346  001A18  5046               	movf	InitSTLED316@Brightness^0,w,c
  4347  001A1A  EC27  F00D         	call	_STLED316s_SPI_SendData
  4348  001A1E                     
  4349                           ;Display.c: 58:  LATCbits.LATC4 = 1;
  4350  001A1E  888B               	bsf	139,4,c	;volatile
  4351  001A20                     
  4352                           ;Display.c: 60:  LATCbits.LATC4 = 0;
  4353  001A20  988B               	bcf	139,4,c	;volatile
  4354                           
  4355                           ;Display.c: 63:  STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4356  001A22  0E18               	movlw	24
  4357  001A24  EC27  F00D         	call	_STLED316s_SPI_SendData
  4358  001A28                     
  4359                           ;Display.c: 66:  LATCbits.LATC4 = 1;
  4360  001A28  888B               	bsf	139,4,c	;volatile
  4361  001A2A                     
  4362                           ;Display.c: 68:  LATCbits.LATC4 = 0;
  4363  001A2A  988B               	bcf	139,4,c	;volatile
  4364                           
  4365                           ;Display.c: 70:     STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4366  001A2C  0E18               	movlw	24
  4367  001A2E  EC27  F00D         	call	_STLED316s_SPI_SendData
  4368                           
  4369                           ;Display.c: 72:  STLED316s_SPI_SendData ( Brightness );
  4370  001A32  5046               	movf	InitSTLED316@Brightness^0,w,c
  4371  001A34  EC27  F00D         	call	_STLED316s_SPI_SendData
  4372                           
  4373                           ;Display.c: 73:  STLED316s_SPI_SendData ( Brightness );
  4374  001A38  5046               	movf	InitSTLED316@Brightness^0,w,c
  4375  001A3A  EC27  F00D         	call	_STLED316s_SPI_SendData
  4376                           
  4377                           ;Display.c: 74:  STLED316s_SPI_SendData ( Brightness );
  4378  001A3E  5046               	movf	InitSTLED316@Brightness^0,w,c
  4379  001A40  EC27  F00D         	call	_STLED316s_SPI_SendData
  4380                           
  4381                           ;Display.c: 75:  STLED316s_SPI_SendData ( Brightness );
  4382  001A44  5046               	movf	InitSTLED316@Brightness^0,w,c
  4383  001A46  EC27  F00D         	call	_STLED316s_SPI_SendData
  4384  001A4A                     
  4385                           ;Display.c: 79:  LATCbits.LATC4 = 1;
  4386  001A4A  888B               	bsf	139,4,c	;volatile
  4387  001A4C  0012               	return		;funcret
  4388  001A4E                     __end_of_InitSTLED316:
  4389                           	opt callstack 0
  4390                           
  4391 ;; *************** function _Homing_Again_Manual *****************
  4392 ;; Defined at:
  4393 ;;		line 885 in file "main.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    4
  4414 ;; This function calls:
  4415 ;;		_AD_capture_BattVoltage
  4416 ;;		_MotorBREAK
  4417 ;;		_MotorON_PWM
  4418 ;;		_Read_IR
  4419 ;;		_WriteSTLED316SData
  4420 ;;		_WriteSTLED316SErr
  4421 ;;		_delay_1ms
  4422 ;;		_readWeighingData
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text21
  4429  000E1E                     __ptext21:
  4430                           	opt callstack 0
  4431  000E1E                     _Homing_Again_Manual:
  4432                           	opt callstack 26
  4433  000E1E                     
  4434                           ;main.c: 888:     if (vibration_mode == 1)
  4435  000E1E  0432               	decf	_vibration_mode^0,w,c
  4436  000E20  A4D8               	btfss	status,2,c
  4437  000E22  EF15  F007         	goto	u2981
  4438  000E26  EF17  F007         	goto	u2980
  4439  000E2A                     u2981:
  4440  000E2A  EF2C  F007         	goto	l329
  4441  000E2E                     u2980:
  4442  000E2E                     
  4443                           ;main.c: 889:     {;main.c: 890:         LATCbits.LATC1 = 1;
  4444  000E2E  828B               	bsf	139,1,c	;volatile
  4445  000E30                     
  4446                           ;main.c: 891:         delay_1ms(Vmotor_Time);
  4447  000E30  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4448  000E34  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4449  000E38  EC21  F00F         	call	_delay_1ms	;wreg free
  4450  000E3C                     
  4451                           ;main.c: 892:         LATCbits.LATC1 = 0;
  4452  000E3C  928B               	bcf	139,1,c	;volatile
  4453  000E3E                     l4710:
  4454                           
  4455                           ;main.c: 893:         _delay((unsigned long)((300)*(8000000/4000.0)));
  4456  000E3E  0E04               	movlw	4
  4457  000E40  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4458  000E42  0E0C               	movlw	12
  4459  000E44  6E49               	movwf	??_Homing_Again_Manual^0,c
  4460  000E46  0E34               	movlw	52
  4461  000E48                     u3747:
  4462  000E48  2EE8               	decfsz	wreg,f,c
  4463  000E4A  D7FE               	bra	u3747
  4464  000E4C  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4465  000E4E  D7FC               	bra	u3747
  4466  000E50  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4467  000E52  D7FA               	bra	u3747
  4468                           
  4469                           ;main.c: 894:     }
  4470  000E54  EF2F  F007         	goto	l4714
  4471  000E58                     l329:
  4472                           
  4473                           ;main.c: 896:     {;main.c: 897:         LATCbits.LATC1 = 0;
  4474  000E58  928B               	bcf	139,1,c	;volatile
  4475  000E5A  EF1F  F007         	goto	l4710
  4476  000E5E                     l4714:
  4477                           
  4478                           ;main.c: 901:     LATAbits.LATA2 = 1;
  4479  000E5E  8489               	bsf	137,2,c	;volatile
  4480                           
  4481                           ;main.c: 903:     while (NUM>0)
  4482  000E60  EF1A  F008         	goto	l4790
  4483  000E64                     l332:
  4484  000E64  0004               	clrwdt		;# 
  4485  000E66                     
  4486                           ;main.c: 906:         readWeighingData();
  4487  000E66  ECD5  F00D         	call	_readWeighingData	;wreg free
  4488  000E6A                     
  4489                           ;main.c: 907:         AD_capture_BattVoltage();
  4490  000E6A  EC92  F00E         	call	_AD_capture_BattVoltage	;wreg free
  4491  000E6E                     
  4492                           ;main.c: 908:         delay_1ms(Motor_Pause_Time);
  4493  000E6E  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  4494  000E72  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4495  000E76  EC21  F00F         	call	_delay_1ms	;wreg free
  4496  000E7A                     
  4497                           ;main.c: 909:         MotorON_PWM();
  4498  000E7A  ECD2  F00F         	call	_MotorON_PWM	;wreg free
  4499  000E7E                     
  4500                           ;main.c: 910:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4501  000E7E  0E04               	movlw	4
  4502  000E80  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4503  000E82  0E8E               	movlw	142
  4504  000E84  6E49               	movwf	??_Homing_Again_Manual^0,c
  4505  000E86  0E12               	movlw	18
  4506  000E88                     u3757:
  4507  000E88  2EE8               	decfsz	wreg,f,c
  4508  000E8A  D7FE               	bra	u3757
  4509  000E8C  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4510  000E8E  D7FC               	bra	u3757
  4511  000E90  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4512  000E92  D7FA               	bra	u3757
  4513  000E94  D000               	nop2	
  4514  000E96                     
  4515                           ;main.c: 911:         errorcounter = 30;
  4516  000E96  0E1E               	movlw	30
  4517  000E98  6E52               	movwf	_errorcounter^0,c	;volatile
  4518  000E9A  0E00               	movlw	0
  4519  000E9C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4520  000E9E  0E00               	movlw	0
  4521  000EA0  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4522  000EA2  0E00               	movlw	0
  4523  000EA4  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4524  000EA6                     l4728:
  4525                           
  4526                           ;main.c: 914:         {;main.c: 915:             IR_SENSORF = Read_IR();
  4527  000EA6  EC70  F00F         	call	_Read_IR	;wreg free
  4528  000EAA  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4529  000EAE  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4530  000EB2                     
  4531                           ;main.c: 916:             if(errorcounter == 0)
  4532  000EB2  5052               	movf	_errorcounter^0,w,c	;volatile
  4533  000EB4  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4534  000EB6  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4535  000EB8  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4536  000EBA  A4D8               	btfss	status,2,c
  4537  000EBC  EF62  F007         	goto	u2991
  4538  000EC0  EF64  F007         	goto	u2990
  4539  000EC4                     u2991:
  4540  000EC4  EF69  F007         	goto	l4736
  4541  000EC8                     u2990:
  4542  000EC8                     
  4543                           ;main.c: 917:             {;main.c: 918:                 WriteSTLED316SErr('1');
  4544  000EC8  0E31               	movlw	49
  4545  000ECA  ECF6  F00A         	call	_WriteSTLED316SErr
  4546  000ECE                     
  4547                           ;main.c: 919:                 MotorBREAK();
  4548  000ECE  ECD7  F00F         	call	_MotorBREAK	;wreg free
  4549  000ED2                     l4736:
  4550                           
  4551                           ;main.c: 922:         }while(IR_SENSORF != 0);
  4552  000ED2  5013               	movf	_IR_SENSORF^0,w,c
  4553  000ED4  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4554  000ED6  A4D8               	btfss	status,2,c
  4555  000ED8  EF70  F007         	goto	u3001
  4556  000EDC  EF72  F007         	goto	u3000
  4557  000EE0                     u3001:
  4558  000EE0  EF53  F007         	goto	l4728
  4559  000EE4                     u3000:
  4560  000EE4                     
  4561                           ;main.c: 924:          _delay((unsigned long)((30)*(8000000/4000.0)));
  4562  000EE4  0E4E               	movlw	78
  4563  000EE6  6E49               	movwf	??_Homing_Again_Manual^0,c
  4564  000EE8  0EEB               	movlw	235
  4565  000EEA                     u3767:
  4566  000EEA  2EE8               	decfsz	wreg,f,c
  4567  000EEC  D7FE               	bra	u3767
  4568  000EEE  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4569  000EF0  D7FC               	bra	u3767
  4570  000EF2  F000               	nop	
  4571  000EF4                     
  4572                           ;main.c: 926:          errorcounter = 30;
  4573  000EF4  0E1E               	movlw	30
  4574  000EF6  6E52               	movwf	_errorcounter^0,c	;volatile
  4575  000EF8  0E00               	movlw	0
  4576  000EFA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4577  000EFC  0E00               	movlw	0
  4578  000EFE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4579  000F00  0E00               	movlw	0
  4580  000F02  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4581  000F04                     l4742:
  4582                           
  4583                           ;main.c: 929:         {;main.c: 930:             IR_SENSORF = Read_IR();
  4584  000F04  EC70  F00F         	call	_Read_IR	;wreg free
  4585  000F08  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4586  000F0C  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4587  000F10                     
  4588                           ;main.c: 931:             if(errorcounter == 0)
  4589  000F10  5052               	movf	_errorcounter^0,w,c	;volatile
  4590  000F12  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4591  000F14  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4592  000F16  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4593  000F18  A4D8               	btfss	status,2,c
  4594  000F1A  EF91  F007         	goto	u3011
  4595  000F1E  EF93  F007         	goto	u3010
  4596  000F22                     u3011:
  4597  000F22  EF98  F007         	goto	l4750
  4598  000F26                     u3010:
  4599  000F26                     
  4600                           ;main.c: 932:             {;main.c: 933:                 WriteSTLED316SErr('2');
  4601  000F26  0E32               	movlw	50
  4602  000F28  ECF6  F00A         	call	_WriteSTLED316SErr
  4603  000F2C                     
  4604                           ;main.c: 934:                 MotorBREAK();
  4605  000F2C  ECD7  F00F         	call	_MotorBREAK	;wreg free
  4606  000F30                     l4750:
  4607                           
  4608                           ;main.c: 936:         }
  4609  000F30  0413               	decf	_IR_SENSORF^0,w,c
  4610  000F32  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4611  000F34  A4D8               	btfss	status,2,c
  4612  000F36  EF9F  F007         	goto	u3021
  4613  000F3A  EFA1  F007         	goto	u3020
  4614  000F3E                     u3021:
  4615  000F3E  EF82  F007         	goto	l4742
  4616  000F42                     u3020:
  4617  000F42                     
  4618                           ;main.c: 939:         errorcounter = 30;
  4619  000F42  0E1E               	movlw	30
  4620  000F44  6E52               	movwf	_errorcounter^0,c	;volatile
  4621  000F46  0E00               	movlw	0
  4622  000F48  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4623  000F4A  0E00               	movlw	0
  4624  000F4C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4625  000F4E  0E00               	movlw	0
  4626  000F50  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4627  000F52                     
  4628                           ;main.c: 940:         delay_1ms(Motor_Stop_Delay_Time);
  4629  000F52  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4630  000F56  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4631  000F5A  EC21  F00F         	call	_delay_1ms	;wreg free
  4632  000F5E                     
  4633                           ;main.c: 941:         MotorBREAK();
  4634  000F5E  ECD7  F00F         	call	_MotorBREAK	;wreg free
  4635  000F62                     
  4636                           ;main.c: 943:         NUM--;
  4637  000F62  0619               	decf	_NUM^0,f,c
  4638  000F64  A0D8               	btfss	status,0,c
  4639  000F66  061A               	decf	(_NUM+1)^0,f,c
  4640  000F68                     
  4641                           ;main.c: 944:         WriteSTLED316SData(NUM, vibration_mode);
  4642  000F68  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  4643  000F6C  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  4644  000F70  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4645  000F74  EC8A  F00C         	call	_WriteSTLED316SData	;wreg free
  4646  000F78                     
  4647                           ;main.c: 946:         if (vibration_mode == 1 && NUM != 0)
  4648  000F78  0432               	decf	_vibration_mode^0,w,c
  4649  000F7A  A4D8               	btfss	status,2,c
  4650  000F7C  EFC2  F007         	goto	u3031
  4651  000F80  EFC4  F007         	goto	u3030
  4652  000F84                     u3031:
  4653  000F84  EFE2  F007         	goto	l4774
  4654  000F88                     u3030:
  4655  000F88  5019               	movf	_NUM^0,w,c
  4656  000F8A  101A               	iorwf	(_NUM+1)^0,w,c
  4657  000F8C  B4D8               	btfsc	status,2,c
  4658  000F8E  EFCB  F007         	goto	u3041
  4659  000F92  EFCD  F007         	goto	u3040
  4660  000F96                     u3041:
  4661  000F96  EFE2  F007         	goto	l4774
  4662  000F9A                     u3040:
  4663  000F9A                     
  4664                           ;main.c: 947:         {;main.c: 948:             LATCbits.LATC1 = 1;
  4665  000F9A  828B               	bsf	139,1,c	;volatile
  4666  000F9C                     
  4667                           ;main.c: 949:             delay_1ms(Vmotor_Time);
  4668  000F9C  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4669  000FA0  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4670  000FA4  EC21  F00F         	call	_delay_1ms	;wreg free
  4671  000FA8                     
  4672                           ;main.c: 951:             LATCbits.LATC1 = 0;
  4673  000FA8  928B               	bcf	139,1,c	;volatile
  4674  000FAA                     
  4675                           ;main.c: 952:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4676  000FAA  0E04               	movlw	4
  4677  000FAC  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4678  000FAE  0E0C               	movlw	12
  4679  000FB0  6E49               	movwf	??_Homing_Again_Manual^0,c
  4680  000FB2  0E34               	movlw	52
  4681  000FB4                     u3777:
  4682  000FB4  2EE8               	decfsz	wreg,f,c
  4683  000FB6  D7FE               	bra	u3777
  4684  000FB8  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4685  000FBA  D7FC               	bra	u3777
  4686  000FBC  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4687  000FBE  D7FA               	bra	u3777
  4688                           
  4689                           ;main.c: 953:         }
  4690  000FC0  EF10  F008         	goto	l4786
  4691  000FC4                     l4774:
  4692  000FC4  5032               	movf	_vibration_mode^0,w,c
  4693  000FC6  A4D8               	btfss	status,2,c
  4694  000FC8  EFE8  F007         	goto	u3051
  4695  000FCC  EFEA  F007         	goto	u3050
  4696  000FD0                     u3051:
  4697  000FD0  EF10  F008         	goto	l4786
  4698  000FD4                     u3050:
  4699  000FD4  5019               	movf	_NUM^0,w,c
  4700  000FD6  101A               	iorwf	(_NUM+1)^0,w,c
  4701  000FD8  B4D8               	btfsc	status,2,c
  4702  000FDA  EFF1  F007         	goto	u3061
  4703  000FDE  EFF3  F007         	goto	u3060
  4704  000FE2                     u3061:
  4705  000FE2  EF10  F008         	goto	l4786
  4706  000FE6                     u3060:
  4707  000FE6                     
  4708                           ;main.c: 955:         {;main.c: 956:             LATCbits.LATC1 = 0;
  4709  000FE6  928B               	bcf	139,1,c	;volatile
  4710  000FE8                     
  4711                           ;main.c: 957:             if (NUM != 0)
  4712  000FE8  5019               	movf	_NUM^0,w,c
  4713  000FEA  101A               	iorwf	(_NUM+1)^0,w,c
  4714  000FEC  B4D8               	btfsc	status,2,c
  4715  000FEE  EFFB  F007         	goto	u3071
  4716  000FF2  EFFD  F007         	goto	u3070
  4717  000FF6                     u3071:
  4718  000FF6  EF05  F008         	goto	l4784
  4719  000FFA                     u3070:
  4720  000FFA                     
  4721                           ;main.c: 958:             {;main.c: 959:                 delay_1ms(Vmotor_Time);
  4722  000FFA  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4723  000FFE  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4724  001002  EC21  F00F         	call	_delay_1ms	;wreg free
  4725                           
  4726                           ;main.c: 960:             }
  4727  001006  EF10  F008         	goto	l4786
  4728  00100A                     l4784:
  4729                           
  4730                           ;main.c: 962:             {;main.c: 963:                 _delay((unsigned long)((500)*(8
      +                          000000/4000.0)));
  4731  00100A  0E06               	movlw	6
  4732  00100C  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4733  00100E  0E13               	movlw	19
  4734  001010  6E49               	movwf	??_Homing_Again_Manual^0,c
  4735  001012  0EAE               	movlw	174
  4736  001014                     u3787:
  4737  001014  2EE8               	decfsz	wreg,f,c
  4738  001016  D7FE               	bra	u3787
  4739  001018  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4740  00101A  D7FC               	bra	u3787
  4741  00101C  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4742  00101E  D7FA               	bra	u3787
  4743  001020                     l4786:
  4744                           
  4745                           ;main.c: 967:         if(Stop==1)
  4746  001020  0435               	decf	_Stop^0,w,c
  4747  001022  A4D8               	btfss	status,2,c
  4748  001024  EF16  F008         	goto	u3081
  4749  001028  EF18  F008         	goto	u3080
  4750  00102C                     u3081:
  4751  00102C  EF1A  F008         	goto	l4790
  4752  001030                     u3080:
  4753  001030  EF23  F008         	goto	l345
  4754  001034                     l4790:
  4755                           
  4756                           ;main.c: 903:     while (NUM>0)
  4757  001034  5019               	movf	_NUM^0,w,c
  4758  001036  101A               	iorwf	(_NUM+1)^0,w,c
  4759  001038  A4D8               	btfss	status,2,c
  4760  00103A  EF21  F008         	goto	u3091
  4761  00103E  EF23  F008         	goto	u3090
  4762  001042                     u3091:
  4763  001042  EF32  F007         	goto	l332
  4764  001046                     u3090:
  4765  001046                     l345:
  4766                           
  4767                           ;main.c: 972:     LATAbits.LATA2 = 0;
  4768  001046  9489               	bcf	137,2,c	;volatile
  4769  001048                     
  4770                           ;main.c: 974:     if (NUM == 0 || Stop==1)
  4771  001048  5019               	movf	_NUM^0,w,c
  4772  00104A  101A               	iorwf	(_NUM+1)^0,w,c
  4773  00104C  B4D8               	btfsc	status,2,c
  4774  00104E  EF2B  F008         	goto	u3101
  4775  001052  EF2D  F008         	goto	u3100
  4776  001056                     u3101:
  4777  001056  EF35  F008         	goto	l4796
  4778  00105A                     u3100:
  4779  00105A  0435               	decf	_Stop^0,w,c
  4780  00105C  A4D8               	btfss	status,2,c
  4781  00105E  EF33  F008         	goto	u3111
  4782  001062  EF35  F008         	goto	u3110
  4783  001066                     u3111:
  4784  001066  EF50  F008         	goto	l4806
  4785  00106A                     u3110:
  4786  00106A                     l4796:
  4787                           
  4788                           ;main.c: 975:     {;main.c: 977:         if (vibration_mode == 1)
  4789  00106A  0432               	decf	_vibration_mode^0,w,c
  4790  00106C  A4D8               	btfss	status,2,c
  4791  00106E  EF3B  F008         	goto	u3121
  4792  001072  EF3D  F008         	goto	u3120
  4793  001076                     u3121:
  4794  001076  EF50  F008         	goto	l4806
  4795  00107A                     u3120:
  4796  00107A                     
  4797                           ;main.c: 978:         {;main.c: 979:             LATCbits.LATC1 = 1;
  4798  00107A  828B               	bsf	139,1,c	;volatile
  4799  00107C                     
  4800                           ;main.c: 980:             delay_1ms(Vmotor_Time);
  4801  00107C  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4802  001080  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4803  001084  EC21  F00F         	call	_delay_1ms	;wreg free
  4804  001088                     
  4805                           ;main.c: 982:             LATCbits.LATC1 = 0;
  4806  001088  928B               	bcf	139,1,c	;volatile
  4807  00108A                     
  4808                           ;main.c: 983:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4809  00108A  0E04               	movlw	4
  4810  00108C  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4811  00108E  0E0C               	movlw	12
  4812  001090  6E49               	movwf	??_Homing_Again_Manual^0,c
  4813  001092  0E34               	movlw	52
  4814  001094                     u3797:
  4815  001094  2EE8               	decfsz	wreg,f,c
  4816  001096  D7FE               	bra	u3797
  4817  001098  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4818  00109A  D7FC               	bra	u3797
  4819  00109C  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4820  00109E  D7FA               	bra	u3797
  4821  0010A0                     l4806:
  4822                           
  4823                           ;main.c: 988:     NUM = 0;
  4824  0010A0  0E00               	movlw	0
  4825  0010A2  6E1A               	movwf	(_NUM+1)^0,c
  4826  0010A4  0E00               	movlw	0
  4827  0010A6  6E19               	movwf	_NUM^0,c
  4828  0010A8                     
  4829                           ;main.c: 989:     OpMode = MANUAL_MODE;
  4830  0010A8  0E00               	movlw	0
  4831  0010AA  6E30               	movwf	_OpMode^0,c	;volatile
  4832  0010AC  0012               	return		;funcret
  4833  0010AE                     __end_of_Homing_Again_Manual:
  4834                           	opt callstack 0
  4835                           
  4836 ;; *************** function _WriteSTLED316SData *****************
  4837 ;; Defined at:
  4838 ;;		line 150 in file "Display.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  number          2   14[COMRAM] int 
  4841 ;;  v_mode          1   16[COMRAM] unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  NUM_DIG1        2    2[BANK0 ] int 
  4844 ;;  NUM_DIG0        2    0[BANK0 ] int 
  4845 ;;  data4           1    5[BANK0 ] unsigned char 
  4846 ;;  data3           1    4[BANK0 ] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4856 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:        9 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    3
  4863 ;; This function calls:
  4864 ;;		_Get7Seg
  4865 ;;		_STLED316s_SPI_SendData
  4866 ;;		___awdiv
  4867 ;;		___awmod
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;;		_Homing_Again_Manual
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text22
  4875  001914                     __ptext22:
  4876                           	opt callstack 0
  4877  001914                     _WriteSTLED316SData:
  4878                           	opt callstack 27
  4879  001914                     
  4880                           ;Display.c: 150: void WriteSTLED316SData( int number, char v_mode);Display.c: 151: {;Dis
      +                          play.c: 152:  unsigned char data3, data4;;Display.c: 153:  int NUM_DIG0, NUM_DIG1;;Displ
      +                          ay.c: 155:  NUM_DIG0=(int) number%10;
  4881  001914  C046  F03E         	movff	WriteSTLED316SData@number,___awmod@dividend
  4882  001918  C047  F03F         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  4883  00191C  0E00               	movlw	0
  4884  00191E  6E41               	movwf	(___awmod@divisor+1)^0,c
  4885  001920  0E0A               	movlw	10
  4886  001922  6E40               	movwf	___awmod@divisor^0,c
  4887  001924  EC32  F00C         	call	___awmod	;wreg free
  4888  001928  C03E  F080         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  4889  00192C  C03F  F081         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  4890                           
  4891                           ;Display.c: 156:  NUM_DIG1=(int) number/10;
  4892  001930  C046  F03E         	movff	WriteSTLED316SData@number,___awdiv@dividend
  4893  001934  C047  F03F         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  4894  001938  0E00               	movlw	0
  4895  00193A  6E41               	movwf	(___awdiv@divisor+1)^0,c
  4896  00193C  0E0A               	movlw	10
  4897  00193E  6E40               	movwf	___awdiv@divisor^0,c
  4898  001940  ECD0  F00B         	call	___awdiv	;wreg free
  4899  001944  C03E  F082         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  4900  001948  C03F  F083         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  4901  00194C                     
  4902                           ;Display.c: 158:  LATCbits.LATC4 = 0;
  4903  00194C  988B               	bcf	139,4,c	;volatile
  4904                           
  4905                           ;Display.c: 160:  STLED316s_SPI_SendData (0x00 );
  4906  00194E  0E00               	movlw	0
  4907  001950  EC27  F00D         	call	_STLED316s_SPI_SendData
  4908  001954                     
  4909                           ;Display.c: 162:  LATCbits.LATC4 = 1;
  4910  001954  888B               	bsf	139,4,c	;volatile
  4911  001956                     
  4912                           ;Display.c: 164:  LATCbits.LATC4 = 0;
  4913  001956  988B               	bcf	139,4,c	;volatile
  4914                           
  4915                           ;Display.c: 166:  STLED316s_SPI_SendData (0x00);
  4916  001958  0E00               	movlw	0
  4917  00195A  EC27  F00D         	call	_STLED316s_SPI_SendData
  4918                           
  4919                           ;Display.c: 168:  data4 = Get7Seg(NUM_DIG1);
  4920  00195E  C082  F03E         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  4921  001962  C083  F03F         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  4922  001966  EC6A  F00B         	call	_Get7Seg	;wreg free
  4923  00196A  0100               	movlb	0	; () banked
  4924  00196C  6F85               	movwf	WriteSTLED316SData@data4& (0+255),b
  4925                           
  4926                           ;Display.c: 169:  data3 = Get7Seg(NUM_DIG0);
  4927  00196E  C080  F03E         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  4928  001972  C081  F03F         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  4929  001976  EC6A  F00B         	call	_Get7Seg	;wreg free
  4930  00197A  0100               	movlb	0	; () banked
  4931  00197C  6F84               	movwf	WriteSTLED316SData@data3& (0+255),b
  4932  00197E                     
  4933                           ; BSR set to: 0
  4934                           ;Display.c: 171:  if (v_mode)
  4935  00197E  5048               	movf	WriteSTLED316SData@v_mode^0,w,c
  4936  001980  B4D8               	btfsc	status,2,c
  4937  001982  EFC5  F00C         	goto	u2891
  4938  001986  EFC7  F00C         	goto	u2890
  4939  00198A                     u2891:
  4940  00198A  EFD3  F00C         	goto	l4510
  4941  00198E                     u2890:
  4942  00198E                     
  4943                           ; BSR set to: 0
  4944                           ;Display.c: 172:  {;Display.c: 173:   if (v_mode == 0xFF)
  4945  00198E  2848               	incf	WriteSTLED316SData@v_mode^0,w,c
  4946  001990  A4D8               	btfss	status,2,c
  4947  001992  EFCD  F00C         	goto	u2901
  4948  001996  EFCF  F00C         	goto	u2900
  4949  00199A                     u2901:
  4950  00199A  EFD2  F00C         	goto	l4508
  4951  00199E                     u2900:
  4952  00199E                     
  4953                           ; BSR set to: 0
  4954                           ;Display.c: 174:    data4 |= 0x80;
  4955  00199E  8F85               	bsf	WriteSTLED316SData@data4& (0+255),7,b
  4956  0019A0  EFD3  F00C         	goto	l4510
  4957  0019A4                     l4508:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;Display.c: 176:    data3 |= 0x80;
  4961  0019A4  8F84               	bsf	WriteSTLED316SData@data3& (0+255),7,b
  4962  0019A6                     l4510:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;Display.c: 179:     STLED316s_SPI_SendData (data4);
  4966  0019A6  5185               	movf	WriteSTLED316SData@data4& (0+255),w,b
  4967  0019A8  EC27  F00D         	call	_STLED316s_SPI_SendData
  4968  0019AC                     
  4969                           ;Display.c: 180:     STLED316s_SPI_SendData (data3);
  4970  0019AC  0100               	movlb	0	; () banked
  4971  0019AE  5184               	movf	WriteSTLED316SData@data3& (0+255),w,b
  4972  0019B0  EC27  F00D         	call	_STLED316s_SPI_SendData
  4973  0019B4                     
  4974                           ;Display.c: 182:  LATCbits.LATC4 = 1;
  4975  0019B4  888B               	bsf	139,4,c	;volatile
  4976  0019B6                     
  4977                           ;Display.c: 184:  LATCbits.LATC4 = 0;
  4978  0019B6  988B               	bcf	139,4,c	;volatile
  4979  0019B8                     
  4980                           ;Display.c: 186:  STLED316s_SPI_SendData ( 0x0D );
  4981  0019B8  0E0D               	movlw	13
  4982  0019BA  EC27  F00D         	call	_STLED316s_SPI_SendData
  4983  0019BE                     
  4984                           ;Display.c: 188:  LATCbits.LATC4 = 1;
  4985  0019BE  888B               	bsf	139,4,c	;volatile
  4986  0019C0  0012               	return		;funcret
  4987  0019C2                     __end_of_WriteSTLED316SData:
  4988                           	opt callstack 0
  4989                           
  4990 ;; *************** function ___awmod *****************
  4991 ;; Defined at:
  4992 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  dividend        2    6[COMRAM] int 
  4995 ;;  divisor         2    8[COMRAM] int 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  sign            1   11[COMRAM] unsigned char 
  4998 ;;  counter         1   10[COMRAM] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  2    6[COMRAM] int 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:        6 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:    2
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_WriteSTLED316SData
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text23
  5023  001864                     __ptext23:
  5024                           	opt callstack 0
  5025  001864                     ___awmod:
  5026                           	opt callstack 27
  5027  001864  0E00               	movlw	0
  5028  001866  6E43               	movwf	___awmod@sign^0,c
  5029  001868  BE3F               	btfsc	(___awmod@dividend+1)^0,7,c
  5030  00186A  EF3B  F00C         	goto	u2830
  5031  00186E  EF39  F00C         	goto	u2831
  5032  001872                     u2831:
  5033  001872  EF41  F00C         	goto	l4466
  5034  001876                     u2830:
  5035  001876  6C3E               	negf	___awmod@dividend^0,c
  5036  001878  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  5037  00187A  B0D8               	btfsc	status,0,c
  5038  00187C  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  5039  00187E  0E01               	movlw	1
  5040  001880  6E43               	movwf	___awmod@sign^0,c
  5041  001882                     l4466:
  5042  001882  BE41               	btfsc	(___awmod@divisor+1)^0,7,c
  5043  001884  EF48  F00C         	goto	u2840
  5044  001888  EF46  F00C         	goto	u2841
  5045  00188C                     u2841:
  5046  00188C  EF4C  F00C         	goto	l4470
  5047  001890                     u2840:
  5048  001890  6C40               	negf	___awmod@divisor^0,c
  5049  001892  1E41               	comf	(___awmod@divisor+1)^0,f,c
  5050  001894  B0D8               	btfsc	status,0,c
  5051  001896  2A41               	incf	(___awmod@divisor+1)^0,f,c
  5052  001898                     l4470:
  5053  001898  5040               	movf	___awmod@divisor^0,w,c
  5054  00189A  1041               	iorwf	(___awmod@divisor+1)^0,w,c
  5055  00189C  B4D8               	btfsc	status,2,c
  5056  00189E  EF53  F00C         	goto	u2851
  5057  0018A2  EF55  F00C         	goto	u2850
  5058  0018A6                     u2851:
  5059  0018A6  EF79  F00C         	goto	l4486
  5060  0018AA                     u2850:
  5061  0018AA  0E01               	movlw	1
  5062  0018AC  6E42               	movwf	___awmod@counter^0,c
  5063  0018AE  EF5D  F00C         	goto	l4476
  5064  0018B2                     l4474:
  5065  0018B2  90D8               	bcf	status,0,c
  5066  0018B4  3640               	rlcf	___awmod@divisor^0,f,c
  5067  0018B6  3641               	rlcf	(___awmod@divisor+1)^0,f,c
  5068  0018B8  2A42               	incf	___awmod@counter^0,f,c
  5069  0018BA                     l4476:
  5070  0018BA  AE41               	btfss	(___awmod@divisor+1)^0,7,c
  5071  0018BC  EF62  F00C         	goto	u2861
  5072  0018C0  EF64  F00C         	goto	u2860
  5073  0018C4                     u2861:
  5074  0018C4  EF59  F00C         	goto	l4474
  5075  0018C8                     u2860:
  5076  0018C8                     l4478:
  5077  0018C8  5040               	movf	___awmod@divisor^0,w,c
  5078  0018CA  5C3E               	subwf	___awmod@dividend^0,w,c
  5079  0018CC  5041               	movf	(___awmod@divisor+1)^0,w,c
  5080  0018CE  583F               	subwfb	(___awmod@dividend+1)^0,w,c
  5081  0018D0  A0D8               	btfss	status,0,c
  5082  0018D2  EF6D  F00C         	goto	u2871
  5083  0018D6  EF6F  F00C         	goto	u2870
  5084  0018DA                     u2871:
  5085  0018DA  EF73  F00C         	goto	l4482
  5086  0018DE                     u2870:
  5087  0018DE  5040               	movf	___awmod@divisor^0,w,c
  5088  0018E0  5E3E               	subwf	___awmod@dividend^0,f,c
  5089  0018E2  5041               	movf	(___awmod@divisor+1)^0,w,c
  5090  0018E4  5A3F               	subwfb	(___awmod@dividend+1)^0,f,c
  5091  0018E6                     l4482:
  5092  0018E6  90D8               	bcf	status,0,c
  5093  0018E8  3241               	rrcf	(___awmod@divisor+1)^0,f,c
  5094  0018EA  3240               	rrcf	___awmod@divisor^0,f,c
  5095  0018EC  2E42               	decfsz	___awmod@counter^0,f,c
  5096  0018EE  EF64  F00C         	goto	l4478
  5097  0018F2                     l4486:
  5098  0018F2  5043               	movf	___awmod@sign^0,w,c
  5099  0018F4  B4D8               	btfsc	status,2,c
  5100  0018F6  EF7F  F00C         	goto	u2881
  5101  0018FA  EF81  F00C         	goto	u2880
  5102  0018FE                     u2881:
  5103  0018FE  EF85  F00C         	goto	l4490
  5104  001902                     u2880:
  5105  001902  6C3E               	negf	___awmod@dividend^0,c
  5106  001904  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  5107  001906  B0D8               	btfsc	status,0,c
  5108  001908  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  5109  00190A                     l4490:
  5110  00190A  C03E  F03E         	movff	___awmod@dividend,?___awmod
  5111  00190E  C03F  F03F         	movff	___awmod@dividend+1,?___awmod+1
  5112  001912  0012               	return		;funcret
  5113  001914                     __end_of___awmod:
  5114                           	opt callstack 0
  5115                           
  5116 ;; *************** function ___awdiv *****************
  5117 ;; Defined at:
  5118 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  dividend        2    6[COMRAM] int 
  5121 ;;  divisor         2    8[COMRAM] int 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  quotient        2   12[COMRAM] int 
  5124 ;;  sign            1   11[COMRAM] unsigned char 
  5125 ;;  counter         1   10[COMRAM] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    6[COMRAM] int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;Total ram usage:        8 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    2
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_WriteSTLED316SData
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text24
  5150  0017A0                     __ptext24:
  5151                           	opt callstack 0
  5152  0017A0                     ___awdiv:
  5153                           	opt callstack 27
  5154  0017A0  0E00               	movlw	0
  5155  0017A2  6E43               	movwf	___awdiv@sign^0,c
  5156  0017A4  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  5157  0017A6  EFD9  F00B         	goto	u2770
  5158  0017AA  EFD7  F00B         	goto	u2771
  5159  0017AE                     u2771:
  5160  0017AE  EFDF  F00B         	goto	l4422
  5161  0017B2                     u2770:
  5162  0017B2  6C40               	negf	___awdiv@divisor^0,c
  5163  0017B4  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  5164  0017B6  B0D8               	btfsc	status,0,c
  5165  0017B8  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  5166  0017BA  0E01               	movlw	1
  5167  0017BC  6E43               	movwf	___awdiv@sign^0,c
  5168  0017BE                     l4422:
  5169  0017BE  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  5170  0017C0  EFE6  F00B         	goto	u2780
  5171  0017C4  EFE4  F00B         	goto	u2781
  5172  0017C8                     u2781:
  5173  0017C8  EFEC  F00B         	goto	l4428
  5174  0017CC                     u2780:
  5175  0017CC  6C3E               	negf	___awdiv@dividend^0,c
  5176  0017CE  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  5177  0017D0  B0D8               	btfsc	status,0,c
  5178  0017D2  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  5179  0017D4  0E01               	movlw	1
  5180  0017D6  1A43               	xorwf	___awdiv@sign^0,f,c
  5181  0017D8                     l4428:
  5182  0017D8  0E00               	movlw	0
  5183  0017DA  6E45               	movwf	(___awdiv@quotient+1)^0,c
  5184  0017DC  0E00               	movlw	0
  5185  0017DE  6E44               	movwf	___awdiv@quotient^0,c
  5186  0017E0  5040               	movf	___awdiv@divisor^0,w,c
  5187  0017E2  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  5188  0017E4  B4D8               	btfsc	status,2,c
  5189  0017E6  EFF7  F00B         	goto	u2791
  5190  0017EA  EFF9  F00B         	goto	u2790
  5191  0017EE                     u2791:
  5192  0017EE  EF21  F00C         	goto	l4450
  5193  0017F2                     u2790:
  5194  0017F2  0E01               	movlw	1
  5195  0017F4  6E42               	movwf	___awdiv@counter^0,c
  5196  0017F6  EF01  F00C         	goto	l4436
  5197  0017FA                     l4434:
  5198  0017FA  90D8               	bcf	status,0,c
  5199  0017FC  3640               	rlcf	___awdiv@divisor^0,f,c
  5200  0017FE  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  5201  001800  2A42               	incf	___awdiv@counter^0,f,c
  5202  001802                     l4436:
  5203  001802  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  5204  001804  EF06  F00C         	goto	u2801
  5205  001808  EF08  F00C         	goto	u2800
  5206  00180C                     u2801:
  5207  00180C  EFFD  F00B         	goto	l4434
  5208  001810                     u2800:
  5209  001810                     l4438:
  5210  001810  90D8               	bcf	status,0,c
  5211  001812  3644               	rlcf	___awdiv@quotient^0,f,c
  5212  001814  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  5213  001816  5040               	movf	___awdiv@divisor^0,w,c
  5214  001818  5C3E               	subwf	___awdiv@dividend^0,w,c
  5215  00181A  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5216  00181C  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  5217  00181E  A0D8               	btfss	status,0,c
  5218  001820  EF14  F00C         	goto	u2811
  5219  001824  EF16  F00C         	goto	u2810
  5220  001828                     u2811:
  5221  001828  EF1B  F00C         	goto	l4446
  5222  00182C                     u2810:
  5223  00182C  5040               	movf	___awdiv@divisor^0,w,c
  5224  00182E  5E3E               	subwf	___awdiv@dividend^0,f,c
  5225  001830  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5226  001832  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  5227  001834  8044               	bsf	___awdiv@quotient^0,0,c
  5228  001836                     l4446:
  5229  001836  90D8               	bcf	status,0,c
  5230  001838  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  5231  00183A  3240               	rrcf	___awdiv@divisor^0,f,c
  5232  00183C  2E42               	decfsz	___awdiv@counter^0,f,c
  5233  00183E  EF08  F00C         	goto	l4438
  5234  001842                     l4450:
  5235  001842  5043               	movf	___awdiv@sign^0,w,c
  5236  001844  B4D8               	btfsc	status,2,c
  5237  001846  EF27  F00C         	goto	u2821
  5238  00184A  EF29  F00C         	goto	u2820
  5239  00184E                     u2821:
  5240  00184E  EF2D  F00C         	goto	l4454
  5241  001852                     u2820:
  5242  001852  6C44               	negf	___awdiv@quotient^0,c
  5243  001854  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  5244  001856  B0D8               	btfsc	status,0,c
  5245  001858  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  5246  00185A                     l4454:
  5247  00185A  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  5248  00185E  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  5249  001862  0012               	return		;funcret
  5250  001864                     __end_of___awdiv:
  5251                           	opt callstack 0
  5252                           
  5253 ;; *************** function _Get7Seg *****************
  5254 ;; Defined at:
  5255 ;;		line 107 in file "Display.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  Digit           2    6[COMRAM] int 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  Data            1   10[COMRAM] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      unsigned char 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;Total ram usage:        5 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    2
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_WriteSTLED316SData
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text25
  5284  0016D4                     __ptext25:
  5285                           	opt callstack 0
  5286  0016D4                     _Get7Seg:
  5287                           	opt callstack 27
  5288  0016D4                     
  5289                           ;Display.c: 107: unsigned char Get7Seg (int Digit);Display.c: 108: {;Display.c: 109:  un
      +                          signed char Data;;Display.c: 111:  switch (Digit)
  5290  0016D4  EF98  F00B         	goto	l4404
  5291  0016D8                     l4380:
  5292                           
  5293                           ;Display.c: 114:    Data = 0x3F;
  5294  0016D8  0E3F               	movlw	63
  5295  0016DA  6E42               	movwf	Get7Seg@Data^0,c
  5296                           
  5297                           ;Display.c: 115:    break;
  5298  0016DC  EFCE  F00B         	goto	l4406
  5299  0016E0                     l4382:
  5300                           
  5301                           ;Display.c: 117:    Data = 0x06;
  5302  0016E0  0E06               	movlw	6
  5303  0016E2  6E42               	movwf	Get7Seg@Data^0,c
  5304                           
  5305                           ;Display.c: 118:    break;
  5306  0016E4  EFCE  F00B         	goto	l4406
  5307  0016E8                     l4384:
  5308                           
  5309                           ;Display.c: 120:    Data = 0x5B;
  5310  0016E8  0E5B               	movlw	91
  5311  0016EA  6E42               	movwf	Get7Seg@Data^0,c
  5312                           
  5313                           ;Display.c: 121:    break;
  5314  0016EC  EFCE  F00B         	goto	l4406
  5315  0016F0                     l4386:
  5316                           
  5317                           ;Display.c: 123:    Data = 0x4F;
  5318  0016F0  0E4F               	movlw	79
  5319  0016F2  6E42               	movwf	Get7Seg@Data^0,c
  5320                           
  5321                           ;Display.c: 124:    break;
  5322  0016F4  EFCE  F00B         	goto	l4406
  5323  0016F8                     l4388:
  5324                           
  5325                           ;Display.c: 126:    Data = 0x66;
  5326  0016F8  0E66               	movlw	102
  5327  0016FA  6E42               	movwf	Get7Seg@Data^0,c
  5328                           
  5329                           ;Display.c: 127:    break;
  5330  0016FC  EFCE  F00B         	goto	l4406
  5331  001700                     l4390:
  5332                           
  5333                           ;Display.c: 129:    Data = 0x6D;
  5334  001700  0E6D               	movlw	109
  5335  001702  6E42               	movwf	Get7Seg@Data^0,c
  5336                           
  5337                           ;Display.c: 130:    break;
  5338  001704  EFCE  F00B         	goto	l4406
  5339  001708                     l4392:
  5340                           
  5341                           ;Display.c: 132:    Data = 0x7D;
  5342  001708  0E7D               	movlw	125
  5343  00170A  6E42               	movwf	Get7Seg@Data^0,c
  5344                           
  5345                           ;Display.c: 133:    break;
  5346  00170C  EFCE  F00B         	goto	l4406
  5347  001710                     l4394:
  5348                           
  5349                           ;Display.c: 135:    Data = 0x07;
  5350  001710  0E07               	movlw	7
  5351  001712  6E42               	movwf	Get7Seg@Data^0,c
  5352                           
  5353                           ;Display.c: 136:    break;
  5354  001714  EFCE  F00B         	goto	l4406
  5355  001718                     l4396:
  5356                           
  5357                           ;Display.c: 138:    Data = 0x7F;
  5358  001718  0E7F               	movlw	127
  5359  00171A  6E42               	movwf	Get7Seg@Data^0,c
  5360                           
  5361                           ;Display.c: 139:    break;
  5362  00171C  EFCE  F00B         	goto	l4406
  5363  001720                     l4398:
  5364                           
  5365                           ;Display.c: 141:    Data = 0x6F;
  5366  001720  0E6F               	movlw	111
  5367  001722  6E42               	movwf	Get7Seg@Data^0,c
  5368                           
  5369                           ;Display.c: 142:    break;
  5370  001724  EFCE  F00B         	goto	l4406
  5371  001728                     l4400:
  5372                           
  5373                           ;Display.c: 144:    Data = 0x00;
  5374  001728  0E00               	movlw	0
  5375  00172A  6E42               	movwf	Get7Seg@Data^0,c
  5376                           
  5377                           ;Display.c: 145:    break;
  5378  00172C  EFCE  F00B         	goto	l4406
  5379  001730                     l4404:
  5380  001730  C03E  F040         	movff	Get7Seg@Digit,??_Get7Seg
  5381  001734  C03F  F041         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5382                           
  5383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5384                           ; Switch size 1, requested type "simple"
  5385                           ; Number of cases is 1, Range of values is 0 to 0
  5386                           ; switch strategies available:
  5387                           ; Name         Instructions Cycles
  5388                           ; simple_byte            4     3 (average)
  5389                           ;	Chosen strategy is simple_byte
  5390  001738  5041               	movf	(??_Get7Seg+1)^0,w,c
  5391  00173A  0A00               	xorlw	0	; case 0
  5392  00173C  B4D8               	btfsc	status,2,c
  5393  00173E  EFA3  F00B         	goto	l5668
  5394  001742  EF94  F00B         	goto	l4400
  5395  001746                     l5668:
  5396                           
  5397                           ; Switch size 1, requested type "simple"
  5398                           ; Number of cases is 10, Range of values is 0 to 9
  5399                           ; switch strategies available:
  5400                           ; Name         Instructions Cycles
  5401                           ; simple_byte           31    16 (average)
  5402                           ;	Chosen strategy is simple_byte
  5403  001746  5040               	movf	??_Get7Seg^0,w,c
  5404  001748  0A00               	xorlw	0	; case 0
  5405  00174A  B4D8               	btfsc	status,2,c
  5406  00174C  EF6C  F00B         	goto	l4380
  5407  001750  0A01               	xorlw	1	; case 1
  5408  001752  B4D8               	btfsc	status,2,c
  5409  001754  EF70  F00B         	goto	l4382
  5410  001758  0A03               	xorlw	3	; case 2
  5411  00175A  B4D8               	btfsc	status,2,c
  5412  00175C  EF74  F00B         	goto	l4384
  5413  001760  0A01               	xorlw	1	; case 3
  5414  001762  B4D8               	btfsc	status,2,c
  5415  001764  EF78  F00B         	goto	l4386
  5416  001768  0A07               	xorlw	7	; case 4
  5417  00176A  B4D8               	btfsc	status,2,c
  5418  00176C  EF7C  F00B         	goto	l4388
  5419  001770  0A01               	xorlw	1	; case 5
  5420  001772  B4D8               	btfsc	status,2,c
  5421  001774  EF80  F00B         	goto	l4390
  5422  001778  0A03               	xorlw	3	; case 6
  5423  00177A  B4D8               	btfsc	status,2,c
  5424  00177C  EF84  F00B         	goto	l4392
  5425  001780  0A01               	xorlw	1	; case 7
  5426  001782  B4D8               	btfsc	status,2,c
  5427  001784  EF88  F00B         	goto	l4394
  5428  001788  0A0F               	xorlw	15	; case 8
  5429  00178A  B4D8               	btfsc	status,2,c
  5430  00178C  EF8C  F00B         	goto	l4396
  5431  001790  0A01               	xorlw	1	; case 9
  5432  001792  B4D8               	btfsc	status,2,c
  5433  001794  EF90  F00B         	goto	l4398
  5434  001798  EF94  F00B         	goto	l4400
  5435  00179C                     l4406:
  5436                           
  5437                           ;Display.c: 147:  return (Data);
  5438  00179C  5042               	movf	Get7Seg@Data^0,w,c
  5439  00179E  0012               	return		;funcret
  5440  0017A0                     __end_of_Get7Seg:
  5441                           	opt callstack 0
  5442                           
  5443 ;; *************** function _Homing_Again_Auto *****************
  5444 ;; Defined at:
  5445 ;;		line 996 in file "main.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;Total ram usage:        2 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    4
  5466 ;; This function calls:
  5467 ;;		_AD_capture_BattVoltage
  5468 ;;		_MotorBREAK
  5469 ;;		_MotorON_PWM
  5470 ;;		_Read_IR
  5471 ;;		_WriteSTLED316SErr
  5472 ;;		_WriteSTLED316SMode
  5473 ;;		_delay_1ms
  5474 ;;		_readWeighingData
  5475 ;; This function is called by:
  5476 ;;		_main
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text26
  5481  0010AE                     __ptext26:
  5482                           	opt callstack 0
  5483  0010AE                     _Homing_Again_Auto:
  5484                           	opt callstack 26
  5485  0010AE                     
  5486                           ;main.c: 999:     IR_SENSORF = 0;
  5487  0010AE  0E00               	movlw	0
  5488  0010B0  6E14               	movwf	(_IR_SENSORF+1)^0,c
  5489  0010B2  0E00               	movlw	0
  5490  0010B4  6E13               	movwf	_IR_SENSORF^0,c
  5491  0010B6                     
  5492                           ;main.c: 1000:     WriteSTLED316SMode('A');
  5493  0010B6  0E41               	movlw	65
  5494  0010B8  EC76  F00A         	call	_WriteSTLED316SMode
  5495  0010BC                     
  5496                           ;main.c: 1002:     if (vibration_mode == 1)
  5497  0010BC  0432               	decf	_vibration_mode^0,w,c
  5498  0010BE  A4D8               	btfss	status,2,c
  5499  0010C0  EF64  F008         	goto	u3131
  5500  0010C4  EF66  F008         	goto	u3130
  5501  0010C8                     u3131:
  5502  0010C8  EF7B  F008         	goto	l353
  5503  0010CC                     u3130:
  5504  0010CC                     
  5505                           ;main.c: 1003:     {;main.c: 1004:         LATCbits.LATC1 = 1;
  5506  0010CC  828B               	bsf	139,1,c	;volatile
  5507  0010CE                     
  5508                           ;main.c: 1005:         delay_1ms(Vmotor_Time);
  5509  0010CE  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5510  0010D2  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5511  0010D6  EC21  F00F         	call	_delay_1ms	;wreg free
  5512  0010DA                     
  5513                           ;main.c: 1006:         LATCbits.LATC1 = 0;
  5514  0010DA  928B               	bcf	139,1,c	;volatile
  5515  0010DC                     l4822:
  5516                           
  5517                           ;main.c: 1007:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5518  0010DC  0E04               	movlw	4
  5519  0010DE  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5520  0010E0  0E0C               	movlw	12
  5521  0010E2  6E47               	movwf	??_Homing_Again_Auto^0,c
  5522  0010E4  0E34               	movlw	52
  5523  0010E6                     u3807:
  5524  0010E6  2EE8               	decfsz	wreg,f,c
  5525  0010E8  D7FE               	bra	u3807
  5526  0010EA  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5527  0010EC  D7FC               	bra	u3807
  5528  0010EE  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5529  0010F0  D7FA               	bra	u3807
  5530                           
  5531                           ;main.c: 1008:     }
  5532  0010F2  EF7E  F008         	goto	l4826
  5533  0010F6                     l353:
  5534                           
  5535                           ;main.c: 1010:     {;main.c: 1011:         LATCbits.LATC1 = 0;
  5536  0010F6  928B               	bcf	139,1,c	;volatile
  5537  0010F8  EF6E  F008         	goto	l4822
  5538  0010FC                     l4826:
  5539                           
  5540                           ;main.c: 1015:     LATAbits.LATA2 = 1;
  5541  0010FC  8489               	bsf	137,2,c	;volatile
  5542                           
  5543                           ;main.c: 1017:     while ( Stop==0)
  5544  0010FE  EF2E  F009         	goto	l4884
  5545  001102                     l356:
  5546  001102  0004               	clrwdt		;# 
  5547  001104                     
  5548                           ;main.c: 1020:         readWeighingData();
  5549  001104  ECD5  F00D         	call	_readWeighingData	;wreg free
  5550  001108                     
  5551                           ;main.c: 1021:         AD_capture_BattVoltage();
  5552  001108  EC92  F00E         	call	_AD_capture_BattVoltage	;wreg free
  5553  00110C                     
  5554                           ;main.c: 1022:         delay_1ms(Motor_Pause_Time);
  5555  00110C  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  5556  001110  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5557  001114  EC21  F00F         	call	_delay_1ms	;wreg free
  5558  001118                     
  5559                           ;main.c: 1023:         MotorON_PWM();
  5560  001118  ECD2  F00F         	call	_MotorON_PWM	;wreg free
  5561  00111C                     
  5562                           ;main.c: 1024:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5563  00111C  0E04               	movlw	4
  5564  00111E  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5565  001120  0E8E               	movlw	142
  5566  001122  6E47               	movwf	??_Homing_Again_Auto^0,c
  5567  001124  0E12               	movlw	18
  5568  001126                     u3817:
  5569  001126  2EE8               	decfsz	wreg,f,c
  5570  001128  D7FE               	bra	u3817
  5571  00112A  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5572  00112C  D7FC               	bra	u3817
  5573  00112E  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5574  001130  D7FA               	bra	u3817
  5575  001132  D000               	nop2	
  5576  001134                     
  5577                           ;main.c: 1026:         errorcounter = 30;
  5578  001134  0E1E               	movlw	30
  5579  001136  6E52               	movwf	_errorcounter^0,c	;volatile
  5580  001138  0E00               	movlw	0
  5581  00113A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5582  00113C  0E00               	movlw	0
  5583  00113E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5584  001140  0E00               	movlw	0
  5585  001142  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5586  001144                     l4840:
  5587                           
  5588                           ;main.c: 1029:         {;main.c: 1030:           IR_SENSORF = Read_IR();
  5589  001144  EC70  F00F         	call	_Read_IR	;wreg free
  5590  001148  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5591  00114C  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5592  001150                     
  5593                           ;main.c: 1031:           if(errorcounter == 0)
  5594  001150  5052               	movf	_errorcounter^0,w,c	;volatile
  5595  001152  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5596  001154  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5597  001156  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5598  001158  A4D8               	btfss	status,2,c
  5599  00115A  EFB1  F008         	goto	u3141
  5600  00115E  EFB3  F008         	goto	u3140
  5601  001162                     u3141:
  5602  001162  EFB8  F008         	goto	l4848
  5603  001166                     u3140:
  5604  001166                     
  5605                           ;main.c: 1032:           {;main.c: 1033:               WriteSTLED316SErr('1');
  5606  001166  0E31               	movlw	49
  5607  001168  ECF6  F00A         	call	_WriteSTLED316SErr
  5608  00116C                     
  5609                           ;main.c: 1034:               MotorBREAK();
  5610  00116C  ECD7  F00F         	call	_MotorBREAK	;wreg free
  5611  001170                     l4848:
  5612                           
  5613                           ;main.c: 1036:         }while(IR_SENSORF != 0);
  5614  001170  5013               	movf	_IR_SENSORF^0,w,c
  5615  001172  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5616  001174  A4D8               	btfss	status,2,c
  5617  001176  EFBF  F008         	goto	u3151
  5618  00117A  EFC1  F008         	goto	u3150
  5619  00117E                     u3151:
  5620  00117E  EFA2  F008         	goto	l4840
  5621  001182                     u3150:
  5622  001182                     
  5623                           ;main.c: 1038:          _delay((unsigned long)((30)*(8000000/4000.0)));
  5624  001182  0E4E               	movlw	78
  5625  001184  6E47               	movwf	??_Homing_Again_Auto^0,c
  5626  001186  0EEB               	movlw	235
  5627  001188                     u3827:
  5628  001188  2EE8               	decfsz	wreg,f,c
  5629  00118A  D7FE               	bra	u3827
  5630  00118C  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5631  00118E  D7FC               	bra	u3827
  5632  001190  F000               	nop	
  5633  001192                     
  5634                           ;main.c: 1039:          errorcounter = 30;
  5635  001192  0E1E               	movlw	30
  5636  001194  6E52               	movwf	_errorcounter^0,c	;volatile
  5637  001196  0E00               	movlw	0
  5638  001198  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5639  00119A  0E00               	movlw	0
  5640  00119C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5641  00119E  0E00               	movlw	0
  5642  0011A0  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5643  0011A2                     l4854:
  5644                           
  5645                           ;main.c: 1042:         {;main.c: 1043:           IR_SENSORF = Read_IR();
  5646  0011A2  EC70  F00F         	call	_Read_IR	;wreg free
  5647  0011A6  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5648  0011AA  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5649  0011AE                     
  5650                           ;main.c: 1044:           if(errorcounter == 0)
  5651  0011AE  5052               	movf	_errorcounter^0,w,c	;volatile
  5652  0011B0  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5653  0011B2  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5654  0011B4  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5655  0011B6  A4D8               	btfss	status,2,c
  5656  0011B8  EFE0  F008         	goto	u3161
  5657  0011BC  EFE2  F008         	goto	u3160
  5658  0011C0                     u3161:
  5659  0011C0  EFE7  F008         	goto	l4862
  5660  0011C4                     u3160:
  5661  0011C4                     
  5662                           ;main.c: 1045:           {;main.c: 1046:               WriteSTLED316SErr('2');
  5663  0011C4  0E32               	movlw	50
  5664  0011C6  ECF6  F00A         	call	_WriteSTLED316SErr
  5665  0011CA                     
  5666                           ;main.c: 1047:               MotorBREAK();
  5667  0011CA  ECD7  F00F         	call	_MotorBREAK	;wreg free
  5668  0011CE                     l4862:
  5669                           
  5670                           ;main.c: 1049:         }while(IR_SENSORF != 1);
  5671  0011CE  0413               	decf	_IR_SENSORF^0,w,c
  5672  0011D0  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5673  0011D2  A4D8               	btfss	status,2,c
  5674  0011D4  EFEE  F008         	goto	u3171
  5675  0011D8  EFF0  F008         	goto	u3170
  5676  0011DC                     u3171:
  5677  0011DC  EFD1  F008         	goto	l4854
  5678  0011E0                     u3170:
  5679  0011E0                     
  5680                           ;main.c: 1051:         errorcounter = 30;
  5681  0011E0  0E1E               	movlw	30
  5682  0011E2  6E52               	movwf	_errorcounter^0,c	;volatile
  5683  0011E4  0E00               	movlw	0
  5684  0011E6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5685  0011E8  0E00               	movlw	0
  5686  0011EA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5687  0011EC  0E00               	movlw	0
  5688  0011EE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5689  0011F0                     
  5690                           ;main.c: 1053:         delay_1ms(Motor_Stop_Delay_Time);
  5691  0011F0  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5692  0011F4  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5693  0011F8  EC21  F00F         	call	_delay_1ms	;wreg free
  5694  0011FC                     
  5695                           ;main.c: 1054:         MotorBREAK();
  5696  0011FC  ECD7  F00F         	call	_MotorBREAK	;wreg free
  5697                           
  5698                           ;main.c: 1056:         if (vibration_mode == 1)
  5699  001200  0432               	decf	_vibration_mode^0,w,c
  5700  001202  A4D8               	btfss	status,2,c
  5701  001204  EF06  F009         	goto	u3181
  5702  001208  EF08  F009         	goto	u3180
  5703  00120C                     u3181:
  5704  00120C  EF1D  F009         	goto	l363
  5705  001210                     u3180:
  5706  001210                     
  5707                           ;main.c: 1057:         {;main.c: 1058:             LATCbits.LATC1 = 1;
  5708  001210  828B               	bsf	139,1,c	;volatile
  5709  001212                     
  5710                           ;main.c: 1059:             delay_1ms(Vmotor_Time);
  5711  001212  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5712  001216  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5713  00121A  EC21  F00F         	call	_delay_1ms	;wreg free
  5714  00121E                     
  5715                           ;main.c: 1061:             LATCbits.LATC1 = 0;
  5716  00121E  928B               	bcf	139,1,c	;volatile
  5717  001220                     
  5718                           ;main.c: 1062:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5719  001220  0E04               	movlw	4
  5720  001222  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5721  001224  0E0C               	movlw	12
  5722  001226  6E47               	movwf	??_Homing_Again_Auto^0,c
  5723  001228  0E34               	movlw	52
  5724  00122A                     u3837:
  5725  00122A  2EE8               	decfsz	wreg,f,c
  5726  00122C  D7FE               	bra	u3837
  5727  00122E  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5728  001230  D7FC               	bra	u3837
  5729  001232  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5730  001234  D7FA               	bra	u3837
  5731                           
  5732                           ;main.c: 1063:         }
  5733  001236  EF24  F009         	goto	l4880
  5734  00123A                     l363:
  5735                           
  5736                           ;main.c: 1065:         {;main.c: 1066:             LATCbits.LATC1 = 0;
  5737  00123A  928B               	bcf	139,1,c	;volatile
  5738  00123C                     
  5739                           ;main.c: 1067:              delay_1ms(Vmotor_Time);
  5740  00123C  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5741  001240  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5742  001244  EC21  F00F         	call	_delay_1ms	;wreg free
  5743  001248                     l4880:
  5744                           
  5745                           ;main.c: 1070:         if(Stop==1)
  5746  001248  0435               	decf	_Stop^0,w,c
  5747  00124A  A4D8               	btfss	status,2,c
  5748  00124C  EF2A  F009         	goto	u3191
  5749  001250  EF2C  F009         	goto	u3190
  5750  001254                     u3191:
  5751  001254  EF2E  F009         	goto	l4884
  5752  001258                     u3190:
  5753  001258  EF36  F009         	goto	l366
  5754  00125C                     l4884:
  5755                           
  5756                           ;main.c: 1017:     while ( Stop==0)
  5757  00125C  5035               	movf	_Stop^0,w,c
  5758  00125E  B4D8               	btfsc	status,2,c
  5759  001260  EF34  F009         	goto	u3201
  5760  001264  EF36  F009         	goto	u3200
  5761  001268                     u3201:
  5762  001268  EF81  F008         	goto	l356
  5763  00126C                     u3200:
  5764  00126C                     l366:
  5765                           
  5766                           ;main.c: 1075:     LATAbits.LATA2 = 0;
  5767  00126C  9489               	bcf	137,2,c	;volatile
  5768  00126E                     
  5769                           ;main.c: 1077:     if (NUM == 0 || Stop==1)
  5770  00126E  5019               	movf	_NUM^0,w,c
  5771  001270  101A               	iorwf	(_NUM+1)^0,w,c
  5772  001272  B4D8               	btfsc	status,2,c
  5773  001274  EF3E  F009         	goto	u3211
  5774  001278  EF40  F009         	goto	u3210
  5775  00127C                     u3211:
  5776  00127C  EF48  F009         	goto	l4890
  5777  001280                     u3210:
  5778  001280  0435               	decf	_Stop^0,w,c
  5779  001282  A4D8               	btfss	status,2,c
  5780  001284  EF46  F009         	goto	u3221
  5781  001288  EF48  F009         	goto	u3220
  5782  00128C                     u3221:
  5783  00128C  EF63  F009         	goto	l4900
  5784  001290                     u3220:
  5785  001290                     l4890:
  5786                           
  5787                           ;main.c: 1078:     {;main.c: 1080:         if (vibration_mode == 1)
  5788  001290  0432               	decf	_vibration_mode^0,w,c
  5789  001292  A4D8               	btfss	status,2,c
  5790  001294  EF4E  F009         	goto	u3231
  5791  001298  EF50  F009         	goto	u3230
  5792  00129C                     u3231:
  5793  00129C  EF63  F009         	goto	l4900
  5794  0012A0                     u3230:
  5795  0012A0                     
  5796                           ;main.c: 1081:         {;main.c: 1082:             LATCbits.LATC1 = 1;
  5797  0012A0  828B               	bsf	139,1,c	;volatile
  5798  0012A2                     
  5799                           ;main.c: 1083:             delay_1ms(Vmotor_Time);
  5800  0012A2  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5801  0012A6  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5802  0012AA  EC21  F00F         	call	_delay_1ms	;wreg free
  5803  0012AE                     
  5804                           ;main.c: 1085:             LATCbits.LATC1 = 0;
  5805  0012AE  928B               	bcf	139,1,c	;volatile
  5806  0012B0                     
  5807                           ;main.c: 1086:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5808  0012B0  0E04               	movlw	4
  5809  0012B2  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5810  0012B4  0E0C               	movlw	12
  5811  0012B6  6E47               	movwf	??_Homing_Again_Auto^0,c
  5812  0012B8  0E34               	movlw	52
  5813  0012BA                     u3847:
  5814  0012BA  2EE8               	decfsz	wreg,f,c
  5815  0012BC  D7FE               	bra	u3847
  5816  0012BE  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5817  0012C0  D7FC               	bra	u3847
  5818  0012C2  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5819  0012C4  D7FA               	bra	u3847
  5820  0012C6                     l4900:
  5821                           
  5822                           ;main.c: 1091:     NUM = 0;
  5823  0012C6  0E00               	movlw	0
  5824  0012C8  6E1A               	movwf	(_NUM+1)^0,c
  5825  0012CA  0E00               	movlw	0
  5826  0012CC  6E19               	movwf	_NUM^0,c
  5827  0012CE                     
  5828                           ;main.c: 1092:     OpMode = AUTO_MODE;
  5829  0012CE  0E02               	movlw	2
  5830  0012D0  6E30               	movwf	_OpMode^0,c	;volatile
  5831  0012D2  0012               	return		;funcret
  5832  0012D4                     __end_of_Homing_Again_Auto:
  5833                           	opt callstack 0
  5834                           
  5835 ;; *************** function _readWeighingData *****************
  5836 ;; Defined at:
  5837 ;;		line 1125 in file "main.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  i               2    8[COMRAM] int 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;Total ram usage:        2 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    3
  5858 ;; This function calls:
  5859 ;;		_Write1USART
  5860 ;;		_flushOut
  5861 ;; This function is called by:
  5862 ;;		_Homing_Again_Manual
  5863 ;;		_Homing_Again_Auto
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text27
  5868  001BAA                     __ptext27:
  5869                           	opt callstack 0
  5870  001BAA                     _readWeighingData:
  5871                           	opt callstack 26
  5872  001BAA                     
  5873                           ;main.c: 1127:     int i;;main.c: 1129:     Serial_Buffer_Out[0] = 0xA5;
  5874  001BAA  0EA5               	movlw	165
  5875  001BAC  0100               	movlb	0	; () banked
  5876  001BAE  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  5877                           
  5878                           ;main.c: 1130:     Serial_Buffer_Out[1] = 0x45;
  5879  001BB0  0E45               	movlw	69
  5880  001BB2  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  5881                           
  5882                           ;main.c: 1131:     Serial_Buffer_Out[2] = 0x00;
  5883  001BB4  0E00               	movlw	0
  5884  001BB6  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  5885                           
  5886                           ;main.c: 1132:     Serial_Buffer_Out[3] = 0x45;
  5887  001BB8  0E45               	movlw	69
  5888  001BBA  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  5889                           
  5890                           ;main.c: 1133:     Serial_Buffer_Out[4] = 0x5A;
  5891  001BBC  0E5A               	movlw	90
  5892  001BBE  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  5893  001BC0                     
  5894                           ; BSR set to: 0
  5895                           ;main.c: 1135:     INTCONbits.GIE=0;
  5896  001BC0  9EF2               	bcf	242,7,c	;volatile
  5897                           
  5898                           ;main.c: 1136:     for (i=0; i<5;i++)
  5899  001BC2  0E00               	movlw	0
  5900  001BC4  6E41               	movwf	(readWeighingData@i+1)^0,c
  5901  001BC6  0E00               	movlw	0
  5902  001BC8  6E40               	movwf	readWeighingData@i^0,c
  5903  001BCA                     l3108:
  5904                           
  5905                           ;main.c: 1137:     {;main.c: 1138:         Write1USART(Serial_Buffer_Out[i]);
  5906  001BCA  0E60               	movlw	low _Serial_Buffer_Out
  5907  001BCC  2440               	addwf	readWeighingData@i^0,w,c
  5908  001BCE  6ED9               	movwf	fsr2l,c
  5909  001BD0  0E00               	movlw	high _Serial_Buffer_Out
  5910  001BD2  2041               	addwfc	(readWeighingData@i+1)^0,w,c
  5911  001BD4  6EDA               	movwf	fsr2h,c
  5912  001BD6  50DF               	movf	indf2,w,c
  5913  001BD8  EC99  F00F         	call	_Write1USART
  5914  001BDC                     
  5915                           ;main.c: 1139:     }
  5916  001BDC  4A40               	infsnz	readWeighingData@i^0,f,c
  5917  001BDE  2A41               	incf	(readWeighingData@i+1)^0,f,c
  5918  001BE0  BE41               	btfsc	(readWeighingData@i+1)^0,7,c
  5919  001BE2  EFFC  F00D         	goto	u1701
  5920  001BE6  5041               	movf	(readWeighingData@i+1)^0,w,c
  5921  001BE8  E109               	bnz	u1700
  5922  001BEA  0E05               	movlw	5
  5923  001BEC  5C40               	subwf	readWeighingData@i^0,w,c
  5924  001BEE  A0D8               	btfss	status,0,c
  5925  001BF0  EFFC  F00D         	goto	u1701
  5926  001BF4  EFFE  F00D         	goto	u1700
  5927  001BF8                     u1701:
  5928  001BF8  EFE5  F00D         	goto	l3108
  5929  001BFC                     u1700:
  5930  001BFC                     
  5931                           ;main.c: 1140:     INTCONbits.GIE=1;
  5932  001BFC  8EF2               	bsf	242,7,c	;volatile
  5933  001BFE                     
  5934                           ;main.c: 1142:     flushOut();
  5935  001BFE  ECCE  F00E         	call	_flushOut	;wreg free
  5936  001C02  0012               	return		;funcret
  5937  001C04                     __end_of_readWeighingData:
  5938                           	opt callstack 0
  5939                           
  5940 ;; *************** function _flushOut *****************
  5941 ;; Defined at:
  5942 ;;		line 1112 in file "main.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;		None
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  i               2    6[COMRAM] int 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;Total ram usage:        2 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    2
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_main
  5967 ;;		_readWeighingData
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text28
  5972  001D9C                     __ptext28:
  5973                           	opt callstack 0
  5974  001D9C                     _flushOut:
  5975                           	opt callstack 28
  5976  001D9C                     
  5977                           ;main.c: 1114:     int i;;main.c: 1116:     for(i=0; i<16; i++)
  5978  001D9C  0E00               	movlw	0
  5979  001D9E  6E3F               	movwf	(flushOut@i+1)^0,c
  5980  001DA0  0E00               	movlw	0
  5981  001DA2  6E3E               	movwf	flushOut@i^0,c
  5982  001DA4                     l2768:
  5983                           
  5984                           ;main.c: 1117:     {;main.c: 1118:         Serial_Buffer_Out[i]=0x00;
  5985  001DA4  0E60               	movlw	low _Serial_Buffer_Out
  5986  001DA6  243E               	addwf	flushOut@i^0,w,c
  5987  001DA8  6ED9               	movwf	fsr2l,c
  5988  001DAA  0E00               	movlw	high _Serial_Buffer_Out
  5989  001DAC  203F               	addwfc	(flushOut@i+1)^0,w,c
  5990  001DAE  6EDA               	movwf	fsr2h,c
  5991  001DB0  0E00               	movlw	0
  5992  001DB2  6EDF               	movwf	indf2,c
  5993  001DB4                     
  5994                           ;main.c: 1119:     }
  5995  001DB4  4A3E               	infsnz	flushOut@i^0,f,c
  5996  001DB6  2A3F               	incf	(flushOut@i+1)^0,f,c
  5997  001DB8  BE3F               	btfsc	(flushOut@i+1)^0,7,c
  5998  001DBA  EFE8  F00E         	goto	u1411
  5999  001DBE  503F               	movf	(flushOut@i+1)^0,w,c
  6000  001DC0  E109               	bnz	u1410
  6001  001DC2  0E10               	movlw	16
  6002  001DC4  5C3E               	subwf	flushOut@i^0,w,c
  6003  001DC6  A0D8               	btfss	status,0,c
  6004  001DC8  EFE8  F00E         	goto	u1411
  6005  001DCC  EFEA  F00E         	goto	u1410
  6006  001DD0                     u1411:
  6007  001DD0  EFD2  F00E         	goto	l2768
  6008  001DD4                     u1410:
  6009  001DD4  0012               	return		;funcret
  6010  001DD6                     __end_of_flushOut:
  6011                           	opt callstack 0
  6012                           
  6013 ;; *************** function _Write1USART *****************
  6014 ;; Defined at:
  6015 ;;		line 48 in file "usart.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  data            1    wreg     unsigned char 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  data            1    6[COMRAM] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;Total ram usage:        1 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    2
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		_main
  6040 ;;		_readWeighingData
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text29
  6045  001F32                     __ptext29:
  6046                           	opt callstack 0
  6047  001F32                     _Write1USART:
  6048                           	opt callstack 28
  6049                           
  6050                           ;incstack = 0
  6051                           ;Write1USART@data stored from wreg
  6052  001F32  6E3E               	movwf	Write1USART@data^0,c
  6053  001F34                     
  6054                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  6055  001F34  C03E  FFAE         	movff	Write1USART@data,4014	;volatile
  6056  001F38                     l561:
  6057  001F38  A2AD               	btfss	173,1,c	;volatile
  6058  001F3A  EFA1  F00F         	goto	u1401
  6059  001F3E  EFA3  F00F         	goto	u1400
  6060  001F42                     u1401:
  6061  001F42  EF9C  F00F         	goto	l561
  6062  001F46                     u1400:
  6063  001F46  0012               	return		;funcret
  6064  001F48                     __end_of_Write1USART:
  6065                           	opt callstack 0
  6066                           
  6067 ;; *************** function _WriteSTLED316SMode *****************
  6068 ;; Defined at:
  6069 ;;		line 191 in file "Display.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  msg             1    wreg     unsigned char 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  msg             1   14[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;Total ram usage:        3 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    3
  6090 ;; This function calls:
  6091 ;;		_STLED316s_SPI_SendData
  6092 ;; This function is called by:
  6093 ;;		_Homing_Again_Auto
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text30
  6098  0014EC                     __ptext30:
  6099                           	opt callstack 0
  6100  0014EC                     _WriteSTLED316SMode:
  6101                           	opt callstack 26
  6102                           
  6103                           ;incstack = 0
  6104                           ;WriteSTLED316SMode@msg stored from wreg
  6105  0014EC  6E46               	movwf	WriteSTLED316SMode@msg^0,c
  6106  0014EE                     
  6107                           ;Display.c: 191: void WriteSTLED316SMode( char msg);Display.c: 192: {;Display.c: 193:  L
      +                          ATCbits.LATC4 = 0;
  6108  0014EE  988B               	bcf	139,4,c	;volatile
  6109  0014F0                     
  6110                           ;Display.c: 195:  STLED316s_SPI_SendData (0x00 );
  6111  0014F0  0E00               	movlw	0
  6112  0014F2  EC27  F00D         	call	_STLED316s_SPI_SendData
  6113  0014F6                     
  6114                           ;Display.c: 198:  LATCbits.LATC4 = 1;
  6115  0014F6  888B               	bsf	139,4,c	;volatile
  6116  0014F8                     
  6117                           ;Display.c: 200:  LATCbits.LATC4 = 0;
  6118  0014F8  988B               	bcf	139,4,c	;volatile
  6119                           
  6120                           ;Display.c: 202:  STLED316s_SPI_SendData (0x00);
  6121  0014FA  0E00               	movlw	0
  6122  0014FC  EC27  F00D         	call	_STLED316s_SPI_SendData
  6123                           
  6124                           ;Display.c: 204:  switch(msg)
  6125  001500  EFC2  F00A         	goto	l4584
  6126  001504                     l4566:
  6127                           
  6128                           ;Display.c: 207:      STLED316s_SPI_SendData (0x79);
  6129  001504  0E79               	movlw	121
  6130  001506  EC27  F00D         	call	_STLED316s_SPI_SendData
  6131                           
  6132                           ;Display.c: 208:         STLED316s_SPI_SendData (0x3F);
  6133  00150A  0E3F               	movlw	63
  6134  00150C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6135                           
  6136                           ;Display.c: 209:        break;
  6137  001510  EFEF  F00A         	goto	l449
  6138  001514                     l4568:
  6139                           
  6140                           ;Display.c: 211:      STLED316s_SPI_SendData (0x3F);
  6141  001514  0E3F               	movlw	63
  6142  001516  EC27  F00D         	call	_STLED316s_SPI_SendData
  6143                           
  6144                           ;Display.c: 212:         STLED316s_SPI_SendData (0x73);
  6145  00151A  0E73               	movlw	115
  6146  00151C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6147                           
  6148                           ;Display.c: 213:       break;
  6149  001520  EFEF  F00A         	goto	l449
  6150  001524                     l4570:
  6151                           
  6152                           ;Display.c: 215:      STLED316s_SPI_SendData (0x39);
  6153  001524  0E39               	movlw	57
  6154  001526  EC27  F00D         	call	_STLED316s_SPI_SendData
  6155                           
  6156                           ;Display.c: 216:         STLED316s_SPI_SendData (0x77);
  6157  00152A  0E77               	movlw	119
  6158  00152C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6159                           
  6160                           ;Display.c: 217:        break;
  6161  001530  EFEF  F00A         	goto	l449
  6162  001534                     l4572:
  6163                           
  6164                           ;Display.c: 219:      STLED316s_SPI_SendData (0x00);
  6165  001534  0E00               	movlw	0
  6166  001536  EC27  F00D         	call	_STLED316s_SPI_SendData
  6167                           
  6168                           ;Display.c: 220:         STLED316s_SPI_SendData (0x00);
  6169  00153A  0E00               	movlw	0
  6170  00153C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6171                           
  6172                           ;Display.c: 221:        break;
  6173  001540  EFEF  F00A         	goto	l449
  6174  001544                     l4574:
  6175                           
  6176                           ;Display.c: 223:      STLED316s_SPI_SendData (0x00);
  6177  001544  0E00               	movlw	0
  6178  001546  EC27  F00D         	call	_STLED316s_SPI_SendData
  6179                           
  6180                           ;Display.c: 224:         STLED316s_SPI_SendData (0x3F);
  6181  00154A  0E3F               	movlw	63
  6182  00154C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6183                           
  6184                           ;Display.c: 225:         break;
  6185  001550  EFEF  F00A         	goto	l449
  6186  001554                     l4576:
  6187                           
  6188                           ;Display.c: 227:      STLED316s_SPI_SendData (0x79);
  6189  001554  0E79               	movlw	121
  6190  001556  EC27  F00D         	call	_STLED316s_SPI_SendData
  6191                           
  6192                           ;Display.c: 228:         STLED316s_SPI_SendData (0x06);
  6193  00155A  0E06               	movlw	6
  6194  00155C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6195                           
  6196                           ;Display.c: 229:         break;
  6197  001560  EFEF  F00A         	goto	l449
  6198  001564                     l4578:
  6199                           
  6200                           ;Display.c: 231:      STLED316s_SPI_SendData (0x77);
  6201  001564  0E77               	movlw	119
  6202  001566  EC27  F00D         	call	_STLED316s_SPI_SendData
  6203                           
  6204                           ;Display.c: 232:         STLED316s_SPI_SendData (0x3E);
  6205  00156A  0E3E               	movlw	62
  6206  00156C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6207                           
  6208                           ;Display.c: 233:         break;
  6209  001570  EFEF  F00A         	goto	l449
  6210  001574                     l4580:
  6211                           
  6212                           ;Display.c: 235:      STLED316s_SPI_SendData (0x00);
  6213  001574  0E00               	movlw	0
  6214  001576  EC27  F00D         	call	_STLED316s_SPI_SendData
  6215                           
  6216                           ;Display.c: 236:         STLED316s_SPI_SendData (0x3E);
  6217  00157A  0E3E               	movlw	62
  6218  00157C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6219                           
  6220                           ;Display.c: 237:         break;
  6221  001580  EFEF  F00A         	goto	l449
  6222  001584                     l4584:
  6223  001584  5046               	movf	WriteSTLED316SMode@msg^0,w,c
  6224  001586  6E44               	movwf	??_WriteSTLED316SMode^0,c
  6225  001588  6A45               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6226                           
  6227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6228                           ; Switch size 1, requested type "simple"
  6229                           ; Number of cases is 1, Range of values is 0 to 0
  6230                           ; switch strategies available:
  6231                           ; Name         Instructions Cycles
  6232                           ; simple_byte            4     3 (average)
  6233                           ;	Chosen strategy is simple_byte
  6234  00158A  5045               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6235  00158C  0A00               	xorlw	0	; case 0
  6236  00158E  B4D8               	btfsc	status,2,c
  6237  001590  EFCC  F00A         	goto	l5670
  6238  001594  EFEF  F00A         	goto	l449
  6239  001598                     l5670:
  6240                           
  6241                           ; Switch size 1, requested type "simple"
  6242                           ; Number of cases is 8, Range of values is 65 to 88
  6243                           ; switch strategies available:
  6244                           ; Name         Instructions Cycles
  6245                           ; simple_byte           25    13 (average)
  6246                           ;	Chosen strategy is simple_byte
  6247  001598  5044               	movf	??_WriteSTLED316SMode^0,w,c
  6248  00159A  0A41               	xorlw	65	; case 65
  6249  00159C  B4D8               	btfsc	status,2,c
  6250  00159E  EFB2  F00A         	goto	l4578
  6251  0015A2  0A02               	xorlw	2	; case 67
  6252  0015A4  B4D8               	btfsc	status,2,c
  6253  0015A6  EF92  F00A         	goto	l4570
  6254  0015AA  0A06               	xorlw	6	; case 69
  6255  0015AC  B4D8               	btfsc	status,2,c
  6256  0015AE  EF82  F00A         	goto	l4566
  6257  0015B2  0A02               	xorlw	2	; case 71
  6258  0015B4  B4D8               	btfsc	status,2,c
  6259  0015B6  EFA2  F00A         	goto	l4574
  6260  0015BA  0A08               	xorlw	8	; case 79
  6261  0015BC  B4D8               	btfsc	status,2,c
  6262  0015BE  EF8A  F00A         	goto	l4568
  6263  0015C2  0A1C               	xorlw	28	; case 83
  6264  0015C4  B4D8               	btfsc	status,2,c
  6265  0015C6  EFAA  F00A         	goto	l4576
  6266  0015CA  0A05               	xorlw	5	; case 86
  6267  0015CC  B4D8               	btfsc	status,2,c
  6268  0015CE  EFBA  F00A         	goto	l4580
  6269  0015D2  0A0E               	xorlw	14	; case 88
  6270  0015D4  B4D8               	btfsc	status,2,c
  6271  0015D6  EF9A  F00A         	goto	l4572
  6272  0015DA  EFEF  F00A         	goto	l449
  6273  0015DE                     l449:
  6274                           
  6275                           ;Display.c: 244:  LATCbits.LATC4 = 1;
  6276  0015DE  888B               	bsf	139,4,c	;volatile
  6277                           
  6278                           ;Display.c: 246:  LATCbits.LATC4 = 0;
  6279  0015E0  988B               	bcf	139,4,c	;volatile
  6280  0015E2                     
  6281                           ;Display.c: 248:  STLED316s_SPI_SendData ( 0x0D );
  6282  0015E2  0E0D               	movlw	13
  6283  0015E4  EC27  F00D         	call	_STLED316s_SPI_SendData
  6284  0015E8                     
  6285                           ;Display.c: 250:  LATCbits.LATC4 = 1;
  6286  0015E8  888B               	bsf	139,4,c	;volatile
  6287  0015EA  0012               	return		;funcret
  6288  0015EC                     __end_of_WriteSTLED316SMode:
  6289                           	opt callstack 0
  6290                           
  6291 ;; *************** function _WriteSTLED316SErr *****************
  6292 ;; Defined at:
  6293 ;;		line 291 in file "Display.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  msg             1    wreg     unsigned char 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  msg             1   14[COMRAM] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;Total ram usage:        3 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    3
  6314 ;; This function calls:
  6315 ;;		_STLED316s_SPI_SendData
  6316 ;; This function is called by:
  6317 ;;		_MotorPosition_Init
  6318 ;;		_Homing_Again_Manual
  6319 ;;		_Homing_Again_Auto
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text31
  6324  0015EC                     __ptext31:
  6325                           	opt callstack 0
  6326  0015EC                     _WriteSTLED316SErr:
  6327                           	opt callstack 26
  6328                           
  6329                           ;incstack = 0
  6330                           ;WriteSTLED316SErr@msg stored from wreg
  6331  0015EC  6E46               	movwf	WriteSTLED316SErr@msg^0,c
  6332  0015EE                     
  6333                           ;Display.c: 291: void WriteSTLED316SErr( char msg);Display.c: 292: {;Display.c: 293:  LA
      +                          TCbits.LATC4 = 0;
  6334  0015EE  988B               	bcf	139,4,c	;volatile
  6335  0015F0                     
  6336                           ;Display.c: 295:  STLED316s_SPI_SendData (0x00 );
  6337  0015F0  0E00               	movlw	0
  6338  0015F2  EC27  F00D         	call	_STLED316s_SPI_SendData
  6339  0015F6                     
  6340                           ;Display.c: 298:  LATCbits.LATC4 = 1;
  6341  0015F6  888B               	bsf	139,4,c	;volatile
  6342  0015F8                     
  6343                           ;Display.c: 300:  LATCbits.LATC4 = 0;
  6344  0015F8  988B               	bcf	139,4,c	;volatile
  6345                           
  6346                           ;Display.c: 302:  STLED316s_SPI_SendData (0x00);
  6347  0015FA  0E00               	movlw	0
  6348  0015FC  EC27  F00D         	call	_STLED316s_SPI_SendData
  6349                           
  6350                           ;Display.c: 304:  switch(msg)
  6351  001600  EF3A  F00B         	goto	l4548
  6352  001604                     l4532:
  6353                           
  6354                           ;Display.c: 307:      STLED316s_SPI_SendData (0x79);
  6355  001604  0E79               	movlw	121
  6356  001606  EC27  F00D         	call	_STLED316s_SPI_SendData
  6357                           
  6358                           ;Display.c: 308:         STLED316s_SPI_SendData (0x77);
  6359  00160A  0E77               	movlw	119
  6360  00160C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6361                           
  6362                           ;Display.c: 309:        break;
  6363  001610  EF63  F00B         	goto	l468
  6364  001614                     l4534:
  6365                           
  6366                           ;Display.c: 311:      STLED316s_SPI_SendData (0x79);
  6367  001614  0E79               	movlw	121
  6368  001616  EC27  F00D         	call	_STLED316s_SPI_SendData
  6369                           
  6370                           ;Display.c: 312:         STLED316s_SPI_SendData (0x3F);
  6371  00161A  0E3F               	movlw	63
  6372  00161C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6373                           
  6374                           ;Display.c: 313:       break;
  6375  001620  EF63  F00B         	goto	l468
  6376  001624                     l4536:
  6377                           
  6378                           ;Display.c: 315:      STLED316s_SPI_SendData (0x79);
  6379  001624  0E79               	movlw	121
  6380  001626  EC27  F00D         	call	_STLED316s_SPI_SendData
  6381                           
  6382                           ;Display.c: 316:         STLED316s_SPI_SendData (0x06);
  6383  00162A  0E06               	movlw	6
  6384  00162C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6385                           
  6386                           ;Display.c: 317:        break;
  6387  001630  EF63  F00B         	goto	l468
  6388  001634                     l4538:
  6389                           
  6390                           ;Display.c: 319:      STLED316s_SPI_SendData (0x79);
  6391  001634  0E79               	movlw	121
  6392  001636  EC27  F00D         	call	_STLED316s_SPI_SendData
  6393                           
  6394                           ;Display.c: 320:         STLED316s_SPI_SendData (0x5B);
  6395  00163A  0E5B               	movlw	91
  6396  00163C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6397                           
  6398                           ;Display.c: 321:        break;
  6399  001640  EF63  F00B         	goto	l468
  6400  001644                     l4540:
  6401                           
  6402                           ;Display.c: 323:      STLED316s_SPI_SendData (0x00);
  6403  001644  0E00               	movlw	0
  6404  001646  EC27  F00D         	call	_STLED316s_SPI_SendData
  6405                           
  6406                           ;Display.c: 324:         STLED316s_SPI_SendData (0x3F);
  6407  00164A  0E3F               	movlw	63
  6408  00164C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6409                           
  6410                           ;Display.c: 325:         break;
  6411  001650  EF63  F00B         	goto	l468
  6412  001654                     l4542:
  6413                           
  6414                           ;Display.c: 327:      STLED316s_SPI_SendData (0x79);
  6415  001654  0E79               	movlw	121
  6416  001656  EC27  F00D         	call	_STLED316s_SPI_SendData
  6417                           
  6418                           ;Display.c: 328:         STLED316s_SPI_SendData (0x06);
  6419  00165A  0E06               	movlw	6
  6420  00165C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6421                           
  6422                           ;Display.c: 329:         break;
  6423  001660  EF63  F00B         	goto	l468
  6424  001664                     l4544:
  6425                           
  6426                           ;Display.c: 331:      STLED316s_SPI_SendData (0x77);
  6427  001664  0E77               	movlw	119
  6428  001666  EC27  F00D         	call	_STLED316s_SPI_SendData
  6429                           
  6430                           ;Display.c: 332:         STLED316s_SPI_SendData (0x3E);
  6431  00166A  0E3E               	movlw	62
  6432  00166C  EC27  F00D         	call	_STLED316s_SPI_SendData
  6433                           
  6434                           ;Display.c: 333:         break;
  6435  001670  EF63  F00B         	goto	l468
  6436  001674                     l4548:
  6437  001674  5046               	movf	WriteSTLED316SErr@msg^0,w,c
  6438  001676  6E44               	movwf	??_WriteSTLED316SErr^0,c
  6439  001678  6A45               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6440                           
  6441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6442                           ; Switch size 1, requested type "simple"
  6443                           ; Number of cases is 1, Range of values is 0 to 0
  6444                           ; switch strategies available:
  6445                           ; Name         Instructions Cycles
  6446                           ; simple_byte            4     3 (average)
  6447                           ;	Chosen strategy is simple_byte
  6448  00167A  5045               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6449  00167C  0A00               	xorlw	0	; case 0
  6450  00167E  B4D8               	btfsc	status,2,c
  6451  001680  EF44  F00B         	goto	l5672
  6452  001684  EF63  F00B         	goto	l468
  6453  001688                     l5672:
  6454                           
  6455                           ; Switch size 1, requested type "simple"
  6456                           ; Number of cases is 7, Range of values is 48 to 83
  6457                           ; switch strategies available:
  6458                           ; Name         Instructions Cycles
  6459                           ; simple_byte           22    12 (average)
  6460                           ;	Chosen strategy is simple_byte
  6461  001688  5044               	movf	??_WriteSTLED316SErr^0,w,c
  6462  00168A  0A30               	xorlw	48	; case 48
  6463  00168C  B4D8               	btfsc	status,2,c
  6464  00168E  EF0A  F00B         	goto	l4534
  6465  001692  0A01               	xorlw	1	; case 49
  6466  001694  B4D8               	btfsc	status,2,c
  6467  001696  EF12  F00B         	goto	l4536
  6468  00169A  0A03               	xorlw	3	; case 50
  6469  00169C  B4D8               	btfsc	status,2,c
  6470  00169E  EF1A  F00B         	goto	l4538
  6471  0016A2  0A73               	xorlw	115	; case 65
  6472  0016A4  B4D8               	btfsc	status,2,c
  6473  0016A6  EF32  F00B         	goto	l4544
  6474  0016AA  0A04               	xorlw	4	; case 69
  6475  0016AC  B4D8               	btfsc	status,2,c
  6476  0016AE  EF02  F00B         	goto	l4532
  6477  0016B2  0A02               	xorlw	2	; case 71
  6478  0016B4  B4D8               	btfsc	status,2,c
  6479  0016B6  EF22  F00B         	goto	l4540
  6480  0016BA  0A14               	xorlw	20	; case 83
  6481  0016BC  B4D8               	btfsc	status,2,c
  6482  0016BE  EF2A  F00B         	goto	l4542
  6483  0016C2  EF63  F00B         	goto	l468
  6484  0016C6                     l468:
  6485                           
  6486                           ;Display.c: 338:  LATCbits.LATC4 = 1;
  6487  0016C6  888B               	bsf	139,4,c	;volatile
  6488                           
  6489                           ;Display.c: 340:  LATCbits.LATC4 = 0;
  6490  0016C8  988B               	bcf	139,4,c	;volatile
  6491  0016CA                     
  6492                           ;Display.c: 342:  STLED316s_SPI_SendData ( 0x0D );
  6493  0016CA  0E0D               	movlw	13
  6494  0016CC  EC27  F00D         	call	_STLED316s_SPI_SendData
  6495  0016D0                     
  6496                           ;Display.c: 344:  LATCbits.LATC4 = 1;
  6497  0016D0  888B               	bsf	139,4,c	;volatile
  6498  0016D2  0012               	return		;funcret
  6499  0016D4                     __end_of_WriteSTLED316SErr:
  6500                           	opt callstack 0
  6501                           
  6502 ;; *************** function _STLED316s_SPI_SendData *****************
  6503 ;; Defined at:
  6504 ;;		line 89 in file "Display.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  Data            1    wreg     unsigned char 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  Data            1    8[COMRAM] unsigned char 
  6509 ;;  t               1   11[COMRAM] unsigned char 
  6510 ;;  i               1   10[COMRAM] unsigned char 
  6511 ;;  temp            1    9[COMRAM] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;Total ram usage:        6 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    2
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_InitSTLED316
  6532 ;;		_WriteSTLED316SData
  6533 ;;		_WriteSTLED316SMode
  6534 ;;		_WriteSTLED316SVibMode
  6535 ;;		_WriteSTLED316SErr
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text32
  6540  001A4E                     __ptext32:
  6541                           	opt callstack 0
  6542  001A4E                     _STLED316s_SPI_SendData:
  6543                           	opt callstack 27
  6544                           
  6545                           ;incstack = 0
  6546                           ;STLED316s_SPI_SendData@Data stored from wreg
  6547  001A4E  6E40               	movwf	STLED316s_SPI_SendData@Data^0,c
  6548  001A50                     
  6549                           ;Display.c: 89: void STLED316s_SPI_SendData( unsigned char Data );Display.c: 90: {;Displ
      +                          ay.c: 91:  char i,temp,t;;Display.c: 93:  for(i = 0; i < 8 ;i ++)
  6550  001A50  0E00               	movlw	0
  6551  001A52  6E42               	movwf	STLED316s_SPI_SendData@i^0,c
  6552  001A54                     l414:
  6553                           
  6554                           ;Display.c: 94:  {;Display.c: 95:   LATCbits.LATC3 = 0;
  6555  001A54  968B               	bcf	139,3,c	;volatile
  6556  001A56                     
  6557                           ;Display.c: 96:   temp = Data & (0x1 << i);
  6558  001A56  C042  F03E         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6559  001A5A  0E01               	movlw	1
  6560  001A5C  6E3F               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6561  001A5E  2A3E               	incf	??_STLED316s_SPI_SendData^0,f,c
  6562  001A60  EF34  F00D         	goto	u2724
  6563  001A64                     u2725:
  6564  001A64  90D8               	bcf	status,0,c
  6565  001A66  363F               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6566  001A68                     u2724:
  6567  001A68  2E3E               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6568  001A6A  EF32  F00D         	goto	u2725
  6569  001A6E  503F               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6570  001A70  1440               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6571  001A72  6E41               	movwf	STLED316s_SPI_SendData@temp^0,c
  6572  001A74                     
  6573                           ;Display.c: 97:   if(temp)
  6574  001A74  5041               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6575  001A76  B4D8               	btfsc	status,2,c
  6576  001A78  EF40  F00D         	goto	u2731
  6577  001A7C  EF42  F00D         	goto	u2730
  6578  001A80                     u2731:
  6579  001A80  EF45  F00D         	goto	l416
  6580  001A84                     u2730:
  6581  001A84                     
  6582                           ;Display.c: 98:    LATCbits.LATC5 = 1;
  6583  001A84  8A8B               	bsf	139,5,c	;volatile
  6584  001A86  EF46  F00D         	goto	l4354
  6585  001A8A                     l416:
  6586                           
  6587                           ;Display.c: 100:    LATCbits.LATC5 = 0;
  6588  001A8A  9A8B               	bcf	139,5,c	;volatile
  6589  001A8C                     l4354:
  6590                           
  6591                           ;Display.c: 101:   for( t = 0 ; t < 5; t++);
  6592  001A8C  0E00               	movlw	0
  6593  001A8E  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6594  001A90                     l4360:
  6595  001A90  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6596  001A92  0E04               	movlw	4
  6597  001A94  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6598  001A96  EF4F  F00D         	goto	u2741
  6599  001A9A  EF51  F00D         	goto	u2740
  6600  001A9E                     u2741:
  6601  001A9E  EF48  F00D         	goto	l4360
  6602  001AA2                     u2740:
  6603  001AA2                     
  6604                           ;Display.c: 102:   LATCbits.LATC3 = 1;
  6605  001AA2  868B               	bsf	139,3,c	;volatile
  6606  001AA4                     
  6607                           ;Display.c: 103:   for( t = 0 ; t < 5 ; t++);
  6608  001AA4  0E00               	movlw	0
  6609  001AA6  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6610  001AA8                     l4370:
  6611  001AA8  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6612  001AAA  0E04               	movlw	4
  6613  001AAC  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6614  001AAE  EF5B  F00D         	goto	u2751
  6615  001AB2  EF5D  F00D         	goto	u2750
  6616  001AB6                     u2751:
  6617  001AB6  EF54  F00D         	goto	l4370
  6618  001ABA                     u2750:
  6619  001ABA                     
  6620                           ;Display.c: 104:  }
  6621  001ABA  2A42               	incf	STLED316s_SPI_SendData@i^0,f,c
  6622  001ABC  0E07               	movlw	7
  6623  001ABE  6442               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  6624  001AC0  EF64  F00D         	goto	u2761
  6625  001AC4  EF66  F00D         	goto	u2760
  6626  001AC8                     u2761:
  6627  001AC8  EF2A  F00D         	goto	l414
  6628  001ACC                     u2760:
  6629  001ACC  0012               	return		;funcret
  6630  001ACE                     __end_of_STLED316s_SPI_SendData:
  6631                           	opt callstack 0
  6632                           
  6633 ;; *************** function _Read_IR *****************
  6634 ;; Defined at:
  6635 ;;		line 801 in file "main.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  2    6[COMRAM] unsigned int 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;Total ram usage:        2 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    2
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_MotorPosition_Init
  6660 ;;		_Homing_Again_Manual
  6661 ;;		_Homing_Again_Auto
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text33
  6666  001EE0                     __ptext33:
  6667                           	opt callstack 0
  6668  001EE0                     _Read_IR:
  6669                           	opt callstack 27
  6670  001EE0                     
  6671                           ;main.c: 804:     if(PORTAbits.RA1 == 1)
  6672  001EE0  A280               	btfss	128,1,c	;volatile
  6673  001EE2  EF75  F00F         	goto	u1691
  6674  001EE6  EF77  F00F         	goto	u1690
  6675  001EEA                     u1691:
  6676  001EEA  EF7D  F00F         	goto	l3052
  6677  001EEE                     u1690:
  6678  001EEE                     
  6679                           ;main.c: 805:     {;main.c: 806:         return 0;
  6680  001EEE  0E00               	movlw	0
  6681  001EF0  6E3F               	movwf	(?_Read_IR+1)^0,c
  6682  001EF2  0E00               	movlw	0
  6683  001EF4  6E3E               	movwf	?_Read_IR^0,c
  6684  001EF6  EF81  F00F         	goto	l311
  6685  001EFA                     l3052:
  6686                           
  6687                           ;main.c: 809:     {;main.c: 810:         return 1;
  6688  001EFA  0E00               	movlw	0
  6689  001EFC  6E3F               	movwf	(?_Read_IR+1)^0,c
  6690  001EFE  0E01               	movlw	1
  6691  001F00  6E3E               	movwf	?_Read_IR^0,c
  6692  001F02                     l311:
  6693  001F02  0012               	return		;funcret
  6694  001F04                     __end_of_Read_IR:
  6695                           	opt callstack 0
  6696                           
  6697 ;; *************** function _MotorON_PWM *****************
  6698 ;; Defined at:
  6699 ;;		line 42 in file "MotorDriver.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;Total ram usage:        0 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    3
  6720 ;; This function calls:
  6721 ;;		_Set_RG3_PWM
  6722 ;; This function is called by:
  6723 ;;		_MotorPosition_Init
  6724 ;;		_Homing_Again_Manual
  6725 ;;		_Homing_Again_Auto
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text34
  6730  001FA4                     __ptext34:
  6731                           	opt callstack 0
  6732  001FA4                     _MotorON_PWM:
  6733                           	opt callstack 26
  6734  001FA4                     
  6735                           ;MotorDriver.c: 44:  LATGbits.LATG3 = 1;
  6736  001FA4  868F               	bsf	143,3,c	;volatile
  6737                           
  6738                           ;MotorDriver.c: 45:  LATGbits.LATG4 = 1;
  6739  001FA6  888F               	bsf	143,4,c	;volatile
  6740  001FA8                     
  6741                           ;MotorDriver.c: 47:  Set_RG3_PWM();
  6742  001FA8  ECC6  F00F         	call	_Set_RG3_PWM	;wreg free
  6743  001FAC  0012               	return		;funcret
  6744  001FAE                     __end_of_MotorON_PWM:
  6745                           	opt callstack 0
  6746                           
  6747 ;; *************** function _Set_RG3_PWM *****************
  6748 ;; Defined at:
  6749 ;;		line 29 in file "MotorDriver.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;		None
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1    wreg      void 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;Total ram usage:        0 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    2
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_MotorON_PWM
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text35
  6778  001F8C                     __ptext35:
  6779                           	opt callstack 0
  6780  001F8C                     _Set_RG3_PWM:
  6781                           	opt callstack 26
  6782  001F8C                     
  6783                           ;MotorDriver.c: 31:     CCP4CON = 0x0C;
  6784  001F8C  0E0C               	movlw	12
  6785  001F8E  6E73               	movwf	115,c	;volatile
  6786  001F90                     
  6787                           ;MotorDriver.c: 32:     CCPR4L = PWM_reg;
  6788  001F90  C058  FF74         	movff	_PWM_reg,3956	;volatile
  6789  001F94                     
  6790                           ;MotorDriver.c: 33:   T4CONbits.TMR4ON = 1;
  6791  001F94  8476               	bsf	118,2,c	;volatile
  6792  001F96  0012               	return		;funcret
  6793  001F98                     __end_of_Set_RG3_PWM:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function _MotorBREAK *****************
  6797 ;; Defined at:
  6798 ;;		line 50 in file "MotorDriver.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    3
  6819 ;; This function calls:
  6820 ;;		_Clr_RG3_PWM
  6821 ;; This function is called by:
  6822 ;;		_MotorPosition_Init
  6823 ;;		_Homing_Again_Manual
  6824 ;;		_Homing_Again_Auto
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text36
  6829  001FAE                     __ptext36:
  6830                           	opt callstack 0
  6831  001FAE                     _MotorBREAK:
  6832                           	opt callstack 26
  6833  001FAE                     
  6834                           ;MotorDriver.c: 53:  Clr_RG3_PWM();
  6835  001FAE  ECE8  F00F         	call	_Clr_RG3_PWM	;wreg free
  6836  001FB2                     
  6837                           ;MotorDriver.c: 55:  LATGbits.LATG3 = 1;
  6838  001FB2  868F               	bsf	143,3,c	;volatile
  6839  001FB4                     
  6840                           ;MotorDriver.c: 56:  LATGbits.LATG4 = 1;
  6841  001FB4  888F               	bsf	143,4,c	;volatile
  6842  001FB6  0012               	return		;funcret
  6843  001FB8                     __end_of_MotorBREAK:
  6844                           	opt callstack 0
  6845                           
  6846 ;; *************** function _Clr_RG3_PWM *****************
  6847 ;; Defined at:
  6848 ;;		line 36 in file "MotorDriver.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    2
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_MotorBREAK
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text37
  6877  001FD0                     __ptext37:
  6878                           	opt callstack 0
  6879  001FD0                     _Clr_RG3_PWM:
  6880                           	opt callstack 26
  6881  001FD0                     
  6882                           ;MotorDriver.c: 38:  CCP4CON = 0x00;
  6883  001FD0  0E00               	movlw	0
  6884  001FD2  6E73               	movwf	115,c	;volatile
  6885  001FD4                     
  6886                           ;MotorDriver.c: 39:     T4CONbits.TMR4ON = 0;
  6887  001FD4  9476               	bcf	118,2,c	;volatile
  6888  001FD6  0012               	return		;funcret
  6889  001FD8                     __end_of_Clr_RG3_PWM:
  6890                           	opt callstack 0
  6891                           
  6892 ;; *************** function _AD_capture_BattVoltage *****************
  6893 ;; Defined at:
  6894 ;;		line 1159 in file "main.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;		None
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;		None
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;Total ram usage:        2 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    3
  6915 ;; This function calls:
  6916 ;;		_delay_1ms
  6917 ;; This function is called by:
  6918 ;;		_main
  6919 ;;		_Homing_Again_Manual
  6920 ;;		_Homing_Again_Auto
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text38
  6925  001D24                     __ptext38:
  6926                           	opt callstack 0
  6927  001D24                     _AD_capture_BattVoltage:
  6928                           	opt callstack 26
  6929  001D24                     
  6930                           ;main.c: 1162:     ADCON0bits.CHS0=0;
  6931  001D24  94C2               	bcf	194,2,c	;volatile
  6932                           
  6933                           ;main.c: 1163:     ADCON0bits.CHS1=0;
  6934  001D26  96C2               	bcf	194,3,c	;volatile
  6935                           
  6936                           ;main.c: 1164:     ADCON0bits.CHS2=0;
  6937  001D28  98C2               	bcf	194,4,c	;volatile
  6938                           
  6939                           ;main.c: 1165:     ADCON0bits.CHS3=0;
  6940  001D2A  9AC2               	bcf	194,5,c	;volatile
  6941                           
  6942                           ;main.c: 1167:  ADCON0bits.ADON=1;
  6943  001D2C  80C2               	bsf	194,0,c	;volatile
  6944  001D2E                     
  6945                           ;main.c: 1168:  delay_1ms(5);
  6946  001D2E  0E00               	movlw	0
  6947  001D30  6E3F               	movwf	(delay_1ms@time+1)^0,c
  6948  001D32  0E05               	movlw	5
  6949  001D34  6E3E               	movwf	delay_1ms@time^0,c
  6950  001D36  EC21  F00F         	call	_delay_1ms	;wreg free
  6951  001D3A                     
  6952                           ;main.c: 1169:  ADCON0bits.GO=1;
  6953  001D3A  82C2               	bsf	194,1,c	;volatile
  6954  001D3C                     l392:
  6955  001D3C  B2C2               	btfsc	194,1,c	;volatile
  6956  001D3E  EFA3  F00E         	goto	u1681
  6957  001D42  EFA5  F00E         	goto	u1680
  6958  001D46                     u1681:
  6959  001D46  EF9E  F00E         	goto	l392
  6960  001D4A                     u1680:
  6961  001D4A                     
  6962                           ;main.c: 1173:     VOLTAGE = (ADRESH*256) | (ADRESL);
  6963  001D4A  50C3               	movf	195,w,c	;volatile
  6964  001D4C  CFC4 F041          	movff	4036,??_AD_capture_BattVoltage	;volatile
  6965  001D50  6A42               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  6966  001D52  C041  F042         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  6967  001D56  6A41               	clrf	??_AD_capture_BattVoltage^0,c
  6968  001D58  1041               	iorwf	??_AD_capture_BattVoltage^0,w,c
  6969  001D5A  6E11               	movwf	_VOLTAGE^0,c
  6970  001D5C  5042               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  6971  001D5E  6E12               	movwf	(_VOLTAGE+1)^0,c
  6972  001D60  0012               	return		;funcret
  6973  001D62                     __end_of_AD_capture_BattVoltage:
  6974                           	opt callstack 0
  6975                           
  6976 ;; *************** function _delay_1ms *****************
  6977 ;; Defined at:
  6978 ;;		line 789 in file "main.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  time            2    6[COMRAM] unsigned int 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;Total ram usage:        3 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; Hardware stack levels required when called:    2
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_MotorPosition_Init
  7003 ;;		_Homing_Again_Manual
  7004 ;;		_Homing_Again_Auto
  7005 ;;		_AD_capture_BattVoltage
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text39
  7010  001E42                     __ptext39:
  7011                           	opt callstack 0
  7012  001E42                     _delay_1ms:
  7013                           	opt callstack 27
  7014  001E42                     
  7015                           ;main.c: 789: void delay_1ms(unsigned int time);main.c: 790:  {;main.c: 791:    while(ti
      +                          me > 0)
  7016  001E42  EF2D  F00F         	goto	l304
  7017  001E46                     l2776:
  7018                           
  7019                           ;main.c: 792:    {;main.c: 793:        _delay((unsigned long)((1)*(8000000/4000.0)));
  7020  001E46  0E03               	movlw	3
  7021  001E48  6E40               	movwf	??_delay_1ms^0,c
  7022  001E4A  0E98               	movlw	152
  7023  001E4C                     u3857:
  7024  001E4C  2EE8               	decfsz	wreg,f,c
  7025  001E4E  D7FE               	bra	u3857
  7026  001E50  2E40               	decfsz	??_delay_1ms^0,f,c
  7027  001E52  D7FC               	bra	u3857
  7028  001E54                     
  7029                           ;main.c: 794:       time--;
  7030  001E54  063E               	decf	delay_1ms@time^0,f,c
  7031  001E56  A0D8               	btfss	status,0,c
  7032  001E58  063F               	decf	(delay_1ms@time+1)^0,f,c
  7033  001E5A                     l304:
  7034                           
  7035                           ;main.c: 791:    while(time > 0)
  7036  001E5A  503E               	movf	delay_1ms@time^0,w,c
  7037  001E5C  103F               	iorwf	(delay_1ms@time+1)^0,w,c
  7038  001E5E  A4D8               	btfss	status,2,c
  7039  001E60  EF34  F00F         	goto	u1421
  7040  001E64  EF36  F00F         	goto	u1420
  7041  001E68                     u1421:
  7042  001E68  EF23  F00F         	goto	l2776
  7043  001E6C                     u1420:
  7044  001E6C  0012               	return		;funcret
  7045  001E6E                     __end_of_delay_1ms:
  7046                           	opt callstack 0
  7047                           
  7048 ;; *************** function _high_isr *****************
  7049 ;; Defined at:
  7050 ;;		line 663 in file "main.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  i               1    5[COMRAM] unsigned char 
  7055 ;;  c               1    4[COMRAM] unsigned char 
  7056 ;;  Temp            1    3[COMRAM] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;Total ram usage:        5 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    1
  7073 ;; This function calls:
  7074 ;;		_Low_Power_Indicator
  7075 ;;		_Read1USART
  7076 ;;		i2_Write1USART
  7077 ;; This function is called by:
  7078 ;;		Interrupt level 2
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           	psect	intcode
  7083  000008                     __pintcode:
  7084                           	opt callstack 0
  7085  000008                     _high_isr:
  7086                           	opt callstack 25
  7087                           
  7088                           ;incstack = 0
  7089  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7090  00000A  CFD9 F039          	movff	fsr2l,??_high_isr
  7091  00000E  CFDA F03A          	movff	fsr2h,??_high_isr+1
  7092  000012                     
  7093                           ;main.c: 665:     unsigned char c, i;;main.c: 666:  unsigned char Temp;;main.c: 668:    
      +                           if ((PIR1bits.RC1IF))
  7094  000012  AA9E               	btfss	158,5,c	;volatile
  7095  000014  EF0E  F000         	goto	i2u252_41
  7096  000018  EF10  F000         	goto	i2u252_40
  7097  00001C                     i2u252_41:
  7098  00001C  EFE1  F000         	goto	i2l271
  7099  000020                     i2u252_40:
  7100  000020                     
  7101                           ;main.c: 669:  {;main.c: 671:   c=Read1USART();
  7102  000020  EC5D  F00F         	call	_Read1USART	;wreg free
  7103  000024  6E3C               	movwf	high_isr@c^0,c
  7104  000026                     
  7105                           ;main.c: 673:   if ((c == 0xA5) && ((Serial_Flag == 0)||(Busy == 1)))
  7106  000026  0EA5               	movlw	165
  7107  000028  183C               	xorwf	high_isr@c^0,w,c
  7108  00002A  A4D8               	btfss	status,2,c
  7109  00002C  EF1A  F000         	goto	i2u253_41
  7110  000030  EF1C  F000         	goto	i2u253_40
  7111  000034                     i2u253_41:
  7112  000034  EF3E  F000         	goto	i2l4052
  7113  000038                     i2u253_40:
  7114  000038  5037               	movf	_Serial_Flag^0,w,c
  7115  00003A  B4D8               	btfsc	status,2,c
  7116  00003C  EF22  F000         	goto	i2u254_41
  7117  000040  EF24  F000         	goto	i2u254_40
  7118  000044                     i2u254_41:
  7119  000044  EF2C  F000         	goto	i2l4046
  7120  000048                     i2u254_40:
  7121  000048  0433               	decf	_Busy^0,w,c
  7122  00004A  A4D8               	btfss	status,2,c
  7123  00004C  EF2A  F000         	goto	i2u255_41
  7124  000050  EF2C  F000         	goto	i2u255_40
  7125  000054                     i2u255_41:
  7126  000054  EF3E  F000         	goto	i2l4052
  7127  000058                     i2u255_40:
  7128  000058                     i2l4046:
  7129                           
  7130                           ;main.c: 674:   {;main.c: 675:    Serial_GData = 1;
  7131  000058  0E01               	movlw	1
  7132  00005A  6E36               	movwf	_Serial_GData^0,c
  7133                           
  7134                           ;main.c: 676:    Serial_Count = 0;
  7135  00005C  0E00               	movlw	0
  7136  00005E  6E2A               	movwf	(_Serial_Count+1)^0,c
  7137  000060  0E00               	movlw	0
  7138  000062  6E29               	movwf	_Serial_Count^0,c
  7139  000064                     
  7140                           ;main.c: 677:    Serial_Buffer[Serial_Count] = c;
  7141  000064  0E01               	movlw	low _Serial_Buffer
  7142  000066  2429               	addwf	_Serial_Count^0,w,c
  7143  000068  6ED9               	movwf	fsr2l,c
  7144  00006A  0E00               	movlw	high _Serial_Buffer
  7145  00006C  202A               	addwfc	(_Serial_Count+1)^0,w,c
  7146  00006E  6EDA               	movwf	fsr2h,c
  7147  000070  C03C  FFDF         	movff	high_isr@c,indf2
  7148  000074                     i2l4050:
  7149                           
  7150                           ;main.c: 678:             Serial_Count++;
  7151  000074  4A29               	infsnz	_Serial_Count^0,f,c
  7152  000076  2A2A               	incf	(_Serial_Count+1)^0,f,c
  7153                           
  7154                           ;main.c: 679:   }
  7155  000078  EFEB  F000         	goto	i2l4118
  7156  00007C                     i2l4052:
  7157  00007C  0436               	decf	_Serial_GData^0,w,c
  7158  00007E  A4D8               	btfss	status,2,c
  7159  000080  EF44  F000         	goto	i2u256_41
  7160  000084  EF46  F000         	goto	i2u256_40
  7161  000088                     i2u256_41:
  7162  000088  EFEB  F000         	goto	i2l4118
  7163  00008C                     i2u256_40:
  7164  00008C                     
  7165                           ;main.c: 681:   {;main.c: 682:    Serial_Buffer[Serial_Count] = c;
  7166  00008C  0E01               	movlw	low _Serial_Buffer
  7167  00008E  2429               	addwf	_Serial_Count^0,w,c
  7168  000090  6ED9               	movwf	fsr2l,c
  7169  000092  0E00               	movlw	high _Serial_Buffer
  7170  000094  202A               	addwfc	(_Serial_Count+1)^0,w,c
  7171  000096  6EDA               	movwf	fsr2h,c
  7172  000098  C03C  FFDF         	movff	high_isr@c,indf2
  7173  00009C                     
  7174                           ;main.c: 684:    if(Serial_Count<5)
  7175  00009C  502A               	movf	(_Serial_Count+1)^0,w,c
  7176  00009E  E107               	bnz	i2u257_41
  7177  0000A0  0E05               	movlw	5
  7178  0000A2  5C29               	subwf	_Serial_Count^0,w,c
  7179  0000A4  B0D8               	btfsc	status,0,c
  7180  0000A6  EF57  F000         	goto	i2u257_41
  7181  0000AA  EF59  F000         	goto	i2u257_40
  7182  0000AE                     i2u257_41:
  7183  0000AE  EFDD  F000         	goto	i2l4112
  7184  0000B2                     i2u257_40:
  7185  0000B2                     
  7186                           ;main.c: 685:             {;main.c: 686:                 if (c == 0x5A)
  7187  0000B2  0E5A               	movlw	90
  7188  0000B4  183C               	xorwf	high_isr@c^0,w,c
  7189  0000B6  A4D8               	btfss	status,2,c
  7190  0000B8  EF60  F000         	goto	i2u258_41
  7191  0000BC  EF62  F000         	goto	i2u258_40
  7192  0000C0                     i2u258_41:
  7193  0000C0  EF3A  F000         	goto	i2l4050
  7194  0000C4                     i2u258_40:
  7195  0000C4                     
  7196                           ;main.c: 687:                 {;main.c: 688:                     Temp = Serial_Buffer[1]
      +                           + Serial_Buffer[2];
  7197  0000C4  5002               	movf	(_Serial_Buffer+1)^0,w,c
  7198  0000C6  2403               	addwf	(_Serial_Buffer+2)^0,w,c
  7199  0000C8  6E3B               	movwf	high_isr@Temp^0,c
  7200                           
  7201                           ;main.c: 690:                     if (Temp == Serial_Buffer[3])
  7202  0000CA  503B               	movf	high_isr@Temp^0,w,c
  7203  0000CC  1804               	xorwf	(_Serial_Buffer+3)^0,w,c
  7204  0000CE  A4D8               	btfss	status,2,c
  7205  0000D0  EF6C  F000         	goto	i2u259_41
  7206  0000D4  EF6E  F000         	goto	i2u259_40
  7207  0000D8                     i2u259_41:
  7208  0000D8  EFB1  F000         	goto	i2l4092
  7209  0000DC                     i2u259_40:
  7210  0000DC                     
  7211                           ;main.c: 691:                     {;main.c: 692:                         if(Busy==0 || S
      +                          erial_Buffer[2]==0xF5)
  7212  0000DC  5033               	movf	_Busy^0,w,c
  7213  0000DE  B4D8               	btfsc	status,2,c
  7214  0000E0  EF74  F000         	goto	i2u260_41
  7215  0000E4  EF76  F000         	goto	i2u260_40
  7216  0000E8                     i2u260_41:
  7217  0000E8  EF7F  F000         	goto	i2l282
  7218  0000EC                     i2u260_40:
  7219  0000EC  0EF5               	movlw	245
  7220  0000EE  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7221  0000F0  A4D8               	btfss	status,2,c
  7222  0000F2  EF7D  F000         	goto	i2u261_41
  7223  0000F6  EF7F  F000         	goto	i2u261_40
  7224  0000FA                     i2u261_41:
  7225  0000FA  EF97  F000         	goto	i2l280
  7226  0000FE                     i2u261_40:
  7227  0000FE                     i2l282:
  7228                           
  7229                           ;main.c: 693:                         {;main.c: 694:                             INTCONb
      +                          its.GIE=0;
  7230  0000FE  9EF2               	bcf	242,7,c	;volatile
  7231  000100                     
  7232                           ;main.c: 695:                             for (i=0; i<5; i++)
  7233  000100  0E00               	movlw	0
  7234  000102  6E3D               	movwf	high_isr@i^0,c
  7235  000104                     i2l4072:
  7236                           
  7237                           ;main.c: 696:                             {;main.c: 697:                                
      +                           Write1USART(Serial_Buffer[i]);
  7238  000104  0E01               	movlw	low _Serial_Buffer
  7239  000106  243D               	addwf	high_isr@i^0,w,c
  7240  000108  6ED9               	movwf	fsr2l,c
  7241  00010A  6ADA               	clrf	fsr2h,c
  7242  00010C  0E00               	movlw	high _Serial_Buffer
  7243  00010E  22DA               	addwfc	fsr2h,f,c
  7244  000110  50DF               	movf	indf2,w,c
  7245  000112  ECA4  F00F         	call	i2_Write1USART
  7246  000116                     
  7247                           ;main.c: 698:                             }
  7248  000116  2A3D               	incf	high_isr@i^0,f,c
  7249  000118  0E04               	movlw	4
  7250  00011A  643D               	cpfsgt	high_isr@i^0,c
  7251  00011C  EF92  F000         	goto	i2u262_41
  7252  000120  EF94  F000         	goto	i2u262_40
  7253  000124                     i2u262_41:
  7254  000124  EF82  F000         	goto	i2l4072
  7255  000128                     i2u262_40:
  7256  000128                     
  7257                           ;main.c: 699:                             INTCONbits.GIE=1;
  7258  000128  8EF2               	bsf	242,7,c	;volatile
  7259                           
  7260                           ;main.c: 700:                         }
  7261  00012A  EFA7  F000         	goto	i2l4090
  7262  00012E                     i2l280:
  7263                           
  7264                           ;main.c: 702:                         {;main.c: 703:                             INTCONb
      +                          its.GIE=0;
  7265  00012E  9EF2               	bcf	242,7,c	;volatile
  7266  000130                     
  7267                           ;main.c: 704:                             for (i=0; i<5; i++)
  7268  000130  0E00               	movlw	0
  7269  000132  6E3D               	movwf	high_isr@i^0,c
  7270  000134                     i2l4084:
  7271                           
  7272                           ;main.c: 705:                             {;main.c: 706:                                
      +                           Write1USART(0x16);
  7273  000134  0E16               	movlw	22
  7274  000136  ECA4  F00F         	call	i2_Write1USART
  7275  00013A                     
  7276                           ;main.c: 707:                             }
  7277  00013A  2A3D               	incf	high_isr@i^0,f,c
  7278  00013C  0E04               	movlw	4
  7279  00013E  643D               	cpfsgt	high_isr@i^0,c
  7280  000140  EFA4  F000         	goto	i2u263_41
  7281  000144  EFA6  F000         	goto	i2u263_40
  7282  000148                     i2u263_41:
  7283  000148  EF9A  F000         	goto	i2l4084
  7284  00014C                     i2u263_40:
  7285  00014C                     
  7286                           ;main.c: 708:                             INTCONbits.GIE=1;
  7287  00014C  8EF2               	bsf	242,7,c	;volatile
  7288  00014E                     i2l4090:
  7289                           
  7290                           ;main.c: 711:                         Serial_Flag = 1;
  7291  00014E  0E01               	movlw	1
  7292  000150  6E37               	movwf	_Serial_Flag^0,c
  7293                           
  7294                           ;main.c: 712:                         Serial_Count = 0;
  7295  000152  0E00               	movlw	0
  7296  000154  6E2A               	movwf	(_Serial_Count+1)^0,c
  7297  000156  0E00               	movlw	0
  7298  000158  6E29               	movwf	_Serial_Count^0,c
  7299                           
  7300                           ;main.c: 713:                         OpMode = AUTO_MODE;
  7301  00015A  0E02               	movlw	2
  7302  00015C  6E30               	movwf	_OpMode^0,c	;volatile
  7303                           
  7304                           ;main.c: 715:                     }
  7305  00015E  EFC7  F000         	goto	i2l4106
  7306  000162                     i2l4092:
  7307                           
  7308                           ;main.c: 717:                     {;main.c: 718:                         Serial_Flag = 0
      +                          ;
  7309  000162  0E00               	movlw	0
  7310  000164  6E37               	movwf	_Serial_Flag^0,c
  7311                           
  7312                           ;main.c: 719:                         Serial_Count = 0;
  7313  000166  0E00               	movlw	0
  7314  000168  6E2A               	movwf	(_Serial_Count+1)^0,c
  7315  00016A  0E00               	movlw	0
  7316  00016C  6E29               	movwf	_Serial_Count^0,c
  7317  00016E                     
  7318                           ;main.c: 721:                         INTCONbits.GIE=0;
  7319  00016E  9EF2               	bcf	242,7,c	;volatile
  7320                           
  7321                           ;main.c: 722:                         for (i=0; i<5; i++)
  7322  000170  0E00               	movlw	0
  7323  000172  6E3D               	movwf	high_isr@i^0,c
  7324  000174                     i2l4100:
  7325                           
  7326                           ;main.c: 723:                         {;main.c: 724:                             Write1U
      +                          SART(0x15);
  7327  000174  0E15               	movlw	21
  7328  000176  ECA4  F00F         	call	i2_Write1USART
  7329  00017A                     
  7330                           ;main.c: 725:                         }
  7331  00017A  2A3D               	incf	high_isr@i^0,f,c
  7332  00017C  0E04               	movlw	4
  7333  00017E  643D               	cpfsgt	high_isr@i^0,c
  7334  000180  EFC4  F000         	goto	i2u264_41
  7335  000184  EFC6  F000         	goto	i2u264_40
  7336  000188                     i2u264_41:
  7337  000188  EFBA  F000         	goto	i2l4100
  7338  00018C                     i2u264_40:
  7339  00018C                     
  7340                           ;main.c: 726:                         INTCONbits.GIE=1;
  7341  00018C  8EF2               	bsf	242,7,c	;volatile
  7342  00018E                     i2l4106:
  7343                           
  7344                           ;main.c: 729:                     if(Serial_Buffer[2]==0xF5 && OpMode == AUTO_MODE)
  7345  00018E  0EF5               	movlw	245
  7346  000190  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7347  000192  A4D8               	btfss	status,2,c
  7348  000194  EFCE  F000         	goto	i2u265_41
  7349  000198  EFD0  F000         	goto	i2u265_40
  7350  00019C                     i2u265_41:
  7351  00019C  EF3A  F000         	goto	i2l4050
  7352  0001A0                     i2u265_40:
  7353  0001A0  0E02               	movlw	2
  7354  0001A2  1830               	xorwf	_OpMode^0,w,c	;volatile
  7355  0001A4  A4D8               	btfss	status,2,c
  7356  0001A6  EFD7  F000         	goto	i2u266_41
  7357  0001AA  EFD9  F000         	goto	i2u266_40
  7358  0001AE                     i2u266_41:
  7359  0001AE  EF3A  F000         	goto	i2l4050
  7360  0001B2                     i2u266_40:
  7361  0001B2                     
  7362                           ;main.c: 730:                     {;main.c: 731:                         Stop = 1;
  7363  0001B2  0E01               	movlw	1
  7364  0001B4  6E35               	movwf	_Stop^0,c
  7365  0001B6  EF3A  F000         	goto	i2l4050
  7366  0001BA                     i2l4112:
  7367                           
  7368                           ;main.c: 736:             {;main.c: 737:                 Serial_GData = 0;
  7369  0001BA  0E00               	movlw	0
  7370  0001BC  6E36               	movwf	_Serial_GData^0,c
  7371  0001BE  EF3A  F000         	goto	i2l4050
  7372  0001C2                     i2l271:
  7373                           
  7374                           ;main.c: 744:     {;main.c: 745:         if (RCSTA1bits.OERR == 1)
  7375  0001C2  A2AC               	btfss	172,1,c	;volatile
  7376  0001C4  EFE6  F000         	goto	i2u267_41
  7377  0001C8  EFE8  F000         	goto	i2u267_40
  7378  0001CC                     i2u267_41:
  7379  0001CC  EFEB  F000         	goto	i2l4118
  7380  0001D0                     i2u267_40:
  7381  0001D0                     
  7382                           ;main.c: 746:         {;main.c: 747:             RCSTA1bits.OERR = 0;
  7383  0001D0  92AC               	bcf	172,1,c	;volatile
  7384                           
  7385                           ;main.c: 748:             RCSTA1bits.CREN = 0;
  7386  0001D2  98AC               	bcf	172,4,c	;volatile
  7387                           
  7388                           ;main.c: 749:             RCSTA1bits.CREN = 1;
  7389  0001D4  88AC               	bsf	172,4,c	;volatile
  7390  0001D6                     i2l4118:
  7391                           
  7392                           ;main.c: 753:     if (TMR1IF_triggered == 1)
  7393  0001D6  042B               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7394  0001D8  A4D8               	btfss	status,2,c
  7395  0001DA  EFF1  F000         	goto	i2u268_41
  7396  0001DE  EFF3  F000         	goto	i2u268_40
  7397  0001E2                     i2u268_41:
  7398  0001E2  EF39  F001         	goto	i2l4136
  7399  0001E6                     i2u268_40:
  7400  0001E6                     
  7401                           ;main.c: 754:     {;main.c: 755:         if(errorcounter >0)
  7402  0001E6  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7403  0001E8  EF00  F001         	goto	i2u269_41
  7404  0001EC  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  7405  0001EE  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7406  0001F0  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7407  0001F2  E108               	bnz	i2u269_40
  7408  0001F4  0452               	decf	_errorcounter^0,w,c	;volatile
  7409  0001F6  A0D8               	btfss	status,0,c
  7410  0001F8  EF00  F001         	goto	i2u269_41
  7411  0001FC  EF02  F001         	goto	i2u269_40
  7412  000200                     i2u269_41:
  7413  000200  EF0C  F001         	goto	i2l4124
  7414  000204                     i2u269_40:
  7415  000204                     
  7416                           ;main.c: 756:         {;main.c: 757:             errorcounter--;
  7417  000204  0EFF               	movlw	255
  7418  000206  2652               	addwf	_errorcounter^0,f,c	;volatile
  7419  000208  0EFF               	movlw	255
  7420  00020A  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7421  00020C  0EFF               	movlw	255
  7422  00020E  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7423  000210  0EFF               	movlw	255
  7424  000212  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7425                           
  7426                           ;main.c: 758:         }
  7427  000214  EF14  F001         	goto	i2l4126
  7428  000218                     i2l4124:
  7429                           
  7430                           ;main.c: 760:         {;main.c: 761:             errorcounter = 0;
  7431  000218  0E00               	movlw	0
  7432  00021A  6E52               	movwf	_errorcounter^0,c	;volatile
  7433  00021C  0E00               	movlw	0
  7434  00021E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  7435  000220  0E00               	movlw	0
  7436  000222  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  7437  000224  0E00               	movlw	0
  7438  000226  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  7439  000228                     i2l4126:
  7440                           
  7441                           ;main.c: 764:         if(LowPowerCounter >0)
  7442  000228  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7443  00022A  EF21  F001         	goto	i2u270_41
  7444  00022E  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7445  000230  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7446  000232  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7447  000234  E108               	bnz	i2u270_40
  7448  000236  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  7449  000238  A0D8               	btfss	status,0,c
  7450  00023A  EF21  F001         	goto	i2u270_41
  7451  00023E  EF23  F001         	goto	i2u270_40
  7452  000242                     i2u270_41:
  7453  000242  EF2D  F001         	goto	i2l4130
  7454  000246                     i2u270_40:
  7455  000246                     
  7456                           ;main.c: 765:         {;main.c: 766:             LowPowerCounter--;
  7457  000246  0EFF               	movlw	255
  7458  000248  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  7459  00024A  0EFF               	movlw	255
  7460  00024C  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7461  00024E  0EFF               	movlw	255
  7462  000250  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7463  000252  0EFF               	movlw	255
  7464  000254  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7465                           
  7466                           ;main.c: 767:         }
  7467  000256  EF37  F001         	goto	i2l4134
  7468  00025A                     i2l4130:
  7469                           
  7470                           ;main.c: 769:         {;main.c: 770:             LowPowerCounter = 20;
  7471  00025A  0E14               	movlw	20
  7472  00025C  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  7473  00025E  0E00               	movlw	0
  7474  000260  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7475  000262  0E00               	movlw	0
  7476  000264  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7477  000266  0E00               	movlw	0
  7478  000268  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7479  00026A                     
  7480                           ;main.c: 771:             Low_Power_Indicator();
  7481  00026A  EC06  F00F         	call	_Low_Power_Indicator	;wreg free
  7482  00026E                     i2l4134:
  7483                           
  7484                           ;main.c: 774:         TMR1IF_triggered = 0;
  7485  00026E  0E00               	movlw	0
  7486  000270  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7487  000272                     i2l4136:
  7488                           
  7489                           ;main.c: 777:     if(TMR1IF)
  7490  000272  A09E               	btfss	3998,0,c	;volatile
  7491  000274  EF3E  F001         	goto	i2u271_41
  7492  000278  EF40  F001         	goto	i2u271_40
  7493  00027C                     i2u271_41:
  7494  00027C  EF47  F001         	goto	i2l301
  7495  000280                     i2u271_40:
  7496  000280                     
  7497                           ;main.c: 778:     {;main.c: 779:         TMR1 = 0x9E57;
  7498  000280  0E9E               	movlw	158
  7499  000282  6ECF               	movwf	207,c	;volatile
  7500  000284  0E57               	movlw	87
  7501  000286  6ECE               	movwf	206,c	;volatile
  7502  000288                     
  7503                           ;main.c: 780:         TMR1IF = 0;
  7504  000288  909E               	bcf	3998,0,c	;volatile
  7505                           
  7506                           ;main.c: 781:         TMR1IF_triggered = 1;
  7507  00028A  0E01               	movlw	1
  7508  00028C  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7509  00028E                     i2l301:
  7510  00028E  C03A  FFDA         	movff	??_high_isr+1,fsr2h
  7511  000292  C039  FFD9         	movff	??_high_isr,fsr2l
  7512  000296  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7513  000298  0011               	retfie		f
  7514  00029A                     __end_of_high_isr:
  7515                           	opt callstack 0
  7516                           
  7517 ;; *************** function i2_Write1USART *****************
  7518 ;; Defined at:
  7519 ;;		line 48 in file "usart.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  data            1    wreg     unsigned char 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  data            1    0[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;Total ram usage:        1 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_high_isr
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text41
  7547  001F48                     __ptext41:
  7548                           	opt callstack 0
  7549  001F48                     i2_Write1USART:
  7550                           	opt callstack 25
  7551                           
  7552                           ;incstack = 0
  7553                           ;i2Write1USART@data stored from wreg
  7554  001F48  6E38               	movwf	i2Write1USART@data^0,c
  7555  001F4A                     
  7556                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  7557  001F4A  C038  FFAE         	movff	i2Write1USART@data,4014	;volatile
  7558  001F4E                     i2l561:
  7559  001F4E  A2AD               	btfss	173,1,c	;volatile
  7560  001F50  EFAC  F00F         	goto	i2u207_41
  7561  001F54  EFAE  F00F         	goto	i2u207_40
  7562  001F58                     i2u207_41:
  7563  001F58  EFA7  F00F         	goto	i2l561
  7564  001F5C                     i2u207_40:
  7565  001F5C  0012               	return		;funcret
  7566  001F5E                     __end_ofi2_Write1USART:
  7567                           	opt callstack 0
  7568                           
  7569 ;; *************** function _Read1USART *****************
  7570 ;; Defined at:
  7571 ;;		line 58 in file "usart.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;		None
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  result          1    0[COMRAM] unsigned char 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      unsigned char 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;Total ram usage:        1 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_high_isr
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text42
  7599  001EBA                     __ptext42:
  7600                           	opt callstack 0
  7601  001EBA                     _Read1USART:
  7602                           	opt callstack 25
  7603  001EBA                     
  7604                           ;usart.c: 60:     char result;;usart.c: 62:     if (RCSTA1bits.OERR)
  7605  001EBA  A2AC               	btfss	172,1,c	;volatile
  7606  001EBC  EF62  F00F         	goto	i2u70_41
  7607  001EC0  EF64  F00F         	goto	i2u70_40
  7608  001EC4                     i2u70_41:
  7609  001EC4  EF6C  F00F         	goto	i2l567
  7610  001EC8                     i2u70_40:
  7611  001EC8                     
  7612                           ;usart.c: 63:     {;usart.c: 64:         RCSTA1bits.CREN = 0;
  7613  001EC8  98AC               	bcf	172,4,c	;volatile
  7614                           
  7615                           ;usart.c: 65:         result = RCREG1;
  7616  001ECA  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7617                           
  7618                           ;usart.c: 66:         result = RCREG1;
  7619  001ECE  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7620                           
  7621                           ;usart.c: 67:         RCSTA1bits.CREN = 1;
  7622  001ED2  88AC               	bsf	172,4,c	;volatile
  7623                           
  7624                           ;usart.c: 68:     }
  7625  001ED4  EF6E  F00F         	goto	i2l2128
  7626  001ED8                     i2l567:
  7627                           
  7628                           ;usart.c: 70:     {;usart.c: 71:         result = RCREG1;
  7629  001ED8  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7630  001EDC                     i2l2128:
  7631                           
  7632                           ;usart.c: 74:     return result;
  7633  001EDC  5038               	movf	Read1USART@result^0,w,c
  7634  001EDE  0012               	return		;funcret
  7635  001EE0                     __end_of_Read1USART:
  7636                           	opt callstack 0
  7637                           
  7638 ;; *************** function _Low_Power_Indicator *****************
  7639 ;; Defined at:
  7640 ;;		line 1176 in file "main.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;		None
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_high_isr
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text43
  7668  001E0C                     __ptext43:
  7669                           	opt callstack 0
  7670  001E0C                     _Low_Power_Indicator:
  7671                           	opt callstack 25
  7672  001E0C                     
  7673                           ;main.c: 1179:     if(VOLTAGE <= 0x0366)
  7674  001E0C  0E67               	movlw	103
  7675  001E0E  5C11               	subwf	_VOLTAGE^0,w,c
  7676  001E10  0E03               	movlw	3
  7677  001E12  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7678  001E14  B0D8               	btfsc	status,0,c
  7679  001E16  EF0F  F00F         	goto	i2u71_41
  7680  001E1A  EF11  F00F         	goto	i2u71_40
  7681  001E1E                     i2u71_41:
  7682  001E1E  EF14  F00F         	goto	i2l2136
  7683  001E22                     i2u71_40:
  7684  001E22                     
  7685                           ;main.c: 1180:     {;main.c: 1182:         LATDbits.LATD1=1;
  7686  001E22  828C               	bsf	140,1,c	;volatile
  7687                           
  7688                           ;main.c: 1184:     }
  7689  001E24  EF20  F00F         	goto	i2l401
  7690  001E28                     i2l2136:
  7691  001E28  0EC0               	movlw	192
  7692  001E2A  5C11               	subwf	_VOLTAGE^0,w,c
  7693  001E2C  0E03               	movlw	3
  7694  001E2E  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7695  001E30  A0D8               	btfss	status,0,c
  7696  001E32  EF1D  F00F         	goto	i2u72_41
  7697  001E36  EF1F  F00F         	goto	i2u72_40
  7698  001E3A                     i2u72_41:
  7699  001E3A  EF20  F00F         	goto	i2l401
  7700  001E3E                     i2u72_40:
  7701  001E3E                     
  7702                           ;main.c: 1186:     {;main.c: 1187:      LATDbits.LATD1=0;
  7703  001E3E  928C               	bcf	140,1,c	;volatile
  7704  001E40                     i2l401:
  7705  001E40  0012               	return		;funcret
  7706  001E42                     __end_of_Low_Power_Indicator:
  7707                           	opt callstack 0
  7708  0000                     
  7709                           	psect	rparam
  7710  0000                     
  7711                           	psect	temp
  7712  000059                     btemp:
  7713                           	opt callstack 0
  7714  000059                     	ds	1
  7715  0000                     int$flags	set	btemp
  7716  0000                     wtemp8	set	btemp+1
  7717  0000                     ttemp5	set	btemp+1
  7718  0000                     ttemp6	set	btemp+4
  7719  0000                     ttemp7	set	btemp+8
  7720                           tosu	equ	0xFFF
  7721                           tosh	equ	0xFFE
  7722                           tosl	equ	0xFFD
  7723                           stkptr	equ	0xFFC
  7724                           pclatu	equ	0xFFB
  7725                           pclath	equ	0xFFA
  7726                           pcl	equ	0xFF9
  7727                           tblptru	equ	0xFF8
  7728                           tblptrh	equ	0xFF7
  7729                           tblptrl	equ	0xFF6
  7730                           tablat	equ	0xFF5
  7731                           prodh	equ	0xFF4
  7732                           prodl	equ	0xFF3
  7733                           indf0	equ	0xFEF
  7734                           postinc0	equ	0xFEE
  7735                           postdec0	equ	0xFED
  7736                           preinc0	equ	0xFEC
  7737                           plusw0	equ	0xFEB
  7738                           fsr0h	equ	0xFEA
  7739                           fsr0l	equ	0xFE9
  7740                           wreg	equ	0xFE8
  7741                           indf1	equ	0xFE7
  7742                           postinc1	equ	0xFE6
  7743                           postdec1	equ	0xFE5
  7744                           preinc1	equ	0xFE4
  7745                           plusw1	equ	0xFE3
  7746                           fsr1h	equ	0xFE2
  7747                           fsr1l	equ	0xFE1
  7748                           bsr	equ	0xFE0
  7749                           indf2	equ	0xFDF
  7750                           postinc2	equ	0xFDE
  7751                           postdec2	equ	0xFDD
  7752                           preinc2	equ	0xFDC
  7753                           plusw2	equ	0xFDB
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      88
    BANK0           160      8      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_WriteSTLED316SData
    _main->_write_i2c
    _ToggleVIB_Mode->_write_i2c
    _Homing_Again_Manual->_WriteSTLED316SData

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23110
                                              6 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1963
                                             20 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     331
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2995
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2995
                                              0 BANK0      6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1418
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                        _MotorON_PWM
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     548
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  2     2      0    5642
                                             17 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                        _MotorON_PWM
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    2979
                                             14 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     275
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2994
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                        _MotorON_PWM
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     300
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON_PWM                                          0     0      0       0
                        _Set_RG3_PWM
 ---------------------------------------------------------------------------------
 (3) _Set_RG3_PWM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                        _Clr_RG3_PWM
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3_PWM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     309
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3_PWM
     _MotorON_PWM
       _Set_RG3_PWM
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3_PWM
     _MotorON_PWM
       _Set_RG3_PWM
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
       _Clr_RG3_PWM
     _MotorON_PWM
       _Set_RG3_PWM
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
     _Get7Seg
     _STLED316s_SPI_SendData
     ___awdiv
     ___awmod
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _write_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      28       5       25.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      58       1       93.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jul 13 17:11:06 2021

                              _i 0015                    ??_i2c_Address 0040  
                   ___awdiv@sign 0043                    ?_InitSTLED316 0038  
                   __CFG_CP0$OFF 000000     __size_of_Low_Power_Indicator 0036  
                    i2c_Read@ack 0041                              l210 08AA  
                            l202 082E                              l211 089C  
                            l203 0820                              l206 086C  
                            l311 1F02                              l231 0AD0  
                            l207 085E                              l304 1E5A  
                            l224 0A08                              l321 14EA  
                            l241 0BF6                              l307 1E6C  
                            l332 0E64                              l422 1ACC  
                            l414 1A54                              l350 10AC  
                            l326 1D22                              l254 0D26  
                            l246 0C66                              l511 1EB8  
                            l191 0748                              l416 1A8A  
                            l408 1A4C                              l520 1FC6  
                            l600 1B2E                              l168 0510  
                            l353 10F6                              l345 1046  
                            l329 0E58                              l505 1F30  
                            l193 0762                              l514 1FCE  
                            l602 1B3C                              l530 1E02  
                            l194 07B8                              l178 0576  
                            l419 1AA2                              l371 12D2  
                            l363 123A                              l523 1F8A  
                            l603 1B3E                              l531 1E0A  
                            l195 0778                              l179 057C  
                            l356 1102                              l444 19C0  
                            l196 078A                              l381 1DD4  
                            l517 1FBE                              l366 126C  
                            l438 179E                              l526 1F70  
                            l534 1C9E                              l622 1F7E  
                            l198 07F4                              l631 1FAC  
                            l463 1C50                              l199 07E6  
                            l392 1D3C                              l376 1D9A  
                            l625 1F96                              l449 15DE  
                            l561 1F38                              l385 1BFC  
                            l529 1E00                              l537 1BA8  
                            l634 1FB6                              l458 15EA  
                            l386 1C02                              l395 1D60  
                            l628 1FD6                              l476 16D2  
                            l468 16C6                              l564 1F46  
                            l716 13DE                              l389 1F1A  
                            l558 1E92                              l881 1912  
                            l868 1862                              _GIE 007F97  
                            _PR4 000F77                              _NUM 0019  
         __size_ofi2_Write1USART 0016                     ___awmod@sign 0043  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                  ??_i2c_Restart 003F                             l3100 1BAA  
                           l3110 1BDC                             l3102 1BC0  
                           l3040 1D4A                             l3112 1BE0  
                           l3200 1B06                             l3034 1D24  
                           l3114 1BFE                             l3210 1B20  
                           l3202 1B08                             l3036 1D2E  
                           l3052 1EFA                             l3044 1EE0  
                           l3108 1BCA                             l3220 1B2A  
                           l3212 1B22                             l3204 1B0A  
                           l3038 1D3A                             l3046 1EEE  
                           l3222 1B2C                             l3214 1B24  
                           l3206 1B0C                             l3056 1FA4  
                           l3216 1B26                             l3208 1B0E  
                           l3160 1DE2                             l3152 1FB8  
                           l5000 0456                             l3058 1FA8  
                           l3218 1B28                             l3170 1AE8  
                           l3250 1F72                             l3162 1DEA  
                           l3154 1FBC                             l5010 04A0  
                           l5002 0472                             l3180 1AF2  
                           l3172 1AEA                             l3252 1F76  
                           l3260 1E6E                             l3164 1DFA  
                           l3156 1DD8                             l5100 0732  
                           l5020 0512                             l5012 04AC  
                           l5004 0478                             l3094 1FAE  
                           l3270 1F14                             l3190 1AFC  
                           l3182 1AF4                             l3174 1AEC  
                           l3166 1ACE                             l3254 1F78  
                           l3262 1E8A                             l3158 1DDC  
                           l5110 0790                             l5102 0746  
                           l5030 054A                             l5022 0530  
                           l5014 04B8                             l5006 0488  
                           l3096 1FB2                             l4400 1728  
                           l3264 1F04                             l3256 1F1C  
                           l3192 1AFE                             l3184 1AF6  
                           l3176 1AEE                             l3168 1AD2  
                           l5200 0A4A                             l5120 0814  
                           l5112 07AA                             l5104 074A  
                           l5040 059C                             l5032 054C  
                           l5024 0532                             l5008 0494  
                           l3098 1FB4                             l3266 1F10  
                           l3258 1F20                             l3194 1B00  
                           l3186 1AF8                             l3178 1AF0  
                           l5202 0A56                             l5130 08B2  
                           l5122 083C                             l5114 07C6  
                           l5106 075A                             l5050 05D8  
                           l5042 059E                             l5034 0568  
                           l5026 0536                             l5018 04C4  
                           l4404 1730                             l4420 17BA  
                           l4500 1956                             l3268 1F12  
                           l2900 1342                             l3196 1B02  
                           l3188 1AFA                             l5300 0CC0  
                           l5204 0A62                             l5212 0A86  
                           l5140 08EC                             l5132 08C2  
                           l5124 0852                             l5116 07DA  
                           l5108 0786                             l5060 0626  
                           l5052 05EA                             l5044 05A2  
                           l5036 056A                             l5028 0546  
                           l4350 1A74                             l4342 1A50  
                           l4406 179C                             l4430 17E0  
                           l4422 17BE                             l4414 17A0  
                           l4510 19A6                             l4502 197E  
                           l2910 138C                             l2902 134A  
                           l3198 1B04                             l5310 0D28  
                           l5302 0CCC                             l5230 0B1C  
                           l5222 0AF6                             l5214 0AD2  
                           l5206 0A6E                             l5150 0926  
                           l5134 08D0                             l5142 08F0  
                           l5126 087A                             l5118 0802  
                           l5070 0660                             l5062 062C  
                           l5054 05FC                             l5046 05B4  
                           l5038 057E                             l4360 1A90  
                           l4352 1A84                             l2760 1F34  
                           l4440 1816                             l4432 17F2  
                           l4424 17CC                             l4416 17A4  
                           l4520 19BE                             l4512 19AC  
                           l4504 198E                             l4600 19D0  
                           l2920 13BE                             l2912 139C  
                           l2904 1356                             l5320 0D5C  
                           l5312 0D42                             l5304 0CD8  
                           l5240 0B8E                             l5232 0B36  
                           l5224 0B06                             l5216 0AEC  
                           l5208 0A7A                             l5160 0970  
                           l5152 092E                             l5136 08E4  
                           l5128 0890                             l5080 06B6  
                           l5064 0638                             l5056 0608  
                           l5048 05C6                             l4370 1AA8  
                           l4362 1A92                             l4354 1A8C  
                           l4530 15F8                             l2770 1DB4  
                           l2762 1D9C                             l4442 182C  
                           l4434 17FA                             l4450 1842  
                           l4426 17D4                             l4418 17B2  
                           l4514 19B4                             l4506 199E  
                           l4610 1A1E                             l4602 19F8  
                           l2922 13CE                             l2914 139E  
                           l2906 1364                             l2754 1E94  
                           l4522 1C52                             l3562 1D6A  
                           l5322 0D60                             l5314 0D44  
                           l5250 0BB8                             l5242 0B92  
                           l5234 0B50                             l5226 0B16  
                           l5218 0AEE                             l5170 09A4  
                           l5162 0978                             l5154 0946  
                           l5146 0904                             l5138 08E8  
                           l5090 06FC                             l5082 06D4  
                           l5066 0648                             l5058 060A  
                           l5074 066C                             l4372 1AAA  
                           l4364 1AA4                             l4348 1A56  
                           l4540 1644                             l4532 1604  
                           l4524 15EE                             l2772 1DB8  
                           l4380 16D8                             l4452 1852  
                           l4444 1834                             l4436 1802  
                           l4428 17D8                             l4460 1868  
                           l4516 19B6                             l4508 19A4  
                           l4612 1A20                             l4604 19FA  
                           l2916 13A8                             l2908 136E  
                           l2756 1E94                             l2852 1FC8  
                           l2860 1F82                             l4700 1C4E  
                           l3564 1D7A                             l3556 1D62  
                           l4620 1B40                             l5324 0D66  
                           l5308 0CE4                             l5316 0D48  
                           l5260 0BEE                             l5252 0BBA  
                           l5244 0B96                             l5236 0B6C  
                           l5228 0B1A                             l5180 09EE  
                           l5172 09B4                             l5164 0980  
                           l5148 0916                             l5156 094E  
                           l5340 0DEE                             l5092 070E  
                           l5084 06D6                             l5068 0654  
                           l5076 06B0                             l2774 1E42  
                           l4374 1ABA                             l4550 16CA  
                           l4542 1654                             l4534 1614  
                           l4526 15F0                             l4390 1700  
                           l4382 16E0                             l4454 185A  
                           l4446 1836                             l4438 1810  
                           l4470 1898                             l4462 1876  
                           l4518 19B8                             l4710 0E3E  
                           l4702 0E1E                             l4614 1A28  
                           l4606 1A02                             l4630 13E6  
                           l2918 13AE                             l2758 1EAA  
                           l2870 1F6C                             l2854 1FCC  
                           l2862 1F86                             l3566 1D7E  
                           l4622 1BA0                             l5326 0D68  
                           l5318 0D58                             l5270 0C10  
                           l5254 0BC2                             l5246 0B9A  
                           l5238 0B88                             l5190 0A16  
                           l5182 0A00                             l5174 09CA  
                           l5166 0990                             l5158 0960  
                           l5334 0D8A                             l5094 0712  
                           l5086 06DA                             l5078 06B4  
                           l2776 1E46                             l2880 1FD4  
                           l2872 1F8C                             l4376 1ABC  
                           l4552 16D0                             l4544 1664  
                           l4536 1624                             l4528 15F6  
                           l4560 14F0                             l2768 1DA4  
                           l4392 1708                             l4384 16E8  
                           l4448 183C                             l4480 18DE  
                           l4472 18AA                             l4464 187E  
                           l4800 107C                             l4720 0E6E  
                           l4704 0E2E                             l4616 1A2A  
                           l4608 1A04                             l4640 1436  
                           l4632 13FE                             l2864 1F60  
                           l2856 1FC0                             l5328 0D84  
                           l5272 0C14                             l5248 0B9E  
                           l5264 0BF8                             l5192 0A1E  
                           l5336 0DD6                             l5176 09D4  
                           l5168 09A0                             l5096 0714  
                           l5088 06EA                             l2778 1E54  
                           l2874 1F90                             l4538 1634  
                           l4570 1524                             l4562 14F6  
                           l4810 10AE                             l4394 1710  
                           l4386 16F0                             l4378 16D4  
                           l4490 190A                             l4482 18E6  
                           l4474 18B2                             l4466 1882  
                           l4458 1864                             l4802 1088  
                           l4730 0EB2                             l4722 0E7A  
                           l4714 0E5E                             l4706 0E30  
                           l4618 1A4A                             l4650 1478  
                           l4642 143A                             l4634 140E  
                           l4626 13E0                             l2890 12FA  
                           l2882 12D4                             l2866 1F64  
                           l2858 1FC4                             l5290 0C88  
                           l5274 0C1C                             l5282 0C34  
                           l5258 0BDC                             l5194 0A2E  
                           l5186 0A0A                             l5338 0DE6  
                           l5098 0730                             l2876 1F94  
                           l4548 1674                             l4580 1574  
                           l4572 1534                             l4564 14F8  
                           l4900 12C6                             l4820 10DA  
                           l4812 10B6                             l4396 1718  
                           l4388 16F8                             l4484 18EC  
                           l4476 18BA                             l4468 1890  
                           l4804 108A                             l4740 0EF4  
                           l4732 0EC8                             l4724 0E7E  
                           l4716 0E66                             l4708 0E3C  
                           l4660 14BA                             l4652 148E  
                           l4644 144C                             l4636 141A  
                           l4628 13E2                             l2892 1308  
                           l2884 12D8                             l2868 1F68  
                           l5292 0C98                             l5284 0C68  
                           l5276 0C24                             l5268 0C00  
                           l5196 0A32                             l5188 0A12  
                           l2878 1FD0                             l4574 1544  
                           l4566 1504                             l4558 14EE  
                           l4902 12CE                             l4830 1108  
                           l4822 10DC                             l4814 10BC  
                           l4398 1720                             l4478 18C8  
                           l4486 18F2                             l4494 1914  
                           l4806 10A0                             l4750 0F30  
                           l4742 0F04                             l4734 0ECE  
                           l4726 0E96                             l4718 0E6A  
                           l4662 14C6                             l4654 1494  
                           l4646 145C                             l4638 1430  
                           l2894 1318                             l2886 12E6  
                           l4670 1CE6                             l5294 0C9C  
                           l5286 0C82                             l5278 0C2C  
                           l5198 0A3A                             l4910 02AA  
                           l4576 1554                             l4568 1514  
                           l4584 1584                             l4840 1144  
                           l4832 110C                             l4816 10CC  
                           l4488 1902                             l4496 194C  
                           l4808 10A8                             l4760 0F68  
                           l4752 0F42                             l4744 0F10  
                           l4736 0ED2                             l4728 0EA6  
                           l4664 14CA                             l4656 1498  
                           l4648 146C                             l2896 131C  
                           l2888 12F6                             l4680 1D20  
                           l4672 1CF6                             l5296 0CA4  
                           l4920 02BC                             l4912 02AE  
                           l4904 029E                             l4586 15E2  
                           l4578 1564                             l4850 1182  
                           l4842 1150                             l4834 1118  
                           l4826 10FC                             l4818 10CE  
                           l4498 1954                             l4770 0FA8  
                           l4762 0F78                             l4754 0F52  
                           l4746 0F26                             l4738 0EE4  
                           l4594 19C4                             l4666 14E0  
                           l4658 14AA                             l2898 132C  
                           l4674 1CFE                             l4690 1C18  
                           l4682 1C06                             l5298 0CB0  
                           l4930 02D4                             l4922 02BE  
                           l4914 02B2                             l4906 02A0  
                           l4588 15E8                             l4860 11CA  
                           l4852 1192                             l4844 1166  
                           l4836 111C                             l4828 1104  
                           l4780 0FE8                             l4772 0FAA  
                           l4764 0F88                             l4756 0F5E  
                           l4748 0F2C                             l4596 19C8  
                           l4668 14E8                             l4676 1D02  
                           l4692 1C28                             l4684 1C08  
                           l5660 0C48                             l4940 02EC  
                           l4932 02D6                             l4924 02CE  
                           l4916 02B6                             l4908 02A4  
                           l5670 1598                             l4870 1210  
                           l4862 11CE                             l4854 11A2  
                           l4846 116C                             l4838 1134  
                           l4782 0FFA                             l4766 0F9A  
                           l4774 0FC4                             l4758 0F62  
                           l4790 1034                             l4598 19CE  
                           l4678 1D04                             l4694 1C38  
                           l4686 1C0E                             l5662 0CF8  
                           l5654 04DA                             l4950 032C  
                           l4942 0306                             l4934 02D8  
                           l4926 02D0                             l4918 02BA  
                           l5672 1688                             l4880 1248  
                           l4872 1212                             l4864 11E0  
                           l4856 11AE                             l4848 1170  
                           l4792 1048                             l4784 100A  
                           l4776 0FD4                             l4768 0F9C  
                           l4696 1C44                             l4688 1C10  
                           l5664 0DA0                             l5656 0682  
                           l4960 0362                             l4952 0330  
                           l4944 030A                             l4936 02DA  
                           l4928 02D2                             l4890 1290  
                           l4874 121E                             l4866 11F0  
                           l4858 11C4                             l4794 105A  
                           l4778 0FE6                             l4786 1020  
                           l4698 1C46                             l5666 0E04  
                           l5658 0A9A                             l4970 03A4  
                           l4954 0340                             l4962 0364  
                           l4946 030C                             l4938 02DC  
                           l4892 12A0                             l4876 1220  
                           l4868 11FC                             l4884 125C  
                           l5668 1746                             l4796 106A  
                           l4980 03E2                             l4972 03AC  
                           l4964 037C                             l4956 0344  
                           l4948 032A                             l4894 12A2  
                           l4886 126E                             l4878 123C  
                           l4798 107A                             l4990 0424  
                           l4982 0400                             l4974 03C2  
                           l4966 0384                             l4958 0346  
                           l4896 12AE                             l4888 1280  
                           l4992 0428                             l4984 0402  
                           l4976 03D8                             l4968 0386  
                           l4898 12B0                             l4994 0438  
                           l4986 0404                             l4978 03E0  
                           l4996 0448                             l4988 0422  
                           l4998 0454                             u1400 1F46  
                           u3000 0EE4                             u1401 1F42  
                           u3001 0EE0                             u1410 1DD4  
                           u3010 0F26                             u1411 1DD0  
                           u3011 0F22                             u1420 1E6C  
                           u3100 105A                             u3020 0F42  
                           u1500 1342                             u2060 1D9A  
                           u1421 1E68                             u3101 1056  
                           u3021 0F3E                             u1501 133E  
                           u2061 1D96                             u3110 106A  
                           u3030 0F88                             u1510 1364  
                           u3111 1066                             u3031 0F84  
                           u1511 1360                             u3200 126C  
                           u3120 107A                             u3040 0F9A  
                           u1520 138C                             u3201 1268  
                           u3121 1076                             u3041 0F96  
                           u1521 1388                             u3210 1280  
                           u3130 10CC                             u3050 0FD4  
                           u1530 13BE                             u3211 127C  
                           u3131 10C8                             u3051 0FD0  
                           u1531 13BA                             u1700 1BFC  
                           u3220 1290                             u3140 1166  
                           u3060 0FE6                             u1380 1EAA  
                           u3300 05B4                             u1701 1BF8  
                           u3221 128C                             u3141 1162  
                           u3061 0FE2                             u1381 1EA6  
                           u3301 05B0                             u3230 12A0  
                           u3150 1182                             u3070 0FFA  
                           u1390 1EB8                             u1710 1DFA  
                           u3310 05C6                             u3231 129C  
                           u3151 117E                             u3071 0FF6  
                           u1391 1EB4                             u1711 1DF6  
                           u3311 05C2                             u3160 11C4  
                           u3080 1030                             u1480 12E6  
                           u1720 1B3C                             u3400 07B8  
                           u3320 05D8                             u3240 0340  
                           u3161 11C0                             u3081 102C  
                           u1481 12E2                             u1721 1B38  
                           u3401 07B4                             u3321 05D4  
                           u3241 033C                             u3170 11E0  
                           u3090 1046                             u1490 1308  
                           u3410 07C6                             u3330 05EA  
                           u3250 03C2                             u3171 11DC  
                           u3091 1042                             u1491 1304  
                           u3411 07C2                             u3331 05E6  
                           u3251 03BE                             u3180 1210  
                           u3500 087A                             u3420 07DA  
                           u3340 05FC                             u3260 03D8  
                           u3181 120C                             u3501 0876  
                           u3421 07D6                             u3341 05F8  
                           u3261 03D4                             u3190 1258  
                           u3510 0890                             u3430 07F4  
                           u3350 06EA                             u3270 0438  
                           u3191 1254                             u3511 088C  
                           u3431 07F0                             u3351 06E6  
                           u3271 0434                             u1680 1D4A  
                           u2800 1810                             u3600 09EA  
                           u3520 08AA                             u3440 0802  
                           u3360 06FC                             u3280 0448  
                           u1681 1D46                             u2801 180C  
                           u3601 09E6                             u3521 08A6  
                           u3441 07FE                             u3361 06F8  
                           u3281 0444                             u1690 1EEE  
                           u2730 1A84                             u2810 182C  
                           u3610 0A2E                             u3530 08D0  
                           u3450 0814                             u3370 070E  
                           u3290 0546                             _PEN2 007B5A  
                           u1691 1EEA                             u2731 1A80  
                           u2811 1828                             u3611 0A2A  
                           u3531 08CC                             u3451 0810  
                           u3371 070A                             u3291 0542  
                           u2740 1AA2                             u2724 1A68  
                           u2820 1852                             u2900 199E  
                           u3620 0B06                             u3540 0900  
                           u3460 082E                             u3380 0778  
                           u2741 1A9E                             u2725 1A64  
                           u2821 184E                             u2901 199A  
                           u3621 0B02                             u3541 08FC  
                           u3461 082A                             u3381 0774  
                           u2750 1ABA                             u2830 1876  
                           u3630 0B16                             u3550 0916  
                           u3470 083C                             u3390 0786  
                           u2751 1AB6                             u2831 1872  
                           u3631 0B12                             u3551 0912  
                           u3471 0838                             u3391 0782  
                           u2760 1ACC                             u2840 1890  
                           u2920 1430                             u3640 0BD8  
                           u3560 0926                             u3480 0852  
                           u2761 1AC8                             u2841 188C  
                           u2921 142C                             u3641 0BD4  
                           u3561 0922                             u3481 084E  
                           u2770 17B2                             u2850 18AA  
                           u2930 144C                             u3650 0C10  
                           u3570 0960                             u3490 086C  
                           u2771 17AE                             u2851 18A6  
                           u2915 19E6                             u2931 1448  
                           u3651 0C0C                             u3707 0BAA  
                           u3571 095C                             u3491 0868  
                           u2780 17CC                             u2860 18C8  
                           u2940 148E                             u3660 0C98  
                           u3580 0970                             u2781 17C8  
                           u2861 18C4                             u2941 148A  
                           u3717 13F0                             u3661 0C94  
                           u3581 096C                             u2790 17F2  
                           u2870 18DE                             u2950 14AA  
                           u3670 0D58                             u3590 09B4  
                           u3807 10E6                             u2791 17EE  
                           u2871 18DA                             u2951 14A6  
                           u3727 1452                             u3671 0D54  
                           u3591 09B0                             u2880 1902  
                           u2960 1CF6                             u3817 1126  
                           u2881 18FE                             u3737 14D4  
                           u2961 1CF2                             u2890 198E  
                           u2970 1C28                             u3827 1188  
                           u2891 198A                             u3747 0E48  
                           u2971 1C24                             u2980 0E2E  
                           u3837 122A                             u3757 0E88  
                           u2981 0E2A                             u2990 0EC8  
                           u3847 12BA                             u3767 0EEA  
                           u2991 0EC4                             u3687 02F8  
                           u3857 1E4C                             u3777 0FB4  
                           u3697 079C                             _SEN2 007B58  
                           u3787 1014                             u3797 1094  
                           _TMR1 000FCE                             _Busy 0033  
                           _Stop 0035                             _data 0031  
 __end_of_AD_capture_BattVoltage 1D62                             _main 029E  
                           _init 1ACE                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9               _MotorPosition_Init 13E0  
                           btemp 0059                             start 029A  
                __end_of_Get7Seg 17A0                    __CFG_IESO$OFF 000000  
    __end_of_Homing_Again_Manual 10AE                     ___param_bank 000000  
                   high_isr@Temp 003B              ?_MotorPosition_Init 0038  
                __end_of_Read_IR 1F04                   ??_InitSTLED316 0044  
                  __CFG_PLLDIV$1 000000                     _BAUDCON1bits 000F7E  
                __end_of___aldiv 13E0                            ?_main 0038  
                          ?_init 0038                  __end_of___awdiv 1864  
                          _ADRES 000FC3                  __end_of___awmod 1914  
                ___awdiv@divisor 0040                            _T1CON 000FCD  
                          _T4CON 000F76                   __CFG_DEBUG$OFF 000000  
                          _RCEN2 007B5B                            i2l301 028E  
                          i2l401 1E40                            i2l271 01C2  
                          i2l280 012E                            i2l290 018C  
                          i2l282 00FE                            i2l284 0128  
                          i2l287 014C                            i2l561 1F4E  
                          i2l564 1F5C                            i2l567 1ED8  
                          i2l569 1EDE                  ___awdiv@counter 0042  
                          _RSEN2 007B59                            _ETemp 0023  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TRISF 000F97  
                          _TRISG 000F98              __end_of_i2c_Address 1F72  
                 __CFG_FCMEN$OFF 000000             ??_MotorPosition_Init 0047  
                          _flush 1D62                      _Clr_RG3_PWM 1FD0  
                     _Read1USART 1EBA                 _TMR1IF_triggered 002B  
                          tablat 000FF5         ??_STLED316s_SPI_SendData 003E  
            __end_of_i2c_Restart 1FC0                            ttemp5 005A  
                          ttemp6 005D                            ttemp7 0061  
                          status 000FD8                            wtemp8 005A  
                  i2_Write1USART 1F48                    ??_Set_RG3_PWM 003E  
          _WriteSTLED316SVibMode 1C04                  __initialization 1CA0  
                     _InitTimer1 1F04                     __end_of_main 0E1E  
                   __end_of_init 1B40                 __end_of_i2c_Init 1F32  
               __end_of_i2c_Read 1E0C                 __end_of_i2c_Wait 1EBA  
               __end_of_i2c_Stop 1FC8        __size_of_readWeighingData 005A  
                         ??_main 0086                           ??_init 003E  
                  __activetblptr 000002                           _ACKEN2 007B5C  
                         _ACKDT2 007B5D                           ?_flush 0038  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR4L 000F74                 ___awdiv@dividend 003E  
             __size_of_i2c_Start 0008                        ??_Get7Seg 0040  
                         i2l2132 1E0C                           i2l2124 1EBA  
                         i2l2134 1E22                           i2l2126 1EC8  
                         i2l2136 1E28                           i2l2128 1EDC  
                         i2l2138 1E3E               __size_of_i2c_Write 000C  
                         i2l4100 0174                           i2l4110 01B2  
                         i2l4102 017A                           i2l4120 01E6  
                         i2l4104 017C                           i2l4112 01BA  
                         i2l4040 0026                           i2l4130 025A  
                         i2l4122 0204                           i2l4106 018E  
                         i2l4050 0074                           i2l4042 0038  
                         i2l4140 0288                           i2l4132 026A  
                         i2l4124 0218                           i2l4116 01D0  
                         i2l4108 01A0                           i2l4060 00C4  
                         i2l4044 0048                           i2l4052 007C  
                         i2l4036 0012                           i2l4134 026E  
                         i2l4126 0228                           i2l4062 00DC  
                         i2l4054 008C                           i2l4118 01D6  
                         i2l4046 0058                           i2l4038 0020  
                 __CFG_WDTEN$OFF 000000                           i2l4128 0246  
                         i2l4136 0272                           i2l4072 0104  
                         i2l4064 00EC                           i2l4056 009C  
                         i2l4048 0064                           i2l4138 0280  
                         i2l4090 014E                           i2l4074 0116  
                         i2l4066 0100                           i2l4058 00B2  
                         i2l4084 0134                           i2l4076 0118  
                         i2l4092 0162                           i2l4094 016E  
                         i2l4086 013A                           i2l4078 0130  
                         i2l4088 013C                           i2l3568 1F4A  
                         _RCREG1 000FAF                           _SPBRG1 000FB0  
                         _TMR1IE 007CE8                           _TMR1IF 007CF0  
                         _TRISD5 007CAD                           _TRISD6 007CAE  
                 ?i2_Write1USART 0038                           _TXREG1 000FAE  
                  ??_MotorON_PWM 003E                       _MotorBREAK 1FAE  
                      ??_Read_IR 0040                  read_i2c@address 0080  
                         _OpMode 0030                   __CFG_XINST$OFF 000000  
               __end_of_high_isr 029A                        ??___aldiv 0046  
                      ??___awdiv 0042                   __CFG_STVREN$ON 000000  
                      ??___awmod 0042                   _PWM_Duty_Cycle 002C  
               __end_of_flushOut 1DD6              __end_of_Set_RG3_PWM 1F98  
               __end_of_read_i2c 1BAA                      _i2c_Address 1F5E  
                         clear_0 1CC6                           clear_1 1CD2  
               ___awdiv@quotient 0044                  ___awmod@divisor 0040  
                ___awmod@counter 0042                 Read1USART@result 0038  
     __end_of_WriteSTLED316SData 19C2       __end_of_WriteSTLED316SMode 15EC  
                         flush@i 003E                    i2c_Write@data 003F  
                   __pdataCOMRAM 004E                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    _i2c_Restart 1FB8                      ?_Read1USART 0038  
           __end_of_InitSTLED316 1A4E                       __accesstop 0060  
        __end_of__initialization 1CD8  __size_of_STLED316s_SPI_SendData 0080  
            _Low_Power_Indicator 1E0C                _WriteSTLED316SErr 15EC  
                  ___rparam_used 000001           ?_WriteSTLED316SVibMode 0038  
             ?_WriteSTLED316SErr 0038                   __pcstackCOMRAM 0038  
                    ?_InitTimer1 0038              __end_of_MotorON_PWM 1FAE  
                  __end_of_flush 1D9C               __size_of_delay_1ms 002C  
              __end_of_i2c_Start 1FD0              ??_WriteSTLED316SErr 0044  
              __end_of_i2c_Write 1F8C             ?_Low_Power_Indicator 0038  
                        ??_flush 003E                        ?_i2c_Init 0038  
                      ?_i2c_Read 003F                       __pbssBANK0 0060  
                      ?_i2c_Wait 0038                  ??i2_Write1USART 0038  
                      ?_i2c_Stop 0038               __size_of_initUSART 0026  
      __end_of_WriteSTLED316SErr 16D4                    ??_Write1USART 003E  
             __size_of_initMotor 000E                      ?_MotorBREAK 0038  
                    _Set_RG3_PWM 1F8C          __size_of_ToggleVIB_Mode 003E  
                        _CCP4CON 000F73              __size_of_Read1USART 0026  
          ??_Low_Power_Indicator 0038           _STLED316s_SPI_SendData 1A4E  
               _readWeighingData 1BAA               i2c_Address@address 0040  
                        i2u70_40 1EC8                          i2u70_41 1EC4  
                        i2u71_40 1E22                          i2u71_41 1E1E  
                __CFG_WDTPS$2048 000000                          i2u72_40 1E3E  
                        i2u72_41 1E3A                          _SPBRGH1 000F7F  
                        _SSP2ADD 000F6E                          _SSP2BUF 000F6F  
                        _NUM_REC 0017              __size_of_InitTimer1 0018  
                        _VOLTAGE 0011                     ?_Clr_RG3_PWM 0038  
                      ?_high_isr 0038                       ??_i2c_Init 003E  
                     ??_i2c_Read 0041                          _PWM_reg 0058  
                     ??_i2c_Wait 003E                          _Get7Seg 16D4  
    WriteSTLED316SVibMode@v_mode 0044                       ??_i2c_Stop 003F  
              __end_of_delay_1ms 1E6E                i2Write1USART@data 0038  
                      ?_flushOut 0038                        ?_read_i2c 0080  
                    _Serial_Flag 0037               __size_of_write_i2c 004E  
                    _MotorON_PWM 1FA4                          _Read_IR 1EE0  
          WriteSTLED316SMode@msg 0046                          __Hparam 0000  
                        __Lparam 0000              __end_of_Write1USART 1F48  
     WriteSTLED316SData@NUM_DIG0 0080       WriteSTLED316SData@NUM_DIG1 0082  
                        ___aldiv 12D4                      _Motor_Speed 0021  
                        ___awdiv 17A0                          ___awmod 1864  
                   Get7Seg@Digit 003E     __size_of_Homing_Again_Manual 0290  
                        __pcinit 1CA0                          __ramtop 1000  
              __end_of_initUSART 1E94                          __ptext0 029E  
                        __ptext1 1B40                          __ptext2 1FB8  
                        __ptext3 1DD6                          __ptext4 1E6E  
                        __ptext5 1F72                          __ptext6 1ACE  
                        __ptext7 1F1C                          __ptext8 1D62  
                        __ptext9 1C04                __end_of_initMotor 1F80  
                      _T3CONbits 000F79              __size_of_MotorBREAK 000A  
               ___awmod@dividend 003E                 ___aldiv@dividend 003E  
                      _T4CONbits 000F76                    delay_1ms@time 003E  
              __CFG_MSSPMSK$MSK5 000000            __size_of_InitSTLED316 008C  
    __size_of_MotorPosition_Init 010C                       _pause_Time 002F  
                      _EAdd_High 0027                       ??_high_isr 0039  
           end_of_initialization 1CD8       __size_of_WriteSTLED316SErr 00E8  
           i2c_Address@l_address 0041                       ??_flushOut 003E  
                     ??_read_i2c 004C                    __Lmediumconst 0000  
        WriteSTLED316SData@data3 0084          WriteSTLED316SData@data4 0085  
               ___aldiv@quotient 0048                          postdec1 000FE5  
                        postinc0 000FEE                     ?_i2c_Address 003F  
                   _InitSTLED316 19C2                        _PORTAbits 000F80  
                      _PORTBbits 000F81                __end_of_write_i2c 1CA0  
               __CFG_CPUDIV$OSC1 000000                        _TRISCbits 000F94  
                   ?_i2c_Restart 0038         ??_AD_capture_BattVoltage 0041  
                   ??_Read1USART 0038               _WriteSTLED316SData 1914  
        ??_WriteSTLED316SVibMode 0044               _WriteSTLED316SMode 14EC  
                    _Write1USART 1F32              ?_WriteSTLED316SData 0046  
            ?_WriteSTLED316SMode 0038                     ??_InitTimer1 003E  
                 _ToggleVIB_Mode 1CE6                        _Device_ID 001D  
                    _Vmotor_Time 0056                    __pidataCOMRAM 1F98  
             __end_of_Read1USART 1EE0                    _Serial_Buffer 0001  
                      _i2c_Start 1FC8                        _i2c_Write 1F80  
           ??_WriteSTLED316SData 0049              start_initialization 1CA0  
           ??_WriteSTLED316SMode 0044               __end_of_InitTimer1 1F1C  
           __size_of_Clr_RG3_PWM 0008                  _LowPowerCounter 004E  
       __end_of_readWeighingData 1C04                __size_of_i2c_Init 0016  
              __size_of_i2c_Read 0036                __size_of_i2c_Wait 0026  
                   ??_MotorBREAK 003E                __size_of_i2c_Stop 0008  
         __end_of_ToggleVIB_Mode 1D24                     ?_Set_RG3_PWM 0038  
        ?_STLED316s_SPI_SendData 0038                       ?_i2c_Start 0038  
                     ?_i2c_Write 0038                      __pbssCOMRAM 0001  
             __end_of_MotorBREAK 1FB8                    __pcstackBANK0 0080  
__size_of_AD_capture_BattVoltage 003E              __CFG_CCP2MX$DEFAULT 000000  
                       ?_Get7Seg 003E              _Homing_Again_Manual 0E1E  
              __size_of_high_isr 0292            __end_ofi2_Write1USART 1F5E  
                   ?_MotorON_PWM 0038                         ?_Read_IR 003E  
              __size_of_flushOut 003A                        _delay_1ms 1E42  
              __size_of_read_i2c 006A                _Homing_Again_Auto 10AE  
                ?_ToggleVIB_Mode 0038   __end_of_STLED316s_SPI_SendData 1ACE  
    __end_of_Low_Power_Indicator 1E42               ?_Homing_Again_Auto 0038  
                      __pintcode 0008                         ?___aldiv 003E  
                       ?___awdiv 003E                         ?___awmod 003E  
           ?_Homing_Again_Manual 0038                     _errorcounter 0052  
            ??_Homing_Again_Auto 0047             __size_of_i2c_Address 0014  
           WriteSTLED316SErr@msg 0046                        _initUSART 1E6E  
                      _initMotor 1F72                      Get7Seg@Data 0042  
                 __size_of_flush 003A                  Write1USART@data 003E  
           __size_of_i2c_Restart 0008                  ___aldiv@divisor 0042  
                ___aldiv@counter 0046        __end_of_Homing_Again_Auto 12D4  
                       _LATAbits 000F89                         _EAdd_Low 0025  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATGbits 000F8F                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                       ?_delay_1ms 003E  
              readWeighingData@i 0040                         i2u207_40 1F5C  
                       i2u207_41 1F58                         i2u260_40 00EC  
                       i2u252_40 0020                         i2u260_41 00E8  
                       i2u252_41 001C                         i2u261_40 00FE  
                       i2u253_40 0038                         i2u261_41 00FA  
                       i2u253_41 0034                         i2u270_40 0246  
                       i2u262_40 0128                         i2u254_40 0048  
                       i2u270_41 0242                         i2u262_41 0124  
                       i2u254_41 0044                         i2u271_40 0280  
                       i2u263_40 014C                         i2u255_40 0058  
                       i2u271_41 027C                         i2u263_41 0148  
                       i2u255_41 0054                         i2u264_40 018C  
                       i2u256_40 008C                         i2u264_41 0188  
                       i2u256_41 0088                         i2u265_40 01A0  
                       i2u257_40 00B2                         i2u265_41 019C  
                       i2u257_41 00AE                         _PIR1bits 000F9E  
                       i2u266_40 01B2                         i2u258_40 00C4  
                       i2u266_41 01AE                         i2u258_41 00C0  
                       i2u267_40 01D0                         i2u259_40 00DC  
                       i2u267_41 01CC                         i2u259_41 00D8  
                       i2u268_40 01E6                         i2u268_41 01E2  
                       i2u269_40 0204                         i2u269_41 0200  
                       _RCONbits 000FD0           _AD_capture_BattVoltage 1D24  
                       _SSP2CON1 000F6C                         _SSP2CON2 000F6B  
                       _SSP2STAT 000F6D            ??_Homing_Again_Manual 0049  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                      high_isr@c 003C                        high_isr@i 003D  
                    ??_i2c_Start 003F                      ??_i2c_Write 003F  
     __end_of_MotorPosition_Init 14EC                       ?_initUSART 0038  
          _delay_motor_stop_time 002D                       ?_initMotor 0038  
                   _Serial_GData 0036                        _write_i2c 1C52  
                      copy_data0 1CB4           InitSTLED316@Brightness 0046  
                   _Serial_Count 0029                         _i2c_Init 1F1C  
                       _i2c_Read 1DD6                         _i2c_Wait 1E94  
                       _i2c_Stop 1FC0                 __size_of_Get7Seg 00CC  
                   ?_Write1USART 0038   __size_of_WriteSTLED316SVibMode 004E  
  __end_of_WriteSTLED316SVibMode 1C52                        flushOut@i 003E  
                     _ANCON0bits 000FC1                         __Hrparam 0000  
               __size_of_Read_IR 0024                         __Lrparam 0000  
           __size_of_Set_RG3_PWM 000C                 __size_of___aldiv 010C  
               __size_of___awdiv 00C4                 __size_of___awmod 00B0  
                 _vibration_mode 0032                         __ptext10 1CE6  
                       __ptext11 1C52                         __ptext20 19C2  
                       __ptext12 1F80                         __ptext21 0E1E  
                       __ptext13 1FC0                         __ptext30 14EC  
                       __ptext22 1914                         __ptext14 1FC8  
                       __ptext31 15EC                         __ptext23 1864  
                       __ptext15 1F5E                         __ptext32 1A4E  
                       __ptext24 17A0                         __ptext16 1E94  
                       __ptext41 1F48                         __ptext33 1EE0  
                       __ptext25 16D4                         __ptext17 12D4  
                       __ptext42 1EBA                         __ptext34 1FA4  
                       __ptext26 10AE                         __ptext18 13E0  
                       __ptext43 1E0C                         __ptext35 1F8C  
                       __ptext27 1BAA                         __ptext19 1F04  
                       __ptext36 1FAE                         __ptext28 1D9C  
                       __ptext37 1FD0                         __ptext29 1F32  
                       __ptext38 1D24                         __ptext39 1E42  
                     ?_write_i2c 0080                 write_i2c@address 0080  
                       _high_isr 0008                read_i2c@read_byte 004C  
                       _flushOut 1D9C                         _read_i2c 1B40  
                  __size_of_main 0B80       __size_of_Homing_Again_Auto 0226  
                  __size_of_init 0072                ?_readWeighingData 0038  
                    ??_delay_1ms 0040               ??_readWeighingData 0040  
                       _vib_Time 002E             __size_of_MotorON_PWM 000A  
          _Motor_Stop_Delay_Time 001F                         int$flags 0059  
              _Serial_Buffer_Out 0060       STLED316s_SPI_SendData@Data 0040  
                     _INTCONbits 000FF2                      ??_initUSART 003E  
    __size_of_WriteSTLED316SData 00AE       STLED316s_SPI_SendData@temp 0041  
    __size_of_WriteSTLED316SMode 0100                      ??_initMotor 003E  
                  ??_Clr_RG3_PWM 003E             __CFG_FOSC$INTOSCPLLO 000000  
                       intlevel2 0000                     _motor_status 0034  
               ??_ToggleVIB_Mode 004C                  i2c_Address@mode 003F  
                     _RCSTA1bits 000FAC                       _OSCCONbits 000FD3  
       WriteSTLED316SData@v_mode 0048         WriteSTLED316SData@number 0046  
                     _IR_SENSORF 0013                 _Motor_Pause_Time 001B  
             _Serial_Temp_Buffer 0070          STLED316s_SPI_SendData@i 0042  
        STLED316s_SPI_SendData@t 0043                     ___aldiv@sign 0047  
                     _WDTCONbits 000FC0                      ??_write_i2c 004C  
            i2c_Read@i2cReadData 0042                    write_i2c@data 0084  
            __end_of_Clr_RG3_PWM 1FD8          ?_AD_capture_BattVoltage 0038  
           __size_of_Write1USART 0016  
