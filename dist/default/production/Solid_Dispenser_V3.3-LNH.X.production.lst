

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 28 11:27:27 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F65J50 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  002038                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _LowPowerCounter
   100  002038  0014               	dw	20
   101  00203A  0000               	dw	0
   102                           
   103                           ;initializer for _errorcounter
   104  00203C  001E               	dw	30
   105  00203E  0000               	dw	0
   106                           
   107                           ;initializer for _Vmotor_Time
   108  002040  07D0               	dw	2000
   109                           
   110                           ;initializer for _PWM_reg
   111  002042  3F                 	db	63
   112  0000                     _ADRES	set	4035
   113  0000                     _TMR1	set	4046
   114  0000                     _LATGbits	set	3983
   115  0000                     _T4CONbits	set	3958
   116  0000                     _CCPR4L	set	3956
   117  0000                     _CCP4CON	set	3955
   118  0000                     _T4CON	set	3958
   119  0000                     _T3CONbits	set	3961
   120  0000                     _PR4	set	3959
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _ANCON0bits	set	4033
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _TRISG	set	3992
   125  0000                     _TRISF	set	3991
   126  0000                     _TRISE	set	3990
   127  0000                     _TRISD	set	3989
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _RCREG1	set	4015
   132  0000                     _TXREG1	set	4014
   133  0000                     _SPBRGH1	set	3967
   134  0000                     _SPBRG1	set	4016
   135  0000                     _PIE1bits	set	3997
   136  0000                     _BAUDCON1bits	set	3966
   137  0000                     _TXSTA1bits	set	4013
   138  0000                     _TRISCbits	set	3988
   139  0000                     _SSP2BUF	set	3951
   140  0000                     _SSP2STAT	set	3949
   141  0000                     _SSP2ADD	set	3950
   142  0000                     _SSP2CON2	set	3947
   143  0000                     _SSP2CON1	set	3948
   144  0000                     _ADRESL	set	4035
   145  0000                     _ADRESH	set	4036
   146  0000                     _ADCON0bits	set	4034
   147  0000                     _T1CON	set	4045
   148  0000                     _RCSTA1bits	set	4012
   149  0000                     _PIR1bits	set	3998
   150  0000                     _PORTAbits	set	3968
   151  0000                     _PORTBbits	set	3969
   152  0000                     _LATDbits	set	3980
   153  0000                     _WDTCONbits	set	4032
   154  0000                     _INTCONbits	set	4082
   155  0000                     _IPR1bits	set	3999
   156  0000                     _RCONbits	set	4048
   157  0000                     _LATAbits	set	3977
   158  0000                     _LATCbits	set	3979
   159  0000                     _ACKEN2	set	31580
   160  0000                     _ACKDT2	set	31581
   161  0000                     _RCEN2	set	31579
   162  0000                     _PEN2	set	31578
   163  0000                     _RSEN2	set	31577
   164  0000                     _SEN2	set	31576
   165  0000                     _TRISD6	set	31918
   166  0000                     _TRISD5	set	31917
   167  0000                     _TMR1IE	set	31976
   168  0000                     _TMR1IF	set	31984
   169  0000                     _GIE	set	32663
   170                           
   171                           ; #config settings
   172  0000                     
   173                           	psect	cinit
   174  001D40                     __pcinit:
   175                           	opt callstack 0
   176  001D40                     start_initialization:
   177                           	opt callstack 0
   178  001D40                     __initialization:
   179                           	opt callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (11 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  001D40  0E38               	movlw	low __pidataCOMRAM
   184  001D42  6EF6               	movwf	tblptrl,c
   185  001D44  0E20               	movlw	high __pidataCOMRAM
   186  001D46  6EF7               	movwf	tblptrh,c
   187  001D48  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001D4A  6EF8               	movwf	tblptru,c
   189  001D4C  EE00  F04E         	lfsr	0,__pdataCOMRAM
   190  001D50  EE10 F00B          	lfsr	1,11
   191  001D54                     copy_data0:
   192  001D54  0009               	tblrd		*+
   193  001D56  CFF5 FFEE          	movff	tablat,postinc0
   194  001D5A  50E5               	movf	postdec1,w,c
   195  001D5C  50E1               	movf	fsr1l,w,c
   196  001D5E  E1FA               	bnz	copy_data0
   197                           
   198                           ; Clear objects allocated to BANK0 (32 bytes)
   199  001D60  EE00  F060         	lfsr	0,__pbssBANK0
   200  001D64  0E20               	movlw	32
   201  001D66                     clear_0:
   202  001D66  6AEE               	clrf	postinc0,c
   203  001D68  06E8               	decf	wreg,f,c
   204  001D6A  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to COMRAM (55 bytes)
   207  001D6C  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  001D70  0E37               	movlw	55
   209  001D72                     clear_1:
   210  001D72  6AEE               	clrf	postinc0,c
   211  001D74  06E8               	decf	wreg,f,c
   212  001D76  E1FD               	bnz	clear_1
   213  001D78                     end_of_initialization:
   214                           	opt callstack 0
   215  001D78                     __end_of__initialization:
   216                           	opt callstack 0
   217  001D78  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  001D7A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  001D7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  001D7E  6EF8               	movwf	tblptru,c
   221  001D80  0100               	movlb	0
   222  001D82  EF4F  F001         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  000001                     __pbssCOMRAM:
   226                           	opt callstack 0
   227  000001                     _Serial_Buffer:
   228                           	opt callstack 0
   229  000001                     	ds	16
   230  000011                     _VOLTAGE:
   231                           	opt callstack 0
   232  000011                     	ds	2
   233  000013                     _IR_SENSORF:
   234                           	opt callstack 0
   235  000013                     	ds	2
   236  000015                     _i:
   237                           	opt callstack 0
   238  000015                     	ds	2
   239  000017                     _NUM_REC:
   240                           	opt callstack 0
   241  000017                     	ds	2
   242  000019                     _NUM:
   243                           	opt callstack 0
   244  000019                     	ds	2
   245  00001B                     _Motor_Pause_Time:
   246                           	opt callstack 0
   247  00001B                     	ds	2
   248  00001D                     _Device_ID:
   249                           	opt callstack 0
   250  00001D                     	ds	2
   251  00001F                     _Motor_Stop_Delay_Time:
   252                           	opt callstack 0
   253  00001F                     	ds	2
   254  000021                     _Motor_Speed:
   255                           	opt callstack 0
   256  000021                     	ds	2
   257  000023                     _ETemp:
   258                           	opt callstack 0
   259  000023                     	ds	2
   260  000025                     _EAdd_Low:
   261                           	opt callstack 0
   262  000025                     	ds	2
   263  000027                     _EAdd_High:
   264                           	opt callstack 0
   265  000027                     	ds	2
   266  000029                     _Serial_Count:
   267                           	opt callstack 0
   268  000029                     	ds	2
   269  00002B                     _TMR1IF_triggered:
   270                           	opt callstack 0
   271  00002B                     	ds	1
   272  00002C                     _PWM_Duty_Cycle:
   273                           	opt callstack 0
   274  00002C                     	ds	1
   275  00002D                     _delay_motor_stop_time:
   276                           	opt callstack 0
   277  00002D                     	ds	1
   278  00002E                     _vib_Time:
   279                           	opt callstack 0
   280  00002E                     	ds	1
   281  00002F                     _pause_Time:
   282                           	opt callstack 0
   283  00002F                     	ds	1
   284  000030                     _OpMode:
   285                           	opt callstack 0
   286  000030                     	ds	1
   287  000031                     _data:
   288                           	opt callstack 0
   289  000031                     	ds	1
   290  000032                     _vibration_mode:
   291                           	opt callstack 0
   292  000032                     	ds	1
   293  000033                     _Busy:
   294                           	opt callstack 0
   295  000033                     	ds	1
   296  000034                     _motor_status:
   297                           	opt callstack 0
   298  000034                     	ds	1
   299  000035                     _Stop:
   300                           	opt callstack 0
   301  000035                     	ds	1
   302  000036                     _Serial_GData:
   303                           	opt callstack 0
   304  000036                     	ds	1
   305  000037                     _Serial_Flag:
   306                           	opt callstack 0
   307  000037                     	ds	1
   308                           
   309                           	psect	dataCOMRAM
   310  00004E                     __pdataCOMRAM:
   311                           	opt callstack 0
   312  00004E                     _LowPowerCounter:
   313                           	opt callstack 0
   314  00004E                     	ds	4
   315  000052                     _errorcounter:
   316                           	opt callstack 0
   317  000052                     	ds	4
   318  000056                     _Vmotor_Time:
   319                           	opt callstack 0
   320  000056                     	ds	2
   321  000058                     _PWM_reg:
   322                           	opt callstack 0
   323  000058                     	ds	1
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt callstack 0
   328  000060                     _Serial_Buffer_Out:
   329                           	opt callstack 0
   330  000060                     	ds	16
   331  000070                     _Serial_Temp_Buffer:
   332                           	opt callstack 0
   333  000070                     	ds	16
   334                           
   335                           	psect	cstackBANK0
   336  000080                     __pcstackBANK0:
   337                           	opt callstack 0
   338  000080                     ?_read_i2c:
   339                           	opt callstack 0
   340  000080                     WriteSTLED316SData@NUM_DIG0:
   341                           	opt callstack 0
   342  000080                     write_i2c@address:
   343                           	opt callstack 0
   344  000080                     read_i2c@address:
   345                           	opt callstack 0
   346                           
   347                           ; 4 bytes @ 0x0
   348  000080                     	ds	2
   349  000082                     WriteSTLED316SData@NUM_DIG1:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x2
   353  000082                     	ds	2
   354  000084                     WriteSTLED316SData@data3:
   355                           	opt callstack 0
   356  000084                     write_i2c@data:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x4
   360  000084                     	ds	1
   361  000085                     WriteSTLED316SData@data4:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0x5
   365  000085                     	ds	1
   366  000086                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x6
   369  000086                     	ds	2
   370                           
   371                           	psect	cstackCOMRAM
   372  000038                     __pcstackCOMRAM:
   373                           	opt callstack 0
   374  000038                     Read1USART@result:
   375                           	opt callstack 0
   376  000038                     i2Write1USART@data:
   377                           	opt callstack 0
   378                           
   379                           ; 1 bytes @ 0x0
   380  000038                     	ds	1
   381  000039                     ??_high_isr:
   382                           
   383                           ; 1 bytes @ 0x1
   384  000039                     	ds	2
   385  00003B                     high_isr@Temp:
   386                           	opt callstack 0
   387                           
   388                           ; 1 bytes @ 0x3
   389  00003B                     	ds	1
   390  00003C                     high_isr@c:
   391                           	opt callstack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394  00003C                     	ds	1
   395  00003D                     high_isr@i:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  00003D                     	ds	1
   400  00003E                     ??_STLED316s_SPI_SendData:
   401  00003E                     ??_i2c_Wait:
   402  00003E                     ?_Read_IR:
   403                           	opt callstack 0
   404  00003E                     ?___awdiv:
   405                           	opt callstack 0
   406  00003E                     ?___awmod:
   407                           	opt callstack 0
   408  00003E                     ?___aldiv:
   409                           	opt callstack 0
   410  00003E                     Write1USART@data:
   411                           	opt callstack 0
   412  00003E                     delay_1ms@time:
   413                           	opt callstack 0
   414  00003E                     flush@i:
   415                           	opt callstack 0
   416  00003E                     flushOut@i:
   417                           	opt callstack 0
   418  00003E                     Get7Seg@Digit:
   419                           	opt callstack 0
   420  00003E                     ___awdiv@dividend:
   421                           	opt callstack 0
   422  00003E                     ___awmod@dividend:
   423                           	opt callstack 0
   424  00003E                     ___aldiv@dividend:
   425                           	opt callstack 0
   426                           
   427                           ; 4 bytes @ 0x6
   428  00003E                     	ds	1
   429  00003F                     ?_i2c_Read:
   430                           	opt callstack 0
   431  00003F                     i2c_Write@data:
   432                           	opt callstack 0
   433  00003F                     i2c_Address@mode:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0x7
   437  00003F                     	ds	1
   438  000040                     ??_delay_1ms:
   439  000040                     ??_Get7Seg:
   440  000040                     STLED316s_SPI_SendData@Data:
   441                           	opt callstack 0
   442  000040                     i2c_Address@address:
   443                           	opt callstack 0
   444  000040                     readWeighingData@i:
   445                           	opt callstack 0
   446  000040                     ___awdiv@divisor:
   447                           	opt callstack 0
   448  000040                     ___awmod@divisor:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x8
   452  000040                     	ds	1
   453  000041                     ??_AD_capture_BattVoltage:
   454  000041                     STLED316s_SPI_SendData@temp:
   455                           	opt callstack 0
   456  000041                     i2c_Address@l_address:
   457                           	opt callstack 0
   458  000041                     i2c_Read@ack:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x9
   462  000041                     	ds	1
   463  000042                     STLED316s_SPI_SendData@i:
   464                           	opt callstack 0
   465  000042                     Get7Seg@Data:
   466                           	opt callstack 0
   467  000042                     i2c_Read@i2cReadData:
   468                           	opt callstack 0
   469  000042                     ___awdiv@counter:
   470                           	opt callstack 0
   471  000042                     ___awmod@counter:
   472                           	opt callstack 0
   473  000042                     ___aldiv@divisor:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0xA
   477  000042                     	ds	1
   478  000043                     STLED316s_SPI_SendData@t:
   479                           	opt callstack 0
   480  000043                     ___awdiv@sign:
   481                           	opt callstack 0
   482  000043                     ___awmod@sign:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0xB
   486  000043                     	ds	1
   487  000044                     ??_InitSTLED316:
   488  000044                     ??_WriteSTLED316SErr:
   489  000044                     ??_WriteSTLED316SMode:
   490  000044                     WriteSTLED316SVibMode@v_mode:
   491                           	opt callstack 0
   492  000044                     ___awdiv@quotient:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0xC
   496  000044                     	ds	2
   497  000046                     InitSTLED316@Brightness:
   498                           	opt callstack 0
   499  000046                     WriteSTLED316SMode@msg:
   500                           	opt callstack 0
   501  000046                     WriteSTLED316SErr@msg:
   502                           	opt callstack 0
   503  000046                     ___aldiv@counter:
   504                           	opt callstack 0
   505  000046                     WriteSTLED316SData@number:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0xE
   509  000046                     	ds	1
   510  000047                     ??_MotorPosition_Init:
   511  000047                     ??_Homing_Again_Auto:
   512  000047                     ___aldiv@sign:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0xF
   516  000047                     	ds	1
   517  000048                     WriteSTLED316SData@v_mode:
   518                           	opt callstack 0
   519  000048                     ___aldiv@quotient:
   520                           	opt callstack 0
   521                           
   522                           ; 4 bytes @ 0x10
   523  000048                     	ds	1
   524  000049                     ??_Homing_Again_Manual:
   525                           
   526                           ; 1 bytes @ 0x11
   527  000049                     	ds	3
   528  00004C                     read_i2c@read_byte:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x14
   532  00004C                     	ds	2
   533                           
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 124 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels required when called:    6
   559 ;; This function calls:
   560 ;;		_AD_capture_BattVoltage
   561 ;;		_Homing_Again_Auto
   562 ;;		_Homing_Again_Manual
   563 ;;		_InitSTLED316
   564 ;;		_InitTimer1
   565 ;;		_MotorPosition_Init
   566 ;;		_ToggleVIB_Mode
   567 ;;		_Write1USART
   568 ;;		_WriteSTLED316SData
   569 ;;		_WriteSTLED316SVibMode
   570 ;;		_flush
   571 ;;		_flushOut
   572 ;;		_i2c_Init
   573 ;;		_init
   574 ;;		_initMotor
   575 ;;		_initUSART
   576 ;;		_read_i2c
   577 ;;		_write_i2c
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  00029E                     __ptext0:
   585                           	opt callstack 0
   586  00029E                     _main:
   587                           	opt callstack 25
   588  00029E                     
   589                           ;main.c: 126:     GIE = 0;
   590  00029E  9EF2               	bcf	4082,7,c	;volatile
   591  0002A0                     
   592                           ;main.c: 127:     init();
   593  0002A0  ECB7  F00D         	call	_init	;wreg free
   594  0002A4                     
   595                           ;main.c: 128:     InitSTLED316(0x77);
   596  0002A4  0E77               	movlw	119
   597  0002A6  EC31  F00D         	call	_InitSTLED316
   598  0002AA                     
   599                           ;main.c: 129:     initMotor();
   600  0002AA  EC09  F010         	call	_initMotor	;wreg free
   601  0002AE                     
   602                           ;main.c: 130:     i2c_Init();
   603  0002AE  ECDE  F00F         	call	_i2c_Init	;wreg free
   604  0002B2                     
   605                           ;main.c: 131:     initUSART();
   606  0002B2  EC87  F00F         	call	_initUSART	;wreg free
   607  0002B6                     
   608                           ;main.c: 132:     InitTimer1();
   609  0002B6  ECD2  F00F         	call	_InitTimer1	;wreg free
   610  0002BA                     
   611                           ;main.c: 134:     LATCbits.LATC1 = 0;
   612  0002BA  928B               	bcf	139,1,c	;volatile
   613  0002BC                     
   614                           ;main.c: 135:     LATAbits.LATA2 = 0;
   615  0002BC  9489               	bcf	137,2,c	;volatile
   616  0002BE                     
   617                           ;main.c: 136:     errorcounter = 30;
   618  0002BE  0E1E               	movlw	30
   619  0002C0  6E52               	movwf	_errorcounter^0,c	;volatile
   620  0002C2  0E00               	movlw	0
   621  0002C4  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   622  0002C6  0E00               	movlw	0
   623  0002C8  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   624  0002CA  0E00               	movlw	0
   625  0002CC  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   626  0002CE                     
   627                           ;main.c: 140:    RCONbits.IPEN = 1;
   628  0002CE  8ED0               	bsf	208,7,c	;volatile
   629  0002D0                     
   630                           ;main.c: 143:    IPR1bits.RCIP = 1;
   631  0002D0  8A9F               	bsf	159,5,c	;volatile
   632  0002D2                     
   633                           ;main.c: 146:    INTCONbits.GIEH = 1;
   634  0002D2  8EF2               	bsf	242,7,c	;volatile
   635  0002D4                     
   636                           ;main.c: 147:     INTCONbits.GIE=1;
   637  0002D4  8EF2               	bsf	242,7,c	;volatile
   638  0002D6                     
   639                           ;main.c: 152:     WDTCONbits.SWDTEN = 0;
   640  0002D6  90C0               	bcf	192,0,c	;volatile
   641  0002D8                     
   642                           ;main.c: 154:     LATDbits.LATD0 = 1;
   643  0002D8  808C               	bsf	140,0,c	;volatile
   644  0002DA                     
   645                           ;main.c: 155:     LATDbits.LATD1 = 1;
   646  0002DA  828C               	bsf	140,1,c	;volatile
   647  0002DC                     
   648                           ;main.c: 157:     WriteSTLED316SData(33, 0xFF);
   649  0002DC  0E00               	movlw	0
   650  0002DE  6E47               	movwf	(WriteSTLED316SData@number+1)^0,c
   651  0002E0  0E21               	movlw	33
   652  0002E2  6E46               	movwf	WriteSTLED316SData@number^0,c
   653  0002E4  0EFF               	movlw	255
   654  0002E6  6E48               	movwf	WriteSTLED316SData@v_mode^0,c
   655  0002E8  ECDA  F00C         	call	_WriteSTLED316SData	;wreg free
   656  0002EC                     
   657                           ;main.c: 158:     _delay((unsigned long)((500)*(8000000/4000.0)));
   658  0002EC  0E06               	movlw	6
   659  0002EE  0100               	movlb	0	; () banked
   660  0002F0  6F87               	movwf	(??_main+1)& (0+255),b
   661  0002F2  0E13               	movlw	19
   662  0002F4  6F86               	movwf	??_main& (0+255),b
   663  0002F6  0EAD               	movlw	173
   664  0002F8                     u3717:
   665  0002F8  2EE8               	decfsz	wreg,f,c
   666  0002FA  D7FE               	bra	u3717
   667  0002FC  2F86               	decfsz	??_main& (0+255),f,b
   668  0002FE  D7FC               	bra	u3717
   669  000300  2F87               	decfsz	(??_main+1)& (0+255),f,b
   670  000302  D7FA               	bra	u3717
   671  000304  D000               	nop2	
   672  000306                     
   673                           ;main.c: 159:     AD_capture_BattVoltage();
   674  000306  ECE2  F00E         	call	_AD_capture_BattVoltage	;wreg free
   675  00030A                     
   676                           ;main.c: 167:     INTCONbits.GIE=0;
   677  00030A  9EF2               	bcf	242,7,c	;volatile
   678  00030C                     
   679                           ;main.c: 168:     ETemp = read_i2c(0x0010);
   680  00030C  0E10               	movlw	16
   681  00030E  0100               	movlb	0	; () banked
   682  000310  6F80               	movwf	read_i2c@address& (0+255),b
   683  000312  0E00               	movlw	0
   684  000314  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   685  000316  0E00               	movlw	0
   686  000318  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   687  00031A  0E00               	movlw	0
   688  00031C  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   689  00031E  ECF0  F00D         	call	_read_i2c	;wreg free
   690  000322  C080  F023         	movff	?_read_i2c,_ETemp
   691  000326  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   692  00032A                     
   693                           ;main.c: 169:     INTCONbits.GIE=1;
   694  00032A  8EF2               	bsf	242,7,c	;volatile
   695  00032C                     
   696                           ;main.c: 171:     vibration_mode = ETemp & 0x00FF;
   697  00032C  C023  F032         	movff	_ETemp,_vibration_mode
   698  000330                     
   699                           ;main.c: 172:     if(vibration_mode>1)
   700  000330  0E01               	movlw	1
   701  000332  6432               	cpfsgt	_vibration_mode^0,c
   702  000334  EF9E  F001         	goto	u3271
   703  000338  EFA0  F001         	goto	u3270
   704  00033C                     u3271:
   705  00033C  EFB2  F001         	goto	l4985
   706  000340                     u3270:
   707  000340                     
   708                           ;main.c: 173:     {;main.c: 174:         vibration_mode = 1;
   709  000340  0E01               	movlw	1
   710  000342  6E32               	movwf	_vibration_mode^0,c
   711  000344                     
   712                           ;main.c: 176:         INTCONbits.GIE=0;
   713  000344  9EF2               	bcf	242,7,c	;volatile
   714  000346                     
   715                           ;main.c: 177:         write_i2c(0x0010, vibration_mode);
   716  000346  0E10               	movlw	16
   717  000348  0100               	movlb	0	; () banked
   718  00034A  6F80               	movwf	write_i2c@address& (0+255),b
   719  00034C  0E00               	movlw	0
   720  00034E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   721  000350  0E00               	movlw	0
   722  000352  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   723  000354  0E00               	movlw	0
   724  000356  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   725  000358  C032  F084         	movff	_vibration_mode,write_i2c@data
   726  00035C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   727  00035E  EC79  F00E         	call	_write_i2c	;wreg free
   728  000362                     
   729                           ;main.c: 178:         INTCONbits.GIE=1;
   730  000362  8EF2               	bsf	242,7,c	;volatile
   731  000364                     l4985:
   732                           
   733                           ;main.c: 181:     NUM = 1;
   734  000364  0E00               	movlw	0
   735  000366  6E1A               	movwf	(_NUM+1)^0,c
   736  000368  0E01               	movlw	1
   737  00036A  6E19               	movwf	_NUM^0,c
   738                           
   739                           ;main.c: 182:     WriteSTLED316SData(NUM, vibration_mode);
   740  00036C  C019  F046         	movff	_NUM,WriteSTLED316SData@number
   741  000370  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
   742  000374  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   743  000378  ECDA  F00C         	call	_WriteSTLED316SData	;wreg free
   744  00037C                     
   745                           ;main.c: 183:     NUM_REC = 1;
   746  00037C  0E00               	movlw	0
   747  00037E  6E18               	movwf	(_NUM_REC+1)^0,c
   748  000380  0E01               	movlw	1
   749  000382  6E17               	movwf	_NUM_REC^0,c
   750  000384                     
   751                           ;main.c: 188:     INTCONbits.GIE=0;
   752  000384  9EF2               	bcf	242,7,c	;volatile
   753  000386                     
   754                           ;main.c: 189:     ETemp = read_i2c(0x0020);
   755  000386  0E20               	movlw	32
   756  000388  0100               	movlb	0	; () banked
   757  00038A  6F80               	movwf	read_i2c@address& (0+255),b
   758  00038C  0E00               	movlw	0
   759  00038E  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   760  000390  0E00               	movlw	0
   761  000392  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   762  000394  0E00               	movlw	0
   763  000396  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   764  000398  ECF0  F00D         	call	_read_i2c	;wreg free
   765  00039C  C080  F023         	movff	?_read_i2c,_ETemp
   766  0003A0  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   767  0003A4                     
   768                           ;main.c: 190:     INTCONbits.GIE=1;
   769  0003A4  8EF2               	bsf	242,7,c	;volatile
   770                           
   771                           ;main.c: 192:     Device_ID = ETemp & 0x00FF;
   772  0003A6  5023               	movf	_ETemp^0,w,c
   773  0003A8  6E1D               	movwf	_Device_ID^0,c
   774  0003AA  6A1E               	clrf	(_Device_ID+1)^0,c
   775  0003AC                     
   776                           ;main.c: 193:     if(Device_ID<0x31 || Device_ID>0x3A)
   777  0003AC  501E               	movf	(_Device_ID+1)^0,w,c
   778  0003AE  E109               	bnz	u3280
   779  0003B0  0E31               	movlw	49
   780  0003B2  5C1D               	subwf	_Device_ID^0,w,c
   781  0003B4  A0D8               	btfss	status,0,c
   782  0003B6  EFDF  F001         	goto	u3281
   783  0003BA  EFE1  F001         	goto	u3280
   784  0003BE                     u3281:
   785  0003BE  EFEC  F001         	goto	l4999
   786  0003C2                     u3280:
   787  0003C2  501E               	movf	(_Device_ID+1)^0,w,c
   788  0003C4  E109               	bnz	u3290
   789  0003C6  0E3B               	movlw	59
   790  0003C8  5C1D               	subwf	_Device_ID^0,w,c
   791  0003CA  A0D8               	btfss	status,0,c
   792  0003CC  EFEA  F001         	goto	u3291
   793  0003D0  EFEC  F001         	goto	u3290
   794  0003D4                     u3291:
   795  0003D4  EF01  F002         	goto	l5007
   796  0003D8                     u3290:
   797  0003D8                     l4999:
   798                           
   799                           ;main.c: 194:     {;main.c: 195:         Device_ID=0x31;
   800  0003D8  0E00               	movlw	0
   801  0003DA  6E1E               	movwf	(_Device_ID+1)^0,c
   802  0003DC  0E31               	movlw	49
   803  0003DE  6E1D               	movwf	_Device_ID^0,c
   804  0003E0                     
   805                           ;main.c: 197:         INTCONbits.GIE=0;
   806  0003E0  9EF2               	bcf	242,7,c	;volatile
   807  0003E2                     
   808                           ;main.c: 198:         write_i2c(0x0020, Device_ID);
   809  0003E2  0E20               	movlw	32
   810  0003E4  0100               	movlb	0	; () banked
   811  0003E6  6F80               	movwf	write_i2c@address& (0+255),b
   812  0003E8  0E00               	movlw	0
   813  0003EA  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   814  0003EC  0E00               	movlw	0
   815  0003EE  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   816  0003F0  0E00               	movlw	0
   817  0003F2  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   818  0003F4  C01D  F084         	movff	_Device_ID,write_i2c@data
   819  0003F8  C01E  F085         	movff	_Device_ID+1,write_i2c@data+1
   820  0003FC  EC79  F00E         	call	_write_i2c	;wreg free
   821  000400                     
   822                           ;main.c: 199:         INTCONbits.GIE=1;
   823  000400  8EF2               	bsf	242,7,c	;volatile
   824  000402                     l5007:
   825                           
   826                           ;main.c: 205:     INTCONbits.GIE=0;
   827  000402  9EF2               	bcf	242,7,c	;volatile
   828  000404                     
   829                           ;main.c: 206:     ETemp = read_i2c(0x0060);
   830  000404  0E60               	movlw	96
   831  000406  0100               	movlb	0	; () banked
   832  000408  6F80               	movwf	read_i2c@address& (0+255),b
   833  00040A  0E00               	movlw	0
   834  00040C  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   835  00040E  0E00               	movlw	0
   836  000410  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   837  000412  0E00               	movlw	0
   838  000414  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   839  000416  ECF0  F00D         	call	_read_i2c	;wreg free
   840  00041A  C080  F023         	movff	?_read_i2c,_ETemp
   841  00041E  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   842  000422                     
   843                           ;main.c: 207:     INTCONbits.GIE=1;
   844  000422  8EF2               	bsf	242,7,c	;volatile
   845  000424                     
   846                           ;main.c: 209:     pause_Time = ETemp & 0x00FF;
   847  000424  C023  F02F         	movff	_ETemp,_pause_Time	;volatile
   848  000428                     
   849                           ;main.c: 210:     if(pause_Time<0x30 || pause_Time>0x35)
   850  000428  0E2F               	movlw	47
   851  00042A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   852  00042C  EF1A  F002         	goto	u3301
   853  000430  EF1C  F002         	goto	u3300
   854  000434                     u3301:
   855  000434  EF24  F002         	goto	l5019
   856  000438                     u3300:
   857  000438  0E35               	movlw	53
   858  00043A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   859  00043C  EF22  F002         	goto	u3311
   860  000440  EF24  F002         	goto	u3310
   861  000444                     u3311:
   862  000444  EF62  F002         	goto	l5041
   863  000448                     u3310:
   864  000448                     l5019:
   865                           
   866                           ;main.c: 211:     {;main.c: 212:         pause_Time = 0x30;
   867  000448  0E30               	movlw	48
   868  00044A  6E2F               	movwf	_pause_Time^0,c	;volatile
   869                           
   870                           ;main.c: 213:         Motor_Pause_Time=0;
   871  00044C  0E00               	movlw	0
   872  00044E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   873  000450  0E00               	movlw	0
   874  000452  6E1B               	movwf	_Motor_Pause_Time^0,c
   875  000454                     
   876                           ;main.c: 215:         INTCONbits.GIE=0;
   877  000454  9EF2               	bcf	242,7,c	;volatile
   878  000456                     
   879                           ;main.c: 216:         write_i2c(0x0060, pause_Time);
   880  000456  0E60               	movlw	96
   881  000458  0100               	movlb	0	; () banked
   882  00045A  6F80               	movwf	write_i2c@address& (0+255),b
   883  00045C  0E00               	movlw	0
   884  00045E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   885  000460  0E00               	movlw	0
   886  000462  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   887  000464  0E00               	movlw	0
   888  000466  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   889  000468  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
   890  00046C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   891  00046E  EC79  F00E         	call	_write_i2c	;wreg free
   892  000472                     
   893                           ;main.c: 217:         INTCONbits.GIE=1;
   894  000472  8EF2               	bsf	242,7,c	;volatile
   895                           
   896                           ;main.c: 218:     }
   897  000474  EF88  F002         	goto	l168
   898  000478                     l5027:
   899                           
   900                           ; BSR set to: 0
   901                           ;main.c: 225:                 Motor_Pause_Time = 0;
   902  000478  0E00               	movlw	0
   903  00047A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   904  00047C  0E00               	movlw	0
   905  00047E  6E1B               	movwf	_Motor_Pause_Time^0,c
   906                           
   907                           ;main.c: 226:                 pause_Time = 0x30;
   908  000480  0E30               	movlw	48
   909  000482  6E2F               	movwf	_pause_Time^0,c	;volatile
   910                           
   911                           ;main.c: 227:                 break;
   912  000484  EF88  F002         	goto	l168
   913  000488                     l5029:
   914                           
   915                           ; BSR set to: 0
   916                           ;main.c: 230:                 Motor_Pause_Time = 1000;
   917  000488  0E03               	movlw	3
   918  00048A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   919  00048C  0EE8               	movlw	232
   920  00048E  6E1B               	movwf	_Motor_Pause_Time^0,c
   921                           
   922                           ;main.c: 231:                 break;
   923  000490  EF88  F002         	goto	l168
   924  000494                     l5031:
   925                           
   926                           ; BSR set to: 0
   927                           ;main.c: 234:                 Motor_Pause_Time = 2000;
   928  000494  0E07               	movlw	7
   929  000496  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   930  000498  0ED0               	movlw	208
   931  00049A  6E1B               	movwf	_Motor_Pause_Time^0,c
   932                           
   933                           ;main.c: 235:                 break;
   934  00049C  EF88  F002         	goto	l168
   935  0004A0                     l5033:
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 238:                  Motor_Pause_Time = 3000;
   939  0004A0  0E0B               	movlw	11
   940  0004A2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   941  0004A4  0EB8               	movlw	184
   942  0004A6  6E1B               	movwf	_Motor_Pause_Time^0,c
   943                           
   944                           ;main.c: 239:                 break;
   945  0004A8  EF88  F002         	goto	l168
   946  0004AC                     l5035:
   947                           
   948                           ; BSR set to: 0
   949                           ;main.c: 242:                 Motor_Pause_Time = 4000;
   950  0004AC  0E0F               	movlw	15
   951  0004AE  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   952  0004B0  0EA0               	movlw	160
   953  0004B2  6E1B               	movwf	_Motor_Pause_Time^0,c
   954                           
   955                           ;main.c: 243:                 break;
   956  0004B4  EF88  F002         	goto	l168
   957  0004B8                     l5037:
   958                           
   959                           ; BSR set to: 0
   960                           ;main.c: 246:                 Motor_Pause_Time = 5000;
   961  0004B8  0E13               	movlw	19
   962  0004BA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   963  0004BC  0E88               	movlw	136
   964  0004BE  6E1B               	movwf	_Motor_Pause_Time^0,c
   965                           
   966                           ;main.c: 247:                 break;
   967  0004C0  EF88  F002         	goto	l168
   968  0004C4                     l5041:
   969  0004C4  502F               	movf	_pause_Time^0,w,c	;volatile
   970  0004C6  0100               	movlb	0	; () banked
   971  0004C8  6F86               	movwf	??_main& (0+255),b
   972  0004CA  6B87               	clrf	(??_main+1)& (0+255),b
   973                           
   974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 1, Range of values is 0 to 0
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte            4     3 (average)
   980                           ;	Chosen strategy is simple_byte
   981  0004CC  5187               	movf	(??_main+1)& (0+255),w,b
   982  0004CE  0A00               	xorlw	0	; case 0
   983  0004D0  B4D8               	btfsc	status,2,c
   984  0004D2  EF6D  F002         	goto	l5677
   985  0004D6  EF3C  F002         	goto	l5027
   986  0004DA                     l5677:
   987                           
   988                           ; BSR set to: 0
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 6, Range of values is 48 to 53
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           19    10 (average)
   994                           ;	Chosen strategy is simple_byte
   995  0004DA  5186               	movf	??_main& (0+255),w,b
   996  0004DC  0A30               	xorlw	48	; case 48
   997  0004DE  B4D8               	btfsc	status,2,c
   998  0004E0  EF3C  F002         	goto	l5027
   999  0004E4  0A01               	xorlw	1	; case 49
  1000  0004E6  B4D8               	btfsc	status,2,c
  1001  0004E8  EF44  F002         	goto	l5029
  1002  0004EC  0A03               	xorlw	3	; case 50
  1003  0004EE  B4D8               	btfsc	status,2,c
  1004  0004F0  EF4A  F002         	goto	l5031
  1005  0004F4  0A01               	xorlw	1	; case 51
  1006  0004F6  B4D8               	btfsc	status,2,c
  1007  0004F8  EF50  F002         	goto	l5033
  1008  0004FC  0A07               	xorlw	7	; case 52
  1009  0004FE  B4D8               	btfsc	status,2,c
  1010  000500  EF56  F002         	goto	l5035
  1011  000504  0A01               	xorlw	1	; case 53
  1012  000506  B4D8               	btfsc	status,2,c
  1013  000508  EF5C  F002         	goto	l5037
  1014  00050C  EF3C  F002         	goto	l5027
  1015  000510                     l168:
  1016                           
  1017                           ;main.c: 254:     INTCONbits.GIE=0;
  1018  000510  9EF2               	bcf	242,7,c	;volatile
  1019  000512                     
  1020                           ;main.c: 255:     ETemp = read_i2c(0x0050);
  1021  000512  0E50               	movlw	80
  1022  000514  0100               	movlb	0	; () banked
  1023  000516  6F80               	movwf	read_i2c@address& (0+255),b
  1024  000518  0E00               	movlw	0
  1025  00051A  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1026  00051C  0E00               	movlw	0
  1027  00051E  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1028  000520  0E00               	movlw	0
  1029  000522  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1030  000524  ECF0  F00D         	call	_read_i2c	;wreg free
  1031  000528  C080  F023         	movff	?_read_i2c,_ETemp
  1032  00052C  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1033  000530                     
  1034                           ;main.c: 256:     INTCONbits.GIE=1;
  1035  000530  8EF2               	bsf	242,7,c	;volatile
  1036  000532                     
  1037                           ;main.c: 258:     delay_motor_stop_time = ETemp & 0x00FF;
  1038  000532  C023  F02D         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1039  000536                     
  1040                           ;main.c: 259:     if(delay_motor_stop_time>0x96)
  1041  000536  0E96               	movlw	150
  1042  000538  642D               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1043  00053A  EFA1  F002         	goto	u3321
  1044  00053E  EFA3  F002         	goto	u3320
  1045  000542                     u3321:
  1046  000542  EFBB  F002         	goto	l178
  1047  000546                     u3320:
  1048  000546                     
  1049                           ;main.c: 260:     {;main.c: 261:         delay_motor_stop_time=0x00;
  1050  000546  0E00               	movlw	0
  1051  000548  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  1052  00054A                     
  1053                           ;main.c: 263:         INTCONbits.GIE=0;
  1054  00054A  9EF2               	bcf	242,7,c	;volatile
  1055  00054C                     
  1056                           ;main.c: 264:         write_i2c(0x0050, delay_motor_stop_time);
  1057  00054C  0E50               	movlw	80
  1058  00054E  0100               	movlb	0	; () banked
  1059  000550  6F80               	movwf	write_i2c@address& (0+255),b
  1060  000552  0E00               	movlw	0
  1061  000554  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1062  000556  0E00               	movlw	0
  1063  000558  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1064  00055A  0E00               	movlw	0
  1065  00055C  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1066  00055E  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1067  000562  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1068  000564  EC79  F00E         	call	_write_i2c	;wreg free
  1069  000568                     
  1070                           ;main.c: 265:         INTCONbits.GIE=1;
  1071  000568  8EF2               	bsf	242,7,c	;volatile
  1072  00056A                     
  1073                           ;main.c: 267:         Motor_Stop_Delay_Time=0;
  1074  00056A  0E00               	movlw	0
  1075  00056C  6E20               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1076  00056E  0E00               	movlw	0
  1077  000570  6E1F               	movwf	_Motor_Stop_Delay_Time^0,c
  1078                           
  1079                           ;main.c: 268:     }
  1080  000572  EFBE  F002         	goto	l179
  1081  000576                     l178:
  1082                           
  1083                           ;main.c: 270:     {;main.c: 271:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1084  000576  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1085  00057A  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1086  00057C                     l179:
  1087                           
  1088                           ;main.c: 277:     INTCONbits.GIE=0;
  1089  00057C  9EF2               	bcf	242,7,c	;volatile
  1090  00057E                     
  1091                           ;main.c: 278:     ETemp = read_i2c(0x0040);
  1092  00057E  0E40               	movlw	64
  1093  000580  0100               	movlb	0	; () banked
  1094  000582  6F80               	movwf	read_i2c@address& (0+255),b
  1095  000584  0E00               	movlw	0
  1096  000586  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1097  000588  0E00               	movlw	0
  1098  00058A  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1099  00058C  0E00               	movlw	0
  1100  00058E  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1101  000590  ECF0  F00D         	call	_read_i2c	;wreg free
  1102  000594  C080  F023         	movff	?_read_i2c,_ETemp
  1103  000598  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1104  00059C                     
  1105                           ;main.c: 279:     INTCONbits.GIE=1
  1106  00059C  8EF2               	bsf	242,7,c	;volatile
  1107  00059E                     
  1108                           ;main.c: 281:     vib_Time = ETemp & 0x00FF;
  1109  00059E  C023  F02E         	movff	_ETemp,_vib_Time	;volatile
  1110  0005A2                     
  1111                           ;main.c: 282:     if( (vib_Time!=0x81 && vib_Time!=0x82 && vib_Time!=0x83 && vib_Time!=0
      +                          x84 && vib_Time!=0x85) )
  1112  0005A2  0E81               	movlw	129
  1113  0005A4  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1114  0005A6  B4D8               	btfsc	status,2,c
  1115  0005A8  EFD8  F002         	goto	u3331
  1116  0005AC  EFDA  F002         	goto	u3330
  1117  0005B0                     u3331:
  1118  0005B0  EF36  F003         	goto	l5097
  1119  0005B4                     u3330:
  1120  0005B4  0E82               	movlw	130
  1121  0005B6  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1122  0005B8  B4D8               	btfsc	status,2,c
  1123  0005BA  EFE1  F002         	goto	u3341
  1124  0005BE  EFE3  F002         	goto	u3340
  1125  0005C2                     u3341:
  1126  0005C2  EF36  F003         	goto	l5097
  1127  0005C6                     u3340:
  1128  0005C6  0E83               	movlw	131
  1129  0005C8  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1130  0005CA  B4D8               	btfsc	status,2,c
  1131  0005CC  EFEA  F002         	goto	u3351
  1132  0005D0  EFEC  F002         	goto	u3350
  1133  0005D4                     u3351:
  1134  0005D4  EF36  F003         	goto	l5097
  1135  0005D8                     u3350:
  1136  0005D8  0E84               	movlw	132
  1137  0005DA  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1138  0005DC  B4D8               	btfsc	status,2,c
  1139  0005DE  EFF3  F002         	goto	u3361
  1140  0005E2  EFF5  F002         	goto	u3360
  1141  0005E6                     u3361:
  1142  0005E6  EF36  F003         	goto	l5097
  1143  0005EA                     u3360:
  1144  0005EA  0E85               	movlw	133
  1145  0005EC  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1146  0005EE  B4D8               	btfsc	status,2,c
  1147  0005F0  EFFC  F002         	goto	u3371
  1148  0005F4  EFFE  F002         	goto	u3370
  1149  0005F8                     u3371:
  1150  0005F8  EF36  F003         	goto	l5097
  1151  0005FC                     u3370:
  1152  0005FC                     
  1153                           ;main.c: 283:     {;main.c: 284:         Vmotor_Time = 2000;
  1154  0005FC  0E07               	movlw	7
  1155  0005FE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1156  000600  0ED0               	movlw	208
  1157  000602  6E56               	movwf	_Vmotor_Time^0,c
  1158                           
  1159                           ;main.c: 285:         vib_Time = 0x82;
  1160  000604  0E82               	movlw	130
  1161  000606  6E2E               	movwf	_vib_Time^0,c	;volatile
  1162  000608                     
  1163                           ;main.c: 287:         INTCONbits.GIE=0;
  1164  000608  9EF2               	bcf	242,7,c	;volatile
  1165  00060A                     
  1166                           ;main.c: 288:         write_i2c(0x0040,vib_Time);
  1167  00060A  0E40               	movlw	64
  1168  00060C  0100               	movlb	0	; () banked
  1169  00060E  6F80               	movwf	write_i2c@address& (0+255),b
  1170  000610  0E00               	movlw	0
  1171  000612  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1172  000614  0E00               	movlw	0
  1173  000616  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1174  000618  0E00               	movlw	0
  1175  00061A  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1176  00061C  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  1177  000620  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1178  000622  EC79  F00E         	call	_write_i2c	;wreg free
  1179  000626                     
  1180                           ;main.c: 289:         INTCONbits.GIE=1;
  1181  000626  8EF2               	bsf	242,7,c	;volatile
  1182                           
  1183                           ;main.c: 290:     }
  1184  000628  EF58  F003         	goto	l5099
  1185  00062C                     l5085:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 296:                 Vmotor_Time=1000;
  1189  00062C  0E03               	movlw	3
  1190  00062E  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1191  000630  0EE8               	movlw	232
  1192  000632  6E56               	movwf	_Vmotor_Time^0,c
  1193                           
  1194                           ;main.c: 297:                 break;
  1195  000634  EF58  F003         	goto	l5099
  1196  000638                     l5087:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 300:                 Vmotor_Time=2000;
  1200  000638  0E07               	movlw	7
  1201  00063A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1202  00063C  0ED0               	movlw	208
  1203  00063E  6E56               	movwf	_Vmotor_Time^0,c
  1204                           
  1205                           ;main.c: 301:                 vib_Time=0x82;
  1206  000640  0E82               	movlw	130
  1207  000642  6E2E               	movwf	_vib_Time^0,c	;volatile
  1208                           
  1209                           ;main.c: 302:                 break;
  1210  000644  EF58  F003         	goto	l5099
  1211  000648                     l5089:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;main.c: 304:                 Vmotor_Time=3000;
  1215  000648  0E0B               	movlw	11
  1216  00064A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1217  00064C  0EB8               	movlw	184
  1218  00064E  6E56               	movwf	_Vmotor_Time^0,c
  1219                           
  1220                           ;main.c: 305:                 break;
  1221  000650  EF58  F003         	goto	l5099
  1222  000654                     l5091:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 307:                 Vmotor_Time=4000;
  1226  000654  0E0F               	movlw	15
  1227  000656  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1228  000658  0EA0               	movlw	160
  1229  00065A  6E56               	movwf	_Vmotor_Time^0,c
  1230                           
  1231                           ;main.c: 308:                 break;
  1232  00065C  EF58  F003         	goto	l5099
  1233  000660                     l5093:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 310:                 Vmotor_Time=5000;
  1237  000660  0E13               	movlw	19
  1238  000662  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1239  000664  0E88               	movlw	136
  1240  000666  6E56               	movwf	_Vmotor_Time^0,c
  1241                           
  1242                           ;main.c: 311:                 break;
  1243  000668  EF58  F003         	goto	l5099
  1244  00066C                     l5097:
  1245  00066C  502E               	movf	_vib_Time^0,w,c	;volatile
  1246  00066E  0100               	movlb	0	; () banked
  1247  000670  6F86               	movwf	??_main& (0+255),b
  1248  000672  6B87               	clrf	(??_main+1)& (0+255),b
  1249                           
  1250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 1, Range of values is 0 to 0
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte            4     3 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257  000674  5187               	movf	(??_main+1)& (0+255),w,b
  1258  000676  0A00               	xorlw	0	; case 0
  1259  000678  B4D8               	btfsc	status,2,c
  1260  00067A  EF41  F003         	goto	l5679
  1261  00067E  EF1C  F003         	goto	l5087
  1262  000682                     l5679:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ; Switch size 1, requested type "simple"
  1266                           ; Number of cases is 5, Range of values is 129 to 133
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte           16     9 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271  000682  5186               	movf	??_main& (0+255),w,b
  1272  000684  0A81               	xorlw	129	; case 129
  1273  000686  B4D8               	btfsc	status,2,c
  1274  000688  EF16  F003         	goto	l5085
  1275  00068C  0A03               	xorlw	3	; case 130
  1276  00068E  B4D8               	btfsc	status,2,c
  1277  000690  EF1C  F003         	goto	l5087
  1278  000694  0A01               	xorlw	1	; case 131
  1279  000696  B4D8               	btfsc	status,2,c
  1280  000698  EF24  F003         	goto	l5089
  1281  00069C  0A07               	xorlw	7	; case 132
  1282  00069E  B4D8               	btfsc	status,2,c
  1283  0006A0  EF2A  F003         	goto	l5091
  1284  0006A4  0A01               	xorlw	1	; case 133
  1285  0006A6  B4D8               	btfsc	status,2,c
  1286  0006A8  EF30  F003         	goto	l5093
  1287  0006AC  EF1C  F003         	goto	l5087
  1288  0006B0                     l5099:
  1289                           
  1290                           ;main.c: 318:     PWM_reg = 0x3F;
  1291  0006B0  0E3F               	movlw	63
  1292  0006B2  6E58               	movwf	_PWM_reg^0,c
  1293  0006B4                     
  1294                           ;main.c: 320:     INTCONbits.GIE=0;
  1295  0006B4  9EF2               	bcf	242,7,c	;volatile
  1296  0006B6                     
  1297                           ;main.c: 321:     ETemp = read_i2c(0x0030);
  1298  0006B6  0E30               	movlw	48
  1299  0006B8  0100               	movlb	0	; () banked
  1300  0006BA  6F80               	movwf	read_i2c@address& (0+255),b
  1301  0006BC  0E00               	movlw	0
  1302  0006BE  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1303  0006C0  0E00               	movlw	0
  1304  0006C2  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1305  0006C4  0E00               	movlw	0
  1306  0006C6  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1307  0006C8  ECF0  F00D         	call	_read_i2c	;wreg free
  1308  0006CC  C080  F023         	movff	?_read_i2c,_ETemp
  1309  0006D0  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1310  0006D4                     
  1311                           ;main.c: 322:     INTCONbits.GIE=1;
  1312  0006D4  8EF2               	bsf	242,7,c	;volatile
  1313  0006D6                     
  1314                           ;main.c: 324:     PWM_reg = ETemp & 0x00FF;
  1315  0006D6  C023  F058         	movff	_ETemp,_PWM_reg
  1316  0006DA                     
  1317                           ;main.c: 326:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1318  0006DA  5058               	movf	_PWM_reg^0,w,c
  1319  0006DC  B4D8               	btfsc	status,2,c
  1320  0006DE  EF73  F003         	goto	u3381
  1321  0006E2  EF75  F003         	goto	u3380
  1322  0006E6                     u3381:
  1323  0006E6  EF99  F003         	goto	l5123
  1324  0006EA                     u3380:
  1325  0006EA  0E3F               	movlw	63
  1326  0006EC  1858               	xorwf	_PWM_reg^0,w,c
  1327  0006EE  B4D8               	btfsc	status,2,c
  1328  0006F0  EF7C  F003         	goto	u3391
  1329  0006F4  EF7E  F003         	goto	u3390
  1330  0006F8                     u3391:
  1331  0006F8  EF99  F003         	goto	l5123
  1332  0006FC                     u3390:
  1333  0006FC  0E7F               	movlw	127
  1334  0006FE  1858               	xorwf	_PWM_reg^0,w,c
  1335  000700  B4D8               	btfsc	status,2,c
  1336  000702  EF85  F003         	goto	u3401
  1337  000706  EF87  F003         	goto	u3400
  1338  00070A                     u3401:
  1339  00070A  EF99  F003         	goto	l5123
  1340  00070E                     u3400:
  1341  00070E                     
  1342                           ;main.c: 327:     {;main.c: 328:         PWM_reg=0x3F;
  1343  00070E  0E3F               	movlw	63
  1344  000710  6E58               	movwf	_PWM_reg^0,c
  1345  000712                     
  1346                           ;main.c: 330:         INTCONbits.GIE=0;
  1347  000712  9EF2               	bcf	242,7,c	;volatile
  1348  000714                     
  1349                           ;main.c: 331:         write_i2c(0x0030,PWM_reg);
  1350  000714  0E30               	movlw	48
  1351  000716  0100               	movlb	0	; () banked
  1352  000718  6F80               	movwf	write_i2c@address& (0+255),b
  1353  00071A  0E00               	movlw	0
  1354  00071C  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1355  00071E  0E00               	movlw	0
  1356  000720  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1357  000722  0E00               	movlw	0
  1358  000724  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1359  000726  C058  F084         	movff	_PWM_reg,write_i2c@data
  1360  00072A  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1361  00072C  EC79  F00E         	call	_write_i2c	;wreg free
  1362  000730                     
  1363                           ;main.c: 332:         INTCONbits.GIE=1;
  1364  000730  8EF2               	bsf	242,7,c	;volatile
  1365  000732                     l5123:
  1366                           
  1367                           ;main.c: 335:     errorcounter = 30;
  1368  000732  0E1E               	movlw	30
  1369  000734  6E52               	movwf	_errorcounter^0,c	;volatile
  1370  000736  0E00               	movlw	0
  1371  000738  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1372  00073A  0E00               	movlw	0
  1373  00073C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1374  00073E  0E00               	movlw	0
  1375  000740  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1376                           
  1377                           ;main.c: 336:     MotorPosition_Init();
  1378  000742  EC40  F00A         	call	_MotorPosition_Init	;wreg free
  1379  000746                     
  1380                           ;main.c: 337:     LATDbits.LATD1 = 0;
  1381  000746  928C               	bcf	140,1,c	;volatile
  1382  000748                     l191:
  1383  000748  0004               	clrwdt		;# 
  1384  00074A                     
  1385                           ;main.c: 345:         errorcounter = 30;
  1386  00074A  0E1E               	movlw	30
  1387  00074C  6E52               	movwf	_errorcounter^0,c	;volatile
  1388  00074E  0E00               	movlw	0
  1389  000750  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1390  000752  0E00               	movlw	0
  1391  000754  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1392  000756  0E00               	movlw	0
  1393  000758  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1394  00075A                     
  1395                           ;main.c: 346:         AD_capture_BattVoltage();
  1396  00075A  ECE2  F00E         	call	_AD_capture_BattVoltage	;wreg free
  1397                           
  1398                           ;main.c: 348:         switch(OpMode)
  1399  00075E  EFF7  F006         	goto	l5363
  1400  000762                     l193:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 355:                 NUM = NUM_REC;
  1404  000762  C017  F019         	movff	_NUM_REC,_NUM
  1405  000766  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1406                           
  1407                           ;main.c: 357:                 if (PORTBbits.RB4 == 0)
  1408  00076A  B881               	btfsc	129,4,c	;volatile
  1409  00076C  EFBA  F003         	goto	u3411
  1410  000770  EFBC  F003         	goto	u3410
  1411  000774                     u3411:
  1412  000774  EFDC  F003         	goto	l194
  1413  000778                     u3410:
  1414  000778                     l195:
  1415                           
  1416                           ;main.c: 360:                     {;main.c: 361:                         if(PORTBbits.RB
      +                          2 == 0)
  1417  000778  B481               	btfsc	129,2,c	;volatile
  1418  00077A  EFC1  F003         	goto	u3421
  1419  00077E  EFC3  F003         	goto	u3420
  1420  000782                     u3421:
  1421  000782  EFC5  F003         	goto	l196
  1422  000786                     u3420:
  1423  000786                     
  1424                           ;main.c: 362:                         {;main.c: 363:                             ToggleV
      +                          IB_Mode();
  1425  000786  ECC3  F00E         	call	_ToggleVIB_Mode	;wreg free
  1426  00078A                     l196:
  1427                           
  1428                           ;main.c: 366:                         WriteSTLED316SVibMode(vibration_mode);
  1429  00078A  5032               	movf	_vibration_mode^0,w,c
  1430  00078C  EC52  F00E         	call	_WriteSTLED316SVibMode
  1431  000790                     
  1432                           ;main.c: 367:                          _delay((unsigned long)((100)*(8000000/4000.0)));
  1433  000790  0E02               	movlw	2
  1434  000792  0100               	movlb	0	; () banked
  1435  000794  6F87               	movwf	(??_main+1)& (0+255),b
  1436  000796  0E04               	movlw	4
  1437  000798  6F86               	movwf	??_main& (0+255),b
  1438  00079A  0EBA               	movlw	186
  1439  00079C                     u3727:
  1440  00079C  2EE8               	decfsz	wreg,f,c
  1441  00079E  D7FE               	bra	u3727
  1442  0007A0  2F86               	decfsz	??_main& (0+255),f,b
  1443  0007A2  D7FC               	bra	u3727
  1444  0007A4  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1445  0007A6  D7FA               	bra	u3727
  1446  0007A8  F000               	nop	
  1447  0007AA                     
  1448                           ;main.c: 369:                     }while (PORTBbits.RB4 == 0);
  1449  0007AA  A881               	btfss	129,4,c	;volatile
  1450  0007AC  EFDA  F003         	goto	u3431
  1451  0007B0  EFDC  F003         	goto	u3430
  1452  0007B4                     u3431:
  1453  0007B4  EFBC  F003         	goto	l195
  1454  0007B8                     u3430:
  1455  0007B8                     l194:
  1456                           
  1457                           ;main.c: 372:                 if ((PORTBbits.RB3 == 0) && NUM != 99)
  1458  0007B8  B681               	btfsc	129,3,c	;volatile
  1459  0007BA  EFE1  F003         	goto	u3441
  1460  0007BE  EFE3  F003         	goto	u3440
  1461  0007C2                     u3441:
  1462  0007C2  EFFA  F003         	goto	l198
  1463  0007C6                     u3440:
  1464  0007C6  0E63               	movlw	99
  1465  0007C8  1819               	xorwf	_NUM^0,w,c
  1466  0007CA  101A               	iorwf	(_NUM+1)^0,w,c
  1467  0007CC  B4D8               	btfsc	status,2,c
  1468  0007CE  EFEB  F003         	goto	u3451
  1469  0007D2  EFED  F003         	goto	u3450
  1470  0007D6                     u3451:
  1471  0007D6  EFFA  F003         	goto	l198
  1472  0007DA                     u3450:
  1473  0007DA                     
  1474                           ;main.c: 373:                 {;main.c: 374:                     NUM = NUM + 1;
  1475  0007DA  0E01               	movlw	1
  1476  0007DC  2419               	addwf	_NUM^0,w,c
  1477  0007DE  6E19               	movwf	_NUM^0,c
  1478  0007E0  0E00               	movlw	0
  1479  0007E2  201A               	addwfc	(_NUM+1)^0,w,c
  1480  0007E4  6E1A               	movwf	(_NUM+1)^0,c
  1481  0007E6                     l199:
  1482  0007E6  A681               	btfss	129,3,c	;volatile
  1483  0007E8  EFF8  F003         	goto	u3461
  1484  0007EC  EFFA  F003         	goto	u3460
  1485  0007F0                     u3461:
  1486  0007F0  EFF3  F003         	goto	l199
  1487  0007F4                     u3460:
  1488  0007F4                     l198:
  1489                           
  1490                           ;main.c: 378:                 if (PORTAbits.RA5 == 0 && NUM != 0)
  1491  0007F4  BA80               	btfsc	128,5,c	;volatile
  1492  0007F6  EFFF  F003         	goto	u3471
  1493  0007FA  EF01  F004         	goto	u3470
  1494  0007FE                     u3471:
  1495  0007FE  EF17  F004         	goto	l202
  1496  000802                     u3470:
  1497  000802  5019               	movf	_NUM^0,w,c
  1498  000804  101A               	iorwf	(_NUM+1)^0,w,c
  1499  000806  B4D8               	btfsc	status,2,c
  1500  000808  EF08  F004         	goto	u3481
  1501  00080C  EF0A  F004         	goto	u3480
  1502  000810                     u3481:
  1503  000810  EF17  F004         	goto	l202
  1504  000814                     u3480:
  1505  000814                     
  1506                           ;main.c: 379:                 {;main.c: 380:                     NUM = NUM - 1;
  1507  000814  0EFF               	movlw	255
  1508  000816  2419               	addwf	_NUM^0,w,c
  1509  000818  6E19               	movwf	_NUM^0,c
  1510  00081A  0EFF               	movlw	255
  1511  00081C  201A               	addwfc	(_NUM+1)^0,w,c
  1512  00081E  6E1A               	movwf	(_NUM+1)^0,c
  1513  000820                     l203:
  1514  000820  AA80               	btfss	128,5,c	;volatile
  1515  000822  EF15  F004         	goto	u3491
  1516  000826  EF17  F004         	goto	u3490
  1517  00082A                     u3491:
  1518  00082A  EF10  F004         	goto	l203
  1519  00082E                     u3490:
  1520  00082E                     l202:
  1521                           
  1522                           ;main.c: 384:                 if (PORTAbits.RA4 == 0 && NUM <= 89)
  1523  00082E  B880               	btfsc	128,4,c	;volatile
  1524  000830  EF1C  F004         	goto	u3501
  1525  000834  EF1E  F004         	goto	u3500
  1526  000838                     u3501:
  1527  000838  EF36  F004         	goto	l206
  1528  00083C                     u3500:
  1529  00083C  501A               	movf	(_NUM+1)^0,w,c
  1530  00083E  E107               	bnz	u3511
  1531  000840  0E5A               	movlw	90
  1532  000842  5C19               	subwf	_NUM^0,w,c
  1533  000844  B0D8               	btfsc	status,0,c
  1534  000846  EF27  F004         	goto	u3511
  1535  00084A  EF29  F004         	goto	u3510
  1536  00084E                     u3511:
  1537  00084E  EF36  F004         	goto	l206
  1538  000852                     u3510:
  1539  000852                     
  1540                           ;main.c: 385:                 {;main.c: 386:                     NUM = NUM + 10;
  1541  000852  0E0A               	movlw	10
  1542  000854  2419               	addwf	_NUM^0,w,c
  1543  000856  6E19               	movwf	_NUM^0,c
  1544  000858  0E00               	movlw	0
  1545  00085A  201A               	addwfc	(_NUM+1)^0,w,c
  1546  00085C  6E1A               	movwf	(_NUM+1)^0,c
  1547  00085E                     l207:
  1548  00085E  A880               	btfss	128,4,c	;volatile
  1549  000860  EF34  F004         	goto	u3521
  1550  000864  EF36  F004         	goto	u3520
  1551  000868                     u3521:
  1552  000868  EF2F  F004         	goto	l207
  1553  00086C                     u3520:
  1554  00086C                     l206:
  1555                           
  1556                           ;main.c: 390:                 if (PORTAbits.RA3 == 0 && NUM >= 10)
  1557  00086C  B680               	btfsc	128,3,c	;volatile
  1558  00086E  EF3B  F004         	goto	u3531
  1559  000872  EF3D  F004         	goto	u3530
  1560  000876                     u3531:
  1561  000876  EF55  F004         	goto	l210
  1562  00087A                     u3530:
  1563  00087A  501A               	movf	(_NUM+1)^0,w,c
  1564  00087C  E109               	bnz	u3540
  1565  00087E  0E0A               	movlw	10
  1566  000880  5C19               	subwf	_NUM^0,w,c
  1567  000882  A0D8               	btfss	status,0,c
  1568  000884  EF46  F004         	goto	u3541
  1569  000888  EF48  F004         	goto	u3540
  1570  00088C                     u3541:
  1571  00088C  EF55  F004         	goto	l210
  1572  000890                     u3540:
  1573  000890                     
  1574                           ;main.c: 391:                 {;main.c: 392:                     NUM = NUM - 10;
  1575  000890  0EF6               	movlw	246
  1576  000892  2419               	addwf	_NUM^0,w,c
  1577  000894  6E19               	movwf	_NUM^0,c
  1578  000896  0EFF               	movlw	255
  1579  000898  201A               	addwfc	(_NUM+1)^0,w,c
  1580  00089A  6E1A               	movwf	(_NUM+1)^0,c
  1581  00089C                     l211:
  1582  00089C  A680               	btfss	128,3,c	;volatile
  1583  00089E  EF53  F004         	goto	u3551
  1584  0008A2  EF55  F004         	goto	u3550
  1585  0008A6                     u3551:
  1586  0008A6  EF4E  F004         	goto	l211
  1587  0008AA                     u3550:
  1588  0008AA                     l210:
  1589                           
  1590                           ;main.c: 396:                 NUM_REC = NUM;
  1591  0008AA  C019  F017         	movff	_NUM,_NUM_REC
  1592  0008AE  C01A  F018         	movff	_NUM+1,_NUM_REC+1
  1593  0008B2                     
  1594                           ;main.c: 397:                 WriteSTLED316SData(NUM, vibration_mode);
  1595  0008B2  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1596  0008B6  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1597  0008BA  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1598  0008BE  ECDA  F00C         	call	_WriteSTLED316SData	;wreg free
  1599  0008C2                     
  1600                           ;main.c: 399:                 if (PORTBbits.RB2 == 0)
  1601  0008C2  B481               	btfsc	129,2,c	;volatile
  1602  0008C4  EF66  F004         	goto	u3561
  1603  0008C8  EF68  F004         	goto	u3560
  1604  0008CC                     u3561:
  1605  0008CC  EF78  F004         	goto	l5165
  1606  0008D0                     u3560:
  1607  0008D0                     
  1608                           ;main.c: 400:                 {;main.c: 401:                     Busy = 1;
  1609  0008D0  0E01               	movlw	1
  1610  0008D2  6E33               	movwf	_Busy^0,c
  1611                           
  1612                           ;main.c: 402:                     errorcounter = 30;
  1613  0008D4  0E1E               	movlw	30
  1614  0008D6  6E52               	movwf	_errorcounter^0,c	;volatile
  1615  0008D8  0E00               	movlw	0
  1616  0008DA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1617  0008DC  0E00               	movlw	0
  1618  0008DE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1619  0008E0  0E00               	movlw	0
  1620  0008E2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1621  0008E4                     
  1622                           ;main.c: 403:                     Homing_Again_Manual();
  1623  0008E4  EC0F  F007         	call	_Homing_Again_Manual	;wreg free
  1624  0008E8                     
  1625                           ;main.c: 404:                     Stop = 0;
  1626  0008E8  0E00               	movlw	0
  1627  0008EA  6E35               	movwf	_Stop^0,c
  1628  0008EC                     
  1629                           ;main.c: 405:                     Busy = 0;
  1630  0008EC  0E00               	movlw	0
  1631  0008EE  6E33               	movwf	_Busy^0,c
  1632  0008F0                     l5165:
  1633                           
  1634                           ;main.c: 418:                 if(Serial_Flag==1)
  1635  0008F0  0437               	decf	_Serial_Flag^0,w,c
  1636  0008F2  A4D8               	btfss	status,2,c
  1637  0008F4  EF7E  F004         	goto	u3571
  1638  0008F8  EF80  F004         	goto	u3570
  1639  0008FC                     u3571:
  1640  0008FC  EFF3  F006         	goto	l5361
  1641  000900                     u3570:
  1642  000900  EFC5  F006         	goto	l5357
  1643  000904                     l5169:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;main.c: 425:                             if(Serial_Buffer[2] == 0xF1 && Busy == 0)
  1647  000904  0EF1               	movlw	241
  1648  000906  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1649  000908  A4D8               	btfss	status,2,c
  1650  00090A  EF89  F004         	goto	u3581
  1651  00090E  EF8B  F004         	goto	u3580
  1652  000912                     u3581:
  1653  000912  EFA7  F004         	goto	l5179
  1654  000916                     u3580:
  1655  000916                     
  1656                           ; BSR set to: 0
  1657  000916  5033               	movf	_Busy^0,w,c
  1658  000918  A4D8               	btfss	status,2,c
  1659  00091A  EF91  F004         	goto	u3591
  1660  00091E  EF93  F004         	goto	u3590
  1661  000922                     u3591:
  1662  000922  EFA7  F004         	goto	l5179
  1663  000926                     u3590:
  1664  000926                     
  1665                           ; BSR set to: 0
  1666                           ;main.c: 426:                             {;main.c: 427:                                
      +                           Stop = 0;
  1667  000926  0E00               	movlw	0
  1668  000928  6E35               	movwf	_Stop^0,c
  1669                           
  1670                           ;main.c: 428:                                 Busy = 1;
  1671  00092A  0E01               	movlw	1
  1672  00092C  6E33               	movwf	_Busy^0,c
  1673  00092E                     
  1674                           ; BSR set to: 0
  1675                           ;main.c: 429:                                 NUM = NUM_REC;
  1676  00092E  C017  F019         	movff	_NUM_REC,_NUM
  1677  000932  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1678                           
  1679                           ;main.c: 431:                                 errorcounter = 30;
  1680  000936  0E1E               	movlw	30
  1681  000938  6E52               	movwf	_errorcounter^0,c	;volatile
  1682  00093A  0E00               	movlw	0
  1683  00093C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1684  00093E  0E00               	movlw	0
  1685  000940  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1686  000942  0E00               	movlw	0
  1687  000944  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1688  000946                     
  1689                           ; BSR set to: 0
  1690                           ;main.c: 432:                                 Homing_Again_Auto();
  1691  000946  ECA7  F008         	call	_Homing_Again_Auto	;wreg free
  1692                           
  1693                           ;main.c: 434:                             }
  1694  00094A  EF05  F005         	goto	l5209
  1695  00094E                     l5179:
  1696                           
  1697                           ; BSR set to: 0
  1698  00094E  0EF2               	movlw	242
  1699  000950  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1700  000952  A4D8               	btfss	status,2,c
  1701  000954  EFAE  F004         	goto	u3601
  1702  000958  EFB0  F004         	goto	u3600
  1703  00095C                     u3601:
  1704  00095C  EF05  F005         	goto	l5209
  1705  000960                     u3600:
  1706  000960                     
  1707                           ; BSR set to: 0
  1708  000960  5033               	movf	_Busy^0,w,c
  1709  000962  A4D8               	btfss	status,2,c
  1710  000964  EFB6  F004         	goto	u3611
  1711  000968  EFB8  F004         	goto	u3610
  1712  00096C                     u3611:
  1713  00096C  EF05  F005         	goto	l5209
  1714  000970                     u3610:
  1715  000970                     
  1716                           ; BSR set to: 0
  1717                           ;main.c: 436:                            {;main.c: 437:                                 
      +                          Stop = 0;
  1718  000970  0E00               	movlw	0
  1719  000972  6E35               	movwf	_Stop^0,c
  1720                           
  1721                           ;main.c: 438:                                 Busy = 1;
  1722  000974  0E01               	movlw	1
  1723  000976  6E33               	movwf	_Busy^0,c
  1724  000978                     
  1725                           ; BSR set to: 0
  1726                           ;main.c: 439:                                 NUM = NUM_REC;
  1727  000978  C017  F019         	movff	_NUM_REC,_NUM
  1728  00097C  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1729  000980                     
  1730                           ; BSR set to: 0
  1731                           ;main.c: 440:                                 WriteSTLED316SData(NUM, vibration_mode);
  1732  000980  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1733  000984  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1734  000988  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1735  00098C  ECDA  F00C         	call	_WriteSTLED316SData	;wreg free
  1736  000990                     
  1737                           ;main.c: 442:                                 errorcounter = 30;
  1738  000990  0E1E               	movlw	30
  1739  000992  6E52               	movwf	_errorcounter^0,c	;volatile
  1740  000994  0E00               	movlw	0
  1741  000996  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1742  000998  0E00               	movlw	0
  1743  00099A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1744  00099C  0E00               	movlw	0
  1745  00099E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1746  0009A0                     
  1747                           ;main.c: 443:                                 Homing_Again_Manual();
  1748  0009A0  EC0F  F007         	call	_Homing_Again_Manual	;wreg free
  1749  0009A4                     
  1750                           ;main.c: 446:                                 if(Stop == 0)
  1751  0009A4  5035               	movf	_Stop^0,w,c
  1752  0009A6  A4D8               	btfss	status,2,c
  1753  0009A8  EFD8  F004         	goto	u3621
  1754  0009AC  EFDA  F004         	goto	u3620
  1755  0009B0                     u3621:
  1756  0009B0  EF05  F005         	goto	l5209
  1757  0009B4                     u3620:
  1758  0009B4                     
  1759                           ;main.c: 447:                                 {;main.c: 448:                            
      +                                   Serial_Buffer_Out[0] = 0xA5;
  1760  0009B4  0EA5               	movlw	165
  1761  0009B6  0100               	movlb	0	; () banked
  1762  0009B8  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1763                           
  1764                           ;main.c: 449:                                     Serial_Buffer_Out[1] = 0x44;
  1765  0009BA  0E44               	movlw	68
  1766  0009BC  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  1767                           
  1768                           ;main.c: 450:                                     Serial_Buffer_Out[2] = 0xF9;
  1769  0009BE  0EF9               	movlw	249
  1770  0009C0  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  1771                           
  1772                           ;main.c: 451:                                     Serial_Buffer_Out[3] = 0X3D;
  1773  0009C2  0E3D               	movlw	61
  1774  0009C4  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  1775                           
  1776                           ;main.c: 452:                                     Serial_Buffer_Out[4] = 0x5A;
  1777  0009C6  0E5A               	movlw	90
  1778  0009C8  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  1779  0009CA                     
  1780                           ; BSR set to: 0
  1781                           ;main.c: 454:                                     INTCONbits.GIE=0;
  1782  0009CA  9EF2               	bcf	242,7,c	;volatile
  1783                           
  1784                           ;main.c: 455:                                     for (i=0; i<5;i++)
  1785  0009CC  0E00               	movlw	0
  1786  0009CE  6E16               	movwf	(_i+1)^0,c
  1787  0009D0  0E00               	movlw	0
  1788  0009D2  6E15               	movwf	_i^0,c
  1789  0009D4                     l5199:
  1790  0009D4  5016               	movf	(_i+1)^0,w,c
  1791  0009D6  E109               	bnz	u3630
  1792  0009D8  0E05               	movlw	5
  1793  0009DA  5C15               	subwf	_i^0,w,c
  1794  0009DC  A0D8               	btfss	status,0,c
  1795  0009DE  EFF3  F004         	goto	u3631
  1796  0009E2  EFF5  F004         	goto	u3630
  1797  0009E6                     u3631:
  1798  0009E6  EFF7  F004         	goto	l5203
  1799  0009EA                     u3630:
  1800  0009EA  EF04  F005         	goto	l224
  1801  0009EE                     l5203:
  1802                           
  1803                           ;main.c: 456:                                     {;main.c: 457:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  1804  0009EE  0E60               	movlw	low _Serial_Buffer_Out
  1805  0009F0  2415               	addwf	_i^0,w,c
  1806  0009F2  6ED9               	movwf	fsr2l,c
  1807  0009F4  0E00               	movlw	high _Serial_Buffer_Out
  1808  0009F6  2016               	addwfc	(_i+1)^0,w,c
  1809  0009F8  6EDA               	movwf	fsr2h,c
  1810  0009FA  50DF               	movf	indf2,w,c
  1811  0009FC  ECE9  F00F         	call	_Write1USART
  1812  000A00                     
  1813                           ;main.c: 458:                                     }
  1814  000A00  4A15               	infsnz	_i^0,f,c
  1815  000A02  2A16               	incf	(_i+1)^0,f,c
  1816  000A04  EFEA  F004         	goto	l5199
  1817  000A08                     l224:
  1818                           
  1819                           ;main.c: 459:                                     INTCONbits.GIE=1;
  1820  000A08  8EF2               	bsf	242,7,c	;volatile
  1821  000A0A                     l5209:
  1822                           
  1823                           ;main.c: 463:                                 flush();
  1824  000A0A  EC01  F00F         	call	_flush	;wreg free
  1825                           
  1826                           ;main.c: 464:                                 flushOut();
  1827  000A0E  EC1E  F00F         	call	_flushOut	;wreg free
  1828  000A12                     
  1829                           ;main.c: 465:                                 Stop = 0;
  1830  000A12  0E00               	movlw	0
  1831  000A14  6E35               	movwf	_Stop^0,c
  1832  000A16                     l5213:
  1833                           
  1834                           ;main.c: 466:                                 Busy = 0;
  1835  000A16  0E00               	movlw	0
  1836  000A18  6E33               	movwf	_Busy^0,c
  1837                           
  1838                           ;main.c: 467:                                 break;
  1839  000A1A  EFEB  F006         	goto	l5359
  1840  000A1E                     l5215:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 472:                             if(Busy==0)
  1844  000A1E  5033               	movf	_Busy^0,w,c
  1845  000A20  A4D8               	btfss	status,2,c
  1846  000A22  EF15  F005         	goto	u3641
  1847  000A26  EF17  F005         	goto	u3640
  1848  000A2A                     u3641:
  1849  000A2A  EFEB  F006         	goto	l5359
  1850  000A2E                     u3640:
  1851  000A2E                     
  1852                           ; BSR set to: 0
  1853                           ;main.c: 473:                             {;main.c: 474:                                
      +                           Busy = 1;
  1854  000A2E  0E01               	movlw	1
  1855  000A30  6E33               	movwf	_Busy^0,c
  1856  000A32                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 478:                                     pause_Time = Serial_Buffer[2];
  1859  000A32  C003  F02F         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  1860                           
  1861                           ;main.c: 479:                                     switch(pause_Time)
  1862  000A36  EF43  F005         	goto	l5235
  1863  000A3A                     l5221:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 483:                                             Motor_Pause_Time = 0;
  1867  000A3A  0E00               	movlw	0
  1868  000A3C  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1869  000A3E  0E00               	movlw	0
  1870  000A40  6E1B               	movwf	_Motor_Pause_Time^0,c
  1871                           
  1872                           ;main.c: 484:                                             pause_Time = 0x30;
  1873  000A42  0E30               	movlw	48
  1874  000A44  6E2F               	movwf	_pause_Time^0,c	;volatile
  1875                           
  1876                           ;main.c: 485:                                             break;
  1877  000A46  EF68  F005         	goto	l231
  1878  000A4A                     l5223:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 488:                                             Motor_Pause_Time = 1000;
  1882  000A4A  0E03               	movlw	3
  1883  000A4C  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1884  000A4E  0EE8               	movlw	232
  1885  000A50  6E1B               	movwf	_Motor_Pause_Time^0,c
  1886                           
  1887                           ;main.c: 489:                                             break;
  1888  000A52  EF68  F005         	goto	l231
  1889  000A56                     l5225:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 492:                                             Motor_Pause_Time = 2000;
  1893  000A56  0E07               	movlw	7
  1894  000A58  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1895  000A5A  0ED0               	movlw	208
  1896  000A5C  6E1B               	movwf	_Motor_Pause_Time^0,c
  1897                           
  1898                           ;main.c: 493:                                             break;
  1899  000A5E  EF68  F005         	goto	l231
  1900  000A62                     l5227:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;main.c: 496:                                             Motor_Pause_Time = 3000;
  1904  000A62  0E0B               	movlw	11
  1905  000A64  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1906  000A66  0EB8               	movlw	184
  1907  000A68  6E1B               	movwf	_Motor_Pause_Time^0,c
  1908                           
  1909                           ;main.c: 497:                                             break;
  1910  000A6A  EF68  F005         	goto	l231
  1911  000A6E                     l5229:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;main.c: 500:                                             Motor_Pause_Time = 4000;
  1915  000A6E  0E0F               	movlw	15
  1916  000A70  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1917  000A72  0EA0               	movlw	160
  1918  000A74  6E1B               	movwf	_Motor_Pause_Time^0,c
  1919                           
  1920                           ;main.c: 501:                                             break;
  1921  000A76  EF68  F005         	goto	l231
  1922  000A7A                     l5231:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 504:                                             Motor_Pause_Time = 5000;
  1926  000A7A  0E13               	movlw	19
  1927  000A7C  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1928  000A7E  0E88               	movlw	136
  1929  000A80  6E1B               	movwf	_Motor_Pause_Time^0,c
  1930                           
  1931                           ;main.c: 505:                                             break;
  1932  000A82  EF68  F005         	goto	l231
  1933  000A86                     l5235:
  1934                           
  1935                           ; BSR set to: 0
  1936  000A86  502F               	movf	_pause_Time^0,w,c	;volatile
  1937  000A88  6F86               	movwf	??_main& (0+255),b
  1938  000A8A  6B87               	clrf	(??_main+1)& (0+255),b
  1939                           
  1940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1941                           ; Switch size 1, requested type "simple"
  1942                           ; Number of cases is 1, Range of values is 0 to 0
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte            4     3 (average)
  1946                           ;	Chosen strategy is simple_byte
  1947  000A8C  5187               	movf	(??_main+1)& (0+255),w,b
  1948  000A8E  0A00               	xorlw	0	; case 0
  1949  000A90  B4D8               	btfsc	status,2,c
  1950  000A92  EF4D  F005         	goto	l5681
  1951  000A96  EF1D  F005         	goto	l5221
  1952  000A9A                     l5681:
  1953                           
  1954                           ; BSR set to: 0
  1955                           ; Switch size 1, requested type "simple"
  1956                           ; Number of cases is 6, Range of values is 48 to 53
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte           19    10 (average)
  1960                           ;	Chosen strategy is simple_byte
  1961  000A9A  5186               	movf	??_main& (0+255),w,b
  1962  000A9C  0A30               	xorlw	48	; case 48
  1963  000A9E  B4D8               	btfsc	status,2,c
  1964  000AA0  EF1D  F005         	goto	l5221
  1965  000AA4  0A01               	xorlw	1	; case 49
  1966  000AA6  B4D8               	btfsc	status,2,c
  1967  000AA8  EF25  F005         	goto	l5223
  1968  000AAC  0A03               	xorlw	3	; case 50
  1969  000AAE  B4D8               	btfsc	status,2,c
  1970  000AB0  EF2B  F005         	goto	l5225
  1971  000AB4  0A01               	xorlw	1	; case 51
  1972  000AB6  B4D8               	btfsc	status,2,c
  1973  000AB8  EF31  F005         	goto	l5227
  1974  000ABC  0A07               	xorlw	7	; case 52
  1975  000ABE  B4D8               	btfsc	status,2,c
  1976  000AC0  EF37  F005         	goto	l5229
  1977  000AC4  0A01               	xorlw	1	; case 53
  1978  000AC6  B4D8               	btfsc	status,2,c
  1979  000AC8  EF3D  F005         	goto	l5231
  1980  000ACC  EF1D  F005         	goto	l5221
  1981  000AD0                     l231:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;main.c: 510:                                 INTCONbits.GIE=0;
  1985  000AD0  9EF2               	bcf	242,7,c	;volatile
  1986  000AD2                     
  1987                           ; BSR set to: 0
  1988                           ;main.c: 511:                                 write_i2c(0x0060, pause_Time);
  1989  000AD2  0E60               	movlw	96
  1990  000AD4  6F80               	movwf	write_i2c@address& (0+255),b
  1991  000AD6  0E00               	movlw	0
  1992  000AD8  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1993  000ADA  0E00               	movlw	0
  1994  000ADC  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1995  000ADE  0E00               	movlw	0
  1996  000AE0  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1997  000AE2  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
  1998  000AE6  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1999  000AE8  EC79  F00E         	call	_write_i2c	;wreg free
  2000  000AEC                     
  2001                           ;main.c: 512:                                 INTCONbits.GIE=1;
  2002  000AEC  8EF2               	bsf	242,7,c	;volatile
  2003  000AEE                     
  2004                           ;main.c: 514:                                 flush();
  2005  000AEE  EC01  F00F         	call	_flush	;wreg free
  2006  000AF2  EF0B  F005         	goto	l5213
  2007  000AF6                     l5245:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 522:                             if(Busy==0)
  2011  000AF6  5033               	movf	_Busy^0,w,c
  2012  000AF8  A4D8               	btfss	status,2,c
  2013  000AFA  EF81  F005         	goto	u3651
  2014  000AFE  EF83  F005         	goto	u3650
  2015  000B02                     u3651:
  2016  000B02  EFEB  F006         	goto	l5359
  2017  000B06                     u3650:
  2018  000B06                     
  2019                           ; BSR set to: 0
  2020                           ;main.c: 523:                             {;main.c: 524:                                
      +                           if (Serial_Buffer[2] == 0x00)
  2021  000B06  5003               	movf	(_Serial_Buffer+2)^0,w,c
  2022  000B08  A4D8               	btfss	status,2,c
  2023  000B0A  EF89  F005         	goto	u3661
  2024  000B0E  EF8B  F005         	goto	u3660
  2025  000B12                     u3661:
  2026  000B12  EFFC  F005         	goto	l5287
  2027  000B16                     u3660:
  2028  000B16                     
  2029                           ; BSR set to: 0
  2030                           ;main.c: 525:                                 {;main.c: 526:                            
      +                                   Busy = 1;
  2031  000B16  0E01               	movlw	1
  2032  000B18  6E33               	movwf	_Busy^0,c
  2033  000B1A                     
  2034                           ; BSR set to: 0
  2035                           ;main.c: 528:                                     INTCONbits.GIE=0;
  2036  000B1A  9EF2               	bcf	242,7,c	;volatile
  2037  000B1C                     
  2038                           ; BSR set to: 0
  2039                           ;main.c: 529:                                     pause_Time = read_i2c(0x0060);
  2040  000B1C  0E60               	movlw	96
  2041  000B1E  6F80               	movwf	read_i2c@address& (0+255),b
  2042  000B20  0E00               	movlw	0
  2043  000B22  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2044  000B24  0E00               	movlw	0
  2045  000B26  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2046  000B28  0E00               	movlw	0
  2047  000B2A  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2048  000B2C  ECF0  F00D         	call	_read_i2c	;wreg free
  2049  000B30  0100               	movlb	0	; () banked
  2050  000B32  5180               	movf	?_read_i2c& (0+255),w,b
  2051  000B34  6E2F               	movwf	_pause_Time^0,c	;volatile
  2052  000B36                     
  2053                           ; BSR set to: 0
  2054                           ;main.c: 530:                                     vib_Time = read_i2c(0x0040);
  2055  000B36  0E40               	movlw	64
  2056  000B38  6F80               	movwf	read_i2c@address& (0+255),b
  2057  000B3A  0E00               	movlw	0
  2058  000B3C  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2059  000B3E  0E00               	movlw	0
  2060  000B40  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2061  000B42  0E00               	movlw	0
  2062  000B44  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2063  000B46  ECF0  F00D         	call	_read_i2c	;wreg free
  2064  000B4A  0100               	movlb	0	; () banked
  2065  000B4C  5180               	movf	?_read_i2c& (0+255),w,b
  2066  000B4E  6E2E               	movwf	_vib_Time^0,c	;volatile
  2067  000B50                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 531:                                     Motor_Speed = read_i2c(0x0030);
  2070  000B50  0E30               	movlw	48
  2071  000B52  6F80               	movwf	read_i2c@address& (0+255),b
  2072  000B54  0E00               	movlw	0
  2073  000B56  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2074  000B58  0E00               	movlw	0
  2075  000B5A  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2076  000B5C  0E00               	movlw	0
  2077  000B5E  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2078  000B60  ECF0  F00D         	call	_read_i2c	;wreg free
  2079  000B64  C080  F021         	movff	?_read_i2c,_Motor_Speed
  2080  000B68  C081  F022         	movff	?_read_i2c+1,_Motor_Speed+1
  2081  000B6C                     
  2082                           ;main.c: 532:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2083  000B6C  0E50               	movlw	80
  2084  000B6E  0100               	movlb	0	; () banked
  2085  000B70  6F80               	movwf	read_i2c@address& (0+255),b
  2086  000B72  0E00               	movlw	0
  2087  000B74  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2088  000B76  0E00               	movlw	0
  2089  000B78  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2090  000B7A  0E00               	movlw	0
  2091  000B7C  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2092  000B7E  ECF0  F00D         	call	_read_i2c	;wreg free
  2093  000B82  0100               	movlb	0	; () banked
  2094  000B84  5180               	movf	?_read_i2c& (0+255),w,b
  2095  000B86  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  2096  000B88                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 533:                                     INTCONbits.GIE=1;
  2099  000B88  8EF2               	bsf	242,7,c	;volatile
  2100                           
  2101                           ;main.c: 535:                                     Serial_Buffer_Out[0] = 0x51;
  2102  000B8A  0E51               	movlw	81
  2103  000B8C  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2104  000B8E                     
  2105                           ; BSR set to: 0
  2106                           ;main.c: 536:                                     Serial_Buffer_Out[1] = pause_Time;
  2107  000B8E  C02F  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2108  000B92                     
  2109                           ; BSR set to: 0
  2110                           ;main.c: 537:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2111  000B92  C021  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2112  000B96                     
  2113                           ; BSR set to: 0
  2114                           ;main.c: 538:                                     Serial_Buffer_Out[3] = vib_Time;
  2115  000B96  C02E  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2116  000B9A                     
  2117                           ; BSR set to: 0
  2118                           ;main.c: 539:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2119  000B9A  C02D  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2120  000B9E                     
  2121                           ; BSR set to: 0
  2122                           ;main.c: 541:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2123  000B9E  0E02               	movlw	2
  2124  000BA0  0100               	movlb	0	; () banked
  2125  000BA2  6F87               	movwf	(??_main+1)& (0+255),b
  2126  000BA4  0E04               	movlw	4
  2127  000BA6  6F86               	movwf	??_main& (0+255),b
  2128  000BA8  0EBA               	movlw	186
  2129  000BAA                     u3737:
  2130  000BAA  2EE8               	decfsz	wreg,f,c
  2131  000BAC  D7FE               	bra	u3737
  2132  000BAE  2F86               	decfsz	??_main& (0+255),f,b
  2133  000BB0  D7FC               	bra	u3737
  2134  000BB2  2F87               	decfsz	(??_main+1)& (0+255),f,b
  2135  000BB4  D7FA               	bra	u3737
  2136  000BB6  F000               	nop	
  2137  000BB8                     
  2138                           ;main.c: 543:                                     INTCONbits.GIE=0;
  2139  000BB8  9EF2               	bcf	242,7,c	;volatile
  2140  000BBA                     
  2141                           ;main.c: 544:                                     for (i=0; i<5;i++)
  2142  000BBA  0E00               	movlw	0
  2143  000BBC  6E16               	movwf	(_i+1)^0,c
  2144  000BBE  0E00               	movlw	0
  2145  000BC0  6E15               	movwf	_i^0,c
  2146  000BC2                     l5277:
  2147  000BC2  5016               	movf	(_i+1)^0,w,c
  2148  000BC4  E109               	bnz	u3670
  2149  000BC6  0E05               	movlw	5
  2150  000BC8  5C15               	subwf	_i^0,w,c
  2151  000BCA  A0D8               	btfss	status,0,c
  2152  000BCC  EFEA  F005         	goto	u3671
  2153  000BD0  EFEC  F005         	goto	u3670
  2154  000BD4                     u3671:
  2155  000BD4  EFEE  F005         	goto	l5281
  2156  000BD8                     u3670:
  2157  000BD8  EFFB  F005         	goto	l241
  2158  000BDC                     l5281:
  2159                           
  2160                           ;main.c: 545:                                     {;main.c: 546:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  2161  000BDC  0E60               	movlw	low _Serial_Buffer_Out
  2162  000BDE  2415               	addwf	_i^0,w,c
  2163  000BE0  6ED9               	movwf	fsr2l,c
  2164  000BE2  0E00               	movlw	high _Serial_Buffer_Out
  2165  000BE4  2016               	addwfc	(_i+1)^0,w,c
  2166  000BE6  6EDA               	movwf	fsr2h,c
  2167  000BE8  50DF               	movf	indf2,w,c
  2168  000BEA  ECE9  F00F         	call	_Write1USART
  2169  000BEE                     
  2170                           ;main.c: 547:                                     }
  2171  000BEE  4A15               	infsnz	_i^0,f,c
  2172  000BF0  2A16               	incf	(_i+1)^0,f,c
  2173  000BF2  EFE1  F005         	goto	l5277
  2174  000BF6                     l241:
  2175                           
  2176                           ;main.c: 548:                                     INTCONbits.GIE=1;
  2177  000BF6  8EF2               	bsf	242,7,c	;volatile
  2178  000BF8                     l5287:
  2179                           
  2180                           ;main.c: 550:                                 flushOut();
  2181  000BF8  EC1E  F00F         	call	_flushOut	;wreg free
  2182  000BFC  EF0B  F005         	goto	l5213
  2183  000C00                     l5291:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;main.c: 557:                             if(Busy==0)
  2187  000C00  5033               	movf	_Busy^0,w,c
  2188  000C02  A4D8               	btfss	status,2,c
  2189  000C04  EF06  F006         	goto	u3681
  2190  000C08  EF08  F006         	goto	u3680
  2191  000C0C                     u3681:
  2192  000C0C  EFEB  F006         	goto	l5359
  2193  000C10                     u3680:
  2194  000C10                     
  2195                           ; BSR set to: 0
  2196                           ;main.c: 558:                             {;main.c: 559:                                
      +                           Busy = 1;
  2197  000C10  0E01               	movlw	1
  2198  000C12  6E33               	movwf	_Busy^0,c
  2199  000C14                     
  2200                           ; BSR set to: 0
  2201                           ;main.c: 560:                                 PWM_Duty_Cycle = Serial_Buffer[2];
  2202  000C14  C003  F02C         	movff	_Serial_Buffer+2,_PWM_Duty_Cycle	;volatile
  2203                           
  2204                           ;main.c: 562:                                 switch(PWM_Duty_Cycle)
  2205  000C18  EF1A  F006         	goto	l5305
  2206  000C1C                     l5297:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 565:                                         PWM_reg=0x00;
  2210  000C1C  0E00               	movlw	0
  2211  000C1E  6E58               	movwf	_PWM_reg^0,c
  2212                           
  2213                           ;main.c: 566:                                         break;
  2214  000C20  EF33  F006         	goto	l246
  2215  000C24                     l5299:
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;main.c: 570:                                         PWM_reg=0x3F;
  2219  000C24  0E3F               	movlw	63
  2220  000C26  6E58               	movwf	_PWM_reg^0,c
  2221                           
  2222                           ;main.c: 571:                                         break;
  2223  000C28  EF33  F006         	goto	l246
  2224  000C2C                     l5301:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 574:                                         PWM_reg=0x7F;
  2228  000C2C  0E7F               	movlw	127
  2229  000C2E  6E58               	movwf	_PWM_reg^0,c
  2230                           
  2231                           ;main.c: 575:                                         break;
  2232  000C30  EF33  F006         	goto	l246
  2233  000C34                     l5305:
  2234                           
  2235                           ; BSR set to: 0
  2236  000C34  502C               	movf	_PWM_Duty_Cycle^0,w,c	;volatile
  2237  000C36  6F86               	movwf	??_main& (0+255),b
  2238  000C38  6B87               	clrf	(??_main+1)& (0+255),b
  2239                           
  2240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2241                           ; Switch size 1, requested type "simple"
  2242                           ; Number of cases is 1, Range of values is 0 to 0
  2243                           ; switch strategies available:
  2244                           ; Name         Instructions Cycles
  2245                           ; simple_byte            4     3 (average)
  2246                           ;	Chosen strategy is simple_byte
  2247  000C3A  5187               	movf	(??_main+1)& (0+255),w,b
  2248  000C3C  0A00               	xorlw	0	; case 0
  2249  000C3E  B4D8               	btfsc	status,2,c
  2250  000C40  EF24  F006         	goto	l5683
  2251  000C44  EF12  F006         	goto	l5299
  2252  000C48                     l5683:
  2253                           
  2254                           ; BSR set to: 0
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 3, Range of values is 0 to 127
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           10     6 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  000C48  5186               	movf	??_main& (0+255),w,b
  2262  000C4A  0A00               	xorlw	0	; case 0
  2263  000C4C  B4D8               	btfsc	status,2,c
  2264  000C4E  EF0E  F006         	goto	l5297
  2265  000C52  0A3F               	xorlw	63	; case 63
  2266  000C54  B4D8               	btfsc	status,2,c
  2267  000C56  EF12  F006         	goto	l5299
  2268  000C5A  0A40               	xorlw	64	; case 127
  2269  000C5C  B4D8               	btfsc	status,2,c
  2270  000C5E  EF16  F006         	goto	l5301
  2271  000C62  EF12  F006         	goto	l5299
  2272  000C66                     l246:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 577:                                     INTCONbits.GIE=0;
  2276  000C66  9EF2               	bcf	242,7,c	;volatile
  2277  000C68                     
  2278                           ; BSR set to: 0
  2279                           ;main.c: 578:                                     write_i2c(0x0030,PWM_reg);
  2280  000C68  0E30               	movlw	48
  2281  000C6A  6F80               	movwf	write_i2c@address& (0+255),b
  2282  000C6C  0E00               	movlw	0
  2283  000C6E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2284  000C70  0E00               	movlw	0
  2285  000C72  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2286  000C74  0E00               	movlw	0
  2287  000C76  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2288  000C78  C058  F084         	movff	_PWM_reg,write_i2c@data
  2289  000C7C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2290  000C7E  EC79  F00E         	call	_write_i2c	;wreg free
  2291  000C82                     
  2292                           ;main.c: 579:                                     INTCONbits.GIE=1;
  2293  000C82  8EF2               	bsf	242,7,c	;volatile
  2294  000C84  EF0B  F005         	goto	l5213
  2295  000C88                     l5313:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 587:                             if(Busy == 0)
  2299  000C88  5033               	movf	_Busy^0,w,c
  2300  000C8A  A4D8               	btfss	status,2,c
  2301  000C8C  EF4A  F006         	goto	u3691
  2302  000C90  EF4C  F006         	goto	u3690
  2303  000C94                     u3691:
  2304  000C94  EFA4  F006         	goto	l5339
  2305  000C98                     u3690:
  2306  000C98                     
  2307                           ; BSR set to: 0
  2308                           ;main.c: 588:                             {;main.c: 589:                                
      +                           Busy = 1;
  2309  000C98  0E01               	movlw	1
  2310  000C9A  6E33               	movwf	_Busy^0,c
  2311  000C9C                     
  2312                           ; BSR set to: 0
  2313                           ;main.c: 590:                                 vib_Time = Serial_Buffer[2];
  2314  000C9C  C003  F02E         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2315                           
  2316                           ;main.c: 592:                                 switch(vib_Time)
  2317  000CA0  EF72  F006         	goto	l5331
  2318  000CA4                     l5319:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;main.c: 595:                                         Vmotor_Time=1000;
  2322  000CA4  0E03               	movlw	3
  2323  000CA6  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2324  000CA8  0EE8               	movlw	232
  2325  000CAA  6E56               	movwf	_Vmotor_Time^0,c
  2326                           
  2327                           ;main.c: 596:                                         break;
  2328  000CAC  EF93  F006         	goto	l254
  2329  000CB0                     l5321:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 600:                                         Vmotor_Time=2000;
  2333  000CB0  0E07               	movlw	7
  2334  000CB2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2335  000CB4  0ED0               	movlw	208
  2336  000CB6  6E56               	movwf	_Vmotor_Time^0,c
  2337                           
  2338                           ;main.c: 601:                                         vib_Time=0x82;
  2339  000CB8  0E82               	movlw	130
  2340  000CBA  6E2E               	movwf	_vib_Time^0,c	;volatile
  2341                           
  2342                           ;main.c: 602:                                         break;
  2343  000CBC  EF93  F006         	goto	l254
  2344  000CC0                     l5323:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;main.c: 605:                                         Vmotor_Time=3000;
  2348  000CC0  0E0B               	movlw	11
  2349  000CC2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2350  000CC4  0EB8               	movlw	184
  2351  000CC6  6E56               	movwf	_Vmotor_Time^0,c
  2352                           
  2353                           ;main.c: 606:                                         break;
  2354  000CC8  EF93  F006         	goto	l254
  2355  000CCC                     l5325:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;main.c: 609:                                         Vmotor_Time=4000;
  2359  000CCC  0E0F               	movlw	15
  2360  000CCE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2361  000CD0  0EA0               	movlw	160
  2362  000CD2  6E56               	movwf	_Vmotor_Time^0,c
  2363                           
  2364                           ;main.c: 610:                                         break;
  2365  000CD4  EF93  F006         	goto	l254
  2366  000CD8                     l5327:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 613:                                         Vmotor_Time=5000;
  2370  000CD8  0E13               	movlw	19
  2371  000CDA  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2372  000CDC  0E88               	movlw	136
  2373  000CDE  6E56               	movwf	_Vmotor_Time^0,c
  2374                           
  2375                           ;main.c: 614:                                         break;
  2376  000CE0  EF93  F006         	goto	l254
  2377  000CE4                     l5331:
  2378                           
  2379                           ; BSR set to: 0
  2380  000CE4  502E               	movf	_vib_Time^0,w,c	;volatile
  2381  000CE6  6F86               	movwf	??_main& (0+255),b
  2382  000CE8  6B87               	clrf	(??_main+1)& (0+255),b
  2383                           
  2384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 1, Range of values is 0 to 0
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte            4     3 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391  000CEA  5187               	movf	(??_main+1)& (0+255),w,b
  2392  000CEC  0A00               	xorlw	0	; case 0
  2393  000CEE  B4D8               	btfsc	status,2,c
  2394  000CF0  EF7C  F006         	goto	l5685
  2395  000CF4  EF58  F006         	goto	l5321
  2396  000CF8                     l5685:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 5, Range of values is 129 to 133
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte           16     9 (average)
  2404                           ;	Chosen strategy is simple_byte
  2405  000CF8  5186               	movf	??_main& (0+255),w,b
  2406  000CFA  0A81               	xorlw	129	; case 129
  2407  000CFC  B4D8               	btfsc	status,2,c
  2408  000CFE  EF52  F006         	goto	l5319
  2409  000D02  0A03               	xorlw	3	; case 130
  2410  000D04  B4D8               	btfsc	status,2,c
  2411  000D06  EF58  F006         	goto	l5321
  2412  000D0A  0A01               	xorlw	1	; case 131
  2413  000D0C  B4D8               	btfsc	status,2,c
  2414  000D0E  EF60  F006         	goto	l5323
  2415  000D12  0A07               	xorlw	7	; case 132
  2416  000D14  B4D8               	btfsc	status,2,c
  2417  000D16  EF66  F006         	goto	l5325
  2418  000D1A  0A01               	xorlw	1	; case 133
  2419  000D1C  B4D8               	btfsc	status,2,c
  2420  000D1E  EF6C  F006         	goto	l5327
  2421  000D22  EF58  F006         	goto	l5321
  2422  000D26                     l254:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 616:                                     INTCONbits.GIE=0;
  2426  000D26  9EF2               	bcf	242,7,c	;volatile
  2427  000D28                     
  2428                           ; BSR set to: 0
  2429                           ;main.c: 617:                                     write_i2c(0x0040,vib_Time);
  2430  000D28  0E40               	movlw	64
  2431  000D2A  6F80               	movwf	write_i2c@address& (0+255),b
  2432  000D2C  0E00               	movlw	0
  2433  000D2E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2434  000D30  0E00               	movlw	0
  2435  000D32  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2436  000D34  0E00               	movlw	0
  2437  000D36  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2438  000D38  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  2439  000D3C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2440  000D3E  EC79  F00E         	call	_write_i2c	;wreg free
  2441  000D42                     
  2442                           ;main.c: 618:                                     INTCONbits.GIE=1;
  2443  000D42  8EF2               	bsf	242,7,c	;volatile
  2444  000D44                     
  2445                           ;main.c: 620:                                     Busy = 0;
  2446  000D44  0E00               	movlw	0
  2447  000D46  6E33               	movwf	_Busy^0,c
  2448  000D48                     l5339:
  2449                           
  2450                           ;main.c: 625:                             if(Busy == 0)
  2451  000D48  5033               	movf	_Busy^0,w,c
  2452  000D4A  A4D8               	btfss	status,2,c
  2453  000D4C  EFAA  F006         	goto	u3701
  2454  000D50  EFAC  F006         	goto	u3700
  2455  000D54                     u3701:
  2456  000D54  EFEB  F006         	goto	l5359
  2457  000D58                     u3700:
  2458  000D58                     
  2459                           ;main.c: 626:                             {;main.c: 627:                                
      +                           Busy = 1;
  2460  000D58  0E01               	movlw	1
  2461  000D5A  6E33               	movwf	_Busy^0,c
  2462  000D5C                     
  2463                           ;main.c: 628:                                 delay_motor_stop_time = Serial_Buffer[2];
  2464  000D5C  C003  F02D         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2465  000D60                     
  2466                           ;main.c: 629:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2467  000D60  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2468  000D64  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2469  000D66                     
  2470                           ;main.c: 631:                                 INTCONbits.GIE=0;
  2471  000D66  9EF2               	bcf	242,7,c	;volatile
  2472  000D68                     
  2473                           ;main.c: 632:                                 write_i2c(0x0050,delay_motor_stop_time);
  2474  000D68  0E50               	movlw	80
  2475  000D6A  0100               	movlb	0	; () banked
  2476  000D6C  6F80               	movwf	write_i2c@address& (0+255),b
  2477  000D6E  0E00               	movlw	0
  2478  000D70  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2479  000D72  0E00               	movlw	0
  2480  000D74  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2481  000D76  0E00               	movlw	0
  2482  000D78  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2483  000D7A  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2484  000D7E  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2485  000D80  EC79  F00E         	call	_write_i2c	;wreg free
  2486  000D84                     
  2487                           ;main.c: 633:                                 INTCONbits.GIE=1;
  2488  000D84  8EF2               	bsf	242,7,c	;volatile
  2489  000D86  EF0B  F005         	goto	l5213
  2490  000D8A                     l5357:
  2491  000D8A  5002               	movf	(_Serial_Buffer+1)^0,w,c
  2492  000D8C  0100               	movlb	0	; () banked
  2493  000D8E  6F86               	movwf	??_main& (0+255),b
  2494  000D90  6B87               	clrf	(??_main+1)& (0+255),b
  2495                           
  2496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2497                           ; Switch size 1, requested type "simple"
  2498                           ; Number of cases is 1, Range of values is 0 to 0
  2499                           ; switch strategies available:
  2500                           ; Name         Instructions Cycles
  2501                           ; simple_byte            4     3 (average)
  2502                           ;	Chosen strategy is simple_byte
  2503  000D92  5187               	movf	(??_main+1)& (0+255),w,b
  2504  000D94  0A00               	xorlw	0	; case 0
  2505  000D96  B4D8               	btfsc	status,2,c
  2506  000D98  EFD0  F006         	goto	l5687
  2507  000D9C  EFEB  F006         	goto	l5359
  2508  000DA0                     l5687:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ; Switch size 1, requested type "simple"
  2512                           ; Number of cases is 6, Range of values is 35 to 102
  2513                           ; switch strategies available:
  2514                           ; Name         Instructions Cycles
  2515                           ; simple_byte           19    10 (average)
  2516                           ;	Chosen strategy is simple_byte
  2517  000DA0  5186               	movf	??_main& (0+255),w,b
  2518  000DA2  0A23               	xorlw	35	; case 35
  2519  000DA4  B4D8               	btfsc	status,2,c
  2520  000DA6  EF0F  F005         	goto	l5215
  2521  000DAA  0A67               	xorlw	103	; case 68
  2522  000DAC  B4D8               	btfsc	status,2,c
  2523  000DAE  EF82  F004         	goto	l5169
  2524  000DB2  0A15               	xorlw	21	; case 81
  2525  000DB4  B4D8               	btfsc	status,2,c
  2526  000DB6  EF7B  F005         	goto	l5245
  2527  000DBA  0A35               	xorlw	53	; case 100
  2528  000DBC  B4D8               	btfsc	status,2,c
  2529  000DBE  EF00  F006         	goto	l5291
  2530  000DC2  0A01               	xorlw	1	; case 101
  2531  000DC4  B4D8               	btfsc	status,2,c
  2532  000DC6  EF44  F006         	goto	l5313
  2533  000DCA  0A03               	xorlw	3	; case 102
  2534  000DCC  B4D8               	btfsc	status,2,c
  2535  000DCE  EFA4  F006         	goto	l5339
  2536  000DD2  EFEB  F006         	goto	l5359
  2537  000DD6                     l5359:
  2538                           
  2539                           ;main.c: 642:                     Serial_Flag = 0;
  2540  000DD6  0E00               	movlw	0
  2541  000DD8  6E37               	movwf	_Serial_Flag^0,c
  2542                           
  2543                           ;main.c: 643:                     Serial_GData = 0;
  2544  000DDA  0E00               	movlw	0
  2545  000DDC  6E36               	movwf	_Serial_GData^0,c
  2546                           
  2547                           ;main.c: 644:                     OpMode = MANUAL_MODE;
  2548  000DDE  0E00               	movlw	0
  2549  000DE0  6E30               	movwf	_OpMode^0,c	;volatile
  2550                           
  2551                           ;main.c: 645:                 }
  2552  000DE2  EFA4  F003         	goto	l191
  2553  000DE6                     l5361:
  2554                           
  2555                           ;main.c: 647:                 {;main.c: 648:                     OpMode = MANUAL_MODE;
  2556  000DE6  0E00               	movlw	0
  2557  000DE8  6E30               	movwf	_OpMode^0,c	;volatile
  2558  000DEA  EFA4  F003         	goto	l191
  2559  000DEE                     l5363:
  2560  000DEE  5030               	movf	_OpMode^0,w,c	;volatile
  2561  000DF0  0100               	movlb	0	; () banked
  2562  000DF2  6F86               	movwf	??_main& (0+255),b
  2563  000DF4  6B87               	clrf	(??_main+1)& (0+255),b
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  000DF6  5187               	movf	(??_main+1)& (0+255),w,b
  2573  000DF8  0A00               	xorlw	0	; case 0
  2574  000DFA  B4D8               	btfsc	status,2,c
  2575  000DFC  EF02  F007         	goto	l5689
  2576  000E00  EFA4  F003         	goto	l191
  2577  000E04                     l5689:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 2, Range of values is 0 to 2
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            7     4 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  000E04  5186               	movf	??_main& (0+255),w,b
  2587  000E06  0A00               	xorlw	0	; case 0
  2588  000E08  B4D8               	btfsc	status,2,c
  2589  000E0A  EFB1  F003         	goto	l193
  2590  000E0E  0A02               	xorlw	2	; case 2
  2591  000E10  B4D8               	btfsc	status,2,c
  2592  000E12  EF78  F004         	goto	l5165
  2593  000E16  EFA4  F003         	goto	l191
  2594  000E1A  EF4D  F001         	goto	start
  2595  000E1E                     __end_of_main:
  2596                           	opt callstack 0
  2597                           
  2598 ;; *************** function _read_i2c *****************
  2599 ;; Defined at:
  2600 ;;		line 118 in file "i2c.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  address         4    0[BANK0 ] long 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  read_byte       2   20[COMRAM] int 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2    0[BANK0 ] int 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:        6 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		___aldiv
  2623 ;;		_i2c_Address
  2624 ;;		_i2c_Read
  2625 ;;		_i2c_Restart
  2626 ;;		_i2c_Start
  2627 ;;		_i2c_Stop
  2628 ;;		_i2c_Write
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text1
  2635  001BE0                     __ptext1:
  2636                           	opt callstack 0
  2637  001BE0                     _read_i2c:
  2638                           	opt callstack 26
  2639  001BE0                     
  2640                           ;i2c.c: 118: int read_i2c(long address);i2c.c: 119: {;i2c.c: 120:  int read_byte;;i2c.c:
      +                           123:  i2c_Start();
  2641  001BE0  EC34  F010         	call	_i2c_Start	;wreg free
  2642                           
  2643                           ;i2c.c: 124:  i2c_Address(0xA0, 0);
  2644  001BE4  0E00               	movlw	0
  2645  001BE6  6E3F               	movwf	i2c_Address@mode^0,c
  2646  001BE8  0EA0               	movlw	160
  2647  001BEA  ECFF  F00F         	call	_i2c_Address
  2648                           
  2649                           ;i2c.c: 125:  i2c_Write((unsigned char)(address/0x100));
  2650  001BEE  C080  F03E         	movff	read_i2c@address,___aldiv@dividend
  2651  001BF2  C081  F03F         	movff	read_i2c@address+1,___aldiv@dividend+1
  2652  001BF6  C082  F040         	movff	read_i2c@address+2,___aldiv@dividend+2
  2653  001BFA  C083  F041         	movff	read_i2c@address+3,___aldiv@dividend+3
  2654  001BFE  0E00               	movlw	0
  2655  001C00  6E42               	movwf	___aldiv@divisor^0,c
  2656  001C02  0E01               	movlw	1
  2657  001C04  6E43               	movwf	(___aldiv@divisor+1)^0,c
  2658  001C06  0E00               	movlw	0
  2659  001C08  6E44               	movwf	(___aldiv@divisor+2)^0,c
  2660  001C0A  0E00               	movlw	0
  2661  001C0C  6E45               	movwf	(___aldiv@divisor+3)^0,c
  2662  001C0E  ECBA  F009         	call	___aldiv	;wreg free
  2663  001C12  503E               	movf	?___aldiv^0,w,c
  2664  001C14  EC10  F010         	call	_i2c_Write
  2665                           
  2666                           ;i2c.c: 126:  i2c_Write((unsigned char)(address&0xFF));
  2667  001C18  0100               	movlb	0	; () banked
  2668  001C1A  5180               	movf	read_i2c@address& (0+255),w,b
  2669  001C1C  EC10  F010         	call	_i2c_Write
  2670                           
  2671                           ;i2c.c: 127:  i2c_Restart();
  2672  001C20  EC2C  F010         	call	_i2c_Restart	;wreg free
  2673                           
  2674                           ;i2c.c: 128:  i2c_Address(0xA0, 1);
  2675  001C24  0E01               	movlw	1
  2676  001C26  6E3F               	movwf	i2c_Address@mode^0,c
  2677  001C28  0EA0               	movlw	160
  2678  001C2A  ECFF  F00F         	call	_i2c_Address
  2679                           
  2680                           ;i2c.c: 129:  read_byte = i2c_Read(0);
  2681  001C2E  0E00               	movlw	0
  2682  001C30  EC3B  F00F         	call	_i2c_Read
  2683  001C34  C03F  F04C         	movff	?_i2c_Read,read_i2c@read_byte
  2684  001C38  C040  F04D         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2685                           
  2686                           ;i2c.c: 133:     i2c_Stop();
  2687  001C3C  EC30  F010         	call	_i2c_Stop	;wreg free
  2688  001C40                     
  2689                           ;i2c.c: 134:  return (read_byte);
  2690  001C40  C04C  F080         	movff	read_i2c@read_byte,?_read_i2c
  2691  001C44  C04D  F081         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2692  001C48  0012               	return		;funcret
  2693  001C4A                     __end_of_read_i2c:
  2694                           	opt callstack 0
  2695                           
  2696 ;; *************** function _i2c_Restart *****************
  2697 ;; Defined at:
  2698 ;;		line 53 in file "i2c.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    3
  2719 ;; This function calls:
  2720 ;;		_i2c_Wait
  2721 ;; This function is called by:
  2722 ;;		_read_i2c
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text2
  2727  002058                     __ptext2:
  2728                           	opt callstack 0
  2729  002058                     _i2c_Restart:
  2730                           	opt callstack 26
  2731  002058                     
  2732                           ;i2c.c: 54:   i2c_Wait();
  2733  002058  EC9A  F00F         	call	_i2c_Wait	;wreg free
  2734  00205C                     
  2735                           ;i2c.c: 55:  RSEN2=1;
  2736  00205C  826B               	bsf	3947,1,c	;volatile
  2737  00205E  0012               	return		;funcret
  2738  002060                     __end_of_i2c_Restart:
  2739                           	opt callstack 0
  2740                           
  2741 ;; *************** function _i2c_Read *****************
  2742 ;; Defined at:
  2743 ;;		line 85 in file "i2c.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  ack             1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  ack             1    9[COMRAM] unsigned char 
  2748 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2    7[COMRAM] int 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        4 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    3
  2765 ;; This function calls:
  2766 ;;		_i2c_Wait
  2767 ;; This function is called by:
  2768 ;;		_read_i2c
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text3
  2773  001E76                     __ptext3:
  2774                           	opt callstack 0
  2775  001E76                     _i2c_Read:
  2776                           	opt callstack 26
  2777                           
  2778                           ;incstack = 0
  2779                           ;i2c_Read@ack stored from wreg
  2780  001E76  6E41               	movwf	i2c_Read@ack^0,c
  2781  001E78                     
  2782                           ;i2c.c: 85: int i2c_Read(unsigned char ack);i2c.c: 86: {;i2c.c: 90:   unsigned char i2cR
      +                          eadData;;i2c.c: 92:   i2c_Wait();
  2783  001E78  EC9A  F00F         	call	_i2c_Wait	;wreg free
  2784  001E7C                     
  2785                           ;i2c.c: 93:  RCEN2=1;
  2786  001E7C  866B               	bsf	3947,3,c	;volatile
  2787                           
  2788                           ;i2c.c: 94:   i2c_Wait();
  2789  001E7E  EC9A  F00F         	call	_i2c_Wait	;wreg free
  2790  001E82                     
  2791                           ;i2c.c: 95:   i2cReadData = SSP2BUF;
  2792  001E82  CF6F F042          	movff	3951,i2c_Read@i2cReadData	;volatile
  2793                           
  2794                           ;i2c.c: 96:   i2c_Wait();
  2795  001E86  EC9A  F00F         	call	_i2c_Wait	;wreg free
  2796  001E8A                     
  2797                           ;i2c.c: 97:   if ( ack )
  2798  001E8A  5041               	movf	i2c_Read@ack^0,w,c
  2799  001E8C  B4D8               	btfsc	status,2,c
  2800  001E8E  EF4B  F00F         	goto	u1721
  2801  001E92  EF4D  F00F         	goto	u1720
  2802  001E96                     u1721:
  2803  001E96  EF50  F00F         	goto	l528
  2804  001E9A                     u1720:
  2805  001E9A                     
  2806                           ;i2c.c: 98:   ACKDT2=0;
  2807  001E9A  9A6B               	bcf	3947,5,c	;volatile
  2808  001E9C  EF51  F00F         	goto	l529
  2809  001EA0                     l528:
  2810                           
  2811                           ;i2c.c: 100:   ACKDT2=1;
  2812  001EA0  8A6B               	bsf	3947,5,c	;volatile
  2813  001EA2                     l529:
  2814                           
  2815                           ;i2c.c: 101:  ACKEN2=1;
  2816  001EA2  886B               	bsf	3947,4,c	;volatile
  2817                           
  2818                           ;i2c.c: 103:  return( i2cReadData );
  2819  001EA4  C042  F03F         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2820  001EA8  6A40               	clrf	(?_i2c_Read+1)^0,c
  2821  001EAA  0012               	return		;funcret
  2822  001EAC                     __end_of_i2c_Read:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _initUSART *****************
  2826 ;; Defined at:
  2827 ;;		line 20 in file "usart.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text4
  2856  001F0E                     __ptext4:
  2857                           	opt callstack 0
  2858  001F0E                     _initUSART:
  2859                           	opt callstack 28
  2860  001F0E                     
  2861                           ;usart.c: 23:     TRISCbits.TRISC6 = 0;
  2862  001F0E  9C94               	bcf	148,6,c	;volatile
  2863                           
  2864                           ;usart.c: 24:     TRISCbits.TRISC7 = 1;
  2865  001F10  8E94               	bsf	148,7,c	;volatile
  2866                           
  2867                           ;usart.c: 25:     TXSTA1bits.SYNC = 0;
  2868  001F12  98AD               	bcf	173,4,c	;volatile
  2869                           
  2870                           ;usart.c: 26:     TXSTA1bits.TX9 = 0;
  2871  001F14  9CAD               	bcf	173,6,c	;volatile
  2872                           
  2873                           ;usart.c: 27:     TXSTA1bits.TXEN = 1;
  2874  001F16  8AAD               	bsf	173,5,c	;volatile
  2875                           
  2876                           ;usart.c: 28:     RCSTA1bits.RX9 = 0;
  2877  001F18  9CAC               	bcf	172,6,c	;volatile
  2878                           
  2879                           ;usart.c: 29:     RCSTA1bits.CREN = 1;
  2880  001F1A  88AC               	bsf	172,4,c	;volatile
  2881                           
  2882                           ;usart.c: 30:     TXSTA1bits.CSRC = 0;
  2883  001F1C  9EAD               	bcf	173,7,c	;volatile
  2884                           
  2885                           ;usart.c: 31:     RCSTA1bits.ADDEN = 1;
  2886  001F1E  86AC               	bsf	172,3,c	;volatile
  2887                           
  2888                           ;usart.c: 32:     RCSTA1bits.SPEN = 1;
  2889  001F20  8EAC               	bsf	172,7,c	;volatile
  2890                           
  2891                           ;usart.c: 35:     BAUDCON1bits.BRG16 = 0;
  2892  001F22  967E               	bcf	126,3,c	;volatile
  2893                           
  2894                           ;usart.c: 36:     TXSTA1bits.BRGH = 1;
  2895  001F24  84AD               	bsf	173,2,c	;volatile
  2896                           
  2897                           ;usart.c: 37:     PIE1bits.RC1IE = 1;
  2898  001F26  8A9D               	bsf	157,5,c	;volatile
  2899                           
  2900                           ;usart.c: 38:     PIE1bits.TX1IE = 0;
  2901  001F28  989D               	bcf	157,4,c	;volatile
  2902  001F2A                     
  2903                           ;usart.c: 40:     SPBRG1 = 25;
  2904  001F2A  0E19               	movlw	25
  2905  001F2C  6EB0               	movwf	176,c	;volatile
  2906                           
  2907                           ;usart.c: 41:     SPBRGH1 = 0;
  2908  001F2E  0E00               	movlw	0
  2909  001F30  6E7F               	movwf	127,c	;volatile
  2910  001F32  0012               	return		;funcret
  2911  001F34                     __end_of_initUSART:
  2912                           	opt callstack 0
  2913                           
  2914 ;; *************** function _initMotor *****************
  2915 ;; Defined at:
  2916 ;;		line 21 in file "MotorDriver.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text5
  2945  002012                     __ptext5:
  2946                           	opt callstack 0
  2947  002012                     _initMotor:
  2948                           	opt callstack 28
  2949  002012                     
  2950                           ;MotorDriver.c: 23:     PR4 = 0xC7;
  2951  002012  0EC7               	movlw	199
  2952  002014  6E77               	movwf	119,c	;volatile
  2953  002016                     
  2954                           ;MotorDriver.c: 24:     T3CONbits.T3CCP1 = 0;
  2955  002016  9679               	bcf	121,3,c	;volatile
  2956  002018                     
  2957                           ;MotorDriver.c: 25:     T3CONbits.T3CCP2 = 1;
  2958  002018  8C79               	bsf	121,6,c	;volatile
  2959                           
  2960                           ;MotorDriver.c: 26:     T4CON = 0x00;
  2961  00201A  0E00               	movlw	0
  2962  00201C  6E76               	movwf	118,c	;volatile
  2963  00201E  0012               	return		;funcret
  2964  002020                     __end_of_initMotor:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _init *****************
  2968 ;; Defined at:
  2969 ;;		line 18 in file "IO.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    2
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text6
  2998  001B6E                     __ptext6:
  2999                           	opt callstack 0
  3000  001B6E                     _init:
  3001                           	opt callstack 28
  3002  001B6E                     
  3003                           ;IO.c: 20:     TRISA = 0xFB;
  3004  001B6E  0EFB               	movlw	251
  3005  001B70  6E92               	movwf	146,c	;volatile
  3006  001B72                     
  3007                           ;IO.c: 21:     TRISB = 0XFF;
  3008  001B72  6893               	setf	147,c	;volatile
  3009                           
  3010                           ;IO.c: 22:     TRISC = 0X84;
  3011  001B74  0E84               	movlw	132
  3012  001B76  6E94               	movwf	148,c	;volatile
  3013                           
  3014                           ;IO.c: 23:     TRISD = 0XC0;
  3015  001B78  0EC0               	movlw	192
  3016  001B7A  6E95               	movwf	149,c	;volatile
  3017                           
  3018                           ;IO.c: 24:     TRISE = 0X00;
  3019  001B7C  0E00               	movlw	0
  3020  001B7E  6E96               	movwf	150,c	;volatile
  3021                           
  3022                           ;IO.c: 25:     TRISF = 0X00;
  3023  001B80  0E00               	movlw	0
  3024  001B82  6E97               	movwf	151,c	;volatile
  3025                           
  3026                           ;IO.c: 26:     TRISG = 0X05;
  3027  001B84  0E05               	movlw	5
  3028  001B86  6E98               	movwf	152,c	;volatile
  3029  001B88                     
  3030                           ;IO.c: 29:     ADCON0bits.VCFG1 = 0;
  3031  001B88  9EC2               	bcf	194,7,c	;volatile
  3032  001B8A                     
  3033                           ;IO.c: 30:  ADCON0bits.VCFG0 = 0;
  3034  001B8A  9CC2               	bcf	194,6,c	;volatile
  3035  001B8C                     
  3036                           ;IO.c: 31:     ADCON0bits.ADON=0;
  3037  001B8C  90C2               	bcf	194,0,c	;volatile
  3038  001B8E                     
  3039                           ;IO.c: 34:  ADCON1bits.ADFM = 1;
  3040  001B8E  8EC1               	bsf	193,7,c	;volatile
  3041  001B90                     
  3042                           ;IO.c: 35:  ADCON1bits.ADCAL = 0;
  3043  001B90  9CC1               	bcf	193,6,c	;volatile
  3044  001B92                     
  3045                           ;IO.c: 36:  ADCON1bits.ACQT2 = 0;
  3046  001B92  9AC1               	bcf	193,5,c	;volatile
  3047  001B94                     
  3048                           ;IO.c: 37:  ADCON1bits.ACQT1 = 1;
  3049  001B94  88C1               	bsf	193,4,c	;volatile
  3050  001B96                     
  3051                           ;IO.c: 38:  ADCON1bits.ACQT0 = 0;
  3052  001B96  96C1               	bcf	193,3,c	;volatile
  3053  001B98                     
  3054                           ;IO.c: 39:  ADCON1bits.ADCS2 = 1;
  3055  001B98  84C1               	bsf	193,2,c	;volatile
  3056  001B9A                     
  3057                           ;IO.c: 40:  ADCON1bits.ADCS1 = 0;
  3058  001B9A  92C1               	bcf	193,1,c	;volatile
  3059  001B9C                     
  3060                           ;IO.c: 41:  ADCON1bits.ADCS0 = 0;
  3061  001B9C  90C1               	bcf	193,0,c	;volatile
  3062  001B9E                     
  3063                           ;IO.c: 46:  WDTCONbits.ADSHR = 1;
  3064  001B9E  88C0               	bsf	192,4,c	;volatile
  3065  001BA0                     
  3066                           ;IO.c: 52:  ANCON0bits.PCFG0 = 0;
  3067  001BA0  90C1               	bcf	193,0,c	;volatile
  3068  001BA2                     
  3069                           ;IO.c: 53:  ANCON0bits.PCFG1 = 1;
  3070  001BA2  82C1               	bsf	193,1,c	;volatile
  3071  001BA4                     
  3072                           ;IO.c: 54:  ANCON0bits.PCFG2 = 1;
  3073  001BA4  84C1               	bsf	193,2,c	;volatile
  3074  001BA6                     
  3075                           ;IO.c: 55:  ANCON0bits.PCFG3 = 1;
  3076  001BA6  86C1               	bsf	193,3,c	;volatile
  3077  001BA8                     
  3078                           ;IO.c: 56:  ANCON0bits.PCFG4 = 1;
  3079  001BA8  88C1               	bsf	193,4,c	;volatile
  3080  001BAA                     
  3081                           ;IO.c: 57:     ANCON0bits.PCFG7 = 1;
  3082  001BAA  8EC1               	bsf	193,7,c	;volatile
  3083  001BAC                     
  3084                           ;IO.c: 59:     WDTCONbits.ADSHR = 0;
  3085  001BAC  98C0               	bcf	192,4,c	;volatile
  3086  001BAE                     
  3087                           ;IO.c: 61:     INTCONbits.GIE = 1;
  3088  001BAE  8EF2               	bsf	242,7,c	;volatile
  3089                           
  3090                           ;IO.c: 66:     OSCCONbits.SCS = 0b11;
  3091  001BB0  0E03               	movlw	3
  3092  001BB2  12D3               	iorwf	211,f,c	;volatile
  3093                           
  3094                           ;IO.c: 67:     OSCCONbits.IRCF = 0b111;
  3095  001BB4  0E70               	movlw	112
  3096  001BB6  12D3               	iorwf	211,f,c	;volatile
  3097                           
  3098                           ;IO.c: 69:     ADRES = 0;
  3099  001BB8  0E00               	movlw	0
  3100  001BBA  6EC4               	movwf	196,c	;volatile
  3101  001BBC  0E00               	movlw	0
  3102  001BBE  6EC3               	movwf	195,c	;volatile
  3103  001BC0                     
  3104                           ;IO.c: 72:  ADCON0bits.CHS0 = 0;
  3105  001BC0  94C2               	bcf	194,2,c	;volatile
  3106  001BC2                     
  3107                           ;IO.c: 73:  ADCON0bits.CHS1 = 0;
  3108  001BC2  96C2               	bcf	194,3,c	;volatile
  3109  001BC4                     
  3110                           ;IO.c: 74:  ADCON0bits.CHS2 = 0;
  3111  001BC4  98C2               	bcf	194,4,c	;volatile
  3112  001BC6                     
  3113                           ;IO.c: 75:  ADCON0bits.CHS3 = 0;
  3114  001BC6  9AC2               	bcf	194,5,c	;volatile
  3115  001BC8                     
  3116                           ;IO.c: 76:  ADCON1bits.ADCAL = 1;
  3117  001BC8  8CC1               	bsf	193,6,c	;volatile
  3118  001BCA                     
  3119                           ;IO.c: 77:  ADCON0bits.ADON=1;
  3120  001BCA  80C2               	bsf	194,0,c	;volatile
  3121  001BCC                     
  3122                           ;IO.c: 79:  ADCON0bits.GO=1;
  3123  001BCC  82C2               	bsf	194,1,c	;volatile
  3124  001BCE                     l599:
  3125  001BCE  B2C2               	btfsc	194,1,c	;volatile
  3126  001BD0  EFEC  F00D         	goto	u1731
  3127  001BD4  EFEE  F00D         	goto	u1730
  3128  001BD8                     u1731:
  3129  001BD8  EFE7  F00D         	goto	l599
  3130  001BDC                     u1730:
  3131  001BDC                     
  3132                           ;IO.c: 81:  ADCON1bits.ADCAL = 0;
  3133  001BDC  9CC1               	bcf	193,6,c	;volatile
  3134  001BDE  0012               	return		;funcret
  3135  001BE0                     __end_of_init:
  3136                           	opt callstack 0
  3137                           
  3138 ;; *************** function _i2c_Init *****************
  3139 ;; Defined at:
  3140 ;;		line 24 in file "i2c.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text7
  3169  001FBC                     __ptext7:
  3170                           	opt callstack 0
  3171  001FBC                     _i2c_Init:
  3172                           	opt callstack 28
  3173  001FBC                     
  3174                           ;i2c.c: 28:  TRISD5=1;
  3175  001FBC  8A95               	bsf	3989,5,c	;volatile
  3176                           
  3177                           ;i2c.c: 29:  TRISD6=1;
  3178  001FBE  8C95               	bsf	3989,6,c	;volatile
  3179  001FC0                     
  3180                           ;i2c.c: 31:  SSP2CON1 = 0b00101000;
  3181  001FC0  0E28               	movlw	40
  3182  001FC2  6E6C               	movwf	108,c	;volatile
  3183                           
  3184                           ;i2c.c: 32:  SSP2CON2 = 0x00;
  3185  001FC4  0E00               	movlw	0
  3186  001FC6  6E6B               	movwf	107,c	;volatile
  3187                           
  3188                           ;i2c.c: 34:     SSP2ADD = 39;
  3189  001FC8  0E27               	movlw	39
  3190  001FCA  6E6E               	movwf	110,c	;volatile
  3191                           
  3192                           ;i2c.c: 36:  SSP2STAT = 0b11000000;
  3193  001FCC  0EC0               	movlw	192
  3194  001FCE  6E6D               	movwf	109,c	;volatile
  3195  001FD0  0012               	return		;funcret
  3196  001FD2                     __end_of_i2c_Init:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _flush *****************
  3200 ;; Defined at:
  3201 ;;		line 1101 in file "main.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  i               2    6[COMRAM] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text8
  3230  001E02                     __ptext8:
  3231                           	opt callstack 0
  3232  001E02                     _flush:
  3233                           	opt callstack 28
  3234  001E02                     
  3235                           ;main.c: 1103:     int i;;main.c: 1105:     for(i=0; i<16; i++)
  3236  001E02  0E00               	movlw	0
  3237  001E04  6E3F               	movwf	(flush@i+1)^0,c
  3238  001E06  0E00               	movlw	0
  3239  001E08  6E3E               	movwf	flush@i^0,c
  3240  001E0A                     l3577:
  3241                           
  3242                           ;main.c: 1106:     {;main.c: 1107:         Serial_Buffer[i]=0x00;
  3243  001E0A  0E01               	movlw	low _Serial_Buffer
  3244  001E0C  243E               	addwf	flush@i^0,w,c
  3245  001E0E  6ED9               	movwf	fsr2l,c
  3246  001E10  0E00               	movlw	high _Serial_Buffer
  3247  001E12  203F               	addwfc	(flush@i+1)^0,w,c
  3248  001E14  6EDA               	movwf	fsr2h,c
  3249  001E16  0E00               	movlw	0
  3250  001E18  6EDF               	movwf	indf2,c
  3251  001E1A                     
  3252                           ;main.c: 1108:     }
  3253  001E1A  4A3E               	infsnz	flush@i^0,f,c
  3254  001E1C  2A3F               	incf	(flush@i+1)^0,f,c
  3255  001E1E  BE3F               	btfsc	(flush@i+1)^0,7,c
  3256  001E20  EF1B  F00F         	goto	u2081
  3257  001E24  503F               	movf	(flush@i+1)^0,w,c
  3258  001E26  E109               	bnz	u2080
  3259  001E28  0E10               	movlw	16
  3260  001E2A  5C3E               	subwf	flush@i^0,w,c
  3261  001E2C  A0D8               	btfss	status,0,c
  3262  001E2E  EF1B  F00F         	goto	u2081
  3263  001E32  EF1D  F00F         	goto	u2080
  3264  001E36                     u2081:
  3265  001E36  EF05  F00F         	goto	l3577
  3266  001E3A                     u2080:
  3267  001E3A  0012               	return		;funcret
  3268  001E3C                     __end_of_flush:
  3269                           	opt callstack 0
  3270                           
  3271 ;; *************** function _WriteSTLED316SVibMode *****************
  3272 ;; Defined at:
  3273 ;;		line 253 in file "Display.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  v_mode          1    wreg     unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  v_mode          1   12[COMRAM] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:        1 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    3
  3294 ;; This function calls:
  3295 ;;		_STLED316s_SPI_SendData
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text9
  3302  001CA4                     __ptext9:
  3303                           	opt callstack 0
  3304  001CA4                     _WriteSTLED316SVibMode:
  3305                           	opt callstack 27
  3306                           
  3307                           ;incstack = 0
  3308                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3309  001CA4  6E44               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3310  001CA6                     
  3311                           ;Display.c: 253: void WriteSTLED316SVibMode( char v_mode);Display.c: 254: {;Display.c: 2
      +                          56:  LATCbits.LATC4 = 0;
  3312  001CA6  988B               	bcf	139,4,c	;volatile
  3313  001CA8                     
  3314                           ;Display.c: 258:  STLED316s_SPI_SendData (0x00 );
  3315  001CA8  0E00               	movlw	0
  3316  001CAA  EC77  F00D         	call	_STLED316s_SPI_SendData
  3317  001CAE                     
  3318                           ;Display.c: 261:  LATCbits.LATC4 = 1;
  3319  001CAE  888B               	bsf	139,4,c	;volatile
  3320  001CB0                     
  3321                           ;Display.c: 263:  LATCbits.LATC4 = 0;
  3322  001CB0  988B               	bcf	139,4,c	;volatile
  3323                           
  3324                           ;Display.c: 265:  STLED316s_SPI_SendData (0x00);
  3325  001CB2  0E00               	movlw	0
  3326  001CB4  EC77  F00D         	call	_STLED316s_SPI_SendData
  3327  001CB8                     
  3328                           ;Display.c: 271:     if (v_mode == 1)
  3329  001CB8  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3330  001CBA  A4D8               	btfss	status,2,c
  3331  001CBC  EF62  F00E         	goto	u2991
  3332  001CC0  EF64  F00E         	goto	u2990
  3333  001CC4                     u2991:
  3334  001CC4  EF6C  F00E         	goto	l4709
  3335  001CC8                     u2990:
  3336  001CC8                     
  3337                           ;Display.c: 272:     {;Display.c: 273:   STLED316s_SPI_SendData (0x00);
  3338  001CC8  0E00               	movlw	0
  3339  001CCA  EC77  F00D         	call	_STLED316s_SPI_SendData
  3340                           
  3341                           ;Display.c: 274:         STLED316s_SPI_SendData (0xBE);
  3342  001CCE  0EBE               	movlw	190
  3343  001CD0  EC77  F00D         	call	_STLED316s_SPI_SendData
  3344                           
  3345                           ;Display.c: 275:     }
  3346  001CD4  EF72  F00E         	goto	l4711
  3347  001CD8                     l4709:
  3348                           
  3349                           ;Display.c: 277:     {;Display.c: 278:         STLED316s_SPI_SendData (0x00);
  3350  001CD8  0E00               	movlw	0
  3351  001CDA  EC77  F00D         	call	_STLED316s_SPI_SendData
  3352                           
  3353                           ;Display.c: 279:         STLED316s_SPI_SendData (0x3E);
  3354  001CDE  0E3E               	movlw	62
  3355  001CE0  EC77  F00D         	call	_STLED316s_SPI_SendData
  3356  001CE4                     l4711:
  3357                           
  3358                           ;Display.c: 282:  LATCbits.LATC4 = 1;
  3359  001CE4  888B               	bsf	139,4,c	;volatile
  3360  001CE6                     
  3361                           ;Display.c: 284:  LATCbits.LATC4 = 0;
  3362  001CE6  988B               	bcf	139,4,c	;volatile
  3363                           
  3364                           ;Display.c: 286:  STLED316s_SPI_SendData ( 0x0D );
  3365  001CE8  0E0D               	movlw	13
  3366  001CEA  EC77  F00D         	call	_STLED316s_SPI_SendData
  3367  001CEE                     
  3368                           ;Display.c: 288:  LATCbits.LATC4 = 1;
  3369  001CEE  888B               	bsf	139,4,c	;volatile
  3370  001CF0  0012               	return		;funcret
  3371  001CF2                     __end_of_WriteSTLED316SVibMode:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _ToggleVIB_Mode *****************
  3375 ;; Defined at:
  3376 ;;		line 862 in file "main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    5
  3397 ;; This function calls:
  3398 ;;		_write_i2c
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text10
  3405  001D86                     __ptext10:
  3406                           	opt callstack 0
  3407  001D86                     _ToggleVIB_Mode:
  3408                           	opt callstack 25
  3409  001D86                     
  3410                           ;main.c: 864:     if (vibration_mode)
  3411  001D86  5032               	movf	_vibration_mode^0,w,c
  3412  001D88  B4D8               	btfsc	status,2,c
  3413  001D8A  EFC9  F00E         	goto	u2981
  3414  001D8E  EFCB  F00E         	goto	u2980
  3415  001D92                     u2981:
  3416  001D92  EFCF  F00E         	goto	l4689
  3417  001D96                     u2980:
  3418  001D96                     
  3419                           ;main.c: 865:         vibration_mode = 0;
  3420  001D96  0E00               	movlw	0
  3421  001D98  6E32               	movwf	_vibration_mode^0,c
  3422  001D9A  EFD1  F00E         	goto	l4691
  3423  001D9E                     l4689:
  3424                           
  3425                           ;main.c: 867:         vibration_mode = 1;
  3426  001D9E  0E01               	movlw	1
  3427  001DA0  6E32               	movwf	_vibration_mode^0,c
  3428  001DA2                     l4691:
  3429                           
  3430                           ;main.c: 874:     INTCONbits.GIE=0;
  3431  001DA2  9EF2               	bcf	242,7,c	;volatile
  3432  001DA4                     
  3433                           ;main.c: 875:     write_i2c(0x0010, vibration_mode);
  3434  001DA4  0E10               	movlw	16
  3435  001DA6  0100               	movlb	0	; () banked
  3436  001DA8  6F80               	movwf	write_i2c@address& (0+255),b
  3437  001DAA  0E00               	movlw	0
  3438  001DAC  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  3439  001DAE  0E00               	movlw	0
  3440  001DB0  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  3441  001DB2  0E00               	movlw	0
  3442  001DB4  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  3443  001DB6  C032  F084         	movff	_vibration_mode,write_i2c@data
  3444  001DBA  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  3445  001DBC  EC79  F00E         	call	_write_i2c	;wreg free
  3446  001DC0                     
  3447                           ;main.c: 876:     INTCONbits.GIE=1;
  3448  001DC0  8EF2               	bsf	242,7,c	;volatile
  3449  001DC2  0012               	return		;funcret
  3450  001DC4                     __end_of_ToggleVIB_Mode:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function _write_i2c *****************
  3454 ;; Defined at:
  3455 ;;		line 107 in file "i2c.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  address         4    0[BANK0 ] long 
  3458 ;;  data            2    4[BANK0 ] int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:        6 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    4
  3477 ;; This function calls:
  3478 ;;		___aldiv
  3479 ;;		_i2c_Address
  3480 ;;		_i2c_Start
  3481 ;;		_i2c_Stop
  3482 ;;		_i2c_Write
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;;		_ToggleVIB_Mode
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text11
  3490  001CF2                     __ptext11:
  3491                           	opt callstack 0
  3492  001CF2                     _write_i2c:
  3493                           	opt callstack 26
  3494  001CF2                     
  3495                           ;i2c.c: 107: void write_i2c(long address, int data);i2c.c: 108: {;i2c.c: 109:  i2c_Start
      +                          ();
  3496  001CF2  EC34  F010         	call	_i2c_Start	;wreg free
  3497                           
  3498                           ;i2c.c: 110:  i2c_Address(0xA0, 0);
  3499  001CF6  0E00               	movlw	0
  3500  001CF8  6E3F               	movwf	i2c_Address@mode^0,c
  3501  001CFA  0EA0               	movlw	160
  3502  001CFC  ECFF  F00F         	call	_i2c_Address
  3503                           
  3504                           ;i2c.c: 111:  i2c_Write((unsigned char)(address/0x100));
  3505  001D00  C080  F03E         	movff	write_i2c@address,___aldiv@dividend
  3506  001D04  C081  F03F         	movff	write_i2c@address+1,___aldiv@dividend+1
  3507  001D08  C082  F040         	movff	write_i2c@address+2,___aldiv@dividend+2
  3508  001D0C  C083  F041         	movff	write_i2c@address+3,___aldiv@dividend+3
  3509  001D10  0E00               	movlw	0
  3510  001D12  6E42               	movwf	___aldiv@divisor^0,c
  3511  001D14  0E01               	movlw	1
  3512  001D16  6E43               	movwf	(___aldiv@divisor+1)^0,c
  3513  001D18  0E00               	movlw	0
  3514  001D1A  6E44               	movwf	(___aldiv@divisor+2)^0,c
  3515  001D1C  0E00               	movlw	0
  3516  001D1E  6E45               	movwf	(___aldiv@divisor+3)^0,c
  3517  001D20  ECBA  F009         	call	___aldiv	;wreg free
  3518  001D24  503E               	movf	?___aldiv^0,w,c
  3519  001D26  EC10  F010         	call	_i2c_Write
  3520                           
  3521                           ;i2c.c: 112:  i2c_Write((unsigned char)(address&0xFF));
  3522  001D2A  0100               	movlb	0	; () banked
  3523  001D2C  5180               	movf	write_i2c@address& (0+255),w,b
  3524  001D2E  EC10  F010         	call	_i2c_Write
  3525                           
  3526                           ;i2c.c: 113:  i2c_Write((unsigned char)data);
  3527  001D32  0100               	movlb	0	; () banked
  3528  001D34  5184               	movf	write_i2c@data& (0+255),w,b
  3529  001D36  EC10  F010         	call	_i2c_Write
  3530                           
  3531                           ;i2c.c: 114:   i2c_Stop();
  3532  001D3A  EC30  F010         	call	_i2c_Stop	;wreg free
  3533  001D3E  0012               	return		;funcret
  3534  001D40                     __end_of_write_i2c:
  3535                           	opt callstack 0
  3536                           
  3537 ;; *************** function _i2c_Write *****************
  3538 ;; Defined at:
  3539 ;;		line 66 in file "i2c.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  data            1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  data            1    7[COMRAM] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;Total ram usage:        1 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    3
  3560 ;; This function calls:
  3561 ;;		_i2c_Wait
  3562 ;; This function is called by:
  3563 ;;		_write_i2c
  3564 ;;		_read_i2c
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text12
  3569  002020                     __ptext12:
  3570                           	opt callstack 0
  3571  002020                     _i2c_Write:
  3572                           	opt callstack 26
  3573                           
  3574                           ;incstack = 0
  3575                           ;i2c_Write@data stored from wreg
  3576  002020  6E3F               	movwf	i2c_Write@data^0,c
  3577  002022                     
  3578                           ;i2c.c: 66: void i2c_Write(unsigned char data);i2c.c: 67: {;i2c.c: 68:   i2c_Wait();
  3579  002022  EC9A  F00F         	call	_i2c_Wait	;wreg free
  3580  002026                     
  3581                           ;i2c.c: 69:   SSP2BUF = data;
  3582  002026  C03F  FF6F         	movff	i2c_Write@data,3951	;volatile
  3583  00202A  0012               	return		;funcret
  3584  00202C                     __end_of_i2c_Write:
  3585                           	opt callstack 0
  3586                           
  3587 ;; *************** function _i2c_Stop *****************
  3588 ;; Defined at:
  3589 ;;		line 59 in file "i2c.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    3
  3610 ;; This function calls:
  3611 ;;		_i2c_Wait
  3612 ;; This function is called by:
  3613 ;;		_write_i2c
  3614 ;;		_read_i2c
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text13
  3619  002060                     __ptext13:
  3620                           	opt callstack 0
  3621  002060                     _i2c_Stop:
  3622                           	opt callstack 26
  3623  002060                     
  3624                           ;i2c.c: 61:   i2c_Wait();
  3625  002060  EC9A  F00F         	call	_i2c_Wait	;wreg free
  3626  002064                     
  3627                           ;i2c.c: 62:   PEN2=1;
  3628  002064  846B               	bsf	3947,2,c	;volatile
  3629  002066  0012               	return		;funcret
  3630  002068                     __end_of_i2c_Stop:
  3631                           	opt callstack 0
  3632                           
  3633 ;; *************** function _i2c_Start *****************
  3634 ;; Defined at:
  3635 ;;		line 46 in file "i2c.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    3
  3656 ;; This function calls:
  3657 ;;		_i2c_Wait
  3658 ;; This function is called by:
  3659 ;;		_write_i2c
  3660 ;;		_read_i2c
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text14
  3665  002068                     __ptext14:
  3666                           	opt callstack 0
  3667  002068                     _i2c_Start:
  3668                           	opt callstack 26
  3669  002068                     
  3670                           ;i2c.c: 48:   i2c_Wait();
  3671  002068  EC9A  F00F         	call	_i2c_Wait	;wreg free
  3672  00206C                     
  3673                           ;i2c.c: 49:  SEN2=1;
  3674  00206C  806B               	bsf	3947,0,c	;volatile
  3675  00206E  0012               	return		;funcret
  3676  002070                     __end_of_i2c_Start:
  3677                           	opt callstack 0
  3678                           
  3679 ;; *************** function _i2c_Address *****************
  3680 ;; Defined at:
  3681 ;;		line 74 in file "i2c.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  address         1    wreg     unsigned char 
  3684 ;;  mode            1    7[COMRAM] unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  address         1    8[COMRAM] unsigned char 
  3687 ;;  l_address       1    9[COMRAM] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;Total ram usage:        3 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    3
  3704 ;; This function calls:
  3705 ;;		_i2c_Wait
  3706 ;; This function is called by:
  3707 ;;		_write_i2c
  3708 ;;		_read_i2c
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text15
  3713  001FFE                     __ptext15:
  3714                           	opt callstack 0
  3715  001FFE                     _i2c_Address:
  3716                           	opt callstack 26
  3717                           
  3718                           ;incstack = 0
  3719                           ;i2c_Address@address stored from wreg
  3720  001FFE  6E40               	movwf	i2c_Address@address^0,c
  3721  002000                     
  3722                           ;i2c.c: 74: void i2c_Address(unsigned char address, unsigned char mode);i2c.c: 75: {;i2c
      +                          .c: 76:  unsigned char l_address;;i2c.c: 78:  l_address=address;
  3723  002000  C040  F041         	movff	i2c_Address@address,i2c_Address@l_address
  3724  002004                     
  3725                           ;i2c.c: 79:  l_address += mode;
  3726  002004  503F               	movf	i2c_Address@mode^0,w,c
  3727  002006  2641               	addwf	i2c_Address@l_address^0,f,c
  3728  002008                     
  3729                           ;i2c.c: 80:   i2c_Wait();
  3730  002008  EC9A  F00F         	call	_i2c_Wait	;wreg free
  3731  00200C                     
  3732                           ;i2c.c: 81:   SSP2BUF = l_address;
  3733  00200C  C041  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3734  002010  0012               	return		;funcret
  3735  002012                     __end_of_i2c_Address:
  3736                           	opt callstack 0
  3737                           
  3738 ;; *************** function _i2c_Wait *****************
  3739 ;; Defined at:
  3740 ;;		line 41 in file "i2c.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;Total ram usage:        1 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    2
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_i2c_Start
  3765 ;;		_i2c_Restart
  3766 ;;		_i2c_Stop
  3767 ;;		_i2c_Write
  3768 ;;		_i2c_Address
  3769 ;;		_i2c_Read
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text16
  3774  001F34                     __ptext16:
  3775                           	opt callstack 0
  3776  001F34                     _i2c_Wait:
  3777                           	opt callstack 26
  3778  001F34                     l2763:
  3779  001F34  CF6B F03E          	movff	3947,??_i2c_Wait	;volatile
  3780  001F38  0E1F               	movlw	31
  3781  001F3A  163E               	andwf	??_i2c_Wait^0,f,c
  3782  001F3C  A4D8               	btfss	status,2,c
  3783  001F3E  EFA3  F00F         	goto	u1391
  3784  001F42  EFA5  F00F         	goto	u1390
  3785  001F46                     u1391:
  3786  001F46  EF9A  F00F         	goto	l2763
  3787  001F4A                     u1390:
  3788  001F4A  B46D               	btfsc	109,2,c	;volatile
  3789  001F4C  EFAA  F00F         	goto	u1401
  3790  001F50  EFAC  F00F         	goto	u1400
  3791  001F54                     u1401:
  3792  001F54  EF9A  F00F         	goto	l2763
  3793  001F58                     u1400:
  3794  001F58  0012               	return		;funcret
  3795  001F5A                     __end_of_i2c_Wait:
  3796                           	opt callstack 0
  3797                           
  3798 ;; *************** function ___aldiv *****************
  3799 ;; Defined at:
  3800 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  dividend        4    6[COMRAM] long 
  3803 ;;  divisor         4   10[COMRAM] long 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  quotient        4   16[COMRAM] long 
  3806 ;;  sign            1   15[COMRAM] unsigned char 
  3807 ;;  counter         1   14[COMRAM] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  4    6[COMRAM] long 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:       14 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    2
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_write_i2c
  3828 ;;		_read_i2c
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text17
  3833  001374                     __ptext17:
  3834                           	opt callstack 0
  3835  001374                     ___aldiv:
  3836                           	opt callstack 27
  3837  001374  0E00               	movlw	0
  3838  001376  6E47               	movwf	___aldiv@sign^0,c
  3839  001378  BE45               	btfsc	(___aldiv@divisor+3)^0,7,c
  3840  00137A  EFC3  F009         	goto	u1490
  3841  00137E  EFC1  F009         	goto	u1491
  3842  001382                     u1491:
  3843  001382  EFCD  F009         	goto	l2897
  3844  001386                     u1490:
  3845  001386  1E45               	comf	(___aldiv@divisor+3)^0,f,c
  3846  001388  1E44               	comf	(___aldiv@divisor+2)^0,f,c
  3847  00138A  1E43               	comf	(___aldiv@divisor+1)^0,f,c
  3848  00138C  6C42               	negf	___aldiv@divisor^0,c
  3849  00138E  0E00               	movlw	0
  3850  001390  2243               	addwfc	(___aldiv@divisor+1)^0,f,c
  3851  001392  2244               	addwfc	(___aldiv@divisor+2)^0,f,c
  3852  001394  2245               	addwfc	(___aldiv@divisor+3)^0,f,c
  3853  001396  0E01               	movlw	1
  3854  001398  6E47               	movwf	___aldiv@sign^0,c
  3855  00139A                     l2897:
  3856  00139A  BE41               	btfsc	(___aldiv@dividend+3)^0,7,c
  3857  00139C  EFD4  F009         	goto	u1500
  3858  0013A0  EFD2  F009         	goto	u1501
  3859  0013A4                     u1501:
  3860  0013A4  EFDE  F009         	goto	l2903
  3861  0013A8                     u1500:
  3862  0013A8  1E41               	comf	(___aldiv@dividend+3)^0,f,c
  3863  0013AA  1E40               	comf	(___aldiv@dividend+2)^0,f,c
  3864  0013AC  1E3F               	comf	(___aldiv@dividend+1)^0,f,c
  3865  0013AE  6C3E               	negf	___aldiv@dividend^0,c
  3866  0013B0  0E00               	movlw	0
  3867  0013B2  223F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3868  0013B4  2240               	addwfc	(___aldiv@dividend+2)^0,f,c
  3869  0013B6  2241               	addwfc	(___aldiv@dividend+3)^0,f,c
  3870  0013B8  0E01               	movlw	1
  3871  0013BA  1A47               	xorwf	___aldiv@sign^0,f,c
  3872  0013BC                     l2903:
  3873  0013BC  0E00               	movlw	0
  3874  0013BE  6E48               	movwf	___aldiv@quotient^0,c
  3875  0013C0  0E00               	movlw	0
  3876  0013C2  6E49               	movwf	(___aldiv@quotient+1)^0,c
  3877  0013C4  0E00               	movlw	0
  3878  0013C6  6E4A               	movwf	(___aldiv@quotient+2)^0,c
  3879  0013C8  0E00               	movlw	0
  3880  0013CA  6E4B               	movwf	(___aldiv@quotient+3)^0,c
  3881  0013CC  5042               	movf	___aldiv@divisor^0,w,c
  3882  0013CE  1043               	iorwf	(___aldiv@divisor+1)^0,w,c
  3883  0013D0  1044               	iorwf	(___aldiv@divisor+2)^0,w,c
  3884  0013D2  1045               	iorwf	(___aldiv@divisor+3)^0,w,c
  3885  0013D4  B4D8               	btfsc	status,2,c
  3886  0013D6  EFEF  F009         	goto	u1511
  3887  0013DA  EFF1  F009         	goto	u1510
  3888  0013DE                     u1511:
  3889  0013DE  EF27  F00A         	goto	l2925
  3890  0013E2                     u1510:
  3891  0013E2  0E01               	movlw	1
  3892  0013E4  6E46               	movwf	___aldiv@counter^0,c
  3893  0013E6  EFFB  F009         	goto	l2911
  3894  0013EA                     l2909:
  3895  0013EA  90D8               	bcf	status,0,c
  3896  0013EC  3642               	rlcf	___aldiv@divisor^0,f,c
  3897  0013EE  3643               	rlcf	(___aldiv@divisor+1)^0,f,c
  3898  0013F0  3644               	rlcf	(___aldiv@divisor+2)^0,f,c
  3899  0013F2  3645               	rlcf	(___aldiv@divisor+3)^0,f,c
  3900  0013F4  2A46               	incf	___aldiv@counter^0,f,c
  3901  0013F6                     l2911:
  3902  0013F6  AE45               	btfss	(___aldiv@divisor+3)^0,7,c
  3903  0013F8  EF00  F00A         	goto	u1521
  3904  0013FC  EF02  F00A         	goto	u1520
  3905  001400                     u1521:
  3906  001400  EFF5  F009         	goto	l2909
  3907  001404                     u1520:
  3908  001404                     l2913:
  3909  001404  90D8               	bcf	status,0,c
  3910  001406  3648               	rlcf	___aldiv@quotient^0,f,c
  3911  001408  3649               	rlcf	(___aldiv@quotient+1)^0,f,c
  3912  00140A  364A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3913  00140C  364B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3914  00140E  5042               	movf	___aldiv@divisor^0,w,c
  3915  001410  5C3E               	subwf	___aldiv@dividend^0,w,c
  3916  001412  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3917  001414  583F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3918  001416  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3919  001418  5840               	subwfb	(___aldiv@dividend+2)^0,w,c
  3920  00141A  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3921  00141C  5841               	subwfb	(___aldiv@dividend+3)^0,w,c
  3922  00141E  A0D8               	btfss	status,0,c
  3923  001420  EF14  F00A         	goto	u1531
  3924  001424  EF16  F00A         	goto	u1530
  3925  001428                     u1531:
  3926  001428  EF1F  F00A         	goto	l2921
  3927  00142C                     u1530:
  3928  00142C  5042               	movf	___aldiv@divisor^0,w,c
  3929  00142E  5E3E               	subwf	___aldiv@dividend^0,f,c
  3930  001430  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3931  001432  5A3F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3932  001434  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3933  001436  5A40               	subwfb	(___aldiv@dividend+2)^0,f,c
  3934  001438  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3935  00143A  5A41               	subwfb	(___aldiv@dividend+3)^0,f,c
  3936  00143C  8048               	bsf	___aldiv@quotient^0,0,c
  3937  00143E                     l2921:
  3938  00143E  90D8               	bcf	status,0,c
  3939  001440  3245               	rrcf	(___aldiv@divisor+3)^0,f,c
  3940  001442  3244               	rrcf	(___aldiv@divisor+2)^0,f,c
  3941  001444  3243               	rrcf	(___aldiv@divisor+1)^0,f,c
  3942  001446  3242               	rrcf	___aldiv@divisor^0,f,c
  3943  001448  2E46               	decfsz	___aldiv@counter^0,f,c
  3944  00144A  EF02  F00A         	goto	l2913
  3945  00144E                     l2925:
  3946  00144E  5047               	movf	___aldiv@sign^0,w,c
  3947  001450  B4D8               	btfsc	status,2,c
  3948  001452  EF2D  F00A         	goto	u1541
  3949  001456  EF2F  F00A         	goto	u1540
  3950  00145A                     u1541:
  3951  00145A  EF37  F00A         	goto	l2929
  3952  00145E                     u1540:
  3953  00145E  1E4B               	comf	(___aldiv@quotient+3)^0,f,c
  3954  001460  1E4A               	comf	(___aldiv@quotient+2)^0,f,c
  3955  001462  1E49               	comf	(___aldiv@quotient+1)^0,f,c
  3956  001464  6C48               	negf	___aldiv@quotient^0,c
  3957  001466  0E00               	movlw	0
  3958  001468  2249               	addwfc	(___aldiv@quotient+1)^0,f,c
  3959  00146A  224A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3960  00146C  224B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3961  00146E                     l2929:
  3962  00146E  C048  F03E         	movff	___aldiv@quotient,?___aldiv
  3963  001472  C049  F03F         	movff	___aldiv@quotient+1,?___aldiv+1
  3964  001476  C04A  F040         	movff	___aldiv@quotient+2,?___aldiv+2
  3965  00147A  C04B  F041         	movff	___aldiv@quotient+3,?___aldiv+3
  3966  00147E  0012               	return		;funcret
  3967  001480                     __end_of___aldiv:
  3968                           	opt callstack 0
  3969                           
  3970 ;; *************** function _MotorPosition_Init *****************
  3971 ;; Defined at:
  3972 ;;		line 817 in file "main.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        2 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    4
  3993 ;; This function calls:
  3994 ;;		_MotorBREAK
  3995 ;;		_MotorON_PWM
  3996 ;;		_Read_IR
  3997 ;;		_WriteSTLED316SErr
  3998 ;;		_delay_1ms
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text18
  4005  001480                     __ptext18:
  4006                           	opt callstack 0
  4007  001480                     _MotorPosition_Init:
  4008                           	opt callstack 26
  4009  001480                     
  4010                           ;main.c: 819:     LATAbits.LATA2 = 1;
  4011  001480  8489               	bsf	137,2,c	;volatile
  4012  001482                     
  4013                           ;main.c: 820:     MotorON_PWM();
  4014  001482  EC22  F010         	call	_MotorON_PWM	;wreg free
  4015  001486                     
  4016                           ;main.c: 821:     _delay((unsigned long)((350)*(8000000/4000.0)));
  4017  001486  0E04               	movlw	4
  4018  001488  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  4019  00148A  0E8E               	movlw	142
  4020  00148C  6E47               	movwf	??_MotorPosition_Init^0,c
  4021  00148E  0E12               	movlw	18
  4022  001490                     u3747:
  4023  001490  2EE8               	decfsz	wreg,f,c
  4024  001492  D7FE               	bra	u3747
  4025  001494  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  4026  001496  D7FC               	bra	u3747
  4027  001498  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4028  00149A  D7FA               	bra	u3747
  4029  00149C  D000               	nop2	
  4030  00149E                     
  4031                           ;main.c: 822:     errorcounter = 30;
  4032  00149E  0E1E               	movlw	30
  4033  0014A0  6E52               	movwf	_errorcounter^0,c	;volatile
  4034  0014A2  0E00               	movlw	0
  4035  0014A4  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4036  0014A6  0E00               	movlw	0
  4037  0014A8  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4038  0014AA  0E00               	movlw	0
  4039  0014AC  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4040  0014AE                     l4649:
  4041                           
  4042                           ;main.c: 825:     {;main.c: 826:       IR_SENSORF = Read_IR();
  4043  0014AE  ECC0  F00F         	call	_Read_IR	;wreg free
  4044  0014B2  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4045  0014B6  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4046  0014BA                     
  4047                           ;main.c: 827:       if(errorcounter == 0)
  4048  0014BA  5052               	movf	_errorcounter^0,w,c	;volatile
  4049  0014BC  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4050  0014BE  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4051  0014C0  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4052  0014C2  A4D8               	btfss	status,2,c
  4053  0014C4  EF66  F00A         	goto	u2941
  4054  0014C8  EF68  F00A         	goto	u2940
  4055  0014CC                     u2941:
  4056  0014CC  EF6D  F00A         	goto	l4657
  4057  0014D0                     u2940:
  4058  0014D0                     
  4059                           ;main.c: 828:       {;main.c: 829:           WriteSTLED316SErr('1');
  4060  0014D0  0E31               	movlw	49
  4061  0014D2  EC46  F00B         	call	_WriteSTLED316SErr
  4062  0014D6                     
  4063                           ;main.c: 830:           MotorBREAK();
  4064  0014D6  EC27  F010         	call	_MotorBREAK	;wreg free
  4065  0014DA                     l4657:
  4066                           
  4067                           ;main.c: 833:     }while(IR_SENSORF != 0);
  4068  0014DA  5013               	movf	_IR_SENSORF^0,w,c
  4069  0014DC  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4070  0014DE  A4D8               	btfss	status,2,c
  4071  0014E0  EF74  F00A         	goto	u2951
  4072  0014E4  EF76  F00A         	goto	u2950
  4073  0014E8                     u2951:
  4074  0014E8  EF57  F00A         	goto	l4649
  4075  0014EC                     u2950:
  4076  0014EC                     
  4077                           ;main.c: 835:      _delay((unsigned long)((30)*(8000000/4000.0)));
  4078  0014EC  0E4E               	movlw	78
  4079  0014EE  6E47               	movwf	??_MotorPosition_Init^0,c
  4080  0014F0  0EEB               	movlw	235
  4081  0014F2                     u3757:
  4082  0014F2  2EE8               	decfsz	wreg,f,c
  4083  0014F4  D7FE               	bra	u3757
  4084  0014F6  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  4085  0014F8  D7FC               	bra	u3757
  4086  0014FA  F000               	nop	
  4087  0014FC                     
  4088                           ;main.c: 836:     errorcounter = 30;
  4089  0014FC  0E1E               	movlw	30
  4090  0014FE  6E52               	movwf	_errorcounter^0,c	;volatile
  4091  001500  0E00               	movlw	0
  4092  001502  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4093  001504  0E00               	movlw	0
  4094  001506  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4095  001508  0E00               	movlw	0
  4096  00150A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4097  00150C                     l4663:
  4098                           
  4099                           ;main.c: 838:     {;main.c: 839:        IR_SENSORF = Read_IR();
  4100  00150C  ECC0  F00F         	call	_Read_IR	;wreg free
  4101  001510  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4102  001514  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4103  001518                     
  4104                           ;main.c: 840:        if(errorcounter == 0)
  4105  001518  5052               	movf	_errorcounter^0,w,c	;volatile
  4106  00151A  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4107  00151C  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4108  00151E  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4109  001520  A4D8               	btfss	status,2,c
  4110  001522  EF95  F00A         	goto	u2961
  4111  001526  EF97  F00A         	goto	u2960
  4112  00152A                     u2961:
  4113  00152A  EF9C  F00A         	goto	l4671
  4114  00152E                     u2960:
  4115  00152E                     
  4116                           ;main.c: 841:        {;main.c: 842:             WriteSTLED316SErr('2');
  4117  00152E  0E32               	movlw	50
  4118  001530  EC46  F00B         	call	_WriteSTLED316SErr
  4119  001534                     
  4120                           ;main.c: 843:            MotorBREAK();
  4121  001534  EC27  F010         	call	_MotorBREAK	;wreg free
  4122  001538                     l4671:
  4123                           
  4124                           ;main.c: 846:     }while(IR_SENSORF != 1);
  4125  001538  0413               	decf	_IR_SENSORF^0,w,c
  4126  00153A  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4127  00153C  A4D8               	btfss	status,2,c
  4128  00153E  EFA3  F00A         	goto	u2971
  4129  001542  EFA5  F00A         	goto	u2970
  4130  001546                     u2971:
  4131  001546  EF86  F00A         	goto	l4663
  4132  00154A                     u2970:
  4133  00154A                     
  4134                           ;main.c: 848:     errorcounter = 30;
  4135  00154A  0E1E               	movlw	30
  4136  00154C  6E52               	movwf	_errorcounter^0,c	;volatile
  4137  00154E  0E00               	movlw	0
  4138  001550  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4139  001552  0E00               	movlw	0
  4140  001554  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4141  001556  0E00               	movlw	0
  4142  001558  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4143  00155A                     
  4144                           ;main.c: 850:     delay_1ms(Motor_Stop_Delay_Time);
  4145  00155A  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4146  00155E  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4147  001562  EC71  F00F         	call	_delay_1ms	;wreg free
  4148  001566                     
  4149                           ;main.c: 851:     MotorBREAK();
  4150  001566  EC27  F010         	call	_MotorBREAK	;wreg free
  4151  00156A                     
  4152                           ;main.c: 852:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4153  00156A  0E06               	movlw	6
  4154  00156C  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  4155  00156E  0E13               	movlw	19
  4156  001570  6E47               	movwf	??_MotorPosition_Init^0,c
  4157  001572  0EAE               	movlw	174
  4158  001574                     u3767:
  4159  001574  2EE8               	decfsz	wreg,f,c
  4160  001576  D7FE               	bra	u3767
  4161  001578  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  4162  00157A  D7FC               	bra	u3767
  4163  00157C  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4164  00157E  D7FA               	bra	u3767
  4165  001580                     
  4166                           ;main.c: 853:     IR_SENSORF=0;
  4167  001580  0E00               	movlw	0
  4168  001582  6E14               	movwf	(_IR_SENSORF+1)^0,c
  4169  001584  0E00               	movlw	0
  4170  001586  6E13               	movwf	_IR_SENSORF^0,c
  4171  001588                     
  4172                           ;main.c: 855:     LATAbits.LATA2 = 0;
  4173  001588  9489               	bcf	137,2,c	;volatile
  4174  00158A  0012               	return		;funcret
  4175  00158C                     __end_of_MotorPosition_Init:
  4176                           	opt callstack 0
  4177                           
  4178 ;; *************** function _InitTimer1 *****************
  4179 ;; Defined at:
  4180 ;;		line 1147 in file "main.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text19
  4209  001FA4                     __ptext19:
  4210                           	opt callstack 0
  4211  001FA4                     _InitTimer1:
  4212                           	opt callstack 28
  4213  001FA4                     
  4214                           ;main.c: 1149:  T1CON = 0b00110001;
  4215  001FA4  0E31               	movlw	49
  4216  001FA6  6ECD               	movwf	205,c	;volatile
  4217                           
  4218                           ;main.c: 1152:     TMR1 = 0x9E57;
  4219  001FA8  0E9E               	movlw	158
  4220  001FAA  6ECF               	movwf	207,c	;volatile
  4221  001FAC  0E57               	movlw	87
  4222  001FAE  6ECE               	movwf	206,c	;volatile
  4223  001FB0                     
  4224                           ;main.c: 1153:  TMR1IF = 0;
  4225  001FB0  909E               	bcf	3998,0,c	;volatile
  4226  001FB2                     
  4227                           ;main.c: 1154:  TMR1IE = 1;
  4228  001FB2  809D               	bsf	3997,0,c	;volatile
  4229  001FB4                     
  4230                           ;main.c: 1155:     IPR1bits.TMR1IP=1;
  4231  001FB4  809F               	bsf	159,0,c	;volatile
  4232                           
  4233                           ;main.c: 1157:     TMR1IF_triggered = 0;
  4234  001FB6  0E00               	movlw	0
  4235  001FB8  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  4236  001FBA  0012               	return		;funcret
  4237  001FBC                     __end_of_InitTimer1:
  4238                           	opt callstack 0
  4239                           
  4240 ;; *************** function _InitSTLED316 *****************
  4241 ;; Defined at:
  4242 ;;		line 14 in file "Display.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  Brightness      1    wreg     unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  Brightness      1   14[COMRAM] unsigned char 
  4247 ;;  i               2    0        int 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        3 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		_STLED316s_SPI_SendData
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text20
  4272  001A62                     __ptext20:
  4273                           	opt callstack 0
  4274  001A62                     _InitSTLED316:
  4275                           	opt callstack 27
  4276                           
  4277                           ;incstack = 0
  4278                           ;InitSTLED316@Brightness stored from wreg
  4279  001A62  6E46               	movwf	InitSTLED316@Brightness^0,c
  4280  001A64                     
  4281                           ;Display.c: 14: void InitSTLED316( unsigned char Brightness );Display.c: 15: {;Display.c
      +                          : 16:  int i;;Display.c: 18:  LATCbits.LATC4 = 1;
  4282  001A64  888B               	bsf	139,4,c	;volatile
  4283                           
  4284                           ;Display.c: 20:  LATCbits.LATC4 = 0;
  4285  001A66  988B               	bcf	139,4,c	;volatile
  4286  001A68                     
  4287                           ;Display.c: 22:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4288  001A68  0E30               	movlw	48
  4289  001A6A  EC77  F00D         	call	_STLED316s_SPI_SendData
  4290  001A6E                     
  4291                           ;Display.c: 25:  LATCbits.LATC4 = 1;
  4292  001A6E  888B               	bsf	139,4,c	;volatile
  4293  001A70                     
  4294                           ;Display.c: 27:  LATCbits.LATC4 = 0;
  4295  001A70  988B               	bcf	139,4,c	;volatile
  4296                           
  4297                           ;Display.c: 30:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4298  001A72  0E30               	movlw	48
  4299  001A74  EC77  F00D         	call	_STLED316s_SPI_SendData
  4300                           
  4301                           ;Display.c: 32:  STLED316s_SPI_SendData ( ( ( Brightness>>4 )<<5 ) | 0x00 | 0x5 );
  4302  001A78  C046  F044         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4303  001A7C  3A44               	swapf	??_InitSTLED316^0,f,c
  4304  001A7E  0E0F               	movlw	15
  4305  001A80  1644               	andwf	??_InitSTLED316^0,f,c
  4306  001A82  0E05               	movlw	5
  4307  001A84  6E45               	movwf	(??_InitSTLED316+1)^0,c
  4308  001A86                     u2935:
  4309  001A86  90D8               	bcf	status,0,c
  4310  001A88  3644               	rlcf	??_InitSTLED316^0,f,c
  4311  001A8A  2E45               	decfsz	(??_InitSTLED316+1)^0,f,c
  4312  001A8C  EF43  F00D         	goto	u2935
  4313  001A90  5044               	movf	??_InitSTLED316^0,w,c
  4314  001A92  0905               	iorlw	5
  4315  001A94  EC77  F00D         	call	_STLED316s_SPI_SendData
  4316  001A98                     
  4317                           ;Display.c: 34:  LATCbits.LATC4 = 1;
  4318  001A98  888B               	bsf	139,4,c	;volatile
  4319  001A9A                     
  4320                           ;Display.c: 36:  LATCbits.LATC4 = 0;
  4321  001A9A  988B               	bcf	139,4,c	;volatile
  4322                           
  4323                           ;Display.c: 39:  STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4324  001A9C  0E11               	movlw	17
  4325  001A9E  EC77  F00D         	call	_STLED316s_SPI_SendData
  4326  001AA2                     
  4327                           ;Display.c: 45:  LATCbits.LATC4 = 1;
  4328  001AA2  888B               	bsf	139,4,c	;volatile
  4329  001AA4                     
  4330                           ;Display.c: 47:  LATCbits.LATC4 = 0;
  4331  001AA4  988B               	bcf	139,4,c	;volatile
  4332                           
  4333                           ;Display.c: 50:     STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4334  001AA6  0E11               	movlw	17
  4335  001AA8  EC77  F00D         	call	_STLED316s_SPI_SendData
  4336                           
  4337                           ;Display.c: 52:  STLED316s_SPI_SendData ( Brightness );
  4338  001AAC  5046               	movf	InitSTLED316@Brightness^0,w,c
  4339  001AAE  EC77  F00D         	call	_STLED316s_SPI_SendData
  4340                           
  4341                           ;Display.c: 53:  STLED316s_SPI_SendData ( Brightness );
  4342  001AB2  5046               	movf	InitSTLED316@Brightness^0,w,c
  4343  001AB4  EC77  F00D         	call	_STLED316s_SPI_SendData
  4344                           
  4345                           ;Display.c: 54:  STLED316s_SPI_SendData ( Brightness );
  4346  001AB8  5046               	movf	InitSTLED316@Brightness^0,w,c
  4347  001ABA  EC77  F00D         	call	_STLED316s_SPI_SendData
  4348  001ABE                     
  4349                           ;Display.c: 58:  LATCbits.LATC4 = 1;
  4350  001ABE  888B               	bsf	139,4,c	;volatile
  4351  001AC0                     
  4352                           ;Display.c: 60:  LATCbits.LATC4 = 0;
  4353  001AC0  988B               	bcf	139,4,c	;volatile
  4354                           
  4355                           ;Display.c: 63:  STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4356  001AC2  0E18               	movlw	24
  4357  001AC4  EC77  F00D         	call	_STLED316s_SPI_SendData
  4358  001AC8                     
  4359                           ;Display.c: 66:  LATCbits.LATC4 = 1;
  4360  001AC8  888B               	bsf	139,4,c	;volatile
  4361  001ACA                     
  4362                           ;Display.c: 68:  LATCbits.LATC4 = 0;
  4363  001ACA  988B               	bcf	139,4,c	;volatile
  4364                           
  4365                           ;Display.c: 70:     STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4366  001ACC  0E18               	movlw	24
  4367  001ACE  EC77  F00D         	call	_STLED316s_SPI_SendData
  4368                           
  4369                           ;Display.c: 72:  STLED316s_SPI_SendData ( Brightness );
  4370  001AD2  5046               	movf	InitSTLED316@Brightness^0,w,c
  4371  001AD4  EC77  F00D         	call	_STLED316s_SPI_SendData
  4372                           
  4373                           ;Display.c: 73:  STLED316s_SPI_SendData ( Brightness );
  4374  001AD8  5046               	movf	InitSTLED316@Brightness^0,w,c
  4375  001ADA  EC77  F00D         	call	_STLED316s_SPI_SendData
  4376                           
  4377                           ;Display.c: 74:  STLED316s_SPI_SendData ( Brightness );
  4378  001ADE  5046               	movf	InitSTLED316@Brightness^0,w,c
  4379  001AE0  EC77  F00D         	call	_STLED316s_SPI_SendData
  4380                           
  4381                           ;Display.c: 75:  STLED316s_SPI_SendData ( Brightness );
  4382  001AE4  5046               	movf	InitSTLED316@Brightness^0,w,c
  4383  001AE6  EC77  F00D         	call	_STLED316s_SPI_SendData
  4384  001AEA                     
  4385                           ;Display.c: 79:  LATCbits.LATC4 = 1;
  4386  001AEA  888B               	bsf	139,4,c	;volatile
  4387  001AEC  0012               	return		;funcret
  4388  001AEE                     __end_of_InitSTLED316:
  4389                           	opt callstack 0
  4390                           
  4391 ;; *************** function _Homing_Again_Manual *****************
  4392 ;; Defined at:
  4393 ;;		line 884 in file "main.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    4
  4414 ;; This function calls:
  4415 ;;		_AD_capture_BattVoltage
  4416 ;;		_MotorBREAK
  4417 ;;		_MotorON_PWM
  4418 ;;		_Read_IR
  4419 ;;		_WriteSTLED316SData
  4420 ;;		_WriteSTLED316SErr
  4421 ;;		_delay_1ms
  4422 ;;		_readWeighingData
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text21
  4429  000E1E                     __ptext21:
  4430                           	opt callstack 0
  4431  000E1E                     _Homing_Again_Manual:
  4432                           	opt callstack 26
  4433  000E1E                     
  4434                           ;main.c: 889:     while (NUM>0)
  4435  000E1E  EF96  F008         	goto	l4829
  4436  000E22                     l4719:
  4437                           
  4438                           ;main.c: 890:     {;main.c: 891:         if (vibration_mode == 1 && NUM != 0)
  4439  000E22  0432               	decf	_vibration_mode^0,w,c
  4440  000E24  A4D8               	btfss	status,2,c
  4441  000E26  EF17  F007         	goto	u3001
  4442  000E2A  EF19  F007         	goto	u3000
  4443  000E2E                     u3001:
  4444  000E2E  EF37  F007         	goto	l4731
  4445  000E32                     u3000:
  4446  000E32  5019               	movf	_NUM^0,w,c
  4447  000E34  101A               	iorwf	(_NUM+1)^0,w,c
  4448  000E36  B4D8               	btfsc	status,2,c
  4449  000E38  EF20  F007         	goto	u3011
  4450  000E3C  EF22  F007         	goto	u3010
  4451  000E40                     u3011:
  4452  000E40  EF37  F007         	goto	l4731
  4453  000E44                     u3010:
  4454  000E44                     
  4455                           ;main.c: 892:         {;main.c: 893:             LATCbits.LATC1 = 1;
  4456  000E44  828B               	bsf	139,1,c	;volatile
  4457  000E46                     
  4458                           ;main.c: 894:             delay_1ms(Vmotor_Time);
  4459  000E46  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4460  000E4A  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4461  000E4E  EC71  F00F         	call	_delay_1ms	;wreg free
  4462  000E52                     
  4463                           ;main.c: 896:             LATCbits.LATC1 = 0;
  4464  000E52  928B               	bcf	139,1,c	;volatile
  4465  000E54                     
  4466                           ;main.c: 897:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4467  000E54  0E04               	movlw	4
  4468  000E56  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4469  000E58  0E0C               	movlw	12
  4470  000E5A  6E49               	movwf	??_Homing_Again_Manual^0,c
  4471  000E5C  0E34               	movlw	52
  4472  000E5E                     u3777:
  4473  000E5E  2EE8               	decfsz	wreg,f,c
  4474  000E60  D7FE               	bra	u3777
  4475  000E62  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4476  000E64  D7FC               	bra	u3777
  4477  000E66  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4478  000E68  D7FA               	bra	u3777
  4479                           
  4480                           ;main.c: 898:         }
  4481  000E6A  EF65  F007         	goto	l4743
  4482  000E6E                     l4731:
  4483  000E6E  5032               	movf	_vibration_mode^0,w,c
  4484  000E70  A4D8               	btfss	status,2,c
  4485  000E72  EF3D  F007         	goto	u3021
  4486  000E76  EF3F  F007         	goto	u3020
  4487  000E7A                     u3021:
  4488  000E7A  EF65  F007         	goto	l4743
  4489  000E7E                     u3020:
  4490  000E7E  5019               	movf	_NUM^0,w,c
  4491  000E80  101A               	iorwf	(_NUM+1)^0,w,c
  4492  000E82  B4D8               	btfsc	status,2,c
  4493  000E84  EF46  F007         	goto	u3031
  4494  000E88  EF48  F007         	goto	u3030
  4495  000E8C                     u3031:
  4496  000E8C  EF65  F007         	goto	l4743
  4497  000E90                     u3030:
  4498  000E90                     
  4499                           ;main.c: 900:         {;main.c: 901:             LATCbits.LATC1 = 0;
  4500  000E90  928B               	bcf	139,1,c	;volatile
  4501  000E92                     
  4502                           ;main.c: 902:             if (NUM != 0)
  4503  000E92  5019               	movf	_NUM^0,w,c
  4504  000E94  101A               	iorwf	(_NUM+1)^0,w,c
  4505  000E96  B4D8               	btfsc	status,2,c
  4506  000E98  EF50  F007         	goto	u3041
  4507  000E9C  EF52  F007         	goto	u3040
  4508  000EA0                     u3041:
  4509  000EA0  EF5A  F007         	goto	l4741
  4510  000EA4                     u3040:
  4511  000EA4                     
  4512                           ;main.c: 903:             {;main.c: 904:                 delay_1ms(Vmotor_Time);
  4513  000EA4  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4514  000EA8  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4515  000EAC  EC71  F00F         	call	_delay_1ms	;wreg free
  4516                           
  4517                           ;main.c: 905:             }
  4518  000EB0  EF65  F007         	goto	l4743
  4519  000EB4                     l4741:
  4520                           
  4521                           ;main.c: 907:             {;main.c: 908:                 _delay((unsigned long)((500)*(8
      +                          000000/4000.0)));
  4522  000EB4  0E06               	movlw	6
  4523  000EB6  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4524  000EB8  0E13               	movlw	19
  4525  000EBA  6E49               	movwf	??_Homing_Again_Manual^0,c
  4526  000EBC  0EAE               	movlw	174
  4527  000EBE                     u3787:
  4528  000EBE  2EE8               	decfsz	wreg,f,c
  4529  000EC0  D7FE               	bra	u3787
  4530  000EC2  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4531  000EC4  D7FC               	bra	u3787
  4532  000EC6  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4533  000EC8  D7FA               	bra	u3787
  4534  000ECA                     l4743:
  4535                           
  4536                           ;main.c: 912:         LATAbits.LATA2 = 1;
  4537  000ECA  8489               	bsf	137,2,c	;volatile
  4538  000ECC  0004               	clrwdt		;# 
  4539  000ECE                     
  4540                           ;main.c: 915:         readWeighingData();
  4541  000ECE  EC25  F00E         	call	_readWeighingData	;wreg free
  4542  000ED2                     
  4543                           ;main.c: 916:         AD_capture_BattVoltage();
  4544  000ED2  ECE2  F00E         	call	_AD_capture_BattVoltage	;wreg free
  4545  000ED6                     
  4546                           ;main.c: 917:         delay_1ms(Motor_Pause_Time);
  4547  000ED6  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  4548  000EDA  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4549  000EDE  EC71  F00F         	call	_delay_1ms	;wreg free
  4550  000EE2                     
  4551                           ;main.c: 918:         MotorON_PWM();
  4552  000EE2  EC22  F010         	call	_MotorON_PWM	;wreg free
  4553  000EE6                     
  4554                           ;main.c: 919:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4555  000EE6  0E04               	movlw	4
  4556  000EE8  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4557  000EEA  0E8E               	movlw	142
  4558  000EEC  6E49               	movwf	??_Homing_Again_Manual^0,c
  4559  000EEE  0E12               	movlw	18
  4560  000EF0                     u3797:
  4561  000EF0  2EE8               	decfsz	wreg,f,c
  4562  000EF2  D7FE               	bra	u3797
  4563  000EF4  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4564  000EF6  D7FC               	bra	u3797
  4565  000EF8  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4566  000EFA  D7FA               	bra	u3797
  4567  000EFC  D000               	nop2	
  4568  000EFE                     
  4569                           ;main.c: 920:         errorcounter = 30;
  4570  000EFE  0E1E               	movlw	30
  4571  000F00  6E52               	movwf	_errorcounter^0,c	;volatile
  4572  000F02  0E00               	movlw	0
  4573  000F04  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4574  000F06  0E00               	movlw	0
  4575  000F08  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4576  000F0A  0E00               	movlw	0
  4577  000F0C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4578  000F0E                     l4757:
  4579                           
  4580                           ;main.c: 923:         {;main.c: 924:             IR_SENSORF = Read_IR();
  4581  000F0E  ECC0  F00F         	call	_Read_IR	;wreg free
  4582  000F12  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4583  000F16  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4584  000F1A                     
  4585                           ;main.c: 925:             if(errorcounter == 0)
  4586  000F1A  5052               	movf	_errorcounter^0,w,c	;volatile
  4587  000F1C  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4588  000F1E  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4589  000F20  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4590  000F22  A4D8               	btfss	status,2,c
  4591  000F24  EF96  F007         	goto	u3051
  4592  000F28  EF98  F007         	goto	u3050
  4593  000F2C                     u3051:
  4594  000F2C  EF9D  F007         	goto	l4765
  4595  000F30                     u3050:
  4596  000F30                     
  4597                           ;main.c: 926:             {;main.c: 927:                 WriteSTLED316SErr('1');
  4598  000F30  0E31               	movlw	49
  4599  000F32  EC46  F00B         	call	_WriteSTLED316SErr
  4600  000F36                     
  4601                           ;main.c: 928:                 MotorBREAK();
  4602  000F36  EC27  F010         	call	_MotorBREAK	;wreg free
  4603  000F3A                     l4765:
  4604                           
  4605                           ;main.c: 931:         }while(IR_SENSORF != 0);
  4606  000F3A  5013               	movf	_IR_SENSORF^0,w,c
  4607  000F3C  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4608  000F3E  A4D8               	btfss	status,2,c
  4609  000F40  EFA4  F007         	goto	u3061
  4610  000F44  EFA6  F007         	goto	u3060
  4611  000F48                     u3061:
  4612  000F48  EF87  F007         	goto	l4757
  4613  000F4C                     u3060:
  4614  000F4C                     
  4615                           ;main.c: 933:          _delay((unsigned long)((30)*(8000000/4000.0)));
  4616  000F4C  0E4E               	movlw	78
  4617  000F4E  6E49               	movwf	??_Homing_Again_Manual^0,c
  4618  000F50  0EEB               	movlw	235
  4619  000F52                     u3807:
  4620  000F52  2EE8               	decfsz	wreg,f,c
  4621  000F54  D7FE               	bra	u3807
  4622  000F56  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4623  000F58  D7FC               	bra	u3807
  4624  000F5A  F000               	nop	
  4625  000F5C                     
  4626                           ;main.c: 935:          errorcounter = 30;
  4627  000F5C  0E1E               	movlw	30
  4628  000F5E  6E52               	movwf	_errorcounter^0,c	;volatile
  4629  000F60  0E00               	movlw	0
  4630  000F62  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4631  000F64  0E00               	movlw	0
  4632  000F66  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4633  000F68  0E00               	movlw	0
  4634  000F6A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4635  000F6C                     l4771:
  4636                           
  4637                           ;main.c: 938:         {;main.c: 939:             IR_SENSORF = Read_IR();
  4638  000F6C  ECC0  F00F         	call	_Read_IR	;wreg free
  4639  000F70  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4640  000F74  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4641  000F78                     
  4642                           ;main.c: 940:             if(errorcounter == 0)
  4643  000F78  5052               	movf	_errorcounter^0,w,c	;volatile
  4644  000F7A  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4645  000F7C  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4646  000F7E  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4647  000F80  A4D8               	btfss	status,2,c
  4648  000F82  EFC5  F007         	goto	u3071
  4649  000F86  EFC7  F007         	goto	u3070
  4650  000F8A                     u3071:
  4651  000F8A  EFCC  F007         	goto	l4779
  4652  000F8E                     u3070:
  4653  000F8E                     
  4654                           ;main.c: 941:             {;main.c: 942:                 WriteSTLED316SErr('2');
  4655  000F8E  0E32               	movlw	50
  4656  000F90  EC46  F00B         	call	_WriteSTLED316SErr
  4657  000F94                     
  4658                           ;main.c: 943:                 MotorBREAK();
  4659  000F94  EC27  F010         	call	_MotorBREAK	;wreg free
  4660  000F98                     l4779:
  4661                           
  4662                           ;main.c: 945:         }
  4663  000F98  0413               	decf	_IR_SENSORF^0,w,c
  4664  000F9A  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4665  000F9C  A4D8               	btfss	status,2,c
  4666  000F9E  EFD3  F007         	goto	u3081
  4667  000FA2  EFD5  F007         	goto	u3080
  4668  000FA6                     u3081:
  4669  000FA6  EFB6  F007         	goto	l4771
  4670  000FAA                     u3080:
  4671  000FAA                     
  4672                           ;main.c: 948:         errorcounter = 30;
  4673  000FAA  0E1E               	movlw	30
  4674  000FAC  6E52               	movwf	_errorcounter^0,c	;volatile
  4675  000FAE  0E00               	movlw	0
  4676  000FB0  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4677  000FB2  0E00               	movlw	0
  4678  000FB4  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4679  000FB6  0E00               	movlw	0
  4680  000FB8  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4681  000FBA                     
  4682                           ;main.c: 949:         delay_1ms(Motor_Stop_Delay_Time);
  4683  000FBA  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4684  000FBE  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4685  000FC2  EC71  F00F         	call	_delay_1ms	;wreg free
  4686  000FC6                     
  4687                           ;main.c: 950:         MotorBREAK();
  4688  000FC6  EC27  F010         	call	_MotorBREAK	;wreg free
  4689                           
  4690                           ;main.c: 952:         if (vibration_mode == 1 && NUM != 0)
  4691  000FCA  0432               	decf	_vibration_mode^0,w,c
  4692  000FCC  A4D8               	btfss	status,2,c
  4693  000FCE  EFEB  F007         	goto	u3091
  4694  000FD2  EFED  F007         	goto	u3090
  4695  000FD6                     u3091:
  4696  000FD6  EF0B  F008         	goto	l4797
  4697  000FDA                     u3090:
  4698  000FDA  5019               	movf	_NUM^0,w,c
  4699  000FDC  101A               	iorwf	(_NUM+1)^0,w,c
  4700  000FDE  B4D8               	btfsc	status,2,c
  4701  000FE0  EFF4  F007         	goto	u3101
  4702  000FE4  EFF6  F007         	goto	u3100
  4703  000FE8                     u3101:
  4704  000FE8  EF0B  F008         	goto	l4797
  4705  000FEC                     u3100:
  4706  000FEC                     
  4707                           ;main.c: 953:         {;main.c: 954:             LATCbits.LATC1 = 1;
  4708  000FEC  828B               	bsf	139,1,c	;volatile
  4709  000FEE                     
  4710                           ;main.c: 955:             delay_1ms(Vmotor_Time);
  4711  000FEE  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4712  000FF2  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4713  000FF6  EC71  F00F         	call	_delay_1ms	;wreg free
  4714  000FFA                     
  4715                           ;main.c: 957:             LATCbits.LATC1 = 0;
  4716  000FFA  928B               	bcf	139,1,c	;volatile
  4717  000FFC                     
  4718                           ;main.c: 958:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4719  000FFC  0E04               	movlw	4
  4720  000FFE  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4721  001000  0E0C               	movlw	12
  4722  001002  6E49               	movwf	??_Homing_Again_Manual^0,c
  4723  001004  0E34               	movlw	52
  4724  001006                     u3817:
  4725  001006  2EE8               	decfsz	wreg,f,c
  4726  001008  D7FE               	bra	u3817
  4727  00100A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4728  00100C  D7FC               	bra	u3817
  4729  00100E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4730  001010  D7FA               	bra	u3817
  4731                           
  4732                           ;main.c: 959:         }
  4733  001012  EF39  F008         	goto	l4809
  4734  001016                     l4797:
  4735  001016  5032               	movf	_vibration_mode^0,w,c
  4736  001018  A4D8               	btfss	status,2,c
  4737  00101A  EF11  F008         	goto	u3111
  4738  00101E  EF13  F008         	goto	u3110
  4739  001022                     u3111:
  4740  001022  EF39  F008         	goto	l4809
  4741  001026                     u3110:
  4742  001026  5019               	movf	_NUM^0,w,c
  4743  001028  101A               	iorwf	(_NUM+1)^0,w,c
  4744  00102A  B4D8               	btfsc	status,2,c
  4745  00102C  EF1A  F008         	goto	u3121
  4746  001030  EF1C  F008         	goto	u3120
  4747  001034                     u3121:
  4748  001034  EF39  F008         	goto	l4809
  4749  001038                     u3120:
  4750  001038                     
  4751                           ;main.c: 961:         {;main.c: 962:             LATCbits.LATC1 = 0;
  4752  001038  928B               	bcf	139,1,c	;volatile
  4753  00103A                     
  4754                           ;main.c: 963:             if (NUM != 0)
  4755  00103A  5019               	movf	_NUM^0,w,c
  4756  00103C  101A               	iorwf	(_NUM+1)^0,w,c
  4757  00103E  B4D8               	btfsc	status,2,c
  4758  001040  EF24  F008         	goto	u3131
  4759  001044  EF26  F008         	goto	u3130
  4760  001048                     u3131:
  4761  001048  EF2E  F008         	goto	l4807
  4762  00104C                     u3130:
  4763  00104C                     
  4764                           ;main.c: 964:             {;main.c: 965:                 delay_1ms(Vmotor_Time);
  4765  00104C  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4766  001050  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4767  001054  EC71  F00F         	call	_delay_1ms	;wreg free
  4768                           
  4769                           ;main.c: 966:             }
  4770  001058  EF39  F008         	goto	l4809
  4771  00105C                     l4807:
  4772                           
  4773                           ;main.c: 968:             {;main.c: 969:                 _delay((unsigned long)((500)*(8
      +                          000000/4000.0)));
  4774  00105C  0E06               	movlw	6
  4775  00105E  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4776  001060  0E13               	movlw	19
  4777  001062  6E49               	movwf	??_Homing_Again_Manual^0,c
  4778  001064  0EAE               	movlw	174
  4779  001066                     u3827:
  4780  001066  2EE8               	decfsz	wreg,f,c
  4781  001068  D7FE               	bra	u3827
  4782  00106A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4783  00106C  D7FC               	bra	u3827
  4784  00106E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4785  001070  D7FA               	bra	u3827
  4786  001072                     l4809:
  4787                           
  4788                           ;main.c: 973:         NUM--;
  4789  001072  0619               	decf	_NUM^0,f,c
  4790  001074  A0D8               	btfss	status,0,c
  4791  001076  061A               	decf	(_NUM+1)^0,f,c
  4792  001078                     
  4793                           ;main.c: 974:         WriteSTLED316SData(NUM, vibration_mode);
  4794  001078  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  4795  00107C  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  4796  001080  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4797  001084  ECDA  F00C         	call	_WriteSTLED316SData	;wreg free
  4798  001088                     
  4799                           ;main.c: 976:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  4800  001088  0ECB               	movlw	203
  4801  00108A  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4802  00108C  0EEC               	movlw	236
  4803  00108E  6E49               	movwf	??_Homing_Again_Manual^0,c
  4804  001090  0E84               	movlw	132
  4805  001092                     u3837:
  4806  001092  2EE8               	decfsz	wreg,f,c
  4807  001094  D7FE               	bra	u3837
  4808  001096  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4809  001098  D7FC               	bra	u3837
  4810  00109A  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4811  00109C  D7FA               	bra	u3837
  4812  00109E  D000               	nop2	
  4813  0010A0                     
  4814                           ;main.c: 977:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  4815  0010A0  0ECB               	movlw	203
  4816  0010A2  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4817  0010A4  0EEC               	movlw	236
  4818  0010A6  6E49               	movwf	??_Homing_Again_Manual^0,c
  4819  0010A8  0E84               	movlw	132
  4820  0010AA                     u3847:
  4821  0010AA  2EE8               	decfsz	wreg,f,c
  4822  0010AC  D7FE               	bra	u3847
  4823  0010AE  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4824  0010B0  D7FC               	bra	u3847
  4825  0010B2  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4826  0010B4  D7FA               	bra	u3847
  4827  0010B6  D000               	nop2	
  4828  0010B8                     
  4829                           ;main.c: 978:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  4830  0010B8  0ECB               	movlw	203
  4831  0010BA  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4832  0010BC  0EEC               	movlw	236
  4833  0010BE  6E49               	movwf	??_Homing_Again_Manual^0,c
  4834  0010C0  0E84               	movlw	132
  4835  0010C2                     u3857:
  4836  0010C2  2EE8               	decfsz	wreg,f,c
  4837  0010C4  D7FE               	bra	u3857
  4838  0010C6  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4839  0010C8  D7FC               	bra	u3857
  4840  0010CA  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4841  0010CC  D7FA               	bra	u3857
  4842  0010CE  D000               	nop2	
  4843  0010D0                     
  4844                           ;main.c: 979:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  4845  0010D0  0ECB               	movlw	203
  4846  0010D2  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4847  0010D4  0EEC               	movlw	236
  4848  0010D6  6E49               	movwf	??_Homing_Again_Manual^0,c
  4849  0010D8  0E84               	movlw	132
  4850  0010DA                     u3867:
  4851  0010DA  2EE8               	decfsz	wreg,f,c
  4852  0010DC  D7FE               	bra	u3867
  4853  0010DE  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4854  0010E0  D7FC               	bra	u3867
  4855  0010E2  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4856  0010E4  D7FA               	bra	u3867
  4857  0010E6  D000               	nop2	
  4858  0010E8                     
  4859                           ;main.c: 980:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  4860  0010E8  0ECB               	movlw	203
  4861  0010EA  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4862  0010EC  0EEC               	movlw	236
  4863  0010EE  6E49               	movwf	??_Homing_Again_Manual^0,c
  4864  0010F0  0E84               	movlw	132
  4865  0010F2                     u3877:
  4866  0010F2  2EE8               	decfsz	wreg,f,c
  4867  0010F4  D7FE               	bra	u3877
  4868  0010F6  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4869  0010F8  D7FC               	bra	u3877
  4870  0010FA  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4871  0010FC  D7FA               	bra	u3877
  4872  0010FE  D000               	nop2	
  4873  001100                     
  4874                           ;main.c: 981:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  4875  001100  0ECB               	movlw	203
  4876  001102  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4877  001104  0EEC               	movlw	236
  4878  001106  6E49               	movwf	??_Homing_Again_Manual^0,c
  4879  001108  0E84               	movlw	132
  4880  00110A                     u3887:
  4881  00110A  2EE8               	decfsz	wreg,f,c
  4882  00110C  D7FE               	bra	u3887
  4883  00110E  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4884  001110  D7FC               	bra	u3887
  4885  001112  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4886  001114  D7FA               	bra	u3887
  4887  001116  D000               	nop2	
  4888  001118                     
  4889                           ;main.c: 983:         if(Stop==1)
  4890  001118  0435               	decf	_Stop^0,w,c
  4891  00111A  A4D8               	btfss	status,2,c
  4892  00111C  EF92  F008         	goto	u3141
  4893  001120  EF94  F008         	goto	u3140
  4894  001124                     u3141:
  4895  001124  EF96  F008         	goto	l4829
  4896  001128                     u3140:
  4897  001128  EF9F  F008         	goto	l348
  4898  00112C                     l4829:
  4899                           
  4900                           ;main.c: 889:     while (NUM>0)
  4901  00112C  5019               	movf	_NUM^0,w,c
  4902  00112E  101A               	iorwf	(_NUM+1)^0,w,c
  4903  001130  A4D8               	btfss	status,2,c
  4904  001132  EF9D  F008         	goto	u3151
  4905  001136  EF9F  F008         	goto	u3150
  4906  00113A                     u3151:
  4907  00113A  EF11  F007         	goto	l4719
  4908  00113E                     u3150:
  4909  00113E                     l348:
  4910                           
  4911                           ;main.c: 988:     LATAbits.LATA2 = 0;
  4912  00113E  9489               	bcf	137,2,c	;volatile
  4913  001140                     
  4914                           ;main.c: 990:     NUM = 0;
  4915  001140  0E00               	movlw	0
  4916  001142  6E1A               	movwf	(_NUM+1)^0,c
  4917  001144  0E00               	movlw	0
  4918  001146  6E19               	movwf	_NUM^0,c
  4919                           
  4920                           ;main.c: 991:     OpMode = MANUAL_MODE;
  4921  001148  0E00               	movlw	0
  4922  00114A  6E30               	movwf	_OpMode^0,c	;volatile
  4923  00114C  0012               	return		;funcret
  4924  00114E                     __end_of_Homing_Again_Manual:
  4925                           	opt callstack 0
  4926                           
  4927 ;; *************** function _WriteSTLED316SData *****************
  4928 ;; Defined at:
  4929 ;;		line 150 in file "Display.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  number          2   14[COMRAM] int 
  4932 ;;  v_mode          1   16[COMRAM] unsigned char 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  NUM_DIG1        2    2[BANK0 ] int 
  4935 ;;  NUM_DIG0        2    0[BANK0 ] int 
  4936 ;;  data4           1    5[BANK0 ] unsigned char 
  4937 ;;  data3           1    4[BANK0 ] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4947 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;Total ram usage:        9 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    3
  4954 ;; This function calls:
  4955 ;;		_Get7Seg
  4956 ;;		_STLED316s_SPI_SendData
  4957 ;;		___awdiv
  4958 ;;		___awmod
  4959 ;; This function is called by:
  4960 ;;		_main
  4961 ;;		_Homing_Again_Manual
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text22
  4966  0019B4                     __ptext22:
  4967                           	opt callstack 0
  4968  0019B4                     _WriteSTLED316SData:
  4969                           	opt callstack 27
  4970  0019B4                     
  4971                           ;Display.c: 150: void WriteSTLED316SData( int number, char v_mode);Display.c: 151: {;Dis
      +                          play.c: 152:  unsigned char data3, data4;;Display.c: 153:  int NUM_DIG0, NUM_DIG1;;Displ
      +                          ay.c: 155:  NUM_DIG0=(int) number%10;
  4972  0019B4  C046  F03E         	movff	WriteSTLED316SData@number,___awmod@dividend
  4973  0019B8  C047  F03F         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  4974  0019BC  0E00               	movlw	0
  4975  0019BE  6E41               	movwf	(___awmod@divisor+1)^0,c
  4976  0019C0  0E0A               	movlw	10
  4977  0019C2  6E40               	movwf	___awmod@divisor^0,c
  4978  0019C4  EC82  F00C         	call	___awmod	;wreg free
  4979  0019C8  C03E  F080         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  4980  0019CC  C03F  F081         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  4981                           
  4982                           ;Display.c: 156:  NUM_DIG1=(int) number/10;
  4983  0019D0  C046  F03E         	movff	WriteSTLED316SData@number,___awdiv@dividend
  4984  0019D4  C047  F03F         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  4985  0019D8  0E00               	movlw	0
  4986  0019DA  6E41               	movwf	(___awdiv@divisor+1)^0,c
  4987  0019DC  0E0A               	movlw	10
  4988  0019DE  6E40               	movwf	___awdiv@divisor^0,c
  4989  0019E0  EC20  F00C         	call	___awdiv	;wreg free
  4990  0019E4  C03E  F082         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  4991  0019E8  C03F  F083         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  4992  0019EC                     
  4993                           ;Display.c: 158:  LATCbits.LATC4 = 0;
  4994  0019EC  988B               	bcf	139,4,c	;volatile
  4995                           
  4996                           ;Display.c: 160:  STLED316s_SPI_SendData (0x00 );
  4997  0019EE  0E00               	movlw	0
  4998  0019F0  EC77  F00D         	call	_STLED316s_SPI_SendData
  4999  0019F4                     
  5000                           ;Display.c: 162:  LATCbits.LATC4 = 1;
  5001  0019F4  888B               	bsf	139,4,c	;volatile
  5002  0019F6                     
  5003                           ;Display.c: 164:  LATCbits.LATC4 = 0;
  5004  0019F6  988B               	bcf	139,4,c	;volatile
  5005                           
  5006                           ;Display.c: 166:  STLED316s_SPI_SendData (0x00);
  5007  0019F8  0E00               	movlw	0
  5008  0019FA  EC77  F00D         	call	_STLED316s_SPI_SendData
  5009                           
  5010                           ;Display.c: 168:  data4 = Get7Seg(NUM_DIG1);
  5011  0019FE  C082  F03E         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  5012  001A02  C083  F03F         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  5013  001A06  ECBA  F00B         	call	_Get7Seg	;wreg free
  5014  001A0A  0100               	movlb	0	; () banked
  5015  001A0C  6F85               	movwf	WriteSTLED316SData@data4& (0+255),b
  5016                           
  5017                           ;Display.c: 169:  data3 = Get7Seg(NUM_DIG0);
  5018  001A0E  C080  F03E         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  5019  001A12  C081  F03F         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  5020  001A16  ECBA  F00B         	call	_Get7Seg	;wreg free
  5021  001A1A  0100               	movlb	0	; () banked
  5022  001A1C  6F84               	movwf	WriteSTLED316SData@data3& (0+255),b
  5023  001A1E                     
  5024                           ; BSR set to: 0
  5025                           ;Display.c: 171:  if (v_mode)
  5026  001A1E  5048               	movf	WriteSTLED316SData@v_mode^0,w,c
  5027  001A20  B4D8               	btfsc	status,2,c
  5028  001A22  EF15  F00D         	goto	u2911
  5029  001A26  EF17  F00D         	goto	u2910
  5030  001A2A                     u2911:
  5031  001A2A  EF23  F00D         	goto	l4525
  5032  001A2E                     u2910:
  5033  001A2E                     
  5034                           ; BSR set to: 0
  5035                           ;Display.c: 172:  {;Display.c: 173:   if (v_mode == 0xFF)
  5036  001A2E  2848               	incf	WriteSTLED316SData@v_mode^0,w,c
  5037  001A30  A4D8               	btfss	status,2,c
  5038  001A32  EF1D  F00D         	goto	u2921
  5039  001A36  EF1F  F00D         	goto	u2920
  5040  001A3A                     u2921:
  5041  001A3A  EF22  F00D         	goto	l4523
  5042  001A3E                     u2920:
  5043  001A3E                     
  5044                           ; BSR set to: 0
  5045                           ;Display.c: 174:    data4 |= 0x80;
  5046  001A3E  8F85               	bsf	WriteSTLED316SData@data4& (0+255),7,b
  5047  001A40  EF23  F00D         	goto	l4525
  5048  001A44                     l4523:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;Display.c: 176:    data3 |= 0x80;
  5052  001A44  8F84               	bsf	WriteSTLED316SData@data3& (0+255),7,b
  5053  001A46                     l4525:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;Display.c: 179:     STLED316s_SPI_SendData (data4);
  5057  001A46  5185               	movf	WriteSTLED316SData@data4& (0+255),w,b
  5058  001A48  EC77  F00D         	call	_STLED316s_SPI_SendData
  5059  001A4C                     
  5060                           ;Display.c: 180:     STLED316s_SPI_SendData (data3);
  5061  001A4C  0100               	movlb	0	; () banked
  5062  001A4E  5184               	movf	WriteSTLED316SData@data3& (0+255),w,b
  5063  001A50  EC77  F00D         	call	_STLED316s_SPI_SendData
  5064  001A54                     
  5065                           ;Display.c: 182:  LATCbits.LATC4 = 1;
  5066  001A54  888B               	bsf	139,4,c	;volatile
  5067  001A56                     
  5068                           ;Display.c: 184:  LATCbits.LATC4 = 0;
  5069  001A56  988B               	bcf	139,4,c	;volatile
  5070  001A58                     
  5071                           ;Display.c: 186:  STLED316s_SPI_SendData ( 0x0D );
  5072  001A58  0E0D               	movlw	13
  5073  001A5A  EC77  F00D         	call	_STLED316s_SPI_SendData
  5074  001A5E                     
  5075                           ;Display.c: 188:  LATCbits.LATC4 = 1;
  5076  001A5E  888B               	bsf	139,4,c	;volatile
  5077  001A60  0012               	return		;funcret
  5078  001A62                     __end_of_WriteSTLED316SData:
  5079                           	opt callstack 0
  5080                           
  5081 ;; *************** function ___awmod *****************
  5082 ;; Defined at:
  5083 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  dividend        2    6[COMRAM] int 
  5086 ;;  divisor         2    8[COMRAM] int 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  sign            1   11[COMRAM] unsigned char 
  5089 ;;  counter         1   10[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  2    6[COMRAM] int 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;Total ram usage:        6 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    2
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_WriteSTLED316SData
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text23
  5114  001904                     __ptext23:
  5115                           	opt callstack 0
  5116  001904                     ___awmod:
  5117                           	opt callstack 27
  5118  001904  0E00               	movlw	0
  5119  001906  6E43               	movwf	___awmod@sign^0,c
  5120  001908  BE3F               	btfsc	(___awmod@dividend+1)^0,7,c
  5121  00190A  EF8B  F00C         	goto	u2850
  5122  00190E  EF89  F00C         	goto	u2851
  5123  001912                     u2851:
  5124  001912  EF91  F00C         	goto	l4481
  5125  001916                     u2850:
  5126  001916  6C3E               	negf	___awmod@dividend^0,c
  5127  001918  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  5128  00191A  B0D8               	btfsc	status,0,c
  5129  00191C  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  5130  00191E  0E01               	movlw	1
  5131  001920  6E43               	movwf	___awmod@sign^0,c
  5132  001922                     l4481:
  5133  001922  BE41               	btfsc	(___awmod@divisor+1)^0,7,c
  5134  001924  EF98  F00C         	goto	u2860
  5135  001928  EF96  F00C         	goto	u2861
  5136  00192C                     u2861:
  5137  00192C  EF9C  F00C         	goto	l4485
  5138  001930                     u2860:
  5139  001930  6C40               	negf	___awmod@divisor^0,c
  5140  001932  1E41               	comf	(___awmod@divisor+1)^0,f,c
  5141  001934  B0D8               	btfsc	status,0,c
  5142  001936  2A41               	incf	(___awmod@divisor+1)^0,f,c
  5143  001938                     l4485:
  5144  001938  5040               	movf	___awmod@divisor^0,w,c
  5145  00193A  1041               	iorwf	(___awmod@divisor+1)^0,w,c
  5146  00193C  B4D8               	btfsc	status,2,c
  5147  00193E  EFA3  F00C         	goto	u2871
  5148  001942  EFA5  F00C         	goto	u2870
  5149  001946                     u2871:
  5150  001946  EFC9  F00C         	goto	l4501
  5151  00194A                     u2870:
  5152  00194A  0E01               	movlw	1
  5153  00194C  6E42               	movwf	___awmod@counter^0,c
  5154  00194E  EFAD  F00C         	goto	l4491
  5155  001952                     l4489:
  5156  001952  90D8               	bcf	status,0,c
  5157  001954  3640               	rlcf	___awmod@divisor^0,f,c
  5158  001956  3641               	rlcf	(___awmod@divisor+1)^0,f,c
  5159  001958  2A42               	incf	___awmod@counter^0,f,c
  5160  00195A                     l4491:
  5161  00195A  AE41               	btfss	(___awmod@divisor+1)^0,7,c
  5162  00195C  EFB2  F00C         	goto	u2881
  5163  001960  EFB4  F00C         	goto	u2880
  5164  001964                     u2881:
  5165  001964  EFA9  F00C         	goto	l4489
  5166  001968                     u2880:
  5167  001968                     l4493:
  5168  001968  5040               	movf	___awmod@divisor^0,w,c
  5169  00196A  5C3E               	subwf	___awmod@dividend^0,w,c
  5170  00196C  5041               	movf	(___awmod@divisor+1)^0,w,c
  5171  00196E  583F               	subwfb	(___awmod@dividend+1)^0,w,c
  5172  001970  A0D8               	btfss	status,0,c
  5173  001972  EFBD  F00C         	goto	u2891
  5174  001976  EFBF  F00C         	goto	u2890
  5175  00197A                     u2891:
  5176  00197A  EFC3  F00C         	goto	l4497
  5177  00197E                     u2890:
  5178  00197E  5040               	movf	___awmod@divisor^0,w,c
  5179  001980  5E3E               	subwf	___awmod@dividend^0,f,c
  5180  001982  5041               	movf	(___awmod@divisor+1)^0,w,c
  5181  001984  5A3F               	subwfb	(___awmod@dividend+1)^0,f,c
  5182  001986                     l4497:
  5183  001986  90D8               	bcf	status,0,c
  5184  001988  3241               	rrcf	(___awmod@divisor+1)^0,f,c
  5185  00198A  3240               	rrcf	___awmod@divisor^0,f,c
  5186  00198C  2E42               	decfsz	___awmod@counter^0,f,c
  5187  00198E  EFB4  F00C         	goto	l4493
  5188  001992                     l4501:
  5189  001992  5043               	movf	___awmod@sign^0,w,c
  5190  001994  B4D8               	btfsc	status,2,c
  5191  001996  EFCF  F00C         	goto	u2901
  5192  00199A  EFD1  F00C         	goto	u2900
  5193  00199E                     u2901:
  5194  00199E  EFD5  F00C         	goto	l4505
  5195  0019A2                     u2900:
  5196  0019A2  6C3E               	negf	___awmod@dividend^0,c
  5197  0019A4  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  5198  0019A6  B0D8               	btfsc	status,0,c
  5199  0019A8  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  5200  0019AA                     l4505:
  5201  0019AA  C03E  F03E         	movff	___awmod@dividend,?___awmod
  5202  0019AE  C03F  F03F         	movff	___awmod@dividend+1,?___awmod+1
  5203  0019B2  0012               	return		;funcret
  5204  0019B4                     __end_of___awmod:
  5205                           	opt callstack 0
  5206                           
  5207 ;; *************** function ___awdiv *****************
  5208 ;; Defined at:
  5209 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  dividend        2    6[COMRAM] int 
  5212 ;;  divisor         2    8[COMRAM] int 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  quotient        2   12[COMRAM] int 
  5215 ;;  sign            1   11[COMRAM] unsigned char 
  5216 ;;  counter         1   10[COMRAM] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2    6[COMRAM] int 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;Total ram usage:        8 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    2
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_WriteSTLED316SData
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text24
  5241  001840                     __ptext24:
  5242                           	opt callstack 0
  5243  001840                     ___awdiv:
  5244                           	opt callstack 27
  5245  001840  0E00               	movlw	0
  5246  001842  6E43               	movwf	___awdiv@sign^0,c
  5247  001844  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  5248  001846  EF29  F00C         	goto	u2790
  5249  00184A  EF27  F00C         	goto	u2791
  5250  00184E                     u2791:
  5251  00184E  EF2F  F00C         	goto	l4437
  5252  001852                     u2790:
  5253  001852  6C40               	negf	___awdiv@divisor^0,c
  5254  001854  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  5255  001856  B0D8               	btfsc	status,0,c
  5256  001858  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  5257  00185A  0E01               	movlw	1
  5258  00185C  6E43               	movwf	___awdiv@sign^0,c
  5259  00185E                     l4437:
  5260  00185E  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  5261  001860  EF36  F00C         	goto	u2800
  5262  001864  EF34  F00C         	goto	u2801
  5263  001868                     u2801:
  5264  001868  EF3C  F00C         	goto	l4443
  5265  00186C                     u2800:
  5266  00186C  6C3E               	negf	___awdiv@dividend^0,c
  5267  00186E  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  5268  001870  B0D8               	btfsc	status,0,c
  5269  001872  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  5270  001874  0E01               	movlw	1
  5271  001876  1A43               	xorwf	___awdiv@sign^0,f,c
  5272  001878                     l4443:
  5273  001878  0E00               	movlw	0
  5274  00187A  6E45               	movwf	(___awdiv@quotient+1)^0,c
  5275  00187C  0E00               	movlw	0
  5276  00187E  6E44               	movwf	___awdiv@quotient^0,c
  5277  001880  5040               	movf	___awdiv@divisor^0,w,c
  5278  001882  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  5279  001884  B4D8               	btfsc	status,2,c
  5280  001886  EF47  F00C         	goto	u2811
  5281  00188A  EF49  F00C         	goto	u2810
  5282  00188E                     u2811:
  5283  00188E  EF71  F00C         	goto	l4465
  5284  001892                     u2810:
  5285  001892  0E01               	movlw	1
  5286  001894  6E42               	movwf	___awdiv@counter^0,c
  5287  001896  EF51  F00C         	goto	l4451
  5288  00189A                     l4449:
  5289  00189A  90D8               	bcf	status,0,c
  5290  00189C  3640               	rlcf	___awdiv@divisor^0,f,c
  5291  00189E  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  5292  0018A0  2A42               	incf	___awdiv@counter^0,f,c
  5293  0018A2                     l4451:
  5294  0018A2  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  5295  0018A4  EF56  F00C         	goto	u2821
  5296  0018A8  EF58  F00C         	goto	u2820
  5297  0018AC                     u2821:
  5298  0018AC  EF4D  F00C         	goto	l4449
  5299  0018B0                     u2820:
  5300  0018B0                     l4453:
  5301  0018B0  90D8               	bcf	status,0,c
  5302  0018B2  3644               	rlcf	___awdiv@quotient^0,f,c
  5303  0018B4  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  5304  0018B6  5040               	movf	___awdiv@divisor^0,w,c
  5305  0018B8  5C3E               	subwf	___awdiv@dividend^0,w,c
  5306  0018BA  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5307  0018BC  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  5308  0018BE  A0D8               	btfss	status,0,c
  5309  0018C0  EF64  F00C         	goto	u2831
  5310  0018C4  EF66  F00C         	goto	u2830
  5311  0018C8                     u2831:
  5312  0018C8  EF6B  F00C         	goto	l4461
  5313  0018CC                     u2830:
  5314  0018CC  5040               	movf	___awdiv@divisor^0,w,c
  5315  0018CE  5E3E               	subwf	___awdiv@dividend^0,f,c
  5316  0018D0  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5317  0018D2  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  5318  0018D4  8044               	bsf	___awdiv@quotient^0,0,c
  5319  0018D6                     l4461:
  5320  0018D6  90D8               	bcf	status,0,c
  5321  0018D8  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  5322  0018DA  3240               	rrcf	___awdiv@divisor^0,f,c
  5323  0018DC  2E42               	decfsz	___awdiv@counter^0,f,c
  5324  0018DE  EF58  F00C         	goto	l4453
  5325  0018E2                     l4465:
  5326  0018E2  5043               	movf	___awdiv@sign^0,w,c
  5327  0018E4  B4D8               	btfsc	status,2,c
  5328  0018E6  EF77  F00C         	goto	u2841
  5329  0018EA  EF79  F00C         	goto	u2840
  5330  0018EE                     u2841:
  5331  0018EE  EF7D  F00C         	goto	l4469
  5332  0018F2                     u2840:
  5333  0018F2  6C44               	negf	___awdiv@quotient^0,c
  5334  0018F4  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  5335  0018F6  B0D8               	btfsc	status,0,c
  5336  0018F8  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  5337  0018FA                     l4469:
  5338  0018FA  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  5339  0018FE  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  5340  001902  0012               	return		;funcret
  5341  001904                     __end_of___awdiv:
  5342                           	opt callstack 0
  5343                           
  5344 ;; *************** function _Get7Seg *****************
  5345 ;; Defined at:
  5346 ;;		line 107 in file "Display.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  Digit           2    6[COMRAM] int 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  Data            1   10[COMRAM] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      unsigned char 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;Total ram usage:        5 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    2
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_WriteSTLED316SData
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text25
  5375  001774                     __ptext25:
  5376                           	opt callstack 0
  5377  001774                     _Get7Seg:
  5378                           	opt callstack 27
  5379  001774                     
  5380                           ;Display.c: 107: unsigned char Get7Seg (int Digit);Display.c: 108: {;Display.c: 109:  un
      +                          signed char Data;;Display.c: 111:  switch (Digit)
  5381  001774  EFE8  F00B         	goto	l4419
  5382  001778                     l4395:
  5383                           
  5384                           ;Display.c: 114:    Data = 0x3F;
  5385  001778  0E3F               	movlw	63
  5386  00177A  6E42               	movwf	Get7Seg@Data^0,c
  5387                           
  5388                           ;Display.c: 115:    break;
  5389  00177C  EF1E  F00C         	goto	l4421
  5390  001780                     l4397:
  5391                           
  5392                           ;Display.c: 117:    Data = 0x06;
  5393  001780  0E06               	movlw	6
  5394  001782  6E42               	movwf	Get7Seg@Data^0,c
  5395                           
  5396                           ;Display.c: 118:    break;
  5397  001784  EF1E  F00C         	goto	l4421
  5398  001788                     l4399:
  5399                           
  5400                           ;Display.c: 120:    Data = 0x5B;
  5401  001788  0E5B               	movlw	91
  5402  00178A  6E42               	movwf	Get7Seg@Data^0,c
  5403                           
  5404                           ;Display.c: 121:    break;
  5405  00178C  EF1E  F00C         	goto	l4421
  5406  001790                     l4401:
  5407                           
  5408                           ;Display.c: 123:    Data = 0x4F;
  5409  001790  0E4F               	movlw	79
  5410  001792  6E42               	movwf	Get7Seg@Data^0,c
  5411                           
  5412                           ;Display.c: 124:    break;
  5413  001794  EF1E  F00C         	goto	l4421
  5414  001798                     l4403:
  5415                           
  5416                           ;Display.c: 126:    Data = 0x66;
  5417  001798  0E66               	movlw	102
  5418  00179A  6E42               	movwf	Get7Seg@Data^0,c
  5419                           
  5420                           ;Display.c: 127:    break;
  5421  00179C  EF1E  F00C         	goto	l4421
  5422  0017A0                     l4405:
  5423                           
  5424                           ;Display.c: 129:    Data = 0x6D;
  5425  0017A0  0E6D               	movlw	109
  5426  0017A2  6E42               	movwf	Get7Seg@Data^0,c
  5427                           
  5428                           ;Display.c: 130:    break;
  5429  0017A4  EF1E  F00C         	goto	l4421
  5430  0017A8                     l4407:
  5431                           
  5432                           ;Display.c: 132:    Data = 0x7D;
  5433  0017A8  0E7D               	movlw	125
  5434  0017AA  6E42               	movwf	Get7Seg@Data^0,c
  5435                           
  5436                           ;Display.c: 133:    break;
  5437  0017AC  EF1E  F00C         	goto	l4421
  5438  0017B0                     l4409:
  5439                           
  5440                           ;Display.c: 135:    Data = 0x07;
  5441  0017B0  0E07               	movlw	7
  5442  0017B2  6E42               	movwf	Get7Seg@Data^0,c
  5443                           
  5444                           ;Display.c: 136:    break;
  5445  0017B4  EF1E  F00C         	goto	l4421
  5446  0017B8                     l4411:
  5447                           
  5448                           ;Display.c: 138:    Data = 0x7F;
  5449  0017B8  0E7F               	movlw	127
  5450  0017BA  6E42               	movwf	Get7Seg@Data^0,c
  5451                           
  5452                           ;Display.c: 139:    break;
  5453  0017BC  EF1E  F00C         	goto	l4421
  5454  0017C0                     l4413:
  5455                           
  5456                           ;Display.c: 141:    Data = 0x6F;
  5457  0017C0  0E6F               	movlw	111
  5458  0017C2  6E42               	movwf	Get7Seg@Data^0,c
  5459                           
  5460                           ;Display.c: 142:    break;
  5461  0017C4  EF1E  F00C         	goto	l4421
  5462  0017C8                     l4415:
  5463                           
  5464                           ;Display.c: 144:    Data = 0x00;
  5465  0017C8  0E00               	movlw	0
  5466  0017CA  6E42               	movwf	Get7Seg@Data^0,c
  5467                           
  5468                           ;Display.c: 145:    break;
  5469  0017CC  EF1E  F00C         	goto	l4421
  5470  0017D0                     l4419:
  5471  0017D0  C03E  F040         	movff	Get7Seg@Digit,??_Get7Seg
  5472  0017D4  C03F  F041         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5473                           
  5474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5475                           ; Switch size 1, requested type "simple"
  5476                           ; Number of cases is 1, Range of values is 0 to 0
  5477                           ; switch strategies available:
  5478                           ; Name         Instructions Cycles
  5479                           ; simple_byte            4     3 (average)
  5480                           ;	Chosen strategy is simple_byte
  5481  0017D8  5041               	movf	(??_Get7Seg+1)^0,w,c
  5482  0017DA  0A00               	xorlw	0	; case 0
  5483  0017DC  B4D8               	btfsc	status,2,c
  5484  0017DE  EFF3  F00B         	goto	l5691
  5485  0017E2  EFE4  F00B         	goto	l4415
  5486  0017E6                     l5691:
  5487                           
  5488                           ; Switch size 1, requested type "simple"
  5489                           ; Number of cases is 10, Range of values is 0 to 9
  5490                           ; switch strategies available:
  5491                           ; Name         Instructions Cycles
  5492                           ; simple_byte           31    16 (average)
  5493                           ;	Chosen strategy is simple_byte
  5494  0017E6  5040               	movf	??_Get7Seg^0,w,c
  5495  0017E8  0A00               	xorlw	0	; case 0
  5496  0017EA  B4D8               	btfsc	status,2,c
  5497  0017EC  EFBC  F00B         	goto	l4395
  5498  0017F0  0A01               	xorlw	1	; case 1
  5499  0017F2  B4D8               	btfsc	status,2,c
  5500  0017F4  EFC0  F00B         	goto	l4397
  5501  0017F8  0A03               	xorlw	3	; case 2
  5502  0017FA  B4D8               	btfsc	status,2,c
  5503  0017FC  EFC4  F00B         	goto	l4399
  5504  001800  0A01               	xorlw	1	; case 3
  5505  001802  B4D8               	btfsc	status,2,c
  5506  001804  EFC8  F00B         	goto	l4401
  5507  001808  0A07               	xorlw	7	; case 4
  5508  00180A  B4D8               	btfsc	status,2,c
  5509  00180C  EFCC  F00B         	goto	l4403
  5510  001810  0A01               	xorlw	1	; case 5
  5511  001812  B4D8               	btfsc	status,2,c
  5512  001814  EFD0  F00B         	goto	l4405
  5513  001818  0A03               	xorlw	3	; case 6
  5514  00181A  B4D8               	btfsc	status,2,c
  5515  00181C  EFD4  F00B         	goto	l4407
  5516  001820  0A01               	xorlw	1	; case 7
  5517  001822  B4D8               	btfsc	status,2,c
  5518  001824  EFD8  F00B         	goto	l4409
  5519  001828  0A0F               	xorlw	15	; case 8
  5520  00182A  B4D8               	btfsc	status,2,c
  5521  00182C  EFDC  F00B         	goto	l4411
  5522  001830  0A01               	xorlw	1	; case 9
  5523  001832  B4D8               	btfsc	status,2,c
  5524  001834  EFE0  F00B         	goto	l4413
  5525  001838  EFE4  F00B         	goto	l4415
  5526  00183C                     l4421:
  5527                           
  5528                           ;Display.c: 147:  return (Data);
  5529  00183C  5042               	movf	Get7Seg@Data^0,w,c
  5530  00183E  0012               	return		;funcret
  5531  001840                     __end_of_Get7Seg:
  5532                           	opt callstack 0
  5533                           
  5534 ;; *************** function _Homing_Again_Auto *****************
  5535 ;; Defined at:
  5536 ;;		line 998 in file "main.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        2 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    4
  5557 ;; This function calls:
  5558 ;;		_AD_capture_BattVoltage
  5559 ;;		_MotorBREAK
  5560 ;;		_MotorON_PWM
  5561 ;;		_Read_IR
  5562 ;;		_WriteSTLED316SErr
  5563 ;;		_WriteSTLED316SMode
  5564 ;;		_delay_1ms
  5565 ;;		_readWeighingData
  5566 ;; This function is called by:
  5567 ;;		_main
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text26
  5572  00114E                     __ptext26:
  5573                           	opt callstack 0
  5574  00114E                     _Homing_Again_Auto:
  5575                           	opt callstack 26
  5576  00114E                     
  5577                           ;main.c: 1001:     IR_SENSORF = 0;
  5578  00114E  0E00               	movlw	0
  5579  001150  6E14               	movwf	(_IR_SENSORF+1)^0,c
  5580  001152  0E00               	movlw	0
  5581  001154  6E13               	movwf	_IR_SENSORF^0,c
  5582  001156                     
  5583                           ;main.c: 1002:     WriteSTLED316SMode('A');
  5584  001156  0E41               	movlw	65
  5585  001158  ECC6  F00A         	call	_WriteSTLED316SMode
  5586  00115C                     
  5587                           ;main.c: 1004:     if (vibration_mode == 1)
  5588  00115C  0432               	decf	_vibration_mode^0,w,c
  5589  00115E  A4D8               	btfss	status,2,c
  5590  001160  EFB4  F008         	goto	u3161
  5591  001164  EFB6  F008         	goto	u3160
  5592  001168                     u3161:
  5593  001168  EFCB  F008         	goto	l352
  5594  00116C                     u3160:
  5595  00116C                     
  5596                           ;main.c: 1005:     {;main.c: 1006:         LATCbits.LATC1 = 1;
  5597  00116C  828B               	bsf	139,1,c	;volatile
  5598  00116E                     
  5599                           ;main.c: 1007:         delay_1ms(Vmotor_Time);
  5600  00116E  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5601  001172  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5602  001176  EC71  F00F         	call	_delay_1ms	;wreg free
  5603  00117A                     
  5604                           ;main.c: 1008:         LATCbits.LATC1 = 0;
  5605  00117A  928B               	bcf	139,1,c	;volatile
  5606  00117C                     l4845:
  5607                           
  5608                           ;main.c: 1009:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5609  00117C  0E04               	movlw	4
  5610  00117E  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5611  001180  0E0C               	movlw	12
  5612  001182  6E47               	movwf	??_Homing_Again_Auto^0,c
  5613  001184  0E34               	movlw	52
  5614  001186                     u3897:
  5615  001186  2EE8               	decfsz	wreg,f,c
  5616  001188  D7FE               	bra	u3897
  5617  00118A  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5618  00118C  D7FC               	bra	u3897
  5619  00118E  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5620  001190  D7FA               	bra	u3897
  5621                           
  5622                           ;main.c: 1010:     }
  5623  001192  EFCE  F008         	goto	l4849
  5624  001196                     l352:
  5625                           
  5626                           ;main.c: 1012:     {;main.c: 1013:         LATCbits.LATC1 = 0;
  5627  001196  928B               	bcf	139,1,c	;volatile
  5628  001198  EFBE  F008         	goto	l4845
  5629  00119C                     l4849:
  5630                           
  5631                           ;main.c: 1017:     LATAbits.LATA2 = 1;
  5632  00119C  8489               	bsf	137,2,c	;volatile
  5633                           
  5634                           ;main.c: 1019:     while ( Stop==0)
  5635  00119E  EF7E  F009         	goto	l4907
  5636  0011A2                     l355:
  5637  0011A2  0004               	clrwdt		;# 
  5638  0011A4                     
  5639                           ;main.c: 1022:         readWeighingData();
  5640  0011A4  EC25  F00E         	call	_readWeighingData	;wreg free
  5641  0011A8                     
  5642                           ;main.c: 1023:         AD_capture_BattVoltage();
  5643  0011A8  ECE2  F00E         	call	_AD_capture_BattVoltage	;wreg free
  5644  0011AC                     
  5645                           ;main.c: 1024:         delay_1ms(Motor_Pause_Time);
  5646  0011AC  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  5647  0011B0  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5648  0011B4  EC71  F00F         	call	_delay_1ms	;wreg free
  5649  0011B8                     
  5650                           ;main.c: 1025:         MotorON_PWM();
  5651  0011B8  EC22  F010         	call	_MotorON_PWM	;wreg free
  5652  0011BC                     
  5653                           ;main.c: 1026:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5654  0011BC  0E04               	movlw	4
  5655  0011BE  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5656  0011C0  0E8E               	movlw	142
  5657  0011C2  6E47               	movwf	??_Homing_Again_Auto^0,c
  5658  0011C4  0E12               	movlw	18
  5659  0011C6                     u3907:
  5660  0011C6  2EE8               	decfsz	wreg,f,c
  5661  0011C8  D7FE               	bra	u3907
  5662  0011CA  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5663  0011CC  D7FC               	bra	u3907
  5664  0011CE  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5665  0011D0  D7FA               	bra	u3907
  5666  0011D2  D000               	nop2	
  5667  0011D4                     
  5668                           ;main.c: 1028:         errorcounter = 30;
  5669  0011D4  0E1E               	movlw	30
  5670  0011D6  6E52               	movwf	_errorcounter^0,c	;volatile
  5671  0011D8  0E00               	movlw	0
  5672  0011DA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5673  0011DC  0E00               	movlw	0
  5674  0011DE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5675  0011E0  0E00               	movlw	0
  5676  0011E2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5677  0011E4                     l4863:
  5678                           
  5679                           ;main.c: 1031:         {;main.c: 1032:           IR_SENSORF = Read_IR();
  5680  0011E4  ECC0  F00F         	call	_Read_IR	;wreg free
  5681  0011E8  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5682  0011EC  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5683  0011F0                     
  5684                           ;main.c: 1033:           if(errorcounter == 0)
  5685  0011F0  5052               	movf	_errorcounter^0,w,c	;volatile
  5686  0011F2  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5687  0011F4  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5688  0011F6  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5689  0011F8  A4D8               	btfss	status,2,c
  5690  0011FA  EF01  F009         	goto	u3171
  5691  0011FE  EF03  F009         	goto	u3170
  5692  001202                     u3171:
  5693  001202  EF08  F009         	goto	l4871
  5694  001206                     u3170:
  5695  001206                     
  5696                           ;main.c: 1034:           {;main.c: 1035:               WriteSTLED316SErr('1');
  5697  001206  0E31               	movlw	49
  5698  001208  EC46  F00B         	call	_WriteSTLED316SErr
  5699  00120C                     
  5700                           ;main.c: 1036:               MotorBREAK();
  5701  00120C  EC27  F010         	call	_MotorBREAK	;wreg free
  5702  001210                     l4871:
  5703                           
  5704                           ;main.c: 1038:         }while(IR_SENSORF != 0);
  5705  001210  5013               	movf	_IR_SENSORF^0,w,c
  5706  001212  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5707  001214  A4D8               	btfss	status,2,c
  5708  001216  EF0F  F009         	goto	u3181
  5709  00121A  EF11  F009         	goto	u3180
  5710  00121E                     u3181:
  5711  00121E  EFF2  F008         	goto	l4863
  5712  001222                     u3180:
  5713  001222                     
  5714                           ;main.c: 1040:          _delay((unsigned long)((30)*(8000000/4000.0)));
  5715  001222  0E4E               	movlw	78
  5716  001224  6E47               	movwf	??_Homing_Again_Auto^0,c
  5717  001226  0EEB               	movlw	235
  5718  001228                     u3917:
  5719  001228  2EE8               	decfsz	wreg,f,c
  5720  00122A  D7FE               	bra	u3917
  5721  00122C  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5722  00122E  D7FC               	bra	u3917
  5723  001230  F000               	nop	
  5724  001232                     
  5725                           ;main.c: 1041:          errorcounter = 30;
  5726  001232  0E1E               	movlw	30
  5727  001234  6E52               	movwf	_errorcounter^0,c	;volatile
  5728  001236  0E00               	movlw	0
  5729  001238  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5730  00123A  0E00               	movlw	0
  5731  00123C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5732  00123E  0E00               	movlw	0
  5733  001240  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5734  001242                     l4877:
  5735                           
  5736                           ;main.c: 1044:         {;main.c: 1045:           IR_SENSORF = Read_IR();
  5737  001242  ECC0  F00F         	call	_Read_IR	;wreg free
  5738  001246  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5739  00124A  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5740  00124E                     
  5741                           ;main.c: 1046:           if(errorcounter == 0)
  5742  00124E  5052               	movf	_errorcounter^0,w,c	;volatile
  5743  001250  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5744  001252  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5745  001254  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5746  001256  A4D8               	btfss	status,2,c
  5747  001258  EF30  F009         	goto	u3191
  5748  00125C  EF32  F009         	goto	u3190
  5749  001260                     u3191:
  5750  001260  EF37  F009         	goto	l4885
  5751  001264                     u3190:
  5752  001264                     
  5753                           ;main.c: 1047:           {;main.c: 1048:               WriteSTLED316SErr('2');
  5754  001264  0E32               	movlw	50
  5755  001266  EC46  F00B         	call	_WriteSTLED316SErr
  5756  00126A                     
  5757                           ;main.c: 1049:               MotorBREAK();
  5758  00126A  EC27  F010         	call	_MotorBREAK	;wreg free
  5759  00126E                     l4885:
  5760                           
  5761                           ;main.c: 1051:         }while(IR_SENSORF != 1);
  5762  00126E  0413               	decf	_IR_SENSORF^0,w,c
  5763  001270  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5764  001272  A4D8               	btfss	status,2,c
  5765  001274  EF3E  F009         	goto	u3201
  5766  001278  EF40  F009         	goto	u3200
  5767  00127C                     u3201:
  5768  00127C  EF21  F009         	goto	l4877
  5769  001280                     u3200:
  5770  001280                     
  5771                           ;main.c: 1053:         errorcounter = 30;
  5772  001280  0E1E               	movlw	30
  5773  001282  6E52               	movwf	_errorcounter^0,c	;volatile
  5774  001284  0E00               	movlw	0
  5775  001286  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5776  001288  0E00               	movlw	0
  5777  00128A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5778  00128C  0E00               	movlw	0
  5779  00128E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5780  001290                     
  5781                           ;main.c: 1055:         delay_1ms(Motor_Stop_Delay_Time);
  5782  001290  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5783  001294  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5784  001298  EC71  F00F         	call	_delay_1ms	;wreg free
  5785  00129C                     
  5786                           ;main.c: 1056:         MotorBREAK();
  5787  00129C  EC27  F010         	call	_MotorBREAK	;wreg free
  5788                           
  5789                           ;main.c: 1058:         if (vibration_mode == 1)
  5790  0012A0  0432               	decf	_vibration_mode^0,w,c
  5791  0012A2  A4D8               	btfss	status,2,c
  5792  0012A4  EF56  F009         	goto	u3211
  5793  0012A8  EF58  F009         	goto	u3210
  5794  0012AC                     u3211:
  5795  0012AC  EF6D  F009         	goto	l362
  5796  0012B0                     u3210:
  5797  0012B0                     
  5798                           ;main.c: 1059:         {;main.c: 1060:             LATCbits.LATC1 = 1;
  5799  0012B0  828B               	bsf	139,1,c	;volatile
  5800  0012B2                     
  5801                           ;main.c: 1061:             delay_1ms(Vmotor_Time);
  5802  0012B2  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5803  0012B6  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5804  0012BA  EC71  F00F         	call	_delay_1ms	;wreg free
  5805  0012BE                     
  5806                           ;main.c: 1063:             LATCbits.LATC1 = 0;
  5807  0012BE  928B               	bcf	139,1,c	;volatile
  5808  0012C0                     
  5809                           ;main.c: 1064:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5810  0012C0  0E04               	movlw	4
  5811  0012C2  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5812  0012C4  0E0C               	movlw	12
  5813  0012C6  6E47               	movwf	??_Homing_Again_Auto^0,c
  5814  0012C8  0E34               	movlw	52
  5815  0012CA                     u3927:
  5816  0012CA  2EE8               	decfsz	wreg,f,c
  5817  0012CC  D7FE               	bra	u3927
  5818  0012CE  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5819  0012D0  D7FC               	bra	u3927
  5820  0012D2  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5821  0012D4  D7FA               	bra	u3927
  5822                           
  5823                           ;main.c: 1065:         }
  5824  0012D6  EF74  F009         	goto	l4903
  5825  0012DA                     l362:
  5826                           
  5827                           ;main.c: 1067:         {;main.c: 1068:             LATCbits.LATC1 = 0;
  5828  0012DA  928B               	bcf	139,1,c	;volatile
  5829  0012DC                     
  5830                           ;main.c: 1069:              delay_1ms(Vmotor_Time);
  5831  0012DC  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5832  0012E0  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5833  0012E4  EC71  F00F         	call	_delay_1ms	;wreg free
  5834  0012E8                     l4903:
  5835                           
  5836                           ;main.c: 1072:         if(Stop==1)
  5837  0012E8  0435               	decf	_Stop^0,w,c
  5838  0012EA  A4D8               	btfss	status,2,c
  5839  0012EC  EF7A  F009         	goto	u3221
  5840  0012F0  EF7C  F009         	goto	u3220
  5841  0012F4                     u3221:
  5842  0012F4  EF7E  F009         	goto	l4907
  5843  0012F8                     u3220:
  5844  0012F8  EF86  F009         	goto	l365
  5845  0012FC                     l4907:
  5846                           
  5847                           ;main.c: 1019:     while ( Stop==0)
  5848  0012FC  5035               	movf	_Stop^0,w,c
  5849  0012FE  B4D8               	btfsc	status,2,c
  5850  001300  EF84  F009         	goto	u3231
  5851  001304  EF86  F009         	goto	u3230
  5852  001308                     u3231:
  5853  001308  EFD1  F008         	goto	l355
  5854  00130C                     u3230:
  5855  00130C                     l365:
  5856                           
  5857                           ;main.c: 1077:     LATAbits.LATA2 = 0;
  5858  00130C  9489               	bcf	137,2,c	;volatile
  5859  00130E                     
  5860                           ;main.c: 1079:     if (NUM == 0 || Stop==1)
  5861  00130E  5019               	movf	_NUM^0,w,c
  5862  001310  101A               	iorwf	(_NUM+1)^0,w,c
  5863  001312  B4D8               	btfsc	status,2,c
  5864  001314  EF8E  F009         	goto	u3241
  5865  001318  EF90  F009         	goto	u3240
  5866  00131C                     u3241:
  5867  00131C  EF98  F009         	goto	l4913
  5868  001320                     u3240:
  5869  001320  0435               	decf	_Stop^0,w,c
  5870  001322  A4D8               	btfss	status,2,c
  5871  001324  EF96  F009         	goto	u3251
  5872  001328  EF98  F009         	goto	u3250
  5873  00132C                     u3251:
  5874  00132C  EFB3  F009         	goto	l4923
  5875  001330                     u3250:
  5876  001330                     l4913:
  5877                           
  5878                           ;main.c: 1080:     {;main.c: 1082:         if (vibration_mode == 1)
  5879  001330  0432               	decf	_vibration_mode^0,w,c
  5880  001332  A4D8               	btfss	status,2,c
  5881  001334  EF9E  F009         	goto	u3261
  5882  001338  EFA0  F009         	goto	u3260
  5883  00133C                     u3261:
  5884  00133C  EFB3  F009         	goto	l4923
  5885  001340                     u3260:
  5886  001340                     
  5887                           ;main.c: 1083:         {;main.c: 1084:             LATCbits.LATC1 = 1;
  5888  001340  828B               	bsf	139,1,c	;volatile
  5889  001342                     
  5890                           ;main.c: 1085:             delay_1ms(Vmotor_Time);
  5891  001342  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5892  001346  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5893  00134A  EC71  F00F         	call	_delay_1ms	;wreg free
  5894  00134E                     
  5895                           ;main.c: 1087:             LATCbits.LATC1 = 0;
  5896  00134E  928B               	bcf	139,1,c	;volatile
  5897  001350                     
  5898                           ;main.c: 1088:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5899  001350  0E04               	movlw	4
  5900  001352  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5901  001354  0E0C               	movlw	12
  5902  001356  6E47               	movwf	??_Homing_Again_Auto^0,c
  5903  001358  0E34               	movlw	52
  5904  00135A                     u3937:
  5905  00135A  2EE8               	decfsz	wreg,f,c
  5906  00135C  D7FE               	bra	u3937
  5907  00135E  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5908  001360  D7FC               	bra	u3937
  5909  001362  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5910  001364  D7FA               	bra	u3937
  5911  001366                     l4923:
  5912                           
  5913                           ;main.c: 1093:     NUM = 0;
  5914  001366  0E00               	movlw	0
  5915  001368  6E1A               	movwf	(_NUM+1)^0,c
  5916  00136A  0E00               	movlw	0
  5917  00136C  6E19               	movwf	_NUM^0,c
  5918  00136E                     
  5919                           ;main.c: 1094:     OpMode = AUTO_MODE;
  5920  00136E  0E02               	movlw	2
  5921  001370  6E30               	movwf	_OpMode^0,c	;volatile
  5922  001372  0012               	return		;funcret
  5923  001374                     __end_of_Homing_Again_Auto:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function _readWeighingData *****************
  5927 ;; Defined at:
  5928 ;;		line 1127 in file "main.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  i               2    8[COMRAM] int 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        2 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    3
  5949 ;; This function calls:
  5950 ;;		_Write1USART
  5951 ;;		_flushOut
  5952 ;; This function is called by:
  5953 ;;		_Homing_Again_Manual
  5954 ;;		_Homing_Again_Auto
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text27
  5959  001C4A                     __ptext27:
  5960                           	opt callstack 0
  5961  001C4A                     _readWeighingData:
  5962                           	opt callstack 26
  5963  001C4A                     
  5964                           ;main.c: 1129:     int i;;main.c: 1131:     Serial_Buffer_Out[0] = 0xA5;
  5965  001C4A  0EA5               	movlw	165
  5966  001C4C  0100               	movlb	0	; () banked
  5967  001C4E  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  5968                           
  5969                           ;main.c: 1132:     Serial_Buffer_Out[1] = 0x45;
  5970  001C50  0E45               	movlw	69
  5971  001C52  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  5972                           
  5973                           ;main.c: 1133:     Serial_Buffer_Out[2] = 0x00;
  5974  001C54  0E00               	movlw	0
  5975  001C56  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  5976                           
  5977                           ;main.c: 1134:     Serial_Buffer_Out[3] = 0x45;
  5978  001C58  0E45               	movlw	69
  5979  001C5A  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  5980                           
  5981                           ;main.c: 1135:     Serial_Buffer_Out[4] = 0x5A;
  5982  001C5C  0E5A               	movlw	90
  5983  001C5E  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  5984  001C60                     
  5985                           ; BSR set to: 0
  5986                           ;main.c: 1137:     INTCONbits.GIE=0;
  5987  001C60  9EF2               	bcf	242,7,c	;volatile
  5988                           
  5989                           ;main.c: 1138:     for (i=0; i<5;i++)
  5990  001C62  0E00               	movlw	0
  5991  001C64  6E41               	movwf	(readWeighingData@i+1)^0,c
  5992  001C66  0E00               	movlw	0
  5993  001C68  6E40               	movwf	readWeighingData@i^0,c
  5994  001C6A                     l3115:
  5995                           
  5996                           ;main.c: 1139:     {;main.c: 1140:         Write1USART(Serial_Buffer_Out[i]);
  5997  001C6A  0E60               	movlw	low _Serial_Buffer_Out
  5998  001C6C  2440               	addwf	readWeighingData@i^0,w,c
  5999  001C6E  6ED9               	movwf	fsr2l,c
  6000  001C70  0E00               	movlw	high _Serial_Buffer_Out
  6001  001C72  2041               	addwfc	(readWeighingData@i+1)^0,w,c
  6002  001C74  6EDA               	movwf	fsr2h,c
  6003  001C76  50DF               	movf	indf2,w,c
  6004  001C78  ECE9  F00F         	call	_Write1USART
  6005  001C7C                     
  6006                           ;main.c: 1141:     }
  6007  001C7C  4A40               	infsnz	readWeighingData@i^0,f,c
  6008  001C7E  2A41               	incf	(readWeighingData@i+1)^0,f,c
  6009  001C80  BE41               	btfsc	(readWeighingData@i+1)^0,7,c
  6010  001C82  EF4C  F00E         	goto	u1711
  6011  001C86  5041               	movf	(readWeighingData@i+1)^0,w,c
  6012  001C88  E109               	bnz	u1710
  6013  001C8A  0E05               	movlw	5
  6014  001C8C  5C40               	subwf	readWeighingData@i^0,w,c
  6015  001C8E  A0D8               	btfss	status,0,c
  6016  001C90  EF4C  F00E         	goto	u1711
  6017  001C94  EF4E  F00E         	goto	u1710
  6018  001C98                     u1711:
  6019  001C98  EF35  F00E         	goto	l3115
  6020  001C9C                     u1710:
  6021  001C9C                     
  6022                           ;main.c: 1142:     INTCONbits.GIE=1;
  6023  001C9C  8EF2               	bsf	242,7,c	;volatile
  6024  001C9E                     
  6025                           ;main.c: 1144:     flushOut();
  6026  001C9E  EC1E  F00F         	call	_flushOut	;wreg free
  6027  001CA2  0012               	return		;funcret
  6028  001CA4                     __end_of_readWeighingData:
  6029                           	opt callstack 0
  6030                           
  6031 ;; *************** function _flushOut *****************
  6032 ;; Defined at:
  6033 ;;		line 1114 in file "main.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  i               2    6[COMRAM] int 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;Total ram usage:        2 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    2
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;;		_readWeighingData
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text28
  6063  001E3C                     __ptext28:
  6064                           	opt callstack 0
  6065  001E3C                     _flushOut:
  6066                           	opt callstack 28
  6067  001E3C                     
  6068                           ;main.c: 1116:     int i;;main.c: 1118:     for(i=0; i<16; i++)
  6069  001E3C  0E00               	movlw	0
  6070  001E3E  6E3F               	movwf	(flushOut@i+1)^0,c
  6071  001E40  0E00               	movlw	0
  6072  001E42  6E3E               	movwf	flushOut@i^0,c
  6073  001E44                     l2775:
  6074                           
  6075                           ;main.c: 1119:     {;main.c: 1120:         Serial_Buffer_Out[i]=0x00;
  6076  001E44  0E60               	movlw	low _Serial_Buffer_Out
  6077  001E46  243E               	addwf	flushOut@i^0,w,c
  6078  001E48  6ED9               	movwf	fsr2l,c
  6079  001E4A  0E00               	movlw	high _Serial_Buffer_Out
  6080  001E4C  203F               	addwfc	(flushOut@i+1)^0,w,c
  6081  001E4E  6EDA               	movwf	fsr2h,c
  6082  001E50  0E00               	movlw	0
  6083  001E52  6EDF               	movwf	indf2,c
  6084  001E54                     
  6085                           ;main.c: 1121:     }
  6086  001E54  4A3E               	infsnz	flushOut@i^0,f,c
  6087  001E56  2A3F               	incf	(flushOut@i+1)^0,f,c
  6088  001E58  BE3F               	btfsc	(flushOut@i+1)^0,7,c
  6089  001E5A  EF38  F00F         	goto	u1421
  6090  001E5E  503F               	movf	(flushOut@i+1)^0,w,c
  6091  001E60  E109               	bnz	u1420
  6092  001E62  0E10               	movlw	16
  6093  001E64  5C3E               	subwf	flushOut@i^0,w,c
  6094  001E66  A0D8               	btfss	status,0,c
  6095  001E68  EF38  F00F         	goto	u1421
  6096  001E6C  EF3A  F00F         	goto	u1420
  6097  001E70                     u1421:
  6098  001E70  EF22  F00F         	goto	l2775
  6099  001E74                     u1420:
  6100  001E74  0012               	return		;funcret
  6101  001E76                     __end_of_flushOut:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function _Write1USART *****************
  6105 ;; Defined at:
  6106 ;;		line 48 in file "usart.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  data            1    wreg     unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  data            1    6[COMRAM] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;Total ram usage:        1 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    2
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_main
  6131 ;;		_readWeighingData
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text29
  6136  001FD2                     __ptext29:
  6137                           	opt callstack 0
  6138  001FD2                     _Write1USART:
  6139                           	opt callstack 28
  6140                           
  6141                           ;incstack = 0
  6142                           ;Write1USART@data stored from wreg
  6143  001FD2  6E3E               	movwf	Write1USART@data^0,c
  6144  001FD4                     
  6145                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  6146  001FD4  C03E  FFAE         	movff	Write1USART@data,4014	;volatile
  6147  001FD8                     l560:
  6148  001FD8  A2AD               	btfss	173,1,c	;volatile
  6149  001FDA  EFF1  F00F         	goto	u1411
  6150  001FDE  EFF3  F00F         	goto	u1410
  6151  001FE2                     u1411:
  6152  001FE2  EFEC  F00F         	goto	l560
  6153  001FE6                     u1410:
  6154  001FE6  0012               	return		;funcret
  6155  001FE8                     __end_of_Write1USART:
  6156                           	opt callstack 0
  6157                           
  6158 ;; *************** function _WriteSTLED316SMode *****************
  6159 ;; Defined at:
  6160 ;;		line 191 in file "Display.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  msg             1    wreg     unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  msg             1   14[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        3 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    3
  6181 ;; This function calls:
  6182 ;;		_STLED316s_SPI_SendData
  6183 ;; This function is called by:
  6184 ;;		_Homing_Again_Auto
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text30
  6189  00158C                     __ptext30:
  6190                           	opt callstack 0
  6191  00158C                     _WriteSTLED316SMode:
  6192                           	opt callstack 26
  6193                           
  6194                           ;incstack = 0
  6195                           ;WriteSTLED316SMode@msg stored from wreg
  6196  00158C  6E46               	movwf	WriteSTLED316SMode@msg^0,c
  6197  00158E                     
  6198                           ;Display.c: 191: void WriteSTLED316SMode( char msg);Display.c: 192: {;Display.c: 193:  L
      +                          ATCbits.LATC4 = 0;
  6199  00158E  988B               	bcf	139,4,c	;volatile
  6200  001590                     
  6201                           ;Display.c: 195:  STLED316s_SPI_SendData (0x00 );
  6202  001590  0E00               	movlw	0
  6203  001592  EC77  F00D         	call	_STLED316s_SPI_SendData
  6204  001596                     
  6205                           ;Display.c: 198:  LATCbits.LATC4 = 1;
  6206  001596  888B               	bsf	139,4,c	;volatile
  6207  001598                     
  6208                           ;Display.c: 200:  LATCbits.LATC4 = 0;
  6209  001598  988B               	bcf	139,4,c	;volatile
  6210                           
  6211                           ;Display.c: 202:  STLED316s_SPI_SendData (0x00);
  6212  00159A  0E00               	movlw	0
  6213  00159C  EC77  F00D         	call	_STLED316s_SPI_SendData
  6214                           
  6215                           ;Display.c: 204:  switch(msg)
  6216  0015A0  EF12  F00B         	goto	l4599
  6217  0015A4                     l4581:
  6218                           
  6219                           ;Display.c: 207:      STLED316s_SPI_SendData (0x79);
  6220  0015A4  0E79               	movlw	121
  6221  0015A6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6222                           
  6223                           ;Display.c: 208:         STLED316s_SPI_SendData (0x3F);
  6224  0015AA  0E3F               	movlw	63
  6225  0015AC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6226                           
  6227                           ;Display.c: 209:        break;
  6228  0015B0  EF3F  F00B         	goto	l448
  6229  0015B4                     l4583:
  6230                           
  6231                           ;Display.c: 211:      STLED316s_SPI_SendData (0x3F);
  6232  0015B4  0E3F               	movlw	63
  6233  0015B6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6234                           
  6235                           ;Display.c: 212:         STLED316s_SPI_SendData (0x73);
  6236  0015BA  0E73               	movlw	115
  6237  0015BC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6238                           
  6239                           ;Display.c: 213:       break;
  6240  0015C0  EF3F  F00B         	goto	l448
  6241  0015C4                     l4585:
  6242                           
  6243                           ;Display.c: 215:      STLED316s_SPI_SendData (0x39);
  6244  0015C4  0E39               	movlw	57
  6245  0015C6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6246                           
  6247                           ;Display.c: 216:         STLED316s_SPI_SendData (0x77);
  6248  0015CA  0E77               	movlw	119
  6249  0015CC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6250                           
  6251                           ;Display.c: 217:        break;
  6252  0015D0  EF3F  F00B         	goto	l448
  6253  0015D4                     l4587:
  6254                           
  6255                           ;Display.c: 219:      STLED316s_SPI_SendData (0x00);
  6256  0015D4  0E00               	movlw	0
  6257  0015D6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6258                           
  6259                           ;Display.c: 220:         STLED316s_SPI_SendData (0x00);
  6260  0015DA  0E00               	movlw	0
  6261  0015DC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6262                           
  6263                           ;Display.c: 221:        break;
  6264  0015E0  EF3F  F00B         	goto	l448
  6265  0015E4                     l4589:
  6266                           
  6267                           ;Display.c: 223:      STLED316s_SPI_SendData (0x00);
  6268  0015E4  0E00               	movlw	0
  6269  0015E6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6270                           
  6271                           ;Display.c: 224:         STLED316s_SPI_SendData (0x3F);
  6272  0015EA  0E3F               	movlw	63
  6273  0015EC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6274                           
  6275                           ;Display.c: 225:         break;
  6276  0015F0  EF3F  F00B         	goto	l448
  6277  0015F4                     l4591:
  6278                           
  6279                           ;Display.c: 227:      STLED316s_SPI_SendData (0x79);
  6280  0015F4  0E79               	movlw	121
  6281  0015F6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6282                           
  6283                           ;Display.c: 228:         STLED316s_SPI_SendData (0x06);
  6284  0015FA  0E06               	movlw	6
  6285  0015FC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6286                           
  6287                           ;Display.c: 229:         break;
  6288  001600  EF3F  F00B         	goto	l448
  6289  001604                     l4593:
  6290                           
  6291                           ;Display.c: 231:      STLED316s_SPI_SendData (0x77);
  6292  001604  0E77               	movlw	119
  6293  001606  EC77  F00D         	call	_STLED316s_SPI_SendData
  6294                           
  6295                           ;Display.c: 232:         STLED316s_SPI_SendData (0x3E);
  6296  00160A  0E3E               	movlw	62
  6297  00160C  EC77  F00D         	call	_STLED316s_SPI_SendData
  6298                           
  6299                           ;Display.c: 233:         break;
  6300  001610  EF3F  F00B         	goto	l448
  6301  001614                     l4595:
  6302                           
  6303                           ;Display.c: 235:      STLED316s_SPI_SendData (0x00);
  6304  001614  0E00               	movlw	0
  6305  001616  EC77  F00D         	call	_STLED316s_SPI_SendData
  6306                           
  6307                           ;Display.c: 236:         STLED316s_SPI_SendData (0x3E);
  6308  00161A  0E3E               	movlw	62
  6309  00161C  EC77  F00D         	call	_STLED316s_SPI_SendData
  6310                           
  6311                           ;Display.c: 237:         break;
  6312  001620  EF3F  F00B         	goto	l448
  6313  001624                     l4599:
  6314  001624  5046               	movf	WriteSTLED316SMode@msg^0,w,c
  6315  001626  6E44               	movwf	??_WriteSTLED316SMode^0,c
  6316  001628  6A45               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6317                           
  6318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6319                           ; Switch size 1, requested type "simple"
  6320                           ; Number of cases is 1, Range of values is 0 to 0
  6321                           ; switch strategies available:
  6322                           ; Name         Instructions Cycles
  6323                           ; simple_byte            4     3 (average)
  6324                           ;	Chosen strategy is simple_byte
  6325  00162A  5045               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6326  00162C  0A00               	xorlw	0	; case 0
  6327  00162E  B4D8               	btfsc	status,2,c
  6328  001630  EF1C  F00B         	goto	l5693
  6329  001634  EF3F  F00B         	goto	l448
  6330  001638                     l5693:
  6331                           
  6332                           ; Switch size 1, requested type "simple"
  6333                           ; Number of cases is 8, Range of values is 65 to 88
  6334                           ; switch strategies available:
  6335                           ; Name         Instructions Cycles
  6336                           ; simple_byte           25    13 (average)
  6337                           ;	Chosen strategy is simple_byte
  6338  001638  5044               	movf	??_WriteSTLED316SMode^0,w,c
  6339  00163A  0A41               	xorlw	65	; case 65
  6340  00163C  B4D8               	btfsc	status,2,c
  6341  00163E  EF02  F00B         	goto	l4593
  6342  001642  0A02               	xorlw	2	; case 67
  6343  001644  B4D8               	btfsc	status,2,c
  6344  001646  EFE2  F00A         	goto	l4585
  6345  00164A  0A06               	xorlw	6	; case 69
  6346  00164C  B4D8               	btfsc	status,2,c
  6347  00164E  EFD2  F00A         	goto	l4581
  6348  001652  0A02               	xorlw	2	; case 71
  6349  001654  B4D8               	btfsc	status,2,c
  6350  001656  EFF2  F00A         	goto	l4589
  6351  00165A  0A08               	xorlw	8	; case 79
  6352  00165C  B4D8               	btfsc	status,2,c
  6353  00165E  EFDA  F00A         	goto	l4583
  6354  001662  0A1C               	xorlw	28	; case 83
  6355  001664  B4D8               	btfsc	status,2,c
  6356  001666  EFFA  F00A         	goto	l4591
  6357  00166A  0A05               	xorlw	5	; case 86
  6358  00166C  B4D8               	btfsc	status,2,c
  6359  00166E  EF0A  F00B         	goto	l4595
  6360  001672  0A0E               	xorlw	14	; case 88
  6361  001674  B4D8               	btfsc	status,2,c
  6362  001676  EFEA  F00A         	goto	l4587
  6363  00167A  EF3F  F00B         	goto	l448
  6364  00167E                     l448:
  6365                           
  6366                           ;Display.c: 244:  LATCbits.LATC4 = 1;
  6367  00167E  888B               	bsf	139,4,c	;volatile
  6368                           
  6369                           ;Display.c: 246:  LATCbits.LATC4 = 0;
  6370  001680  988B               	bcf	139,4,c	;volatile
  6371  001682                     
  6372                           ;Display.c: 248:  STLED316s_SPI_SendData ( 0x0D );
  6373  001682  0E0D               	movlw	13
  6374  001684  EC77  F00D         	call	_STLED316s_SPI_SendData
  6375  001688                     
  6376                           ;Display.c: 250:  LATCbits.LATC4 = 1;
  6377  001688  888B               	bsf	139,4,c	;volatile
  6378  00168A  0012               	return		;funcret
  6379  00168C                     __end_of_WriteSTLED316SMode:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function _WriteSTLED316SErr *****************
  6383 ;; Defined at:
  6384 ;;		line 291 in file "Display.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  msg             1    wreg     unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  msg             1   14[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;Total ram usage:        3 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    3
  6405 ;; This function calls:
  6406 ;;		_STLED316s_SPI_SendData
  6407 ;; This function is called by:
  6408 ;;		_MotorPosition_Init
  6409 ;;		_Homing_Again_Manual
  6410 ;;		_Homing_Again_Auto
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text31
  6415  00168C                     __ptext31:
  6416                           	opt callstack 0
  6417  00168C                     _WriteSTLED316SErr:
  6418                           	opt callstack 26
  6419                           
  6420                           ;incstack = 0
  6421                           ;WriteSTLED316SErr@msg stored from wreg
  6422  00168C  6E46               	movwf	WriteSTLED316SErr@msg^0,c
  6423  00168E                     
  6424                           ;Display.c: 291: void WriteSTLED316SErr( char msg);Display.c: 292: {;Display.c: 293:  LA
      +                          TCbits.LATC4 = 0;
  6425  00168E  988B               	bcf	139,4,c	;volatile
  6426  001690                     
  6427                           ;Display.c: 295:  STLED316s_SPI_SendData (0x00 );
  6428  001690  0E00               	movlw	0
  6429  001692  EC77  F00D         	call	_STLED316s_SPI_SendData
  6430  001696                     
  6431                           ;Display.c: 298:  LATCbits.LATC4 = 1;
  6432  001696  888B               	bsf	139,4,c	;volatile
  6433  001698                     
  6434                           ;Display.c: 300:  LATCbits.LATC4 = 0;
  6435  001698  988B               	bcf	139,4,c	;volatile
  6436                           
  6437                           ;Display.c: 302:  STLED316s_SPI_SendData (0x00);
  6438  00169A  0E00               	movlw	0
  6439  00169C  EC77  F00D         	call	_STLED316s_SPI_SendData
  6440                           
  6441                           ;Display.c: 304:  switch(msg)
  6442  0016A0  EF8A  F00B         	goto	l4563
  6443  0016A4                     l4547:
  6444                           
  6445                           ;Display.c: 307:      STLED316s_SPI_SendData (0x79);
  6446  0016A4  0E79               	movlw	121
  6447  0016A6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6448                           
  6449                           ;Display.c: 308:         STLED316s_SPI_SendData (0x77);
  6450  0016AA  0E77               	movlw	119
  6451  0016AC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6452                           
  6453                           ;Display.c: 309:        break;
  6454  0016B0  EFB3  F00B         	goto	l467
  6455  0016B4                     l4549:
  6456                           
  6457                           ;Display.c: 311:      STLED316s_SPI_SendData (0x79);
  6458  0016B4  0E79               	movlw	121
  6459  0016B6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6460                           
  6461                           ;Display.c: 312:         STLED316s_SPI_SendData (0x3F);
  6462  0016BA  0E3F               	movlw	63
  6463  0016BC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6464                           
  6465                           ;Display.c: 313:       break;
  6466  0016C0  EFB3  F00B         	goto	l467
  6467  0016C4                     l4551:
  6468                           
  6469                           ;Display.c: 315:      STLED316s_SPI_SendData (0x79);
  6470  0016C4  0E79               	movlw	121
  6471  0016C6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6472                           
  6473                           ;Display.c: 316:         STLED316s_SPI_SendData (0x06);
  6474  0016CA  0E06               	movlw	6
  6475  0016CC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6476                           
  6477                           ;Display.c: 317:        break;
  6478  0016D0  EFB3  F00B         	goto	l467
  6479  0016D4                     l4553:
  6480                           
  6481                           ;Display.c: 319:      STLED316s_SPI_SendData (0x79);
  6482  0016D4  0E79               	movlw	121
  6483  0016D6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6484                           
  6485                           ;Display.c: 320:         STLED316s_SPI_SendData (0x5B);
  6486  0016DA  0E5B               	movlw	91
  6487  0016DC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6488                           
  6489                           ;Display.c: 321:        break;
  6490  0016E0  EFB3  F00B         	goto	l467
  6491  0016E4                     l4555:
  6492                           
  6493                           ;Display.c: 323:      STLED316s_SPI_SendData (0x00);
  6494  0016E4  0E00               	movlw	0
  6495  0016E6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6496                           
  6497                           ;Display.c: 324:         STLED316s_SPI_SendData (0x3F);
  6498  0016EA  0E3F               	movlw	63
  6499  0016EC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6500                           
  6501                           ;Display.c: 325:         break;
  6502  0016F0  EFB3  F00B         	goto	l467
  6503  0016F4                     l4557:
  6504                           
  6505                           ;Display.c: 327:      STLED316s_SPI_SendData (0x79);
  6506  0016F4  0E79               	movlw	121
  6507  0016F6  EC77  F00D         	call	_STLED316s_SPI_SendData
  6508                           
  6509                           ;Display.c: 328:         STLED316s_SPI_SendData (0x06);
  6510  0016FA  0E06               	movlw	6
  6511  0016FC  EC77  F00D         	call	_STLED316s_SPI_SendData
  6512                           
  6513                           ;Display.c: 329:         break;
  6514  001700  EFB3  F00B         	goto	l467
  6515  001704                     l4559:
  6516                           
  6517                           ;Display.c: 331:      STLED316s_SPI_SendData (0x77);
  6518  001704  0E77               	movlw	119
  6519  001706  EC77  F00D         	call	_STLED316s_SPI_SendData
  6520                           
  6521                           ;Display.c: 332:         STLED316s_SPI_SendData (0x3E);
  6522  00170A  0E3E               	movlw	62
  6523  00170C  EC77  F00D         	call	_STLED316s_SPI_SendData
  6524                           
  6525                           ;Display.c: 333:         break;
  6526  001710  EFB3  F00B         	goto	l467
  6527  001714                     l4563:
  6528  001714  5046               	movf	WriteSTLED316SErr@msg^0,w,c
  6529  001716  6E44               	movwf	??_WriteSTLED316SErr^0,c
  6530  001718  6A45               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6531                           
  6532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6533                           ; Switch size 1, requested type "simple"
  6534                           ; Number of cases is 1, Range of values is 0 to 0
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; simple_byte            4     3 (average)
  6538                           ;	Chosen strategy is simple_byte
  6539  00171A  5045               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6540  00171C  0A00               	xorlw	0	; case 0
  6541  00171E  B4D8               	btfsc	status,2,c
  6542  001720  EF94  F00B         	goto	l5695
  6543  001724  EFB3  F00B         	goto	l467
  6544  001728                     l5695:
  6545                           
  6546                           ; Switch size 1, requested type "simple"
  6547                           ; Number of cases is 7, Range of values is 48 to 83
  6548                           ; switch strategies available:
  6549                           ; Name         Instructions Cycles
  6550                           ; simple_byte           22    12 (average)
  6551                           ;	Chosen strategy is simple_byte
  6552  001728  5044               	movf	??_WriteSTLED316SErr^0,w,c
  6553  00172A  0A30               	xorlw	48	; case 48
  6554  00172C  B4D8               	btfsc	status,2,c
  6555  00172E  EF5A  F00B         	goto	l4549
  6556  001732  0A01               	xorlw	1	; case 49
  6557  001734  B4D8               	btfsc	status,2,c
  6558  001736  EF62  F00B         	goto	l4551
  6559  00173A  0A03               	xorlw	3	; case 50
  6560  00173C  B4D8               	btfsc	status,2,c
  6561  00173E  EF6A  F00B         	goto	l4553
  6562  001742  0A73               	xorlw	115	; case 65
  6563  001744  B4D8               	btfsc	status,2,c
  6564  001746  EF82  F00B         	goto	l4559
  6565  00174A  0A04               	xorlw	4	; case 69
  6566  00174C  B4D8               	btfsc	status,2,c
  6567  00174E  EF52  F00B         	goto	l4547
  6568  001752  0A02               	xorlw	2	; case 71
  6569  001754  B4D8               	btfsc	status,2,c
  6570  001756  EF72  F00B         	goto	l4555
  6571  00175A  0A14               	xorlw	20	; case 83
  6572  00175C  B4D8               	btfsc	status,2,c
  6573  00175E  EF7A  F00B         	goto	l4557
  6574  001762  EFB3  F00B         	goto	l467
  6575  001766                     l467:
  6576                           
  6577                           ;Display.c: 338:  LATCbits.LATC4 = 1;
  6578  001766  888B               	bsf	139,4,c	;volatile
  6579                           
  6580                           ;Display.c: 340:  LATCbits.LATC4 = 0;
  6581  001768  988B               	bcf	139,4,c	;volatile
  6582  00176A                     
  6583                           ;Display.c: 342:  STLED316s_SPI_SendData ( 0x0D );
  6584  00176A  0E0D               	movlw	13
  6585  00176C  EC77  F00D         	call	_STLED316s_SPI_SendData
  6586  001770                     
  6587                           ;Display.c: 344:  LATCbits.LATC4 = 1;
  6588  001770  888B               	bsf	139,4,c	;volatile
  6589  001772  0012               	return		;funcret
  6590  001774                     __end_of_WriteSTLED316SErr:
  6591                           	opt callstack 0
  6592                           
  6593 ;; *************** function _STLED316s_SPI_SendData *****************
  6594 ;; Defined at:
  6595 ;;		line 89 in file "Display.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  Data            1    wreg     unsigned char 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  Data            1    8[COMRAM] unsigned char 
  6600 ;;  t               1   11[COMRAM] unsigned char 
  6601 ;;  i               1   10[COMRAM] unsigned char 
  6602 ;;  temp            1    9[COMRAM] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;Total ram usage:        6 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    2
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_InitSTLED316
  6623 ;;		_WriteSTLED316SData
  6624 ;;		_WriteSTLED316SMode
  6625 ;;		_WriteSTLED316SVibMode
  6626 ;;		_WriteSTLED316SErr
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text32
  6631  001AEE                     __ptext32:
  6632                           	opt callstack 0
  6633  001AEE                     _STLED316s_SPI_SendData:
  6634                           	opt callstack 27
  6635                           
  6636                           ;incstack = 0
  6637                           ;STLED316s_SPI_SendData@Data stored from wreg
  6638  001AEE  6E40               	movwf	STLED316s_SPI_SendData@Data^0,c
  6639  001AF0                     
  6640                           ;Display.c: 89: void STLED316s_SPI_SendData( unsigned char Data );Display.c: 90: {;Displ
      +                          ay.c: 91:  char i,temp,t;;Display.c: 93:  for(i = 0; i < 8 ;i ++)
  6641  001AF0  0E00               	movlw	0
  6642  001AF2  6E42               	movwf	STLED316s_SPI_SendData@i^0,c
  6643  001AF4                     l413:
  6644                           
  6645                           ;Display.c: 94:  {;Display.c: 95:   LATCbits.LATC3 = 0;
  6646  001AF4  968B               	bcf	139,3,c	;volatile
  6647  001AF6                     
  6648                           ;Display.c: 96:   temp = Data & (0x1 << i);
  6649  001AF6  C042  F03E         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6650  001AFA  0E01               	movlw	1
  6651  001AFC  6E3F               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6652  001AFE  2A3E               	incf	??_STLED316s_SPI_SendData^0,f,c
  6653  001B00  EF84  F00D         	goto	u2744
  6654  001B04                     u2745:
  6655  001B04  90D8               	bcf	status,0,c
  6656  001B06  363F               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6657  001B08                     u2744:
  6658  001B08  2E3E               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6659  001B0A  EF82  F00D         	goto	u2745
  6660  001B0E  503F               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6661  001B10  1440               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6662  001B12  6E41               	movwf	STLED316s_SPI_SendData@temp^0,c
  6663  001B14                     
  6664                           ;Display.c: 97:   if(temp)
  6665  001B14  5041               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6666  001B16  B4D8               	btfsc	status,2,c
  6667  001B18  EF90  F00D         	goto	u2751
  6668  001B1C  EF92  F00D         	goto	u2750
  6669  001B20                     u2751:
  6670  001B20  EF95  F00D         	goto	l415
  6671  001B24                     u2750:
  6672  001B24                     
  6673                           ;Display.c: 98:    LATCbits.LATC5 = 1;
  6674  001B24  8A8B               	bsf	139,5,c	;volatile
  6675  001B26  EF96  F00D         	goto	l4369
  6676  001B2A                     l415:
  6677                           
  6678                           ;Display.c: 100:    LATCbits.LATC5 = 0;
  6679  001B2A  9A8B               	bcf	139,5,c	;volatile
  6680  001B2C                     l4369:
  6681                           
  6682                           ;Display.c: 101:   for( t = 0 ; t < 5; t++);
  6683  001B2C  0E00               	movlw	0
  6684  001B2E  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6685  001B30                     l4375:
  6686  001B30  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6687  001B32  0E04               	movlw	4
  6688  001B34  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6689  001B36  EF9F  F00D         	goto	u2761
  6690  001B3A  EFA1  F00D         	goto	u2760
  6691  001B3E                     u2761:
  6692  001B3E  EF98  F00D         	goto	l4375
  6693  001B42                     u2760:
  6694  001B42                     
  6695                           ;Display.c: 102:   LATCbits.LATC3 = 1;
  6696  001B42  868B               	bsf	139,3,c	;volatile
  6697  001B44                     
  6698                           ;Display.c: 103:   for( t = 0 ; t < 5 ; t++);
  6699  001B44  0E00               	movlw	0
  6700  001B46  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6701  001B48                     l4385:
  6702  001B48  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6703  001B4A  0E04               	movlw	4
  6704  001B4C  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6705  001B4E  EFAB  F00D         	goto	u2771
  6706  001B52  EFAD  F00D         	goto	u2770
  6707  001B56                     u2771:
  6708  001B56  EFA4  F00D         	goto	l4385
  6709  001B5A                     u2770:
  6710  001B5A                     
  6711                           ;Display.c: 104:  }
  6712  001B5A  2A42               	incf	STLED316s_SPI_SendData@i^0,f,c
  6713  001B5C  0E07               	movlw	7
  6714  001B5E  6442               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  6715  001B60  EFB4  F00D         	goto	u2781
  6716  001B64  EFB6  F00D         	goto	u2780
  6717  001B68                     u2781:
  6718  001B68  EF7A  F00D         	goto	l413
  6719  001B6C                     u2780:
  6720  001B6C  0012               	return		;funcret
  6721  001B6E                     __end_of_STLED316s_SPI_SendData:
  6722                           	opt callstack 0
  6723                           
  6724 ;; *************** function _Read_IR *****************
  6725 ;; Defined at:
  6726 ;;		line 800 in file "main.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2    6[COMRAM] unsigned int 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;Total ram usage:        2 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    2
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		_MotorPosition_Init
  6751 ;;		_Homing_Again_Manual
  6752 ;;		_Homing_Again_Auto
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text33
  6757  001F80                     __ptext33:
  6758                           	opt callstack 0
  6759  001F80                     _Read_IR:
  6760                           	opt callstack 27
  6761  001F80                     
  6762                           ;main.c: 803:     if(PORTAbits.RA1 == 1)
  6763  001F80  A280               	btfss	128,1,c	;volatile
  6764  001F82  EFC5  F00F         	goto	u1701
  6765  001F86  EFC7  F00F         	goto	u1700
  6766  001F8A                     u1701:
  6767  001F8A  EFCD  F00F         	goto	l3059
  6768  001F8E                     u1700:
  6769  001F8E                     
  6770                           ;main.c: 804:     {;main.c: 805:         return 0;
  6771  001F8E  0E00               	movlw	0
  6772  001F90  6E3F               	movwf	(?_Read_IR+1)^0,c
  6773  001F92  0E00               	movlw	0
  6774  001F94  6E3E               	movwf	?_Read_IR^0,c
  6775  001F96  EFD1  F00F         	goto	l311
  6776  001F9A                     l3059:
  6777                           
  6778                           ;main.c: 808:     {;main.c: 809:         return 1;
  6779  001F9A  0E00               	movlw	0
  6780  001F9C  6E3F               	movwf	(?_Read_IR+1)^0,c
  6781  001F9E  0E01               	movlw	1
  6782  001FA0  6E3E               	movwf	?_Read_IR^0,c
  6783  001FA2                     l311:
  6784  001FA2  0012               	return		;funcret
  6785  001FA4                     __end_of_Read_IR:
  6786                           	opt callstack 0
  6787                           
  6788 ;; *************** function _MotorON_PWM *****************
  6789 ;; Defined at:
  6790 ;;		line 42 in file "MotorDriver.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    3
  6811 ;; This function calls:
  6812 ;;		_Set_RG3_PWM
  6813 ;; This function is called by:
  6814 ;;		_MotorPosition_Init
  6815 ;;		_Homing_Again_Manual
  6816 ;;		_Homing_Again_Auto
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text34
  6821  002044                     __ptext34:
  6822                           	opt callstack 0
  6823  002044                     _MotorON_PWM:
  6824                           	opt callstack 26
  6825  002044                     
  6826                           ;MotorDriver.c: 44:  LATGbits.LATG3 = 1;
  6827  002044  868F               	bsf	143,3,c	;volatile
  6828                           
  6829                           ;MotorDriver.c: 45:  LATGbits.LATG4 = 1;
  6830  002046  888F               	bsf	143,4,c	;volatile
  6831  002048                     
  6832                           ;MotorDriver.c: 47:  Set_RG3_PWM();
  6833  002048  EC16  F010         	call	_Set_RG3_PWM	;wreg free
  6834  00204C  0012               	return		;funcret
  6835  00204E                     __end_of_MotorON_PWM:
  6836                           	opt callstack 0
  6837                           
  6838 ;; *************** function _Set_RG3_PWM *****************
  6839 ;; Defined at:
  6840 ;;		line 29 in file "MotorDriver.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      void 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;Total ram usage:        0 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    2
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_MotorON_PWM
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text35
  6869  00202C                     __ptext35:
  6870                           	opt callstack 0
  6871  00202C                     _Set_RG3_PWM:
  6872                           	opt callstack 26
  6873  00202C                     
  6874                           ;MotorDriver.c: 31:     CCP4CON = 0x0C;
  6875  00202C  0E0C               	movlw	12
  6876  00202E  6E73               	movwf	115,c	;volatile
  6877  002030                     
  6878                           ;MotorDriver.c: 32:     CCPR4L = PWM_reg;
  6879  002030  C058  FF74         	movff	_PWM_reg,3956	;volatile
  6880  002034                     
  6881                           ;MotorDriver.c: 33:   T4CONbits.TMR4ON = 1;
  6882  002034  8476               	bsf	118,2,c	;volatile
  6883  002036  0012               	return		;funcret
  6884  002038                     __end_of_Set_RG3_PWM:
  6885                           	opt callstack 0
  6886                           
  6887 ;; *************** function _MotorBREAK *****************
  6888 ;; Defined at:
  6889 ;;		line 50 in file "MotorDriver.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;		None
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, cstack
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;Total ram usage:        0 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    3
  6910 ;; This function calls:
  6911 ;;		_Clr_RG3_PWM
  6912 ;; This function is called by:
  6913 ;;		_MotorPosition_Init
  6914 ;;		_Homing_Again_Manual
  6915 ;;		_Homing_Again_Auto
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text36
  6920  00204E                     __ptext36:
  6921                           	opt callstack 0
  6922  00204E                     _MotorBREAK:
  6923                           	opt callstack 26
  6924  00204E                     
  6925                           ;MotorDriver.c: 53:  Clr_RG3_PWM();
  6926  00204E  EC38  F010         	call	_Clr_RG3_PWM	;wreg free
  6927  002052                     
  6928                           ;MotorDriver.c: 55:  LATGbits.LATG3 = 1;
  6929  002052  868F               	bsf	143,3,c	;volatile
  6930  002054                     
  6931                           ;MotorDriver.c: 56:  LATGbits.LATG4 = 1;
  6932  002054  888F               	bsf	143,4,c	;volatile
  6933  002056  0012               	return		;funcret
  6934  002058                     __end_of_MotorBREAK:
  6935                           	opt callstack 0
  6936                           
  6937 ;; *************** function _Clr_RG3_PWM *****************
  6938 ;; Defined at:
  6939 ;;		line 36 in file "MotorDriver.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    2
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_MotorBREAK
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text37
  6968  002070                     __ptext37:
  6969                           	opt callstack 0
  6970  002070                     _Clr_RG3_PWM:
  6971                           	opt callstack 26
  6972  002070                     
  6973                           ;MotorDriver.c: 38:  CCP4CON = 0x00;
  6974  002070  0E00               	movlw	0
  6975  002072  6E73               	movwf	115,c	;volatile
  6976  002074                     
  6977                           ;MotorDriver.c: 39:     T4CONbits.TMR4ON = 0;
  6978  002074  9476               	bcf	118,2,c	;volatile
  6979  002076  0012               	return		;funcret
  6980  002078                     __end_of_Clr_RG3_PWM:
  6981                           	opt callstack 0
  6982                           
  6983 ;; *************** function _AD_capture_BattVoltage *****************
  6984 ;; Defined at:
  6985 ;;		line 1161 in file "main.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;		None
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;Total ram usage:        2 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    3
  7006 ;; This function calls:
  7007 ;;		_delay_1ms
  7008 ;; This function is called by:
  7009 ;;		_main
  7010 ;;		_Homing_Again_Manual
  7011 ;;		_Homing_Again_Auto
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text38
  7016  001DC4                     __ptext38:
  7017                           	opt callstack 0
  7018  001DC4                     _AD_capture_BattVoltage:
  7019                           	opt callstack 26
  7020  001DC4                     
  7021                           ;main.c: 1164:     ADCON0bits.CHS0=0;
  7022  001DC4  94C2               	bcf	194,2,c	;volatile
  7023                           
  7024                           ;main.c: 1165:     ADCON0bits.CHS1=0;
  7025  001DC6  96C2               	bcf	194,3,c	;volatile
  7026                           
  7027                           ;main.c: 1166:     ADCON0bits.CHS2=0;
  7028  001DC8  98C2               	bcf	194,4,c	;volatile
  7029                           
  7030                           ;main.c: 1167:     ADCON0bits.CHS3=0;
  7031  001DCA  9AC2               	bcf	194,5,c	;volatile
  7032                           
  7033                           ;main.c: 1169:  ADCON0bits.ADON=1;
  7034  001DCC  80C2               	bsf	194,0,c	;volatile
  7035  001DCE                     
  7036                           ;main.c: 1170:  delay_1ms(5);
  7037  001DCE  0E00               	movlw	0
  7038  001DD0  6E3F               	movwf	(delay_1ms@time+1)^0,c
  7039  001DD2  0E05               	movlw	5
  7040  001DD4  6E3E               	movwf	delay_1ms@time^0,c
  7041  001DD6  EC71  F00F         	call	_delay_1ms	;wreg free
  7042  001DDA                     
  7043                           ;main.c: 1171:  ADCON0bits.GO=1;
  7044  001DDA  82C2               	bsf	194,1,c	;volatile
  7045  001DDC                     l391:
  7046  001DDC  B2C2               	btfsc	194,1,c	;volatile
  7047  001DDE  EFF3  F00E         	goto	u1691
  7048  001DE2  EFF5  F00E         	goto	u1690
  7049  001DE6                     u1691:
  7050  001DE6  EFEE  F00E         	goto	l391
  7051  001DEA                     u1690:
  7052  001DEA                     
  7053                           ;main.c: 1175:     VOLTAGE = (ADRESH*256) | (ADRESL);
  7054  001DEA  50C3               	movf	195,w,c	;volatile
  7055  001DEC  CFC4 F041          	movff	4036,??_AD_capture_BattVoltage	;volatile
  7056  001DF0  6A42               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  7057  001DF2  C041  F042         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  7058  001DF6  6A41               	clrf	??_AD_capture_BattVoltage^0,c
  7059  001DF8  1041               	iorwf	??_AD_capture_BattVoltage^0,w,c
  7060  001DFA  6E11               	movwf	_VOLTAGE^0,c
  7061  001DFC  5042               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  7062  001DFE  6E12               	movwf	(_VOLTAGE+1)^0,c
  7063  001E00  0012               	return		;funcret
  7064  001E02                     __end_of_AD_capture_BattVoltage:
  7065                           	opt callstack 0
  7066                           
  7067 ;; *************** function _delay_1ms *****************
  7068 ;; Defined at:
  7069 ;;		line 788 in file "main.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  time            2    6[COMRAM] unsigned int 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;Total ram usage:        3 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    2
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_MotorPosition_Init
  7094 ;;		_Homing_Again_Manual
  7095 ;;		_Homing_Again_Auto
  7096 ;;		_AD_capture_BattVoltage
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text39
  7101  001EE2                     __ptext39:
  7102                           	opt callstack 0
  7103  001EE2                     _delay_1ms:
  7104                           	opt callstack 27
  7105  001EE2                     
  7106                           ;main.c: 788: void delay_1ms(unsigned int time);main.c: 789:  {;main.c: 790:    while(ti
      +                          me > 0)
  7107  001EE2  EF7D  F00F         	goto	l304
  7108  001EE6                     l2783:
  7109                           
  7110                           ;main.c: 791:    {;main.c: 792:        _delay((unsigned long)((1)*(8000000/4000.0)));
  7111  001EE6  0E03               	movlw	3
  7112  001EE8  6E40               	movwf	??_delay_1ms^0,c
  7113  001EEA  0E98               	movlw	152
  7114  001EEC                     u3947:
  7115  001EEC  2EE8               	decfsz	wreg,f,c
  7116  001EEE  D7FE               	bra	u3947
  7117  001EF0  2E40               	decfsz	??_delay_1ms^0,f,c
  7118  001EF2  D7FC               	bra	u3947
  7119  001EF4                     
  7120                           ;main.c: 793:       time--;
  7121  001EF4  063E               	decf	delay_1ms@time^0,f,c
  7122  001EF6  A0D8               	btfss	status,0,c
  7123  001EF8  063F               	decf	(delay_1ms@time+1)^0,f,c
  7124  001EFA                     l304:
  7125                           
  7126                           ;main.c: 790:    while(time > 0)
  7127  001EFA  503E               	movf	delay_1ms@time^0,w,c
  7128  001EFC  103F               	iorwf	(delay_1ms@time+1)^0,w,c
  7129  001EFE  A4D8               	btfss	status,2,c
  7130  001F00  EF84  F00F         	goto	u1431
  7131  001F04  EF86  F00F         	goto	u1430
  7132  001F08                     u1431:
  7133  001F08  EF73  F00F         	goto	l2783
  7134  001F0C                     u1430:
  7135  001F0C  0012               	return		;funcret
  7136  001F0E                     __end_of_delay_1ms:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function _high_isr *****************
  7140 ;; Defined at:
  7141 ;;		line 662 in file "main.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  i               1    5[COMRAM] unsigned char 
  7146 ;;  c               1    4[COMRAM] unsigned char 
  7147 ;;  Temp            1    3[COMRAM] unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;Total ram usage:        5 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    1
  7164 ;; This function calls:
  7165 ;;		_Low_Power_Indicator
  7166 ;;		_Read1USART
  7167 ;;		i2_Write1USART
  7168 ;; This function is called by:
  7169 ;;		Interrupt level 2
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	intcode
  7174  000008                     __pintcode:
  7175                           	opt callstack 0
  7176  000008                     _high_isr:
  7177                           	opt callstack 25
  7178                           
  7179                           ;incstack = 0
  7180  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7181  00000A  CFD9 F039          	movff	fsr2l,??_high_isr
  7182  00000E  CFDA F03A          	movff	fsr2h,??_high_isr+1
  7183  000012                     
  7184                           ;main.c: 664:     unsigned char c, i;;main.c: 665:  unsigned char Temp;;main.c: 667:    
      +                           if ((PIR1bits.RC1IF))
  7185  000012  AA9E               	btfss	158,5,c	;volatile
  7186  000014  EF0E  F000         	goto	i2u254_41
  7187  000018  EF10  F000         	goto	i2u254_40
  7188  00001C                     i2u254_41:
  7189  00001C  EFE1  F000         	goto	i2l271
  7190  000020                     i2u254_40:
  7191  000020                     
  7192                           ;main.c: 668:  {;main.c: 670:   c=Read1USART();
  7193  000020  ECAD  F00F         	call	_Read1USART	;wreg free
  7194  000024  6E3C               	movwf	high_isr@c^0,c
  7195  000026                     
  7196                           ;main.c: 672:   if ((c == 0xA5) && ((Serial_Flag == 0)||(Busy == 1)))
  7197  000026  0EA5               	movlw	165
  7198  000028  183C               	xorwf	high_isr@c^0,w,c
  7199  00002A  A4D8               	btfss	status,2,c
  7200  00002C  EF1A  F000         	goto	i2u255_41
  7201  000030  EF1C  F000         	goto	i2u255_40
  7202  000034                     i2u255_41:
  7203  000034  EF3E  F000         	goto	i2l4067
  7204  000038                     i2u255_40:
  7205  000038  5037               	movf	_Serial_Flag^0,w,c
  7206  00003A  B4D8               	btfsc	status,2,c
  7207  00003C  EF22  F000         	goto	i2u256_41
  7208  000040  EF24  F000         	goto	i2u256_40
  7209  000044                     i2u256_41:
  7210  000044  EF2C  F000         	goto	i2l4061
  7211  000048                     i2u256_40:
  7212  000048  0433               	decf	_Busy^0,w,c
  7213  00004A  A4D8               	btfss	status,2,c
  7214  00004C  EF2A  F000         	goto	i2u257_41
  7215  000050  EF2C  F000         	goto	i2u257_40
  7216  000054                     i2u257_41:
  7217  000054  EF3E  F000         	goto	i2l4067
  7218  000058                     i2u257_40:
  7219  000058                     i2l4061:
  7220                           
  7221                           ;main.c: 673:   {;main.c: 674:    Serial_GData = 1;
  7222  000058  0E01               	movlw	1
  7223  00005A  6E36               	movwf	_Serial_GData^0,c
  7224                           
  7225                           ;main.c: 675:    Serial_Count = 0;
  7226  00005C  0E00               	movlw	0
  7227  00005E  6E2A               	movwf	(_Serial_Count+1)^0,c
  7228  000060  0E00               	movlw	0
  7229  000062  6E29               	movwf	_Serial_Count^0,c
  7230  000064                     
  7231                           ;main.c: 676:    Serial_Buffer[Serial_Count] = c;
  7232  000064  0E01               	movlw	low _Serial_Buffer
  7233  000066  2429               	addwf	_Serial_Count^0,w,c
  7234  000068  6ED9               	movwf	fsr2l,c
  7235  00006A  0E00               	movlw	high _Serial_Buffer
  7236  00006C  202A               	addwfc	(_Serial_Count+1)^0,w,c
  7237  00006E  6EDA               	movwf	fsr2h,c
  7238  000070  C03C  FFDF         	movff	high_isr@c,indf2
  7239  000074                     i2l4065:
  7240                           
  7241                           ;main.c: 677:             Serial_Count++;
  7242  000074  4A29               	infsnz	_Serial_Count^0,f,c
  7243  000076  2A2A               	incf	(_Serial_Count+1)^0,f,c
  7244                           
  7245                           ;main.c: 678:   }
  7246  000078  EFEB  F000         	goto	i2l4133
  7247  00007C                     i2l4067:
  7248  00007C  0436               	decf	_Serial_GData^0,w,c
  7249  00007E  A4D8               	btfss	status,2,c
  7250  000080  EF44  F000         	goto	i2u258_41
  7251  000084  EF46  F000         	goto	i2u258_40
  7252  000088                     i2u258_41:
  7253  000088  EFEB  F000         	goto	i2l4133
  7254  00008C                     i2u258_40:
  7255  00008C                     
  7256                           ;main.c: 680:   {;main.c: 681:    Serial_Buffer[Serial_Count] = c;
  7257  00008C  0E01               	movlw	low _Serial_Buffer
  7258  00008E  2429               	addwf	_Serial_Count^0,w,c
  7259  000090  6ED9               	movwf	fsr2l,c
  7260  000092  0E00               	movlw	high _Serial_Buffer
  7261  000094  202A               	addwfc	(_Serial_Count+1)^0,w,c
  7262  000096  6EDA               	movwf	fsr2h,c
  7263  000098  C03C  FFDF         	movff	high_isr@c,indf2
  7264  00009C                     
  7265                           ;main.c: 683:    if(Serial_Count<5)
  7266  00009C  502A               	movf	(_Serial_Count+1)^0,w,c
  7267  00009E  E107               	bnz	i2u259_41
  7268  0000A0  0E05               	movlw	5
  7269  0000A2  5C29               	subwf	_Serial_Count^0,w,c
  7270  0000A4  B0D8               	btfsc	status,0,c
  7271  0000A6  EF57  F000         	goto	i2u259_41
  7272  0000AA  EF59  F000         	goto	i2u259_40
  7273  0000AE                     i2u259_41:
  7274  0000AE  EFDD  F000         	goto	i2l4127
  7275  0000B2                     i2u259_40:
  7276  0000B2                     
  7277                           ;main.c: 684:             {;main.c: 685:                 if (c == 0x5A)
  7278  0000B2  0E5A               	movlw	90
  7279  0000B4  183C               	xorwf	high_isr@c^0,w,c
  7280  0000B6  A4D8               	btfss	status,2,c
  7281  0000B8  EF60  F000         	goto	i2u260_41
  7282  0000BC  EF62  F000         	goto	i2u260_40
  7283  0000C0                     i2u260_41:
  7284  0000C0  EF3A  F000         	goto	i2l4065
  7285  0000C4                     i2u260_40:
  7286  0000C4                     
  7287                           ;main.c: 686:                 {;main.c: 687:                     Temp = Serial_Buffer[1]
      +                           + Serial_Buffer[2];
  7288  0000C4  5002               	movf	(_Serial_Buffer+1)^0,w,c
  7289  0000C6  2403               	addwf	(_Serial_Buffer+2)^0,w,c
  7290  0000C8  6E3B               	movwf	high_isr@Temp^0,c
  7291                           
  7292                           ;main.c: 689:                     if (Temp == Serial_Buffer[3])
  7293  0000CA  503B               	movf	high_isr@Temp^0,w,c
  7294  0000CC  1804               	xorwf	(_Serial_Buffer+3)^0,w,c
  7295  0000CE  A4D8               	btfss	status,2,c
  7296  0000D0  EF6C  F000         	goto	i2u261_41
  7297  0000D4  EF6E  F000         	goto	i2u261_40
  7298  0000D8                     i2u261_41:
  7299  0000D8  EFB1  F000         	goto	i2l4107
  7300  0000DC                     i2u261_40:
  7301  0000DC                     
  7302                           ;main.c: 690:                     {;main.c: 691:                         if(Busy==0 || S
      +                          erial_Buffer[2]==0xF5)
  7303  0000DC  5033               	movf	_Busy^0,w,c
  7304  0000DE  B4D8               	btfsc	status,2,c
  7305  0000E0  EF74  F000         	goto	i2u262_41
  7306  0000E4  EF76  F000         	goto	i2u262_40
  7307  0000E8                     i2u262_41:
  7308  0000E8  EF7F  F000         	goto	i2l282
  7309  0000EC                     i2u262_40:
  7310  0000EC  0EF5               	movlw	245
  7311  0000EE  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7312  0000F0  A4D8               	btfss	status,2,c
  7313  0000F2  EF7D  F000         	goto	i2u263_41
  7314  0000F6  EF7F  F000         	goto	i2u263_40
  7315  0000FA                     i2u263_41:
  7316  0000FA  EF97  F000         	goto	i2l280
  7317  0000FE                     i2u263_40:
  7318  0000FE                     i2l282:
  7319                           
  7320                           ;main.c: 692:                         {;main.c: 693:                             INTCONb
      +                          its.GIE=0;
  7321  0000FE  9EF2               	bcf	242,7,c	;volatile
  7322  000100                     
  7323                           ;main.c: 694:                             for (i=0; i<5; i++)
  7324  000100  0E00               	movlw	0
  7325  000102  6E3D               	movwf	high_isr@i^0,c
  7326  000104                     i2l4087:
  7327                           
  7328                           ;main.c: 695:                             {;main.c: 696:                                
      +                           Write1USART(Serial_Buffer[i]);
  7329  000104  0E01               	movlw	low _Serial_Buffer
  7330  000106  243D               	addwf	high_isr@i^0,w,c
  7331  000108  6ED9               	movwf	fsr2l,c
  7332  00010A  6ADA               	clrf	fsr2h,c
  7333  00010C  0E00               	movlw	high _Serial_Buffer
  7334  00010E  22DA               	addwfc	fsr2h,f,c
  7335  000110  50DF               	movf	indf2,w,c
  7336  000112  ECF4  F00F         	call	i2_Write1USART
  7337  000116                     
  7338                           ;main.c: 697:                             }
  7339  000116  2A3D               	incf	high_isr@i^0,f,c
  7340  000118  0E04               	movlw	4
  7341  00011A  643D               	cpfsgt	high_isr@i^0,c
  7342  00011C  EF92  F000         	goto	i2u264_41
  7343  000120  EF94  F000         	goto	i2u264_40
  7344  000124                     i2u264_41:
  7345  000124  EF82  F000         	goto	i2l4087
  7346  000128                     i2u264_40:
  7347  000128                     
  7348                           ;main.c: 698:                             INTCONbits.GIE=1;
  7349  000128  8EF2               	bsf	242,7,c	;volatile
  7350                           
  7351                           ;main.c: 699:                         }
  7352  00012A  EFA7  F000         	goto	i2l4105
  7353  00012E                     i2l280:
  7354                           
  7355                           ;main.c: 701:                         {;main.c: 702:                             INTCONb
      +                          its.GIE=0;
  7356  00012E  9EF2               	bcf	242,7,c	;volatile
  7357  000130                     
  7358                           ;main.c: 703:                             for (i=0; i<5; i++)
  7359  000130  0E00               	movlw	0
  7360  000132  6E3D               	movwf	high_isr@i^0,c
  7361  000134                     i2l4099:
  7362                           
  7363                           ;main.c: 704:                             {;main.c: 705:                                
      +                           Write1USART(0x16);
  7364  000134  0E16               	movlw	22
  7365  000136  ECF4  F00F         	call	i2_Write1USART
  7366  00013A                     
  7367                           ;main.c: 706:                             }
  7368  00013A  2A3D               	incf	high_isr@i^0,f,c
  7369  00013C  0E04               	movlw	4
  7370  00013E  643D               	cpfsgt	high_isr@i^0,c
  7371  000140  EFA4  F000         	goto	i2u265_41
  7372  000144  EFA6  F000         	goto	i2u265_40
  7373  000148                     i2u265_41:
  7374  000148  EF9A  F000         	goto	i2l4099
  7375  00014C                     i2u265_40:
  7376  00014C                     
  7377                           ;main.c: 707:                             INTCONbits.GIE=1;
  7378  00014C  8EF2               	bsf	242,7,c	;volatile
  7379  00014E                     i2l4105:
  7380                           
  7381                           ;main.c: 710:                         Serial_Flag = 1;
  7382  00014E  0E01               	movlw	1
  7383  000150  6E37               	movwf	_Serial_Flag^0,c
  7384                           
  7385                           ;main.c: 711:                         Serial_Count = 0;
  7386  000152  0E00               	movlw	0
  7387  000154  6E2A               	movwf	(_Serial_Count+1)^0,c
  7388  000156  0E00               	movlw	0
  7389  000158  6E29               	movwf	_Serial_Count^0,c
  7390                           
  7391                           ;main.c: 712:                         OpMode = AUTO_MODE;
  7392  00015A  0E02               	movlw	2
  7393  00015C  6E30               	movwf	_OpMode^0,c	;volatile
  7394                           
  7395                           ;main.c: 714:                     }
  7396  00015E  EFC7  F000         	goto	i2l4121
  7397  000162                     i2l4107:
  7398                           
  7399                           ;main.c: 716:                     {;main.c: 717:                         Serial_Flag = 0
      +                          ;
  7400  000162  0E00               	movlw	0
  7401  000164  6E37               	movwf	_Serial_Flag^0,c
  7402                           
  7403                           ;main.c: 718:                         Serial_Count = 0;
  7404  000166  0E00               	movlw	0
  7405  000168  6E2A               	movwf	(_Serial_Count+1)^0,c
  7406  00016A  0E00               	movlw	0
  7407  00016C  6E29               	movwf	_Serial_Count^0,c
  7408  00016E                     
  7409                           ;main.c: 720:                         INTCONbits.GIE=0;
  7410  00016E  9EF2               	bcf	242,7,c	;volatile
  7411                           
  7412                           ;main.c: 721:                         for (i=0; i<5; i++)
  7413  000170  0E00               	movlw	0
  7414  000172  6E3D               	movwf	high_isr@i^0,c
  7415  000174                     i2l4115:
  7416                           
  7417                           ;main.c: 722:                         {;main.c: 723:                             Write1U
      +                          SART(0x15);
  7418  000174  0E15               	movlw	21
  7419  000176  ECF4  F00F         	call	i2_Write1USART
  7420  00017A                     
  7421                           ;main.c: 724:                         }
  7422  00017A  2A3D               	incf	high_isr@i^0,f,c
  7423  00017C  0E04               	movlw	4
  7424  00017E  643D               	cpfsgt	high_isr@i^0,c
  7425  000180  EFC4  F000         	goto	i2u266_41
  7426  000184  EFC6  F000         	goto	i2u266_40
  7427  000188                     i2u266_41:
  7428  000188  EFBA  F000         	goto	i2l4115
  7429  00018C                     i2u266_40:
  7430  00018C                     
  7431                           ;main.c: 725:                         INTCONbits.GIE=1;
  7432  00018C  8EF2               	bsf	242,7,c	;volatile
  7433  00018E                     i2l4121:
  7434                           
  7435                           ;main.c: 728:                     if(Serial_Buffer[2]==0xF5 && OpMode == AUTO_MODE)
  7436  00018E  0EF5               	movlw	245
  7437  000190  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7438  000192  A4D8               	btfss	status,2,c
  7439  000194  EFCE  F000         	goto	i2u267_41
  7440  000198  EFD0  F000         	goto	i2u267_40
  7441  00019C                     i2u267_41:
  7442  00019C  EF3A  F000         	goto	i2l4065
  7443  0001A0                     i2u267_40:
  7444  0001A0  0E02               	movlw	2
  7445  0001A2  1830               	xorwf	_OpMode^0,w,c	;volatile
  7446  0001A4  A4D8               	btfss	status,2,c
  7447  0001A6  EFD7  F000         	goto	i2u268_41
  7448  0001AA  EFD9  F000         	goto	i2u268_40
  7449  0001AE                     i2u268_41:
  7450  0001AE  EF3A  F000         	goto	i2l4065
  7451  0001B2                     i2u268_40:
  7452  0001B2                     
  7453                           ;main.c: 729:                     {;main.c: 730:                         Stop = 1;
  7454  0001B2  0E01               	movlw	1
  7455  0001B4  6E35               	movwf	_Stop^0,c
  7456  0001B6  EF3A  F000         	goto	i2l4065
  7457  0001BA                     i2l4127:
  7458                           
  7459                           ;main.c: 735:             {;main.c: 736:                 Serial_GData = 0;
  7460  0001BA  0E00               	movlw	0
  7461  0001BC  6E36               	movwf	_Serial_GData^0,c
  7462  0001BE  EF3A  F000         	goto	i2l4065
  7463  0001C2                     i2l271:
  7464                           
  7465                           ;main.c: 743:     {;main.c: 744:         if (RCSTA1bits.OERR == 1)
  7466  0001C2  A2AC               	btfss	172,1,c	;volatile
  7467  0001C4  EFE6  F000         	goto	i2u269_41
  7468  0001C8  EFE8  F000         	goto	i2u269_40
  7469  0001CC                     i2u269_41:
  7470  0001CC  EFEB  F000         	goto	i2l4133
  7471  0001D0                     i2u269_40:
  7472  0001D0                     
  7473                           ;main.c: 745:         {;main.c: 746:             RCSTA1bits.OERR = 0;
  7474  0001D0  92AC               	bcf	172,1,c	;volatile
  7475                           
  7476                           ;main.c: 747:             RCSTA1bits.CREN = 0;
  7477  0001D2  98AC               	bcf	172,4,c	;volatile
  7478                           
  7479                           ;main.c: 748:             RCSTA1bits.CREN = 1;
  7480  0001D4  88AC               	bsf	172,4,c	;volatile
  7481  0001D6                     i2l4133:
  7482                           
  7483                           ;main.c: 752:     if (TMR1IF_triggered == 1)
  7484  0001D6  042B               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7485  0001D8  A4D8               	btfss	status,2,c
  7486  0001DA  EFF1  F000         	goto	i2u270_41
  7487  0001DE  EFF3  F000         	goto	i2u270_40
  7488  0001E2                     i2u270_41:
  7489  0001E2  EF39  F001         	goto	i2l4151
  7490  0001E6                     i2u270_40:
  7491  0001E6                     
  7492                           ;main.c: 753:     {;main.c: 754:         if(errorcounter >0)
  7493  0001E6  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7494  0001E8  EF00  F001         	goto	i2u271_41
  7495  0001EC  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  7496  0001EE  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7497  0001F0  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7498  0001F2  E108               	bnz	i2u271_40
  7499  0001F4  0452               	decf	_errorcounter^0,w,c	;volatile
  7500  0001F6  A0D8               	btfss	status,0,c
  7501  0001F8  EF00  F001         	goto	i2u271_41
  7502  0001FC  EF02  F001         	goto	i2u271_40
  7503  000200                     i2u271_41:
  7504  000200  EF0C  F001         	goto	i2l4139
  7505  000204                     i2u271_40:
  7506  000204                     
  7507                           ;main.c: 755:         {;main.c: 756:             errorcounter--;
  7508  000204  0EFF               	movlw	255
  7509  000206  2652               	addwf	_errorcounter^0,f,c	;volatile
  7510  000208  0EFF               	movlw	255
  7511  00020A  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7512  00020C  0EFF               	movlw	255
  7513  00020E  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7514  000210  0EFF               	movlw	255
  7515  000212  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7516                           
  7517                           ;main.c: 757:         }
  7518  000214  EF14  F001         	goto	i2l4141
  7519  000218                     i2l4139:
  7520                           
  7521                           ;main.c: 759:         {;main.c: 760:             errorcounter = 0;
  7522  000218  0E00               	movlw	0
  7523  00021A  6E52               	movwf	_errorcounter^0,c	;volatile
  7524  00021C  0E00               	movlw	0
  7525  00021E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  7526  000220  0E00               	movlw	0
  7527  000222  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  7528  000224  0E00               	movlw	0
  7529  000226  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  7530  000228                     i2l4141:
  7531                           
  7532                           ;main.c: 763:         if(LowPowerCounter >0)
  7533  000228  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7534  00022A  EF21  F001         	goto	i2u272_41
  7535  00022E  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7536  000230  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7537  000232  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7538  000234  E108               	bnz	i2u272_40
  7539  000236  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  7540  000238  A0D8               	btfss	status,0,c
  7541  00023A  EF21  F001         	goto	i2u272_41
  7542  00023E  EF23  F001         	goto	i2u272_40
  7543  000242                     i2u272_41:
  7544  000242  EF2D  F001         	goto	i2l4145
  7545  000246                     i2u272_40:
  7546  000246                     
  7547                           ;main.c: 764:         {;main.c: 765:             LowPowerCounter--;
  7548  000246  0EFF               	movlw	255
  7549  000248  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  7550  00024A  0EFF               	movlw	255
  7551  00024C  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7552  00024E  0EFF               	movlw	255
  7553  000250  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7554  000252  0EFF               	movlw	255
  7555  000254  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7556                           
  7557                           ;main.c: 766:         }
  7558  000256  EF37  F001         	goto	i2l4149
  7559  00025A                     i2l4145:
  7560                           
  7561                           ;main.c: 768:         {;main.c: 769:             LowPowerCounter = 20;
  7562  00025A  0E14               	movlw	20
  7563  00025C  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  7564  00025E  0E00               	movlw	0
  7565  000260  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7566  000262  0E00               	movlw	0
  7567  000264  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7568  000266  0E00               	movlw	0
  7569  000268  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7570  00026A                     
  7571                           ;main.c: 770:             Low_Power_Indicator();
  7572  00026A  EC56  F00F         	call	_Low_Power_Indicator	;wreg free
  7573  00026E                     i2l4149:
  7574                           
  7575                           ;main.c: 773:         TMR1IF_triggered = 0;
  7576  00026E  0E00               	movlw	0
  7577  000270  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7578  000272                     i2l4151:
  7579                           
  7580                           ;main.c: 776:     if(TMR1IF)
  7581  000272  A09E               	btfss	3998,0,c	;volatile
  7582  000274  EF3E  F001         	goto	i2u273_41
  7583  000278  EF40  F001         	goto	i2u273_40
  7584  00027C                     i2u273_41:
  7585  00027C  EF47  F001         	goto	i2l301
  7586  000280                     i2u273_40:
  7587  000280                     
  7588                           ;main.c: 777:     {;main.c: 778:         TMR1 = 0x9E57;
  7589  000280  0E9E               	movlw	158
  7590  000282  6ECF               	movwf	207,c	;volatile
  7591  000284  0E57               	movlw	87
  7592  000286  6ECE               	movwf	206,c	;volatile
  7593  000288                     
  7594                           ;main.c: 779:         TMR1IF = 0;
  7595  000288  909E               	bcf	3998,0,c	;volatile
  7596                           
  7597                           ;main.c: 780:         TMR1IF_triggered = 1;
  7598  00028A  0E01               	movlw	1
  7599  00028C  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7600  00028E                     i2l301:
  7601  00028E  C03A  FFDA         	movff	??_high_isr+1,fsr2h
  7602  000292  C039  FFD9         	movff	??_high_isr,fsr2l
  7603  000296  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7604  000298  0011               	retfie		f
  7605  00029A                     __end_of_high_isr:
  7606                           	opt callstack 0
  7607                           
  7608 ;; *************** function i2_Write1USART *****************
  7609 ;; Defined at:
  7610 ;;		line 48 in file "usart.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  data            1    wreg     unsigned char 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  data            1    0[COMRAM] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;Total ram usage:        1 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_high_isr
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text41
  7638  001FE8                     __ptext41:
  7639                           	opt callstack 0
  7640  001FE8                     i2_Write1USART:
  7641                           	opt callstack 25
  7642                           
  7643                           ;incstack = 0
  7644                           ;i2Write1USART@data stored from wreg
  7645  001FE8  6E38               	movwf	i2Write1USART@data^0,c
  7646  001FEA                     
  7647                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  7648  001FEA  C038  FFAE         	movff	i2Write1USART@data,4014	;volatile
  7649  001FEE                     i2l560:
  7650  001FEE  A2AD               	btfss	173,1,c	;volatile
  7651  001FF0  EFFC  F00F         	goto	i2u209_41
  7652  001FF4  EFFE  F00F         	goto	i2u209_40
  7653  001FF8                     i2u209_41:
  7654  001FF8  EFF7  F00F         	goto	i2l560
  7655  001FFC                     i2u209_40:
  7656  001FFC  0012               	return		;funcret
  7657  001FFE                     __end_ofi2_Write1USART:
  7658                           	opt callstack 0
  7659                           
  7660 ;; *************** function _Read1USART *****************
  7661 ;; Defined at:
  7662 ;;		line 58 in file "usart.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  result          1    0[COMRAM] unsigned char 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      unsigned char 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;Total ram usage:        1 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_high_isr
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text42
  7690  001F5A                     __ptext42:
  7691                           	opt callstack 0
  7692  001F5A                     _Read1USART:
  7693                           	opt callstack 25
  7694  001F5A                     
  7695                           ;usart.c: 60:     char result;;usart.c: 62:     if (RCSTA1bits.OERR)
  7696  001F5A  A2AC               	btfss	172,1,c	;volatile
  7697  001F5C  EFB2  F00F         	goto	i2u71_41
  7698  001F60  EFB4  F00F         	goto	i2u71_40
  7699  001F64                     i2u71_41:
  7700  001F64  EFBC  F00F         	goto	i2l566
  7701  001F68                     i2u71_40:
  7702  001F68                     
  7703                           ;usart.c: 63:     {;usart.c: 64:         RCSTA1bits.CREN = 0;
  7704  001F68  98AC               	bcf	172,4,c	;volatile
  7705                           
  7706                           ;usart.c: 65:         result = RCREG1;
  7707  001F6A  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7708                           
  7709                           ;usart.c: 66:         result = RCREG1;
  7710  001F6E  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7711                           
  7712                           ;usart.c: 67:         RCSTA1bits.CREN = 1;
  7713  001F72  88AC               	bsf	172,4,c	;volatile
  7714                           
  7715                           ;usart.c: 68:     }
  7716  001F74  EFBE  F00F         	goto	i2l2135
  7717  001F78                     i2l566:
  7718                           
  7719                           ;usart.c: 70:     {;usart.c: 71:         result = RCREG1;
  7720  001F78  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7721  001F7C                     i2l2135:
  7722                           
  7723                           ;usart.c: 74:     return result;
  7724  001F7C  5038               	movf	Read1USART@result^0,w,c
  7725  001F7E  0012               	return		;funcret
  7726  001F80                     __end_of_Read1USART:
  7727                           	opt callstack 0
  7728                           
  7729 ;; *************** function _Low_Power_Indicator *****************
  7730 ;; Defined at:
  7731 ;;		line 1178 in file "main.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;		None
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;		None
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;Total ram usage:        0 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_high_isr
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text43
  7759  001EAC                     __ptext43:
  7760                           	opt callstack 0
  7761  001EAC                     _Low_Power_Indicator:
  7762                           	opt callstack 25
  7763  001EAC                     
  7764                           ;main.c: 1181:     if(VOLTAGE <= 0x0366)
  7765  001EAC  0E67               	movlw	103
  7766  001EAE  5C11               	subwf	_VOLTAGE^0,w,c
  7767  001EB0  0E03               	movlw	3
  7768  001EB2  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7769  001EB4  B0D8               	btfsc	status,0,c
  7770  001EB6  EF5F  F00F         	goto	i2u72_41
  7771  001EBA  EF61  F00F         	goto	i2u72_40
  7772  001EBE                     i2u72_41:
  7773  001EBE  EF64  F00F         	goto	i2l2143
  7774  001EC2                     i2u72_40:
  7775  001EC2                     
  7776                           ;main.c: 1182:     {;main.c: 1184:         LATDbits.LATD1=1;
  7777  001EC2  828C               	bsf	140,1,c	;volatile
  7778                           
  7779                           ;main.c: 1186:     }
  7780  001EC4  EF70  F00F         	goto	i2l400
  7781  001EC8                     i2l2143:
  7782  001EC8  0EC0               	movlw	192
  7783  001ECA  5C11               	subwf	_VOLTAGE^0,w,c
  7784  001ECC  0E03               	movlw	3
  7785  001ECE  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7786  001ED0  A0D8               	btfss	status,0,c
  7787  001ED2  EF6D  F00F         	goto	i2u73_41
  7788  001ED6  EF6F  F00F         	goto	i2u73_40
  7789  001EDA                     i2u73_41:
  7790  001EDA  EF70  F00F         	goto	i2l400
  7791  001EDE                     i2u73_40:
  7792  001EDE                     
  7793                           ;main.c: 1188:     {;main.c: 1189:      LATDbits.LATD1=0;
  7794  001EDE  928C               	bcf	140,1,c	;volatile
  7795  001EE0                     i2l400:
  7796  001EE0  0012               	return		;funcret
  7797  001EE2                     __end_of_Low_Power_Indicator:
  7798                           	opt callstack 0
  7799  0000                     
  7800                           	psect	rparam
  7801  0000                     
  7802                           	psect	temp
  7803  000059                     btemp:
  7804                           	opt callstack 0
  7805  000059                     	ds	1
  7806  0000                     int$flags	set	btemp
  7807  0000                     wtemp8	set	btemp+1
  7808  0000                     ttemp5	set	btemp+1
  7809  0000                     ttemp6	set	btemp+4
  7810  0000                     ttemp7	set	btemp+8
  7811                           tosu	equ	0xFFF
  7812                           tosh	equ	0xFFE
  7813                           tosl	equ	0xFFD
  7814                           stkptr	equ	0xFFC
  7815                           pclatu	equ	0xFFB
  7816                           pclath	equ	0xFFA
  7817                           pcl	equ	0xFF9
  7818                           tblptru	equ	0xFF8
  7819                           tblptrh	equ	0xFF7
  7820                           tblptrl	equ	0xFF6
  7821                           tablat	equ	0xFF5
  7822                           prodh	equ	0xFF4
  7823                           prodl	equ	0xFF3
  7824                           indf0	equ	0xFEF
  7825                           postinc0	equ	0xFEE
  7826                           postdec0	equ	0xFED
  7827                           preinc0	equ	0xFEC
  7828                           plusw0	equ	0xFEB
  7829                           fsr0h	equ	0xFEA
  7830                           fsr0l	equ	0xFE9
  7831                           wreg	equ	0xFE8
  7832                           indf1	equ	0xFE7
  7833                           postinc1	equ	0xFE6
  7834                           postdec1	equ	0xFE5
  7835                           preinc1	equ	0xFE4
  7836                           plusw1	equ	0xFE3
  7837                           fsr1h	equ	0xFE2
  7838                           fsr1l	equ	0xFE1
  7839                           bsr	equ	0xFE0
  7840                           indf2	equ	0xFDF
  7841                           postinc2	equ	0xFDE
  7842                           postdec2	equ	0xFDD
  7843                           preinc2	equ	0xFDC
  7844                           plusw2	equ	0xFDB
  7845                           fsr2h	equ	0xFDA
  7846                           fsr2l	equ	0xFD9
  7847                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      88
    BANK0           160      8      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_WriteSTLED316SData
    _main->_write_i2c
    _ToggleVIB_Mode->_write_i2c
    _Homing_Again_Manual->_WriteSTLED316SData

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23110
                                              6 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1963
                                             20 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     331
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2995
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2995
                                              0 BANK0      6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1418
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                        _MotorON_PWM
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     548
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  2     2      0    5642
                                             17 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                        _MotorON_PWM
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    2979
                                             14 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     275
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2994
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                        _MotorON_PWM
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     300
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON_PWM                                          0     0      0       0
                        _Set_RG3_PWM
 ---------------------------------------------------------------------------------
 (3) _Set_RG3_PWM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                        _Clr_RG3_PWM
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3_PWM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     309
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3_PWM
     _MotorON_PWM
       _Set_RG3_PWM
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3_PWM
     _MotorON_PWM
       _Set_RG3_PWM
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
       _Clr_RG3_PWM
     _MotorON_PWM
       _Set_RG3_PWM
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
     _Get7Seg
     _STLED316s_SPI_SendData
     ___awdiv
     ___awmod
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _write_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      28       5       25.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      58       1       93.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 28 11:27:27 2022

                              _i 0015                    ??_i2c_Address 0040  
                   ___awdiv@sign 0043                    ?_InitSTLED316 0038  
                   __CFG_CP0$OFF 000000     __size_of_Low_Power_Indicator 0036  
                    i2c_Read@ack 0041                              l210 08AA  
                            l202 082E                              l211 089C  
                            l203 0820                              l206 086C  
                            l311 1FA2                              l231 0AD0  
                            l207 085E                              l304 1EFA  
                            l224 0A08                              l321 158A  
                            l241 0BF6                              l307 1F0C  
                            l421 1B6C                              l413 1AF4  
                            l510 1F58                              l326 1DC2  
                            l254 0D26                              l246 0C66  
                            l415 1B2A                              l407 1AEC  
                            l191 0748                              l352 1196  
                            l504 1FD0                              l168 0510  
                            l513 206E                              l601 1BDC  
                            l193 0762                              l418 1B42  
                            l370 1372                              l362 12DA  
                            l522 202A                              l602 1BDE  
                            l530 1EAA                              l194 07B8  
                            l178 0576                              l355 11A2  
                            l443 1A60                              l195 0778  
                            l179 057C                              l380 1E74  
                            l348 113E                              l516 205E  
                            l196 078A                              l365 130C  
                            l437 183E                              l349 114C  
                            l525 2010                              l533 1D3E  
                            l621 201E                              l630 204C  
                            l462 1CF0                              l198 07F4  
                            l391 1DDC                              l519 2066  
                            l375 1E3A                              l199 07E6  
                            l624 2036                              l448 167E  
                            l560 1FD8                              l384 1C9C  
                            l528 1EA0                              l536 1C48  
                            l633 2056                              l457 168A  
                            l385 1CA2                              l529 1EA2  
                            l394 1E00                              l627 2076  
                            l475 1772                              l467 1766  
                            l563 1FE6                              l715 147E  
                            l388 1FBA                              l557 1F32  
                            l599 1BCE                              l880 19B2  
                            l867 1902                              _GIE 007F97  
                            _PR4 000F77                              _NUM 0019  
         __size_ofi2_Write1USART 0016                     ___awmod@sign 0043  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                  ??_i2c_Restart 003F                             l3101 204E  
                           l3103 2052                             l3041 1DC4  
                           l3105 2054                             l3121 1C9E  
                           l3201 1BA0                             l3043 1DCE  
                           l3051 1F80                             l3115 1C6A  
                           l3107 1C4A                             l3211 1BAA  
                           l3203 1BA2                             l3045 1DDA  
                           l3053 1F8E                             l3117 1C7C  
                           l3109 1C60                             l3221 1BC4  
                           l3213 1BAC                             l3205 1BA4  
                           l3047 1DEA                             l3063 2044  
                           l3119 1C80                             l3223 1BC6  
                           l3215 1BAE                             l3207 1BA6  
                           l3065 2048                             l3225 1BC8  
                           l3217 1BC0                             l3209 1BA8  
                           l3161 205C                             l5001 03E0  
                           l3059 1F9A                             l3227 1BCA  
                           l3219 1BC2                             l3171 1E9A  
                           l3163 1E78                             l5011 0422  
                           l5003 03E2                             l3229 1BCC  
                           l3181 1B8C                             l3173 1B6E  
                           l3261 2018                             l3165 1E7C  
                           l5101 06B4                             l5021 0454  
                           l5013 0424                             l5005 0400  
                           l3271 1FA4                             l3263 1FBC  
                           l3191 1B96                             l3183 1B8E  
                           l3175 1B72                             l3167 1E82  
                           l3159 2058                             l5111 06EA  
                           l5103 06B6                             l5031 0494  
                           l5023 0456                             l5015 0428  
                           l5007 0402                             l4401 1790  
                           l3273 1FB0                             l3265 1FC0  
                           l3193 1B98                             l3185 1B90  
                           l3177 1B88                             l3257 2012  
                           l3169 1E8A                             l5121 0730  
                           l5113 06FC                             l5105 06D4  
                           l5033 04A0                             l5025 0472  
                           l5041 04C4                             l5017 0438  
                           l5009 0404                             l4411 17B8  
                           l4403 1798                             l3275 1FB2  
                           l3195 1B9A                             l3187 1B92  
                           l3179 1B8A                             l3259 2016  
                           l3267 1F0E                             l5211 0A12  
                           l5203 09EE                             l5131 0786  
                           l5115 070E                             l5123 0732  
                           l5107 06D6                             l5051 0546  
                           l5043 0512                             l5035 04AC  
                           l5027 0478                             l5019 0448  
                           l4413 17C0                             l4405 17A0  
                           l4421 183C                             l4501 1992  
                           l3277 1FB4                             l2901 13B8  
                           l3197 1B9C                             l3189 1B94  
                           l3269 1F2A                             l5301 0C2C  
                           l5221 0A3A                             l5213 0A16  
                           l5205 0A00                             l5141 0802  
                           l5133 0790                             l5125 0746  
                           l5117 0712                             l5109 06DA  
                           l5061 057E                             l5053 054A  
                           l5045 0530                             l5037 04B8  
                           l5029 0488                             l4415 17C8  
                           l4407 17A8                             l4431 1844  
                           l4503 19A2                             l4511 19EC  
                           l2911 13F6                             l2903 13BC  
                           l3199 1B9E                             l5231 0A7A  
                           l5223 0A4A                             l5215 0A1E  
                           l5151 0890                             l5143 0814  
                           l5135 07AA                             l5127 074A  
                           l5119 0714                             l5071 05C6  
                           l5063 059C                             l5055 054C  
                           l5047 0532                             l4601 1682  
                           l4409 17B0                             l4441 1874  
                           l4433 1852                             l4505 19AA  
                           l4521 1A3E                             l4513 19F4  
                           l2921 143E                             l2913 1404  
                           l2905 13CC                             l2761 1F34  
                           l5321 0CB0                             l5313 0C88  
                           l5305 0C34                             l5241 0AEE  
                           l5225 0A56                             l5217 0A2E  
                           l5209 0A0A                             l5161 08E8  
                           l5153 08B2                             l5145 083C  
                           l5137 07C6                             l5129 075A  
                           l5081 060A                             l5073 05D8  
                           l5065 059E                             l5057 0568  
                           l5049 0536                             l4363 1AF6  
                           l4603 1688                             l4419 17D0  
                           l4451 18A2                             l4443 1878  
                           l4435 185A                             l4531 1A56  
                           l4523 1A44                             l4515 19F6  
                           l4611 1A68                             l2923 1448  
                           l2915 140E                             l2907 13E2  
                           l2763 1F34                             l3571 1E02  
                           l5323 0CC0                             l5331 0CE4  
                           l5315 0C98                             l5307 0C68  
                           l5251 0B1A                             l5227 0A62  
                           l5235 0A86                             l5219 0A32  
                           l5171 0916                             l5163 08EC  
                           l5155 08C2                             l5147 0852  
                           l5139 07DA                             l5091 0654  
                           l5083 0626                             l5075 05EA  
                           l5067 05A2                             l5059 056A  
                           l2781 1EE2                             l4365 1B14  
                           l4357 1AF0                             l4541 1690  
                           l4461 18D6                             l4453 18B0  
                           l4445 1880                             l4437 185E  
                           l4429 1840                             l4533 1A58  
                           l4525 1A46                             l4517 1A1E  
                           l4509 19B4                             l4621 1AA2  
                           l4613 1A6E                             l2917 142C  
                           l2909 13EA                             l2925 144E  
                           l2765 1F4A                             l2861 206C  
                           l4701 1CAE                             l3581 1E1E  
                           l5341 0D58                             l5333 0D28  
                           l5325 0CCC                             l5317 0C9C  
                           l5309 0C82                             l5261 0B88  
                           l5253 0B1C                             l5245 0AF6  
                           l5237 0AD2                             l5229 0A6E  
                           l5181 0960                             l5173 0926  
                           l5157 08D0                             l5165 08F0  
                           l5149 087A                             l5093 0660  
                           l5085 062C                             l5077 05FC  
                           l5069 05B4                             l2783 1EE6  
                           l4391 1B5C                             l4375 1B30  
                           l4367 1B24                             l4551 16C4  
                           l4543 1696                             l2767 1FD4  
                           l2775 1E44                             l4463 18DC  
                           l4455 18B6                             l4447 1892  
                           l4439 186C                             l4535 1A5E  
                           l4527 1A4C                             l4519 1A2E  
                           l4631 1ACA                             l4623 1AA4  
                           l4615 1A70                             l2927 145E  
                           l2919 143C                             l2871 2000  
                           l2863 2060                             l4711 1CE4  
                           l4703 1CB0                             l5351 0D84  
                           l5343 0D5C                             l5335 0D42  
                           l5327 0CD8                             l5319 0CA4  
                           l5271 0B9E                             l5263 0B8E  
                           l5255 0B36                             l5247 0B06  
                           l5239 0AEC                             l5191 09A0  
                           l5183 0970                             l5175 092E  
                           l5159 08E4                             l5087 0638  
                           l5079 0608                             l2785 1EF4  
                           l2881 2030                             l4385 1B48  
                           l4377 1B32                             l4369 1B2C  
                           l4553 16D4                             l4545 1698  
                           l2777 1E54                             l2769 1E3C  
                           l4393 1774                             l4457 18CC  
                           l4449 189A                             l4465 18E2  
                           l4481 1922                             l4473 1904  
                           l4529 1A54                             l4801 1038  
                           l4721 0E32                             l4633 1AEA  
                           l4625 1ABE                             l4617 1A98  
                           l4609 1A64                             l4641 1480  
                           l2929 146E                             l2873 2004  
                           l2865 2064                             l4537 1CF2  
                           l4713 1CE6                             l4705 1CB8  
                           l3577 1E0A                             l5345 0D60  
                           l5337 0D44                             l5281 0BDC  
                           l5273 0BB8                             l5265 0B92  
                           l5257 0B50                             l5249 0B16  
                           l5193 09A4                             l5185 0978  
                           l5177 0946                             l5169 0904  
                           l5361 0DE6                             l5089 0648  
                           l5097 066C                             l2883 2034  
                           l4387 1B4A                             l4379 1B44  
                           l4555 16E4                             l4547 16A4  
                           l4563 1714                             l4539 168E  
                           l2779 1E58                             l4395 1778  
                           l4467 18F2                             l4459 18D4  
                           l4491 195A                             l4483 1930  
                           l4475 1908                             l4811 1078  
                           l4803 103A                             l4723 0E44  
                           l4731 0E6E                             l4627 1AC0  
                           l4619 1A9A                             l4651 14BA  
                           l4643 1482                             l2891 1378  
                           l2875 2008                             l2859 2068  
                           l2867 2022                             l4715 1CEE  
                           l4707 1CC8                             l3579 1E1A  
                           l4635 1BE0                             l5347 0D66  
                           l5339 0D48                             l5291 0C00  
                           l5283 0BEE                             l5275 0BBA  
                           l5267 0B96                             l5259 0B6C  
                           l5195 09B4                             l5187 0980  
                           l5179 094E                             l5363 0DEE  
                           l5099 06B0                             l2885 2070  
                           l4389 1B5A                             l4565 176A  
                           l4557 16F4                             l4549 16B4  
                           l4581 15A4                             l4573 158E  
                           l4901 12DC                             l4397 1780  
                           l4469 18FA                             l4493 1968  
                           l4485 1938                             l4477 1916  
                           l4821 10E8                             l4813 1088  
                           l4805 104C                             l4741 0EB4  
                           l4733 0E7E                             l4725 0E46  
                           l4717 0E1E                             l4629 1AC8  
                           l4661 14FC                             l4653 14D0  
                           l4645 1486                             l2893 1386  
                           l2877 200C                             l2869 2026  
                           l4709 1CD8                             l4637 1C40  
                           l5349 0D68                             l5293 0C10  
                           l5277 0BC2                             l5269 0B9A  
                           l5197 09CA                             l5189 0990  
                           l5357 0D8A                             l2887 2074  
                           l2879 202C                             l4567 1770  
                           l4559 1704                             l4591 15F4  
                           l4583 15B4                             l4575 1590  
                           l4911 1320                             l4903 12E8  
                           l4399 1788                             l4495 197E  
                           l4487 194A                             l4479 191E  
                           l4831 1140                             l4823 1100  
                           l4815 10A0                             l4807 105C  
                           l4751 0EE2                             l4735 0E90  
                           l4743 0ECA                             l4727 0E52  
                           l4719 0E22                             l4671 1538  
                           l4663 150C                             l4655 14D6  
                           l4647 149E                             l2895 1396  
                           l5295 0C14                             l5287 0BF8  
                           l5359 0DD6                             l5199 09D4  
                           l4593 1604                             l4585 15C4  
                           l4577 1596                             l4921 1350  
                           l4913 1330                             l4841 116E  
                           l4833 114E                             l4497 1986  
                           l4489 1952                             l4825 1118  
                           l4817 10B8                             l4809 1072  
                           l4761 0F30                             l4753 0EE6  
                           l4745 0ECE                             l4737 0E92  
                           l4729 0E54                             l4681 1580  
                           l4673 154A                             l4665 1518  
                           l4657 14DA                             l4649 14AE  
                           l2897 139A                             l2889 1374  
                           l5297 0C1C                             l4595 1614  
                           l4587 15D4                             l4579 1598  
                           l4915 1340                             l4923 1366  
                           l4851 11A4                             l4907 12FC  
                           l4843 117A                             l4835 1156  
                           l4499 198C                             l4819 10D0  
                           l4771 0F6C                             l4763 0F36  
                           l4755 0EFE                             l4747 0ED2  
                           l4739 0EA4                             l4683 1588  
                           l4675 155A                             l4667 152E  
                           l4659 14EC                             l2899 13A8  
                           l4691 1DA2                             l5299 0C24  
                           l4931 02A4                             l4589 15E4  
                           l4925 136E                             l4917 1342  
                           l4909 130E                             l4861 11D4  
                           l4853 11A8                             l4845 117C  
                           l4837 115C                             l4781 0FAA  
                           l4773 0F78                             l4765 0F3A  
                           l4757 0F0E                             l4749 0ED6  
                           l4829 112C                             l4677 1566  
                           l4669 1534                             l4693 1DA4  
                           l4685 1D86                             l4941 02BA  
                           l4933 02AA                             l4599 1624  
                           l4919 134E                             l4871 1210  
                           l4863 11E4                             l4855 11AC  
                           l4839 116C                             l4791 0FEE  
                           l4783 0FBA                             l4775 0F8E  
                           l4767 0F4C                             l4759 0F1A  
                           l4679 156A                             l4695 1DC0  
                           l4687 1D96                             l4951 02D2  
                           l4943 02BC                             l4935 02AE  
                           l4927 029E                             l4881 1264  
                           l4873 1222                             l4865 11F0  
                           l4857 11B8                             l4849 119C  
                           l4793 0FFA                             l4785 0FC6  
                           l4777 0F94                             l4769 0F5C  
                           l4689 1D9E                             l4697 1CA6  
                           l5681 0A9A                             l4961 02DC  
                           l4953 02D4                             l4945 02BE  
                           l4937 02B2                             l4929 02A0  
                           l4891 129C                             l4883 126A  
                           l4875 1232                             l4867 1206  
                           l4859 11BC                             l5691 17E6  
                           l4795 0FFC                             l4787 0FDA  
                           l4779 0F98                             l4699 1CA8  
                           l5683 0C48                             l4971 032A  
                           l4963 02EC                             l4955 02D6  
                           l4947 02CE                             l4939 02B6  
                           l5693 1638                             l4893 12B0  
                           l4885 126E                             l4877 1242  
                           l4869 120C                             l4789 0FEC  
                           l4797 1016                             l5685 0CF8  
                           l5677 04DA                             l4981 0346  
                           l4973 032C                             l4965 0306  
                           l4957 02D8                             l4949 02D0  
                           l5695 1728                             l4895 12B2  
                           l4887 1280                             l4879 124E  
                           l4799 1026                             l5687 0DA0  
                           l5679 0682                             l4991 0386  
                           l4983 0362                             l4975 0330  
                           l4967 030A                             l4959 02DA  
                           l4897 12BE                             l4889 1290  
                           l5689 0E04                             l4993 03A4  
                           l4977 0340                             l4985 0364  
                           l4969 030C                             l4899 12C0  
                           l4995 03AC                             l4987 037C  
                           l4979 0344                             l4997 03C2  
                           l4989 0384                             l4999 03D8  
                           u3000 0E32                             u1400 1F58  
                           u3001 0E2E                             u1401 1F54  
                           u1410 1FE6                             u3010 0E44  
                           u1411 1FE2                             u3011 0E40  
                           u1420 1E74                             u3100 0FEC  
                           u3020 0E7E                             u1500 13A8  
                           u1421 1E70                             u3101 0FE8  
                           u3021 0E7A                             u1501 13A4  
                           u1430 1F0C                             u3110 1026  
                           u3030 0E90                             u1510 13E2  
                           u1431 1F08                             u3111 1022  
                           u3031 0E8C                             u1511 13DE  
                           u3200 1280                             u3120 1038  
                           u3040 0EA4                             u1520 1404  
                           u2080 1E3A                             u3201 127C  
                           u3121 1034                             u3041 0EA0  
                           u1521 1400                             u2081 1E36  
                           u3210 12B0                             u3130 104C  
                           u3050 0F30                             u1530 142C  
                           u3211 12AC                             u3131 1048  
                           u3051 0F2C                             u1531 1428  
                           u1700 1F8E                             u3220 12F8  
                           u3140 1128                             u3060 0F4C  
                           u1540 145E                             u3300 0438  
                           u1701 1F8A                             u3221 12F4  
                           u3141 1124                             u3061 0F48  
                           u1541 145A                             u3301 0434  
                           u1710 1C9C                             u3230 130C  
                           u3150 113E                             u3070 0F8E  
                           u1390 1F4A                             u3310 0448  
                           u1711 1C98                             u3231 1308  
                           u3151 113A                             u3071 0F8A  
                           u1391 1F46                             u3311 0444  
                           u3240 1320                             u3160 116C  
                           u3080 0FAA                             u1720 1E9A  
                           u3400 070E                             u3320 0546  
                           u3241 131C                             u3161 1168  
                           u3081 0FA6                             u1721 1E96  
                           u3401 070A                             u3321 0542  
                           u3250 1330                             u3170 1206  
                           u3090 0FDA                             u1490 1386  
                           u1730 1BDC                             u3410 0778  
                           u3330 05B4                             u3251 132C  
                           u3171 1202                             u3091 0FD6  
                           u1491 1382                             u1731 1BD8  
                           u3411 0774                             u3331 05B0  
                           u3260 1340                             u3180 1222  
                           u3500 083C                             u3420 0786  
                           u3340 05C6                             u3261 133C  
                           u3181 121E                             u3501 0838  
                           u3421 0782                             u3341 05C2  
                           u3190 1264                             u3510 0852  
                           u3430 07B8                             u3350 05D8  
                           u3270 0340                             u3191 1260  
                           u3511 084E                             u3431 07B4  
                           u3351 05D4                             u3271 033C  
                           u2800 186C                             u3600 0960  
                           u3520 086C                             u3440 07C6  
                           u3360 05EA                             u3280 03C2  
                           u2801 1868                             u3601 095C  
                           u3521 0868                             u3441 07C2  
                           u3361 05E6                             u3281 03BE  
                           u1690 1DEA                             u2810 1892  
                           u3610 0970                             u3530 087A  
                           u3450 07DA                             u3370 05FC  
                           u3290 03D8                             _PEN2 007B5A  
                           u1691 1DE6                             u2811 188E  
                           u3611 096C                             u3531 0876  
                           u3451 07D6                             u3371 05F8  
                           u3291 03D4                             u2820 18B0  
                           u2900 19A2                             u3700 0D58  
                           u3620 09B4                             u3540 0890  
                           u3460 07F4                             u3380 06EA  
                           u2821 18AC                             u2901 199E  
                           u3701 0D54                             u3621 09B0  
                           u3541 088C                             u3461 07F0  
                           u3381 06E6                             u2750 1B24  
                           u2830 18CC                             u2910 1A2E  
                           u3630 09EA                             u3550 08AA  
                           u3470 0802                             u3390 06FC  
                           u2751 1B20                             u2831 18C8  
                           u2911 1A2A                             u3631 09E6  
                           u3551 08A6                             u3471 07FE  
                           u3391 06F8                             u2760 1B42  
                           u2744 1B08                             u2840 18F2  
                           u2920 1A3E                             u3640 0A2E  
                           u3560 08D0                             u3480 0814  
                           u2761 1B3E                             u2745 1B04  
                           u2841 18EE                             u2921 1A3A  
                           u3641 0A2A                             u3561 08CC  
                           u3481 0810                             u2770 1B5A  
                           u2850 1916                             u3650 0B06  
                           u3570 0900                             u3490 082E  
                           u2771 1B56                             u2851 1912  
                           u3651 0B02                             u3571 08FC  
                           u3491 082A                             u2780 1B6C  
                           u2860 1930                             u2940 14D0  
                           u3660 0B16                             u3580 0916  
                           u2781 1B68                             u2861 192C  
                           u2941 14CC                             u3661 0B12  
                           u3581 0912                             u3717 02F8  
                           u2790 1852                             u2870 194A  
                           u2950 14EC                             u3670 0BD8  
                           u3590 0926                             u2791 184E  
                           u2871 1946                             u3807 0F52  
                           u2935 1A86                             u2951 14E8  
                           u3671 0BD4                             u3591 0922  
                           u3727 079C                             u2880 1968  
                           u2960 152E                             u3680 0C10  
                           u2881 1964                             u3817 1006  
                           u2961 152A                             u3681 0C0C  
                           u3737 0BAA                             u2890 197E  
                           u2970 154A                             u3690 0C98  
                           u3907 11C6                             u2891 197A  
                           u3827 1066                             u2971 1546  
                           u3747 1490                             u3691 0C94  
                           u2980 1D96                             u3917 1228  
                           u3837 1092                             u3757 14F2  
                           u2981 1D92                             u2990 1CC8  
                           u3927 12CA                             u3847 10AA  
                           u3767 1574                             u2991 1CC4  
                           u3937 135A                             u3857 10C2  
                           u3777 0E5E                             _SEN2 007B58  
                           u3947 1EEC                             u3867 10DA  
                           u3787 0EBE                             u3877 10F2  
                           u3797 0EF0                             u3887 110A  
                           u3897 1186                             _TMR1 000FCE  
                           _Busy 0033                             _Stop 0035  
                           _data 0031   __end_of_AD_capture_BattVoltage 1E02  
                           _main 029E                             _init 1B6E  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
             _MotorPosition_Init 1480                             btemp 0059  
                           start 029A                  __end_of_Get7Seg 1840  
                  __CFG_IESO$OFF 000000      __end_of_Homing_Again_Manual 114E  
                   ___param_bank 000000                     high_isr@Temp 003B  
            ?_MotorPosition_Init 0038                  __end_of_Read_IR 1FA4  
                 ??_InitSTLED316 0044                    __CFG_PLLDIV$1 000000  
                   _BAUDCON1bits 000F7E                  __end_of___aldiv 1480  
                          ?_main 0038                            ?_init 0038  
                __end_of___awdiv 1904                            _ADRES 000FC3  
                __end_of___awmod 19B4                  ___awdiv@divisor 0040  
                          _T1CON 000FCD                            _T4CON 000F76  
                 __CFG_DEBUG$OFF 000000                            _RCEN2 007B5B  
                          i2l301 028E                            i2l400 1EE0  
                          i2l271 01C2                            i2l280 012E  
                          i2l290 018C                            i2l282 00FE  
                          i2l284 0128                            i2l287 014C  
                          i2l560 1FEE                            i2l563 1FFC  
                          i2l566 1F78                            i2l568 1F7E  
                ___awdiv@counter 0042                            _RSEN2 007B59  
                          _ETemp 0023                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TRISF 000F97                            _TRISG 000F98  
            __end_of_i2c_Address 2012                   __CFG_FCMEN$OFF 000000  
           ??_MotorPosition_Init 0047                            _flush 1E02  
                    _Clr_RG3_PWM 2070                       _Read1USART 1F5A  
               _TMR1IF_triggered 002B                            tablat 000FF5  
       ??_STLED316s_SPI_SendData 003E              __end_of_i2c_Restart 2060  
                          ttemp5 005A                            ttemp6 005D  
                          ttemp7 0061                            status 000FD8  
                          wtemp8 005A                    i2_Write1USART 1FE8  
                  ??_Set_RG3_PWM 003E            _WriteSTLED316SVibMode 1CA4  
                __initialization 1D40                       _InitTimer1 1FA4  
                   __end_of_main 0E1E                     __end_of_init 1BE0  
               __end_of_i2c_Init 1FD2                 __end_of_i2c_Read 1EAC  
               __end_of_i2c_Wait 1F5A                 __end_of_i2c_Stop 2068  
      __size_of_readWeighingData 005A                           ??_main 0086  
                         ??_init 003E                    __activetblptr 000002  
                         _ACKEN2 007B5C                           _ACKDT2 007B5D  
                         ?_flush 0038                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR4L 000F74  
               ___awdiv@dividend 003E               __size_of_i2c_Start 0008  
                      ??_Get7Seg 0040                           i2l2131 1F5A  
                         i2l2141 1EC2                           i2l2133 1F68  
                         i2l2143 1EC8                           i2l2135 1F7C  
                         i2l2145 1EDE               __size_of_i2c_Write 000C  
                         i2l2139 1EAC                           i2l4101 013A  
                         i2l4103 013C                           i2l4121 018E  
                         i2l4105 014E                           i2l4131 01D0  
                         i2l4123 01A0                           i2l4115 0174  
                         i2l4107 0162                           i2l4051 0012  
                         i2l4141 0228                           i2l4125 01B2  
                         i2l4117 017A                           i2l4109 016E  
                         i2l4133 01D6                           i2l4061 0058  
                         i2l4053 0020                   __CFG_WDTEN$OFF 000000  
                         i2l4143 0246                           i2l4135 01E6  
                         i2l4151 0272                           i2l4119 017C  
                         i2l4127 01BA                           i2l4071 009C  
                         i2l4063 0064                           i2l4055 0026  
                         i2l4153 0280                           i2l4145 025A  
                         i2l4137 0204                           i2l4081 0100  
                         i2l4073 00B2                           i2l4065 0074  
                         i2l4057 0038                           i2l4155 0288  
                         i2l4147 026A                           i2l4139 0218  
                         i2l4091 0118                           i2l4075 00C4  
                         i2l4059 0048                           i2l4067 007C  
                         i2l4149 026E                           i2l4093 0130  
                         i2l4077 00DC                           i2l4069 008C  
                         i2l4087 0104                           i2l4079 00EC  
                         i2l4089 0116                           i2l4099 0134  
                         i2l3583 1FEA                           _RCREG1 000FAF  
                         _SPBRG1 000FB0                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                           _TRISD5 007CAD  
                         _TRISD6 007CAE                   ?i2_Write1USART 0038  
                         _TXREG1 000FAE                    ??_MotorON_PWM 003E  
                     _MotorBREAK 204E                        ??_Read_IR 0040  
                read_i2c@address 0080                           _OpMode 0030  
                 __CFG_XINST$OFF 000000                 __end_of_high_isr 029A  
                      ??___aldiv 0046                        ??___awdiv 0042  
                 __CFG_STVREN$ON 000000                        ??___awmod 0042  
                 _PWM_Duty_Cycle 002C                 __end_of_flushOut 1E76  
            __end_of_Set_RG3_PWM 2038                 __end_of_read_i2c 1C4A  
                    _i2c_Address 1FFE                           clear_0 1D66  
                         clear_1 1D72                 ___awdiv@quotient 0044  
                ___awmod@divisor 0040                  ___awmod@counter 0042  
               Read1USART@result 0038       __end_of_WriteSTLED316SData 1A62  
     __end_of_WriteSTLED316SMode 168C                           flush@i 003E  
                  i2c_Write@data 003F                     __pdataCOMRAM 004E  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      _i2c_Restart 2058  
                    ?_Read1USART 0038             __end_of_InitSTLED316 1AEE  
                     __accesstop 0060          __end_of__initialization 1D78  
__size_of_STLED316s_SPI_SendData 0080              _Low_Power_Indicator 1EAC  
              _WriteSTLED316SErr 168C                    ___rparam_used 000001  
         ?_WriteSTLED316SVibMode 0038               ?_WriteSTLED316SErr 0038  
                 __pcstackCOMRAM 0038                      ?_InitTimer1 0038  
            __end_of_MotorON_PWM 204E                    __end_of_flush 1E3C  
             __size_of_delay_1ms 002C                __end_of_i2c_Start 2070  
            ??_WriteSTLED316SErr 0044                __end_of_i2c_Write 202C  
           ?_Low_Power_Indicator 0038                          ??_flush 003E  
                      ?_i2c_Init 0038                        ?_i2c_Read 003F  
                     __pbssBANK0 0060                        ?_i2c_Wait 0038  
                ??i2_Write1USART 0038                        ?_i2c_Stop 0038  
             __size_of_initUSART 0026        __end_of_WriteSTLED316SErr 1774  
                  ??_Write1USART 003E               __size_of_initMotor 000E  
                    ?_MotorBREAK 0038                      _Set_RG3_PWM 202C  
        __size_of_ToggleVIB_Mode 003E                          _CCP4CON 000F73  
            __size_of_Read1USART 0026            ??_Low_Power_Indicator 0038  
         _STLED316s_SPI_SendData 1AEE                 _readWeighingData 1C4A  
             i2c_Address@address 0040                          i2u71_40 1F68  
                        i2u71_41 1F64                  __CFG_WDTPS$2048 000000  
                        i2u72_40 1EC2                          i2u72_41 1EBE  
                        i2u73_40 1EDE                          i2u73_41 1EDA  
                        _SPBRGH1 000F7F                          _SSP2ADD 000F6E  
                        _SSP2BUF 000F6F                          _NUM_REC 0017  
            __size_of_InitTimer1 0018                          _VOLTAGE 0011  
                   ?_Clr_RG3_PWM 0038                        ?_high_isr 0038  
                     ??_i2c_Init 003E                       ??_i2c_Read 0041  
                        _PWM_reg 0058                       ??_i2c_Wait 003E  
                        _Get7Seg 1774      WriteSTLED316SVibMode@v_mode 0044  
                     ??_i2c_Stop 003F                __end_of_delay_1ms 1F0E  
              i2Write1USART@data 0038                        ?_flushOut 0038  
                      ?_read_i2c 0080                      _Serial_Flag 0037  
             __size_of_write_i2c 004E                      _MotorON_PWM 2044  
                        _Read_IR 1F80            WriteSTLED316SMode@msg 0046  
                        __Hparam 0000                          __Lparam 0000  
            __end_of_Write1USART 1FE8       WriteSTLED316SData@NUM_DIG0 0080  
     WriteSTLED316SData@NUM_DIG1 0082                          ___aldiv 1374  
                    _Motor_Speed 0021                          ___awdiv 1840  
                        ___awmod 1904                     Get7Seg@Digit 003E  
   __size_of_Homing_Again_Manual 0330                          __pcinit 1D40  
                        __ramtop 1000                __end_of_initUSART 1F34  
                        __ptext0 029E                          __ptext1 1BE0  
                        __ptext2 2058                          __ptext3 1E76  
                        __ptext4 1F0E                          __ptext5 2012  
                        __ptext6 1B6E                          __ptext7 1FBC  
                        __ptext8 1E02                          __ptext9 1CA4  
              __end_of_initMotor 2020                        _T3CONbits 000F79  
            __size_of_MotorBREAK 000A                 ___awmod@dividend 003E  
               ___aldiv@dividend 003E                        _T4CONbits 000F76  
                  delay_1ms@time 003E                __CFG_MSSPMSK$MSK5 000000  
          __size_of_InitSTLED316 008C      __size_of_MotorPosition_Init 010C  
                     _pause_Time 002F                        _EAdd_High 0027  
                     ??_high_isr 0039             end_of_initialization 1D78  
     __size_of_WriteSTLED316SErr 00E8             i2c_Address@l_address 0041  
                     ??_flushOut 003E                       ??_read_i2c 004C  
                  __Lmediumconst 0000          WriteSTLED316SData@data3 0084  
        WriteSTLED316SData@data4 0085                 ___aldiv@quotient 0048  
                        postdec1 000FE5                          postinc0 000FEE  
                   ?_i2c_Address 003F                     _InitSTLED316 1A62  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
              __end_of_write_i2c 1D40                 __CFG_CPUDIV$OSC1 000000  
                      _TRISCbits 000F94                     ?_i2c_Restart 0038  
       ??_AD_capture_BattVoltage 0041                     ??_Read1USART 0038  
             _WriteSTLED316SData 19B4          ??_WriteSTLED316SVibMode 0044  
             _WriteSTLED316SMode 158C                      _Write1USART 1FD2  
            ?_WriteSTLED316SData 0046              ?_WriteSTLED316SMode 0038  
                   ??_InitTimer1 003E                   _ToggleVIB_Mode 1D86  
                      _Device_ID 001D                      _Vmotor_Time 0056  
                  __pidataCOMRAM 2038               __end_of_Read1USART 1F80  
                  _Serial_Buffer 0001                        _i2c_Start 2068  
                      _i2c_Write 2020             ??_WriteSTLED316SData 0049  
            start_initialization 1D40             ??_WriteSTLED316SMode 0044  
             __end_of_InitTimer1 1FBC             __size_of_Clr_RG3_PWM 0008  
                _LowPowerCounter 004E         __end_of_readWeighingData 1CA4  
              __size_of_i2c_Init 0016                __size_of_i2c_Read 0036  
              __size_of_i2c_Wait 0026                     ??_MotorBREAK 003E  
              __size_of_i2c_Stop 0008           __end_of_ToggleVIB_Mode 1DC4  
                   ?_Set_RG3_PWM 0038          ?_STLED316s_SPI_SendData 0038  
                     ?_i2c_Start 0038                       ?_i2c_Write 0038  
                    __pbssCOMRAM 0001               __end_of_MotorBREAK 2058  
                  __pcstackBANK0 0080  __size_of_AD_capture_BattVoltage 003E  
            __CFG_CCP2MX$DEFAULT 000000                         ?_Get7Seg 003E  
            _Homing_Again_Manual 0E1E                __size_of_high_isr 0292  
          __end_ofi2_Write1USART 1FFE                     ?_MotorON_PWM 0038  
                       ?_Read_IR 003E                __size_of_flushOut 003A  
                      _delay_1ms 1EE2                __size_of_read_i2c 006A  
              _Homing_Again_Auto 114E                  ?_ToggleVIB_Mode 0038  
 __end_of_STLED316s_SPI_SendData 1B6E      __end_of_Low_Power_Indicator 1EE2  
             ?_Homing_Again_Auto 0038                        __pintcode 0008  
                       ?___aldiv 003E                         ?___awdiv 003E  
                       ?___awmod 003E             ?_Homing_Again_Manual 0038  
                   _errorcounter 0052              ??_Homing_Again_Auto 0047  
           __size_of_i2c_Address 0014             WriteSTLED316SErr@msg 0046  
                      _initUSART 1F0E                        _initMotor 2012  
                    Get7Seg@Data 0042                   __size_of_flush 003A  
                Write1USART@data 003E             __size_of_i2c_Restart 0008  
                ___aldiv@divisor 0042                  ___aldiv@counter 0046  
      __end_of_Homing_Again_Auto 1374                         _LATAbits 000F89  
                       _EAdd_Low 0025                         _LATCbits 000F8B  
                       _LATDbits 000F8C                         _LATGbits 000F8F  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                     ?_delay_1ms 003E                readWeighingData@i 0040  
                       i2u209_40 1FFC                         i2u209_41 1FF8  
                       i2u260_40 00C4                         i2u260_41 00C0  
                       i2u261_40 00DC                         i2u261_41 00D8  
                       i2u270_40 01E6                         i2u262_40 00EC  
                       i2u254_40 0020                         i2u270_41 01E2  
                       i2u262_41 00E8                         i2u254_41 001C  
                       i2u271_40 0204                         i2u263_40 00FE  
                       i2u255_40 0038                         i2u271_41 0200  
                       i2u263_41 00FA                         i2u255_41 0034  
                       i2u272_40 0246                         i2u264_40 0128  
                       i2u256_40 0048                         i2u272_41 0242  
                       i2u264_41 0124                         i2u256_41 0044  
                       i2u273_40 0280                         i2u265_40 014C  
                       i2u257_40 0058                         i2u273_41 027C  
                       i2u265_41 0148                         i2u257_41 0054  
                       _PIR1bits 000F9E                         i2u266_40 018C  
                       i2u258_40 008C                         i2u266_41 0188  
                       i2u258_41 0088                         i2u267_40 01A0  
                       i2u259_40 00B2                         i2u267_41 019C  
                       i2u259_41 00AE                         i2u268_40 01B2  
                       i2u268_41 01AE                         i2u269_40 01D0  
                       i2u269_41 01CC                         _RCONbits 000FD0  
         _AD_capture_BattVoltage 1DC4                         _SSP2CON1 000F6C  
                       _SSP2CON2 000F6B                         _SSP2STAT 000F6D  
          ??_Homing_Again_Manual 0049                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                        high_isr@c 003C  
                      high_isr@i 003D                      ??_i2c_Start 003F  
                    ??_i2c_Write 003F       __end_of_MotorPosition_Init 158C  
                     ?_initUSART 0038            _delay_motor_stop_time 002D  
                     ?_initMotor 0038                     _Serial_GData 0036  
                      _write_i2c 1CF2                        copy_data0 1D54  
         InitSTLED316@Brightness 0046                     _Serial_Count 0029  
                       _i2c_Init 1FBC                         _i2c_Read 1E76  
                       _i2c_Wait 1F34                         _i2c_Stop 2060  
               __size_of_Get7Seg 00CC                     ?_Write1USART 0038  
 __size_of_WriteSTLED316SVibMode 004E    __end_of_WriteSTLED316SVibMode 1CF2  
                      flushOut@i 003E                       _ANCON0bits 000FC1  
                       __Hrparam 0000                 __size_of_Read_IR 0024  
                       __Lrparam 0000             __size_of_Set_RG3_PWM 000C  
               __size_of___aldiv 010C                 __size_of___awdiv 00C4  
               __size_of___awmod 00B0                   _vibration_mode 0032  
                       __ptext10 1D86                         __ptext11 1CF2  
                       __ptext20 1A62                         __ptext12 2020  
                       __ptext21 0E1E                         __ptext13 2060  
                       __ptext30 158C                         __ptext22 19B4  
                       __ptext14 2068                         __ptext31 168C  
                       __ptext23 1904                         __ptext15 1FFE  
                       __ptext32 1AEE                         __ptext24 1840  
                       __ptext16 1F34                         __ptext41 1FE8  
                       __ptext33 1F80                         __ptext25 1774  
                       __ptext17 1374                         __ptext42 1F5A  
                       __ptext34 2044                         __ptext26 114E  
                       __ptext18 1480                         __ptext43 1EAC  
                       __ptext35 202C                         __ptext27 1C4A  
                       __ptext19 1FA4                         __ptext36 204E  
                       __ptext28 1E3C                         __ptext37 2070  
                       __ptext29 1FD2                         __ptext38 1DC4  
                       __ptext39 1EE2                       ?_write_i2c 0080  
               write_i2c@address 0080                         _high_isr 0008  
              read_i2c@read_byte 004C                         _flushOut 1E3C  
                       _read_i2c 1BE0                    __size_of_main 0B80  
     __size_of_Homing_Again_Auto 0226                    __size_of_init 0072  
              ?_readWeighingData 0038                      ??_delay_1ms 0040  
             ??_readWeighingData 0040                         _vib_Time 002E  
           __size_of_MotorON_PWM 000A            _Motor_Stop_Delay_Time 001F  
                       int$flags 0059                _Serial_Buffer_Out 0060  
     STLED316s_SPI_SendData@Data 0040                       _INTCONbits 000FF2  
                    ??_initUSART 003E      __size_of_WriteSTLED316SData 00AE  
     STLED316s_SPI_SendData@temp 0041      __size_of_WriteSTLED316SMode 0100  
                    ??_initMotor 003E                    ??_Clr_RG3_PWM 003E  
           __CFG_FOSC$INTOSCPLLO 000000                         intlevel2 0000  
                   _motor_status 0034                 ??_ToggleVIB_Mode 004C  
                i2c_Address@mode 003F                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3         WriteSTLED316SData@v_mode 0048  
       WriteSTLED316SData@number 0046                       _IR_SENSORF 0013  
               _Motor_Pause_Time 001B               _Serial_Temp_Buffer 0070  
        STLED316s_SPI_SendData@i 0042          STLED316s_SPI_SendData@t 0043  
                   ___aldiv@sign 0047                       _WDTCONbits 000FC0  
                    ??_write_i2c 004C              i2c_Read@i2cReadData 0042  
                  write_i2c@data 0084              __end_of_Clr_RG3_PWM 2078  
        ?_AD_capture_BattVoltage 0038             __size_of_Write1USART 0016  
