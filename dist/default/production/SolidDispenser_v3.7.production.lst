

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 17 09:48:52 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Version 2.40
    66                           ; Generated 17/11/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F65J50 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataCOMRAM
   102   0028B4                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for _errorcounter
   106   0028B4  001E               	dw	30
   107   0028B6  0000               	dw	0
   108                           
   109                           ;initializer for _Vmotor_Time
   110   0028B8  07D0               	dw	2000
   111                           
   112                           ;initializer for _PWM_reg
   113   0028BA  3F                 	db	63
   114                           
   115                           	psect	idataBANK0
   116   0028BB                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _LowPowerCounter
   120   0028BB  0014               	dw	20
   121   0028BD  0000               	dw	0
   122   000000                     _ADCON1bits	set	4033
   123   000000                     _RCREG1	set	4015
   124   000000                     _TXREG1	set	4014
   125   000000                     _SPBRGH1	set	3967
   126   000000                     _SPBRG1	set	4016
   127   000000                     _TXSTA1bits	set	4013
   128   000000                     _SSP2STAT	set	3949
   129   000000                     _SSP2ADD	set	3950
   130   000000                     _ADRESL	set	4035
   131   000000                     _ADRESH	set	4036
   132   000000                     _ADCON0bits	set	4034
   133   000000                     _ADRES	set	4035
   134   000000                     _T4CONbits	set	3958
   135   000000                     _ANCON0bits	set	4033
   136   000000                     _TRISD	set	3989
   137   000000                     _TRISC	set	3988
   138   000000                     _TRISB	set	3987
   139   000000                     _PIE1bits	set	3997
   140   000000                     _INTCONbits	set	4082
   141   000000                     _ACKEN2	set	31580
   142   000000                     _ACKDT2	set	31581
   143   000000                     _RCEN2	set	31579
   144   000000                     _PEN2	set	31578
   145   000000                     _RSEN2	set	31577
   146   000000                     _SEN2	set	31576
   147   000000                     _TRISD6	set	31918
   148   000000                     _TMR1IF	set	31984
   149   000000                     _SSP2CON2	set	3947
   150   000000                     _SSP2CON1	set	3948
   151   000000                     _PORTAbits	set	3968
   152   000000                     _PORTBbits	set	3969
   153   000000                     _LATAbits	set	3977
   154   000000                     _LATCbits	set	3979
   155   000000                     _TRISBbits	set	3987
   156   000000                     _TRISCbits	set	3988
   157   000000                     _CCP1CONbits	set	4027
   158   000000                     _WDTCONbits	set	4032
   159   000000                     _T2CONbits	set	4042
   160   000000                     _OSCCONbits	set	4051
   161   000000                     _CCPR1L	set	4028
   162   000000                     _GIE	set	32663
   163   000000                     _INTCON3bits	set	4080
   164   000000                     _TRISG	set	3992
   165   000000                     _TRISF	set	3991
   166   000000                     _TRISE	set	3990
   167   000000                     _PIR1bits	set	3998
   168   000000                     _IPR1bits	set	3999
   169   000000                     _TRISD5	set	31917
   170   000000                     _TMR1IE	set	31976
   171   000000                     _TMR1	set	4046
   172   000000                     _T1CON	set	4045
   173   000000                     _RCONbits	set	4048
   174   000000                     _PR2	set	4043
   175   000000                     _LATGbits	set	3983
   176   000000                     _TRISA	set	3986
   177   000000                     _LATDbits	set	3980
   178   000000                     _RCSTA1bits	set	4012
   179   000000                     _CCP4CON	set	3955
   180   000000                     _T4CON	set	3958
   181   000000                     _PR4	set	3959
   182   000000                     _BAUDCON1bits	set	3966
   183   000000                     _SSP2BUF	set	3951
   184   000000                     _T3CONbits	set	3961
   185                           
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189   00249A                     __pcinit:
   190                           	callstack 0
   191   00249A                     start_initialization:
   192                           	callstack 0
   193   00249A                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Initialize objects allocated to BANK0 (4 bytes)
   197                           ; load TBLPTR registers with __pidataBANK0
   198   00249A  0EBB               	movlw	low __pidataBANK0
   199   00249C  6EF6               	movwf	tblptrl,c
   200   00249E  0E28               	movlw	high __pidataBANK0
   201   0024A0  6EF7               	movwf	tblptrh,c
   202   0024A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   203   0024A4  6EF8               	movwf	tblptru,c
   204   0024A6  EE00  F0A2         	lfsr	0,__pdataBANK0
   205   0024AA  EE10 F004          	lfsr	1,4
   206   0024AE                     copy_data0:
   207   0024AE  0009               	tblrd		*+
   208   0024B0  CFF5 FFEE          	movff	tablat,postinc0
   209   0024B4  50E5               	movf	postdec1,w,c
   210   0024B6  50E1               	movf	fsr1l,w,c
   211   0024B8  E1FA               	bnz	copy_data0
   212                           
   213                           ; Initialize objects allocated to COMRAM (7 bytes)
   214                           ; load TBLPTR registers with __pidataCOMRAM
   215   0024BA  0EB4               	movlw	low __pidataCOMRAM
   216   0024BC  6EF6               	movwf	tblptrl,c
   217   0024BE  0E28               	movlw	high __pidataCOMRAM
   218   0024C0  6EF7               	movwf	tblptrh,c
   219   0024C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   220   0024C4  6EF8               	movwf	tblptru,c
   221   0024C6  EE00  F050         	lfsr	0,__pdataCOMRAM
   222   0024CA  EE10 F007          	lfsr	1,7
   223   0024CE                     copy_data1:
   224   0024CE  0009               	tblrd		*+
   225   0024D0  CFF5 FFEE          	movff	tablat,postinc0
   226   0024D4  50E5               	movf	postdec1,w,c
   227   0024D6  50E1               	movf	fsr1l,w,c
   228   0024D8  E1FA               	bnz	copy_data1
   229                           
   230                           ; Clear objects allocated to BANK0 (58 bytes)
   231   0024DA  EE00  F060         	lfsr	0,__pbssBANK0
   232   0024DE  0E3A               	movlw	58
   233   0024E0                     clear_0:
   234   0024E0  6AEE               	clrf	postinc0,c
   235   0024E2  06E8               	decf	wreg,f,c
   236   0024E4  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to COMRAM (51 bytes)
   239   0024E6  EE00  F001         	lfsr	0,__pbssCOMRAM
   240   0024EA  0E33               	movlw	51
   241   0024EC                     clear_1:
   242   0024EC  6AEE               	clrf	postinc0,c
   243   0024EE  06E8               	decf	wreg,f,c
   244   0024F0  E1FD               	bnz	clear_1
   245   0024F2                     end_of_initialization:
   246                           	callstack 0
   247   0024F2                     __end_of__initialization:
   248                           	callstack 0
   249   0024F2  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   250   0024F4  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   251   0024F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   252   0024F8  6EF8               	movwf	tblptru,c
   253   0024FA  0100               	movlb	0
   254   0024FC  EF89  F001         	goto	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMRAM
   257   000001                     __pbssCOMRAM:
   258                           	callstack 0
   259   000001                     _test_redled:
   260                           	callstack 0
   261   000001                     	ds	2
   262   000003                     _holdTimeMode:
   263                           	callstack 0
   264   000003                     	ds	2
   265   000005                     _holdTimeLeft:
   266                           	callstack 0
   267   000005                     	ds	2
   268   000007                     _holdTimeRight:
   269                           	callstack 0
   270   000007                     	ds	2
   271   000009                     _dispense:
   272                           	callstack 0
   273   000009                     	ds	2
   274   00000B                     _duty_cycle:
   275                           	callstack 0
   276   00000B                     	ds	2
   277   00000D                     _dutyCycle_reg:
   278                           	callstack 0
   279   00000D                     	ds	2
   280   00000F                     _VOLTAGE:
   281                           	callstack 0
   282   00000F                     	ds	2
   283   000011                     _IR_SENSORF:
   284                           	callstack 0
   285   000011                     	ds	2
   286   000013                     _i:
   287                           	callstack 0
   288   000013                     	ds	2
   289   000015                     _NUM_REC:
   290                           	callstack 0
   291   000015                     	ds	2
   292   000017                     _i_RUN_ZERO:
   293                           	callstack 0
   294   000017                     	ds	2
   295   000019                     _NUM:
   296                           	callstack 0
   297   000019                     	ds	2
   298   00001B                     _Motor_Pause_Time:
   299                           	callstack 0
   300   00001B                     	ds	2
   301   00001D                     _Device_ID:
   302                           	callstack 0
   303   00001D                     	ds	2
   304   00001F                     _Motor_Stop_Delay_Time:
   305                           	callstack 0
   306   00001F                     	ds	2
   307   000021                     _Motor_Speed:
   308                           	callstack 0
   309   000021                     	ds	2
   310   000023                     _ETemp:
   311                           	callstack 0
   312   000023                     	ds	2
   313   000025                     _Serial_Count:
   314                           	callstack 0
   315   000025                     	ds	2
   316   000027                     _TMR1IF_triggered:
   317                           	callstack 0
   318   000027                     	ds	1
   319   000028                     _PWM_Duty_Cycle:
   320                           	callstack 0
   321   000028                     	ds	1
   322   000029                     _delay_motor_stop_time:
   323                           	callstack 0
   324   000029                     	ds	1
   325   00002A                     _vib_Time:
   326                           	callstack 0
   327   00002A                     	ds	1
   328   00002B                     _pause_Time:
   329                           	callstack 0
   330   00002B                     	ds	1
   331   00002C                     _OpMode:
   332                           	callstack 0
   333   00002C                     	ds	1
   334   00002D                     _data:
   335                           	callstack 0
   336   00002D                     	ds	1
   337   00002E                     _vibration_mode:
   338                           	callstack 0
   339   00002E                     	ds	1
   340   00002F                     _Busy:
   341                           	callstack 0
   342   00002F                     	ds	1
   343   000030                     _motor_status:
   344                           	callstack 0
   345   000030                     	ds	1
   346   000031                     _Stop:
   347                           	callstack 0
   348   000031                     	ds	1
   349   000032                     _Serial_GData:
   350                           	callstack 0
   351   000032                     	ds	1
   352   000033                     _Serial_Flag:
   353                           	callstack 0
   354   000033                     	ds	1
   355                           
   356                           	psect	dataCOMRAM
   357   000050                     __pdataCOMRAM:
   358                           	callstack 0
   359   000050                     _errorcounter:
   360                           	callstack 0
   361   000050                     	ds	4
   362   000054                     _Vmotor_Time:
   363                           	callstack 0
   364   000054                     	ds	2
   365   000056                     _PWM_reg:
   366                           	callstack 0
   367   000056                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370   000060                     __pbssBANK0:
   371                           	callstack 0
   372   000060                     _Serial_Buffer_Out:
   373                           	callstack 0
   374   000060                     	ds	16
   375   000070                     _Serial_Temp_Buffer:
   376                           	callstack 0
   377   000070                     	ds	16
   378   000080                     _Serial_Buffer:
   379                           	callstack 0
   380   000080                     	ds	16
   381   000090                     _temp:
   382                           	callstack 0
   383   000090                     	ds	2
   384   000092                     _pwm_mode:
   385                           	callstack 0
   386   000092                     	ds	2
   387   000094                     _pwm_count:
   388                           	callstack 0
   389   000094                     	ds	2
   390   000096                     _EAdd_Low:
   391                           	callstack 0
   392   000096                     	ds	2
   393   000098                     _EAdd_High:
   394                           	callstack 0
   395   000098                     	ds	2
   396                           
   397                           	psect	dataBANK0
   398   0000A2                     __pdataBANK0:
   399                           	callstack 0
   400   0000A2                     _LowPowerCounter:
   401                           	callstack 0
   402   0000A2                     	ds	4
   403                           
   404                           	psect	cstackBANK0
   405   00009A                     __pcstackBANK0:
   406                           	callstack 0
   407   00009A                     ?_PWM_Selection:
   408                           	callstack 0
   409   00009A                     PWM_Selection@msg:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x0
   413   00009A                     	ds	2
   414   00009C                     ??_PWM_Selection:
   415                           
   416                           ; 1 bytes @ 0x2
   417   00009C                     	ds	2
   418   00009E                     PWM_Selection@dcSelected:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422   00009E                     	ds	2
   423   0000A0                     ??_main:
   424                           
   425                           ; 1 bytes @ 0x6
   426   0000A0                     	ds	2
   427                           
   428                           	psect	cstackCOMRAM
   429   000034                     __pcstackCOMRAM:
   430                           	callstack 0
   431   000034                     Read1USART@result:
   432                           	callstack 0
   433   000034                     i2Write1USART@data:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x0
   437   000034                     	ds	1
   438   000035                     ??_high_isr:
   439                           
   440                           ; 1 bytes @ 0x1
   441   000035                     	ds	4
   442   000039                     high_isr@Temp:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446   000039                     	ds	1
   447   00003A                     high_isr@c:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451   00003A                     	ds	1
   452   00003B                     high_isr@i:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x7
   456   00003B                     	ds	1
   457   00003C                     ??_STLED316s_SPI_SendData:
   458   00003C                     ??_i2c_Wait:
   459   00003C                     ?_Read_IR:
   460                           	callstack 0
   461   00003C                     ?___awdiv:
   462                           	callstack 0
   463   00003C                     ?___awmod:
   464                           	callstack 0
   465   00003C                     ?___aldiv:
   466                           	callstack 0
   467   00003C                     Write1USART@data:
   468                           	callstack 0
   469   00003C                     pwm_set@duty:
   470                           	callstack 0
   471   00003C                     delay_1ms@time:
   472                           	callstack 0
   473   00003C                     flush@i:
   474                           	callstack 0
   475   00003C                     flushOut@i:
   476                           	callstack 0
   477   00003C                     Get7Seg@Digit:
   478                           	callstack 0
   479   00003C                     ___awdiv@dividend:
   480                           	callstack 0
   481   00003C                     ___awmod@dividend:
   482                           	callstack 0
   483   00003C                     ___aldiv@dividend:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x8
   487   00003C                     	ds	1
   488   00003D                     ?_i2c_Read:
   489                           	callstack 0
   490   00003D                     i2c_Write@data:
   491                           	callstack 0
   492   00003D                     i2c_Address@mode:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x9
   496   00003D                     	ds	1
   497   00003E                     ??_pwm_set:
   498   00003E                     ??_delay_1ms:
   499   00003E                     ??_Get7Seg:
   500   00003E                     STLED316s_SPI_SendData@Data:
   501                           	callstack 0
   502   00003E                     i2c_Address@address:
   503                           	callstack 0
   504   00003E                     readWeighingData@i:
   505                           	callstack 0
   506   00003E                     ___awdiv@divisor:
   507                           	callstack 0
   508   00003E                     ___awmod@divisor:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512   00003E                     	ds	1
   513   00003F                     ??_AD_capture_BattVoltage:
   514   00003F                     STLED316s_SPI_SendData@temp:
   515                           	callstack 0
   516   00003F                     i2c_Address@l_address:
   517                           	callstack 0
   518   00003F                     i2c_Read@ack:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0xB
   522   00003F                     	ds	1
   523   000040                     STLED316s_SPI_SendData@i:
   524                           	callstack 0
   525   000040                     Get7Seg@Data:
   526                           	callstack 0
   527   000040                     i2c_Read@i2cReadData:
   528                           	callstack 0
   529   000040                     ___awdiv@counter:
   530                           	callstack 0
   531   000040                     ___awmod@counter:
   532                           	callstack 0
   533   000040                     ___aldiv@divisor:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0xC
   537   000040                     	ds	1
   538   000041                     STLED316s_SPI_SendData@t:
   539                           	callstack 0
   540   000041                     ___awdiv@sign:
   541                           	callstack 0
   542   000041                     ___awmod@sign:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xD
   546   000041                     	ds	1
   547   000042                     ??_InitSTLED316:
   548   000042                     ??_WriteSTLED316SErr:
   549   000042                     ??_WriteSTLED316SMode:
   550   000042                     WriteSTLED316SVibMode@dc_reg:
   551                           	callstack 0
   552   000042                     ___awdiv@quotient:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556   000042                     	ds	2
   557   000044                     InitSTLED316@Brightness:
   558                           	callstack 0
   559   000044                     WriteSTLED316SMode@msg:
   560                           	callstack 0
   561   000044                     WriteSTLED316SVibMode@v_mode:
   562                           	callstack 0
   563   000044                     WriteSTLED316SErr@msg:
   564                           	callstack 0
   565   000044                     ___aldiv@counter:
   566                           	callstack 0
   567   000044                     WriteSTLED316SData@number:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x10
   571   000044                     	ds	1
   572   000045                     ??_MotorPosition_Init:
   573   000045                     ??_Homing_Again_Auto:
   574   000045                     ___aldiv@sign:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x11
   578   000045                     	ds	1
   579   000046                     WriteSTLED316SData@v_mode:
   580                           	callstack 0
   581   000046                     ___aldiv@quotient:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x12
   585   000046                     	ds	1
   586   000047                     WriteSTLED316SData@NUM_DIG0:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x13
   590   000047                     	ds	2
   591   000049                     WriteSTLED316SData@NUM_DIG1:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x15
   595   000049                     	ds	1
   596   00004A                     ?_read_i2c:
   597                           	callstack 0
   598   00004A                     write_i2c@address:
   599                           	callstack 0
   600   00004A                     read_i2c@address:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x16
   604   00004A                     	ds	1
   605   00004B                     WriteSTLED316SData@data3:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x17
   609   00004B                     	ds	1
   610   00004C                     WriteSTLED316SData@data4:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x18
   614   00004C                     	ds	1
   615   00004D                     ??_Homing_Again_Manual:
   616                           
   617                           ; 1 bytes @ 0x19
   618   00004D                     	ds	1
   619   00004E                     write_i2c@data:
   620                           	callstack 0
   621   00004E                     read_i2c@read_byte:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1A
   625   00004E                     	ds	2
   626   000050                     
   627                           ; 1 bytes @ 0x1C
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 204 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels required when called: 6
   653 ;; This function calls:
   654 ;;		_AD_capture_BattVoltage
   655 ;;		_Homing_Again_Auto
   656 ;;		_Homing_Again_Manual
   657 ;;		_InitSTLED316
   658 ;;		_InitTimer1
   659 ;;		_MotorPosition_Init
   660 ;;		_PWM_Selection
   661 ;;		_ToggleVIB_Mode
   662 ;;		_Write1USART
   663 ;;		_WriteSTLED316SData
   664 ;;		_WriteSTLED316SVibMode
   665 ;;		_flush
   666 ;;		_flushOut
   667 ;;		_i2c_Init
   668 ;;		_init
   669 ;;		_initMotor
   670 ;;		_initUSART
   671 ;;		_pwm_set
   672 ;;		_read_i2c
   673 ;;		_write_i2c
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680   000312                     __ptext0:
   681                           	callstack 0
   682   000312                     _main:
   683                           	callstack 25
   684   000312                     
   685                           ;main.c: 205:     GIE = 0;
   686   000312  9EF2               	bcf	4082,7,c	;volatile
   687   000314                     
   688                           ;main.c: 206:     init();
   689   000314  ECE0  F011         	call	_init	;wreg free
   690   000318                     
   691                           ;main.c: 207:     InitSTLED316(0x77);
   692   000318  0E77               	movlw	119
   693   00031A  EC5A  F011         	call	_InitSTLED316
   694   00031E                     
   695                           ;main.c: 208:     initMotor();
   696   00031E  EC2F  F014         	call	_initMotor	;wreg free
   697   000322                     
   698                           ;main.c: 209:     i2c_Init();
   699   000322  EC04  F014         	call	_i2c_Init	;wreg free
   700   000326                     
   701                           ;main.c: 210:     initUSART();
   702   000326  ECAD  F013         	call	_initUSART	;wreg free
   703   00032A                     
   704                           ;main.c: 211:     InitTimer1();
   705   00032A  ECF8  F013         	call	_InitTimer1	;wreg free
   706   00032E                     
   707                           ;main.c: 220:     OSCCONbits.IRCF0 = 0;
   708   00032E  98D3               	bcf	211,4,c	;volatile
   709   000330                     
   710                           ;main.c: 221:     OSCCONbits.IRCF1 = 0;
   711   000330  9AD3               	bcf	211,5,c	;volatile
   712   000332                     
   713                           ;main.c: 222:     OSCCONbits.IRCF2 = 0;
   714   000332  9CD3               	bcf	211,6,c	;volatile
   715   000334                     
   716                           ;main.c: 223:     OSCCONbits.SCS0 = 0;
   717   000334  90D3               	bcf	211,0,c	;volatile
   718   000336                     
   719                           ;main.c: 224:     OSCCONbits.SCS1 = 0;
   720   000336  92D3               	bcf	211,1,c	;volatile
   721   000338                     
   722                           ;main.c: 228:     TRISCbits.TRISC2 = 0;
   723   000338  9494               	bcf	148,2,c	;volatile
   724   00033A                     
   725                           ;main.c: 232:     TRISBbits.TRISB4 = 1;
   726   00033A  8893               	bsf	147,4,c	;volatile
   727   00033C                     
   728                           ;main.c: 235:     T2CONbits.T2OUTPS0 = 0;
   729   00033C  96CA               	bcf	202,3,c	;volatile
   730   00033E                     
   731                           ;main.c: 236:     T2CONbits.T2OUTPS1 = 0;
   732   00033E  98CA               	bcf	202,4,c	;volatile
   733   000340                     
   734                           ;main.c: 237:     T2CONbits.T2OUTPS2 = 0;
   735   000340  9ACA               	bcf	202,5,c	;volatile
   736   000342                     
   737                           ;main.c: 238:     T2CONbits.T2OUTPS3 = 0;
   738   000342  9CCA               	bcf	202,6,c	;volatile
   739   000344                     
   740                           ;main.c: 240:     T2CONbits.T2CKPS = 0x00;
   741   000344  0EFC               	movlw	-4
   742   000346  16CA               	andwf	202,f,c	;volatile
   743   000348                     
   744                           ;main.c: 246:     PR2 = 4;
   745   000348  0E04               	movlw	4
   746   00034A  6ECB               	movwf	203,c	;volatile
   747   00034C                     
   748                           ;main.c: 248:     CCP1CONbits.DC1B = 0;
   749   00034C  0ECF               	movlw	-49
   750   00034E  16BB               	andwf	187,f,c	;volatile
   751   000350                     
   752                           ;main.c: 249:     CCP1CONbits.CCP1M = 0x0C;
   753   000350  50BB               	movf	187,w,c	;volatile
   754   000352  0BF0               	andlw	-16
   755   000354  090C               	iorlw	12
   756   000356  6EBB               	movwf	187,c	;volatile
   757   000358                     
   758                           ;main.c: 250:     CCPR1L = 0;
   759   000358  0E00               	movlw	0
   760   00035A  6EBC               	movwf	188,c	;volatile
   761   00035C                     
   762                           ;main.c: 252:     T2CONbits.TMR2ON = 1;
   763   00035C  84CA               	bsf	202,2,c	;volatile
   764   00035E                     
   765                           ;main.c: 254:     LATCbits.LATC1 = 0;
   766   00035E  928B               	bcf	139,1,c	;volatile
   767   000360                     
   768                           ;main.c: 255:     LATAbits.LATA2 = 0;
   769   000360  9489               	bcf	137,2,c	;volatile
   770   000362                     
   771                           ;main.c: 256:     errorcounter = 30;
   772   000362  0E1E               	movlw	30
   773   000364  6E50               	movwf	_errorcounter^0,c	;volatile
   774   000366  0E00               	movlw	0
   775   000368  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
   776   00036A  0E00               	movlw	0
   777   00036C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
   778   00036E  0E00               	movlw	0
   779   000370  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
   780   000372                     
   781                           ;main.c: 259:     RCONbits.IPEN = 1;
   782   000372  8ED0               	bsf	208,7,c	;volatile
   783   000374                     
   784                           ;main.c: 262:     IPR1bits.RCIP = 1;
   785   000374  8A9F               	bsf	159,5,c	;volatile
   786   000376                     
   787                           ;main.c: 265:     INTCONbits.GIEH = 1;
   788   000376  8EF2               	bsf	242,7,c	;volatile
   789   000378                     
   790                           ;main.c: 266:     INTCONbits.GIE = 1;
   791   000378  8EF2               	bsf	242,7,c	;volatile
   792   00037A                     
   793                           ;main.c: 270:     WDTCONbits.SWDTEN = 0;
   794   00037A  90C0               	bcf	192,0,c	;volatile
   795   00037C                     
   796                           ;main.c: 271:     LATDbits.LATD0 = 1;
   797   00037C  808C               	bsf	140,0,c	;volatile
   798   00037E                     
   799                           ;main.c: 272:     LATDbits.LATD1 = 1;
   800   00037E  828C               	bsf	140,1,c	;volatile
   801   000380                     
   802                           ;main.c: 274:     WriteSTLED316SData(37, 0xFF);
   803   000380  0E00               	movlw	0
   804   000382  6E45               	movwf	(WriteSTLED316SData@number+1)^0,c
   805   000384  0E25               	movlw	37
   806   000386  6E44               	movwf	WriteSTLED316SData@number^0,c
   807   000388  0EFF               	movlw	255
   808   00038A  6E46               	movwf	WriteSTLED316SData@v_mode^0,c
   809   00038C  EC06  F011         	call	_WriteSTLED316SData	;wreg free
   810   000390                     
   811                           ;main.c: 275:     _delay((unsigned long)((500)*(8000000/4000.0)));
   812   000390  0E06               	movlw	6
   813   000392  0100               	movlb	0	; () banked
   814   000394  6FA1               	movwf	(??_main+1)& (0+255),b
   815   000396  0E13               	movlw	19
   816   000398  6FA0               	movwf	??_main& (0+255),b
   817   00039A  0EAD               	movlw	173
   818   00039C                     u4367:
   819   00039C  2EE8               	decfsz	wreg,f,c
   820   00039E  D7FE               	bra	u4367
   821   0003A0  2FA0               	decfsz	??_main& (0+255),f,b
   822   0003A2  D7FC               	bra	u4367
   823   0003A4  2FA1               	decfsz	(??_main+1)& (0+255),f,b
   824   0003A6  D7FA               	bra	u4367
   825   0003A8  D000               	nop2	
   826   0003AA                     
   827                           ;main.c: 276:     AD_capture_BattVoltage();
   828   0003AA  ECF1  F012         	call	_AD_capture_BattVoltage	;wreg free
   829   0003AE                     
   830                           ;main.c: 285:     INTCONbits.GIE = 0;
   831   0003AE  9EF2               	bcf	242,7,c	;volatile
   832   0003B0                     
   833                           ;main.c: 286:     ETemp = read_i2c(0x0010);
   834   0003B0  0E10               	movlw	16
   835   0003B2  6E4A               	movwf	read_i2c@address^0,c
   836   0003B4  0E00               	movlw	0
   837   0003B6  6E4B               	movwf	(read_i2c@address+1)^0,c
   838   0003B8  0E00               	movlw	0
   839   0003BA  6E4C               	movwf	(read_i2c@address+2)^0,c
   840   0003BC  0E00               	movlw	0
   841   0003BE  6E4D               	movwf	(read_i2c@address+3)^0,c
   842   0003C0  EC19  F012         	call	_read_i2c	;wreg free
   843   0003C4  C04A  F023         	movff	?_read_i2c,_ETemp
   844   0003C8  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
   845   0003CC                     
   846                           ;main.c: 287:     INTCONbits.GIE = 1;
   847   0003CC  8EF2               	bsf	242,7,c	;volatile
   848   0003CE                     
   849                           ;main.c: 289:     vibration_mode = ETemp & 0x00FF;
   850   0003CE  C023  F02E         	movff	_ETemp,_vibration_mode
   851   0003D2                     
   852                           ;main.c: 290:     if (vibration_mode > 1) {
   853   0003D2  0E01               	movlw	1
   854   0003D4  642E               	cpfsgt	_vibration_mode^0,c
   855   0003D6  EFEF  F001         	goto	u3761
   856   0003DA  EFF1  F001         	goto	u3760
   857   0003DE                     u3761:
   858   0003DE  EF02  F002         	goto	l5485
   859   0003E2                     u3760:
   860   0003E2                     
   861                           ;main.c: 291:         vibration_mode = 1;
   862   0003E2  0E01               	movlw	1
   863   0003E4  6E2E               	movwf	_vibration_mode^0,c
   864   0003E6                     
   865                           ;main.c: 293:         INTCONbits.GIE = 0;
   866   0003E6  9EF2               	bcf	242,7,c	;volatile
   867   0003E8                     
   868                           ;main.c: 294:         write_i2c(0x0010, vibration_mode);
   869   0003E8  0E10               	movlw	16
   870   0003EA  6E4A               	movwf	write_i2c@address^0,c
   871   0003EC  0E00               	movlw	0
   872   0003EE  6E4B               	movwf	(write_i2c@address+1)^0,c
   873   0003F0  0E00               	movlw	0
   874   0003F2  6E4C               	movwf	(write_i2c@address+2)^0,c
   875   0003F4  0E00               	movlw	0
   876   0003F6  6E4D               	movwf	(write_i2c@address+3)^0,c
   877   0003F8  C02E  F04E         	movff	_vibration_mode,write_i2c@data
   878   0003FC  6A4F               	clrf	(write_i2c@data+1)^0,c
   879   0003FE  ECAD  F012         	call	_write_i2c	;wreg free
   880   000402                     
   881                           ;main.c: 295:         INTCONbits.GIE = 1;
   882   000402  8EF2               	bsf	242,7,c	;volatile
   883   000404                     l5485:
   884                           
   885                           ;main.c: 298:     NUM = 1;
   886   000404  0E00               	movlw	0
   887   000406  6E1A               	movwf	(_NUM+1)^0,c
   888   000408  0E01               	movlw	1
   889   00040A  6E19               	movwf	_NUM^0,c
   890                           
   891                           ;main.c: 299:     WriteSTLED316SData(NUM, vibration_mode);
   892   00040C  C019  F044         	movff	_NUM,WriteSTLED316SData@number
   893   000410  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
   894   000414  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   895   000418  EC06  F011         	call	_WriteSTLED316SData	;wreg free
   896   00041C                     
   897                           ;main.c: 300:     NUM_REC = 1;
   898   00041C  0E00               	movlw	0
   899   00041E  6E16               	movwf	(_NUM_REC+1)^0,c
   900   000420  0E01               	movlw	1
   901   000422  6E15               	movwf	_NUM_REC^0,c
   902   000424                     
   903                           ;main.c: 305:     INTCONbits.GIE = 0;
   904   000424  9EF2               	bcf	242,7,c	;volatile
   905   000426                     
   906                           ;main.c: 306:     ETemp = read_i2c(0x0020);
   907   000426  0E20               	movlw	32
   908   000428  6E4A               	movwf	read_i2c@address^0,c
   909   00042A  0E00               	movlw	0
   910   00042C  6E4B               	movwf	(read_i2c@address+1)^0,c
   911   00042E  0E00               	movlw	0
   912   000430  6E4C               	movwf	(read_i2c@address+2)^0,c
   913   000432  0E00               	movlw	0
   914   000434  6E4D               	movwf	(read_i2c@address+3)^0,c
   915   000436  EC19  F012         	call	_read_i2c	;wreg free
   916   00043A  C04A  F023         	movff	?_read_i2c,_ETemp
   917   00043E  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
   918   000442                     
   919                           ;main.c: 307:     INTCONbits.GIE = 1;
   920   000442  8EF2               	bsf	242,7,c	;volatile
   921                           
   922                           ;main.c: 309:     Device_ID = ETemp & 0x00FF;
   923   000444  5023               	movf	_ETemp^0,w,c
   924   000446  6E1D               	movwf	_Device_ID^0,c
   925   000448  6A1E               	clrf	(_Device_ID+1)^0,c
   926   00044A                     
   927                           ;main.c: 310:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   928   00044A  501E               	movf	(_Device_ID+1)^0,w,c
   929   00044C  E109               	bnz	u3770
   930   00044E  0E31               	movlw	49
   931   000450  5C1D               	subwf	_Device_ID^0,w,c
   932   000452  A0D8               	btfss	status,0,c
   933   000454  EF2E  F002         	goto	u3771
   934   000458  EF30  F002         	goto	u3770
   935   00045C                     u3771:
   936   00045C  EF3B  F002         	goto	l5499
   937   000460                     u3770:
   938   000460  501E               	movf	(_Device_ID+1)^0,w,c
   939   000462  E109               	bnz	u3780
   940   000464  0E3B               	movlw	59
   941   000466  5C1D               	subwf	_Device_ID^0,w,c
   942   000468  A0D8               	btfss	status,0,c
   943   00046A  EF39  F002         	goto	u3781
   944   00046E  EF3B  F002         	goto	u3780
   945   000472                     u3781:
   946   000472  EF4F  F002         	goto	l5507
   947   000476                     u3780:
   948   000476                     l5499:
   949                           
   950                           ;main.c: 311:         Device_ID = 0x31;
   951   000476  0E00               	movlw	0
   952   000478  6E1E               	movwf	(_Device_ID+1)^0,c
   953   00047A  0E31               	movlw	49
   954   00047C  6E1D               	movwf	_Device_ID^0,c
   955   00047E                     
   956                           ;main.c: 313:         INTCONbits.GIE = 0;
   957   00047E  9EF2               	bcf	242,7,c	;volatile
   958   000480                     
   959                           ;main.c: 314:         write_i2c(0x0020, Device_ID);
   960   000480  0E20               	movlw	32
   961   000482  6E4A               	movwf	write_i2c@address^0,c
   962   000484  0E00               	movlw	0
   963   000486  6E4B               	movwf	(write_i2c@address+1)^0,c
   964   000488  0E00               	movlw	0
   965   00048A  6E4C               	movwf	(write_i2c@address+2)^0,c
   966   00048C  0E00               	movlw	0
   967   00048E  6E4D               	movwf	(write_i2c@address+3)^0,c
   968   000490  C01D  F04E         	movff	_Device_ID,write_i2c@data
   969   000494  C01E  F04F         	movff	_Device_ID+1,write_i2c@data+1
   970   000498  ECAD  F012         	call	_write_i2c	;wreg free
   971   00049C                     
   972                           ;main.c: 315:         INTCONbits.GIE = 1;
   973   00049C  8EF2               	bsf	242,7,c	;volatile
   974   00049E                     l5507:
   975                           
   976                           ;main.c: 321:     INTCONbits.GIE = 0;
   977   00049E  9EF2               	bcf	242,7,c	;volatile
   978   0004A0                     
   979                           ;main.c: 322:     ETemp = read_i2c(0x0060);
   980   0004A0  0E60               	movlw	96
   981   0004A2  6E4A               	movwf	read_i2c@address^0,c
   982   0004A4  0E00               	movlw	0
   983   0004A6  6E4B               	movwf	(read_i2c@address+1)^0,c
   984   0004A8  0E00               	movlw	0
   985   0004AA  6E4C               	movwf	(read_i2c@address+2)^0,c
   986   0004AC  0E00               	movlw	0
   987   0004AE  6E4D               	movwf	(read_i2c@address+3)^0,c
   988   0004B0  EC19  F012         	call	_read_i2c	;wreg free
   989   0004B4  C04A  F023         	movff	?_read_i2c,_ETemp
   990   0004B8  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
   991   0004BC                     
   992                           ;main.c: 323:     INTCONbits.GIE = 1;
   993   0004BC  8EF2               	bsf	242,7,c	;volatile
   994   0004BE                     
   995                           ;main.c: 325:     pause_Time = ETemp & 0x00FF;
   996   0004BE  C023  F02B         	movff	_ETemp,_pause_Time	;volatile
   997   0004C2                     
   998                           ;main.c: 326:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   999   0004C2  0E2F               	movlw	47
  1000   0004C4  642B               	cpfsgt	_pause_Time^0,c	;volatile
  1001   0004C6  EF67  F002         	goto	u3791
  1002   0004CA  EF69  F002         	goto	u3790
  1003   0004CE                     u3791:
  1004   0004CE  EF71  F002         	goto	l5519
  1005   0004D2                     u3790:
  1006   0004D2  0E35               	movlw	53
  1007   0004D4  642B               	cpfsgt	_pause_Time^0,c	;volatile
  1008   0004D6  EF6F  F002         	goto	u3801
  1009   0004DA  EF71  F002         	goto	u3800
  1010   0004DE                     u3801:
  1011   0004DE  EFAE  F002         	goto	l5541
  1012   0004E2                     u3800:
  1013   0004E2                     l5519:
  1014                           
  1015                           ;main.c: 327:         pause_Time = 0x30;
  1016   0004E2  0E30               	movlw	48
  1017   0004E4  6E2B               	movwf	_pause_Time^0,c	;volatile
  1018                           
  1019                           ;main.c: 328:         Motor_Pause_Time = 0;
  1020   0004E6  0E00               	movlw	0
  1021   0004E8  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1022   0004EA  0E00               	movlw	0
  1023   0004EC  6E1B               	movwf	_Motor_Pause_Time^0,c
  1024   0004EE                     
  1025                           ;main.c: 330:         INTCONbits.GIE = 0;
  1026   0004EE  9EF2               	bcf	242,7,c	;volatile
  1027   0004F0                     
  1028                           ;main.c: 331:         write_i2c(0x0060, pause_Time);
  1029   0004F0  0E60               	movlw	96
  1030   0004F2  6E4A               	movwf	write_i2c@address^0,c
  1031   0004F4  0E00               	movlw	0
  1032   0004F6  6E4B               	movwf	(write_i2c@address+1)^0,c
  1033   0004F8  0E00               	movlw	0
  1034   0004FA  6E4C               	movwf	(write_i2c@address+2)^0,c
  1035   0004FC  0E00               	movlw	0
  1036   0004FE  6E4D               	movwf	(write_i2c@address+3)^0,c
  1037   000500  C02B  F04E         	movff	_pause_Time,write_i2c@data	;volatile
  1038   000504  6A4F               	clrf	(write_i2c@data+1)^0,c
  1039   000506  ECAD  F012         	call	_write_i2c	;wreg free
  1040   00050A                     
  1041                           ;main.c: 332:         INTCONbits.GIE = 1;
  1042   00050A  8EF2               	bsf	242,7,c	;volatile
  1043                           
  1044                           ;main.c: 333:     } else {
  1045   00050C  EFD4  F002         	goto	l211
  1046   000510                     l5527:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 337:                 Motor_Pause_Time = 0;
  1050   000510  0E00               	movlw	0
  1051   000512  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1052   000514  0E00               	movlw	0
  1053   000516  6E1B               	movwf	_Motor_Pause_Time^0,c
  1054                           
  1055                           ;main.c: 338:                 pause_Time = 0x30;
  1056   000518  0E30               	movlw	48
  1057   00051A  6E2B               	movwf	_pause_Time^0,c	;volatile
  1058                           
  1059                           ;main.c: 339:                 break;
  1060   00051C  EFD4  F002         	goto	l211
  1061   000520                     l5529:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;main.c: 342:                 Motor_Pause_Time = 1000;
  1065   000520  0E03               	movlw	3
  1066   000522  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1067   000524  0EE8               	movlw	232
  1068   000526  6E1B               	movwf	_Motor_Pause_Time^0,c
  1069                           
  1070                           ;main.c: 343:                 break;
  1071   000528  EFD4  F002         	goto	l211
  1072   00052C                     l5531:
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;main.c: 346:                 Motor_Pause_Time = 2000;
  1076   00052C  0E07               	movlw	7
  1077   00052E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1078   000530  0ED0               	movlw	208
  1079   000532  6E1B               	movwf	_Motor_Pause_Time^0,c
  1080                           
  1081                           ;main.c: 347:                 break;
  1082   000534  EFD4  F002         	goto	l211
  1083   000538                     l5533:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 350:                 Motor_Pause_Time = 3000;
  1087   000538  0E0B               	movlw	11
  1088   00053A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1089   00053C  0EB8               	movlw	184
  1090   00053E  6E1B               	movwf	_Motor_Pause_Time^0,c
  1091                           
  1092                           ;main.c: 351:                 break;
  1093   000540  EFD4  F002         	goto	l211
  1094   000544                     l5535:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;main.c: 354:                 Motor_Pause_Time = 4000;
  1098   000544  0E0F               	movlw	15
  1099   000546  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1100   000548  0EA0               	movlw	160
  1101   00054A  6E1B               	movwf	_Motor_Pause_Time^0,c
  1102                           
  1103                           ;main.c: 355:                 break;
  1104   00054C  EFD4  F002         	goto	l211
  1105   000550                     l5537:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 358:                 Motor_Pause_Time = 5000;
  1109   000550  0E13               	movlw	19
  1110   000552  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1111   000554  0E88               	movlw	136
  1112   000556  6E1B               	movwf	_Motor_Pause_Time^0,c
  1113                           
  1114                           ;main.c: 359:                 break;
  1115   000558  EFD4  F002         	goto	l211
  1116   00055C                     l5541:
  1117   00055C  502B               	movf	_pause_Time^0,w,c	;volatile
  1118   00055E  0100               	movlb	0	; () banked
  1119   000560  6FA0               	movwf	??_main& (0+255),b
  1120   000562  6BA1               	clrf	(??_main+1)& (0+255),b
  1121                           
  1122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 1, Range of values is 0 to 0
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte            4     3 (average)
  1128                           ;	Chosen strategy is simple_byte
  1129   000564  51A1               	movf	(??_main+1)& (0+255),w,b
  1130   000566  0A00               	xorlw	0	; case 0
  1131   000568  B4D8               	btfsc	status,2,c
  1132   00056A  EFB9  F002         	goto	l6313
  1133   00056E  EF88  F002         	goto	l5527
  1134   000572                     l6313:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 6, Range of values is 48 to 53
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte           19    10 (average)
  1142                           ;	Chosen strategy is simple_byte
  1143   000572  51A0               	movf	??_main& (0+255),w,b
  1144   000574  0A30               	xorlw	48	; case 48
  1145   000576  B4D8               	btfsc	status,2,c
  1146   000578  EF88  F002         	goto	l5527
  1147   00057C  0A01               	xorlw	1	; case 49
  1148   00057E  B4D8               	btfsc	status,2,c
  1149   000580  EF90  F002         	goto	l5529
  1150   000584  0A03               	xorlw	3	; case 50
  1151   000586  B4D8               	btfsc	status,2,c
  1152   000588  EF96  F002         	goto	l5531
  1153   00058C  0A01               	xorlw	1	; case 51
  1154   00058E  B4D8               	btfsc	status,2,c
  1155   000590  EF9C  F002         	goto	l5533
  1156   000594  0A07               	xorlw	7	; case 52
  1157   000596  B4D8               	btfsc	status,2,c
  1158   000598  EFA2  F002         	goto	l5535
  1159   00059C  0A01               	xorlw	1	; case 53
  1160   00059E  B4D8               	btfsc	status,2,c
  1161   0005A0  EFA8  F002         	goto	l5537
  1162   0005A4  EF88  F002         	goto	l5527
  1163   0005A8                     l211:
  1164                           
  1165                           ;main.c: 366:     INTCONbits.GIE = 0;
  1166   0005A8  9EF2               	bcf	242,7,c	;volatile
  1167   0005AA                     
  1168                           ;main.c: 367:     ETemp = read_i2c(0x0050);
  1169   0005AA  0E50               	movlw	80
  1170   0005AC  6E4A               	movwf	read_i2c@address^0,c
  1171   0005AE  0E00               	movlw	0
  1172   0005B0  6E4B               	movwf	(read_i2c@address+1)^0,c
  1173   0005B2  0E00               	movlw	0
  1174   0005B4  6E4C               	movwf	(read_i2c@address+2)^0,c
  1175   0005B6  0E00               	movlw	0
  1176   0005B8  6E4D               	movwf	(read_i2c@address+3)^0,c
  1177   0005BA  EC19  F012         	call	_read_i2c	;wreg free
  1178   0005BE  C04A  F023         	movff	?_read_i2c,_ETemp
  1179   0005C2  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1180   0005C6                     
  1181                           ;main.c: 368:     INTCONbits.GIE = 1;
  1182   0005C6  8EF2               	bsf	242,7,c	;volatile
  1183   0005C8                     
  1184                           ;main.c: 370:     delay_motor_stop_time = ETemp & 0x00FF;
  1185   0005C8  C023  F029         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1186   0005CC                     
  1187                           ;main.c: 371:     if (delay_motor_stop_time > 0x96) {
  1188   0005CC  0E96               	movlw	150
  1189   0005CE  6429               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1190   0005D0  EFEC  F002         	goto	u3811
  1191   0005D4  EFEE  F002         	goto	u3810
  1192   0005D8                     u3811:
  1193   0005D8  EF05  F003         	goto	l221
  1194   0005DC                     u3810:
  1195   0005DC                     
  1196                           ;main.c: 372:         delay_motor_stop_time = 0x00;
  1197   0005DC  0E00               	movlw	0
  1198   0005DE  6E29               	movwf	_delay_motor_stop_time^0,c	;volatile
  1199   0005E0                     
  1200                           ;main.c: 374:         INTCONbits.GIE = 0;
  1201   0005E0  9EF2               	bcf	242,7,c	;volatile
  1202   0005E2                     
  1203                           ;main.c: 375:         write_i2c(0x0050, delay_motor_stop_time);
  1204   0005E2  0E50               	movlw	80
  1205   0005E4  6E4A               	movwf	write_i2c@address^0,c
  1206   0005E6  0E00               	movlw	0
  1207   0005E8  6E4B               	movwf	(write_i2c@address+1)^0,c
  1208   0005EA  0E00               	movlw	0
  1209   0005EC  6E4C               	movwf	(write_i2c@address+2)^0,c
  1210   0005EE  0E00               	movlw	0
  1211   0005F0  6E4D               	movwf	(write_i2c@address+3)^0,c
  1212   0005F2  C029  F04E         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1213   0005F6  6A4F               	clrf	(write_i2c@data+1)^0,c
  1214   0005F8  ECAD  F012         	call	_write_i2c	;wreg free
  1215   0005FC                     
  1216                           ;main.c: 376:         INTCONbits.GIE = 1;
  1217   0005FC  8EF2               	bsf	242,7,c	;volatile
  1218   0005FE                     
  1219                           ;main.c: 378:         Motor_Stop_Delay_Time = 0;
  1220   0005FE  0E00               	movlw	0
  1221   000600  6E20               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1222   000602  0E00               	movlw	0
  1223   000604  6E1F               	movwf	_Motor_Stop_Delay_Time^0,c
  1224                           
  1225                           ;main.c: 379:     } else {
  1226   000606  EF08  F003         	goto	l222
  1227   00060A                     l221:
  1228                           
  1229                           ;main.c: 380:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1230   00060A  C029  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1231   00060E  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1232   000610                     l222:
  1233                           
  1234                           ;main.c: 386:     INTCONbits.GIE = 0;
  1235   000610  9EF2               	bcf	242,7,c	;volatile
  1236   000612                     
  1237                           ;main.c: 387:     ETemp = read_i2c(0x0040);
  1238   000612  0E40               	movlw	64
  1239   000614  6E4A               	movwf	read_i2c@address^0,c
  1240   000616  0E00               	movlw	0
  1241   000618  6E4B               	movwf	(read_i2c@address+1)^0,c
  1242   00061A  0E00               	movlw	0
  1243   00061C  6E4C               	movwf	(read_i2c@address+2)^0,c
  1244   00061E  0E00               	movlw	0
  1245   000620  6E4D               	movwf	(read_i2c@address+3)^0,c
  1246   000622  EC19  F012         	call	_read_i2c	;wreg free
  1247   000626  C04A  F023         	movff	?_read_i2c,_ETemp
  1248   00062A  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1249   00062E                     
  1250                           ;main.c: 388:     INTCONbits.GIE = 1;
  1251   00062E  8EF2               	bsf	242,7,c	;volatile
  1252   000630                     
  1253                           ;main.c: 389:     vib_Time = ETemp & 0x00FF;
  1254   000630  C023  F02A         	movff	_ETemp,_vib_Time	;volatile
  1255   000634                     
  1256                           ;main.c: 391:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85
  1257   000634  0E81               	movlw	129
  1258   000636  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1259   000638  B4D8               	btfsc	status,2,c
  1260   00063A  EF21  F003         	goto	u3821
  1261   00063E  EF23  F003         	goto	u3820
  1262   000642                     u3821:
  1263   000642  EF9C  F003         	goto	l5605
  1264   000646                     u3820:
  1265   000646  0E82               	movlw	130
  1266   000648  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1267   00064A  B4D8               	btfsc	status,2,c
  1268   00064C  EF2A  F003         	goto	u3831
  1269   000650  EF2C  F003         	goto	u3830
  1270   000654                     u3831:
  1271   000654  EF9C  F003         	goto	l5605
  1272   000658                     u3830:
  1273   000658  0E83               	movlw	131
  1274   00065A  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1275   00065C  B4D8               	btfsc	status,2,c
  1276   00065E  EF33  F003         	goto	u3841
  1277   000662  EF35  F003         	goto	u3840
  1278   000666                     u3841:
  1279   000666  EF9C  F003         	goto	l5605
  1280   00066A                     u3840:
  1281   00066A  0E84               	movlw	132
  1282   00066C  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1283   00066E  B4D8               	btfsc	status,2,c
  1284   000670  EF3C  F003         	goto	u3851
  1285   000674  EF3E  F003         	goto	u3850
  1286   000678                     u3851:
  1287   000678  EF9C  F003         	goto	l5605
  1288   00067C                     u3850:
  1289   00067C  0E85               	movlw	133
  1290   00067E  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1291   000680  B4D8               	btfsc	status,2,c
  1292   000682  EF45  F003         	goto	u3861
  1293   000686  EF47  F003         	goto	u3860
  1294   00068A                     u3861:
  1295   00068A  EF9C  F003         	goto	l5605
  1296   00068E                     u3860:
  1297   00068E  0E86               	movlw	134
  1298   000690  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1299   000692  B4D8               	btfsc	status,2,c
  1300   000694  EF4E  F003         	goto	u3871
  1301   000698  EF50  F003         	goto	u3870
  1302   00069C                     u3871:
  1303   00069C  EF9C  F003         	goto	l5605
  1304   0006A0                     u3870:
  1305   0006A0  0E87               	movlw	135
  1306   0006A2  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1307   0006A4  B4D8               	btfsc	status,2,c
  1308   0006A6  EF57  F003         	goto	u3881
  1309   0006AA  EF59  F003         	goto	u3880
  1310   0006AE                     u3881:
  1311   0006AE  EF9C  F003         	goto	l5605
  1312   0006B2                     u3880:
  1313   0006B2                     
  1314                           ;main.c: 392:             && vib_Time != 0x86 && vib_Time != 0x87)) {;main.c: 393:      
      +                             Vmotor_Time = 2000;
  1315   0006B2  0E07               	movlw	7
  1316   0006B4  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1317   0006B6  0ED0               	movlw	208
  1318   0006B8  6E54               	movwf	_Vmotor_Time^0,c
  1319                           
  1320                           ;main.c: 394:         vib_Time = 0x82;
  1321   0006BA  0E82               	movlw	130
  1322   0006BC  6E2A               	movwf	_vib_Time^0,c	;volatile
  1323   0006BE                     
  1324                           ;main.c: 396:         INTCONbits.GIE = 0;
  1325   0006BE  9EF2               	bcf	242,7,c	;volatile
  1326   0006C0                     
  1327                           ;main.c: 397:         write_i2c(0x0040, vib_Time);
  1328   0006C0  0E40               	movlw	64
  1329   0006C2  6E4A               	movwf	write_i2c@address^0,c
  1330   0006C4  0E00               	movlw	0
  1331   0006C6  6E4B               	movwf	(write_i2c@address+1)^0,c
  1332   0006C8  0E00               	movlw	0
  1333   0006CA  6E4C               	movwf	(write_i2c@address+2)^0,c
  1334   0006CC  0E00               	movlw	0
  1335   0006CE  6E4D               	movwf	(write_i2c@address+3)^0,c
  1336   0006D0  C02A  F04E         	movff	_vib_Time,write_i2c@data	;volatile
  1337   0006D4  6A4F               	clrf	(write_i2c@data+1)^0,c
  1338   0006D6  ECAD  F012         	call	_write_i2c	;wreg free
  1339   0006DA                     
  1340                           ;main.c: 398:         INTCONbits.GIE = 1;
  1341   0006DA  8EF2               	bsf	242,7,c	;volatile
  1342                           
  1343                           ;main.c: 399:     } else {
  1344   0006DC  EFC6  F003         	goto	l5607
  1345   0006E0                     l5589:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 402:                 Vmotor_Time = 1000;
  1349   0006E0  0E03               	movlw	3
  1350   0006E2  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1351   0006E4  0EE8               	movlw	232
  1352   0006E6  6E54               	movwf	_Vmotor_Time^0,c
  1353                           
  1354                           ;main.c: 403:                 break;
  1355   0006E8  EFC6  F003         	goto	l5607
  1356   0006EC                     l5591:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 406:                 Vmotor_Time = 2000;
  1360   0006EC  0E07               	movlw	7
  1361   0006EE  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1362   0006F0  0ED0               	movlw	208
  1363   0006F2  6E54               	movwf	_Vmotor_Time^0,c
  1364                           
  1365                           ;main.c: 407:                 vib_Time = 0x82;
  1366   0006F4  0E82               	movlw	130
  1367   0006F6  6E2A               	movwf	_vib_Time^0,c	;volatile
  1368                           
  1369                           ;main.c: 408:                 break;
  1370   0006F8  EFC6  F003         	goto	l5607
  1371   0006FC                     l5593:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 410:                 Vmotor_Time = 3000;
  1375   0006FC  0E0B               	movlw	11
  1376   0006FE  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1377   000700  0EB8               	movlw	184
  1378   000702  6E54               	movwf	_Vmotor_Time^0,c
  1379                           
  1380                           ;main.c: 411:                 break;
  1381   000704  EFC6  F003         	goto	l5607
  1382   000708                     l5595:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 413:                 Vmotor_Time = 4000;
  1386   000708  0E0F               	movlw	15
  1387   00070A  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1388   00070C  0EA0               	movlw	160
  1389   00070E  6E54               	movwf	_Vmotor_Time^0,c
  1390                           
  1391                           ;main.c: 414:                 break;
  1392   000710  EFC6  F003         	goto	l5607
  1393   000714                     l5597:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;main.c: 416:                 Vmotor_Time = 5000;
  1397   000714  0E13               	movlw	19
  1398   000716  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1399   000718  0E88               	movlw	136
  1400   00071A  6E54               	movwf	_Vmotor_Time^0,c
  1401                           
  1402                           ;main.c: 417:                 break;
  1403   00071C  EFC6  F003         	goto	l5607
  1404   000720                     l5599:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;main.c: 419:                 Vmotor_Time = 800;
  1408   000720  0E03               	movlw	3
  1409   000722  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1410   000724  0E20               	movlw	32
  1411   000726  6E54               	movwf	_Vmotor_Time^0,c
  1412                           
  1413                           ;main.c: 420:                 break;
  1414   000728  EFC6  F003         	goto	l5607
  1415   00072C                     l5601:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;main.c: 422:                 Vmotor_Time = 1500;
  1419   00072C  0E05               	movlw	5
  1420   00072E  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1421   000730  0EDC               	movlw	220
  1422   000732  6E54               	movwf	_Vmotor_Time^0,c
  1423                           
  1424                           ;main.c: 423:                 break;
  1425   000734  EFC6  F003         	goto	l5607
  1426   000738                     l5605:
  1427   000738  502A               	movf	_vib_Time^0,w,c	;volatile
  1428   00073A  0100               	movlb	0	; () banked
  1429   00073C  6FA0               	movwf	??_main& (0+255),b
  1430   00073E  6BA1               	clrf	(??_main+1)& (0+255),b
  1431                           
  1432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1433                           ; Switch size 1, requested type "simple"
  1434                           ; Number of cases is 1, Range of values is 0 to 0
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; simple_byte            4     3 (average)
  1438                           ;	Chosen strategy is simple_byte
  1439   000740  51A1               	movf	(??_main+1)& (0+255),w,b
  1440   000742  0A00               	xorlw	0	; case 0
  1441   000744  B4D8               	btfsc	status,2,c
  1442   000746  EFA7  F003         	goto	l6315
  1443   00074A  EF76  F003         	goto	l5591
  1444   00074E                     l6315:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 7, Range of values is 129 to 135
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte           22    12 (average)
  1452                           ;	Chosen strategy is simple_byte
  1453   00074E  51A0               	movf	??_main& (0+255),w,b
  1454   000750  0A81               	xorlw	129	; case 129
  1455   000752  B4D8               	btfsc	status,2,c
  1456   000754  EF70  F003         	goto	l5589
  1457   000758  0A03               	xorlw	3	; case 130
  1458   00075A  B4D8               	btfsc	status,2,c
  1459   00075C  EF76  F003         	goto	l5591
  1460   000760  0A01               	xorlw	1	; case 131
  1461   000762  B4D8               	btfsc	status,2,c
  1462   000764  EF7E  F003         	goto	l5593
  1463   000768  0A07               	xorlw	7	; case 132
  1464   00076A  B4D8               	btfsc	status,2,c
  1465   00076C  EF84  F003         	goto	l5595
  1466   000770  0A01               	xorlw	1	; case 133
  1467   000772  B4D8               	btfsc	status,2,c
  1468   000774  EF8A  F003         	goto	l5597
  1469   000778  0A03               	xorlw	3	; case 134
  1470   00077A  B4D8               	btfsc	status,2,c
  1471   00077C  EF90  F003         	goto	l5599
  1472   000780  0A01               	xorlw	1	; case 135
  1473   000782  B4D8               	btfsc	status,2,c
  1474   000784  EF96  F003         	goto	l5601
  1475   000788  EF76  F003         	goto	l5591
  1476   00078C                     l5607:
  1477                           
  1478                           ;main.c: 430:         PWM_reg = 0x3F;
  1479   00078C  0E3F               	movlw	63
  1480   00078E  6E56               	movwf	_PWM_reg^0,c
  1481   000790                     
  1482                           ;main.c: 432:     INTCONbits.GIE=0;
  1483   000790  9EF2               	bcf	242,7,c	;volatile
  1484   000792                     
  1485                           ;main.c: 433:     ETemp = read_i2c(0x0030);
  1486   000792  0E30               	movlw	48
  1487   000794  6E4A               	movwf	read_i2c@address^0,c
  1488   000796  0E00               	movlw	0
  1489   000798  6E4B               	movwf	(read_i2c@address+1)^0,c
  1490   00079A  0E00               	movlw	0
  1491   00079C  6E4C               	movwf	(read_i2c@address+2)^0,c
  1492   00079E  0E00               	movlw	0
  1493   0007A0  6E4D               	movwf	(read_i2c@address+3)^0,c
  1494   0007A2  EC19  F012         	call	_read_i2c	;wreg free
  1495   0007A6  C04A  F023         	movff	?_read_i2c,_ETemp
  1496   0007AA  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1497   0007AE                     
  1498                           ;main.c: 434:     INTCONbits.GIE=1;
  1499   0007AE  8EF2               	bsf	242,7,c	;volatile
  1500   0007B0                     
  1501                           ;main.c: 436:     PWM_reg = ETemp & 0x00FF;
  1502   0007B0  C023  F056         	movff	_ETemp,_PWM_reg
  1503   0007B4                     
  1504                           ;main.c: 438:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1505   0007B4  5056               	movf	_PWM_reg^0,w,c
  1506   0007B6  B4D8               	btfsc	status,2,c
  1507   0007B8  EFE0  F003         	goto	u3891
  1508   0007BC  EFE2  F003         	goto	u3890
  1509   0007C0                     u3891:
  1510   0007C0  EF05  F004         	goto	l5631
  1511   0007C4                     u3890:
  1512   0007C4  0E3F               	movlw	63
  1513   0007C6  1856               	xorwf	_PWM_reg^0,w,c
  1514   0007C8  B4D8               	btfsc	status,2,c
  1515   0007CA  EFE9  F003         	goto	u3901
  1516   0007CE  EFEB  F003         	goto	u3900
  1517   0007D2                     u3901:
  1518   0007D2  EF05  F004         	goto	l5631
  1519   0007D6                     u3900:
  1520   0007D6  0E7F               	movlw	127
  1521   0007D8  1856               	xorwf	_PWM_reg^0,w,c
  1522   0007DA  B4D8               	btfsc	status,2,c
  1523   0007DC  EFF2  F003         	goto	u3911
  1524   0007E0  EFF4  F003         	goto	u3910
  1525   0007E4                     u3911:
  1526   0007E4  EF05  F004         	goto	l5631
  1527   0007E8                     u3910:
  1528   0007E8                     
  1529                           ;main.c: 439:     {;main.c: 440:         PWM_reg=0x3F;
  1530   0007E8  0E3F               	movlw	63
  1531   0007EA  6E56               	movwf	_PWM_reg^0,c
  1532   0007EC                     
  1533                           ;main.c: 442:         INTCONbits.GIE=0;
  1534   0007EC  9EF2               	bcf	242,7,c	;volatile
  1535   0007EE                     
  1536                           ;main.c: 443:         write_i2c(0x0030,PWM_reg);
  1537   0007EE  0E30               	movlw	48
  1538   0007F0  6E4A               	movwf	write_i2c@address^0,c
  1539   0007F2  0E00               	movlw	0
  1540   0007F4  6E4B               	movwf	(write_i2c@address+1)^0,c
  1541   0007F6  0E00               	movlw	0
  1542   0007F8  6E4C               	movwf	(write_i2c@address+2)^0,c
  1543   0007FA  0E00               	movlw	0
  1544   0007FC  6E4D               	movwf	(write_i2c@address+3)^0,c
  1545   0007FE  C056  F04E         	movff	_PWM_reg,write_i2c@data
  1546   000802  6A4F               	clrf	(write_i2c@data+1)^0,c
  1547   000804  ECAD  F012         	call	_write_i2c	;wreg free
  1548   000808                     
  1549                           ;main.c: 444:         INTCONbits.GIE=1;
  1550   000808  8EF2               	bsf	242,7,c	;volatile
  1551   00080A                     l5631:
  1552                           
  1553                           ;main.c: 447:     errorcounter = 30;
  1554   00080A  0E1E               	movlw	30
  1555   00080C  6E50               	movwf	_errorcounter^0,c	;volatile
  1556   00080E  0E00               	movlw	0
  1557   000810  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  1558   000812  0E00               	movlw	0
  1559   000814  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  1560   000816  0E00               	movlw	0
  1561   000818  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  1562                           
  1563                           ;main.c: 448:     MotorPosition_Init();
  1564   00081A  EC6C  F00E         	call	_MotorPosition_Init	;wreg free
  1565   00081E                     
  1566                           ;main.c: 449:     LATDbits.LATD1 = 0;
  1567   00081E  928C               	bcf	140,1,c	;volatile
  1568   000820                     
  1569                           ;main.c: 454:     INTCONbits.GIE=0;
  1570   000820  9EF2               	bcf	242,7,c	;volatile
  1571                           
  1572                           ;main.c: 455:     ETemp = read_i2c(0x0070);
  1573   000822  0E70               	movlw	112
  1574   000824  6E4A               	movwf	read_i2c@address^0,c
  1575   000826  0E00               	movlw	0
  1576   000828  6E4B               	movwf	(read_i2c@address+1)^0,c
  1577   00082A  0E00               	movlw	0
  1578   00082C  6E4C               	movwf	(read_i2c@address+2)^0,c
  1579   00082E  0E00               	movlw	0
  1580   000830  6E4D               	movwf	(read_i2c@address+3)^0,c
  1581   000832  EC19  F012         	call	_read_i2c	;wreg free
  1582   000836  C04A  F023         	movff	?_read_i2c,_ETemp
  1583   00083A  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1584   00083E                     
  1585                           ;main.c: 457:     INTCONbits.GIE=1;
  1586   00083E  8EF2               	bsf	242,7,c	;volatile
  1587   000840                     
  1588                           ;main.c: 459:     dutyCycle_reg = ETemp & 0xFF;
  1589   000840  5023               	movf	_ETemp^0,w,c
  1590   000842  6E0D               	movwf	_dutyCycle_reg^0,c
  1591   000844  6A0E               	clrf	(_dutyCycle_reg+1)^0,c
  1592   000846                     
  1593                           ;main.c: 461:     if(dutyCycle_reg != 0x00 && dutyCycle_reg != 0x01 && dutyCycle_reg != 
      +                          0x02 && dutyCycle_reg != 0x03 && dutyCycle_reg != 0x04)
  1594   000846  500D               	movf	_dutyCycle_reg^0,w,c
  1595   000848  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1596   00084A  B4D8               	btfsc	status,2,c
  1597   00084C  EF2A  F004         	goto	u3921
  1598   000850  EF2C  F004         	goto	u3920
  1599   000854                     u3921:
  1600   000854  EF87  F004         	goto	l5673
  1601   000858                     u3920:
  1602   000858  040D               	decf	_dutyCycle_reg^0,w,c
  1603   00085A  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1604   00085C  B4D8               	btfsc	status,2,c
  1605   00085E  EF33  F004         	goto	u3931
  1606   000862  EF35  F004         	goto	u3930
  1607   000866                     u3931:
  1608   000866  EF87  F004         	goto	l5673
  1609   00086A                     u3930:
  1610   00086A  0E02               	movlw	2
  1611   00086C  180D               	xorwf	_dutyCycle_reg^0,w,c
  1612   00086E  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1613   000870  B4D8               	btfsc	status,2,c
  1614   000872  EF3D  F004         	goto	u3941
  1615   000876  EF3F  F004         	goto	u3940
  1616   00087A                     u3941:
  1617   00087A  EF87  F004         	goto	l5673
  1618   00087E                     u3940:
  1619   00087E  0E03               	movlw	3
  1620   000880  180D               	xorwf	_dutyCycle_reg^0,w,c
  1621   000882  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1622   000884  B4D8               	btfsc	status,2,c
  1623   000886  EF47  F004         	goto	u3951
  1624   00088A  EF49  F004         	goto	u3950
  1625   00088E                     u3951:
  1626   00088E  EF87  F004         	goto	l5673
  1627   000892                     u3950:
  1628   000892  0E04               	movlw	4
  1629   000894  180D               	xorwf	_dutyCycle_reg^0,w,c
  1630   000896  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1631   000898  B4D8               	btfsc	status,2,c
  1632   00089A  EF51  F004         	goto	u3961
  1633   00089E  EF53  F004         	goto	u3960
  1634   0008A2                     u3961:
  1635   0008A2  EF87  F004         	goto	l5673
  1636   0008A6                     u3960:
  1637   0008A6                     
  1638                           ;main.c: 462:     {;main.c: 463:         dutyCycle_reg = 0x00;
  1639   0008A6  0E00               	movlw	0
  1640   0008A8  6E0E               	movwf	(_dutyCycle_reg+1)^0,c
  1641   0008AA  0E00               	movlw	0
  1642   0008AC  6E0D               	movwf	_dutyCycle_reg^0,c
  1643   0008AE                     
  1644                           ;main.c: 464:         INTCONbits.GIE=0;
  1645   0008AE  9EF2               	bcf	242,7,c	;volatile
  1646   0008B0                     
  1647                           ;main.c: 465:         write_i2c(0x0070,dutyCycle_reg);
  1648   0008B0  0E70               	movlw	112
  1649   0008B2  6E4A               	movwf	write_i2c@address^0,c
  1650   0008B4  0E00               	movlw	0
  1651   0008B6  6E4B               	movwf	(write_i2c@address+1)^0,c
  1652   0008B8  0E00               	movlw	0
  1653   0008BA  6E4C               	movwf	(write_i2c@address+2)^0,c
  1654   0008BC  0E00               	movlw	0
  1655   0008BE  6E4D               	movwf	(write_i2c@address+3)^0,c
  1656   0008C0  C00D  F04E         	movff	_dutyCycle_reg,write_i2c@data
  1657   0008C4  C00E  F04F         	movff	_dutyCycle_reg+1,write_i2c@data+1
  1658   0008C8  ECAD  F012         	call	_write_i2c	;wreg free
  1659   0008CC                     
  1660                           ;main.c: 466:         INTCONbits.GIE=1;
  1661   0008CC  8EF2               	bsf	242,7,c	;volatile
  1662                           
  1663                           ;main.c: 467:     }
  1664   0008CE  EFAA  F004         	goto	l5675
  1665   0008D2                     l5659:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 471:           duty_cycle = 0;
  1669   0008D2  0E00               	movlw	0
  1670   0008D4  6E0C               	movwf	(_duty_cycle+1)^0,c
  1671   0008D6  0E00               	movlw	0
  1672   0008D8  6E0B               	movwf	_duty_cycle^0,c
  1673                           
  1674                           ;main.c: 472:           break;
  1675   0008DA  EFAA  F004         	goto	l5675
  1676   0008DE                     l5661:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 474:           duty_cycle = 7;
  1680   0008DE  0E00               	movlw	0
  1681   0008E0  6E0C               	movwf	(_duty_cycle+1)^0,c
  1682   0008E2  0E07               	movlw	7
  1683   0008E4  6E0B               	movwf	_duty_cycle^0,c
  1684                           
  1685                           ;main.c: 475:           break;
  1686   0008E6  EFAA  F004         	goto	l5675
  1687   0008EA                     l5663:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 478:           duty_cycle = 9;
  1691   0008EA  0E00               	movlw	0
  1692   0008EC  6E0C               	movwf	(_duty_cycle+1)^0,c
  1693   0008EE  0E09               	movlw	9
  1694   0008F0  6E0B               	movwf	_duty_cycle^0,c
  1695                           
  1696                           ;main.c: 479:           break;
  1697   0008F2  EFAA  F004         	goto	l5675
  1698   0008F6                     l5665:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 481:           duty_cycle = 12;
  1702   0008F6  0E00               	movlw	0
  1703   0008F8  6E0C               	movwf	(_duty_cycle+1)^0,c
  1704   0008FA  0E0C               	movlw	12
  1705   0008FC  6E0B               	movwf	_duty_cycle^0,c
  1706                           
  1707                           ;main.c: 482:           break;
  1708   0008FE  EFAA  F004         	goto	l5675
  1709   000902                     l5667:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 484:           duty_cycle = 20;
  1713   000902  0E00               	movlw	0
  1714   000904  6E0C               	movwf	(_duty_cycle+1)^0,c
  1715   000906  0E14               	movlw	20
  1716   000908  6E0B               	movwf	_duty_cycle^0,c
  1717                           
  1718                           ;main.c: 485:           break;
  1719   00090A  EFAA  F004         	goto	l5675
  1720   00090E                     l5673:
  1721   00090E  C00D  F0A0         	movff	_dutyCycle_reg,??_main
  1722   000912  C00E  F0A1         	movff	_dutyCycle_reg+1,??_main+1
  1723                           
  1724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1725                           ; Switch size 1, requested type "simple"
  1726                           ; Number of cases is 1, Range of values is 0 to 0
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte            4     3 (average)
  1730                           ;	Chosen strategy is simple_byte
  1731   000916  0100               	movlb	0	; () banked
  1732   000918  51A1               	movf	(??_main+1)& (0+255),w,b
  1733   00091A  0A00               	xorlw	0	; case 0
  1734   00091C  B4D8               	btfsc	status,2,c
  1735   00091E  EF93  F004         	goto	l6317
  1736   000922  EF69  F004         	goto	l5659
  1737   000926                     l6317:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 5, Range of values is 0 to 4
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte           16     9 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746   000926  51A0               	movf	??_main& (0+255),w,b
  1747   000928  0A00               	xorlw	0	; case 0
  1748   00092A  B4D8               	btfsc	status,2,c
  1749   00092C  EF69  F004         	goto	l5659
  1750   000930  0A01               	xorlw	1	; case 1
  1751   000932  B4D8               	btfsc	status,2,c
  1752   000934  EF6F  F004         	goto	l5661
  1753   000938  0A03               	xorlw	3	; case 2
  1754   00093A  B4D8               	btfsc	status,2,c
  1755   00093C  EF75  F004         	goto	l5663
  1756   000940  0A01               	xorlw	1	; case 3
  1757   000942  B4D8               	btfsc	status,2,c
  1758   000944  EF7B  F004         	goto	l5665
  1759   000948  0A07               	xorlw	7	; case 4
  1760   00094A  B4D8               	btfsc	status,2,c
  1761   00094C  EF81  F004         	goto	l5667
  1762   000950  EF69  F004         	goto	l5659
  1763   000954                     l5675:
  1764                           
  1765                           ;main.c: 509:         pwm_set(duty_cycle);
  1766   000954  C00B  F03C         	movff	_duty_cycle,pwm_set@duty
  1767   000958  C00C  F03D         	movff	_duty_cycle+1,pwm_set@duty+1
  1768   00095C  EC80  F013         	call	_pwm_set	;wreg free
  1769   000960  0004               	clrwdt		;# 
  1770   000962                     
  1771                           ;main.c: 512:         errorcounter = 30;
  1772   000962  0E1E               	movlw	30
  1773   000964  6E50               	movwf	_errorcounter^0,c	;volatile
  1774   000966  0E00               	movlw	0
  1775   000968  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  1776   00096A  0E00               	movlw	0
  1777   00096C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  1778   00096E  0E00               	movlw	0
  1779   000970  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  1780   000972                     
  1781                           ;main.c: 513:         AD_capture_BattVoltage();
  1782   000972  ECF1  F012         	call	_AD_capture_BattVoltage	;wreg free
  1783                           
  1784                           ;main.c: 515:         switch (OpMode) {
  1785   000976  EF3A  F009         	goto	l5979
  1786   00097A                     l248:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 521:                 NUM = NUM_REC;
  1790   00097A  C015  F019         	movff	_NUM_REC,_NUM
  1791   00097E  C016  F01A         	movff	_NUM_REC+1,_NUM+1
  1792                           
  1793                           ;main.c: 522:                 if (PORTBbits.RB4 == 0) {
  1794   000982  B881               	btfsc	129,4,c	;volatile
  1795   000984  EFC6  F004         	goto	u3971
  1796   000988  EFC8  F004         	goto	u3970
  1797   00098C                     u3971:
  1798   00098C  EF63  F005         	goto	l5705
  1799   000990                     u3970:
  1800   000990                     l5681:
  1801                           
  1802                           ;main.c: 524:                       WriteSTLED316SVibMode(dutyCycle_reg, vibration_mode)
      +                          ;
  1803   000990  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1804   000994  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1805   000998  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1806   00099C  EC56  F00D         	call	_WriteSTLED316SVibMode	;wreg free
  1807   0009A0                     
  1808                           ;main.c: 526:                       if (holdTimeMode >= 2000)
  1809   0009A0  BE04               	btfsc	(_holdTimeMode+1)^0,7,c
  1810   0009A2  EFDC  F004         	goto	u3981
  1811   0009A6  0ED0               	movlw	208
  1812   0009A8  5C03               	subwf	_holdTimeMode^0,w,c
  1813   0009AA  0E07               	movlw	7
  1814   0009AC  5804               	subwfb	(_holdTimeMode+1)^0,w,c
  1815   0009AE  A0D8               	btfss	status,0,c
  1816   0009B0  EFDC  F004         	goto	u3981
  1817   0009B4  EFDE  F004         	goto	u3980
  1818   0009B8                     u3981:
  1819   0009B8  EF0F  F005         	goto	l5689
  1820   0009BC                     u3980:
  1821   0009BC                     
  1822                           ;main.c: 527:                       {;main.c: 528:                         duty_cycle = 
      +                          PWM_Selection(dutyCycle_reg);
  1823   0009BC  C00D  F09A         	movff	_dutyCycle_reg,PWM_Selection@msg
  1824   0009C0  C00E  F09B         	movff	_dutyCycle_reg+1,PWM_Selection@msg+1
  1825   0009C4  ECBE  F00C         	call	_PWM_Selection	;wreg free
  1826   0009C8  C09A  F00B         	movff	?_PWM_Selection,_duty_cycle
  1827   0009CC  C09B  F00C         	movff	?_PWM_Selection+1,_duty_cycle+1
  1828                           
  1829                           ;main.c: 529:                         dutyCycle_reg = read_i2c(0x0070);
  1830   0009D0  0E70               	movlw	112
  1831   0009D2  6E4A               	movwf	read_i2c@address^0,c
  1832   0009D4  0E00               	movlw	0
  1833   0009D6  6E4B               	movwf	(read_i2c@address+1)^0,c
  1834   0009D8  0E00               	movlw	0
  1835   0009DA  6E4C               	movwf	(read_i2c@address+2)^0,c
  1836   0009DC  0E00               	movlw	0
  1837   0009DE  6E4D               	movwf	(read_i2c@address+3)^0,c
  1838   0009E0  EC19  F012         	call	_read_i2c	;wreg free
  1839   0009E4  C04A  F00D         	movff	?_read_i2c,_dutyCycle_reg
  1840   0009E8  C04B  F00E         	movff	?_read_i2c+1,_dutyCycle_reg+1
  1841                           
  1842                           ;main.c: 530:                         ToggleVIB_Mode();
  1843   0009EC  ECD2  F012         	call	_ToggleVIB_Mode	;wreg free
  1844                           
  1845                           ;main.c: 531:                         WriteSTLED316SVibMode(dutyCycle_reg, vibration_mod
      +                          e);
  1846   0009F0  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1847   0009F4  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1848   0009F8  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1849   0009FC  EC56  F00D         	call	_WriteSTLED316SVibMode	;wreg free
  1850   000A00                     
  1851                           ;main.c: 532:                         _delay((unsigned long)((500)*(8000000/4000.0)));
  1852   000A00  0E06               	movlw	6
  1853   000A02  0100               	movlb	0	; () banked
  1854   000A04  6FA1               	movwf	(??_main+1)& (0+255),b
  1855   000A06  0E13               	movlw	19
  1856   000A08  6FA0               	movwf	??_main& (0+255),b
  1857   000A0A  0EAD               	movlw	173
  1858   000A0C                     u4377:
  1859   000A0C  2EE8               	decfsz	wreg,f,c
  1860   000A0E  D7FE               	bra	u4377
  1861   000A10  2FA0               	decfsz	??_main& (0+255),f,b
  1862   000A12  D7FC               	bra	u4377
  1863   000A14  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  1864   000A16  D7FA               	bra	u4377
  1865   000A18  D000               	nop2	
  1866                           
  1867                           ;main.c: 533:                       }
  1868   000A1A  EF4C  F005         	goto	l5703
  1869   000A1E                     l5689:
  1870   000A1E  BE04               	btfsc	(_holdTimeMode+1)^0,7,c
  1871   000A20  EF1D  F005         	goto	u3990
  1872   000A24  0ED0               	movlw	208
  1873   000A26  5C03               	subwf	_holdTimeMode^0,w,c
  1874   000A28  0E07               	movlw	7
  1875   000A2A  5804               	subwfb	(_holdTimeMode+1)^0,w,c
  1876   000A2C  B0D8               	btfsc	status,0,c
  1877   000A2E  EF1B  F005         	goto	u3991
  1878   000A32  EF1D  F005         	goto	u3990
  1879   000A36                     u3991:
  1880   000A36  EF4C  F005         	goto	l5703
  1881   000A3A                     u3990:
  1882   000A3A                     
  1883                           ;main.c: 535:                       {;main.c: 536:                         WriteSTLED316
      +                          SVibMode(dutyCycle_reg, vibration_mode);
  1884   000A3A  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1885   000A3E  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1886   000A42  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1887   000A46  EC56  F00D         	call	_WriteSTLED316SVibMode	;wreg free
  1888   000A4A                     
  1889                           ;main.c: 537:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  1890   000A4A  0E02               	movlw	2
  1891   000A4C  0100               	movlb	0	; () banked
  1892   000A4E  6FA1               	movwf	(??_main+1)& (0+255),b
  1893   000A50  0E86               	movlw	134
  1894   000A52  6FA0               	movwf	??_main& (0+255),b
  1895   000A54  0E99               	movlw	153
  1896   000A56                     u4387:
  1897   000A56  2EE8               	decfsz	wreg,f,c
  1898   000A58  D7FE               	bra	u4387
  1899   000A5A  2FA0               	decfsz	??_main& (0+255),f,b
  1900   000A5C  D7FC               	bra	u4387
  1901   000A5E  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  1902   000A60  D7FA               	bra	u4387
  1903   000A62                     
  1904                           ;main.c: 538:                         holdTimeMode = 0;
  1905   000A62  0E00               	movlw	0
  1906   000A64  6E04               	movwf	(_holdTimeMode+1)^0,c
  1907   000A66  0E00               	movlw	0
  1908   000A68  6E03               	movwf	_holdTimeMode^0,c
  1909   000A6A  EF4C  F005         	goto	l5703
  1910   000A6E                     l5697:
  1911                           
  1912                           ;main.c: 541:                       {;main.c: 542:                         WriteSTLED316
      +                          SVibMode(dutyCycle_reg, vibration_mode);
  1913   000A6E  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1914   000A72  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1915   000A76  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1916   000A7A  EC56  F00D         	call	_WriteSTLED316SVibMode	;wreg free
  1917   000A7E                     
  1918                           ;main.c: 543:                         _delay((unsigned long)((10)*(8000000/4000.0)));
  1919   000A7E  0E1A               	movlw	26
  1920   000A80  0100               	movlb	0	; () banked
  1921   000A82  6FA0               	movwf	??_main& (0+255),b
  1922   000A84  0EF8               	movlw	248
  1923   000A86                     u4397:
  1924   000A86  2EE8               	decfsz	wreg,f,c
  1925   000A88  D7FE               	bra	u4397
  1926   000A8A  2FA0               	decfsz	??_main& (0+255),f,b
  1927   000A8C  D7FC               	bra	u4397
  1928   000A8E  F000               	nop	
  1929   000A90                     
  1930                           ;main.c: 544:                         holdTimeMode += 10;
  1931   000A90  0E0A               	movlw	10
  1932   000A92  2603               	addwf	_holdTimeMode^0,f,c
  1933   000A94  0E00               	movlw	0
  1934   000A96  2204               	addwfc	(_holdTimeMode+1)^0,f,c
  1935   000A98                     l5703:
  1936                           
  1937                           ;main.c: 540:                       while(holdTimeMode < 2000)
  1938   000A98  BE04               	btfsc	(_holdTimeMode+1)^0,7,c
  1939   000A9A  EF58  F005         	goto	u4001
  1940   000A9E  0ED0               	movlw	208
  1941   000AA0  5C03               	subwf	_holdTimeMode^0,w,c
  1942   000AA2  0E07               	movlw	7
  1943   000AA4  5804               	subwfb	(_holdTimeMode+1)^0,w,c
  1944   000AA6  A0D8               	btfss	status,0,c
  1945   000AA8  EF58  F005         	goto	u4001
  1946   000AAC  EF5A  F005         	goto	u4000
  1947   000AB0                     u4001:
  1948   000AB0  EF37  F005         	goto	l5697
  1949   000AB4                     u4000:
  1950   000AB4                     
  1951                           ;main.c: 546:                     } while (PORTBbits.RB4 == 0);
  1952   000AB4  A881               	btfss	129,4,c	;volatile
  1953   000AB6  EF5F  F005         	goto	u4011
  1954   000ABA  EF61  F005         	goto	u4010
  1955   000ABE                     u4011:
  1956   000ABE  EFC8  F004         	goto	l5681
  1957   000AC2                     u4010:
  1958   000AC2  EF67  F005         	goto	l5707
  1959   000AC6                     l5705:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 549:                   holdTimeMode = 0;
  1963   000AC6  0E00               	movlw	0
  1964   000AC8  6E04               	movwf	(_holdTimeMode+1)^0,c
  1965   000ACA  0E00               	movlw	0
  1966   000ACC  6E03               	movwf	_holdTimeMode^0,c
  1967   000ACE                     l5707:
  1968                           
  1969                           ;main.c: 552:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1970   000ACE  B681               	btfsc	129,3,c	;volatile
  1971   000AD0  EF6C  F005         	goto	u4021
  1972   000AD4  EF6E  F005         	goto	u4020
  1973   000AD8                     u4021:
  1974   000AD8  EF23  F006         	goto	l5749
  1975   000ADC                     u4020:
  1976   000ADC  0E63               	movlw	99
  1977   000ADE  1819               	xorwf	_NUM^0,w,c
  1978   000AE0  101A               	iorwf	(_NUM+1)^0,w,c
  1979   000AE2  B4D8               	btfsc	status,2,c
  1980   000AE4  EF76  F005         	goto	u4031
  1981   000AE8  EF78  F005         	goto	u4030
  1982   000AEC                     u4031:
  1983   000AEC  EF23  F006         	goto	l5749
  1984   000AF0                     u4030:
  1985   000AF0                     
  1986                           ;main.c: 553:                     if(PORTBbits.RB3 == 0){
  1987   000AF0  B681               	btfsc	129,3,c	;volatile
  1988   000AF2  EF7D  F005         	goto	u4041
  1989   000AF6  EF7F  F005         	goto	u4040
  1990   000AFA                     u4041:
  1991   000AFA  EF27  F006         	goto	l5751
  1992   000AFE                     u4040:
  1993   000AFE                     
  1994                           ;main.c: 555:                       if (holdTimeRight >= 1000 && NUM <= 89)
  1995   000AFE  BE08               	btfsc	(_holdTimeRight+1)^0,7,c
  1996   000B00  EF8B  F005         	goto	u4051
  1997   000B04  0EE8               	movlw	232
  1998   000B06  5C07               	subwf	_holdTimeRight^0,w,c
  1999   000B08  0E03               	movlw	3
  2000   000B0A  5808               	subwfb	(_holdTimeRight+1)^0,w,c
  2001   000B0C  A0D8               	btfss	status,0,c
  2002   000B0E  EF8B  F005         	goto	u4051
  2003   000B12  EF8D  F005         	goto	u4050
  2004   000B16                     u4051:
  2005   000B16  EFB5  F005         	goto	l5723
  2006   000B1A                     u4050:
  2007   000B1A  501A               	movf	(_NUM+1)^0,w,c
  2008   000B1C  E107               	bnz	u4061
  2009   000B1E  0E5A               	movlw	90
  2010   000B20  5C19               	subwf	_NUM^0,w,c
  2011   000B22  B0D8               	btfsc	status,0,c
  2012   000B24  EF96  F005         	goto	u4061
  2013   000B28  EF98  F005         	goto	u4060
  2014   000B2C                     u4061:
  2015   000B2C  EFB5  F005         	goto	l5723
  2016   000B30                     u4060:
  2017   000B30                     
  2018                           ;main.c: 556:                       {;main.c: 557:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  2019   000B30  0E06               	movlw	6
  2020   000B32  0100               	movlb	0	; () banked
  2021   000B34  6FA1               	movwf	(??_main+1)& (0+255),b
  2022   000B36  0E13               	movlw	19
  2023   000B38  6FA0               	movwf	??_main& (0+255),b
  2024   000B3A  0EAD               	movlw	173
  2025   000B3C                     u4407:
  2026   000B3C  2EE8               	decfsz	wreg,f,c
  2027   000B3E  D7FE               	bra	u4407
  2028   000B40  2FA0               	decfsz	??_main& (0+255),f,b
  2029   000B42  D7FC               	bra	u4407
  2030   000B44  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2031   000B46  D7FA               	bra	u4407
  2032   000B48  D000               	nop2	
  2033   000B4A                     
  2034                           ;main.c: 558:                         NUM = NUM + 10;
  2035   000B4A  0E0A               	movlw	10
  2036   000B4C  2419               	addwf	_NUM^0,w,c
  2037   000B4E  6E19               	movwf	_NUM^0,c
  2038   000B50  0E00               	movlw	0
  2039   000B52  201A               	addwfc	(_NUM+1)^0,w,c
  2040   000B54  6E1A               	movwf	(_NUM+1)^0,c
  2041   000B56                     
  2042                           ;main.c: 559:                         WriteSTLED316SData(NUM, vibration_mode);
  2043   000B56  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2044   000B5A  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2045   000B5E  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2046   000B62  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2047                           
  2048                           ;main.c: 560:                       }
  2049   000B66  EFE1  F005         	goto	l5733
  2050   000B6A                     l5723:
  2051   000B6A  BE08               	btfsc	(_holdTimeRight+1)^0,7,c
  2052   000B6C  EFC3  F005         	goto	u4070
  2053   000B70  0EE8               	movlw	232
  2054   000B72  5C07               	subwf	_holdTimeRight^0,w,c
  2055   000B74  0E03               	movlw	3
  2056   000B76  5808               	subwfb	(_holdTimeRight+1)^0,w,c
  2057   000B78  B0D8               	btfsc	status,0,c
  2058   000B7A  EFC1  F005         	goto	u4071
  2059   000B7E  EFC3  F005         	goto	u4070
  2060   000B82                     u4071:
  2061   000B82  EFE1  F005         	goto	l5733
  2062   000B86                     u4070:
  2063   000B86                     
  2064                           ;main.c: 562:                       {;main.c: 563:                         NUM = NUM + 1
      +                          ;
  2065   000B86  0E01               	movlw	1
  2066   000B88  2419               	addwf	_NUM^0,w,c
  2067   000B8A  6E19               	movwf	_NUM^0,c
  2068   000B8C  0E00               	movlw	0
  2069   000B8E  201A               	addwfc	(_NUM+1)^0,w,c
  2070   000B90  6E1A               	movwf	(_NUM+1)^0,c
  2071   000B92                     
  2072                           ;main.c: 564:                         WriteSTLED316SData(NUM, vibration_mode);
  2073   000B92  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2074   000B96  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2075   000B9A  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2076   000B9E  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2077   000BA2                     
  2078                           ;main.c: 566:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  2079   000BA2  0E02               	movlw	2
  2080   000BA4  0100               	movlb	0	; () banked
  2081   000BA6  6FA1               	movwf	(??_main+1)& (0+255),b
  2082   000BA8  0E86               	movlw	134
  2083   000BAA  6FA0               	movwf	??_main& (0+255),b
  2084   000BAC  0E99               	movlw	153
  2085   000BAE                     u4417:
  2086   000BAE  2EE8               	decfsz	wreg,f,c
  2087   000BB0  D7FE               	bra	u4417
  2088   000BB2  2FA0               	decfsz	??_main& (0+255),f,b
  2089   000BB4  D7FC               	bra	u4417
  2090   000BB6  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2091   000BB8  D7FA               	bra	u4417
  2092   000BBA                     
  2093                           ;main.c: 567:                         holdTimeRight = 0;
  2094   000BBA  0E00               	movlw	0
  2095   000BBC  6E08               	movwf	(_holdTimeRight+1)^0,c
  2096   000BBE  0E00               	movlw	0
  2097   000BC0  6E07               	movwf	_holdTimeRight^0,c
  2098   000BC2                     l5733:
  2099                           
  2100                           ;main.c: 571:                       if(PORTBbits.RB3 == 0 && PORTAbits.RA5 == 0)
  2101   000BC2  B681               	btfsc	129,3,c	;volatile
  2102   000BC4  EFE6  F005         	goto	u4081
  2103   000BC8  EFE8  F005         	goto	u4080
  2104   000BCC                     u4081:
  2105   000BCC  EF0A  F006         	goto	l5745
  2106   000BD0                     u4080:
  2107   000BD0  BA80               	btfsc	128,5,c	;volatile
  2108   000BD2  EFED  F005         	goto	u4091
  2109   000BD6  EFEF  F005         	goto	u4090
  2110   000BDA                     u4091:
  2111   000BDA  EF0A  F006         	goto	l5745
  2112   000BDE                     u4090:
  2113   000BDE                     
  2114                           ;main.c: 572:                       {;main.c: 573:                           NUM = 0;
  2115   000BDE  0E00               	movlw	0
  2116   000BE0  6E1A               	movwf	(_NUM+1)^0,c
  2117   000BE2  0E00               	movlw	0
  2118   000BE4  6E19               	movwf	_NUM^0,c
  2119   000BE6                     
  2120                           ;main.c: 574:                           WriteSTLED316SData(NUM, vibration_mode);
  2121   000BE6  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2122   000BEA  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2123   000BEE  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2124   000BF2  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2125   000BF6  EF0A  F006         	goto	l5745
  2126   000BFA                     l5741:
  2127                           
  2128                           ;main.c: 578:                       {;main.c: 579:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  2129   000BFA  0E1A               	movlw	26
  2130   000BFC  0100               	movlb	0	; () banked
  2131   000BFE  6FA0               	movwf	??_main& (0+255),b
  2132   000C00  0EF8               	movlw	248
  2133   000C02                     u4427:
  2134   000C02  2EE8               	decfsz	wreg,f,c
  2135   000C04  D7FE               	bra	u4427
  2136   000C06  2FA0               	decfsz	??_main& (0+255),f,b
  2137   000C08  D7FC               	bra	u4427
  2138   000C0A  F000               	nop	
  2139   000C0C                     
  2140                           ;main.c: 580:                         holdTimeRight += 10;
  2141   000C0C  0E0A               	movlw	10
  2142   000C0E  2607               	addwf	_holdTimeRight^0,f,c
  2143   000C10  0E00               	movlw	0
  2144   000C12  2208               	addwfc	(_holdTimeRight+1)^0,f,c
  2145   000C14                     l5745:
  2146                           
  2147                           ;main.c: 577:                       while(PORTBbits.RB3 == 0 && holdTimeRight < 1000)
  2148   000C14  B681               	btfsc	129,3,c	;volatile
  2149   000C16  EF0F  F006         	goto	u4101
  2150   000C1A  EF11  F006         	goto	u4100
  2151   000C1E                     u4101:
  2152   000C1E  EF21  F006         	goto	l260
  2153   000C22                     u4100:
  2154   000C22  BE08               	btfsc	(_holdTimeRight+1)^0,7,c
  2155   000C24  EF1D  F006         	goto	u4111
  2156   000C28  0EE8               	movlw	232
  2157   000C2A  5C07               	subwf	_holdTimeRight^0,w,c
  2158   000C2C  0E03               	movlw	3
  2159   000C2E  5808               	subwfb	(_holdTimeRight+1)^0,w,c
  2160   000C30  A0D8               	btfss	status,0,c
  2161   000C32  EF1D  F006         	goto	u4111
  2162   000C36  EF1F  F006         	goto	u4110
  2163   000C3A                     u4111:
  2164   000C3A  EFFD  F005         	goto	l5741
  2165   000C3E                     u4110:
  2166   000C3E  EF27  F006         	goto	l5751
  2167   000C42                     l260:
  2168                           
  2169                           ;main.c: 583:                 }
  2170   000C42  EF27  F006         	goto	l5751
  2171   000C46                     l5749:
  2172                           
  2173                           ;main.c: 585:                   holdTimeRight = 0;
  2174   000C46  0E00               	movlw	0
  2175   000C48  6E08               	movwf	(_holdTimeRight+1)^0,c
  2176   000C4A  0E00               	movlw	0
  2177   000C4C  6E07               	movwf	_holdTimeRight^0,c
  2178   000C4E                     l5751:
  2179                           
  2180                           ;main.c: 588:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  2181   000C4E  BA80               	btfsc	128,5,c	;volatile
  2182   000C50  EF2C  F006         	goto	u4121
  2183   000C54  EF2E  F006         	goto	u4120
  2184   000C58                     u4121:
  2185   000C58  EFE2  F006         	goto	l5793
  2186   000C5C                     u4120:
  2187   000C5C  5019               	movf	_NUM^0,w,c
  2188   000C5E  101A               	iorwf	(_NUM+1)^0,w,c
  2189   000C60  B4D8               	btfsc	status,2,c
  2190   000C62  EF35  F006         	goto	u4131
  2191   000C66  EF37  F006         	goto	u4130
  2192   000C6A                     u4131:
  2193   000C6A  EFE2  F006         	goto	l5793
  2194   000C6E                     u4130:
  2195   000C6E                     
  2196                           ;main.c: 589:                     if(PORTAbits.RA5 == 0){
  2197   000C6E  BA80               	btfsc	128,5,c	;volatile
  2198   000C70  EF3C  F006         	goto	u4141
  2199   000C74  EF3E  F006         	goto	u4140
  2200   000C78                     u4141:
  2201   000C78  EFE6  F006         	goto	l5795
  2202   000C7C                     u4140:
  2203   000C7C                     
  2204                           ;main.c: 591:                       if (holdTimeLeft >= 1000 && NUM >= 10)
  2205   000C7C  BE06               	btfsc	(_holdTimeLeft+1)^0,7,c
  2206   000C7E  EF4A  F006         	goto	u4151
  2207   000C82  0EE8               	movlw	232
  2208   000C84  5C05               	subwf	_holdTimeLeft^0,w,c
  2209   000C86  0E03               	movlw	3
  2210   000C88  5806               	subwfb	(_holdTimeLeft+1)^0,w,c
  2211   000C8A  A0D8               	btfss	status,0,c
  2212   000C8C  EF4A  F006         	goto	u4151
  2213   000C90  EF4C  F006         	goto	u4150
  2214   000C94                     u4151:
  2215   000C94  EF74  F006         	goto	l5767
  2216   000C98                     u4150:
  2217   000C98  501A               	movf	(_NUM+1)^0,w,c
  2218   000C9A  E109               	bnz	u4160
  2219   000C9C  0E0A               	movlw	10
  2220   000C9E  5C19               	subwf	_NUM^0,w,c
  2221   000CA0  A0D8               	btfss	status,0,c
  2222   000CA2  EF55  F006         	goto	u4161
  2223   000CA6  EF57  F006         	goto	u4160
  2224   000CAA                     u4161:
  2225   000CAA  EF74  F006         	goto	l5767
  2226   000CAE                     u4160:
  2227   000CAE                     
  2228                           ;main.c: 592:                       {;main.c: 593:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  2229   000CAE  0E06               	movlw	6
  2230   000CB0  0100               	movlb	0	; () banked
  2231   000CB2  6FA1               	movwf	(??_main+1)& (0+255),b
  2232   000CB4  0E13               	movlw	19
  2233   000CB6  6FA0               	movwf	??_main& (0+255),b
  2234   000CB8  0EAD               	movlw	173
  2235   000CBA                     u4437:
  2236   000CBA  2EE8               	decfsz	wreg,f,c
  2237   000CBC  D7FE               	bra	u4437
  2238   000CBE  2FA0               	decfsz	??_main& (0+255),f,b
  2239   000CC0  D7FC               	bra	u4437
  2240   000CC2  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2241   000CC4  D7FA               	bra	u4437
  2242   000CC6  D000               	nop2	
  2243   000CC8                     
  2244                           ;main.c: 594:                         NUM = NUM - 10;
  2245   000CC8  0EF6               	movlw	246
  2246   000CCA  2419               	addwf	_NUM^0,w,c
  2247   000CCC  6E19               	movwf	_NUM^0,c
  2248   000CCE  0EFF               	movlw	255
  2249   000CD0  201A               	addwfc	(_NUM+1)^0,w,c
  2250   000CD2  6E1A               	movwf	(_NUM+1)^0,c
  2251   000CD4                     
  2252                           ;main.c: 595:                         WriteSTLED316SData(NUM, vibration_mode);
  2253   000CD4  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2254   000CD8  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2255   000CDC  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2256   000CE0  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2257                           
  2258                           ;main.c: 596:                       }
  2259   000CE4  EFA0  F006         	goto	l5777
  2260   000CE8                     l5767:
  2261   000CE8  BE06               	btfsc	(_holdTimeLeft+1)^0,7,c
  2262   000CEA  EF82  F006         	goto	u4170
  2263   000CEE  0EE8               	movlw	232
  2264   000CF0  5C05               	subwf	_holdTimeLeft^0,w,c
  2265   000CF2  0E03               	movlw	3
  2266   000CF4  5806               	subwfb	(_holdTimeLeft+1)^0,w,c
  2267   000CF6  B0D8               	btfsc	status,0,c
  2268   000CF8  EF80  F006         	goto	u4171
  2269   000CFC  EF82  F006         	goto	u4170
  2270   000D00                     u4171:
  2271   000D00  EFA0  F006         	goto	l5777
  2272   000D04                     u4170:
  2273   000D04                     
  2274                           ;main.c: 598:                       {;main.c: 599:                         NUM = NUM - 1
      +                          ;
  2275   000D04  0EFF               	movlw	255
  2276   000D06  2419               	addwf	_NUM^0,w,c
  2277   000D08  6E19               	movwf	_NUM^0,c
  2278   000D0A  0EFF               	movlw	255
  2279   000D0C  201A               	addwfc	(_NUM+1)^0,w,c
  2280   000D0E  6E1A               	movwf	(_NUM+1)^0,c
  2281   000D10                     
  2282                           ;main.c: 600:                         WriteSTLED316SData(NUM, vibration_mode);
  2283   000D10  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2284   000D14  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2285   000D18  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2286   000D1C  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2287   000D20                     
  2288                           ;main.c: 602:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  2289   000D20  0E02               	movlw	2
  2290   000D22  0100               	movlb	0	; () banked
  2291   000D24  6FA1               	movwf	(??_main+1)& (0+255),b
  2292   000D26  0E86               	movlw	134
  2293   000D28  6FA0               	movwf	??_main& (0+255),b
  2294   000D2A  0E99               	movlw	153
  2295   000D2C                     u4447:
  2296   000D2C  2EE8               	decfsz	wreg,f,c
  2297   000D2E  D7FE               	bra	u4447
  2298   000D30  2FA0               	decfsz	??_main& (0+255),f,b
  2299   000D32  D7FC               	bra	u4447
  2300   000D34  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2301   000D36  D7FA               	bra	u4447
  2302   000D38                     
  2303                           ;main.c: 603:                         holdTimeLeft = 0;
  2304   000D38  0E00               	movlw	0
  2305   000D3A  6E06               	movwf	(_holdTimeLeft+1)^0,c
  2306   000D3C  0E00               	movlw	0
  2307   000D3E  6E05               	movwf	_holdTimeLeft^0,c
  2308   000D40                     l5777:
  2309                           
  2310                           ;main.c: 607:                       if(PORTAbits.RA5 == 0 && PORTBbits.RB3 == 0)
  2311   000D40  BA80               	btfsc	128,5,c	;volatile
  2312   000D42  EFA5  F006         	goto	u4181
  2313   000D46  EFA7  F006         	goto	u4180
  2314   000D4A                     u4181:
  2315   000D4A  EFC9  F006         	goto	l5789
  2316   000D4E                     u4180:
  2317   000D4E  B681               	btfsc	129,3,c	;volatile
  2318   000D50  EFAC  F006         	goto	u4191
  2319   000D54  EFAE  F006         	goto	u4190
  2320   000D58                     u4191:
  2321   000D58  EFC9  F006         	goto	l5789
  2322   000D5C                     u4190:
  2323   000D5C                     
  2324                           ;main.c: 608:                       {;main.c: 609:                           NUM = 0;
  2325   000D5C  0E00               	movlw	0
  2326   000D5E  6E1A               	movwf	(_NUM+1)^0,c
  2327   000D60  0E00               	movlw	0
  2328   000D62  6E19               	movwf	_NUM^0,c
  2329   000D64                     
  2330                           ;main.c: 610:                           WriteSTLED316SData(NUM, vibration_mode);
  2331   000D64  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2332   000D68  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2333   000D6C  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2334   000D70  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2335   000D74  EFC9  F006         	goto	l5789
  2336   000D78                     l5785:
  2337                           
  2338                           ;main.c: 613:                       {;main.c: 614:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  2339   000D78  0E1A               	movlw	26
  2340   000D7A  0100               	movlb	0	; () banked
  2341   000D7C  6FA0               	movwf	??_main& (0+255),b
  2342   000D7E  0EF8               	movlw	248
  2343   000D80                     u4457:
  2344   000D80  2EE8               	decfsz	wreg,f,c
  2345   000D82  D7FE               	bra	u4457
  2346   000D84  2FA0               	decfsz	??_main& (0+255),f,b
  2347   000D86  D7FC               	bra	u4457
  2348   000D88  F000               	nop	
  2349   000D8A                     
  2350                           ;main.c: 615:                         holdTimeLeft += 10;
  2351   000D8A  0E0A               	movlw	10
  2352   000D8C  2605               	addwf	_holdTimeLeft^0,f,c
  2353   000D8E  0E00               	movlw	0
  2354   000D90  2206               	addwfc	(_holdTimeLeft+1)^0,f,c
  2355   000D92                     l5789:
  2356                           
  2357                           ;main.c: 612:                       while(PORTAbits.RA5 == 0 && holdTimeLeft < 1000)
  2358   000D92  BA80               	btfsc	128,5,c	;volatile
  2359   000D94  EFCE  F006         	goto	u4201
  2360   000D98  EFD0  F006         	goto	u4200
  2361   000D9C                     u4201:
  2362   000D9C  EFE0  F006         	goto	l272
  2363   000DA0                     u4200:
  2364   000DA0  BE06               	btfsc	(_holdTimeLeft+1)^0,7,c
  2365   000DA2  EFDC  F006         	goto	u4211
  2366   000DA6  0EE8               	movlw	232
  2367   000DA8  5C05               	subwf	_holdTimeLeft^0,w,c
  2368   000DAA  0E03               	movlw	3
  2369   000DAC  5806               	subwfb	(_holdTimeLeft+1)^0,w,c
  2370   000DAE  A0D8               	btfss	status,0,c
  2371   000DB0  EFDC  F006         	goto	u4211
  2372   000DB4  EFDE  F006         	goto	u4210
  2373   000DB8                     u4211:
  2374   000DB8  EFBC  F006         	goto	l5785
  2375   000DBC                     u4210:
  2376   000DBC  EFE6  F006         	goto	l5795
  2377   000DC0                     l272:
  2378                           
  2379                           ;main.c: 618:                 }
  2380   000DC0  EFE6  F006         	goto	l5795
  2381   000DC4                     l5793:
  2382                           
  2383                           ;main.c: 620:                   holdTimeLeft = 0;
  2384   000DC4  0E00               	movlw	0
  2385   000DC6  6E06               	movwf	(_holdTimeLeft+1)^0,c
  2386   000DC8  0E00               	movlw	0
  2387   000DCA  6E05               	movwf	_holdTimeLeft^0,c
  2388   000DCC                     l5795:
  2389                           
  2390                           ;main.c: 633:                 NUM_REC = NUM;
  2391   000DCC  C019  F015         	movff	_NUM,_NUM_REC
  2392   000DD0  C01A  F016         	movff	_NUM+1,_NUM_REC+1
  2393   000DD4                     
  2394                           ;main.c: 634:                 WriteSTLED316SData(NUM, vibration_mode);
  2395   000DD4  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2396   000DD8  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2397   000DDC  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2398   000DE0  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2399   000DE4                     
  2400                           ;main.c: 637:                 if(dispense == 1)
  2401   000DE4  0409               	decf	_dispense^0,w,c
  2402   000DE6  100A               	iorwf	(_dispense+1)^0,w,c
  2403   000DE8  A4D8               	btfss	status,2,c
  2404   000DEA  EFF9  F006         	goto	u4221
  2405   000DEE  EFFB  F006         	goto	u4220
  2406   000DF2                     u4221:
  2407   000DF2  EF0B  F007         	goto	l5809
  2408   000DF6                     u4220:
  2409   000DF6                     
  2410                           ;main.c: 638:                 {;main.c: 639:                     Busy = 1;
  2411   000DF6  0E01               	movlw	1
  2412   000DF8  6E2F               	movwf	_Busy^0,c
  2413                           
  2414                           ;main.c: 640:                     errorcounter = 30;
  2415   000DFA  0E1E               	movlw	30
  2416   000DFC  6E50               	movwf	_errorcounter^0,c	;volatile
  2417   000DFE  0E00               	movlw	0
  2418   000E00  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  2419   000E02  0E00               	movlw	0
  2420   000E04  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  2421   000E06  0E00               	movlw	0
  2422   000E08  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  2423   000E0A                     
  2424                           ;main.c: 641:                     Homing_Again_Manual();
  2425   000E0A  EC52  F009         	call	_Homing_Again_Manual	;wreg free
  2426   000E0E                     
  2427                           ;main.c: 642:                     Stop = 0;
  2428   000E0E  0E00               	movlw	0
  2429   000E10  6E31               	movwf	_Stop^0,c
  2430   000E12                     
  2431                           ;main.c: 643:                     Busy = 0;
  2432   000E12  0E00               	movlw	0
  2433   000E14  6E2F               	movwf	_Busy^0,c
  2434   000E16                     l5809:
  2435                           
  2436                           ;main.c: 657:                 if (Serial_Flag == 1) {
  2437   000E16  0433               	decf	_Serial_Flag^0,w,c
  2438   000E18  A4D8               	btfss	status,2,c
  2439   000E1A  EF11  F007         	goto	u4231
  2440   000E1E  EF13  F007         	goto	u4230
  2441   000E22                     u4231:
  2442   000E22  EF36  F009         	goto	l5977
  2443   000E26                     u4230:
  2444   000E26  EF0C  F009         	goto	l5973
  2445   000E2A                     l5813:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;main.c: 662:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  2449   000E2A  0EF1               	movlw	241
  2450   000E2C  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2451   000E2E  A4D8               	btfss	status,2,c
  2452   000E30  EF1C  F007         	goto	u4241
  2453   000E34  EF1E  F007         	goto	u4240
  2454   000E38                     u4241:
  2455   000E38  EF3A  F007         	goto	l5823
  2456   000E3C                     u4240:
  2457   000E3C                     
  2458                           ; BSR set to: 0
  2459   000E3C  502F               	movf	_Busy^0,w,c
  2460   000E3E  A4D8               	btfss	status,2,c
  2461   000E40  EF24  F007         	goto	u4251
  2462   000E44  EF26  F007         	goto	u4250
  2463   000E48                     u4251:
  2464   000E48  EF3A  F007         	goto	l5823
  2465   000E4C                     u4250:
  2466   000E4C                     
  2467                           ; BSR set to: 0
  2468                           ;main.c: 663:                             {;main.c: 664:                                
      +                           Stop = 0;
  2469   000E4C  0E00               	movlw	0
  2470   000E4E  6E31               	movwf	_Stop^0,c
  2471                           
  2472                           ;main.c: 665:                                 Busy = 1;
  2473   000E50  0E01               	movlw	1
  2474   000E52  6E2F               	movwf	_Busy^0,c
  2475   000E54                     
  2476                           ; BSR set to: 0
  2477                           ;main.c: 666:                                 NUM = NUM_REC;
  2478   000E54  C015  F019         	movff	_NUM_REC,_NUM
  2479   000E58  C016  F01A         	movff	_NUM_REC+1,_NUM+1
  2480                           
  2481                           ;main.c: 668:                                 errorcounter = 30;
  2482   000E5C  0E1E               	movlw	30
  2483   000E5E  6E50               	movwf	_errorcounter^0,c	;volatile
  2484   000E60  0E00               	movlw	0
  2485   000E62  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  2486   000E64  0E00               	movlw	0
  2487   000E66  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  2488   000E68  0E00               	movlw	0
  2489   000E6A  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  2490   000E6C                     
  2491                           ; BSR set to: 0
  2492                           ;main.c: 669:                                 Homing_Again_Auto();
  2493   000E6C  ECAB  F00B         	call	_Homing_Again_Auto	;wreg free
  2494                           
  2495                           ;main.c: 671:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  2496   000E70  EF98  F007         	goto	l5853
  2497   000E74                     l5823:
  2498                           
  2499                           ; BSR set to: 0
  2500   000E74  0EF2               	movlw	242
  2501   000E76  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2502   000E78  A4D8               	btfss	status,2,c
  2503   000E7A  EF41  F007         	goto	u4261
  2504   000E7E  EF43  F007         	goto	u4260
  2505   000E82                     u4261:
  2506   000E82  EF98  F007         	goto	l5853
  2507   000E86                     u4260:
  2508   000E86                     
  2509                           ; BSR set to: 0
  2510   000E86  502F               	movf	_Busy^0,w,c
  2511   000E88  A4D8               	btfss	status,2,c
  2512   000E8A  EF49  F007         	goto	u4271
  2513   000E8E  EF4B  F007         	goto	u4270
  2514   000E92                     u4271:
  2515   000E92  EF98  F007         	goto	l5853
  2516   000E96                     u4270:
  2517   000E96                     
  2518                           ; BSR set to: 0
  2519                           ;main.c: 672:                             {;main.c: 673:                                
      +                           Stop = 0;
  2520   000E96  0E00               	movlw	0
  2521   000E98  6E31               	movwf	_Stop^0,c
  2522                           
  2523                           ;main.c: 674:                                 Busy = 1;
  2524   000E9A  0E01               	movlw	1
  2525   000E9C  6E2F               	movwf	_Busy^0,c
  2526   000E9E                     
  2527                           ; BSR set to: 0
  2528                           ;main.c: 675:                                 NUM = NUM_REC;
  2529   000E9E  C015  F019         	movff	_NUM_REC,_NUM
  2530   000EA2  C016  F01A         	movff	_NUM_REC+1,_NUM+1
  2531   000EA6                     
  2532                           ; BSR set to: 0
  2533                           ;main.c: 676:                                 WriteSTLED316SData(NUM, vibration_mode);
  2534   000EA6  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2535   000EAA  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2536   000EAE  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2537   000EB2  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  2538   000EB6                     
  2539                           ;main.c: 678:                                 errorcounter = 30;
  2540   000EB6  0E1E               	movlw	30
  2541   000EB8  6E50               	movwf	_errorcounter^0,c	;volatile
  2542   000EBA  0E00               	movlw	0
  2543   000EBC  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  2544   000EBE  0E00               	movlw	0
  2545   000EC0  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  2546   000EC2  0E00               	movlw	0
  2547   000EC4  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  2548   000EC6                     
  2549                           ;main.c: 679:                                 Homing_Again_Manual();
  2550   000EC6  EC52  F009         	call	_Homing_Again_Manual	;wreg free
  2551   000ECA                     
  2552                           ;main.c: 682:                                 if (Stop == 0) {
  2553   000ECA  5031               	movf	_Stop^0,w,c
  2554   000ECC  A4D8               	btfss	status,2,c
  2555   000ECE  EF6B  F007         	goto	u4281
  2556   000ED2  EF6D  F007         	goto	u4280
  2557   000ED6                     u4281:
  2558   000ED6  EF98  F007         	goto	l5853
  2559   000EDA                     u4280:
  2560   000EDA                     
  2561                           ;main.c: 683:                                     Serial_Buffer_Out[0] = 0xA5;
  2562   000EDA  0EA5               	movlw	165
  2563   000EDC  0100               	movlb	0	; () banked
  2564   000EDE  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2565                           
  2566                           ;main.c: 684:                                     Serial_Buffer_Out[1] = 0x44;
  2567   000EE0  0E44               	movlw	68
  2568   000EE2  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  2569                           
  2570                           ;main.c: 685:                                     Serial_Buffer_Out[2] = 0xF9;
  2571   000EE4  0EF9               	movlw	249
  2572   000EE6  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  2573                           
  2574                           ;main.c: 686:                                     Serial_Buffer_Out[3] = 0X3D;
  2575   000EE8  0E3D               	movlw	61
  2576   000EEA  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  2577                           
  2578                           ;main.c: 687:                                     Serial_Buffer_Out[4] = 0x5A;
  2579   000EEC  0E5A               	movlw	90
  2580   000EEE  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  2581   000EF0                     
  2582                           ; BSR set to: 0
  2583                           ;main.c: 689:                                     INTCONbits.GIE = 0;
  2584   000EF0  9EF2               	bcf	242,7,c	;volatile
  2585                           
  2586                           ;main.c: 690:                                     for (i = 0; i < 5; i++) {
  2587   000EF2  0E00               	movlw	0
  2588   000EF4  6E14               	movwf	(_i+1)^0,c
  2589   000EF6  0E00               	movlw	0
  2590   000EF8  6E13               	movwf	_i^0,c
  2591   000EFA                     l5843:
  2592   000EFA  5014               	movf	(_i+1)^0,w,c
  2593   000EFC  E109               	bnz	u4290
  2594   000EFE  0E05               	movlw	5
  2595   000F00  5C13               	subwf	_i^0,w,c
  2596   000F02  A0D8               	btfss	status,0,c
  2597   000F04  EF86  F007         	goto	u4291
  2598   000F08  EF88  F007         	goto	u4290
  2599   000F0C                     u4291:
  2600   000F0C  EF8A  F007         	goto	l5847
  2601   000F10                     u4290:
  2602   000F10  EF97  F007         	goto	l293
  2603   000F14                     l5847:
  2604                           
  2605                           ;main.c: 691:                                         Write1USART(Serial_Buffer_Out[i]);
  2606   000F14  0E60               	movlw	low _Serial_Buffer_Out
  2607   000F16  2413               	addwf	_i^0,w,c
  2608   000F18  6ED9               	movwf	fsr2l,c
  2609   000F1A  0E00               	movlw	high _Serial_Buffer_Out
  2610   000F1C  2014               	addwfc	(_i+1)^0,w,c
  2611   000F1E  6EDA               	movwf	fsr2h,c
  2612   000F20  50DF               	movf	indf2,w,c
  2613   000F22  EC0F  F014         	call	_Write1USART
  2614   000F26                     
  2615                           ;main.c: 692:                                     }
  2616   000F26  4A13               	infsnz	_i^0,f,c
  2617   000F28  2A14               	incf	(_i+1)^0,f,c
  2618   000F2A  EF7D  F007         	goto	l5843
  2619   000F2E                     l293:
  2620                           
  2621                           ;main.c: 693:                                     INTCONbits.GIE = 1;
  2622   000F2E  8EF2               	bsf	242,7,c	;volatile
  2623   000F30                     l5853:
  2624                           
  2625                           ;main.c: 697:                             flush();
  2626   000F30  EC10  F013         	call	_flush	;wreg free
  2627                           
  2628                           ;main.c: 698:                             flushOut();
  2629   000F34  EC2D  F013         	call	_flushOut	;wreg free
  2630   000F38                     
  2631                           ;main.c: 699:                             Stop = 0;
  2632   000F38  0E00               	movlw	0
  2633   000F3A  6E31               	movwf	_Stop^0,c
  2634   000F3C                     l5857:
  2635                           
  2636                           ;main.c: 700:                             Busy = 0;
  2637   000F3C  0E00               	movlw	0
  2638   000F3E  6E2F               	movwf	_Busy^0,c
  2639                           
  2640                           ;main.c: 701:                             break;
  2641   000F40  EF2E  F009         	goto	l5975
  2642   000F44                     l5859:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;main.c: 706:                             if (Busy == 0) {
  2646   000F44  502F               	movf	_Busy^0,w,c
  2647   000F46  A4D8               	btfss	status,2,c
  2648   000F48  EFA8  F007         	goto	u4301
  2649   000F4C  EFAA  F007         	goto	u4300
  2650   000F50                     u4301:
  2651   000F50  EF2E  F009         	goto	l5975
  2652   000F54                     u4300:
  2653   000F54                     
  2654                           ; BSR set to: 0
  2655                           ;main.c: 707:                                 Busy = 1;
  2656   000F54  0E01               	movlw	1
  2657   000F56  6E2F               	movwf	_Busy^0,c
  2658   000F58                     
  2659                           ; BSR set to: 0
  2660                           ;main.c: 711:                                 pause_Time = Serial_Buffer[2];
  2661   000F58  C082  F02B         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  2662                           
  2663                           ;main.c: 712:                                 switch (pause_Time) {
  2664   000F5C  EFD6  F007         	goto	l5879
  2665   000F60                     l5865:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;main.c: 715:                                         Motor_Pause_Time = 0;
  2669   000F60  0E00               	movlw	0
  2670   000F62  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2671   000F64  0E00               	movlw	0
  2672   000F66  6E1B               	movwf	_Motor_Pause_Time^0,c
  2673                           
  2674                           ;main.c: 716:                                         pause_Time = 0x30;
  2675   000F68  0E30               	movlw	48
  2676   000F6A  6E2B               	movwf	_pause_Time^0,c	;volatile
  2677                           
  2678                           ;main.c: 717:                                         break;
  2679   000F6C  EFFB  F007         	goto	l300
  2680   000F70                     l5867:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 720:                                         Motor_Pause_Time = 1000;
  2684   000F70  0E03               	movlw	3
  2685   000F72  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2686   000F74  0EE8               	movlw	232
  2687   000F76  6E1B               	movwf	_Motor_Pause_Time^0,c
  2688                           
  2689                           ;main.c: 721:                                         break;
  2690   000F78  EFFB  F007         	goto	l300
  2691   000F7C                     l5869:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;main.c: 724:                                         Motor_Pause_Time = 2000;
  2695   000F7C  0E07               	movlw	7
  2696   000F7E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2697   000F80  0ED0               	movlw	208
  2698   000F82  6E1B               	movwf	_Motor_Pause_Time^0,c
  2699                           
  2700                           ;main.c: 725:                                         break;
  2701   000F84  EFFB  F007         	goto	l300
  2702   000F88                     l5871:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;main.c: 728:                                         Motor_Pause_Time = 3000;
  2706   000F88  0E0B               	movlw	11
  2707   000F8A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2708   000F8C  0EB8               	movlw	184
  2709   000F8E  6E1B               	movwf	_Motor_Pause_Time^0,c
  2710                           
  2711                           ;main.c: 729:                                         break;
  2712   000F90  EFFB  F007         	goto	l300
  2713   000F94                     l5873:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;main.c: 732:                                         Motor_Pause_Time = 4000;
  2717   000F94  0E0F               	movlw	15
  2718   000F96  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2719   000F98  0EA0               	movlw	160
  2720   000F9A  6E1B               	movwf	_Motor_Pause_Time^0,c
  2721                           
  2722                           ;main.c: 733:                                         break;
  2723   000F9C  EFFB  F007         	goto	l300
  2724   000FA0                     l5875:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;main.c: 736:                                         Motor_Pause_Time = 5000;
  2728   000FA0  0E13               	movlw	19
  2729   000FA2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2730   000FA4  0E88               	movlw	136
  2731   000FA6  6E1B               	movwf	_Motor_Pause_Time^0,c
  2732                           
  2733                           ;main.c: 737:                                         break;
  2734   000FA8  EFFB  F007         	goto	l300
  2735   000FAC                     l5879:
  2736                           
  2737                           ; BSR set to: 0
  2738   000FAC  502B               	movf	_pause_Time^0,w,c	;volatile
  2739   000FAE  6FA0               	movwf	??_main& (0+255),b
  2740   000FB0  6BA1               	clrf	(??_main+1)& (0+255),b
  2741                           
  2742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2743                           ; Switch size 1, requested type "simple"
  2744                           ; Number of cases is 1, Range of values is 0 to 0
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte            4     3 (average)
  2748                           ;	Chosen strategy is simple_byte
  2749   000FB2  51A1               	movf	(??_main+1)& (0+255),w,b
  2750   000FB4  0A00               	xorlw	0	; case 0
  2751   000FB6  B4D8               	btfsc	status,2,c
  2752   000FB8  EFE0  F007         	goto	l6319
  2753   000FBC  EFB0  F007         	goto	l5865
  2754   000FC0                     l6319:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 6, Range of values is 48 to 53
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte           19    10 (average)
  2762                           ;	Chosen strategy is simple_byte
  2763   000FC0  51A0               	movf	??_main& (0+255),w,b
  2764   000FC2  0A30               	xorlw	48	; case 48
  2765   000FC4  B4D8               	btfsc	status,2,c
  2766   000FC6  EFB0  F007         	goto	l5865
  2767   000FCA  0A01               	xorlw	1	; case 49
  2768   000FCC  B4D8               	btfsc	status,2,c
  2769   000FCE  EFB8  F007         	goto	l5867
  2770   000FD2  0A03               	xorlw	3	; case 50
  2771   000FD4  B4D8               	btfsc	status,2,c
  2772   000FD6  EFBE  F007         	goto	l5869
  2773   000FDA  0A01               	xorlw	1	; case 51
  2774   000FDC  B4D8               	btfsc	status,2,c
  2775   000FDE  EFC4  F007         	goto	l5871
  2776   000FE2  0A07               	xorlw	7	; case 52
  2777   000FE4  B4D8               	btfsc	status,2,c
  2778   000FE6  EFCA  F007         	goto	l5873
  2779   000FEA  0A01               	xorlw	1	; case 53
  2780   000FEC  B4D8               	btfsc	status,2,c
  2781   000FEE  EFD0  F007         	goto	l5875
  2782   000FF2  EFB0  F007         	goto	l5865
  2783   000FF6                     l300:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;main.c: 742:                                 INTCONbits.GIE = 0;
  2787   000FF6  9EF2               	bcf	242,7,c	;volatile
  2788   000FF8                     
  2789                           ; BSR set to: 0
  2790                           ;main.c: 743:                                 write_i2c(0x0060, pause_Time);
  2791   000FF8  0E60               	movlw	96
  2792   000FFA  6E4A               	movwf	write_i2c@address^0,c
  2793   000FFC  0E00               	movlw	0
  2794   000FFE  6E4B               	movwf	(write_i2c@address+1)^0,c
  2795   001000  0E00               	movlw	0
  2796   001002  6E4C               	movwf	(write_i2c@address+2)^0,c
  2797   001004  0E00               	movlw	0
  2798   001006  6E4D               	movwf	(write_i2c@address+3)^0,c
  2799   001008  C02B  F04E         	movff	_pause_Time,write_i2c@data	;volatile
  2800   00100C  6A4F               	clrf	(write_i2c@data+1)^0,c
  2801   00100E  ECAD  F012         	call	_write_i2c	;wreg free
  2802   001012                     
  2803                           ;main.c: 744:                                 INTCONbits.GIE = 1;
  2804   001012  8EF2               	bsf	242,7,c	;volatile
  2805   001014                     
  2806                           ;main.c: 746:                                 flush();
  2807   001014  EC10  F013         	call	_flush	;wreg free
  2808   001018  EF9E  F007         	goto	l5857
  2809   00101C                     l5889:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;main.c: 754:                             if (Busy == 0) {
  2813   00101C  502F               	movf	_Busy^0,w,c
  2814   00101E  A4D8               	btfss	status,2,c
  2815   001020  EF14  F008         	goto	u4311
  2816   001024  EF16  F008         	goto	u4310
  2817   001028                     u4311:
  2818   001028  EF2E  F009         	goto	l5975
  2819   00102C                     u4310:
  2820   00102C                     
  2821                           ; BSR set to: 0
  2822                           ;main.c: 755:                                 if (Serial_Buffer[2] == 0x00) {
  2823   00102C  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  2824   00102E  A4D8               	btfss	status,2,c
  2825   001030  EF1C  F008         	goto	u4321
  2826   001034  EF1E  F008         	goto	u4320
  2827   001038                     u4321:
  2828   001038  EF88  F008         	goto	l5925
  2829   00103C                     u4320:
  2830   00103C                     
  2831                           ; BSR set to: 0
  2832                           ;main.c: 756:                                     Busy = 1;
  2833   00103C  0E01               	movlw	1
  2834   00103E  6E2F               	movwf	_Busy^0,c
  2835   001040                     
  2836                           ; BSR set to: 0
  2837                           ;main.c: 759:                                     pause_Time = read_i2c(0x0060);
  2838   001040  0E60               	movlw	96
  2839   001042  6E4A               	movwf	read_i2c@address^0,c
  2840   001044  0E00               	movlw	0
  2841   001046  6E4B               	movwf	(read_i2c@address+1)^0,c
  2842   001048  0E00               	movlw	0
  2843   00104A  6E4C               	movwf	(read_i2c@address+2)^0,c
  2844   00104C  0E00               	movlw	0
  2845   00104E  6E4D               	movwf	(read_i2c@address+3)^0,c
  2846   001050  EC19  F012         	call	_read_i2c	;wreg free
  2847   001054  504A               	movf	?_read_i2c^0,w,c
  2848   001056  6E2B               	movwf	_pause_Time^0,c	;volatile
  2849   001058                     
  2850                           ;main.c: 760:                                     vib_Time = read_i2c(0x0040);
  2851   001058  0E40               	movlw	64
  2852   00105A  6E4A               	movwf	read_i2c@address^0,c
  2853   00105C  0E00               	movlw	0
  2854   00105E  6E4B               	movwf	(read_i2c@address+1)^0,c
  2855   001060  0E00               	movlw	0
  2856   001062  6E4C               	movwf	(read_i2c@address+2)^0,c
  2857   001064  0E00               	movlw	0
  2858   001066  6E4D               	movwf	(read_i2c@address+3)^0,c
  2859   001068  EC19  F012         	call	_read_i2c	;wreg free
  2860   00106C  504A               	movf	?_read_i2c^0,w,c
  2861   00106E  6E2A               	movwf	_vib_Time^0,c	;volatile
  2862   001070                     
  2863                           ;main.c: 761:                                     Motor_Speed = read_i2c(0x0030);
  2864   001070  0E30               	movlw	48
  2865   001072  6E4A               	movwf	read_i2c@address^0,c
  2866   001074  0E00               	movlw	0
  2867   001076  6E4B               	movwf	(read_i2c@address+1)^0,c
  2868   001078  0E00               	movlw	0
  2869   00107A  6E4C               	movwf	(read_i2c@address+2)^0,c
  2870   00107C  0E00               	movlw	0
  2871   00107E  6E4D               	movwf	(read_i2c@address+3)^0,c
  2872   001080  EC19  F012         	call	_read_i2c	;wreg free
  2873   001084  C04A  F021         	movff	?_read_i2c,_Motor_Speed
  2874   001088  C04B  F022         	movff	?_read_i2c+1,_Motor_Speed+1
  2875   00108C                     
  2876                           ;main.c: 762:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2877   00108C  0E50               	movlw	80
  2878   00108E  6E4A               	movwf	read_i2c@address^0,c
  2879   001090  0E00               	movlw	0
  2880   001092  6E4B               	movwf	(read_i2c@address+1)^0,c
  2881   001094  0E00               	movlw	0
  2882   001096  6E4C               	movwf	(read_i2c@address+2)^0,c
  2883   001098  0E00               	movlw	0
  2884   00109A  6E4D               	movwf	(read_i2c@address+3)^0,c
  2885   00109C  EC19  F012         	call	_read_i2c	;wreg free
  2886   0010A0  504A               	movf	?_read_i2c^0,w,c
  2887   0010A2  6E29               	movwf	_delay_motor_stop_time^0,c	;volatile
  2888                           
  2889                           ;main.c: 765:                                     Serial_Buffer_Out[0] = 0x51;
  2890   0010A4  0E51               	movlw	81
  2891   0010A6  0100               	movlb	0	; () banked
  2892   0010A8  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2893   0010AA                     
  2894                           ; BSR set to: 0
  2895                           ;main.c: 766:                                     Serial_Buffer_Out[1] = pause_Time;
  2896   0010AA  C02B  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2897   0010AE                     
  2898                           ; BSR set to: 0
  2899                           ;main.c: 767:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2900   0010AE  C021  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2901   0010B2                     
  2902                           ; BSR set to: 0
  2903                           ;main.c: 768:                                     Serial_Buffer_Out[3] = vib_Time;
  2904   0010B2  C02A  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2905   0010B6                     
  2906                           ; BSR set to: 0
  2907                           ;main.c: 769:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2908   0010B6  C029  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2909   0010BA                     
  2910                           ; BSR set to: 0
  2911                           ;main.c: 771:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2912   0010BA  0E02               	movlw	2
  2913   0010BC  0100               	movlb	0	; () banked
  2914   0010BE  6FA1               	movwf	(??_main+1)& (0+255),b
  2915   0010C0  0E04               	movlw	4
  2916   0010C2  6FA0               	movwf	??_main& (0+255),b
  2917   0010C4  0EBA               	movlw	186
  2918   0010C6                     u4467:
  2919   0010C6  2EE8               	decfsz	wreg,f,c
  2920   0010C8  D7FE               	bra	u4467
  2921   0010CA  2FA0               	decfsz	??_main& (0+255),f,b
  2922   0010CC  D7FC               	bra	u4467
  2923   0010CE  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2924   0010D0  D7FA               	bra	u4467
  2925   0010D2  F000               	nop	
  2926   0010D4                     
  2927                           ;main.c: 774:                                     for (i = 0; i < 5; i++) {
  2928   0010D4  0E00               	movlw	0
  2929   0010D6  6E14               	movwf	(_i+1)^0,c
  2930   0010D8  0E00               	movlw	0
  2931   0010DA  6E13               	movwf	_i^0,c
  2932   0010DC                     l5915:
  2933   0010DC  5014               	movf	(_i+1)^0,w,c
  2934   0010DE  E109               	bnz	u4330
  2935   0010E0  0E05               	movlw	5
  2936   0010E2  5C13               	subwf	_i^0,w,c
  2937   0010E4  A0D8               	btfss	status,0,c
  2938   0010E6  EF77  F008         	goto	u4331
  2939   0010EA  EF79  F008         	goto	u4330
  2940   0010EE                     u4331:
  2941   0010EE  EF7B  F008         	goto	l5919
  2942   0010F2                     u4330:
  2943   0010F2  EF88  F008         	goto	l5925
  2944   0010F6                     l5919:
  2945                           
  2946                           ;main.c: 775:                                         Write1USART(Serial_Buffer_Out[i]);
  2947   0010F6  0E60               	movlw	low _Serial_Buffer_Out
  2948   0010F8  2413               	addwf	_i^0,w,c
  2949   0010FA  6ED9               	movwf	fsr2l,c
  2950   0010FC  0E00               	movlw	high _Serial_Buffer_Out
  2951   0010FE  2014               	addwfc	(_i+1)^0,w,c
  2952   001100  6EDA               	movwf	fsr2h,c
  2953   001102  50DF               	movf	indf2,w,c
  2954   001104  EC0F  F014         	call	_Write1USART
  2955   001108                     
  2956                           ;main.c: 776:                                     }
  2957   001108  4A13               	infsnz	_i^0,f,c
  2958   00110A  2A14               	incf	(_i+1)^0,f,c
  2959   00110C  EF6E  F008         	goto	l5915
  2960   001110                     l5925:
  2961                           
  2962                           ;main.c: 779:                                 flushOut();
  2963   001110  EC2D  F013         	call	_flushOut	;wreg free
  2964   001114  EF9E  F007         	goto	l5857
  2965   001118                     l5929:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;main.c: 816:                             if (Busy == 0) {
  2969   001118  502F               	movf	_Busy^0,w,c
  2970   00111A  A4D8               	btfss	status,2,c
  2971   00111C  EF92  F008         	goto	u4341
  2972   001120  EF94  F008         	goto	u4340
  2973   001124                     u4341:
  2974   001124  EFEC  F008         	goto	l5955
  2975   001128                     u4340:
  2976   001128                     
  2977                           ; BSR set to: 0
  2978                           ;main.c: 817:                                 Busy = 1;
  2979   001128  0E01               	movlw	1
  2980   00112A  6E2F               	movwf	_Busy^0,c
  2981   00112C                     
  2982                           ; BSR set to: 0
  2983                           ;main.c: 818:                                 vib_Time = Serial_Buffer[2];
  2984   00112C  C082  F02A         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2985                           
  2986                           ;main.c: 820:                                 switch (vib_Time) {
  2987   001130  EFBA  F008         	goto	l5947
  2988   001134                     l5935:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;main.c: 822:                                         Vmotor_Time = 1000;
  2992   001134  0E03               	movlw	3
  2993   001136  6E55               	movwf	(_Vmotor_Time+1)^0,c
  2994   001138  0EE8               	movlw	232
  2995   00113A  6E54               	movwf	_Vmotor_Time^0,c
  2996                           
  2997                           ;main.c: 823:                                         break;
  2998   00113C  EFDB  F008         	goto	l315
  2999   001140                     l5937:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;main.c: 827:                                         Vmotor_Time = 2000;
  3003   001140  0E07               	movlw	7
  3004   001142  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3005   001144  0ED0               	movlw	208
  3006   001146  6E54               	movwf	_Vmotor_Time^0,c
  3007                           
  3008                           ;main.c: 828:                                         vib_Time = 0x82;
  3009   001148  0E82               	movlw	130
  3010   00114A  6E2A               	movwf	_vib_Time^0,c	;volatile
  3011                           
  3012                           ;main.c: 829:                                         break;
  3013   00114C  EFDB  F008         	goto	l315
  3014   001150                     l5939:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 832:                                         Vmotor_Time = 3000;
  3018   001150  0E0B               	movlw	11
  3019   001152  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3020   001154  0EB8               	movlw	184
  3021   001156  6E54               	movwf	_Vmotor_Time^0,c
  3022                           
  3023                           ;main.c: 833:                                         break;
  3024   001158  EFDB  F008         	goto	l315
  3025   00115C                     l5941:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;main.c: 836:                                         Vmotor_Time = 4000;
  3029   00115C  0E0F               	movlw	15
  3030   00115E  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3031   001160  0EA0               	movlw	160
  3032   001162  6E54               	movwf	_Vmotor_Time^0,c
  3033                           
  3034                           ;main.c: 837:                                         break;
  3035   001164  EFDB  F008         	goto	l315
  3036   001168                     l5943:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;main.c: 840:                                         Vmotor_Time = 5000;
  3040   001168  0E13               	movlw	19
  3041   00116A  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3042   00116C  0E88               	movlw	136
  3043   00116E  6E54               	movwf	_Vmotor_Time^0,c
  3044                           
  3045                           ;main.c: 841:                                         break;
  3046   001170  EFDB  F008         	goto	l315
  3047   001174                     l5947:
  3048                           
  3049                           ; BSR set to: 0
  3050   001174  502A               	movf	_vib_Time^0,w,c	;volatile
  3051   001176  6FA0               	movwf	??_main& (0+255),b
  3052   001178  6BA1               	clrf	(??_main+1)& (0+255),b
  3053                           
  3054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3055                           ; Switch size 1, requested type "simple"
  3056                           ; Number of cases is 1, Range of values is 0 to 0
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            4     3 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061   00117A  51A1               	movf	(??_main+1)& (0+255),w,b
  3062   00117C  0A00               	xorlw	0	; case 0
  3063   00117E  B4D8               	btfsc	status,2,c
  3064   001180  EFC4  F008         	goto	l6321
  3065   001184  EFA0  F008         	goto	l5937
  3066   001188                     l6321:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ; Switch size 1, requested type "simple"
  3070                           ; Number of cases is 5, Range of values is 129 to 133
  3071                           ; switch strategies available:
  3072                           ; Name         Instructions Cycles
  3073                           ; simple_byte           16     9 (average)
  3074                           ;	Chosen strategy is simple_byte
  3075   001188  51A0               	movf	??_main& (0+255),w,b
  3076   00118A  0A81               	xorlw	129	; case 129
  3077   00118C  B4D8               	btfsc	status,2,c
  3078   00118E  EF9A  F008         	goto	l5935
  3079   001192  0A03               	xorlw	3	; case 130
  3080   001194  B4D8               	btfsc	status,2,c
  3081   001196  EFA0  F008         	goto	l5937
  3082   00119A  0A01               	xorlw	1	; case 131
  3083   00119C  B4D8               	btfsc	status,2,c
  3084   00119E  EFA8  F008         	goto	l5939
  3085   0011A2  0A07               	xorlw	7	; case 132
  3086   0011A4  B4D8               	btfsc	status,2,c
  3087   0011A6  EFAE  F008         	goto	l5941
  3088   0011AA  0A01               	xorlw	1	; case 133
  3089   0011AC  B4D8               	btfsc	status,2,c
  3090   0011AE  EFB4  F008         	goto	l5943
  3091   0011B2  EFA0  F008         	goto	l5937
  3092   0011B6                     l315:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;main.c: 843:                                 INTCONbits.GIE = 0;
  3096   0011B6  9EF2               	bcf	242,7,c	;volatile
  3097   0011B8                     
  3098                           ; BSR set to: 0
  3099                           ;main.c: 844:                                 write_i2c(0x0040, vib_Time);
  3100   0011B8  0E40               	movlw	64
  3101   0011BA  6E4A               	movwf	write_i2c@address^0,c
  3102   0011BC  0E00               	movlw	0
  3103   0011BE  6E4B               	movwf	(write_i2c@address+1)^0,c
  3104   0011C0  0E00               	movlw	0
  3105   0011C2  6E4C               	movwf	(write_i2c@address+2)^0,c
  3106   0011C4  0E00               	movlw	0
  3107   0011C6  6E4D               	movwf	(write_i2c@address+3)^0,c
  3108   0011C8  C02A  F04E         	movff	_vib_Time,write_i2c@data	;volatile
  3109   0011CC  6A4F               	clrf	(write_i2c@data+1)^0,c
  3110   0011CE  ECAD  F012         	call	_write_i2c	;wreg free
  3111   0011D2                     
  3112                           ;main.c: 845:                                 INTCONbits.GIE = 1;
  3113   0011D2  8EF2               	bsf	242,7,c	;volatile
  3114   0011D4                     
  3115                           ;main.c: 847:                                 Busy = 0;
  3116   0011D4  0E00               	movlw	0
  3117   0011D6  6E2F               	movwf	_Busy^0,c
  3118   0011D8                     l5955:
  3119                           
  3120                           ;main.c: 852:                             if (Busy == 0) {
  3121   0011D8  502F               	movf	_Busy^0,w,c
  3122   0011DA  A4D8               	btfss	status,2,c
  3123   0011DC  EFF2  F008         	goto	u4351
  3124   0011E0  EFF4  F008         	goto	u4350
  3125   0011E4                     u4351:
  3126   0011E4  EF2E  F009         	goto	l5975
  3127   0011E8                     u4350:
  3128   0011E8                     
  3129                           ;main.c: 853:                                 Busy = 1;
  3130   0011E8  0E01               	movlw	1
  3131   0011EA  6E2F               	movwf	_Busy^0,c
  3132   0011EC                     
  3133                           ;main.c: 854:                                 delay_motor_stop_time = Serial_Buffer[2];
  3134   0011EC  C082  F029         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  3135   0011F0                     
  3136                           ;main.c: 855:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  3137   0011F0  C029  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  3138   0011F4  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  3139   0011F6                     
  3140                           ;main.c: 857:                                 INTCONbits.GIE = 0;
  3141   0011F6  9EF2               	bcf	242,7,c	;volatile
  3142   0011F8                     
  3143                           ;main.c: 858:                                 write_i2c(0x0050, delay_motor_stop_time);
  3144   0011F8  0E50               	movlw	80
  3145   0011FA  6E4A               	movwf	write_i2c@address^0,c
  3146   0011FC  0E00               	movlw	0
  3147   0011FE  6E4B               	movwf	(write_i2c@address+1)^0,c
  3148   001200  0E00               	movlw	0
  3149   001202  6E4C               	movwf	(write_i2c@address+2)^0,c
  3150   001204  0E00               	movlw	0
  3151   001206  6E4D               	movwf	(write_i2c@address+3)^0,c
  3152   001208  C029  F04E         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  3153   00120C  6A4F               	clrf	(write_i2c@data+1)^0,c
  3154   00120E  ECAD  F012         	call	_write_i2c	;wreg free
  3155   001212                     
  3156                           ;main.c: 859:                                 INTCONbits.GIE = 1;
  3157   001212  8EF2               	bsf	242,7,c	;volatile
  3158   001214  EF9E  F007         	goto	l5857
  3159   001218                     l5973:
  3160   001218  0100               	movlb	0	; () banked
  3161   00121A  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  3162   00121C  6FA0               	movwf	??_main& (0+255),b
  3163   00121E  6BA1               	clrf	(??_main+1)& (0+255),b
  3164                           
  3165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 1, Range of values is 0 to 0
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            4     3 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172   001220  51A1               	movf	(??_main+1)& (0+255),w,b
  3173   001222  0A00               	xorlw	0	; case 0
  3174   001224  B4D8               	btfsc	status,2,c
  3175   001226  EF17  F009         	goto	l6323
  3176   00122A  EF2E  F009         	goto	l5975
  3177   00122E                     l6323:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ; Switch size 1, requested type "simple"
  3181                           ; Number of cases is 5, Range of values is 35 to 102
  3182                           ; switch strategies available:
  3183                           ; Name         Instructions Cycles
  3184                           ; simple_byte           16     9 (average)
  3185                           ;	Chosen strategy is simple_byte
  3186   00122E  51A0               	movf	??_main& (0+255),w,b
  3187   001230  0A23               	xorlw	35	; case 35
  3188   001232  B4D8               	btfsc	status,2,c
  3189   001234  EFA2  F007         	goto	l5859
  3190   001238  0A67               	xorlw	103	; case 68
  3191   00123A  B4D8               	btfsc	status,2,c
  3192   00123C  EF15  F007         	goto	l5813
  3193   001240  0A15               	xorlw	21	; case 81
  3194   001242  B4D8               	btfsc	status,2,c
  3195   001244  EF0E  F008         	goto	l5889
  3196   001248  0A34               	xorlw	52	; case 101
  3197   00124A  B4D8               	btfsc	status,2,c
  3198   00124C  EF8C  F008         	goto	l5929
  3199   001250  0A03               	xorlw	3	; case 102
  3200   001252  B4D8               	btfsc	status,2,c
  3201   001254  EFEC  F008         	goto	l5955
  3202   001258  EF2E  F009         	goto	l5975
  3203   00125C                     l5975:
  3204                           
  3205                           ;main.c: 868:                     Serial_Flag = 0;
  3206   00125C  0E00               	movlw	0
  3207   00125E  6E33               	movwf	_Serial_Flag^0,c
  3208                           
  3209                           ;main.c: 869:                     Serial_GData = 0;
  3210   001260  0E00               	movlw	0
  3211   001262  6E32               	movwf	_Serial_GData^0,c
  3212                           
  3213                           ;main.c: 870:                     OpMode = MANUAL_MODE;
  3214   001264  0E00               	movlw	0
  3215   001266  6E2C               	movwf	_OpMode^0,c	;volatile
  3216                           
  3217                           ;main.c: 871:                 } else {
  3218   001268  EFAA  F004         	goto	l5675
  3219   00126C                     l5977:
  3220                           
  3221                           ;main.c: 872:                     OpMode = MANUAL_MODE;
  3222   00126C  0E00               	movlw	0
  3223   00126E  6E2C               	movwf	_OpMode^0,c	;volatile
  3224   001270  EFAA  F004         	goto	l5675
  3225   001274                     l5979:
  3226   001274  502C               	movf	_OpMode^0,w,c	;volatile
  3227   001276  0100               	movlb	0	; () banked
  3228   001278  6FA0               	movwf	??_main& (0+255),b
  3229   00127A  6BA1               	clrf	(??_main+1)& (0+255),b
  3230                           
  3231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3232                           ; Switch size 1, requested type "simple"
  3233                           ; Number of cases is 1, Range of values is 0 to 0
  3234                           ; switch strategies available:
  3235                           ; Name         Instructions Cycles
  3236                           ; simple_byte            4     3 (average)
  3237                           ;	Chosen strategy is simple_byte
  3238   00127C  51A1               	movf	(??_main+1)& (0+255),w,b
  3239   00127E  0A00               	xorlw	0	; case 0
  3240   001280  B4D8               	btfsc	status,2,c
  3241   001282  EF45  F009         	goto	l6325
  3242   001286  EFAA  F004         	goto	l5675
  3243   00128A                     l6325:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 2, Range of values is 0 to 2
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte            7     4 (average)
  3251                           ;	Chosen strategy is simple_byte
  3252   00128A  51A0               	movf	??_main& (0+255),w,b
  3253   00128C  0A00               	xorlw	0	; case 0
  3254   00128E  B4D8               	btfsc	status,2,c
  3255   001290  EFBD  F004         	goto	l248
  3256   001294  0A02               	xorlw	2	; case 2
  3257   001296  B4D8               	btfsc	status,2,c
  3258   001298  EF0B  F007         	goto	l5809
  3259   00129C  EFAA  F004         	goto	l5675
  3260   0012A0  EF87  F001         	goto	start
  3261   0012A4                     __end_of_main:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _read_i2c *****************
  3265 ;; Defined at:
  3266 ;;		line 120 in file "i2c.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  address         4   22[COMRAM] long 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  read_byte       2   26[COMRAM] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2   22[COMRAM] int 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;Total ram usage:        6 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 4
  3287 ;; This function calls:
  3288 ;;		___aldiv
  3289 ;;		_i2c_Address
  3290 ;;		_i2c_Read
  3291 ;;		_i2c_Restart
  3292 ;;		_i2c_Start
  3293 ;;		_i2c_Stop
  3294 ;;		_i2c_Write
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text1
  3301   002432                     __ptext1:
  3302                           	callstack 0
  3303   002432                     _read_i2c:
  3304                           	callstack 26
  3305   002432                     
  3306                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  3307   002432  EC4E  F014         	call	_i2c_Start	;wreg free
  3308                           
  3309                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  3310   002436  0E00               	movlw	0
  3311   002438  6E3D               	movwf	i2c_Address@mode^0,c
  3312   00243A  0EA0               	movlw	160
  3313   00243C  EC25  F014         	call	_i2c_Address
  3314                           
  3315                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  3316   002440  C04A  F03C         	movff	read_i2c@address,___aldiv@dividend
  3317   002444  C04B  F03D         	movff	read_i2c@address+1,___aldiv@dividend+1
  3318   002448  C04C  F03E         	movff	read_i2c@address+2,___aldiv@dividend+2
  3319   00244C  C04D  F03F         	movff	read_i2c@address+3,___aldiv@dividend+3
  3320   002450  0E00               	movlw	0
  3321   002452  6E40               	movwf	___aldiv@divisor^0,c
  3322   002454  0E01               	movlw	1
  3323   002456  6E41               	movwf	(___aldiv@divisor+1)^0,c
  3324   002458  0E00               	movlw	0
  3325   00245A  6E42               	movwf	(___aldiv@divisor+2)^0,c
  3326   00245C  0E00               	movlw	0
  3327   00245E  6E43               	movwf	(___aldiv@divisor+3)^0,c
  3328   002460  ECE6  F00D         	call	___aldiv	;wreg free
  3329   002464  503C               	movf	?___aldiv^0,w,c
  3330   002466  EC36  F014         	call	_i2c_Write
  3331                           
  3332                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  3333   00246A  504A               	movf	read_i2c@address^0,w,c
  3334   00246C  EC36  F014         	call	_i2c_Write
  3335                           
  3336                           ;i2c.c: 128:     i2c_Restart();
  3337   002470  EC46  F014         	call	_i2c_Restart	;wreg free
  3338                           
  3339                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  3340   002474  0E01               	movlw	1
  3341   002476  6E3D               	movwf	i2c_Address@mode^0,c
  3342   002478  0EA0               	movlw	160
  3343   00247A  EC25  F014         	call	_i2c_Address
  3344                           
  3345                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  3346   00247E  0E00               	movlw	0
  3347   002480  EC4A  F013         	call	_i2c_Read
  3348   002484  C03D  F04E         	movff	?_i2c_Read,read_i2c@read_byte
  3349   002488  C03E  F04F         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  3350                           
  3351                           ;i2c.c: 134:     i2c_Stop();
  3352   00248C  EC4A  F014         	call	_i2c_Stop	;wreg free
  3353   002490                     
  3354                           ;i2c.c: 135:     return (read_byte);
  3355   002490  C04E  F04A         	movff	read_i2c@read_byte,?_read_i2c
  3356   002494  C04F  F04B         	movff	read_i2c@read_byte+1,?_read_i2c+1
  3357   002498  0012               	return		;funcret
  3358   00249A                     __end_of_read_i2c:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _i2c_Restart *****************
  3362 ;; Defined at:
  3363 ;;		line 56 in file "i2c.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 3
  3384 ;; This function calls:
  3385 ;;		_i2c_Wait
  3386 ;; This function is called by:
  3387 ;;		_read_i2c
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text2
  3392   00288C                     __ptext2:
  3393                           	callstack 0
  3394   00288C                     _i2c_Restart:
  3395                           	callstack 26
  3396   00288C                     
  3397                           ;i2c.c: 57:     i2c_Wait();
  3398   00288C  ECC0  F013         	call	_i2c_Wait	;wreg free
  3399   002890                     
  3400                           ;i2c.c: 58:     RSEN2 = 1;
  3401   002890  826B               	bsf	3947,1,c	;volatile
  3402   002892  0012               	return		;funcret
  3403   002894                     __end_of_i2c_Restart:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _i2c_Read *****************
  3407 ;; Defined at:
  3408 ;;		line 89 in file "i2c.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  ack             1    wreg     unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  ack             1   11[COMRAM] unsigned char 
  3413 ;;  i2cReadData     1   12[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  2    9[COMRAM] int 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        4 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 3
  3430 ;; This function calls:
  3431 ;;		_i2c_Wait
  3432 ;; This function is called by:
  3433 ;;		_read_i2c
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text3
  3438   002694                     __ptext3:
  3439                           	callstack 0
  3440   002694                     _i2c_Read:
  3441                           	callstack 26
  3442                           
  3443                           ;incstack = 0
  3444                           ;i2c_Read@ack stored from wreg
  3445   002694  6E3F               	movwf	i2c_Read@ack^0,c
  3446   002696                     
  3447                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  3448   002696  ECC0  F013         	call	_i2c_Wait	;wreg free
  3449   00269A                     
  3450                           ;i2c.c: 96:     RCEN2 = 1;
  3451   00269A  866B               	bsf	3947,3,c	;volatile
  3452                           
  3453                           ;i2c.c: 97:     i2c_Wait();
  3454   00269C  ECC0  F013         	call	_i2c_Wait	;wreg free
  3455   0026A0                     
  3456                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  3457   0026A0  CF6F F040          	movff	3951,i2c_Read@i2cReadData	;volatile
  3458                           
  3459                           ;i2c.c: 99:     i2c_Wait();
  3460   0026A4  ECC0  F013         	call	_i2c_Wait	;wreg free
  3461   0026A8                     
  3462                           ;i2c.c: 100:     if (ack)
  3463   0026A8  503F               	movf	i2c_Read@ack^0,w,c
  3464   0026AA  B4D8               	btfsc	status,2,c
  3465   0026AC  EF5A  F013         	goto	u3741
  3466   0026B0  EF5C  F013         	goto	u3740
  3467   0026B4                     u3741:
  3468   0026B4  EF5F  F013         	goto	l632
  3469   0026B8                     u3740:
  3470   0026B8                     
  3471                           ;i2c.c: 101:         ACKDT2 = 0;
  3472   0026B8  9A6B               	bcf	3947,5,c	;volatile
  3473   0026BA  EF60  F013         	goto	l633
  3474   0026BE                     l632:
  3475                           
  3476                           ;i2c.c: 103:         ACKDT2 = 1;
  3477   0026BE  8A6B               	bsf	3947,5,c	;volatile
  3478   0026C0                     l633:
  3479                           
  3480                           ;i2c.c: 104:     ACKEN2 = 1;
  3481   0026C0  886B               	bsf	3947,4,c	;volatile
  3482                           
  3483                           ;i2c.c: 106:     return ( i2cReadData);
  3484   0026C2  C040  F03D         	movff	i2c_Read@i2cReadData,?_i2c_Read
  3485   0026C6  6A3E               	clrf	(?_i2c_Read+1)^0,c
  3486   0026C8  0012               	return		;funcret
  3487   0026CA                     __end_of_i2c_Read:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _pwm_set *****************
  3491 ;; Defined at:
  3492 ;;		line 196 in file "main.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  duty            2    8[COMRAM] unsigned short 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;Total ram usage:        4 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 2
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text4
  3521   002700                     __ptext4:
  3522                           	callstack 0
  3523   002700                     _pwm_set:
  3524                           	callstack 28
  3525   002700                     
  3526                           ;main.c: 197:     CCP1CONbits.DC1B = (uint8_t)(duty & 0x0003);
  3527   002700  C03C  F03E         	movff	pwm_set@duty,??_pwm_set
  3528   002704  0E03               	movlw	3
  3529   002706  163E               	andwf	??_pwm_set^0,f,c
  3530   002708  3A3E               	swapf	??_pwm_set^0,f,c
  3531   00270A  50BB               	movf	187,w,c	;volatile
  3532   00270C  183E               	xorwf	??_pwm_set^0,w,c
  3533   00270E  0BCF               	andlw	-49
  3534   002710  183E               	xorwf	??_pwm_set^0,w,c
  3535   002712  6EBB               	movwf	187,c	;volatile
  3536                           
  3537                           ;main.c: 198:     CCPR1L = (uint8_t)(duty >> 2);
  3538   002714  C03C  F03E         	movff	pwm_set@duty,??_pwm_set
  3539   002718  C03D  F03F         	movff	pwm_set@duty+1,??_pwm_set+1
  3540   00271C  90D8               	bcf	status,0,c
  3541   00271E  323F               	rrcf	(??_pwm_set+1)^0,f,c
  3542   002720  323E               	rrcf	??_pwm_set^0,f,c
  3543   002722  90D8               	bcf	status,0,c
  3544   002724  323F               	rrcf	(??_pwm_set+1)^0,f,c
  3545   002726  323E               	rrcf	??_pwm_set^0,f,c
  3546   002728  503E               	movf	??_pwm_set^0,w,c
  3547   00272A  6EBC               	movwf	188,c	;volatile
  3548   00272C  0012               	return		;funcret
  3549   00272E                     __end_of_pwm_set:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _initUSART *****************
  3553 ;; Defined at:
  3554 ;;		line 20 in file "usart.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 2
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text5
  3583   00275A                     __ptext5:
  3584                           	callstack 0
  3585   00275A                     _initUSART:
  3586                           	callstack 28
  3587   00275A                     
  3588                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  3589   00275A  9C94               	bcf	148,6,c	;volatile
  3590                           
  3591                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  3592   00275C  8E94               	bsf	148,7,c	;volatile
  3593                           
  3594                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  3595   00275E  98AD               	bcf	173,4,c	;volatile
  3596                           
  3597                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  3598   002760  9CAD               	bcf	173,6,c	;volatile
  3599                           
  3600                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  3601   002762  8AAD               	bsf	173,5,c	;volatile
  3602                           
  3603                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  3604   002764  9CAC               	bcf	172,6,c	;volatile
  3605                           
  3606                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  3607   002766  88AC               	bsf	172,4,c	;volatile
  3608                           
  3609                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  3610   002768  9EAD               	bcf	173,7,c	;volatile
  3611                           
  3612                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  3613   00276A  86AC               	bsf	172,3,c	;volatile
  3614                           
  3615                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  3616   00276C  8EAC               	bsf	172,7,c	;volatile
  3617                           
  3618                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  3619   00276E  967E               	bcf	126,3,c	;volatile
  3620                           
  3621                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  3622   002770  84AD               	bsf	173,2,c	;volatile
  3623                           
  3624                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  3625   002772  8A9D               	bsf	157,5,c	;volatile
  3626                           
  3627                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  3628   002774  989D               	bcf	157,4,c	;volatile
  3629   002776                     
  3630                           ;usart.c: 39:     SPBRG1 = 25;
  3631   002776  0E19               	movlw	25
  3632   002778  6EB0               	movwf	176,c	;volatile
  3633                           
  3634                           ;usart.c: 40:     SPBRGH1 = 0;
  3635   00277A  0E00               	movlw	0
  3636   00277C  6E7F               	movwf	127,c	;volatile
  3637   00277E  0012               	return		;funcret
  3638   002780                     __end_of_initUSART:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _initMotor *****************
  3642 ;; Defined at:
  3643 ;;		line 21 in file "MotorDriver.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 2
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text6
  3672   00285E                     __ptext6:
  3673                           	callstack 0
  3674   00285E                     _initMotor:
  3675                           	callstack 28
  3676   00285E                     
  3677                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  3678   00285E  0EC7               	movlw	199
  3679   002860  6E77               	movwf	119,c	;volatile
  3680   002862                     
  3681                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  3682   002862  9679               	bcf	121,3,c	;volatile
  3683   002864                     
  3684                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  3685   002864  8C79               	bsf	121,6,c	;volatile
  3686                           
  3687                           ;MotorDriver.c: 25:     T4CON = 0x00;
  3688   002866  0E00               	movlw	0
  3689   002868  6E76               	movwf	118,c	;volatile
  3690   00286A  0012               	return		;funcret
  3691   00286C                     __end_of_initMotor:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function _init *****************
  3695 ;; Defined at:
  3696 ;;		line 18 in file "IO.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 2
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text7
  3725   0023C0                     __ptext7:
  3726                           	callstack 0
  3727   0023C0                     _init:
  3728                           	callstack 28
  3729   0023C0                     
  3730                           ;IO.c: 19:     TRISA = 0xFB;
  3731   0023C0  0EFB               	movlw	251
  3732   0023C2  6E92               	movwf	146,c	;volatile
  3733   0023C4                     
  3734                           ;IO.c: 20:     TRISB = 0XFF;
  3735   0023C4  6893               	setf	147,c	;volatile
  3736                           
  3737                           ;IO.c: 21:     TRISC = 0X84;
  3738   0023C6  0E84               	movlw	132
  3739   0023C8  6E94               	movwf	148,c	;volatile
  3740                           
  3741                           ;IO.c: 22:     TRISD = 0XC0;
  3742   0023CA  0EC0               	movlw	192
  3743   0023CC  6E95               	movwf	149,c	;volatile
  3744                           
  3745                           ;IO.c: 23:     TRISE = 0X00;
  3746   0023CE  0E00               	movlw	0
  3747   0023D0  6E96               	movwf	150,c	;volatile
  3748                           
  3749                           ;IO.c: 24:     TRISF = 0X00;
  3750   0023D2  0E00               	movlw	0
  3751   0023D4  6E97               	movwf	151,c	;volatile
  3752                           
  3753                           ;IO.c: 25:     TRISG = 0X05;
  3754   0023D6  0E05               	movlw	5
  3755   0023D8  6E98               	movwf	152,c	;volatile
  3756   0023DA                     
  3757                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3758   0023DA  9EC2               	bcf	194,7,c	;volatile
  3759   0023DC                     
  3760                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3761   0023DC  9CC2               	bcf	194,6,c	;volatile
  3762   0023DE                     
  3763                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3764   0023DE  90C2               	bcf	194,0,c	;volatile
  3765   0023E0                     
  3766                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3767   0023E0  8EC1               	bsf	193,7,c	;volatile
  3768   0023E2                     
  3769                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3770   0023E2  9CC1               	bcf	193,6,c	;volatile
  3771   0023E4                     
  3772                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3773   0023E4  9AC1               	bcf	193,5,c	;volatile
  3774   0023E6                     
  3775                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3776   0023E6  88C1               	bsf	193,4,c	;volatile
  3777   0023E8                     
  3778                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3779   0023E8  96C1               	bcf	193,3,c	;volatile
  3780   0023EA                     
  3781                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3782   0023EA  84C1               	bsf	193,2,c	;volatile
  3783   0023EC                     
  3784                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3785   0023EC  92C1               	bcf	193,1,c	;volatile
  3786   0023EE                     
  3787                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3788   0023EE  90C1               	bcf	193,0,c	;volatile
  3789   0023F0                     
  3790                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3791   0023F0  88C0               	bsf	192,4,c	;volatile
  3792   0023F2                     
  3793                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3794   0023F2  90C1               	bcf	193,0,c	;volatile
  3795   0023F4                     
  3796                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3797   0023F4  82C1               	bsf	193,1,c	;volatile
  3798   0023F6                     
  3799                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3800   0023F6  84C1               	bsf	193,2,c	;volatile
  3801   0023F8                     
  3802                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3803   0023F8  86C1               	bsf	193,3,c	;volatile
  3804   0023FA                     
  3805                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3806   0023FA  88C1               	bsf	193,4,c	;volatile
  3807   0023FC                     
  3808                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3809   0023FC  8EC1               	bsf	193,7,c	;volatile
  3810   0023FE                     
  3811                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3812   0023FE  98C0               	bcf	192,4,c	;volatile
  3813   002400                     
  3814                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3815   002400  8EF2               	bsf	242,7,c	;volatile
  3816                           
  3817                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3818   002402  0E03               	movlw	3
  3819   002404  12D3               	iorwf	211,f,c	;volatile
  3820                           
  3821                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3822   002406  0E70               	movlw	112
  3823   002408  12D3               	iorwf	211,f,c	;volatile
  3824                           
  3825                           ;IO.c: 68:     ADRES = 0;
  3826   00240A  0E00               	movlw	0
  3827   00240C  6EC4               	movwf	196,c	;volatile
  3828   00240E  0E00               	movlw	0
  3829   002410  6EC3               	movwf	195,c	;volatile
  3830   002412                     
  3831                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3832   002412  94C2               	bcf	194,2,c	;volatile
  3833   002414                     
  3834                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3835   002414  96C2               	bcf	194,3,c	;volatile
  3836   002416                     
  3837                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3838   002416  98C2               	bcf	194,4,c	;volatile
  3839   002418                     
  3840                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3841   002418  9AC2               	bcf	194,5,c	;volatile
  3842   00241A                     
  3843                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3844   00241A  8CC1               	bsf	193,6,c	;volatile
  3845   00241C                     
  3846                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3847   00241C  80C2               	bsf	194,0,c	;volatile
  3848   00241E                     
  3849                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3850   00241E  82C2               	bsf	194,1,c	;volatile
  3851   002420                     l703:
  3852                           
  3853                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3854   002420  B2C2               	btfsc	194,1,c	;volatile
  3855   002422  EF15  F012         	goto	u2181
  3856   002426  EF17  F012         	goto	u2180
  3857   00242A                     u2181:
  3858   00242A  EF10  F012         	goto	l703
  3859   00242E                     u2180:
  3860   00242E                     
  3861                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3862   00242E  9CC1               	bcf	193,6,c	;volatile
  3863   002430  0012               	return		;funcret
  3864   002432                     __end_of_init:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _i2c_Init *****************
  3868 ;; Defined at:
  3869 ;;		line 25 in file "i2c.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text8
  3898   002808                     __ptext8:
  3899                           	callstack 0
  3900   002808                     _i2c_Init:
  3901                           	callstack 28
  3902   002808                     
  3903                           ;i2c.c: 29:     TRISD5 = 1;
  3904   002808  8A95               	bsf	3989,5,c	;volatile
  3905                           
  3906                           ;i2c.c: 30:     TRISD6 = 1;
  3907   00280A  8C95               	bsf	3989,6,c	;volatile
  3908   00280C                     
  3909                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3910   00280C  0E28               	movlw	40
  3911   00280E  6E6C               	movwf	108,c	;volatile
  3912                           
  3913                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3914   002810  0E00               	movlw	0
  3915   002812  6E6B               	movwf	107,c	;volatile
  3916                           
  3917                           ;i2c.c: 35:     SSP2ADD = 39;
  3918   002814  0E27               	movlw	39
  3919   002816  6E6E               	movwf	110,c	;volatile
  3920                           
  3921                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3922   002818  0EC0               	movlw	192
  3923   00281A  6E6D               	movwf	109,c	;volatile
  3924   00281C  0012               	return		;funcret
  3925   00281E                     __end_of_i2c_Init:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _flush *****************
  3929 ;; Defined at:
  3930 ;;		line 1337 in file "main.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  i               2    8[COMRAM] int 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;Total ram usage:        2 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text9
  3959   002620                     __ptext9:
  3960                           	callstack 0
  3961   002620                     _flush:
  3962                           	callstack 28
  3963   002620                     
  3964                           ;main.c: 1338:     int i;;main.c: 1340:     for (i = 0; i < 16; i++) {
  3965   002620  0E00               	movlw	0
  3966   002622  6E3D               	movwf	(flush@i+1)^0,c
  3967   002624  0E00               	movlw	0
  3968   002626  6E3C               	movwf	flush@i^0,c
  3969   002628                     l4087:
  3970                           
  3971                           ;main.c: 1341:         Serial_Buffer[i] = 0x00;
  3972   002628  0E80               	movlw	low _Serial_Buffer
  3973   00262A  243C               	addwf	flush@i^0,w,c
  3974   00262C  6ED9               	movwf	fsr2l,c
  3975   00262E  0E00               	movlw	high _Serial_Buffer
  3976   002630  203D               	addwfc	(flush@i+1)^0,w,c
  3977   002632  6EDA               	movwf	fsr2h,c
  3978   002634  0E00               	movlw	0
  3979   002636  6EDF               	movwf	indf2,c
  3980   002638                     
  3981                           ;main.c: 1342:     }
  3982   002638  4A3C               	infsnz	flush@i^0,f,c
  3983   00263A  2A3D               	incf	(flush@i+1)^0,f,c
  3984   00263C  BE3D               	btfsc	(flush@i+1)^0,7,c
  3985   00263E  EF2A  F013         	goto	u2761
  3986   002642  503D               	movf	(flush@i+1)^0,w,c
  3987   002644  E109               	bnz	u2760
  3988   002646  0E10               	movlw	16
  3989   002648  5C3C               	subwf	flush@i^0,w,c
  3990   00264A  A0D8               	btfss	status,0,c
  3991   00264C  EF2A  F013         	goto	u2761
  3992   002650  EF2C  F013         	goto	u2760
  3993   002654                     u2761:
  3994   002654  EF14  F013         	goto	l4087
  3995   002658                     u2760:
  3996   002658  0012               	return		;funcret
  3997   00265A                     __end_of_flush:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _WriteSTLED316SVibMode *****************
  4001 ;; Defined at:
  4002 ;;		line 244 in file "Display.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  dc_reg          2   14[COMRAM] unsigned int 
  4005 ;;  v_mode          1   16[COMRAM] unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		_STLED316s_SPI_SendData
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text10
  4032   001AAC                     __ptext10:
  4033                           	callstack 0
  4034   001AAC                     _WriteSTLED316SVibMode:
  4035                           	callstack 27
  4036   001AAC                     
  4037                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  4038   001AAC  988B               	bcf	139,4,c	;volatile
  4039   001AAE                     
  4040                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  4041   001AAE  0E00               	movlw	0
  4042   001AB0  ECA0  F011         	call	_STLED316s_SPI_SendData
  4043   001AB4                     
  4044                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  4045   001AB4  888B               	bsf	139,4,c	;volatile
  4046   001AB6                     
  4047                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  4048   001AB6  988B               	bcf	139,4,c	;volatile
  4049                           
  4050                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  4051   001AB8  0E00               	movlw	0
  4052   001ABA  ECA0  F011         	call	_STLED316s_SPI_SendData
  4053   001ABE                     
  4054                           ;Display.c: 261:     if (v_mode == 1 && dc_reg == 0x01) {
  4055   001ABE  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4056   001AC0  A4D8               	btfss	status,2,c
  4057   001AC2  EF65  F00D         	goto	u2241
  4058   001AC6  EF67  F00D         	goto	u2240
  4059   001ACA                     u2241:
  4060   001ACA  EF78  F00D         	goto	l3739
  4061   001ACE                     u2240:
  4062   001ACE  0442               	decf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4063   001AD0  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4064   001AD2  A4D8               	btfss	status,2,c
  4065   001AD4  EF6E  F00D         	goto	u2251
  4066   001AD8  EF70  F00D         	goto	u2250
  4067   001ADC                     u2251:
  4068   001ADC  EF78  F00D         	goto	l3739
  4069   001AE0                     u2250:
  4070   001AE0                     
  4071                           ;Display.c: 262:         STLED316s_SPI_SendData(0x3E);
  4072   001AE0  0E3E               	movlw	62
  4073   001AE2  ECA0  F011         	call	_STLED316s_SPI_SendData
  4074                           
  4075                           ;Display.c: 263:         STLED316s_SPI_SendData(0x86);
  4076   001AE6  0E86               	movlw	134
  4077   001AE8  ECA0  F011         	call	_STLED316s_SPI_SendData
  4078                           
  4079                           ;Display.c: 264:     }
  4080   001AEC  EFDF  F00D         	goto	l3763
  4081   001AF0                     l3739:
  4082   001AF0  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4083   001AF2  A4D8               	btfss	status,2,c
  4084   001AF4  EF7E  F00D         	goto	u2261
  4085   001AF8  EF80  F00D         	goto	u2260
  4086   001AFC                     u2261:
  4087   001AFC  EF92  F00D         	goto	l3745
  4088   001B00                     u2260:
  4089   001B00  0E02               	movlw	2
  4090   001B02  1842               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4091   001B04  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4092   001B06  A4D8               	btfss	status,2,c
  4093   001B08  EF88  F00D         	goto	u2271
  4094   001B0C  EF8A  F00D         	goto	u2270
  4095   001B10                     u2271:
  4096   001B10  EF92  F00D         	goto	l3745
  4097   001B14                     u2270:
  4098   001B14                     
  4099                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  4100   001B14  0E3E               	movlw	62
  4101   001B16  ECA0  F011         	call	_STLED316s_SPI_SendData
  4102                           
  4103                           ;Display.c: 267:         STLED316s_SPI_SendData(0xDB);
  4104   001B1A  0EDB               	movlw	219
  4105   001B1C  ECA0  F011         	call	_STLED316s_SPI_SendData
  4106                           
  4107                           ;Display.c: 268:     }
  4108   001B20  EFDF  F00D         	goto	l3763
  4109   001B24                     l3745:
  4110   001B24  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4111   001B26  A4D8               	btfss	status,2,c
  4112   001B28  EF98  F00D         	goto	u2281
  4113   001B2C  EF9A  F00D         	goto	u2280
  4114   001B30                     u2281:
  4115   001B30  EFAC  F00D         	goto	l3751
  4116   001B34                     u2280:
  4117   001B34  0E03               	movlw	3
  4118   001B36  1842               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4119   001B38  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4120   001B3A  A4D8               	btfss	status,2,c
  4121   001B3C  EFA2  F00D         	goto	u2291
  4122   001B40  EFA4  F00D         	goto	u2290
  4123   001B44                     u2291:
  4124   001B44  EFAC  F00D         	goto	l3751
  4125   001B48                     u2290:
  4126   001B48                     
  4127                           ;Display.c: 270:         STLED316s_SPI_SendData(0x3E);
  4128   001B48  0E3E               	movlw	62
  4129   001B4A  ECA0  F011         	call	_STLED316s_SPI_SendData
  4130                           
  4131                           ;Display.c: 271:         STLED316s_SPI_SendData(0xCF);
  4132   001B4E  0ECF               	movlw	207
  4133   001B50  ECA0  F011         	call	_STLED316s_SPI_SendData
  4134                           
  4135                           ;Display.c: 272:     }
  4136   001B54  EFDF  F00D         	goto	l3763
  4137   001B58                     l3751:
  4138   001B58  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4139   001B5A  A4D8               	btfss	status,2,c
  4140   001B5C  EFB2  F00D         	goto	u2301
  4141   001B60  EFB4  F00D         	goto	u2300
  4142   001B64                     u2301:
  4143   001B64  EFC6  F00D         	goto	l3757
  4144   001B68                     u2300:
  4145   001B68  0E04               	movlw	4
  4146   001B6A  1842               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4147   001B6C  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4148   001B6E  A4D8               	btfss	status,2,c
  4149   001B70  EFBC  F00D         	goto	u2311
  4150   001B74  EFBE  F00D         	goto	u2310
  4151   001B78                     u2311:
  4152   001B78  EFC6  F00D         	goto	l3757
  4153   001B7C                     u2310:
  4154   001B7C                     
  4155                           ;Display.c: 274:         STLED316s_SPI_SendData(0x3E);
  4156   001B7C  0E3E               	movlw	62
  4157   001B7E  ECA0  F011         	call	_STLED316s_SPI_SendData
  4158                           
  4159                           ;Display.c: 275:         STLED316s_SPI_SendData(0xE6);
  4160   001B82  0EE6               	movlw	230
  4161   001B84  ECA0  F011         	call	_STLED316s_SPI_SendData
  4162                           
  4163                           ;Display.c: 276:     }
  4164   001B88  EFDF  F00D         	goto	l3763
  4165   001B8C                     l3757:
  4166   001B8C  5044               	movf	WriteSTLED316SVibMode@v_mode^0,w,c
  4167   001B8E  A4D8               	btfss	status,2,c
  4168   001B90  EFCC  F00D         	goto	u2321
  4169   001B94  EFCE  F00D         	goto	u2320
  4170   001B98                     u2321:
  4171   001B98  EFDF  F00D         	goto	l560
  4172   001B9C                     u2320:
  4173   001B9C  5042               	movf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4174   001B9E  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4175   001BA0  A4D8               	btfss	status,2,c
  4176   001BA2  EFD5  F00D         	goto	u2331
  4177   001BA6  EFD7  F00D         	goto	u2330
  4178   001BAA                     u2331:
  4179   001BAA  EFDF  F00D         	goto	l560
  4180   001BAE                     u2330:
  4181   001BAE                     
  4182                           ;Display.c: 278:         STLED316s_SPI_SendData(0x3E);
  4183   001BAE  0E3E               	movlw	62
  4184   001BB0  ECA0  F011         	call	_STLED316s_SPI_SendData
  4185                           
  4186                           ;Display.c: 279:         STLED316s_SPI_SendData(0xBF);
  4187   001BB4  0EBF               	movlw	191
  4188   001BB6  ECA0  F011         	call	_STLED316s_SPI_SendData
  4189   001BBA  EFDF  F00D         	goto	l3763
  4190   001BBE                     l560:
  4191   001BBE                     l3763:
  4192                           
  4193                           ;Display.c: 282:     LATCbits.LATC4 = 1;
  4194   001BBE  888B               	bsf	139,4,c	;volatile
  4195   001BC0                     
  4196                           ;Display.c: 284:     LATCbits.LATC4 = 0;
  4197   001BC0  988B               	bcf	139,4,c	;volatile
  4198                           
  4199                           ;Display.c: 286:     STLED316s_SPI_SendData(0x0D);
  4200   001BC2  0E0D               	movlw	13
  4201   001BC4  ECA0  F011         	call	_STLED316s_SPI_SendData
  4202   001BC8                     
  4203                           ;Display.c: 288:     LATCbits.LATC4 = 1;
  4204   001BC8  888B               	bsf	139,4,c	;volatile
  4205   001BCA  0012               	return		;funcret
  4206   001BCC                     __end_of_WriteSTLED316SVibMode:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _ToggleVIB_Mode *****************
  4210 ;; Defined at:
  4211 ;;		line 1069 in file "main.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 5
  4232 ;; This function calls:
  4233 ;;		_write_i2c
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text11
  4240   0025A4                     __ptext11:
  4241                           	callstack 0
  4242   0025A4                     _ToggleVIB_Mode:
  4243                           	callstack 25
  4244   0025A4                     
  4245                           ;main.c: 1071:     if (dutyCycle_reg == 0x00)
  4246   0025A4  500D               	movf	_dutyCycle_reg^0,w,c
  4247   0025A6  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  4248   0025A8  A4D8               	btfss	status,2,c
  4249   0025AA  EFD9  F012         	goto	u3751
  4250   0025AE  EFDB  F012         	goto	u3750
  4251   0025B2                     u3751:
  4252   0025B2  EFDF  F012         	goto	l5385
  4253   0025B6                     u3750:
  4254   0025B6                     
  4255                           ;main.c: 1072:         vibration_mode = 0;
  4256   0025B6  0E00               	movlw	0
  4257   0025B8  6E2E               	movwf	_vibration_mode^0,c
  4258   0025BA  EFE1  F012         	goto	l5387
  4259   0025BE                     l5385:
  4260                           
  4261                           ;main.c: 1074:         vibration_mode = 1;
  4262   0025BE  0E01               	movlw	1
  4263   0025C0  6E2E               	movwf	_vibration_mode^0,c
  4264   0025C2                     l5387:
  4265                           
  4266                           ;main.c: 1081:     INTCONbits.GIE = 0;
  4267   0025C2  9EF2               	bcf	242,7,c	;volatile
  4268   0025C4                     
  4269                           ;main.c: 1082:     write_i2c(0x0010, vibration_mode);
  4270   0025C4  0E10               	movlw	16
  4271   0025C6  6E4A               	movwf	write_i2c@address^0,c
  4272   0025C8  0E00               	movlw	0
  4273   0025CA  6E4B               	movwf	(write_i2c@address+1)^0,c
  4274   0025CC  0E00               	movlw	0
  4275   0025CE  6E4C               	movwf	(write_i2c@address+2)^0,c
  4276   0025D0  0E00               	movlw	0
  4277   0025D2  6E4D               	movwf	(write_i2c@address+3)^0,c
  4278   0025D4  C02E  F04E         	movff	_vibration_mode,write_i2c@data
  4279   0025D8  6A4F               	clrf	(write_i2c@data+1)^0,c
  4280   0025DA  ECAD  F012         	call	_write_i2c	;wreg free
  4281   0025DE                     
  4282                           ;main.c: 1083:     INTCONbits.GIE = 1;
  4283   0025DE  8EF2               	bsf	242,7,c	;volatile
  4284   0025E0  0012               	return		;funcret
  4285   0025E2                     __end_of_ToggleVIB_Mode:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function _PWM_Selection *****************
  4289 ;; Defined at:
  4290 ;;		line 1426 in file "main.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  msg             2    0[BANK0 ] unsigned int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  dcSelected      2    4[BANK0 ] int 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  2    0[BANK0 ] unsigned int 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;Total ram usage:        6 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 5
  4311 ;; This function calls:
  4312 ;;		_write_i2c
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text12
  4319   00197C                     __ptext12:
  4320                           	callstack 0
  4321   00197C                     _PWM_Selection:
  4322                           	callstack 25
  4323   00197C                     
  4324                           ;main.c: 1427:     int dcSelected;;main.c: 1428:     switch(msg){
  4325   00197C  EF2E  F00D         	goto	l5375
  4326   001980                     l5333:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;main.c: 1430:             dcSelected = 7;
  4330   001980  0E00               	movlw	0
  4331   001982  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4332   001984  0E07               	movlw	7
  4333   001986  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4334   001988                     
  4335                           ; BSR set to: 0
  4336                           ;main.c: 1431:             INTCONbits.GIE = 0;
  4337   001988  9EF2               	bcf	242,7,c	;volatile
  4338   00198A                     
  4339                           ; BSR set to: 0
  4340                           ;main.c: 1432:             write_i2c(0x0070, 0x01);
  4341   00198A  0E70               	movlw	112
  4342   00198C  6E4A               	movwf	write_i2c@address^0,c
  4343   00198E  0E00               	movlw	0
  4344   001990  6E4B               	movwf	(write_i2c@address+1)^0,c
  4345   001992  0E00               	movlw	0
  4346   001994  6E4C               	movwf	(write_i2c@address+2)^0,c
  4347   001996  0E00               	movlw	0
  4348   001998  6E4D               	movwf	(write_i2c@address+3)^0,c
  4349   00199A  0E00               	movlw	0
  4350   00199C  6E4F               	movwf	(write_i2c@data+1)^0,c
  4351   00199E  0E01               	movlw	1
  4352   0019A0  6E4E               	movwf	write_i2c@data^0,c
  4353   0019A2  ECAD  F012         	call	_write_i2c	;wreg free
  4354   0019A6                     
  4355                           ;main.c: 1433:             INTCONbits.GIE = 1;
  4356   0019A6  8EF2               	bsf	242,7,c	;volatile
  4357                           
  4358                           ;main.c: 1434:             break;
  4359   0019A8  EF51  F00D         	goto	l486
  4360   0019AC                     l5341:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;main.c: 1436:             dcSelected = 9;
  4364   0019AC  0E00               	movlw	0
  4365   0019AE  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4366   0019B0  0E09               	movlw	9
  4367   0019B2  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4368   0019B4                     
  4369                           ; BSR set to: 0
  4370                           ;main.c: 1437:             INTCONbits.GIE = 0;
  4371   0019B4  9EF2               	bcf	242,7,c	;volatile
  4372   0019B6                     
  4373                           ; BSR set to: 0
  4374                           ;main.c: 1438:             write_i2c(0x0070, 0x02);
  4375   0019B6  0E70               	movlw	112
  4376   0019B8  6E4A               	movwf	write_i2c@address^0,c
  4377   0019BA  0E00               	movlw	0
  4378   0019BC  6E4B               	movwf	(write_i2c@address+1)^0,c
  4379   0019BE  0E00               	movlw	0
  4380   0019C0  6E4C               	movwf	(write_i2c@address+2)^0,c
  4381   0019C2  0E00               	movlw	0
  4382   0019C4  6E4D               	movwf	(write_i2c@address+3)^0,c
  4383   0019C6  0E00               	movlw	0
  4384   0019C8  6E4F               	movwf	(write_i2c@data+1)^0,c
  4385   0019CA  0E02               	movlw	2
  4386   0019CC  6E4E               	movwf	write_i2c@data^0,c
  4387   0019CE  ECAD  F012         	call	_write_i2c	;wreg free
  4388   0019D2                     
  4389                           ;main.c: 1439:             INTCONbits.GIE = 1;
  4390   0019D2  8EF2               	bsf	242,7,c	;volatile
  4391                           
  4392                           ;main.c: 1440:             break;
  4393   0019D4  EF51  F00D         	goto	l486
  4394   0019D8                     l5349:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;main.c: 1442:             dcSelected = 12;
  4398   0019D8  0E00               	movlw	0
  4399   0019DA  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4400   0019DC  0E0C               	movlw	12
  4401   0019DE  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4402   0019E0                     
  4403                           ; BSR set to: 0
  4404                           ;main.c: 1443:             INTCONbits.GIE = 0;
  4405   0019E0  9EF2               	bcf	242,7,c	;volatile
  4406   0019E2                     
  4407                           ; BSR set to: 0
  4408                           ;main.c: 1444:             write_i2c(0x0070, 0x03);
  4409   0019E2  0E70               	movlw	112
  4410   0019E4  6E4A               	movwf	write_i2c@address^0,c
  4411   0019E6  0E00               	movlw	0
  4412   0019E8  6E4B               	movwf	(write_i2c@address+1)^0,c
  4413   0019EA  0E00               	movlw	0
  4414   0019EC  6E4C               	movwf	(write_i2c@address+2)^0,c
  4415   0019EE  0E00               	movlw	0
  4416   0019F0  6E4D               	movwf	(write_i2c@address+3)^0,c
  4417   0019F2  0E00               	movlw	0
  4418   0019F4  6E4F               	movwf	(write_i2c@data+1)^0,c
  4419   0019F6  0E03               	movlw	3
  4420   0019F8  6E4E               	movwf	write_i2c@data^0,c
  4421   0019FA  ECAD  F012         	call	_write_i2c	;wreg free
  4422   0019FE                     
  4423                           ;main.c: 1445:             INTCONbits.GIE = 1;
  4424   0019FE  8EF2               	bsf	242,7,c	;volatile
  4425                           
  4426                           ;main.c: 1446:             break;
  4427   001A00  EF51  F00D         	goto	l486
  4428   001A04                     l5357:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;main.c: 1448:             dcSelected = 20;
  4432   001A04  0E00               	movlw	0
  4433   001A06  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4434   001A08  0E14               	movlw	20
  4435   001A0A  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4436   001A0C                     
  4437                           ; BSR set to: 0
  4438                           ;main.c: 1449:             INTCONbits.GIE = 0;
  4439   001A0C  9EF2               	bcf	242,7,c	;volatile
  4440   001A0E                     
  4441                           ; BSR set to: 0
  4442                           ;main.c: 1450:             write_i2c(0x0070, 0x04);
  4443   001A0E  0E70               	movlw	112
  4444   001A10  6E4A               	movwf	write_i2c@address^0,c
  4445   001A12  0E00               	movlw	0
  4446   001A14  6E4B               	movwf	(write_i2c@address+1)^0,c
  4447   001A16  0E00               	movlw	0
  4448   001A18  6E4C               	movwf	(write_i2c@address+2)^0,c
  4449   001A1A  0E00               	movlw	0
  4450   001A1C  6E4D               	movwf	(write_i2c@address+3)^0,c
  4451   001A1E  0E00               	movlw	0
  4452   001A20  6E4F               	movwf	(write_i2c@data+1)^0,c
  4453   001A22  0E04               	movlw	4
  4454   001A24  6E4E               	movwf	write_i2c@data^0,c
  4455   001A26  ECAD  F012         	call	_write_i2c	;wreg free
  4456   001A2A                     
  4457                           ;main.c: 1451:             INTCONbits.GIE = 1;
  4458   001A2A  8EF2               	bsf	242,7,c	;volatile
  4459                           
  4460                           ;main.c: 1452:             break;
  4461   001A2C  EF51  F00D         	goto	l486
  4462   001A30                     l5365:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;main.c: 1454:             dcSelected = 0;
  4466   001A30  0E00               	movlw	0
  4467   001A32  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4468   001A34  0E00               	movlw	0
  4469   001A36  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4470   001A38                     
  4471                           ; BSR set to: 0
  4472                           ;main.c: 1455:             INTCONbits.GIE = 0;
  4473   001A38  9EF2               	bcf	242,7,c	;volatile
  4474   001A3A                     
  4475                           ; BSR set to: 0
  4476                           ;main.c: 1456:             write_i2c(0x0070, 0x00);
  4477   001A3A  0E70               	movlw	112
  4478   001A3C  6E4A               	movwf	write_i2c@address^0,c
  4479   001A3E  0E00               	movlw	0
  4480   001A40  6E4B               	movwf	(write_i2c@address+1)^0,c
  4481   001A42  0E00               	movlw	0
  4482   001A44  6E4C               	movwf	(write_i2c@address+2)^0,c
  4483   001A46  0E00               	movlw	0
  4484   001A48  6E4D               	movwf	(write_i2c@address+3)^0,c
  4485   001A4A  0E00               	movlw	0
  4486   001A4C  6E4F               	movwf	(write_i2c@data+1)^0,c
  4487   001A4E  0E00               	movlw	0
  4488   001A50  6E4E               	movwf	write_i2c@data^0,c
  4489   001A52  ECAD  F012         	call	_write_i2c	;wreg free
  4490   001A56                     
  4491                           ;main.c: 1457:             INTCONbits.GIE = 1;
  4492   001A56  8EF2               	bsf	242,7,c	;volatile
  4493                           
  4494                           ;main.c: 1458:             break;
  4495   001A58  EF51  F00D         	goto	l486
  4496   001A5C                     l5375:
  4497   001A5C  C09A  F09C         	movff	PWM_Selection@msg,??_PWM_Selection
  4498   001A60  C09B  F09D         	movff	PWM_Selection@msg+1,??_PWM_Selection+1
  4499                           
  4500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4501                           ; Switch size 1, requested type "simple"
  4502                           ; Number of cases is 1, Range of values is 0 to 0
  4503                           ; switch strategies available:
  4504                           ; Name         Instructions Cycles
  4505                           ; simple_byte            4     3 (average)
  4506                           ;	Chosen strategy is simple_byte
  4507   001A64  0100               	movlb	0	; () banked
  4508   001A66  519D               	movf	(??_PWM_Selection+1)& (0+255),w,b
  4509   001A68  0A00               	xorlw	0	; case 0
  4510   001A6A  B4D8               	btfsc	status,2,c
  4511   001A6C  EF3A  F00D         	goto	l6327
  4512   001A70  EF51  F00D         	goto	l486
  4513   001A74                     l6327:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ; Switch size 1, requested type "simple"
  4517                           ; Number of cases is 5, Range of values is 0 to 4
  4518                           ; switch strategies available:
  4519                           ; Name         Instructions Cycles
  4520                           ; simple_byte           16     9 (average)
  4521                           ;	Chosen strategy is simple_byte
  4522   001A74  519C               	movf	??_PWM_Selection& (0+255),w,b
  4523   001A76  0A00               	xorlw	0	; case 0
  4524   001A78  B4D8               	btfsc	status,2,c
  4525   001A7A  EFC0  F00C         	goto	l5333
  4526   001A7E  0A01               	xorlw	1	; case 1
  4527   001A80  B4D8               	btfsc	status,2,c
  4528   001A82  EFD6  F00C         	goto	l5341
  4529   001A86  0A03               	xorlw	3	; case 2
  4530   001A88  B4D8               	btfsc	status,2,c
  4531   001A8A  EFEC  F00C         	goto	l5349
  4532   001A8E  0A01               	xorlw	1	; case 3
  4533   001A90  B4D8               	btfsc	status,2,c
  4534   001A92  EF02  F00D         	goto	l5357
  4535   001A96  0A07               	xorlw	7	; case 4
  4536   001A98  B4D8               	btfsc	status,2,c
  4537   001A9A  EF18  F00D         	goto	l5365
  4538   001A9E  EF51  F00D         	goto	l486
  4539   001AA2                     l486:
  4540                           
  4541                           ;main.c: 1462:     return(dcSelected);
  4542   001AA2  C09E  F09A         	movff	PWM_Selection@dcSelected,?_PWM_Selection
  4543   001AA6  C09F  F09B         	movff	PWM_Selection@dcSelected+1,?_PWM_Selection+1
  4544   001AAA  0012               	return		;funcret
  4545   001AAC                     __end_of_PWM_Selection:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _write_i2c *****************
  4549 ;; Defined at:
  4550 ;;		line 109 in file "i2c.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  address         4   22[COMRAM] long 
  4553 ;;  data            2   26[COMRAM] int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        6 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 4
  4572 ;; This function calls:
  4573 ;;		___aldiv
  4574 ;;		_i2c_Address
  4575 ;;		_i2c_Start
  4576 ;;		_i2c_Stop
  4577 ;;		_i2c_Write
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;;		_ToggleVIB_Mode
  4581 ;;		_PWM_Selection
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text13
  4586   00255A                     __ptext13:
  4587                           	callstack 0
  4588   00255A                     _write_i2c:
  4589                           	callstack 26
  4590   00255A                     
  4591                           ;i2c.c: 110:     i2c_Start();
  4592   00255A  EC4E  F014         	call	_i2c_Start	;wreg free
  4593                           
  4594                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  4595   00255E  0E00               	movlw	0
  4596   002560  6E3D               	movwf	i2c_Address@mode^0,c
  4597   002562  0EA0               	movlw	160
  4598   002564  EC25  F014         	call	_i2c_Address
  4599                           
  4600                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  4601   002568  C04A  F03C         	movff	write_i2c@address,___aldiv@dividend
  4602   00256C  C04B  F03D         	movff	write_i2c@address+1,___aldiv@dividend+1
  4603   002570  C04C  F03E         	movff	write_i2c@address+2,___aldiv@dividend+2
  4604   002574  C04D  F03F         	movff	write_i2c@address+3,___aldiv@dividend+3
  4605   002578  0E00               	movlw	0
  4606   00257A  6E40               	movwf	___aldiv@divisor^0,c
  4607   00257C  0E01               	movlw	1
  4608   00257E  6E41               	movwf	(___aldiv@divisor+1)^0,c
  4609   002580  0E00               	movlw	0
  4610   002582  6E42               	movwf	(___aldiv@divisor+2)^0,c
  4611   002584  0E00               	movlw	0
  4612   002586  6E43               	movwf	(___aldiv@divisor+3)^0,c
  4613   002588  ECE6  F00D         	call	___aldiv	;wreg free
  4614   00258C  503C               	movf	?___aldiv^0,w,c
  4615   00258E  EC36  F014         	call	_i2c_Write
  4616                           
  4617                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  4618   002592  504A               	movf	write_i2c@address^0,w,c
  4619   002594  EC36  F014         	call	_i2c_Write
  4620                           
  4621                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  4622   002598  504E               	movf	write_i2c@data^0,w,c
  4623   00259A  EC36  F014         	call	_i2c_Write
  4624                           
  4625                           ;i2c.c: 115:     i2c_Stop();
  4626   00259E  EC4A  F014         	call	_i2c_Stop	;wreg free
  4627   0025A2  0012               	return		;funcret
  4628   0025A4                     __end_of_write_i2c:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _i2c_Write *****************
  4632 ;; Defined at:
  4633 ;;		line 70 in file "i2c.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  data            1    wreg     unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  data            1    9[COMRAM] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;Total ram usage:        1 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 3
  4654 ;; This function calls:
  4655 ;;		_i2c_Wait
  4656 ;; This function is called by:
  4657 ;;		_write_i2c
  4658 ;;		_read_i2c
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text14
  4663   00286C                     __ptext14:
  4664                           	callstack 0
  4665   00286C                     _i2c_Write:
  4666                           	callstack 26
  4667                           
  4668                           ;incstack = 0
  4669                           ;i2c_Write@data stored from wreg
  4670   00286C  6E3D               	movwf	i2c_Write@data^0,c
  4671   00286E                     
  4672                           ;i2c.c: 71:     i2c_Wait();
  4673   00286E  ECC0  F013         	call	_i2c_Wait	;wreg free
  4674   002872                     
  4675                           ;i2c.c: 72:     SSP2BUF = data;
  4676   002872  C03D  FF6F         	movff	i2c_Write@data,3951	;volatile
  4677   002876  0012               	return		;funcret
  4678   002878                     __end_of_i2c_Write:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _i2c_Stop *****************
  4682 ;; Defined at:
  4683 ;;		line 63 in file "i2c.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 3
  4704 ;; This function calls:
  4705 ;;		_i2c_Wait
  4706 ;; This function is called by:
  4707 ;;		_write_i2c
  4708 ;;		_read_i2c
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text15
  4713   002894                     __ptext15:
  4714                           	callstack 0
  4715   002894                     _i2c_Stop:
  4716                           	callstack 26
  4717   002894                     
  4718                           ;i2c.c: 64:     i2c_Wait();
  4719   002894  ECC0  F013         	call	_i2c_Wait	;wreg free
  4720   002898                     
  4721                           ;i2c.c: 65:     PEN2 = 1;
  4722   002898  846B               	bsf	3947,2,c	;volatile
  4723   00289A  0012               	return		;funcret
  4724   00289C                     __end_of_i2c_Stop:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _i2c_Start *****************
  4728 ;; Defined at:
  4729 ;;		line 49 in file "i2c.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 3
  4750 ;; This function calls:
  4751 ;;		_i2c_Wait
  4752 ;; This function is called by:
  4753 ;;		_write_i2c
  4754 ;;		_read_i2c
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text16
  4759   00289C                     __ptext16:
  4760                           	callstack 0
  4761   00289C                     _i2c_Start:
  4762                           	callstack 26
  4763   00289C                     
  4764                           ;i2c.c: 50:     i2c_Wait();
  4765   00289C  ECC0  F013         	call	_i2c_Wait	;wreg free
  4766   0028A0                     
  4767                           ;i2c.c: 51:     SEN2 = 1;
  4768   0028A0  806B               	bsf	3947,0,c	;volatile
  4769   0028A2  0012               	return		;funcret
  4770   0028A4                     __end_of_i2c_Start:
  4771                           	callstack 0
  4772                           
  4773 ;; *************** function _i2c_Address *****************
  4774 ;; Defined at:
  4775 ;;		line 78 in file "i2c.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  address         1    wreg     unsigned char 
  4778 ;;  mode            1    9[COMRAM] unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  address         1   10[COMRAM] unsigned char 
  4781 ;;  l_address       1   11[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;Total ram usage:        3 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 3
  4798 ;; This function calls:
  4799 ;;		_i2c_Wait
  4800 ;; This function is called by:
  4801 ;;		_write_i2c
  4802 ;;		_read_i2c
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text17
  4807   00284A                     __ptext17:
  4808                           	callstack 0
  4809   00284A                     _i2c_Address:
  4810                           	callstack 26
  4811                           
  4812                           ;incstack = 0
  4813                           ;i2c_Address@address stored from wreg
  4814   00284A  6E3E               	movwf	i2c_Address@address^0,c
  4815   00284C                     
  4816                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  4817   00284C  C03E  F03F         	movff	i2c_Address@address,i2c_Address@l_address
  4818   002850                     
  4819                           ;i2c.c: 82:     l_address += mode;
  4820   002850  503D               	movf	i2c_Address@mode^0,w,c
  4821   002852  263F               	addwf	i2c_Address@l_address^0,f,c
  4822   002854                     
  4823                           ;i2c.c: 83:     i2c_Wait();
  4824   002854  ECC0  F013         	call	_i2c_Wait	;wreg free
  4825   002858                     
  4826                           ;i2c.c: 84:     SSP2BUF = l_address;
  4827   002858  C03F  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  4828   00285C  0012               	return		;funcret
  4829   00285E                     __end_of_i2c_Address:
  4830                           	callstack 0
  4831                           
  4832 ;; *************** function _i2c_Wait *****************
  4833 ;; Defined at:
  4834 ;;		line 43 in file "i2c.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;Total ram usage:        1 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 2
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_i2c_Start
  4859 ;;		_i2c_Restart
  4860 ;;		_i2c_Stop
  4861 ;;		_i2c_Write
  4862 ;;		_i2c_Address
  4863 ;;		_i2c_Read
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text18
  4868   002780                     __ptext18:
  4869                           	callstack 0
  4870   002780                     _i2c_Wait:
  4871                           	callstack 26
  4872   002780                     l5241:
  4873   002780  CF6B F03C          	movff	3947,??_i2c_Wait	;volatile
  4874   002784  0E1F               	movlw	31
  4875   002786  163C               	andwf	??_i2c_Wait^0,f,c
  4876   002788  A4D8               	btfss	status,2,c
  4877   00278A  EFC9  F013         	goto	u3661
  4878   00278E  EFCB  F013         	goto	u3660
  4879   002792                     u3661:
  4880   002792  EFC0  F013         	goto	l5241
  4881   002796                     u3660:
  4882   002796  B46D               	btfsc	109,2,c	;volatile
  4883   002798  EFD0  F013         	goto	u3671
  4884   00279C  EFD2  F013         	goto	u3670
  4885   0027A0                     u3671:
  4886   0027A0  EFC0  F013         	goto	l5241
  4887   0027A4                     u3670:
  4888   0027A4  0012               	return		;funcret
  4889   0027A6                     __end_of_i2c_Wait:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function ___aldiv *****************
  4893 ;; Defined at:
  4894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  dividend        4    8[COMRAM] long 
  4897 ;;  divisor         4   12[COMRAM] long 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  quotient        4   18[COMRAM] long 
  4900 ;;  sign            1   17[COMRAM] unsigned char 
  4901 ;;  counter         1   16[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  4    8[COMRAM] long 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4911 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;Total ram usage:       14 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 2
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_write_i2c
  4922 ;;		_read_i2c
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text19
  4927   001BCC                     __ptext19:
  4928                           	callstack 0
  4929   001BCC                     ___aldiv:
  4930                           	callstack 27
  4931   001BCC  0E00               	movlw	0
  4932   001BCE  6E45               	movwf	___aldiv@sign^0,c
  4933   001BD0  BE43               	btfsc	(___aldiv@divisor+3)^0,7,c
  4934   001BD2  EFEF  F00D         	goto	u3680
  4935   001BD6  EFED  F00D         	goto	u3681
  4936   001BDA                     u3681:
  4937   001BDA  EFF9  F00D         	goto	l5273
  4938   001BDE                     u3680:
  4939   001BDE  1E43               	comf	(___aldiv@divisor+3)^0,f,c
  4940   001BE0  1E42               	comf	(___aldiv@divisor+2)^0,f,c
  4941   001BE2  1E41               	comf	(___aldiv@divisor+1)^0,f,c
  4942   001BE4  6C40               	negf	___aldiv@divisor^0,c
  4943   001BE6  0E00               	movlw	0
  4944   001BE8  2241               	addwfc	(___aldiv@divisor+1)^0,f,c
  4945   001BEA  2242               	addwfc	(___aldiv@divisor+2)^0,f,c
  4946   001BEC  2243               	addwfc	(___aldiv@divisor+3)^0,f,c
  4947   001BEE  0E01               	movlw	1
  4948   001BF0  6E45               	movwf	___aldiv@sign^0,c
  4949   001BF2                     l5273:
  4950   001BF2  BE3F               	btfsc	(___aldiv@dividend+3)^0,7,c
  4951   001BF4  EF00  F00E         	goto	u3690
  4952   001BF8  EFFE  F00D         	goto	u3691
  4953   001BFC                     u3691:
  4954   001BFC  EF0A  F00E         	goto	l5279
  4955   001C00                     u3690:
  4956   001C00  1E3F               	comf	(___aldiv@dividend+3)^0,f,c
  4957   001C02  1E3E               	comf	(___aldiv@dividend+2)^0,f,c
  4958   001C04  1E3D               	comf	(___aldiv@dividend+1)^0,f,c
  4959   001C06  6C3C               	negf	___aldiv@dividend^0,c
  4960   001C08  0E00               	movlw	0
  4961   001C0A  223D               	addwfc	(___aldiv@dividend+1)^0,f,c
  4962   001C0C  223E               	addwfc	(___aldiv@dividend+2)^0,f,c
  4963   001C0E  223F               	addwfc	(___aldiv@dividend+3)^0,f,c
  4964   001C10  0E01               	movlw	1
  4965   001C12  1A45               	xorwf	___aldiv@sign^0,f,c
  4966   001C14                     l5279:
  4967   001C14  0E00               	movlw	0
  4968   001C16  6E46               	movwf	___aldiv@quotient^0,c
  4969   001C18  0E00               	movlw	0
  4970   001C1A  6E47               	movwf	(___aldiv@quotient+1)^0,c
  4971   001C1C  0E00               	movlw	0
  4972   001C1E  6E48               	movwf	(___aldiv@quotient+2)^0,c
  4973   001C20  0E00               	movlw	0
  4974   001C22  6E49               	movwf	(___aldiv@quotient+3)^0,c
  4975   001C24  5040               	movf	___aldiv@divisor^0,w,c
  4976   001C26  1041               	iorwf	(___aldiv@divisor+1)^0,w,c
  4977   001C28  1042               	iorwf	(___aldiv@divisor+2)^0,w,c
  4978   001C2A  1043               	iorwf	(___aldiv@divisor+3)^0,w,c
  4979   001C2C  B4D8               	btfsc	status,2,c
  4980   001C2E  EF1B  F00E         	goto	u3701
  4981   001C32  EF1D  F00E         	goto	u3700
  4982   001C36                     u3701:
  4983   001C36  EF53  F00E         	goto	l5301
  4984   001C3A                     u3700:
  4985   001C3A  0E01               	movlw	1
  4986   001C3C  6E44               	movwf	___aldiv@counter^0,c
  4987   001C3E  EF27  F00E         	goto	l5287
  4988   001C42                     l5285:
  4989   001C42  90D8               	bcf	status,0,c
  4990   001C44  3640               	rlcf	___aldiv@divisor^0,f,c
  4991   001C46  3641               	rlcf	(___aldiv@divisor+1)^0,f,c
  4992   001C48  3642               	rlcf	(___aldiv@divisor+2)^0,f,c
  4993   001C4A  3643               	rlcf	(___aldiv@divisor+3)^0,f,c
  4994   001C4C  2A44               	incf	___aldiv@counter^0,f,c
  4995   001C4E                     l5287:
  4996   001C4E  AE43               	btfss	(___aldiv@divisor+3)^0,7,c
  4997   001C50  EF2C  F00E         	goto	u3711
  4998   001C54  EF2E  F00E         	goto	u3710
  4999   001C58                     u3711:
  5000   001C58  EF21  F00E         	goto	l5285
  5001   001C5C                     u3710:
  5002   001C5C                     l5289:
  5003   001C5C  90D8               	bcf	status,0,c
  5004   001C5E  3646               	rlcf	___aldiv@quotient^0,f,c
  5005   001C60  3647               	rlcf	(___aldiv@quotient+1)^0,f,c
  5006   001C62  3648               	rlcf	(___aldiv@quotient+2)^0,f,c
  5007   001C64  3649               	rlcf	(___aldiv@quotient+3)^0,f,c
  5008   001C66  5040               	movf	___aldiv@divisor^0,w,c
  5009   001C68  5C3C               	subwf	___aldiv@dividend^0,w,c
  5010   001C6A  5041               	movf	(___aldiv@divisor+1)^0,w,c
  5011   001C6C  583D               	subwfb	(___aldiv@dividend+1)^0,w,c
  5012   001C6E  5042               	movf	(___aldiv@divisor+2)^0,w,c
  5013   001C70  583E               	subwfb	(___aldiv@dividend+2)^0,w,c
  5014   001C72  5043               	movf	(___aldiv@divisor+3)^0,w,c
  5015   001C74  583F               	subwfb	(___aldiv@dividend+3)^0,w,c
  5016   001C76  A0D8               	btfss	status,0,c
  5017   001C78  EF40  F00E         	goto	u3721
  5018   001C7C  EF42  F00E         	goto	u3720
  5019   001C80                     u3721:
  5020   001C80  EF4B  F00E         	goto	l5297
  5021   001C84                     u3720:
  5022   001C84  5040               	movf	___aldiv@divisor^0,w,c
  5023   001C86  5E3C               	subwf	___aldiv@dividend^0,f,c
  5024   001C88  5041               	movf	(___aldiv@divisor+1)^0,w,c
  5025   001C8A  5A3D               	subwfb	(___aldiv@dividend+1)^0,f,c
  5026   001C8C  5042               	movf	(___aldiv@divisor+2)^0,w,c
  5027   001C8E  5A3E               	subwfb	(___aldiv@dividend+2)^0,f,c
  5028   001C90  5043               	movf	(___aldiv@divisor+3)^0,w,c
  5029   001C92  5A3F               	subwfb	(___aldiv@dividend+3)^0,f,c
  5030   001C94  8046               	bsf	___aldiv@quotient^0,0,c
  5031   001C96                     l5297:
  5032   001C96  90D8               	bcf	status,0,c
  5033   001C98  3243               	rrcf	(___aldiv@divisor+3)^0,f,c
  5034   001C9A  3242               	rrcf	(___aldiv@divisor+2)^0,f,c
  5035   001C9C  3241               	rrcf	(___aldiv@divisor+1)^0,f,c
  5036   001C9E  3240               	rrcf	___aldiv@divisor^0,f,c
  5037   001CA0  2E44               	decfsz	___aldiv@counter^0,f,c
  5038   001CA2  EF2E  F00E         	goto	l5289
  5039   001CA6                     l5301:
  5040   001CA6  5045               	movf	___aldiv@sign^0,w,c
  5041   001CA8  B4D8               	btfsc	status,2,c
  5042   001CAA  EF59  F00E         	goto	u3731
  5043   001CAE  EF5B  F00E         	goto	u3730
  5044   001CB2                     u3731:
  5045   001CB2  EF63  F00E         	goto	l5305
  5046   001CB6                     u3730:
  5047   001CB6  1E49               	comf	(___aldiv@quotient+3)^0,f,c
  5048   001CB8  1E48               	comf	(___aldiv@quotient+2)^0,f,c
  5049   001CBA  1E47               	comf	(___aldiv@quotient+1)^0,f,c
  5050   001CBC  6C46               	negf	___aldiv@quotient^0,c
  5051   001CBE  0E00               	movlw	0
  5052   001CC0  2247               	addwfc	(___aldiv@quotient+1)^0,f,c
  5053   001CC2  2248               	addwfc	(___aldiv@quotient+2)^0,f,c
  5054   001CC4  2249               	addwfc	(___aldiv@quotient+3)^0,f,c
  5055   001CC6                     l5305:
  5056   001CC6  C046  F03C         	movff	___aldiv@quotient,?___aldiv
  5057   001CCA  C047  F03D         	movff	___aldiv@quotient+1,?___aldiv+1
  5058   001CCE  C048  F03E         	movff	___aldiv@quotient+2,?___aldiv+2
  5059   001CD2  C049  F03F         	movff	___aldiv@quotient+3,?___aldiv+3
  5060   001CD6  0012               	return		;funcret
  5061   001CD8                     __end_of___aldiv:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function _MotorPosition_Init *****************
  5065 ;; Defined at:
  5066 ;;		line 1029 in file "main.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;Total ram usage:        2 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 4
  5087 ;; This function calls:
  5088 ;;		_MotorBREAK
  5089 ;;		_MotorON
  5090 ;;		_Read_IR
  5091 ;;		_WriteSTLED316SErr
  5092 ;;		_delay_1ms
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text20
  5099   001CD8                     __ptext20:
  5100                           	callstack 0
  5101   001CD8                     _MotorPosition_Init:
  5102                           	callstack 26
  5103   001CD8                     
  5104                           ;main.c: 1030:     LATAbits.LATA2 = 1;
  5105   001CD8  8489               	bsf	137,2,c	;volatile
  5106   001CDA                     
  5107                           ;main.c: 1031:     MotorON();
  5108   001CDA  EC3C  F014         	call	_MotorON	;wreg free
  5109   001CDE                     
  5110                           ;main.c: 1032:     _delay((unsigned long)((350)*(8000000/4000.0)));
  5111   001CDE  0E04               	movlw	4
  5112   001CE0  6E46               	movwf	(??_MotorPosition_Init+1)^0,c
  5113   001CE2  0E8E               	movlw	142
  5114   001CE4  6E45               	movwf	??_MotorPosition_Init^0,c
  5115   001CE6  0E12               	movlw	18
  5116   001CE8                     u4477:
  5117   001CE8  2EE8               	decfsz	wreg,f,c
  5118   001CEA  D7FE               	bra	u4477
  5119   001CEC  2E45               	decfsz	??_MotorPosition_Init^0,f,c
  5120   001CEE  D7FC               	bra	u4477
  5121   001CF0  2E46               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  5122   001CF2  D7FA               	bra	u4477
  5123   001CF4  D000               	nop2	
  5124   001CF6                     
  5125                           ;main.c: 1033:     errorcounter = 30;
  5126   001CF6  0E1E               	movlw	30
  5127   001CF8  6E50               	movwf	_errorcounter^0,c	;volatile
  5128   001CFA  0E00               	movlw	0
  5129   001CFC  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5130   001CFE  0E00               	movlw	0
  5131   001D00  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5132   001D02  0E00               	movlw	0
  5133   001D04  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5134   001D06                     l3689:
  5135                           
  5136                           ;main.c: 1036:         IR_SENSORF = Read_IR();
  5137   001D06  ECE6  F013         	call	_Read_IR	;wreg free
  5138   001D0A  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5139   001D0E  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5140   001D12                     
  5141                           ;main.c: 1037:         if (errorcounter == 0) {
  5142   001D12  5050               	movf	_errorcounter^0,w,c	;volatile
  5143   001D14  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5144   001D16  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5145   001D18  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5146   001D1A  A4D8               	btfss	status,2,c
  5147   001D1C  EF92  F00E         	goto	u2201
  5148   001D20  EF94  F00E         	goto	u2200
  5149   001D24                     u2201:
  5150   001D24  EF99  F00E         	goto	l3697
  5151   001D28                     u2200:
  5152   001D28                     
  5153                           ;main.c: 1038:             WriteSTLED316SErr('1');
  5154   001D28  0E31               	movlw	49
  5155   001D2A  EC72  F00F         	call	_WriteSTLED316SErr
  5156   001D2E                     
  5157                           ;main.c: 1039:             MotorBREAK();
  5158   001D2E  EC41  F014         	call	_MotorBREAK	;wreg free
  5159   001D32                     l3697:
  5160                           
  5161                           ;main.c: 1042:     } while (IR_SENSORF != 0);
  5162   001D32  5011               	movf	_IR_SENSORF^0,w,c
  5163   001D34  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5164   001D36  A4D8               	btfss	status,2,c
  5165   001D38  EFA0  F00E         	goto	u2211
  5166   001D3C  EFA2  F00E         	goto	u2210
  5167   001D40                     u2211:
  5168   001D40  EF83  F00E         	goto	l3689
  5169   001D44                     u2210:
  5170   001D44                     
  5171                           ;main.c: 1044:     _delay((unsigned long)((30)*(8000000/4000.0)));
  5172   001D44  0E4E               	movlw	78
  5173   001D46  6E45               	movwf	??_MotorPosition_Init^0,c
  5174   001D48  0EEB               	movlw	235
  5175   001D4A                     u4487:
  5176   001D4A  2EE8               	decfsz	wreg,f,c
  5177   001D4C  D7FE               	bra	u4487
  5178   001D4E  2E45               	decfsz	??_MotorPosition_Init^0,f,c
  5179   001D50  D7FC               	bra	u4487
  5180   001D52  F000               	nop	
  5181   001D54                     
  5182                           ;main.c: 1045:     errorcounter = 30;
  5183   001D54  0E1E               	movlw	30
  5184   001D56  6E50               	movwf	_errorcounter^0,c	;volatile
  5185   001D58  0E00               	movlw	0
  5186   001D5A  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5187   001D5C  0E00               	movlw	0
  5188   001D5E  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5189   001D60  0E00               	movlw	0
  5190   001D62  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5191   001D64                     l3703:
  5192                           
  5193                           ;main.c: 1047:         IR_SENSORF = Read_IR();
  5194   001D64  ECE6  F013         	call	_Read_IR	;wreg free
  5195   001D68  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5196   001D6C  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5197   001D70                     
  5198                           ;main.c: 1048:         if (errorcounter == 0) {
  5199   001D70  5050               	movf	_errorcounter^0,w,c	;volatile
  5200   001D72  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5201   001D74  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5202   001D76  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5203   001D78  A4D8               	btfss	status,2,c
  5204   001D7A  EFC1  F00E         	goto	u2221
  5205   001D7E  EFC3  F00E         	goto	u2220
  5206   001D82                     u2221:
  5207   001D82  EFC8  F00E         	goto	l3711
  5208   001D86                     u2220:
  5209   001D86                     
  5210                           ;main.c: 1049:             WriteSTLED316SErr('2');
  5211   001D86  0E32               	movlw	50
  5212   001D88  EC72  F00F         	call	_WriteSTLED316SErr
  5213   001D8C                     
  5214                           ;main.c: 1050:             MotorBREAK();
  5215   001D8C  EC41  F014         	call	_MotorBREAK	;wreg free
  5216   001D90                     l3711:
  5217                           
  5218                           ;main.c: 1053:     } while (IR_SENSORF != 1);
  5219   001D90  0411               	decf	_IR_SENSORF^0,w,c
  5220   001D92  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5221   001D94  A4D8               	btfss	status,2,c
  5222   001D96  EFCF  F00E         	goto	u2231
  5223   001D9A  EFD1  F00E         	goto	u2230
  5224   001D9E                     u2231:
  5225   001D9E  EFB2  F00E         	goto	l3703
  5226   001DA2                     u2230:
  5227   001DA2                     
  5228                           ;main.c: 1055:     errorcounter = 30;
  5229   001DA2  0E1E               	movlw	30
  5230   001DA4  6E50               	movwf	_errorcounter^0,c	;volatile
  5231   001DA6  0E00               	movlw	0
  5232   001DA8  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5233   001DAA  0E00               	movlw	0
  5234   001DAC  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5235   001DAE  0E00               	movlw	0
  5236   001DB0  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5237   001DB2                     
  5238                           ;main.c: 1057:     delay_1ms(Motor_Stop_Delay_Time);
  5239   001DB2  C01F  F03C         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5240   001DB6  C020  F03D         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5241   001DBA  EC97  F013         	call	_delay_1ms	;wreg free
  5242   001DBE                     
  5243                           ;main.c: 1058:     MotorBREAK();
  5244   001DBE  EC41  F014         	call	_MotorBREAK	;wreg free
  5245   001DC2                     
  5246                           ;main.c: 1059:     _delay((unsigned long)((500)*(8000000/4000.0)));
  5247   001DC2  0E06               	movlw	6
  5248   001DC4  6E46               	movwf	(??_MotorPosition_Init+1)^0,c
  5249   001DC6  0E13               	movlw	19
  5250   001DC8  6E45               	movwf	??_MotorPosition_Init^0,c
  5251   001DCA  0EAE               	movlw	174
  5252   001DCC                     u4497:
  5253   001DCC  2EE8               	decfsz	wreg,f,c
  5254   001DCE  D7FE               	bra	u4497
  5255   001DD0  2E45               	decfsz	??_MotorPosition_Init^0,f,c
  5256   001DD2  D7FC               	bra	u4497
  5257   001DD4  2E46               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  5258   001DD6  D7FA               	bra	u4497
  5259   001DD8                     
  5260                           ;main.c: 1060:     IR_SENSORF = 0;
  5261   001DD8  0E00               	movlw	0
  5262   001DDA  6E12               	movwf	(_IR_SENSORF+1)^0,c
  5263   001DDC  0E00               	movlw	0
  5264   001DDE  6E11               	movwf	_IR_SENSORF^0,c
  5265   001DE0                     
  5266                           ;main.c: 1062:     LATAbits.LATA2 = 0;
  5267   001DE0  9489               	bcf	137,2,c	;volatile
  5268   001DE2  0012               	return		;funcret
  5269   001DE4                     __end_of_MotorPosition_Init:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function _InitTimer1 *****************
  5273 ;; Defined at:
  5274 ;;		line 1377 in file "main.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text21
  5303   0027F0                     __ptext21:
  5304                           	callstack 0
  5305   0027F0                     _InitTimer1:
  5306                           	callstack 28
  5307   0027F0                     
  5308                           ;main.c: 1378:     T1CON = 0b00110001;
  5309   0027F0  0E31               	movlw	49
  5310   0027F2  6ECD               	movwf	205,c	;volatile
  5311                           
  5312                           ;main.c: 1381:     TMR1 = 0x9E57;
  5313   0027F4  0E9E               	movlw	158
  5314   0027F6  6ECF               	movwf	207,c	;volatile
  5315   0027F8  0E57               	movlw	87
  5316   0027FA  6ECE               	movwf	206,c	;volatile
  5317   0027FC                     
  5318                           ;main.c: 1382:     TMR1IF = 0;
  5319   0027FC  909E               	bcf	3998,0,c	;volatile
  5320   0027FE                     
  5321                           ;main.c: 1383:     TMR1IE = 1;
  5322   0027FE  809D               	bsf	3997,0,c	;volatile
  5323   002800                     
  5324                           ;main.c: 1384:     IPR1bits.TMR1IP = 1;
  5325   002800  809F               	bsf	159,0,c	;volatile
  5326                           
  5327                           ;main.c: 1386:     TMR1IF_triggered = 0;
  5328   002802  0E00               	movlw	0
  5329   002804  6E27               	movwf	_TMR1IF_triggered^0,c	;volatile
  5330   002806  0012               	return		;funcret
  5331   002808                     __end_of_InitTimer1:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _InitSTLED316 *****************
  5335 ;; Defined at:
  5336 ;;		line 14 in file "Display.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  Brightness      1    wreg     unsigned char 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  Brightness      1   16[COMRAM] unsigned char 
  5341 ;;  i               2    0        int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        3 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 3
  5358 ;; This function calls:
  5359 ;;		_STLED316s_SPI_SendData
  5360 ;; This function is called by:
  5361 ;;		_main
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text22
  5366   0022B4                     __ptext22:
  5367                           	callstack 0
  5368   0022B4                     _InitSTLED316:
  5369                           	callstack 27
  5370                           
  5371                           ;incstack = 0
  5372                           ;InitSTLED316@Brightness stored from wreg
  5373   0022B4  6E44               	movwf	InitSTLED316@Brightness^0,c
  5374   0022B6                     
  5375                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  5376   0022B6  888B               	bsf	139,4,c	;volatile
  5377                           
  5378                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  5379   0022B8  988B               	bcf	139,4,c	;volatile
  5380   0022BA                     
  5381                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  5382   0022BA  0E30               	movlw	48
  5383   0022BC  ECA0  F011         	call	_STLED316s_SPI_SendData
  5384   0022C0                     
  5385                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  5386   0022C0  888B               	bsf	139,4,c	;volatile
  5387   0022C2                     
  5388                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  5389   0022C2  988B               	bcf	139,4,c	;volatile
  5390                           
  5391                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  5392   0022C4  0E30               	movlw	48
  5393   0022C6  ECA0  F011         	call	_STLED316s_SPI_SendData
  5394                           
  5395                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  5396   0022CA  C044  F042         	movff	InitSTLED316@Brightness,??_InitSTLED316
  5397   0022CE  3A42               	swapf	??_InitSTLED316^0,f,c
  5398   0022D0  0E0F               	movlw	15
  5399   0022D2  1642               	andwf	??_InitSTLED316^0,f,c
  5400   0022D4  0E05               	movlw	5
  5401   0022D6  6E43               	movwf	(??_InitSTLED316+1)^0,c
  5402   0022D8                     u2195:
  5403   0022D8  90D8               	bcf	status,0,c
  5404   0022DA  3642               	rlcf	??_InitSTLED316^0,f,c
  5405   0022DC  2E43               	decfsz	(??_InitSTLED316+1)^0,f,c
  5406   0022DE  EF6C  F011         	goto	u2195
  5407   0022E2  5042               	movf	??_InitSTLED316^0,w,c
  5408   0022E4  0905               	iorlw	5
  5409   0022E6  ECA0  F011         	call	_STLED316s_SPI_SendData
  5410   0022EA                     
  5411                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  5412   0022EA  888B               	bsf	139,4,c	;volatile
  5413   0022EC                     
  5414                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  5415   0022EC  988B               	bcf	139,4,c	;volatile
  5416                           
  5417                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  5418   0022EE  0E11               	movlw	17
  5419   0022F0  ECA0  F011         	call	_STLED316s_SPI_SendData
  5420   0022F4                     
  5421                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  5422   0022F4  888B               	bsf	139,4,c	;volatile
  5423   0022F6                     
  5424                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  5425   0022F6  988B               	bcf	139,4,c	;volatile
  5426                           
  5427                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  5428   0022F8  0E11               	movlw	17
  5429   0022FA  ECA0  F011         	call	_STLED316s_SPI_SendData
  5430                           
  5431                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  5432   0022FE  5044               	movf	InitSTLED316@Brightness^0,w,c
  5433   002300  ECA0  F011         	call	_STLED316s_SPI_SendData
  5434                           
  5435                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  5436   002304  5044               	movf	InitSTLED316@Brightness^0,w,c
  5437   002306  ECA0  F011         	call	_STLED316s_SPI_SendData
  5438                           
  5439                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  5440   00230A  5044               	movf	InitSTLED316@Brightness^0,w,c
  5441   00230C  ECA0  F011         	call	_STLED316s_SPI_SendData
  5442   002310                     
  5443                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  5444   002310  888B               	bsf	139,4,c	;volatile
  5445   002312                     
  5446                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  5447   002312  988B               	bcf	139,4,c	;volatile
  5448                           
  5449                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5450   002314  0E18               	movlw	24
  5451   002316  ECA0  F011         	call	_STLED316s_SPI_SendData
  5452   00231A                     
  5453                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  5454   00231A  888B               	bsf	139,4,c	;volatile
  5455   00231C                     
  5456                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  5457   00231C  988B               	bcf	139,4,c	;volatile
  5458                           
  5459                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5460   00231E  0E18               	movlw	24
  5461   002320  ECA0  F011         	call	_STLED316s_SPI_SendData
  5462                           
  5463                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  5464   002324  5044               	movf	InitSTLED316@Brightness^0,w,c
  5465   002326  ECA0  F011         	call	_STLED316s_SPI_SendData
  5466                           
  5467                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  5468   00232A  5044               	movf	InitSTLED316@Brightness^0,w,c
  5469   00232C  ECA0  F011         	call	_STLED316s_SPI_SendData
  5470                           
  5471                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  5472   002330  5044               	movf	InitSTLED316@Brightness^0,w,c
  5473   002332  ECA0  F011         	call	_STLED316s_SPI_SendData
  5474                           
  5475                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  5476   002336  5044               	movf	InitSTLED316@Brightness^0,w,c
  5477   002338  ECA0  F011         	call	_STLED316s_SPI_SendData
  5478   00233C                     
  5479                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  5480   00233C  888B               	bsf	139,4,c	;volatile
  5481   00233E  0012               	return		;funcret
  5482   002340                     __end_of_InitSTLED316:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function _Homing_Again_Manual *****************
  5486 ;; Defined at:
  5487 ;;		line 1091 in file "main.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  NUMInit         2    0        int 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        2 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 4
  5508 ;; This function calls:
  5509 ;;		_AD_capture_BattVoltage
  5510 ;;		_MotorBREAK
  5511 ;;		_MotorON
  5512 ;;		_Read_IR
  5513 ;;		_WriteSTLED316SData
  5514 ;;		_WriteSTLED316SErr
  5515 ;;		_delay_1ms
  5516 ;;		_readWeighingData
  5517 ;; This function is called by:
  5518 ;;		_main
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text23
  5523   0012A4                     __ptext23:
  5524                           	callstack 0
  5525   0012A4                     _Homing_Again_Manual:
  5526                           	callstack 26
  5527   0012A4                     
  5528                           ;main.c: 1094:     if (vibration_mode == 1) {
  5529   0012A4  042E               	decf	_vibration_mode^0,w,c
  5530   0012A6  A4D8               	btfss	status,2,c
  5531   0012A8  EF58  F009         	goto	u2351
  5532   0012AC  EF5A  F009         	goto	u2350
  5533   0012B0                     u2351:
  5534   0012B0  EF6F  F009         	goto	l394
  5535   0012B4                     u2350:
  5536   0012B4                     
  5537                           ;main.c: 1095:         LATCbits.LATC1 = 1;
  5538   0012B4  828B               	bsf	139,1,c	;volatile
  5539   0012B6                     
  5540                           ;main.c: 1096:         delay_1ms(Vmotor_Time);
  5541   0012B6  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  5542   0012BA  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5543   0012BE  EC97  F013         	call	_delay_1ms	;wreg free
  5544   0012C2                     
  5545                           ;main.c: 1097:         LATCbits.LATC1 = 0;
  5546   0012C2  928B               	bcf	139,1,c	;volatile
  5547   0012C4                     l3839:
  5548                           
  5549                           ;main.c: 1098:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5550   0012C4  0E04               	movlw	4
  5551   0012C6  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5552   0012C8  0E0C               	movlw	12
  5553   0012CA  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5554   0012CC  0E34               	movlw	52
  5555   0012CE                     u4507:
  5556   0012CE  2EE8               	decfsz	wreg,f,c
  5557   0012D0  D7FE               	bra	u4507
  5558   0012D2  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5559   0012D4  D7FC               	bra	u4507
  5560   0012D6  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5561   0012D8  D7FA               	bra	u4507
  5562                           
  5563                           ;main.c: 1099:     } else {
  5564   0012DA  EF72  F009         	goto	l3843
  5565   0012DE                     l394:
  5566                           
  5567                           ;main.c: 1100:         LATCbits.LATC1 = 0;
  5568   0012DE  928B               	bcf	139,1,c	;volatile
  5569   0012E0  EF62  F009         	goto	l3839
  5570   0012E4                     l3843:
  5571                           
  5572                           ;main.c: 1104:     LATAbits.LATA2 = 1;
  5573   0012E4  8489               	bsf	137,2,c	;volatile
  5574   0012E6                     
  5575                           ;main.c: 1107:     if (NUM == 0) {
  5576   0012E6  5019               	movf	_NUM^0,w,c
  5577   0012E8  101A               	iorwf	(_NUM+1)^0,w,c
  5578   0012EA  A4D8               	btfss	status,2,c
  5579   0012EC  EF7A  F009         	goto	u2361
  5580   0012F0  EF7C  F009         	goto	u2360
  5581   0012F4                     u2361:
  5582   0012F4  EF82  F009         	goto	l3851
  5583   0012F8                     u2360:
  5584   0012F8                     
  5585                           ;main.c: 1108:         i_RUN_ZERO = 1;
  5586   0012F8  0E00               	movlw	0
  5587   0012FA  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  5588   0012FC  0E01               	movlw	1
  5589   0012FE  6E17               	movwf	_i_RUN_ZERO^0,c
  5590                           
  5591                           ;main.c: 1109:     }
  5592   001300  EF54  F00B         	goto	l3959
  5593   001304                     l3851:
  5594                           
  5595                           ;main.c: 1111:     {;main.c: 1112:         i_RUN_ZERO = 0;
  5596   001304  0E00               	movlw	0
  5597   001306  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  5598   001308  0E00               	movlw	0
  5599   00130A  6E17               	movwf	_i_RUN_ZERO^0,c
  5600   00130C  EF54  F00B         	goto	l3959
  5601   001310                     l399:
  5602   001310  0004               	clrwdt		;# 
  5603   001312                     
  5604                           ;main.c: 1118:         readWeighingData();
  5605   001312  EC80  F012         	call	_readWeighingData	;wreg free
  5606   001316                     
  5607                           ;main.c: 1119:         AD_capture_BattVoltage();
  5608   001316  ECF1  F012         	call	_AD_capture_BattVoltage	;wreg free
  5609   00131A                     
  5610                           ;main.c: 1120:         delay_1ms(Motor_Pause_Time);
  5611   00131A  C01B  F03C         	movff	_Motor_Pause_Time,delay_1ms@time
  5612   00131E  C01C  F03D         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5613   001322  EC97  F013         	call	_delay_1ms	;wreg free
  5614   001326                     
  5615                           ;main.c: 1121:         MotorON();
  5616   001326  EC3C  F014         	call	_MotorON	;wreg free
  5617   00132A                     
  5618                           ;main.c: 1123:         _delay((unsigned long)((150)*(8000000/4000.0)));
  5619   00132A  0E02               	movlw	2
  5620   00132C  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5621   00132E  0E86               	movlw	134
  5622   001330  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5623   001332  0E99               	movlw	153
  5624   001334                     u4517:
  5625   001334  2EE8               	decfsz	wreg,f,c
  5626   001336  D7FE               	bra	u4517
  5627   001338  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5628   00133A  D7FC               	bra	u4517
  5629   00133C  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5630   00133E  D7FA               	bra	u4517
  5631   001340  F000               	nop	
  5632   001342                     
  5633                           ;main.c: 1124:         errorcounter = 30;
  5634   001342  0E1E               	movlw	30
  5635   001344  6E50               	movwf	_errorcounter^0,c	;volatile
  5636   001346  0E00               	movlw	0
  5637   001348  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5638   00134A  0E00               	movlw	0
  5639   00134C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5640   00134E  0E00               	movlw	0
  5641   001350  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5642   001352                     l3865:
  5643                           
  5644                           ;main.c: 1128:             IR_SENSORF = Read_IR();
  5645   001352  ECE6  F013         	call	_Read_IR	;wreg free
  5646   001356  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5647   00135A  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5648   00135E                     
  5649                           ;main.c: 1129:             if (errorcounter == 0) {
  5650   00135E  5050               	movf	_errorcounter^0,w,c	;volatile
  5651   001360  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5652   001362  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5653   001364  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5654   001366  A4D8               	btfss	status,2,c
  5655   001368  EFB8  F009         	goto	u2371
  5656   00136C  EFBA  F009         	goto	u2370
  5657   001370                     u2371:
  5658   001370  EFBF  F009         	goto	l3873
  5659   001374                     u2370:
  5660   001374                     
  5661                           ;main.c: 1130:                 WriteSTLED316SErr('1');
  5662   001374  0E31               	movlw	49
  5663   001376  EC72  F00F         	call	_WriteSTLED316SErr
  5664   00137A                     
  5665                           ;main.c: 1131:                 MotorBREAK();
  5666   00137A  EC41  F014         	call	_MotorBREAK	;wreg free
  5667   00137E                     l3873:
  5668                           
  5669                           ;main.c: 1134:         } while (IR_SENSORF != 0);
  5670   00137E  5011               	movf	_IR_SENSORF^0,w,c
  5671   001380  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5672   001382  A4D8               	btfss	status,2,c
  5673   001384  EFC6  F009         	goto	u2381
  5674   001388  EFC8  F009         	goto	u2380
  5675   00138C                     u2381:
  5676   00138C  EFA9  F009         	goto	l3865
  5677   001390                     u2380:
  5678   001390                     
  5679                           ;main.c: 1136:         _delay((unsigned long)((30)*(8000000/4000.0)));
  5680   001390  0E4E               	movlw	78
  5681   001392  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5682   001394  0EEB               	movlw	235
  5683   001396                     u4527:
  5684   001396  2EE8               	decfsz	wreg,f,c
  5685   001398  D7FE               	bra	u4527
  5686   00139A  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5687   00139C  D7FC               	bra	u4527
  5688   00139E  F000               	nop	
  5689   0013A0                     
  5690                           ;main.c: 1138:         errorcounter = 30;
  5691   0013A0  0E1E               	movlw	30
  5692   0013A2  6E50               	movwf	_errorcounter^0,c	;volatile
  5693   0013A4  0E00               	movlw	0
  5694   0013A6  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5695   0013A8  0E00               	movlw	0
  5696   0013AA  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5697   0013AC  0E00               	movlw	0
  5698   0013AE  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5699   0013B0                     l3879:
  5700                           
  5701                           ;main.c: 1141:             IR_SENSORF = Read_IR();
  5702   0013B0  ECE6  F013         	call	_Read_IR	;wreg free
  5703   0013B4  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5704   0013B8  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5705   0013BC                     
  5706                           ;main.c: 1142:             if (errorcounter == 0) {
  5707   0013BC  5050               	movf	_errorcounter^0,w,c	;volatile
  5708   0013BE  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5709   0013C0  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5710   0013C2  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5711   0013C4  A4D8               	btfss	status,2,c
  5712   0013C6  EFE7  F009         	goto	u2391
  5713   0013CA  EFE9  F009         	goto	u2390
  5714   0013CE                     u2391:
  5715   0013CE  EFEE  F009         	goto	l3887
  5716   0013D2                     u2390:
  5717   0013D2                     
  5718                           ;main.c: 1143:                 WriteSTLED316SErr('2');
  5719   0013D2  0E32               	movlw	50
  5720   0013D4  EC72  F00F         	call	_WriteSTLED316SErr
  5721   0013D8                     
  5722                           ;main.c: 1144:                 MotorBREAK();
  5723   0013D8  EC41  F014         	call	_MotorBREAK	;wreg free
  5724   0013DC                     l3887:
  5725                           
  5726                           ;main.c: 1146:         } while (IR_SENSORF != 1);
  5727   0013DC  0411               	decf	_IR_SENSORF^0,w,c
  5728   0013DE  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5729   0013E0  A4D8               	btfss	status,2,c
  5730   0013E2  EFF5  F009         	goto	u2401
  5731   0013E6  EFF7  F009         	goto	u2400
  5732   0013EA                     u2401:
  5733   0013EA  EFD8  F009         	goto	l3879
  5734   0013EE                     u2400:
  5735   0013EE                     
  5736                           ;main.c: 1149:         errorcounter = 30;
  5737   0013EE  0E1E               	movlw	30
  5738   0013F0  6E50               	movwf	_errorcounter^0,c	;volatile
  5739   0013F2  0E00               	movlw	0
  5740   0013F4  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5741   0013F6  0E00               	movlw	0
  5742   0013F8  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5743   0013FA  0E00               	movlw	0
  5744   0013FC  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5745   0013FE                     
  5746                           ;main.c: 1150:         delay_1ms(Motor_Stop_Delay_Time);
  5747   0013FE  C01F  F03C         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5748   001402  C020  F03D         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5749   001406  EC97  F013         	call	_delay_1ms	;wreg free
  5750   00140A                     
  5751                           ;main.c: 1151:         MotorBREAK();
  5752   00140A  EC41  F014         	call	_MotorBREAK	;wreg free
  5753                           
  5754                           ;main.c: 1154:         if (NUM > 0 && i_RUN_ZERO != 1) {
  5755   00140E  5019               	movf	_NUM^0,w,c
  5756   001410  101A               	iorwf	(_NUM+1)^0,w,c
  5757   001412  B4D8               	btfsc	status,2,c
  5758   001414  EF0E  F00A         	goto	u2411
  5759   001418  EF10  F00A         	goto	u2410
  5760   00141C                     u2411:
  5761   00141C  EF1C  F00A         	goto	l3899
  5762   001420                     u2410:
  5763   001420  0417               	decf	_i_RUN_ZERO^0,w,c
  5764   001422  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5765   001424  B4D8               	btfsc	status,2,c
  5766   001426  EF17  F00A         	goto	u2421
  5767   00142A  EF19  F00A         	goto	u2420
  5768   00142E                     u2421:
  5769   00142E  EF1C  F00A         	goto	l3899
  5770   001432                     u2420:
  5771   001432                     
  5772                           ;main.c: 1155:             NUM--;
  5773   001432  0619               	decf	_NUM^0,f,c
  5774   001434  A0D8               	btfss	status,0,c
  5775   001436  061A               	decf	(_NUM+1)^0,f,c
  5776   001438                     l3899:
  5777                           
  5778                           ;main.c: 1158:         WriteSTLED316SData(NUM, vibration_mode);
  5779   001438  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  5780   00143C  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  5781   001440  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5782   001444  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  5783   001448                     
  5784                           ;main.c: 1159:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  5785   001448  042E               	decf	_vibration_mode^0,w,c
  5786   00144A  A4D8               	btfss	status,2,c
  5787   00144C  EF2A  F00A         	goto	u2431
  5788   001450  EF2C  F00A         	goto	u2430
  5789   001454                     u2431:
  5790   001454  EF53  F00A         	goto	l3913
  5791   001458                     u2430:
  5792   001458  5019               	movf	_NUM^0,w,c
  5793   00145A  101A               	iorwf	(_NUM+1)^0,w,c
  5794   00145C  A4D8               	btfss	status,2,c
  5795   00145E  EF33  F00A         	goto	u2441
  5796   001462  EF35  F00A         	goto	u2440
  5797   001466                     u2441:
  5798   001466  EF3E  F00A         	goto	l409
  5799   00146A                     u2440:
  5800   00146A  0417               	decf	_i_RUN_ZERO^0,w,c
  5801   00146C  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5802   00146E  A4D8               	btfss	status,2,c
  5803   001470  EF3C  F00A         	goto	u2451
  5804   001474  EF3E  F00A         	goto	u2450
  5805   001478                     u2451:
  5806   001478  EF53  F00A         	goto	l3913
  5807   00147C                     u2450:
  5808   00147C                     l409:
  5809                           
  5810                           ;main.c: 1160:             LATCbits.LATC1 = 1;
  5811   00147C  828B               	bsf	139,1,c	;volatile
  5812   00147E                     
  5813                           ;main.c: 1161:             delay_1ms(Vmotor_Time);
  5814   00147E  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  5815   001482  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5816   001486  EC97  F013         	call	_delay_1ms	;wreg free
  5817   00148A                     
  5818                           ;main.c: 1162:             LATCbits.LATC1 = 0;
  5819   00148A  928B               	bcf	139,1,c	;volatile
  5820   00148C                     
  5821                           ;main.c: 1163:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5822   00148C  0E04               	movlw	4
  5823   00148E  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5824   001490  0E0C               	movlw	12
  5825   001492  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5826   001494  0E34               	movlw	52
  5827   001496                     u4537:
  5828   001496  2EE8               	decfsz	wreg,f,c
  5829   001498  D7FE               	bra	u4537
  5830   00149A  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5831   00149C  D7FC               	bra	u4537
  5832   00149E  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5833   0014A0  D7FA               	bra	u4537
  5834                           
  5835                           ;main.c: 1165:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) 
      +                          {
  5836   0014A2  EF93  F00A         	goto	l410
  5837   0014A6                     l3913:
  5838   0014A6  502E               	movf	_vibration_mode^0,w,c
  5839   0014A8  A4D8               	btfss	status,2,c
  5840   0014AA  EF59  F00A         	goto	u2461
  5841   0014AE  EF5B  F00A         	goto	u2460
  5842   0014B2                     u2461:
  5843   0014B2  EF93  F00A         	goto	l410
  5844   0014B6                     u2460:
  5845   0014B6  5019               	movf	_NUM^0,w,c
  5846   0014B8  101A               	iorwf	(_NUM+1)^0,w,c
  5847   0014BA  A4D8               	btfss	status,2,c
  5848   0014BC  EF62  F00A         	goto	u2471
  5849   0014C0  EF64  F00A         	goto	u2470
  5850   0014C4                     u2471:
  5851   0014C4  EF6D  F00A         	goto	l413
  5852   0014C8                     u2470:
  5853   0014C8  0417               	decf	_i_RUN_ZERO^0,w,c
  5854   0014CA  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5855   0014CC  A4D8               	btfss	status,2,c
  5856   0014CE  EF6B  F00A         	goto	u2481
  5857   0014D2  EF6D  F00A         	goto	u2480
  5858   0014D6                     u2481:
  5859   0014D6  EF93  F00A         	goto	l410
  5860   0014DA                     u2480:
  5861   0014DA                     l413:
  5862                           
  5863                           ;main.c: 1166:             LATCbits.LATC1 = 0;
  5864   0014DA  928B               	bcf	139,1,c	;volatile
  5865   0014DC                     
  5866                           ;main.c: 1167:             if (NUM != 0 || i_RUN_ZERO == 1) {
  5867   0014DC  5019               	movf	_NUM^0,w,c
  5868   0014DE  101A               	iorwf	(_NUM+1)^0,w,c
  5869   0014E0  A4D8               	btfss	status,2,c
  5870   0014E2  EF75  F00A         	goto	u2491
  5871   0014E6  EF77  F00A         	goto	u2490
  5872   0014EA                     u2491:
  5873   0014EA  EF80  F00A         	goto	l3923
  5874   0014EE                     u2490:
  5875   0014EE  0417               	decf	_i_RUN_ZERO^0,w,c
  5876   0014F0  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5877   0014F2  A4D8               	btfss	status,2,c
  5878   0014F4  EF7E  F00A         	goto	u2501
  5879   0014F8  EF80  F00A         	goto	u2500
  5880   0014FC                     u2501:
  5881   0014FC  EF88  F00A         	goto	l3925
  5882   001500                     u2500:
  5883   001500                     l3923:
  5884                           
  5885                           ;main.c: 1168:                 delay_1ms(Vmotor_Time);
  5886   001500  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  5887   001504  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5888   001508  EC97  F013         	call	_delay_1ms	;wreg free
  5889                           
  5890                           ;main.c: 1169:             } else {
  5891   00150C  EF93  F00A         	goto	l410
  5892   001510                     l3925:
  5893                           
  5894                           ;main.c: 1170:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  5895   001510  0E06               	movlw	6
  5896   001512  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5897   001514  0E13               	movlw	19
  5898   001516  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5899   001518  0EAE               	movlw	174
  5900   00151A                     u4547:
  5901   00151A  2EE8               	decfsz	wreg,f,c
  5902   00151C  D7FE               	bra	u4547
  5903   00151E  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5904   001520  D7FC               	bra	u4547
  5905   001522  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5906   001524  D7FA               	bra	u4547
  5907   001526                     l410:
  5908                           
  5909                           ;main.c: 1178:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  5910   001526  0ECB               	movlw	203
  5911   001528  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5912   00152A  0EEC               	movlw	236
  5913   00152C  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5914   00152E  0E84               	movlw	132
  5915   001530                     u4557:
  5916   001530  2EE8               	decfsz	wreg,f,c
  5917   001532  D7FE               	bra	u4557
  5918   001534  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5919   001536  D7FC               	bra	u4557
  5920   001538  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5921   00153A  D7FA               	bra	u4557
  5922   00153C  D000               	nop2	
  5923                           
  5924                           ;main.c: 1179:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  5925   00153E  0ECB               	movlw	203
  5926   001540  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5927   001542  0EEC               	movlw	236
  5928   001544  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5929   001546  0E84               	movlw	132
  5930   001548                     u4567:
  5931   001548  2EE8               	decfsz	wreg,f,c
  5932   00154A  D7FE               	bra	u4567
  5933   00154C  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5934   00154E  D7FC               	bra	u4567
  5935   001550  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5936   001552  D7FA               	bra	u4567
  5937   001554  D000               	nop2	
  5938                           
  5939                           ;main.c: 1180:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  5940   001556  0ECB               	movlw	203
  5941   001558  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5942   00155A  0EEC               	movlw	236
  5943   00155C  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5944   00155E  0E84               	movlw	132
  5945   001560                     u4577:
  5946   001560  2EE8               	decfsz	wreg,f,c
  5947   001562  D7FE               	bra	u4577
  5948   001564  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5949   001566  D7FC               	bra	u4577
  5950   001568  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5951   00156A  D7FA               	bra	u4577
  5952   00156C  D000               	nop2	
  5953                           
  5954                           ;main.c: 1181:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  5955   00156E  0ECB               	movlw	203
  5956   001570  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5957   001572  0EEC               	movlw	236
  5958   001574  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5959   001576  0E84               	movlw	132
  5960   001578                     u4587:
  5961   001578  2EE8               	decfsz	wreg,f,c
  5962   00157A  D7FE               	bra	u4587
  5963   00157C  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5964   00157E  D7FC               	bra	u4587
  5965   001580  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5966   001582  D7FA               	bra	u4587
  5967   001584  D000               	nop2	
  5968                           
  5969                           ;main.c: 1182:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  5970   001586  0ECB               	movlw	203
  5971   001588  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5972   00158A  0EEC               	movlw	236
  5973   00158C  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5974   00158E  0E84               	movlw	132
  5975   001590                     u4597:
  5976   001590  2EE8               	decfsz	wreg,f,c
  5977   001592  D7FE               	bra	u4597
  5978   001594  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5979   001596  D7FC               	bra	u4597
  5980   001598  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5981   00159A  D7FA               	bra	u4597
  5982   00159C  D000               	nop2	
  5983                           
  5984                           ;main.c: 1183:         _delay((unsigned long)((20000)*(8000000/4000.0)));
  5985   00159E  0ECB               	movlw	203
  5986   0015A0  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5987   0015A2  0EEC               	movlw	236
  5988   0015A4  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5989   0015A6  0E84               	movlw	132
  5990   0015A8                     u4607:
  5991   0015A8  2EE8               	decfsz	wreg,f,c
  5992   0015AA  D7FE               	bra	u4607
  5993   0015AC  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5994   0015AE  D7FC               	bra	u4607
  5995   0015B0  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5996   0015B2  D7FA               	bra	u4607
  5997   0015B4  D000               	nop2	
  5998   0015B6                     
  5999                           ;main.c: 1186:         if (Stop == 1)
  6000   0015B6  0431               	decf	_Stop^0,w,c
  6001   0015B8  A4D8               	btfss	status,2,c
  6002   0015BA  EFE1  F00A         	goto	u2511
  6003   0015BE  EFE3  F00A         	goto	u2510
  6004   0015C2                     u2511:
  6005   0015C2  EF10  F00B         	goto	l3941
  6006   0015C6                     u2510:
  6007   0015C6  EF66  F00B         	goto	l419
  6008   0015CA                     l3931:
  6009                           
  6010                           ;main.c: 1201:             i_RUN_ZERO = 2;
  6011   0015CA  0E00               	movlw	0
  6012   0015CC  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  6013   0015CE  0E02               	movlw	2
  6014   0015D0  6E17               	movwf	_i_RUN_ZERO^0,c
  6015   0015D2                     
  6016                           ;main.c: 1202:             WriteSTLED316SData(NUM, !vibration_mode);
  6017   0015D2  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  6018   0015D6  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  6019   0015DA  502E               	movf	_vibration_mode^0,w,c
  6020   0015DC  B4D8               	btfsc	status,2,c
  6021   0015DE  EFF3  F00A         	goto	u2521
  6022   0015E2  EFF6  F00A         	goto	u2520
  6023   0015E6                     u2521:
  6024   0015E6  0E01               	movlw	1
  6025   0015E8  EFF7  F00A         	goto	u2530
  6026   0015EC                     u2520:
  6027   0015EC  0E00               	movlw	0
  6028   0015EE                     u2530:
  6029   0015EE  6E46               	movwf	WriteSTLED316SData@v_mode^0,c
  6030   0015F0  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  6031   0015F4                     
  6032                           ;main.c: 1203:             _delay((unsigned long)((50)*(8000000/4000.0)));
  6033   0015F4  0E82               	movlw	130
  6034   0015F6  6E4D               	movwf	??_Homing_Again_Manual^0,c
  6035   0015F8  0EDE               	movlw	222
  6036   0015FA                     u4617:
  6037   0015FA  2EE8               	decfsz	wreg,f,c
  6038   0015FC  D7FE               	bra	u4617
  6039   0015FE  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  6040   001600  D7FC               	bra	u4617
  6041   001602                     
  6042                           ;main.c: 1204:             WriteSTLED316SData(NUM, vibration_mode);
  6043   001602  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  6044   001606  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  6045   00160A  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  6046   00160E  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  6047   001612                     
  6048                           ;main.c: 1205:             _delay((unsigned long)((50)*(8000000/4000.0)));
  6049   001612  0E82               	movlw	130
  6050   001614  6E4D               	movwf	??_Homing_Again_Manual^0,c
  6051   001616  0EDE               	movlw	222
  6052   001618                     u4627:
  6053   001618  2EE8               	decfsz	wreg,f,c
  6054   00161A  D7FE               	bra	u4627
  6055   00161C  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  6056   00161E  D7FC               	bra	u4627
  6057   001620                     l3941:
  6058                           
  6059                           ;main.c: 1200:         while (dispense == 0 && (i_RUN_ZERO == 1 || i_RUN_ZERO == 0)) {
  6060   001620  5009               	movf	_dispense^0,w,c
  6061   001622  100A               	iorwf	(_dispense+1)^0,w,c
  6062   001624  A4D8               	btfss	status,2,c
  6063   001626  EF17  F00B         	goto	u2541
  6064   00162A  EF19  F00B         	goto	u2540
  6065   00162E                     u2541:
  6066   00162E  EF2B  F00B         	goto	l3947
  6067   001632                     u2540:
  6068   001632  0417               	decf	_i_RUN_ZERO^0,w,c
  6069   001634  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  6070   001636  B4D8               	btfsc	status,2,c
  6071   001638  EF20  F00B         	goto	u2551
  6072   00163C  EF22  F00B         	goto	u2550
  6073   001640                     u2551:
  6074   001640  EFE5  F00A         	goto	l3931
  6075   001644                     u2550:
  6076   001644  5017               	movf	_i_RUN_ZERO^0,w,c
  6077   001646  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  6078   001648  B4D8               	btfsc	status,2,c
  6079   00164A  EF29  F00B         	goto	u2561
  6080   00164E  EF2B  F00B         	goto	u2560
  6081   001652                     u2561:
  6082   001652  EFE5  F00A         	goto	l3931
  6083   001656                     u2560:
  6084   001656                     l3947:
  6085                           
  6086                           ;main.c: 1212:         WriteSTLED316SData(NUM, vibration_mode);
  6087   001656  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  6088   00165A  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  6089   00165E  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  6090   001662  EC06  F011         	call	_WriteSTLED316SData	;wreg free
  6091   001666                     
  6092                           ;main.c: 1214:         if(dispense == 0 && NUM != 0)
  6093   001666  5009               	movf	_dispense^0,w,c
  6094   001668  100A               	iorwf	(_dispense+1)^0,w,c
  6095   00166A  A4D8               	btfss	status,2,c
  6096   00166C  EF3A  F00B         	goto	u2571
  6097   001670  EF3C  F00B         	goto	u2570
  6098   001674                     u2571:
  6099   001674  EF4D  F00B         	goto	l3957
  6100   001678                     u2570:
  6101   001678  5019               	movf	_NUM^0,w,c
  6102   00167A  101A               	iorwf	(_NUM+1)^0,w,c
  6103   00167C  B4D8               	btfsc	status,2,c
  6104   00167E  EF43  F00B         	goto	u2581
  6105   001682  EF45  F00B         	goto	u2580
  6106   001686                     u2581:
  6107   001686  EF4D  F00B         	goto	l3957
  6108   00168A                     u2580:
  6109   00168A                     
  6110                           ;main.c: 1215:         {;main.c: 1216:             NUM_REC = NUM;
  6111   00168A  C019  F015         	movff	_NUM,_NUM_REC
  6112   00168E  C01A  F016         	movff	_NUM+1,_NUM_REC+1
  6113   001692                     
  6114                           ;main.c: 1217:             NUM = 0;
  6115   001692  0E00               	movlw	0
  6116   001694  6E1A               	movwf	(_NUM+1)^0,c
  6117   001696  0E00               	movlw	0
  6118   001698  6E19               	movwf	_NUM^0,c
  6119   00169A                     l3957:
  6120                           
  6121                           ;main.c: 1219:         _delay((unsigned long)((50)*(8000000/4000.0)));
  6122   00169A  0E82               	movlw	130
  6123   00169C  6E4D               	movwf	??_Homing_Again_Manual^0,c
  6124   00169E  0EDE               	movlw	222
  6125   0016A0                     u4637:
  6126   0016A0  2EE8               	decfsz	wreg,f,c
  6127   0016A2  D7FE               	bra	u4637
  6128   0016A4  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  6129   0016A6  D7FC               	bra	u4637
  6130   0016A8                     l3959:
  6131                           
  6132                           ;main.c: 1116:     while (NUM > 0 || i_RUN_ZERO == 1) {
  6133   0016A8  5019               	movf	_NUM^0,w,c
  6134   0016AA  101A               	iorwf	(_NUM+1)^0,w,c
  6135   0016AC  A4D8               	btfss	status,2,c
  6136   0016AE  EF5B  F00B         	goto	u2591
  6137   0016B2  EF5D  F00B         	goto	u2590
  6138   0016B6                     u2591:
  6139   0016B6  EF88  F009         	goto	l399
  6140   0016BA                     u2590:
  6141   0016BA  0417               	decf	_i_RUN_ZERO^0,w,c
  6142   0016BC  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  6143   0016BE  B4D8               	btfsc	status,2,c
  6144   0016C0  EF64  F00B         	goto	u2601
  6145   0016C4  EF66  F00B         	goto	u2600
  6146   0016C8                     u2601:
  6147   0016C8  EF88  F009         	goto	l399
  6148   0016CC                     u2600:
  6149   0016CC                     l419:
  6150                           
  6151                           ;main.c: 1223:     LATAbits.LATA2 = 0;
  6152   0016CC  9489               	bcf	137,2,c	;volatile
  6153   0016CE                     
  6154                           ;main.c: 1225:     if ((NUM == 0 || Stop == 1) && i_RUN_ZERO == 0) {
  6155   0016CE  5019               	movf	_NUM^0,w,c
  6156   0016D0  101A               	iorwf	(_NUM+1)^0,w,c
  6157   0016D2  B4D8               	btfsc	status,2,c
  6158   0016D4  EF6E  F00B         	goto	u2611
  6159   0016D8  EF70  F00B         	goto	u2610
  6160   0016DC                     u2611:
  6161   0016DC  EF78  F00B         	goto	l3967
  6162   0016E0                     u2610:
  6163   0016E0  0431               	decf	_Stop^0,w,c
  6164   0016E2  A4D8               	btfss	status,2,c
  6165   0016E4  EF76  F00B         	goto	u2621
  6166   0016E8  EF78  F00B         	goto	u2620
  6167   0016EC                     u2621:
  6168   0016EC  EF9C  F00B         	goto	l3979
  6169   0016F0                     u2620:
  6170   0016F0                     l3967:
  6171   0016F0  5017               	movf	_i_RUN_ZERO^0,w,c
  6172   0016F2  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  6173   0016F4  A4D8               	btfss	status,2,c
  6174   0016F6  EF7F  F00B         	goto	u2631
  6175   0016FA  EF81  F00B         	goto	u2630
  6176   0016FE                     u2631:
  6177   0016FE  EF9C  F00B         	goto	l3979
  6178   001702                     u2630:
  6179   001702                     
  6180                           ;main.c: 1227:         if (vibration_mode == 1) {
  6181   001702  042E               	decf	_vibration_mode^0,w,c
  6182   001704  A4D8               	btfss	status,2,c
  6183   001706  EF87  F00B         	goto	u2641
  6184   00170A  EF89  F00B         	goto	u2640
  6185   00170E                     u2641:
  6186   00170E  EF9C  F00B         	goto	l3979
  6187   001712                     u2640:
  6188   001712                     
  6189                           ;main.c: 1228:             LATCbits.LATC1 = 1;
  6190   001712  828B               	bsf	139,1,c	;volatile
  6191   001714                     
  6192                           ;main.c: 1229:             delay_1ms(Vmotor_Time);
  6193   001714  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  6194   001718  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6195   00171C  EC97  F013         	call	_delay_1ms	;wreg free
  6196   001720                     
  6197                           ;main.c: 1231:             LATCbits.LATC1 = 0;
  6198   001720  928B               	bcf	139,1,c	;volatile
  6199   001722                     
  6200                           ;main.c: 1232:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6201   001722  0E04               	movlw	4
  6202   001724  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  6203   001726  0E0C               	movlw	12
  6204   001728  6E4D               	movwf	??_Homing_Again_Manual^0,c
  6205   00172A  0E34               	movlw	52
  6206   00172C                     u4647:
  6207   00172C  2EE8               	decfsz	wreg,f,c
  6208   00172E  D7FE               	bra	u4647
  6209   001730  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  6210   001732  D7FC               	bra	u4647
  6211   001734  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  6212   001736  D7FA               	bra	u4647
  6213   001738                     l3979:
  6214                           
  6215                           ;main.c: 1236:     i_RUN_ZERO = 0;
  6216   001738  0E00               	movlw	0
  6217   00173A  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  6218   00173C  0E00               	movlw	0
  6219   00173E  6E17               	movwf	_i_RUN_ZERO^0,c
  6220   001740                     
  6221                           ;main.c: 1237:     NUM = 0;
  6222   001740  0E00               	movlw	0
  6223   001742  6E1A               	movwf	(_NUM+1)^0,c
  6224   001744  0E00               	movlw	0
  6225   001746  6E19               	movwf	_NUM^0,c
  6226   001748                     
  6227                           ;main.c: 1239:     dispense = 0;
  6228   001748  0E00               	movlw	0
  6229   00174A  6E0A               	movwf	(_dispense+1)^0,c
  6230   00174C  0E00               	movlw	0
  6231   00174E  6E09               	movwf	_dispense^0,c
  6232   001750                     
  6233                           ;main.c: 1240:     OpMode = MANUAL_MODE;
  6234   001750  0E00               	movlw	0
  6235   001752  6E2C               	movwf	_OpMode^0,c	;volatile
  6236   001754  0012               	return		;funcret
  6237   001756                     __end_of_Homing_Again_Manual:
  6238                           	callstack 0
  6239                           
  6240 ;; *************** function _WriteSTLED316SData *****************
  6241 ;; Defined at:
  6242 ;;		line 145 in file "Display.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  number          2   16[COMRAM] int 
  6245 ;;  v_mode          1   18[COMRAM] unsigned char 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  NUM_DIG1        2   21[COMRAM] int 
  6248 ;;  NUM_DIG0        2   19[COMRAM] int 
  6249 ;;  data4           1   24[COMRAM] unsigned char 
  6250 ;;  data3           1   23[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;Total ram usage:        9 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; Hardware stack levels required when called: 3
  6267 ;; This function calls:
  6268 ;;		_Get7Seg
  6269 ;;		_STLED316s_SPI_SendData
  6270 ;;		___awdiv
  6271 ;;		___awmod
  6272 ;; This function is called by:
  6273 ;;		_main
  6274 ;;		_Homing_Again_Manual
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text24
  6279   00220C                     __ptext24:
  6280                           	callstack 0
  6281   00220C                     _WriteSTLED316SData:
  6282                           	callstack 27
  6283   00220C                     
  6284                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  6285   00220C  C044  F03C         	movff	WriteSTLED316SData@number,___awmod@dividend
  6286   002210  C045  F03D         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  6287   002214  0E00               	movlw	0
  6288   002216  6E3F               	movwf	(___awmod@divisor+1)^0,c
  6289   002218  0E0A               	movlw	10
  6290   00221A  6E3E               	movwf	___awmod@divisor^0,c
  6291   00221C  ECAE  F010         	call	___awmod	;wreg free
  6292   002220  C03C  F047         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  6293   002224  C03D  F048         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  6294                           
  6295                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  6296   002228  C044  F03C         	movff	WriteSTLED316SData@number,___awdiv@dividend
  6297   00222C  C045  F03D         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  6298   002230  0E00               	movlw	0
  6299   002232  6E3F               	movwf	(___awdiv@divisor+1)^0,c
  6300   002234  0E0A               	movlw	10
  6301   002236  6E3E               	movwf	___awdiv@divisor^0,c
  6302   002238  EC4C  F010         	call	___awdiv	;wreg free
  6303   00223C  C03C  F049         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  6304   002240  C03D  F04A         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  6305   002244                     
  6306                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  6307   002244  988B               	bcf	139,4,c	;volatile
  6308                           
  6309                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  6310   002246  0E00               	movlw	0
  6311   002248  ECA0  F011         	call	_STLED316s_SPI_SendData
  6312   00224C                     
  6313                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  6314   00224C  888B               	bsf	139,4,c	;volatile
  6315   00224E                     
  6316                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  6317   00224E  988B               	bcf	139,4,c	;volatile
  6318                           
  6319                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  6320   002250  0E00               	movlw	0
  6321   002252  ECA0  F011         	call	_STLED316s_SPI_SendData
  6322                           
  6323                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  6324   002256  C049  F03C         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  6325   00225A  C04A  F03D         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  6326   00225E  ECE6  F00F         	call	_Get7Seg	;wreg free
  6327   002262  6E4C               	movwf	WriteSTLED316SData@data4^0,c
  6328                           
  6329                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  6330   002264  C047  F03C         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  6331   002268  C048  F03D         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  6332   00226C  ECE6  F00F         	call	_Get7Seg	;wreg free
  6333   002270  6E4B               	movwf	WriteSTLED316SData@data3^0,c
  6334   002272                     
  6335                           ;Display.c: 165:     if (v_mode) {
  6336   002272  5046               	movf	WriteSTLED316SData@v_mode^0,w,c
  6337   002274  B4D8               	btfsc	status,2,c
  6338   002276  EF3F  F011         	goto	u2121
  6339   00227A  EF41  F011         	goto	u2120
  6340   00227E                     u2121:
  6341   00227E  EF4D  F011         	goto	l3423
  6342   002282                     u2120:
  6343   002282                     
  6344                           ;Display.c: 166:         if (v_mode == 0xFF)
  6345   002282  2846               	incf	WriteSTLED316SData@v_mode^0,w,c
  6346   002284  A4D8               	btfss	status,2,c
  6347   002286  EF47  F011         	goto	u2131
  6348   00228A  EF49  F011         	goto	u2130
  6349   00228E                     u2131:
  6350   00228E  EF4C  F011         	goto	l3421
  6351   002292                     u2130:
  6352   002292                     
  6353                           ;Display.c: 167:             data4 |= 0x80;
  6354   002292  8E4C               	bsf	WriteSTLED316SData@data4^0,7,c
  6355   002294  EF4D  F011         	goto	l3423
  6356   002298                     l3421:
  6357                           
  6358                           ;Display.c: 169:             data3 |= 0x80;
  6359   002298  8E4B               	bsf	WriteSTLED316SData@data3^0,7,c
  6360   00229A                     l3423:
  6361                           
  6362                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  6363   00229A  504C               	movf	WriteSTLED316SData@data4^0,w,c
  6364   00229C  ECA0  F011         	call	_STLED316s_SPI_SendData
  6365   0022A0                     
  6366                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  6367   0022A0  504B               	movf	WriteSTLED316SData@data3^0,w,c
  6368   0022A2  ECA0  F011         	call	_STLED316s_SPI_SendData
  6369   0022A6                     
  6370                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  6371   0022A6  888B               	bsf	139,4,c	;volatile
  6372   0022A8                     
  6373                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  6374   0022A8  988B               	bcf	139,4,c	;volatile
  6375   0022AA                     
  6376                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  6377   0022AA  0E0D               	movlw	13
  6378   0022AC  ECA0  F011         	call	_STLED316s_SPI_SendData
  6379   0022B0                     
  6380                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  6381   0022B0  888B               	bsf	139,4,c	;volatile
  6382   0022B2  0012               	return		;funcret
  6383   0022B4                     __end_of_WriteSTLED316SData:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function ___awmod *****************
  6387 ;; Defined at:
  6388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  dividend        2    8[COMRAM] int 
  6391 ;;  divisor         2   10[COMRAM] int 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;  sign            1   13[COMRAM] unsigned char 
  6394 ;;  counter         1   12[COMRAM] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  2    8[COMRAM] int 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;Total ram usage:        6 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 2
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_WriteSTLED316SData
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text25
  6419   00215C                     __ptext25:
  6420                           	callstack 0
  6421   00215C                     ___awmod:
  6422                           	callstack 27
  6423   00215C  0E00               	movlw	0
  6424   00215E  6E41               	movwf	___awmod@sign^0,c
  6425   002160  BE3D               	btfsc	(___awmod@dividend+1)^0,7,c
  6426   002162  EFB7  F010         	goto	u2060
  6427   002166  EFB5  F010         	goto	u2061
  6428   00216A                     u2061:
  6429   00216A  EFBD  F010         	goto	l3379
  6430   00216E                     u2060:
  6431   00216E  6C3C               	negf	___awmod@dividend^0,c
  6432   002170  1E3D               	comf	(___awmod@dividend+1)^0,f,c
  6433   002172  B0D8               	btfsc	status,0,c
  6434   002174  2A3D               	incf	(___awmod@dividend+1)^0,f,c
  6435   002176  0E01               	movlw	1
  6436   002178  6E41               	movwf	___awmod@sign^0,c
  6437   00217A                     l3379:
  6438   00217A  BE3F               	btfsc	(___awmod@divisor+1)^0,7,c
  6439   00217C  EFC4  F010         	goto	u2070
  6440   002180  EFC2  F010         	goto	u2071
  6441   002184                     u2071:
  6442   002184  EFC8  F010         	goto	l3383
  6443   002188                     u2070:
  6444   002188  6C3E               	negf	___awmod@divisor^0,c
  6445   00218A  1E3F               	comf	(___awmod@divisor+1)^0,f,c
  6446   00218C  B0D8               	btfsc	status,0,c
  6447   00218E  2A3F               	incf	(___awmod@divisor+1)^0,f,c
  6448   002190                     l3383:
  6449   002190  503E               	movf	___awmod@divisor^0,w,c
  6450   002192  103F               	iorwf	(___awmod@divisor+1)^0,w,c
  6451   002194  B4D8               	btfsc	status,2,c
  6452   002196  EFCF  F010         	goto	u2081
  6453   00219A  EFD1  F010         	goto	u2080
  6454   00219E                     u2081:
  6455   00219E  EFF5  F010         	goto	l3399
  6456   0021A2                     u2080:
  6457   0021A2  0E01               	movlw	1
  6458   0021A4  6E40               	movwf	___awmod@counter^0,c
  6459   0021A6  EFD9  F010         	goto	l3389
  6460   0021AA                     l3387:
  6461   0021AA  90D8               	bcf	status,0,c
  6462   0021AC  363E               	rlcf	___awmod@divisor^0,f,c
  6463   0021AE  363F               	rlcf	(___awmod@divisor+1)^0,f,c
  6464   0021B0  2A40               	incf	___awmod@counter^0,f,c
  6465   0021B2                     l3389:
  6466   0021B2  AE3F               	btfss	(___awmod@divisor+1)^0,7,c
  6467   0021B4  EFDE  F010         	goto	u2091
  6468   0021B8  EFE0  F010         	goto	u2090
  6469   0021BC                     u2091:
  6470   0021BC  EFD5  F010         	goto	l3387
  6471   0021C0                     u2090:
  6472   0021C0                     l3391:
  6473   0021C0  503E               	movf	___awmod@divisor^0,w,c
  6474   0021C2  5C3C               	subwf	___awmod@dividend^0,w,c
  6475   0021C4  503F               	movf	(___awmod@divisor+1)^0,w,c
  6476   0021C6  583D               	subwfb	(___awmod@dividend+1)^0,w,c
  6477   0021C8  A0D8               	btfss	status,0,c
  6478   0021CA  EFE9  F010         	goto	u2101
  6479   0021CE  EFEB  F010         	goto	u2100
  6480   0021D2                     u2101:
  6481   0021D2  EFEF  F010         	goto	l3395
  6482   0021D6                     u2100:
  6483   0021D6  503E               	movf	___awmod@divisor^0,w,c
  6484   0021D8  5E3C               	subwf	___awmod@dividend^0,f,c
  6485   0021DA  503F               	movf	(___awmod@divisor+1)^0,w,c
  6486   0021DC  5A3D               	subwfb	(___awmod@dividend+1)^0,f,c
  6487   0021DE                     l3395:
  6488   0021DE  90D8               	bcf	status,0,c
  6489   0021E0  323F               	rrcf	(___awmod@divisor+1)^0,f,c
  6490   0021E2  323E               	rrcf	___awmod@divisor^0,f,c
  6491   0021E4  2E40               	decfsz	___awmod@counter^0,f,c
  6492   0021E6  EFE0  F010         	goto	l3391
  6493   0021EA                     l3399:
  6494   0021EA  5041               	movf	___awmod@sign^0,w,c
  6495   0021EC  B4D8               	btfsc	status,2,c
  6496   0021EE  EFFB  F010         	goto	u2111
  6497   0021F2  EFFD  F010         	goto	u2110
  6498   0021F6                     u2111:
  6499   0021F6  EF01  F011         	goto	l3403
  6500   0021FA                     u2110:
  6501   0021FA  6C3C               	negf	___awmod@dividend^0,c
  6502   0021FC  1E3D               	comf	(___awmod@dividend+1)^0,f,c
  6503   0021FE  B0D8               	btfsc	status,0,c
  6504   002200  2A3D               	incf	(___awmod@dividend+1)^0,f,c
  6505   002202                     l3403:
  6506   002202  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6507   002206  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6508   00220A  0012               	return		;funcret
  6509   00220C                     __end_of___awmod:
  6510                           	callstack 0
  6511                           
  6512 ;; *************** function ___awdiv *****************
  6513 ;; Defined at:
  6514 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  dividend        2    8[COMRAM] int 
  6517 ;;  divisor         2   10[COMRAM] int 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  quotient        2   14[COMRAM] int 
  6520 ;;  sign            1   13[COMRAM] unsigned char 
  6521 ;;  counter         1   12[COMRAM] unsigned char 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  2    8[COMRAM] int 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;Total ram usage:        8 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 2
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_WriteSTLED316SData
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text26
  6546   002098                     __ptext26:
  6547                           	callstack 0
  6548   002098                     ___awdiv:
  6549                           	callstack 27
  6550   002098  0E00               	movlw	0
  6551   00209A  6E41               	movwf	___awdiv@sign^0,c
  6552   00209C  BE3F               	btfsc	(___awdiv@divisor+1)^0,7,c
  6553   00209E  EF55  F010         	goto	u2000
  6554   0020A2  EF53  F010         	goto	u2001
  6555   0020A6                     u2001:
  6556   0020A6  EF5B  F010         	goto	l3335
  6557   0020AA                     u2000:
  6558   0020AA  6C3E               	negf	___awdiv@divisor^0,c
  6559   0020AC  1E3F               	comf	(___awdiv@divisor+1)^0,f,c
  6560   0020AE  B0D8               	btfsc	status,0,c
  6561   0020B0  2A3F               	incf	(___awdiv@divisor+1)^0,f,c
  6562   0020B2  0E01               	movlw	1
  6563   0020B4  6E41               	movwf	___awdiv@sign^0,c
  6564   0020B6                     l3335:
  6565   0020B6  BE3D               	btfsc	(___awdiv@dividend+1)^0,7,c
  6566   0020B8  EF62  F010         	goto	u2010
  6567   0020BC  EF60  F010         	goto	u2011
  6568   0020C0                     u2011:
  6569   0020C0  EF68  F010         	goto	l3341
  6570   0020C4                     u2010:
  6571   0020C4  6C3C               	negf	___awdiv@dividend^0,c
  6572   0020C6  1E3D               	comf	(___awdiv@dividend+1)^0,f,c
  6573   0020C8  B0D8               	btfsc	status,0,c
  6574   0020CA  2A3D               	incf	(___awdiv@dividend+1)^0,f,c
  6575   0020CC  0E01               	movlw	1
  6576   0020CE  1A41               	xorwf	___awdiv@sign^0,f,c
  6577   0020D0                     l3341:
  6578   0020D0  0E00               	movlw	0
  6579   0020D2  6E43               	movwf	(___awdiv@quotient+1)^0,c
  6580   0020D4  0E00               	movlw	0
  6581   0020D6  6E42               	movwf	___awdiv@quotient^0,c
  6582   0020D8  503E               	movf	___awdiv@divisor^0,w,c
  6583   0020DA  103F               	iorwf	(___awdiv@divisor+1)^0,w,c
  6584   0020DC  B4D8               	btfsc	status,2,c
  6585   0020DE  EF73  F010         	goto	u2021
  6586   0020E2  EF75  F010         	goto	u2020
  6587   0020E6                     u2021:
  6588   0020E6  EF9D  F010         	goto	l3363
  6589   0020EA                     u2020:
  6590   0020EA  0E01               	movlw	1
  6591   0020EC  6E40               	movwf	___awdiv@counter^0,c
  6592   0020EE  EF7D  F010         	goto	l3349
  6593   0020F2                     l3347:
  6594   0020F2  90D8               	bcf	status,0,c
  6595   0020F4  363E               	rlcf	___awdiv@divisor^0,f,c
  6596   0020F6  363F               	rlcf	(___awdiv@divisor+1)^0,f,c
  6597   0020F8  2A40               	incf	___awdiv@counter^0,f,c
  6598   0020FA                     l3349:
  6599   0020FA  AE3F               	btfss	(___awdiv@divisor+1)^0,7,c
  6600   0020FC  EF82  F010         	goto	u2031
  6601   002100  EF84  F010         	goto	u2030
  6602   002104                     u2031:
  6603   002104  EF79  F010         	goto	l3347
  6604   002108                     u2030:
  6605   002108                     l3351:
  6606   002108  90D8               	bcf	status,0,c
  6607   00210A  3642               	rlcf	___awdiv@quotient^0,f,c
  6608   00210C  3643               	rlcf	(___awdiv@quotient+1)^0,f,c
  6609   00210E  503E               	movf	___awdiv@divisor^0,w,c
  6610   002110  5C3C               	subwf	___awdiv@dividend^0,w,c
  6611   002112  503F               	movf	(___awdiv@divisor+1)^0,w,c
  6612   002114  583D               	subwfb	(___awdiv@dividend+1)^0,w,c
  6613   002116  A0D8               	btfss	status,0,c
  6614   002118  EF90  F010         	goto	u2041
  6615   00211C  EF92  F010         	goto	u2040
  6616   002120                     u2041:
  6617   002120  EF97  F010         	goto	l3359
  6618   002124                     u2040:
  6619   002124  503E               	movf	___awdiv@divisor^0,w,c
  6620   002126  5E3C               	subwf	___awdiv@dividend^0,f,c
  6621   002128  503F               	movf	(___awdiv@divisor+1)^0,w,c
  6622   00212A  5A3D               	subwfb	(___awdiv@dividend+1)^0,f,c
  6623   00212C  8042               	bsf	___awdiv@quotient^0,0,c
  6624   00212E                     l3359:
  6625   00212E  90D8               	bcf	status,0,c
  6626   002130  323F               	rrcf	(___awdiv@divisor+1)^0,f,c
  6627   002132  323E               	rrcf	___awdiv@divisor^0,f,c
  6628   002134  2E40               	decfsz	___awdiv@counter^0,f,c
  6629   002136  EF84  F010         	goto	l3351
  6630   00213A                     l3363:
  6631   00213A  5041               	movf	___awdiv@sign^0,w,c
  6632   00213C  B4D8               	btfsc	status,2,c
  6633   00213E  EFA3  F010         	goto	u2051
  6634   002142  EFA5  F010         	goto	u2050
  6635   002146                     u2051:
  6636   002146  EFA9  F010         	goto	l3367
  6637   00214A                     u2050:
  6638   00214A  6C42               	negf	___awdiv@quotient^0,c
  6639   00214C  1E43               	comf	(___awdiv@quotient+1)^0,f,c
  6640   00214E  B0D8               	btfsc	status,0,c
  6641   002150  2A43               	incf	(___awdiv@quotient+1)^0,f,c
  6642   002152                     l3367:
  6643   002152  C042  F03C         	movff	___awdiv@quotient,?___awdiv
  6644   002156  C043  F03D         	movff	___awdiv@quotient+1,?___awdiv+1
  6645   00215A  0012               	return		;funcret
  6646   00215C                     __end_of___awdiv:
  6647                           	callstack 0
  6648                           
  6649 ;; *************** function _Get7Seg *****************
  6650 ;; Defined at:
  6651 ;;		line 104 in file "Display.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  Digit           2    8[COMRAM] int 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  Data            1   12[COMRAM] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      unsigned char 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;Total ram usage:        5 bytes
  6670 ;; Hardware stack levels used: 1
  6671 ;; Hardware stack levels required when called: 2
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_WriteSTLED316SData
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text27
  6680   001FCC                     __ptext27:
  6681                           	callstack 0
  6682   001FCC                     _Get7Seg:
  6683                           	callstack 27
  6684   001FCC                     
  6685                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  6686   001FCC  EF14  F010         	goto	l3245
  6687   001FD0                     l3221:
  6688                           
  6689                           ;Display.c: 109:             Data = 0x3F;
  6690   001FD0  0E3F               	movlw	63
  6691   001FD2  6E40               	movwf	Get7Seg@Data^0,c
  6692                           
  6693                           ;Display.c: 110:             break;
  6694   001FD4  EF4A  F010         	goto	l3247
  6695   001FD8                     l3223:
  6696                           
  6697                           ;Display.c: 112:             Data = 0x06;
  6698   001FD8  0E06               	movlw	6
  6699   001FDA  6E40               	movwf	Get7Seg@Data^0,c
  6700                           
  6701                           ;Display.c: 113:             break;
  6702   001FDC  EF4A  F010         	goto	l3247
  6703   001FE0                     l3225:
  6704                           
  6705                           ;Display.c: 115:             Data = 0x5B;
  6706   001FE0  0E5B               	movlw	91
  6707   001FE2  6E40               	movwf	Get7Seg@Data^0,c
  6708                           
  6709                           ;Display.c: 116:             break;
  6710   001FE4  EF4A  F010         	goto	l3247
  6711   001FE8                     l3227:
  6712                           
  6713                           ;Display.c: 118:             Data = 0x4F;
  6714   001FE8  0E4F               	movlw	79
  6715   001FEA  6E40               	movwf	Get7Seg@Data^0,c
  6716                           
  6717                           ;Display.c: 119:             break;
  6718   001FEC  EF4A  F010         	goto	l3247
  6719   001FF0                     l3229:
  6720                           
  6721                           ;Display.c: 121:             Data = 0x66;
  6722   001FF0  0E66               	movlw	102
  6723   001FF2  6E40               	movwf	Get7Seg@Data^0,c
  6724                           
  6725                           ;Display.c: 122:             break;
  6726   001FF4  EF4A  F010         	goto	l3247
  6727   001FF8                     l3231:
  6728                           
  6729                           ;Display.c: 124:             Data = 0x6D;
  6730   001FF8  0E6D               	movlw	109
  6731   001FFA  6E40               	movwf	Get7Seg@Data^0,c
  6732                           
  6733                           ;Display.c: 125:             break;
  6734   001FFC  EF4A  F010         	goto	l3247
  6735   002000                     l3233:
  6736                           
  6737                           ;Display.c: 127:             Data = 0x7D;
  6738   002000  0E7D               	movlw	125
  6739   002002  6E40               	movwf	Get7Seg@Data^0,c
  6740                           
  6741                           ;Display.c: 128:             break;
  6742   002004  EF4A  F010         	goto	l3247
  6743   002008                     l3235:
  6744                           
  6745                           ;Display.c: 130:             Data = 0x07;
  6746   002008  0E07               	movlw	7
  6747   00200A  6E40               	movwf	Get7Seg@Data^0,c
  6748                           
  6749                           ;Display.c: 131:             break;
  6750   00200C  EF4A  F010         	goto	l3247
  6751   002010                     l3237:
  6752                           
  6753                           ;Display.c: 133:             Data = 0x7F;
  6754   002010  0E7F               	movlw	127
  6755   002012  6E40               	movwf	Get7Seg@Data^0,c
  6756                           
  6757                           ;Display.c: 134:             break;
  6758   002014  EF4A  F010         	goto	l3247
  6759   002018                     l3239:
  6760                           
  6761                           ;Display.c: 136:             Data = 0x6F;
  6762   002018  0E6F               	movlw	111
  6763   00201A  6E40               	movwf	Get7Seg@Data^0,c
  6764                           
  6765                           ;Display.c: 137:             break;
  6766   00201C  EF4A  F010         	goto	l3247
  6767   002020                     l3241:
  6768                           
  6769                           ;Display.c: 139:             Data = 0x00;
  6770   002020  0E00               	movlw	0
  6771   002022  6E40               	movwf	Get7Seg@Data^0,c
  6772                           
  6773                           ;Display.c: 140:             break;
  6774   002024  EF4A  F010         	goto	l3247
  6775   002028                     l3245:
  6776   002028  C03C  F03E         	movff	Get7Seg@Digit,??_Get7Seg
  6777   00202C  C03D  F03F         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  6778                           
  6779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6780                           ; Switch size 1, requested type "simple"
  6781                           ; Number of cases is 1, Range of values is 0 to 0
  6782                           ; switch strategies available:
  6783                           ; Name         Instructions Cycles
  6784                           ; simple_byte            4     3 (average)
  6785                           ;	Chosen strategy is simple_byte
  6786   002030  503F               	movf	(??_Get7Seg+1)^0,w,c
  6787   002032  0A00               	xorlw	0	; case 0
  6788   002034  B4D8               	btfsc	status,2,c
  6789   002036  EF1F  F010         	goto	l6329
  6790   00203A  EF10  F010         	goto	l3241
  6791   00203E                     l6329:
  6792                           
  6793                           ; Switch size 1, requested type "simple"
  6794                           ; Number of cases is 10, Range of values is 0 to 9
  6795                           ; switch strategies available:
  6796                           ; Name         Instructions Cycles
  6797                           ; simple_byte           31    16 (average)
  6798                           ;	Chosen strategy is simple_byte
  6799   00203E  503E               	movf	??_Get7Seg^0,w,c
  6800   002040  0A00               	xorlw	0	; case 0
  6801   002042  B4D8               	btfsc	status,2,c
  6802   002044  EFE8  F00F         	goto	l3221
  6803   002048  0A01               	xorlw	1	; case 1
  6804   00204A  B4D8               	btfsc	status,2,c
  6805   00204C  EFEC  F00F         	goto	l3223
  6806   002050  0A03               	xorlw	3	; case 2
  6807   002052  B4D8               	btfsc	status,2,c
  6808   002054  EFF0  F00F         	goto	l3225
  6809   002058  0A01               	xorlw	1	; case 3
  6810   00205A  B4D8               	btfsc	status,2,c
  6811   00205C  EFF4  F00F         	goto	l3227
  6812   002060  0A07               	xorlw	7	; case 4
  6813   002062  B4D8               	btfsc	status,2,c
  6814   002064  EFF8  F00F         	goto	l3229
  6815   002068  0A01               	xorlw	1	; case 5
  6816   00206A  B4D8               	btfsc	status,2,c
  6817   00206C  EFFC  F00F         	goto	l3231
  6818   002070  0A03               	xorlw	3	; case 6
  6819   002072  B4D8               	btfsc	status,2,c
  6820   002074  EF00  F010         	goto	l3233
  6821   002078  0A01               	xorlw	1	; case 7
  6822   00207A  B4D8               	btfsc	status,2,c
  6823   00207C  EF04  F010         	goto	l3235
  6824   002080  0A0F               	xorlw	15	; case 8
  6825   002082  B4D8               	btfsc	status,2,c
  6826   002084  EF08  F010         	goto	l3237
  6827   002088  0A01               	xorlw	1	; case 9
  6828   00208A  B4D8               	btfsc	status,2,c
  6829   00208C  EF0C  F010         	goto	l3239
  6830   002090  EF10  F010         	goto	l3241
  6831   002094                     l3247:
  6832                           
  6833                           ;Display.c: 142:     return (Data);
  6834   002094  5040               	movf	Get7Seg@Data^0,w,c
  6835   002096  0012               	return		;funcret
  6836   002098                     __end_of_Get7Seg:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function _Homing_Again_Auto *****************
  6840 ;; Defined at:
  6841 ;;		line 1247 in file "main.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;Total ram usage:        2 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 4
  6862 ;; This function calls:
  6863 ;;		_AD_capture_BattVoltage
  6864 ;;		_MotorBREAK
  6865 ;;		_MotorON
  6866 ;;		_Read_IR
  6867 ;;		_WriteSTLED316SErr
  6868 ;;		_WriteSTLED316SMode
  6869 ;;		_delay_1ms
  6870 ;;		_readWeighingData
  6871 ;; This function is called by:
  6872 ;;		_main
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text28
  6877   001756                     __ptext28:
  6878                           	callstack 0
  6879   001756                     _Homing_Again_Auto:
  6880                           	callstack 26
  6881   001756                     
  6882                           ;main.c: 1249:     IR_SENSORF = 0;
  6883   001756  0E00               	movlw	0
  6884   001758  6E12               	movwf	(_IR_SENSORF+1)^0,c
  6885   00175A  0E00               	movlw	0
  6886   00175C  6E11               	movwf	_IR_SENSORF^0,c
  6887   00175E                     
  6888                           ;main.c: 1250:     WriteSTLED316SMode('A');
  6889   00175E  0E41               	movlw	65
  6890   001760  ECF2  F00E         	call	_WriteSTLED316SMode
  6891   001764                     
  6892                           ;main.c: 1252:     if (vibration_mode == 1) {
  6893   001764  042E               	decf	_vibration_mode^0,w,c
  6894   001766  A4D8               	btfss	status,2,c
  6895   001768  EFB8  F00B         	goto	u2651
  6896   00176C  EFBA  F00B         	goto	u2650
  6897   001770                     u2651:
  6898   001770  EFCF  F00B         	goto	l433
  6899   001774                     u2650:
  6900   001774                     
  6901                           ;main.c: 1253:         LATCbits.LATC1 = 1;
  6902   001774  828B               	bsf	139,1,c	;volatile
  6903   001776                     
  6904                           ;main.c: 1254:         delay_1ms(Vmotor_Time);
  6905   001776  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  6906   00177A  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6907   00177E  EC97  F013         	call	_delay_1ms	;wreg free
  6908   001782                     
  6909                           ;main.c: 1255:         LATCbits.LATC1 = 0;
  6910   001782  928B               	bcf	139,1,c	;volatile
  6911   001784                     l3999:
  6912                           
  6913                           ;main.c: 1256:         _delay((unsigned long)((300)*(8000000/4000.0)));
  6914   001784  0E04               	movlw	4
  6915   001786  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  6916   001788  0E0C               	movlw	12
  6917   00178A  6E45               	movwf	??_Homing_Again_Auto^0,c
  6918   00178C  0E34               	movlw	52
  6919   00178E                     u4657:
  6920   00178E  2EE8               	decfsz	wreg,f,c
  6921   001790  D7FE               	bra	u4657
  6922   001792  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  6923   001794  D7FC               	bra	u4657
  6924   001796  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6925   001798  D7FA               	bra	u4657
  6926                           
  6927                           ;main.c: 1257:     } else {
  6928   00179A  EFD2  F00B         	goto	l4003
  6929   00179E                     l433:
  6930                           
  6931                           ;main.c: 1258:         LATCbits.LATC1 = 0;
  6932   00179E  928B               	bcf	139,1,c	;volatile
  6933   0017A0  EFC2  F00B         	goto	l3999
  6934   0017A4                     l4003:
  6935                           
  6936                           ;main.c: 1262:     LATAbits.LATA2 = 1;
  6937   0017A4  8489               	bsf	137,2,c	;volatile
  6938                           
  6939                           ;main.c: 1264:     while (Stop == 0) {
  6940   0017A6  EF82  F00C         	goto	l4061
  6941   0017AA                     l436:
  6942   0017AA  0004               	clrwdt		;# 
  6943   0017AC                     
  6944                           ;main.c: 1266:         readWeighingData();
  6945   0017AC  EC80  F012         	call	_readWeighingData	;wreg free
  6946   0017B0                     
  6947                           ;main.c: 1267:         AD_capture_BattVoltage();
  6948   0017B0  ECF1  F012         	call	_AD_capture_BattVoltage	;wreg free
  6949   0017B4                     
  6950                           ;main.c: 1268:         delay_1ms(Motor_Pause_Time);
  6951   0017B4  C01B  F03C         	movff	_Motor_Pause_Time,delay_1ms@time
  6952   0017B8  C01C  F03D         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  6953   0017BC  EC97  F013         	call	_delay_1ms	;wreg free
  6954   0017C0                     
  6955                           ;main.c: 1269:         MotorON();
  6956   0017C0  EC3C  F014         	call	_MotorON	;wreg free
  6957   0017C4                     
  6958                           ;main.c: 1271:         _delay((unsigned long)((150)*(8000000/4000.0)));
  6959   0017C4  0E02               	movlw	2
  6960   0017C6  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  6961   0017C8  0E86               	movlw	134
  6962   0017CA  6E45               	movwf	??_Homing_Again_Auto^0,c
  6963   0017CC  0E99               	movlw	153
  6964   0017CE                     u4667:
  6965   0017CE  2EE8               	decfsz	wreg,f,c
  6966   0017D0  D7FE               	bra	u4667
  6967   0017D2  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  6968   0017D4  D7FC               	bra	u4667
  6969   0017D6  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6970   0017D8  D7FA               	bra	u4667
  6971   0017DA  F000               	nop	
  6972   0017DC                     
  6973                           ;main.c: 1273:         errorcounter = 30;
  6974   0017DC  0E1E               	movlw	30
  6975   0017DE  6E50               	movwf	_errorcounter^0,c	;volatile
  6976   0017E0  0E00               	movlw	0
  6977   0017E2  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  6978   0017E4  0E00               	movlw	0
  6979   0017E6  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  6980   0017E8  0E00               	movlw	0
  6981   0017EA  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  6982   0017EC                     l4017:
  6983                           
  6984                           ;main.c: 1276:             IR_SENSORF = Read_IR();
  6985   0017EC  ECE6  F013         	call	_Read_IR	;wreg free
  6986   0017F0  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  6987   0017F4  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  6988   0017F8                     
  6989                           ;main.c: 1277:             if (errorcounter == 0) {
  6990   0017F8  5050               	movf	_errorcounter^0,w,c	;volatile
  6991   0017FA  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6992   0017FC  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6993   0017FE  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6994   001800  A4D8               	btfss	status,2,c
  6995   001802  EF05  F00C         	goto	u2661
  6996   001806  EF07  F00C         	goto	u2660
  6997   00180A                     u2661:
  6998   00180A  EF0C  F00C         	goto	l4025
  6999   00180E                     u2660:
  7000   00180E                     
  7001                           ;main.c: 1278:                 WriteSTLED316SErr('1');
  7002   00180E  0E31               	movlw	49
  7003   001810  EC72  F00F         	call	_WriteSTLED316SErr
  7004   001814                     
  7005                           ;main.c: 1279:                 MotorBREAK();
  7006   001814  EC41  F014         	call	_MotorBREAK	;wreg free
  7007   001818                     l4025:
  7008                           
  7009                           ;main.c: 1281:         } while (IR_SENSORF != 0);
  7010   001818  5011               	movf	_IR_SENSORF^0,w,c
  7011   00181A  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  7012   00181C  A4D8               	btfss	status,2,c
  7013   00181E  EF13  F00C         	goto	u2671
  7014   001822  EF15  F00C         	goto	u2670
  7015   001826                     u2671:
  7016   001826  EFF6  F00B         	goto	l4017
  7017   00182A                     u2670:
  7018   00182A                     
  7019                           ;main.c: 1283:         _delay((unsigned long)((30)*(8000000/4000.0)));
  7020   00182A  0E4E               	movlw	78
  7021   00182C  6E45               	movwf	??_Homing_Again_Auto^0,c
  7022   00182E  0EEB               	movlw	235
  7023   001830                     u4677:
  7024   001830  2EE8               	decfsz	wreg,f,c
  7025   001832  D7FE               	bra	u4677
  7026   001834  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  7027   001836  D7FC               	bra	u4677
  7028   001838  F000               	nop	
  7029   00183A                     
  7030                           ;main.c: 1284:         errorcounter = 30;
  7031   00183A  0E1E               	movlw	30
  7032   00183C  6E50               	movwf	_errorcounter^0,c	;volatile
  7033   00183E  0E00               	movlw	0
  7034   001840  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  7035   001842  0E00               	movlw	0
  7036   001844  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  7037   001846  0E00               	movlw	0
  7038   001848  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  7039   00184A                     l4031:
  7040                           
  7041                           ;main.c: 1287:             IR_SENSORF = Read_IR();
  7042   00184A  ECE6  F013         	call	_Read_IR	;wreg free
  7043   00184E  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  7044   001852  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  7045   001856                     
  7046                           ;main.c: 1288:             if (errorcounter == 0) {
  7047   001856  5050               	movf	_errorcounter^0,w,c	;volatile
  7048   001858  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7049   00185A  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7050   00185C  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  7051   00185E  A4D8               	btfss	status,2,c
  7052   001860  EF34  F00C         	goto	u2681
  7053   001864  EF36  F00C         	goto	u2680
  7054   001868                     u2681:
  7055   001868  EF3B  F00C         	goto	l4039
  7056   00186C                     u2680:
  7057   00186C                     
  7058                           ;main.c: 1289:                 WriteSTLED316SErr('2');
  7059   00186C  0E32               	movlw	50
  7060   00186E  EC72  F00F         	call	_WriteSTLED316SErr
  7061   001872                     
  7062                           ;main.c: 1290:                 MotorBREAK();
  7063   001872  EC41  F014         	call	_MotorBREAK	;wreg free
  7064   001876                     l4039:
  7065                           
  7066                           ;main.c: 1292:         } while (IR_SENSORF != 1);
  7067   001876  0411               	decf	_IR_SENSORF^0,w,c
  7068   001878  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  7069   00187A  A4D8               	btfss	status,2,c
  7070   00187C  EF42  F00C         	goto	u2691
  7071   001880  EF44  F00C         	goto	u2690
  7072   001884                     u2691:
  7073   001884  EF25  F00C         	goto	l4031
  7074   001888                     u2690:
  7075   001888                     
  7076                           ;main.c: 1294:         errorcounter = 30;
  7077   001888  0E1E               	movlw	30
  7078   00188A  6E50               	movwf	_errorcounter^0,c	;volatile
  7079   00188C  0E00               	movlw	0
  7080   00188E  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  7081   001890  0E00               	movlw	0
  7082   001892  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  7083   001894  0E00               	movlw	0
  7084   001896  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  7085   001898                     
  7086                           ;main.c: 1296:         delay_1ms(Motor_Stop_Delay_Time);
  7087   001898  C01F  F03C         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  7088   00189C  C020  F03D         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  7089   0018A0  EC97  F013         	call	_delay_1ms	;wreg free
  7090   0018A4                     
  7091                           ;main.c: 1297:         MotorBREAK();
  7092   0018A4  EC41  F014         	call	_MotorBREAK	;wreg free
  7093                           
  7094                           ;main.c: 1299:         if (vibration_mode == 1) {
  7095   0018A8  042E               	decf	_vibration_mode^0,w,c
  7096   0018AA  A4D8               	btfss	status,2,c
  7097   0018AC  EF5A  F00C         	goto	u2701
  7098   0018B0  EF5C  F00C         	goto	u2700
  7099   0018B4                     u2701:
  7100   0018B4  EF71  F00C         	goto	l443
  7101   0018B8                     u2700:
  7102   0018B8                     
  7103                           ;main.c: 1300:             LATCbits.LATC1 = 1;
  7104   0018B8  828B               	bsf	139,1,c	;volatile
  7105   0018BA                     
  7106                           ;main.c: 1301:             delay_1ms(Vmotor_Time);
  7107   0018BA  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  7108   0018BE  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  7109   0018C2  EC97  F013         	call	_delay_1ms	;wreg free
  7110   0018C6                     
  7111                           ;main.c: 1303:             LATCbits.LATC1 = 0;
  7112   0018C6  928B               	bcf	139,1,c	;volatile
  7113   0018C8                     
  7114                           ;main.c: 1304:             _delay((unsigned long)((300)*(8000000/4000.0)));
  7115   0018C8  0E04               	movlw	4
  7116   0018CA  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  7117   0018CC  0E0C               	movlw	12
  7118   0018CE  6E45               	movwf	??_Homing_Again_Auto^0,c
  7119   0018D0  0E34               	movlw	52
  7120   0018D2                     u4687:
  7121   0018D2  2EE8               	decfsz	wreg,f,c
  7122   0018D4  D7FE               	bra	u4687
  7123   0018D6  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  7124   0018D8  D7FC               	bra	u4687
  7125   0018DA  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  7126   0018DC  D7FA               	bra	u4687
  7127                           
  7128                           ;main.c: 1305:         } else {
  7129   0018DE  EF78  F00C         	goto	l4057
  7130   0018E2                     l443:
  7131                           
  7132                           ;main.c: 1306:             LATCbits.LATC1 = 0;
  7133   0018E2  928B               	bcf	139,1,c	;volatile
  7134   0018E4                     
  7135                           ;main.c: 1307:             delay_1ms(Vmotor_Time);
  7136   0018E4  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  7137   0018E8  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  7138   0018EC  EC97  F013         	call	_delay_1ms	;wreg free
  7139   0018F0                     l4057:
  7140                           
  7141                           ;main.c: 1310:         if (Stop == 1)
  7142   0018F0  0431               	decf	_Stop^0,w,c
  7143   0018F2  A4D8               	btfss	status,2,c
  7144   0018F4  EF7E  F00C         	goto	u2711
  7145   0018F8  EF80  F00C         	goto	u2710
  7146   0018FC                     u2711:
  7147   0018FC  EF82  F00C         	goto	l4061
  7148   001900                     u2710:
  7149   001900  EF8A  F00C         	goto	l446
  7150   001904                     l4061:
  7151                           
  7152                           ;main.c: 1264:     while (Stop == 0) {
  7153   001904  5031               	movf	_Stop^0,w,c
  7154   001906  B4D8               	btfsc	status,2,c
  7155   001908  EF88  F00C         	goto	u2721
  7156   00190C  EF8A  F00C         	goto	u2720
  7157   001910                     u2721:
  7158   001910  EFD5  F00B         	goto	l436
  7159   001914                     u2720:
  7160   001914                     l446:
  7161                           
  7162                           ;main.c: 1315:     LATAbits.LATA2 = 0;
  7163   001914  9489               	bcf	137,2,c	;volatile
  7164   001916                     
  7165                           ;main.c: 1317:     if (NUM == 0 || Stop == 1) {
  7166   001916  5019               	movf	_NUM^0,w,c
  7167   001918  101A               	iorwf	(_NUM+1)^0,w,c
  7168   00191A  B4D8               	btfsc	status,2,c
  7169   00191C  EF92  F00C         	goto	u2731
  7170   001920  EF94  F00C         	goto	u2730
  7171   001924                     u2731:
  7172   001924  EF9C  F00C         	goto	l4067
  7173   001928                     u2730:
  7174   001928  0431               	decf	_Stop^0,w,c
  7175   00192A  A4D8               	btfss	status,2,c
  7176   00192C  EF9A  F00C         	goto	u2741
  7177   001930  EF9C  F00C         	goto	u2740
  7178   001934                     u2741:
  7179   001934  EFB7  F00C         	goto	l4077
  7180   001938                     u2740:
  7181   001938                     l4067:
  7182                           
  7183                           ;main.c: 1319:         if (vibration_mode == 1) {
  7184   001938  042E               	decf	_vibration_mode^0,w,c
  7185   00193A  A4D8               	btfss	status,2,c
  7186   00193C  EFA2  F00C         	goto	u2751
  7187   001940  EFA4  F00C         	goto	u2750
  7188   001944                     u2751:
  7189   001944  EFB7  F00C         	goto	l4077
  7190   001948                     u2750:
  7191   001948                     
  7192                           ;main.c: 1320:             LATCbits.LATC1 = 1;
  7193   001948  828B               	bsf	139,1,c	;volatile
  7194   00194A                     
  7195                           ;main.c: 1321:             delay_1ms(Vmotor_Time);
  7196   00194A  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  7197   00194E  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  7198   001952  EC97  F013         	call	_delay_1ms	;wreg free
  7199   001956                     
  7200                           ;main.c: 1323:             LATCbits.LATC1 = 0;
  7201   001956  928B               	bcf	139,1,c	;volatile
  7202   001958                     
  7203                           ;main.c: 1324:             _delay((unsigned long)((300)*(8000000/4000.0)));
  7204   001958  0E04               	movlw	4
  7205   00195A  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  7206   00195C  0E0C               	movlw	12
  7207   00195E  6E45               	movwf	??_Homing_Again_Auto^0,c
  7208   001960  0E34               	movlw	52
  7209   001962                     u4697:
  7210   001962  2EE8               	decfsz	wreg,f,c
  7211   001964  D7FE               	bra	u4697
  7212   001966  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  7213   001968  D7FC               	bra	u4697
  7214   00196A  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  7215   00196C  D7FA               	bra	u4697
  7216   00196E                     l4077:
  7217                           
  7218                           ;main.c: 1329:     NUM = 0;
  7219   00196E  0E00               	movlw	0
  7220   001970  6E1A               	movwf	(_NUM+1)^0,c
  7221   001972  0E00               	movlw	0
  7222   001974  6E19               	movwf	_NUM^0,c
  7223   001976                     
  7224                           ;main.c: 1330:     OpMode = AUTO_MODE;
  7225   001976  0E02               	movlw	2
  7226   001978  6E2C               	movwf	_OpMode^0,c	;volatile
  7227   00197A  0012               	return		;funcret
  7228   00197C                     __end_of_Homing_Again_Auto:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _readWeighingData *****************
  7232 ;; Defined at:
  7233 ;;		line 1359 in file "main.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  i               2   10[COMRAM] int 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;Total ram usage:        2 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 3
  7254 ;; This function calls:
  7255 ;;		_Write1USART
  7256 ;;		_flushOut
  7257 ;; This function is called by:
  7258 ;;		_Homing_Again_Manual
  7259 ;;		_Homing_Again_Auto
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text29
  7264   002500                     __ptext29:
  7265                           	callstack 0
  7266   002500                     _readWeighingData:
  7267                           	callstack 26
  7268   002500                     
  7269                           ;main.c: 1360:     int i;;main.c: 1362:     Serial_Buffer_Out[0] = 0xA5;
  7270   002500  0EA5               	movlw	165
  7271   002502  0100               	movlb	0	; () banked
  7272   002504  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  7273                           
  7274                           ;main.c: 1363:     Serial_Buffer_Out[1] = 0x45;
  7275   002506  0E45               	movlw	69
  7276   002508  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  7277                           
  7278                           ;main.c: 1364:     Serial_Buffer_Out[2] = 0x00;
  7279   00250A  0E00               	movlw	0
  7280   00250C  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  7281                           
  7282                           ;main.c: 1365:     Serial_Buffer_Out[3] = 0x45;
  7283   00250E  0E45               	movlw	69
  7284   002510  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  7285                           
  7286                           ;main.c: 1366:     Serial_Buffer_Out[4] = 0x5A;
  7287   002512  0E5A               	movlw	90
  7288   002514  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  7289   002516                     
  7290                           ; BSR set to: 0
  7291                           ;main.c: 1368:     INTCONbits.GIE = 0;
  7292   002516  9EF2               	bcf	242,7,c	;volatile
  7293                           
  7294                           ;main.c: 1369:     for (i = 0; i < 5; i++) {
  7295   002518  0E00               	movlw	0
  7296   00251A  6E3F               	movwf	(readWeighingData@i+1)^0,c
  7297   00251C  0E00               	movlw	0
  7298   00251E  6E3E               	movwf	readWeighingData@i^0,c
  7299   002520                     l3509:
  7300                           
  7301                           ;main.c: 1370:         Write1USART(Serial_Buffer_Out[i]);
  7302   002520  0E60               	movlw	low _Serial_Buffer_Out
  7303   002522  243E               	addwf	readWeighingData@i^0,w,c
  7304   002524  6ED9               	movwf	fsr2l,c
  7305   002526  0E00               	movlw	high _Serial_Buffer_Out
  7306   002528  203F               	addwfc	(readWeighingData@i+1)^0,w,c
  7307   00252A  6EDA               	movwf	fsr2h,c
  7308   00252C  50DF               	movf	indf2,w,c
  7309   00252E  EC0F  F014         	call	_Write1USART
  7310   002532                     
  7311                           ;main.c: 1371:     }
  7312   002532  4A3E               	infsnz	readWeighingData@i^0,f,c
  7313   002534  2A3F               	incf	(readWeighingData@i+1)^0,f,c
  7314   002536  BE3F               	btfsc	(readWeighingData@i+1)^0,7,c
  7315   002538  EFA7  F012         	goto	u2161
  7316   00253C  503F               	movf	(readWeighingData@i+1)^0,w,c
  7317   00253E  E109               	bnz	u2160
  7318   002540  0E05               	movlw	5
  7319   002542  5C3E               	subwf	readWeighingData@i^0,w,c
  7320   002544  A0D8               	btfss	status,0,c
  7321   002546  EFA7  F012         	goto	u2161
  7322   00254A  EFA9  F012         	goto	u2160
  7323   00254E                     u2161:
  7324   00254E  EF90  F012         	goto	l3509
  7325   002552                     u2160:
  7326   002552                     
  7327                           ;main.c: 1372:     INTCONbits.GIE = 1;
  7328   002552  8EF2               	bsf	242,7,c	;volatile
  7329   002554                     
  7330                           ;main.c: 1374:     flushOut();
  7331   002554  EC2D  F013         	call	_flushOut	;wreg free
  7332   002558  0012               	return		;funcret
  7333   00255A                     __end_of_readWeighingData:
  7334                           	callstack 0
  7335                           
  7336 ;; *************** function _flushOut *****************
  7337 ;; Defined at:
  7338 ;;		line 1348 in file "main.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  i               2    8[COMRAM] int 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:        2 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 2
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_main
  7363 ;;		_readWeighingData
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text30
  7368   00265A                     __ptext30:
  7369                           	callstack 0
  7370   00265A                     _flushOut:
  7371                           	callstack 28
  7372   00265A                     
  7373                           ;main.c: 1349:     int i;;main.c: 1351:     for (i = 0; i < 16; i++) {
  7374   00265A  0E00               	movlw	0
  7375   00265C  6E3D               	movwf	(flushOut@i+1)^0,c
  7376   00265E  0E00               	movlw	0
  7377   002660  6E3C               	movwf	flushOut@i^0,c
  7378   002662                     l3171:
  7379                           
  7380                           ;main.c: 1352:         Serial_Buffer_Out[i] = 0x00;
  7381   002662  0E60               	movlw	low _Serial_Buffer_Out
  7382   002664  243C               	addwf	flushOut@i^0,w,c
  7383   002666  6ED9               	movwf	fsr2l,c
  7384   002668  0E00               	movlw	high _Serial_Buffer_Out
  7385   00266A  203D               	addwfc	(flushOut@i+1)^0,w,c
  7386   00266C  6EDA               	movwf	fsr2h,c
  7387   00266E  0E00               	movlw	0
  7388   002670  6EDF               	movwf	indf2,c
  7389   002672                     
  7390                           ;main.c: 1353:     }
  7391   002672  4A3C               	infsnz	flushOut@i^0,f,c
  7392   002674  2A3D               	incf	(flushOut@i+1)^0,f,c
  7393   002676  BE3D               	btfsc	(flushOut@i+1)^0,7,c
  7394   002678  EF47  F013         	goto	u1871
  7395   00267C  503D               	movf	(flushOut@i+1)^0,w,c
  7396   00267E  E109               	bnz	u1870
  7397   002680  0E10               	movlw	16
  7398   002682  5C3C               	subwf	flushOut@i^0,w,c
  7399   002684  A0D8               	btfss	status,0,c
  7400   002686  EF47  F013         	goto	u1871
  7401   00268A  EF49  F013         	goto	u1870
  7402   00268E                     u1871:
  7403   00268E  EF31  F013         	goto	l3171
  7404   002692                     u1870:
  7405   002692  0012               	return		;funcret
  7406   002694                     __end_of_flushOut:
  7407                           	callstack 0
  7408                           
  7409 ;; *************** function _Write1USART *****************
  7410 ;; Defined at:
  7411 ;;		line 47 in file "usart.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  data            1    wreg     unsigned char 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  data            1    8[COMRAM] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;Total ram usage:        1 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 2
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_main
  7436 ;;		_readWeighingData
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text31
  7441   00281E                     __ptext31:
  7442                           	callstack 0
  7443   00281E                     _Write1USART:
  7444                           	callstack 28
  7445                           
  7446                           ;incstack = 0
  7447                           ;Write1USART@data stored from wreg
  7448   00281E  6E3C               	movwf	Write1USART@data^0,c
  7449   002820                     
  7450                           ;usart.c: 48:     TXREG1 = data;
  7451   002820  C03C  FFAE         	movff	Write1USART@data,4014	;volatile
  7452   002824                     l664:
  7453   002824  A2AD               	btfss	173,1,c	;volatile
  7454   002826  EF17  F014         	goto	u1861
  7455   00282A  EF19  F014         	goto	u1860
  7456   00282E                     u1861:
  7457   00282E  EF12  F014         	goto	l664
  7458   002832                     u1860:
  7459   002832  0012               	return		;funcret
  7460   002834                     __end_of_Write1USART:
  7461                           	callstack 0
  7462                           
  7463 ;; *************** function _WriteSTLED316SMode *****************
  7464 ;; Defined at:
  7465 ;;		line 184 in file "Display.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  msg             1    wreg     unsigned char 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  msg             1   16[COMRAM] unsigned char 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      void 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0, cstack
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;Total ram usage:        3 bytes
  7484 ;; Hardware stack levels used: 1
  7485 ;; Hardware stack levels required when called: 3
  7486 ;; This function calls:
  7487 ;;		_STLED316s_SPI_SendData
  7488 ;; This function is called by:
  7489 ;;		_Homing_Again_Auto
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text32
  7494   001DE4                     __ptext32:
  7495                           	callstack 0
  7496   001DE4                     _WriteSTLED316SMode:
  7497                           	callstack 26
  7498                           
  7499                           ;incstack = 0
  7500                           ;WriteSTLED316SMode@msg stored from wreg
  7501   001DE4  6E44               	movwf	WriteSTLED316SMode@msg^0,c
  7502   001DE6                     
  7503                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  7504   001DE6  988B               	bcf	139,4,c	;volatile
  7505   001DE8                     
  7506                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  7507   001DE8  0E00               	movlw	0
  7508   001DEA  ECA0  F011         	call	_STLED316s_SPI_SendData
  7509   001DEE                     
  7510                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  7511   001DEE  888B               	bsf	139,4,c	;volatile
  7512   001DF0                     
  7513                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  7514   001DF0  988B               	bcf	139,4,c	;volatile
  7515                           
  7516                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  7517   001DF2  0E00               	movlw	0
  7518   001DF4  ECA0  F011         	call	_STLED316s_SPI_SendData
  7519                           
  7520                           ;Display.c: 196:     switch (msg) {
  7521   001DF8  EF3E  F00F         	goto	l3543
  7522   001DFC                     l3525:
  7523                           
  7524                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  7525   001DFC  0E79               	movlw	121
  7526   001DFE  ECA0  F011         	call	_STLED316s_SPI_SendData
  7527                           
  7528                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  7529   001E02  0E3F               	movlw	63
  7530   001E04  ECA0  F011         	call	_STLED316s_SPI_SendData
  7531                           
  7532                           ;Display.c: 200:             break;
  7533   001E08  EF6B  F00F         	goto	l545
  7534   001E0C                     l3527:
  7535                           
  7536                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  7537   001E0C  0E3F               	movlw	63
  7538   001E0E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7539                           
  7540                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  7541   001E12  0E73               	movlw	115
  7542   001E14  ECA0  F011         	call	_STLED316s_SPI_SendData
  7543                           
  7544                           ;Display.c: 204:             break;
  7545   001E18  EF6B  F00F         	goto	l545
  7546   001E1C                     l3529:
  7547                           
  7548                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  7549   001E1C  0E39               	movlw	57
  7550   001E1E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7551                           
  7552                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  7553   001E22  0E77               	movlw	119
  7554   001E24  ECA0  F011         	call	_STLED316s_SPI_SendData
  7555                           
  7556                           ;Display.c: 208:             break;
  7557   001E28  EF6B  F00F         	goto	l545
  7558   001E2C                     l3531:
  7559                           
  7560                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  7561   001E2C  0E00               	movlw	0
  7562   001E2E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7563                           
  7564                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  7565   001E32  0E00               	movlw	0
  7566   001E34  ECA0  F011         	call	_STLED316s_SPI_SendData
  7567                           
  7568                           ;Display.c: 212:             break;
  7569   001E38  EF6B  F00F         	goto	l545
  7570   001E3C                     l3533:
  7571                           
  7572                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  7573   001E3C  0E00               	movlw	0
  7574   001E3E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7575                           
  7576                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  7577   001E42  0E3F               	movlw	63
  7578   001E44  ECA0  F011         	call	_STLED316s_SPI_SendData
  7579                           
  7580                           ;Display.c: 216:             break;
  7581   001E48  EF6B  F00F         	goto	l545
  7582   001E4C                     l3535:
  7583                           
  7584                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  7585   001E4C  0E79               	movlw	121
  7586   001E4E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7587                           
  7588                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  7589   001E52  0E06               	movlw	6
  7590   001E54  ECA0  F011         	call	_STLED316s_SPI_SendData
  7591                           
  7592                           ;Display.c: 220:             break;
  7593   001E58  EF6B  F00F         	goto	l545
  7594   001E5C                     l3537:
  7595                           
  7596                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  7597   001E5C  0E77               	movlw	119
  7598   001E5E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7599                           
  7600                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  7601   001E62  0E3E               	movlw	62
  7602   001E64  ECA0  F011         	call	_STLED316s_SPI_SendData
  7603                           
  7604                           ;Display.c: 224:             break;
  7605   001E68  EF6B  F00F         	goto	l545
  7606   001E6C                     l3539:
  7607                           
  7608                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  7609   001E6C  0E00               	movlw	0
  7610   001E6E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7611                           
  7612                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  7613   001E72  0E3E               	movlw	62
  7614   001E74  ECA0  F011         	call	_STLED316s_SPI_SendData
  7615                           
  7616                           ;Display.c: 228:             break;
  7617   001E78  EF6B  F00F         	goto	l545
  7618   001E7C                     l3543:
  7619   001E7C  5044               	movf	WriteSTLED316SMode@msg^0,w,c
  7620   001E7E  6E42               	movwf	??_WriteSTLED316SMode^0,c
  7621   001E80  6A43               	clrf	(??_WriteSTLED316SMode+1)^0,c
  7622                           
  7623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7624                           ; Switch size 1, requested type "simple"
  7625                           ; Number of cases is 1, Range of values is 0 to 0
  7626                           ; switch strategies available:
  7627                           ; Name         Instructions Cycles
  7628                           ; simple_byte            4     3 (average)
  7629                           ;	Chosen strategy is simple_byte
  7630   001E82  5043               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  7631   001E84  0A00               	xorlw	0	; case 0
  7632   001E86  B4D8               	btfsc	status,2,c
  7633   001E88  EF48  F00F         	goto	l6331
  7634   001E8C  EF6B  F00F         	goto	l545
  7635   001E90                     l6331:
  7636                           
  7637                           ; Switch size 1, requested type "simple"
  7638                           ; Number of cases is 8, Range of values is 65 to 88
  7639                           ; switch strategies available:
  7640                           ; Name         Instructions Cycles
  7641                           ; simple_byte           25    13 (average)
  7642                           ;	Chosen strategy is simple_byte
  7643   001E90  5042               	movf	??_WriteSTLED316SMode^0,w,c
  7644   001E92  0A41               	xorlw	65	; case 65
  7645   001E94  B4D8               	btfsc	status,2,c
  7646   001E96  EF2E  F00F         	goto	l3537
  7647   001E9A  0A02               	xorlw	2	; case 67
  7648   001E9C  B4D8               	btfsc	status,2,c
  7649   001E9E  EF0E  F00F         	goto	l3529
  7650   001EA2  0A06               	xorlw	6	; case 69
  7651   001EA4  B4D8               	btfsc	status,2,c
  7652   001EA6  EFFE  F00E         	goto	l3525
  7653   001EAA  0A02               	xorlw	2	; case 71
  7654   001EAC  B4D8               	btfsc	status,2,c
  7655   001EAE  EF1E  F00F         	goto	l3533
  7656   001EB2  0A08               	xorlw	8	; case 79
  7657   001EB4  B4D8               	btfsc	status,2,c
  7658   001EB6  EF06  F00F         	goto	l3527
  7659   001EBA  0A1C               	xorlw	28	; case 83
  7660   001EBC  B4D8               	btfsc	status,2,c
  7661   001EBE  EF26  F00F         	goto	l3535
  7662   001EC2  0A05               	xorlw	5	; case 86
  7663   001EC4  B4D8               	btfsc	status,2,c
  7664   001EC6  EF36  F00F         	goto	l3539
  7665   001ECA  0A0E               	xorlw	14	; case 88
  7666   001ECC  B4D8               	btfsc	status,2,c
  7667   001ECE  EF16  F00F         	goto	l3531
  7668   001ED2  EF6B  F00F         	goto	l545
  7669   001ED6                     l545:
  7670                           
  7671                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  7672   001ED6  888B               	bsf	139,4,c	;volatile
  7673                           
  7674                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  7675   001ED8  988B               	bcf	139,4,c	;volatile
  7676   001EDA                     
  7677                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  7678   001EDA  0E0D               	movlw	13
  7679   001EDC  ECA0  F011         	call	_STLED316s_SPI_SendData
  7680   001EE0                     
  7681                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  7682   001EE0  888B               	bsf	139,4,c	;volatile
  7683   001EE2  0012               	return		;funcret
  7684   001EE4                     __end_of_WriteSTLED316SMode:
  7685                           	callstack 0
  7686                           
  7687 ;; *************** function _WriteSTLED316SErr *****************
  7688 ;; Defined at:
  7689 ;;		line 291 in file "Display.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  msg             1    wreg     unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  msg             1   16[COMRAM] unsigned char 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        3 bytes
  7708 ;; Hardware stack levels used: 1
  7709 ;; Hardware stack levels required when called: 3
  7710 ;; This function calls:
  7711 ;;		_STLED316s_SPI_SendData
  7712 ;; This function is called by:
  7713 ;;		_MotorPosition_Init
  7714 ;;		_Homing_Again_Manual
  7715 ;;		_Homing_Again_Auto
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text33
  7720   001EE4                     __ptext33:
  7721                           	callstack 0
  7722   001EE4                     _WriteSTLED316SErr:
  7723                           	callstack 26
  7724                           
  7725                           ;incstack = 0
  7726                           ;WriteSTLED316SErr@msg stored from wreg
  7727   001EE4  6E44               	movwf	WriteSTLED316SErr@msg^0,c
  7728   001EE6                     
  7729                           ;Display.c: 292:     LATCbits.LATC4 = 0;
  7730   001EE6  988B               	bcf	139,4,c	;volatile
  7731   001EE8                     
  7732                           ;Display.c: 294:     STLED316s_SPI_SendData(0x00);
  7733   001EE8  0E00               	movlw	0
  7734   001EEA  ECA0  F011         	call	_STLED316s_SPI_SendData
  7735   001EEE                     
  7736                           ;Display.c: 297:     LATCbits.LATC4 = 1;
  7737   001EEE  888B               	bsf	139,4,c	;volatile
  7738   001EF0                     
  7739                           ;Display.c: 299:     LATCbits.LATC4 = 0;
  7740   001EF0  988B               	bcf	139,4,c	;volatile
  7741                           
  7742                           ;Display.c: 301:     STLED316s_SPI_SendData(0x00);
  7743   001EF2  0E00               	movlw	0
  7744   001EF4  ECA0  F011         	call	_STLED316s_SPI_SendData
  7745                           
  7746                           ;Display.c: 303:     switch (msg) {
  7747   001EF8  EFB6  F00F         	goto	l3485
  7748   001EFC                     l3469:
  7749                           
  7750                           ;Display.c: 305:             STLED316s_SPI_SendData(0x79);
  7751   001EFC  0E79               	movlw	121
  7752   001EFE  ECA0  F011         	call	_STLED316s_SPI_SendData
  7753                           
  7754                           ;Display.c: 306:             STLED316s_SPI_SendData(0x77);
  7755   001F02  0E77               	movlw	119
  7756   001F04  ECA0  F011         	call	_STLED316s_SPI_SendData
  7757                           
  7758                           ;Display.c: 307:             break;
  7759   001F08  EFDF  F00F         	goto	l571
  7760   001F0C                     l3471:
  7761                           
  7762                           ;Display.c: 309:             STLED316s_SPI_SendData(0x79);
  7763   001F0C  0E79               	movlw	121
  7764   001F0E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7765                           
  7766                           ;Display.c: 310:             STLED316s_SPI_SendData(0x3F);
  7767   001F12  0E3F               	movlw	63
  7768   001F14  ECA0  F011         	call	_STLED316s_SPI_SendData
  7769                           
  7770                           ;Display.c: 311:             break;
  7771   001F18  EFDF  F00F         	goto	l571
  7772   001F1C                     l3473:
  7773                           
  7774                           ;Display.c: 313:             STLED316s_SPI_SendData(0x79);
  7775   001F1C  0E79               	movlw	121
  7776   001F1E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7777                           
  7778                           ;Display.c: 314:             STLED316s_SPI_SendData(0x06);
  7779   001F22  0E06               	movlw	6
  7780   001F24  ECA0  F011         	call	_STLED316s_SPI_SendData
  7781                           
  7782                           ;Display.c: 315:             break;
  7783   001F28  EFDF  F00F         	goto	l571
  7784   001F2C                     l3475:
  7785                           
  7786                           ;Display.c: 317:             STLED316s_SPI_SendData(0x79);
  7787   001F2C  0E79               	movlw	121
  7788   001F2E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7789                           
  7790                           ;Display.c: 318:             STLED316s_SPI_SendData(0x5B);
  7791   001F32  0E5B               	movlw	91
  7792   001F34  ECA0  F011         	call	_STLED316s_SPI_SendData
  7793                           
  7794                           ;Display.c: 319:             break;
  7795   001F38  EFDF  F00F         	goto	l571
  7796   001F3C                     l3477:
  7797                           
  7798                           ;Display.c: 321:             STLED316s_SPI_SendData(0x00);
  7799   001F3C  0E00               	movlw	0
  7800   001F3E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7801                           
  7802                           ;Display.c: 322:             STLED316s_SPI_SendData(0x3F);
  7803   001F42  0E3F               	movlw	63
  7804   001F44  ECA0  F011         	call	_STLED316s_SPI_SendData
  7805                           
  7806                           ;Display.c: 323:             break;
  7807   001F48  EFDF  F00F         	goto	l571
  7808   001F4C                     l3479:
  7809                           
  7810                           ;Display.c: 325:             STLED316s_SPI_SendData(0x79);
  7811   001F4C  0E79               	movlw	121
  7812   001F4E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7813                           
  7814                           ;Display.c: 326:             STLED316s_SPI_SendData(0x06);
  7815   001F52  0E06               	movlw	6
  7816   001F54  ECA0  F011         	call	_STLED316s_SPI_SendData
  7817                           
  7818                           ;Display.c: 327:             break;
  7819   001F58  EFDF  F00F         	goto	l571
  7820   001F5C                     l3481:
  7821                           
  7822                           ;Display.c: 329:             STLED316s_SPI_SendData(0x77);
  7823   001F5C  0E77               	movlw	119
  7824   001F5E  ECA0  F011         	call	_STLED316s_SPI_SendData
  7825                           
  7826                           ;Display.c: 330:             STLED316s_SPI_SendData(0x3E);
  7827   001F62  0E3E               	movlw	62
  7828   001F64  ECA0  F011         	call	_STLED316s_SPI_SendData
  7829                           
  7830                           ;Display.c: 331:             break;
  7831   001F68  EFDF  F00F         	goto	l571
  7832   001F6C                     l3485:
  7833   001F6C  5044               	movf	WriteSTLED316SErr@msg^0,w,c
  7834   001F6E  6E42               	movwf	??_WriteSTLED316SErr^0,c
  7835   001F70  6A43               	clrf	(??_WriteSTLED316SErr+1)^0,c
  7836                           
  7837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7838                           ; Switch size 1, requested type "simple"
  7839                           ; Number of cases is 1, Range of values is 0 to 0
  7840                           ; switch strategies available:
  7841                           ; Name         Instructions Cycles
  7842                           ; simple_byte            4     3 (average)
  7843                           ;	Chosen strategy is simple_byte
  7844   001F72  5043               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  7845   001F74  0A00               	xorlw	0	; case 0
  7846   001F76  B4D8               	btfsc	status,2,c
  7847   001F78  EFC0  F00F         	goto	l6333
  7848   001F7C  EFDF  F00F         	goto	l571
  7849   001F80                     l6333:
  7850                           
  7851                           ; Switch size 1, requested type "simple"
  7852                           ; Number of cases is 7, Range of values is 48 to 83
  7853                           ; switch strategies available:
  7854                           ; Name         Instructions Cycles
  7855                           ; simple_byte           22    12 (average)
  7856                           ;	Chosen strategy is simple_byte
  7857   001F80  5042               	movf	??_WriteSTLED316SErr^0,w,c
  7858   001F82  0A30               	xorlw	48	; case 48
  7859   001F84  B4D8               	btfsc	status,2,c
  7860   001F86  EF86  F00F         	goto	l3471
  7861   001F8A  0A01               	xorlw	1	; case 49
  7862   001F8C  B4D8               	btfsc	status,2,c
  7863   001F8E  EF8E  F00F         	goto	l3473
  7864   001F92  0A03               	xorlw	3	; case 50
  7865   001F94  B4D8               	btfsc	status,2,c
  7866   001F96  EF96  F00F         	goto	l3475
  7867   001F9A  0A73               	xorlw	115	; case 65
  7868   001F9C  B4D8               	btfsc	status,2,c
  7869   001F9E  EFAE  F00F         	goto	l3481
  7870   001FA2  0A04               	xorlw	4	; case 69
  7871   001FA4  B4D8               	btfsc	status,2,c
  7872   001FA6  EF7E  F00F         	goto	l3469
  7873   001FAA  0A02               	xorlw	2	; case 71
  7874   001FAC  B4D8               	btfsc	status,2,c
  7875   001FAE  EF9E  F00F         	goto	l3477
  7876   001FB2  0A14               	xorlw	20	; case 83
  7877   001FB4  B4D8               	btfsc	status,2,c
  7878   001FB6  EFA6  F00F         	goto	l3479
  7879   001FBA  EFDF  F00F         	goto	l571
  7880   001FBE                     l571:
  7881                           
  7882                           ;Display.c: 336:     LATCbits.LATC4 = 1;
  7883   001FBE  888B               	bsf	139,4,c	;volatile
  7884                           
  7885                           ;Display.c: 338:     LATCbits.LATC4 = 0;
  7886   001FC0  988B               	bcf	139,4,c	;volatile
  7887   001FC2                     
  7888                           ;Display.c: 340:     STLED316s_SPI_SendData(0x0D);
  7889   001FC2  0E0D               	movlw	13
  7890   001FC4  ECA0  F011         	call	_STLED316s_SPI_SendData
  7891   001FC8                     
  7892                           ;Display.c: 342:     LATCbits.LATC4 = 1;
  7893   001FC8  888B               	bsf	139,4,c	;volatile
  7894   001FCA  0012               	return		;funcret
  7895   001FCC                     __end_of_WriteSTLED316SErr:
  7896                           	callstack 0
  7897                           
  7898 ;; *************** function _STLED316s_SPI_SendData *****************
  7899 ;; Defined at:
  7900 ;;		line 88 in file "Display.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  Data            1    wreg     unsigned char 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  Data            1   10[COMRAM] unsigned char 
  7905 ;;  t               1   13[COMRAM] unsigned char 
  7906 ;;  i               1   12[COMRAM] unsigned char 
  7907 ;;  temp            1   11[COMRAM] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      void 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7920 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;Total ram usage:        6 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 2
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_InitSTLED316
  7928 ;;		_WriteSTLED316SData
  7929 ;;		_WriteSTLED316SMode
  7930 ;;		_WriteSTLED316SVibMode
  7931 ;;		_WriteSTLED316SErr
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text34
  7936   002340                     __ptext34:
  7937                           	callstack 0
  7938   002340                     _STLED316s_SPI_SendData:
  7939                           	callstack 27
  7940                           
  7941                           ;incstack = 0
  7942                           ;STLED316s_SPI_SendData@Data stored from wreg
  7943   002340  6E3E               	movwf	STLED316s_SPI_SendData@Data^0,c
  7944   002342                     
  7945                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  7946   002342  0E00               	movlw	0
  7947   002344  6E40               	movwf	STLED316s_SPI_SendData@i^0,c
  7948   002346                     l510:
  7949                           
  7950                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  7951   002346  968B               	bcf	139,3,c	;volatile
  7952   002348                     
  7953                           ;Display.c: 93:         temp = Data & (0x1 << i);
  7954   002348  C040  F03C         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  7955   00234C  0E01               	movlw	1
  7956   00234E  6E3D               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  7957   002350  2A3C               	incf	??_STLED316s_SPI_SendData^0,f,c
  7958   002352  EFAD  F011         	goto	u1894
  7959   002356                     u1895:
  7960   002356  90D8               	bcf	status,0,c
  7961   002358  363D               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  7962   00235A                     u1894:
  7963   00235A  2E3C               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  7964   00235C  EFAB  F011         	goto	u1895
  7965   002360  503D               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  7966   002362  143E               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  7967   002364  6E3F               	movwf	STLED316s_SPI_SendData@temp^0,c
  7968   002366                     
  7969                           ;Display.c: 94:         if (temp)
  7970   002366  503F               	movf	STLED316s_SPI_SendData@temp^0,w,c
  7971   002368  B4D8               	btfsc	status,2,c
  7972   00236A  EFB9  F011         	goto	u1901
  7973   00236E  EFBB  F011         	goto	u1900
  7974   002372                     u1901:
  7975   002372  EFBE  F011         	goto	l512
  7976   002376                     u1900:
  7977   002376                     
  7978                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  7979   002376  8A8B               	bsf	139,5,c	;volatile
  7980   002378  EFBF  F011         	goto	l3195
  7981   00237C                     l512:
  7982                           
  7983                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  7984   00237C  9A8B               	bcf	139,5,c	;volatile
  7985   00237E                     l3195:
  7986                           
  7987                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  7988   00237E  0E00               	movlw	0
  7989   002380  6E41               	movwf	STLED316s_SPI_SendData@t^0,c
  7990   002382                     l3201:
  7991   002382  2A41               	incf	STLED316s_SPI_SendData@t^0,f,c
  7992   002384  0E04               	movlw	4
  7993   002386  6441               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7994   002388  EFC8  F011         	goto	u1911
  7995   00238C  EFCA  F011         	goto	u1910
  7996   002390                     u1911:
  7997   002390  EFC1  F011         	goto	l3201
  7998   002394                     u1910:
  7999   002394                     
  8000                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  8001   002394  868B               	bsf	139,3,c	;volatile
  8002   002396                     
  8003                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  8004   002396  0E00               	movlw	0
  8005   002398  6E41               	movwf	STLED316s_SPI_SendData@t^0,c
  8006   00239A                     l3211:
  8007   00239A  2A41               	incf	STLED316s_SPI_SendData@t^0,f,c
  8008   00239C  0E04               	movlw	4
  8009   00239E  6441               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  8010   0023A0  EFD4  F011         	goto	u1921
  8011   0023A4  EFD6  F011         	goto	u1920
  8012   0023A8                     u1921:
  8013   0023A8  EFCD  F011         	goto	l3211
  8014   0023AC                     u1920:
  8015   0023AC                     
  8016                           ;Display.c: 101:     }
  8017   0023AC  2A40               	incf	STLED316s_SPI_SendData@i^0,f,c
  8018   0023AE  0E07               	movlw	7
  8019   0023B0  6440               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  8020   0023B2  EFDD  F011         	goto	u1931
  8021   0023B6  EFDF  F011         	goto	u1930
  8022   0023BA                     u1931:
  8023   0023BA  EFA3  F011         	goto	l510
  8024   0023BE                     u1930:
  8025   0023BE  0012               	return		;funcret
  8026   0023C0                     __end_of_STLED316s_SPI_SendData:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _Read_IR *****************
  8030 ;; Defined at:
  8031 ;;		line 1014 in file "main.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  2    8[COMRAM] unsigned int 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;Total ram usage:        2 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 2
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_MotorPosition_Init
  8056 ;;		_Homing_Again_Manual
  8057 ;;		_Homing_Again_Auto
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text35
  8062   0027CC                     __ptext35:
  8063                           	callstack 0
  8064   0027CC                     _Read_IR:
  8065                           	callstack 27
  8066   0027CC                     
  8067                           ;main.c: 1016:     if (PORTAbits.RA1 == 1)
  8068   0027CC  A280               	btfss	128,1,c	;volatile
  8069   0027CE  EFEB  F013         	goto	u2151
  8070   0027D2  EFED  F013         	goto	u2150
  8071   0027D6                     u2151:
  8072   0027D6  EFF3  F013         	goto	l3453
  8073   0027DA                     u2150:
  8074   0027DA                     
  8075                           ;main.c: 1017:     {;main.c: 1018:         return 0;
  8076   0027DA  0E00               	movlw	0
  8077   0027DC  6E3D               	movwf	(?_Read_IR+1)^0,c
  8078   0027DE  0E00               	movlw	0
  8079   0027E0  6E3C               	movwf	?_Read_IR^0,c
  8080   0027E2  EFF7  F013         	goto	l376
  8081   0027E6                     l3453:
  8082                           
  8083                           ;main.c: 1020:     {;main.c: 1021:         return 1;
  8084   0027E6  0E00               	movlw	0
  8085   0027E8  6E3D               	movwf	(?_Read_IR+1)^0,c
  8086   0027EA  0E01               	movlw	1
  8087   0027EC  6E3C               	movwf	?_Read_IR^0,c
  8088   0027EE                     l376:
  8089   0027EE  0012               	return		;funcret
  8090   0027F0                     __end_of_Read_IR:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _MotorON *****************
  8094 ;; Defined at:
  8095 ;;		line 40 in file "MotorDriver.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;Total ram usage:        0 bytes
  8114 ;; Hardware stack levels used: 1
  8115 ;; Hardware stack levels required when called: 3
  8116 ;; This function calls:
  8117 ;;		_Set_RG3
  8118 ;; This function is called by:
  8119 ;;		_MotorPosition_Init
  8120 ;;		_Homing_Again_Manual
  8121 ;;		_Homing_Again_Auto
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text36
  8126   002878                     __ptext36:
  8127                           	callstack 0
  8128   002878                     _MotorON:
  8129                           	callstack 26
  8130   002878                     
  8131                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
  8132   002878  868F               	bsf	143,3,c	;volatile
  8133                           
  8134                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
  8135   00287A  888F               	bsf	143,4,c	;volatile
  8136   00287C                     
  8137                           ;MotorDriver.c: 44:     Set_RG3();
  8138   00287C  EC52  F014         	call	_Set_RG3	;wreg free
  8139   002880  0012               	return		;funcret
  8140   002882                     __end_of_MotorON:
  8141                           	callstack 0
  8142                           
  8143 ;; *************** function _Set_RG3 *****************
  8144 ;; Defined at:
  8145 ;;		line 28 in file "MotorDriver.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;		None
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg, status,2
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;Total ram usage:        0 bytes
  8164 ;; Hardware stack levels used: 1
  8165 ;; Hardware stack levels required when called: 2
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_MotorON
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text37
  8174   0028A4                     __ptext37:
  8175                           	callstack 0
  8176   0028A4                     _Set_RG3:
  8177                           	callstack 26
  8178   0028A4                     
  8179                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
  8180   0028A4  0E08               	movlw	8
  8181   0028A6  6E73               	movwf	115,c	;volatile
  8182   0028A8                     
  8183                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
  8184   0028A8  8476               	bsf	118,2,c	;volatile
  8185   0028AA  0012               	return		;funcret
  8186   0028AC                     __end_of_Set_RG3:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function _MotorBREAK *****************
  8190 ;; Defined at:
  8191 ;;		line 47 in file "MotorDriver.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 3
  8212 ;; This function calls:
  8213 ;;		_Clr_RG3
  8214 ;; This function is called by:
  8215 ;;		_MotorPosition_Init
  8216 ;;		_Homing_Again_Manual
  8217 ;;		_Homing_Again_Auto
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           	psect	text38
  8222   002882                     __ptext38:
  8223                           	callstack 0
  8224   002882                     _MotorBREAK:
  8225                           	callstack 26
  8226   002882                     
  8227                           ;MotorDriver.c: 49:     Clr_RG3();
  8228   002882  EC56  F014         	call	_Clr_RG3	;wreg free
  8229   002886                     
  8230                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
  8231   002886  868F               	bsf	143,3,c	;volatile
  8232   002888                     
  8233                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
  8234   002888  888F               	bsf	143,4,c	;volatile
  8235   00288A  0012               	return		;funcret
  8236   00288C                     __end_of_MotorBREAK:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _Clr_RG3 *****************
  8240 ;; Defined at:
  8241 ;;		line 35 in file "MotorDriver.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; Hardware stack levels required when called: 2
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_MotorBREAK
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text39
  8270   0028AC                     __ptext39:
  8271                           	callstack 0
  8272   0028AC                     _Clr_RG3:
  8273                           	callstack 26
  8274   0028AC                     
  8275                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
  8276   0028AC  0E00               	movlw	0
  8277   0028AE  6E73               	movwf	115,c	;volatile
  8278   0028B0                     
  8279                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
  8280   0028B0  9476               	bcf	118,2,c	;volatile
  8281   0028B2  0012               	return		;funcret
  8282   0028B4                     __end_of_Clr_RG3:
  8283                           	callstack 0
  8284                           
  8285 ;; *************** function _AD_capture_BattVoltage *****************
  8286 ;; Defined at:
  8287 ;;		line 1391 in file "main.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;Total ram usage:        2 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 3
  8308 ;; This function calls:
  8309 ;;		_delay_1ms
  8310 ;; This function is called by:
  8311 ;;		_main
  8312 ;;		_Homing_Again_Manual
  8313 ;;		_Homing_Again_Auto
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text40
  8318   0025E2                     __ptext40:
  8319                           	callstack 0
  8320   0025E2                     _AD_capture_BattVoltage:
  8321                           	callstack 26
  8322   0025E2                     
  8323                           ;main.c: 1393:     ADCON0bits.CHS0 = 0;
  8324   0025E2  94C2               	bcf	194,2,c	;volatile
  8325                           
  8326                           ;main.c: 1394:     ADCON0bits.CHS1 = 0;
  8327   0025E4  96C2               	bcf	194,3,c	;volatile
  8328                           
  8329                           ;main.c: 1395:     ADCON0bits.CHS2 = 0;
  8330   0025E6  98C2               	bcf	194,4,c	;volatile
  8331                           
  8332                           ;main.c: 1396:     ADCON0bits.CHS3 = 0;
  8333   0025E8  9AC2               	bcf	194,5,c	;volatile
  8334                           
  8335                           ;main.c: 1398:     ADCON0bits.ADON = 1;
  8336   0025EA  80C2               	bsf	194,0,c	;volatile
  8337   0025EC                     
  8338                           ;main.c: 1399:     delay_1ms(5);
  8339   0025EC  0E00               	movlw	0
  8340   0025EE  6E3D               	movwf	(delay_1ms@time+1)^0,c
  8341   0025F0  0E05               	movlw	5
  8342   0025F2  6E3C               	movwf	delay_1ms@time^0,c
  8343   0025F4  EC97  F013         	call	_delay_1ms	;wreg free
  8344   0025F8                     
  8345                           ;main.c: 1400:     ADCON0bits.GO = 1;
  8346   0025F8  82C2               	bsf	194,1,c	;volatile
  8347   0025FA                     l472:
  8348                           
  8349                           ;main.c: 1402:     while (ADCON0bits.GO == 1) {
  8350   0025FA  B2C2               	btfsc	194,1,c	;volatile
  8351   0025FC  EF02  F013         	goto	u2141
  8352   002600  EF04  F013         	goto	u2140
  8353   002604                     u2141:
  8354   002604  EFFD  F012         	goto	l472
  8355   002608                     u2140:
  8356   002608                     
  8357                           ;main.c: 1406:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  8358   002608  50C3               	movf	195,w,c	;volatile
  8359   00260A  CFC4 F03F          	movff	4036,??_AD_capture_BattVoltage	;volatile
  8360   00260E  6A40               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  8361   002610  C03F  F040         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  8362   002614  6A3F               	clrf	??_AD_capture_BattVoltage^0,c
  8363   002616  103F               	iorwf	??_AD_capture_BattVoltage^0,w,c
  8364   002618  6E0F               	movwf	_VOLTAGE^0,c
  8365   00261A  5040               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  8366   00261C  6E10               	movwf	(_VOLTAGE+1)^0,c
  8367   00261E  0012               	return		;funcret
  8368   002620                     __end_of_AD_capture_BattVoltage:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function _delay_1ms *****************
  8372 ;; Defined at:
  8373 ;;		line 1004 in file "main.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  time            2    8[COMRAM] unsigned int 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:        3 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 2
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_MotorPosition_Init
  8398 ;;		_Homing_Again_Manual
  8399 ;;		_Homing_Again_Auto
  8400 ;;		_AD_capture_BattVoltage
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text41
  8405   00272E                     __ptext41:
  8406                           	callstack 0
  8407   00272E                     _delay_1ms:
  8408                           	callstack 27
  8409   00272E                     
  8410                           ;main.c: 1005:     while (time > 0) {
  8411   00272E  EFA3  F013         	goto	l369
  8412   002732                     l3179:
  8413                           
  8414                           ;main.c: 1006:         _delay((unsigned long)((1)*(8000000/4000.0)));
  8415   002732  0E03               	movlw	3
  8416   002734  6E3E               	movwf	??_delay_1ms^0,c
  8417   002736  0E98               	movlw	152
  8418   002738                     u4707:
  8419   002738  2EE8               	decfsz	wreg,f,c
  8420   00273A  D7FE               	bra	u4707
  8421   00273C  2E3E               	decfsz	??_delay_1ms^0,f,c
  8422   00273E  D7FC               	bra	u4707
  8423   002740                     
  8424                           ;main.c: 1007:         time--;
  8425   002740  063C               	decf	delay_1ms@time^0,f,c
  8426   002742  A0D8               	btfss	status,0,c
  8427   002744  063D               	decf	(delay_1ms@time+1)^0,f,c
  8428   002746                     l369:
  8429                           
  8430                           ;main.c: 1005:     while (time > 0) {
  8431   002746  503C               	movf	delay_1ms@time^0,w,c
  8432   002748  103D               	iorwf	(delay_1ms@time+1)^0,w,c
  8433   00274A  A4D8               	btfss	status,2,c
  8434   00274C  EFAA  F013         	goto	u1881
  8435   002750  EFAC  F013         	goto	u1880
  8436   002754                     u1881:
  8437   002754  EF99  F013         	goto	l3179
  8438   002758                     u1880:
  8439   002758  0012               	return		;funcret
  8440   00275A                     __end_of_delay_1ms:
  8441                           	callstack 0
  8442                           
  8443 ;; *************** function _high_isr *****************
  8444 ;; Defined at:
  8445 ;;		line 886 in file "main.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  i               1    7[COMRAM] unsigned char 
  8450 ;;  c               1    6[COMRAM] unsigned char 
  8451 ;;  Temp            1    5[COMRAM] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;Total ram usage:        7 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 1
  8468 ;; This function calls:
  8469 ;;		_Low_Power_Indicator
  8470 ;;		_Read1USART
  8471 ;;		i2_Write1USART
  8472 ;; This function is called by:
  8473 ;;		Interrupt level 2
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	intcode
  8478   000008                     __pintcode:
  8479                           	callstack 0
  8480   000008                     _high_isr:
  8481                           	callstack 25
  8482                           
  8483                           ;incstack = 0
  8484   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8485   00000A  CFD9 F037          	movff	fsr2l,??_high_isr+2
  8486   00000E  CFDA F038          	movff	fsr2h,??_high_isr+3
  8487   000012                     
  8488                           ;main.c: 887:     unsigned char c, i;;main.c: 888:     unsigned char Temp;;main.c: 890: 
      +                              if ((PIR1bits.RC1IF))
  8489   000012  AA9E               	btfss	158,5,c	;volatile
  8490   000014  EF0E  F000         	goto	i2u341_41
  8491   000018  EF10  F000         	goto	i2u341_40
  8492   00001C                     i2u341_41:
  8493   00001C  EFDD  F000         	goto	i2l332
  8494   000020                     i2u341_40:
  8495   000020                     
  8496                           ;main.c: 891:     {;main.c: 893:         c = Read1USART();
  8497   000020  ECD3  F013         	call	_Read1USART	;wreg free
  8498   000024  6E3A               	movwf	high_isr@c^0,c
  8499   000026                     
  8500                           ;main.c: 895:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  8501   000026  0EA5               	movlw	165
  8502   000028  183A               	xorwf	high_isr@c^0,w,c
  8503   00002A  A4D8               	btfss	status,2,c
  8504   00002C  EF1A  F000         	goto	i2u342_41
  8505   000030  EF1C  F000         	goto	i2u342_40
  8506   000034                     i2u342_41:
  8507   000034  EF3E  F000         	goto	i2l4771
  8508   000038                     i2u342_40:
  8509   000038  5033               	movf	_Serial_Flag^0,w,c
  8510   00003A  B4D8               	btfsc	status,2,c
  8511   00003C  EF22  F000         	goto	i2u343_41
  8512   000040  EF24  F000         	goto	i2u343_40
  8513   000044                     i2u343_41:
  8514   000044  EF2C  F000         	goto	i2l4765
  8515   000048                     i2u343_40:
  8516   000048  042F               	decf	_Busy^0,w,c
  8517   00004A  A4D8               	btfss	status,2,c
  8518   00004C  EF2A  F000         	goto	i2u344_41
  8519   000050  EF2C  F000         	goto	i2u344_40
  8520   000054                     i2u344_41:
  8521   000054  EF3E  F000         	goto	i2l4771
  8522   000058                     i2u344_40:
  8523   000058                     i2l4765:
  8524                           
  8525                           ;main.c: 896:             Serial_GData = 1;
  8526   000058  0E01               	movlw	1
  8527   00005A  6E32               	movwf	_Serial_GData^0,c
  8528                           
  8529                           ;main.c: 897:             Serial_Count = 0;
  8530   00005C  0E00               	movlw	0
  8531   00005E  6E26               	movwf	(_Serial_Count+1)^0,c
  8532   000060  0E00               	movlw	0
  8533   000062  6E25               	movwf	_Serial_Count^0,c
  8534   000064                     
  8535                           ;main.c: 898:             Serial_Buffer[Serial_Count] = c;
  8536   000064  0E80               	movlw	low _Serial_Buffer
  8537   000066  2425               	addwf	_Serial_Count^0,w,c
  8538   000068  6ED9               	movwf	fsr2l,c
  8539   00006A  0E00               	movlw	high _Serial_Buffer
  8540   00006C  2026               	addwfc	(_Serial_Count+1)^0,w,c
  8541   00006E  6EDA               	movwf	fsr2h,c
  8542   000070  C03A  FFDF         	movff	high_isr@c,indf2
  8543   000074                     i2l4769:
  8544                           
  8545                           ;main.c: 899:             Serial_Count++;
  8546   000074  4A25               	infsnz	_Serial_Count^0,f,c
  8547   000076  2A26               	incf	(_Serial_Count+1)^0,f,c
  8548                           
  8549                           ;main.c: 900:         } else if (Serial_GData == 1) {
  8550   000078  EFE7  F000         	goto	i2l4835
  8551   00007C                     i2l4771:
  8552   00007C  0432               	decf	_Serial_GData^0,w,c
  8553   00007E  A4D8               	btfss	status,2,c
  8554   000080  EF44  F000         	goto	i2u345_41
  8555   000084  EF46  F000         	goto	i2u345_40
  8556   000088                     i2u345_41:
  8557   000088  EFE7  F000         	goto	i2l4835
  8558   00008C                     i2u345_40:
  8559   00008C                     
  8560                           ;main.c: 901:             Serial_Buffer[Serial_Count] = c;
  8561   00008C  0E80               	movlw	low _Serial_Buffer
  8562   00008E  2425               	addwf	_Serial_Count^0,w,c
  8563   000090  6ED9               	movwf	fsr2l,c
  8564   000092  0E00               	movlw	high _Serial_Buffer
  8565   000094  2026               	addwfc	(_Serial_Count+1)^0,w,c
  8566   000096  6EDA               	movwf	fsr2h,c
  8567   000098  C03A  FFDF         	movff	high_isr@c,indf2
  8568   00009C                     
  8569                           ;main.c: 903:             if (Serial_Count < 5) {
  8570   00009C  5026               	movf	(_Serial_Count+1)^0,w,c
  8571   00009E  E107               	bnz	i2u346_41
  8572   0000A0  0E05               	movlw	5
  8573   0000A2  5C25               	subwf	_Serial_Count^0,w,c
  8574   0000A4  B0D8               	btfsc	status,0,c
  8575   0000A6  EF57  F000         	goto	i2u346_41
  8576   0000AA  EF59  F000         	goto	i2u346_40
  8577   0000AE                     i2u346_41:
  8578   0000AE  EFD9  F000         	goto	i2l4829
  8579   0000B2                     i2u346_40:
  8580   0000B2                     
  8581                           ;main.c: 904:                 if (c == 0x5A) {
  8582   0000B2  0E5A               	movlw	90
  8583   0000B4  183A               	xorwf	high_isr@c^0,w,c
  8584   0000B6  A4D8               	btfss	status,2,c
  8585   0000B8  EF60  F000         	goto	i2u347_41
  8586   0000BC  EF62  F000         	goto	i2u347_40
  8587   0000C0                     i2u347_41:
  8588   0000C0  EF3A  F000         	goto	i2l4769
  8589   0000C4                     i2u347_40:
  8590   0000C4                     
  8591                           ;main.c: 905:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  8592   0000C4  0100               	movlb	0	; () banked
  8593   0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  8594   0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  8595   0000CA  6E39               	movwf	high_isr@Temp^0,c
  8596                           
  8597                           ;main.c: 907:                     if (Temp == Serial_Buffer[3]) {
  8598   0000CC  5039               	movf	high_isr@Temp^0,w,c
  8599   0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  8600   0000D0  A4D8               	btfss	status,2,c
  8601   0000D2  EF6D  F000         	goto	i2u348_41
  8602   0000D6  EF6F  F000         	goto	i2u348_40
  8603   0000DA                     i2u348_41:
  8604   0000DA  EFAE  F000         	goto	i2l4811
  8605   0000DE                     i2u348_40:
  8606   0000DE                     
  8607                           ; BSR set to: 0
  8608                           ;main.c: 908:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  8609   0000DE  502F               	movf	_Busy^0,w,c
  8610   0000E0  B4D8               	btfsc	status,2,c
  8611   0000E2  EF75  F000         	goto	i2u349_41
  8612   0000E6  EF77  F000         	goto	i2u349_40
  8613   0000EA                     i2u349_41:
  8614   0000EA  EF80  F000         	goto	i2l4785
  8615   0000EE                     i2u349_40:
  8616   0000EE                     
  8617                           ; BSR set to: 0
  8618   0000EE  0EF5               	movlw	245
  8619   0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8620   0000F2  A4D8               	btfss	status,2,c
  8621   0000F4  EF7E  F000         	goto	i2u350_41
  8622   0000F8  EF80  F000         	goto	i2u350_40
  8623   0000FC                     i2u350_41:
  8624   0000FC  EF96  F000         	goto	i2l4797
  8625   000100                     i2u350_40:
  8626   000100                     i2l4785:
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;main.c: 910:                             for (i = 0; i < 5; i++) {
  8630   000100  0E00               	movlw	0
  8631   000102  6E3B               	movwf	high_isr@i^0,c
  8632   000104                     i2l4791:
  8633                           
  8634                           ;main.c: 911:                                 Write1USART(Serial_Buffer[i]);
  8635   000104  0E80               	movlw	low _Serial_Buffer
  8636   000106  243B               	addwf	high_isr@i^0,w,c
  8637   000108  6ED9               	movwf	fsr2l,c
  8638   00010A  6ADA               	clrf	fsr2h,c
  8639   00010C  0E00               	movlw	high _Serial_Buffer
  8640   00010E  22DA               	addwfc	fsr2h,f,c
  8641   000110  50DF               	movf	indf2,w,c
  8642   000112  EC1A  F014         	call	i2_Write1USART
  8643   000116                     
  8644                           ;main.c: 912:                             }
  8645   000116  2A3B               	incf	high_isr@i^0,f,c
  8646   000118  0E04               	movlw	4
  8647   00011A  643B               	cpfsgt	high_isr@i^0,c
  8648   00011C  EF92  F000         	goto	i2u351_41
  8649   000120  EF94  F000         	goto	i2u351_40
  8650   000124                     i2u351_41:
  8651   000124  EF82  F000         	goto	i2l4791
  8652   000128                     i2u351_40:
  8653   000128  EFA4  F000         	goto	i2l4809
  8654   00012C                     i2l4797:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;main.c: 916:                             for (i = 0; i < 5; i++) {
  8658   00012C  0E00               	movlw	0
  8659   00012E  6E3B               	movwf	high_isr@i^0,c
  8660   000130                     i2l4803:
  8661                           
  8662                           ;main.c: 917:                                 Write1USART(0x16);
  8663   000130  0E16               	movlw	22
  8664   000132  EC1A  F014         	call	i2_Write1USART
  8665   000136                     
  8666                           ;main.c: 918:                             }
  8667   000136  2A3B               	incf	high_isr@i^0,f,c
  8668   000138  0E04               	movlw	4
  8669   00013A  643B               	cpfsgt	high_isr@i^0,c
  8670   00013C  EFA2  F000         	goto	i2u352_41
  8671   000140  EFA4  F000         	goto	i2u352_40
  8672   000144                     i2u352_41:
  8673   000144  EF98  F000         	goto	i2l4803
  8674   000148                     i2u352_40:
  8675   000148                     i2l4809:
  8676                           
  8677                           ;main.c: 922:                         Serial_Flag = 1;
  8678   000148  0E01               	movlw	1
  8679   00014A  6E33               	movwf	_Serial_Flag^0,c
  8680                           
  8681                           ;main.c: 923:                         Serial_Count = 0;
  8682   00014C  0E00               	movlw	0
  8683   00014E  6E26               	movwf	(_Serial_Count+1)^0,c
  8684   000150  0E00               	movlw	0
  8685   000152  6E25               	movwf	_Serial_Count^0,c
  8686                           
  8687                           ;main.c: 924:                         OpMode = AUTO_MODE;
  8688   000154  0E02               	movlw	2
  8689   000156  6E2C               	movwf	_OpMode^0,c	;volatile
  8690                           
  8691                           ;main.c: 926:                     } else {
  8692   000158  EFC2  F000         	goto	i2l4823
  8693   00015C                     i2l4811:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;main.c: 927:                         Serial_Flag = 0;
  8697   00015C  0E00               	movlw	0
  8698   00015E  6E33               	movwf	_Serial_Flag^0,c
  8699                           
  8700                           ;main.c: 928:                         Serial_Count = 0;
  8701   000160  0E00               	movlw	0
  8702   000162  6E26               	movwf	(_Serial_Count+1)^0,c
  8703   000164  0E00               	movlw	0
  8704   000166  6E25               	movwf	_Serial_Count^0,c
  8705                           
  8706                           ;main.c: 931:                         for (i = 0; i < 5; i++) {
  8707   000168  0E00               	movlw	0
  8708   00016A  6E3B               	movwf	high_isr@i^0,c
  8709   00016C                     i2l4817:
  8710                           
  8711                           ;main.c: 932:                             Write1USART(0x15);
  8712   00016C  0E15               	movlw	21
  8713   00016E  EC1A  F014         	call	i2_Write1USART
  8714   000172                     
  8715                           ;main.c: 933:                         }
  8716   000172  2A3B               	incf	high_isr@i^0,f,c
  8717   000174  0E04               	movlw	4
  8718   000176  643B               	cpfsgt	high_isr@i^0,c
  8719   000178  EFC0  F000         	goto	i2u353_41
  8720   00017C  EFC2  F000         	goto	i2u353_40
  8721   000180                     i2u353_41:
  8722   000180  EFB6  F000         	goto	i2l4817
  8723   000184                     i2u353_40:
  8724   000184                     i2l4823:
  8725                           
  8726                           ;main.c: 937:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  8727   000184  0EF5               	movlw	245
  8728   000186  0100               	movlb	0	; () banked
  8729   000188  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8730   00018A  A4D8               	btfss	status,2,c
  8731   00018C  EFCA  F000         	goto	i2u354_41
  8732   000190  EFCC  F000         	goto	i2u354_40
  8733   000194                     i2u354_41:
  8734   000194  EF3A  F000         	goto	i2l4769
  8735   000198                     i2u354_40:
  8736   000198                     
  8737                           ; BSR set to: 0
  8738   000198  0E02               	movlw	2
  8739   00019A  182C               	xorwf	_OpMode^0,w,c	;volatile
  8740   00019C  A4D8               	btfss	status,2,c
  8741   00019E  EFD3  F000         	goto	i2u355_41
  8742   0001A2  EFD5  F000         	goto	i2u355_40
  8743   0001A6                     i2u355_41:
  8744   0001A6  EF3A  F000         	goto	i2l4769
  8745   0001AA                     i2u355_40:
  8746   0001AA                     
  8747                           ; BSR set to: 0
  8748                           ;main.c: 938:                         Stop = 1;
  8749   0001AA  0E01               	movlw	1
  8750   0001AC  6E31               	movwf	_Stop^0,c
  8751   0001AE  EF3A  F000         	goto	i2l4769
  8752   0001B2                     i2l4829:
  8753                           
  8754                           ;main.c: 942:                 Serial_GData = 0;
  8755   0001B2  0E00               	movlw	0
  8756   0001B4  6E32               	movwf	_Serial_GData^0,c
  8757   0001B6  EF3A  F000         	goto	i2l4769
  8758   0001BA                     i2l332:
  8759                           
  8760                           ;main.c: 948:         if (RCSTA1bits.OERR == 1) {
  8761   0001BA  A2AC               	btfss	172,1,c	;volatile
  8762   0001BC  EFE2  F000         	goto	i2u356_41
  8763   0001C0  EFE4  F000         	goto	i2u356_40
  8764   0001C4                     i2u356_41:
  8765   0001C4  EFE7  F000         	goto	i2l4835
  8766   0001C8                     i2u356_40:
  8767   0001C8                     
  8768                           ;main.c: 949:             RCSTA1bits.OERR = 0;
  8769   0001C8  92AC               	bcf	172,1,c	;volatile
  8770                           
  8771                           ;main.c: 950:             RCSTA1bits.CREN = 0;
  8772   0001CA  98AC               	bcf	172,4,c	;volatile
  8773                           
  8774                           ;main.c: 951:             RCSTA1bits.CREN = 1;
  8775   0001CC  88AC               	bsf	172,4,c	;volatile
  8776   0001CE                     i2l4835:
  8777                           
  8778                           ;main.c: 955:     if (TMR1IF_triggered == 1) {
  8779   0001CE  0427               	decf	_TMR1IF_triggered^0,w,c	;volatile
  8780   0001D0  A4D8               	btfss	status,2,c
  8781   0001D2  EFED  F000         	goto	i2u357_41
  8782   0001D6  EFEF  F000         	goto	i2u357_40
  8783   0001DA                     i2u357_41:
  8784   0001DA  EF36  F001         	goto	i2l4853
  8785   0001DE                     i2u357_40:
  8786   0001DE                     
  8787                           ;main.c: 956:         if (errorcounter > 0) {
  8788   0001DE  BE53               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  8789   0001E0  EFFC  F000         	goto	i2u358_41
  8790   0001E4  5053               	movf	(_errorcounter+3)^0,w,c	;volatile
  8791   0001E6  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  8792   0001E8  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  8793   0001EA  E108               	bnz	i2u358_40
  8794   0001EC  0450               	decf	_errorcounter^0,w,c	;volatile
  8795   0001EE  A0D8               	btfss	status,0,c
  8796   0001F0  EFFC  F000         	goto	i2u358_41
  8797   0001F4  EFFE  F000         	goto	i2u358_40
  8798   0001F8                     i2u358_41:
  8799   0001F8  EF08  F001         	goto	i2l4841
  8800   0001FC                     i2u358_40:
  8801   0001FC                     
  8802                           ;main.c: 957:             errorcounter--;
  8803   0001FC  0EFF               	movlw	255
  8804   0001FE  2650               	addwf	_errorcounter^0,f,c	;volatile
  8805   000200  0EFF               	movlw	255
  8806   000202  2251               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  8807   000204  0EFF               	movlw	255
  8808   000206  2252               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  8809   000208  0EFF               	movlw	255
  8810   00020A  2253               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  8811                           
  8812                           ;main.c: 958:         } else {
  8813   00020C  EF10  F001         	goto	i2l4843
  8814   000210                     i2l4841:
  8815                           
  8816                           ;main.c: 959:             errorcounter = 0;
  8817   000210  0E00               	movlw	0
  8818   000212  6E50               	movwf	_errorcounter^0,c	;volatile
  8819   000214  0E00               	movlw	0
  8820   000216  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  8821   000218  0E00               	movlw	0
  8822   00021A  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  8823   00021C  0E00               	movlw	0
  8824   00021E  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  8825   000220                     i2l4843:
  8826                           
  8827                           ;main.c: 962:         if (LowPowerCounter > 0) {
  8828   000220  0100               	movlb	0	; () banked
  8829   000222  BFA5               	btfsc	(_LowPowerCounter+3)& (0+255),7,b	;volatile
  8830   000224  EF1E  F001         	goto	i2u359_41
  8831   000228  51A5               	movf	(_LowPowerCounter+3)& (0+255),w,b	;volatile
  8832   00022A  11A4               	iorwf	(_LowPowerCounter+2)& (0+255),w,b	;volatile
  8833   00022C  11A3               	iorwf	(_LowPowerCounter+1)& (0+255),w,b	;volatile
  8834   00022E  E108               	bnz	i2u359_40
  8835   000230  05A2               	decf	_LowPowerCounter& (0+255),w,b	;volatile
  8836   000232  A0D8               	btfss	status,0,c
  8837   000234  EF1E  F001         	goto	i2u359_41
  8838   000238  EF20  F001         	goto	i2u359_40
  8839   00023C                     i2u359_41:
  8840   00023C  EF2A  F001         	goto	i2l4847
  8841   000240                     i2u359_40:
  8842   000240                     
  8843                           ; BSR set to: 0
  8844                           ;main.c: 963:             LowPowerCounter--;
  8845   000240  0EFF               	movlw	255
  8846   000242  27A2               	addwf	_LowPowerCounter& (0+255),f,b	;volatile
  8847   000244  0EFF               	movlw	255
  8848   000246  23A3               	addwfc	(_LowPowerCounter+1)& (0+255),f,b	;volatile
  8849   000248  0EFF               	movlw	255
  8850   00024A  23A4               	addwfc	(_LowPowerCounter+2)& (0+255),f,b	;volatile
  8851   00024C  0EFF               	movlw	255
  8852   00024E  23A5               	addwfc	(_LowPowerCounter+3)& (0+255),f,b	;volatile
  8853                           
  8854                           ;main.c: 964:         } else {
  8855   000250  EF34  F001         	goto	i2l4851
  8856   000254                     i2l4847:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;main.c: 965:             LowPowerCounter = 20;
  8860   000254  0E14               	movlw	20
  8861   000256  6FA2               	movwf	_LowPowerCounter& (0+255),b	;volatile
  8862   000258  0E00               	movlw	0
  8863   00025A  6FA3               	movwf	(_LowPowerCounter+1)& (0+255),b	;volatile
  8864   00025C  0E00               	movlw	0
  8865   00025E  6FA4               	movwf	(_LowPowerCounter+2)& (0+255),b	;volatile
  8866   000260  0E00               	movlw	0
  8867   000262  6FA5               	movwf	(_LowPowerCounter+3)& (0+255),b	;volatile
  8868   000264                     
  8869                           ; BSR set to: 0
  8870                           ;main.c: 966:             Low_Power_Indicator();
  8871   000264  EC65  F013         	call	_Low_Power_Indicator	;wreg free
  8872   000268                     i2l4851:
  8873                           
  8874                           ;main.c: 969:         TMR1IF_triggered = 0;
  8875   000268  0E00               	movlw	0
  8876   00026A  6E27               	movwf	_TMR1IF_triggered^0,c	;volatile
  8877   00026C                     i2l4853:
  8878                           
  8879                           ;main.c: 972:     if (TMR1IF) {
  8880   00026C  A09E               	btfss	3998,0,c	;volatile
  8881   00026E  EF3B  F001         	goto	i2u360_41
  8882   000272  EF3D  F001         	goto	i2u360_40
  8883   000276                     i2u360_41:
  8884   000276  EF44  F001         	goto	i2l4859
  8885   00027A                     i2u360_40:
  8886   00027A                     
  8887                           ;main.c: 973:         TMR1 = 0x9E57;
  8888   00027A  0E9E               	movlw	158
  8889   00027C  6ECF               	movwf	207,c	;volatile
  8890   00027E  0E57               	movlw	87
  8891   000280  6ECE               	movwf	206,c	;volatile
  8892   000282                     
  8893                           ;main.c: 974:         TMR1IF = 0;
  8894   000282  909E               	bcf	3998,0,c	;volatile
  8895                           
  8896                           ;main.c: 975:         TMR1IF_triggered = 1;
  8897   000284  0E01               	movlw	1
  8898   000286  6E27               	movwf	_TMR1IF_triggered^0,c	;volatile
  8899   000288                     i2l4859:
  8900                           
  8901                           ;main.c: 980:     if(INTCON3bits.INT2F == 1) {
  8902   000288  A2F0               	btfss	240,1,c	;volatile
  8903   00028A  EF49  F001         	goto	i2u361_41
  8904   00028E  EF4B  F001         	goto	i2u361_40
  8905   000292                     i2u361_41:
  8906   000292  EF81  F001         	goto	i2l366
  8907   000296                     i2u361_40:
  8908   000296                     
  8909                           ;main.c: 983:       _delay((unsigned long)((500)*(8000000/4000.0)));
  8910   000296  0E06               	movlw	6
  8911   000298  6E36               	movwf	(??_high_isr+1)^0,c
  8912   00029A  0E13               	movlw	19
  8913   00029C  6E35               	movwf	??_high_isr^0,c
  8914   00029E  0EAE               	movlw	174
  8915   0002A0                     i2u471_47:
  8916   0002A0  2EE8               	decfsz	wreg,f,c
  8917   0002A2  D7FE               	bra	i2u471_47
  8918   0002A4  2E35               	decfsz	??_high_isr^0,f,c
  8919   0002A6  D7FC               	bra	i2u471_47
  8920   0002A8  2E36               	decfsz	(??_high_isr+1)^0,f,c
  8921   0002AA  D7FA               	bra	i2u471_47
  8922   0002AC                     
  8923                           ;main.c: 985:       if (dispense == 0 && PORTBbits.RB4 != 0)
  8924   0002AC  5009               	movf	_dispense^0,w,c
  8925   0002AE  100A               	iorwf	(_dispense+1)^0,w,c
  8926   0002B0  A4D8               	btfss	status,2,c
  8927   0002B2  EF5D  F001         	goto	i2u362_41
  8928   0002B6  EF5F  F001         	goto	i2u362_40
  8929   0002BA                     i2u362_41:
  8930   0002BA  EF6C  F001         	goto	i2l4869
  8931   0002BE                     i2u362_40:
  8932   0002BE  A881               	btfss	129,4,c	;volatile
  8933   0002C0  EF64  F001         	goto	i2u363_41
  8934   0002C4  EF66  F001         	goto	i2u363_40
  8935   0002C8                     i2u363_41:
  8936   0002C8  EF6C  F001         	goto	i2l4869
  8937   0002CC                     i2u363_40:
  8938   0002CC                     
  8939                           ;main.c: 986:       {;main.c: 988:         dispense = 1;
  8940   0002CC  0E00               	movlw	0
  8941   0002CE  6E0A               	movwf	(_dispense+1)^0,c
  8942   0002D0  0E01               	movlw	1
  8943   0002D2  6E09               	movwf	_dispense^0,c
  8944                           
  8945                           ;main.c: 989:       }
  8946   0002D4  EF80  F001         	goto	i2l4875
  8947   0002D8                     i2l4869:
  8948   0002D8  0409               	decf	_dispense^0,w,c
  8949   0002DA  100A               	iorwf	(_dispense+1)^0,w,c
  8950   0002DC  A4D8               	btfss	status,2,c
  8951   0002DE  EF73  F001         	goto	i2u364_41
  8952   0002E2  EF75  F001         	goto	i2u364_40
  8953   0002E6                     i2u364_41:
  8954   0002E6  EF80  F001         	goto	i2l4875
  8955   0002EA                     i2u364_40:
  8956   0002EA  A881               	btfss	129,4,c	;volatile
  8957   0002EC  EF7A  F001         	goto	i2u365_41
  8958   0002F0  EF7C  F001         	goto	i2u365_40
  8959   0002F4                     i2u365_41:
  8960   0002F4  EF80  F001         	goto	i2l4875
  8961   0002F8                     i2u365_40:
  8962   0002F8                     
  8963                           ;main.c: 991:       {;main.c: 993:         dispense = 0;
  8964   0002F8  0E00               	movlw	0
  8965   0002FA  6E0A               	movwf	(_dispense+1)^0,c
  8966   0002FC  0E00               	movlw	0
  8967   0002FE  6E09               	movwf	_dispense^0,c
  8968   000300                     i2l4875:
  8969                           
  8970                           ;main.c: 996:       INTCON3bits.INT2F = 0;
  8971   000300  92F0               	bcf	240,1,c	;volatile
  8972   000302                     i2l366:
  8973   000302  C038  FFDA         	movff	??_high_isr+3,fsr2h
  8974   000306  C037  FFD9         	movff	??_high_isr+2,fsr2l
  8975   00030A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8976   00030C  0011               	retfie		f
  8977   00030E                     __end_of_high_isr:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function i2_Write1USART *****************
  8981 ;; Defined at:
  8982 ;;		line 47 in file "usart.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  data            1    wreg     unsigned char 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  data            1    0[COMRAM] unsigned char 
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;Total ram usage:        1 bytes
  9001 ;; Hardware stack levels used: 1
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_high_isr
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text43
  9010   002834                     __ptext43:
  9011                           	callstack 0
  9012   002834                     i2_Write1USART:
  9013                           	callstack 25
  9014                           
  9015                           ;incstack = 0
  9016                           ;i2Write1USART@data stored from wreg
  9017   002834  6E34               	movwf	i2Write1USART@data^0,c
  9018   002836                     
  9019                           ;usart.c: 48:     TXREG1 = data;
  9020   002836  C034  FFAE         	movff	i2Write1USART@data,4014	;volatile
  9021   00283A                     i2l664:
  9022   00283A  A2AD               	btfss	173,1,c	;volatile
  9023   00283C  EF22  F014         	goto	i2u280_41
  9024   002840  EF24  F014         	goto	i2u280_40
  9025   002844                     i2u280_41:
  9026   002844  EF1D  F014         	goto	i2l664
  9027   002848                     i2u280_40:
  9028   002848  0012               	return		;funcret
  9029   00284A                     __end_ofi2_Write1USART:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _Read1USART *****************
  9033 ;; Defined at:
  9034 ;;		line 56 in file "usart.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;		None
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  result          1    0[COMRAM] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      unsigned char 
  9041 ;; Registers used:
  9042 ;;		wreg, status,2
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:        1 bytes
  9053 ;; Hardware stack levels used: 1
  9054 ;; This function calls:
  9055 ;;		Nothing
  9056 ;; This function is called by:
  9057 ;;		_high_isr
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           
  9061                           	psect	text44
  9062   0027A6                     __ptext44:
  9063                           	callstack 0
  9064   0027A6                     _Read1USART:
  9065                           	callstack 25
  9066   0027A6                     
  9067                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  9068   0027A6  A2AC               	btfss	172,1,c	;volatile
  9069   0027A8  EFD8  F013         	goto	i2u277_41
  9070   0027AC  EFDA  F013         	goto	i2u277_40
  9071   0027B0                     i2u277_41:
  9072   0027B0  EFE2  F013         	goto	i2l670
  9073   0027B4                     i2u277_40:
  9074   0027B4                     
  9075                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  9076   0027B4  98AC               	bcf	172,4,c	;volatile
  9077                           
  9078                           ;usart.c: 61:         result = RCREG1;
  9079   0027B6  CFAF F034          	movff	4015,Read1USART@result	;volatile
  9080                           
  9081                           ;usart.c: 62:         result = RCREG1;
  9082   0027BA  CFAF F034          	movff	4015,Read1USART@result	;volatile
  9083                           
  9084                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  9085   0027BE  88AC               	bsf	172,4,c	;volatile
  9086                           
  9087                           ;usart.c: 64:     } else {
  9088   0027C0  EFE4  F013         	goto	i2l4097
  9089   0027C4                     i2l670:
  9090                           
  9091                           ;usart.c: 65:         result = RCREG1;
  9092   0027C4  CFAF F034          	movff	4015,Read1USART@result	;volatile
  9093   0027C8                     i2l4097:
  9094                           
  9095                           ;usart.c: 68:     return result;
  9096   0027C8  5034               	movf	Read1USART@result^0,w,c
  9097   0027CA  0012               	return		;funcret
  9098   0027CC                     __end_of_Read1USART:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function _Low_Power_Indicator *****************
  9102 ;; Defined at:
  9103 ;;		line 1409 in file "main.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_high_isr
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text45
  9131   0026CA                     __ptext45:
  9132                           	callstack 0
  9133   0026CA                     _Low_Power_Indicator:
  9134                           	callstack 25
  9135   0026CA                     
  9136                           ;main.c: 1411:     if (VOLTAGE <= 0x0366)
  9137   0026CA  0E67               	movlw	103
  9138   0026CC  5C0F               	subwf	_VOLTAGE^0,w,c
  9139   0026CE  0E03               	movlw	3
  9140   0026D0  5810               	subwfb	(_VOLTAGE+1)^0,w,c
  9141   0026D2  B0D8               	btfsc	status,0,c
  9142   0026D4  EF6E  F013         	goto	i2u278_41
  9143   0026D8  EF70  F013         	goto	i2u278_40
  9144   0026DC                     i2u278_41:
  9145   0026DC  EF73  F013         	goto	i2l4105
  9146   0026E0                     i2u278_40:
  9147   0026E0                     
  9148                           ;main.c: 1412:     {;main.c: 1414:         LATDbits.LATD1 = 1;
  9149   0026E0  828C               	bsf	140,1,c	;volatile
  9150                           
  9151                           ;main.c: 1416:     } else if (VOLTAGE >= 0x03C0)
  9152   0026E2  EF7F  F013         	goto	i2l481
  9153   0026E6                     i2l4105:
  9154   0026E6  0EC0               	movlw	192
  9155   0026E8  5C0F               	subwf	_VOLTAGE^0,w,c
  9156   0026EA  0E03               	movlw	3
  9157   0026EC  5810               	subwfb	(_VOLTAGE+1)^0,w,c
  9158   0026EE  A0D8               	btfss	status,0,c
  9159   0026F0  EF7C  F013         	goto	i2u279_41
  9160   0026F4  EF7E  F013         	goto	i2u279_40
  9161   0026F8                     i2u279_41:
  9162   0026F8  EF7F  F013         	goto	i2l481
  9163   0026FC                     i2u279_40:
  9164   0026FC                     
  9165                           ;main.c: 1417:     {;main.c: 1418:         LATDbits.LATD1 = 0;
  9166   0026FC  928C               	bcf	140,1,c	;volatile
  9167   0026FE                     i2l481:
  9168   0026FE  0012               	return		;funcret
  9169   002700                     __end_of_Low_Power_Indicator:
  9170                           	callstack 0
  9171   000000                     
  9172                           	psect	rparam
  9173   000000                     
  9174                           	psect	temp
  9175   000057                     btemp:
  9176                           	callstack 0
  9177   000057                     	ds	1
  9178   000000                     int$flags	set	btemp
  9179   000000                     wtemp8	set	btemp+1
  9180   000000                     ttemp5	set	btemp+1
  9181   000000                     ttemp6	set	btemp+4
  9182   000000                     ttemp7	set	btemp+8
  9183                           
  9184                           	psect	config
  9185                           
  9186                           ;Config register CONFIG1L @ 0x7FF8
  9187                           ;	Watchdog Timer Enable bit
  9188                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  9189                           ;	PLL Prescaler Selection bits
  9190                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9191                           ;	Stack Overflow/Underflow Reset Enable bit
  9192                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  9193                           ;	Extended Instruction Set Enable bit
  9194                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9195                           ;	Background Debugger Enable bit
  9196                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  9197   007FF8                     	org	32760
  9198   007FF8  AE                 	db	174
  9199                           
  9200                           ;Config register CONFIG1H @ 0x7FF9
  9201                           ;	CPU System Clock Postscaler
  9202                           ;	CPUDIV = OSC1, No CPU system clock divide
  9203                           ;	Code Protection bit
  9204                           ;	CP0 = OFF, Program memory is not code-protected
  9205   007FF9                     	org	32761
  9206   007FF9  F7                 	db	247
  9207                           
  9208                           ;Config register CONFIG2L @ 0x7FFA
  9209                           ;	Oscillator Selection bits
  9210                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  9211                           ;	Fail-Safe Clock Monitor Enable bit
  9212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9213                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  9214                           ;	IESO = OFF, Two-Speed Start-up disabled
  9215   007FFA                     	org	32762
  9216   007FFA  03                 	db	3
  9217                           
  9218                           ;Config register CONFIG2H @ 0x7FFB
  9219                           ;	Watchdog Timer Postscaler Select bits
  9220                           ;	WDTPS = 2048, 1:2048
  9221   007FFB                     	org	32763
  9222   007FFB  FB                 	db	251
  9223                           
  9224                           ;Config register CONFIG3L @ 0x7FFC
  9225                           ;	unspecified, using default values
  9226   007FFC                     	org	32764
  9227   007FFC  F8                 	db	248
  9228                           
  9229                           ;Config register CONFIG3H @ 0x7FFD
  9230                           ;	ECCP2 MUX bit
  9231                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  9232                           ;	MSSP Address Masking Mode Select bit
  9233                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  9234   007FFD                     	org	32765
  9235   007FFD  F1                 	db	241
  9236                           tosu	equ	0xFFF
  9237                           tosh	equ	0xFFE
  9238                           tosl	equ	0xFFD
  9239                           stkptr	equ	0xFFC
  9240                           pclatu	equ	0xFFB
  9241                           pclath	equ	0xFFA
  9242                           pcl	equ	0xFF9
  9243                           tblptru	equ	0xFF8
  9244                           tblptrh	equ	0xFF7
  9245                           tblptrl	equ	0xFF6
  9246                           tablat	equ	0xFF5
  9247                           prodh	equ	0xFF4
  9248                           prodl	equ	0xFF3
  9249                           indf0	equ	0xFEF
  9250                           postinc0	equ	0xFEE
  9251                           postdec0	equ	0xFED
  9252                           preinc0	equ	0xFEC
  9253                           plusw0	equ	0xFEB
  9254                           fsr0h	equ	0xFEA
  9255                           fsr0l	equ	0xFE9
  9256                           wreg	equ	0xFE8
  9257                           indf1	equ	0xFE7
  9258                           postinc1	equ	0xFE6
  9259                           postdec1	equ	0xFE5
  9260                           preinc1	equ	0xFE4
  9261                           plusw1	equ	0xFE3
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           bsr	equ	0xFE0
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           preinc2	equ	0xFDC
  9269                           plusw2	equ	0xFDB
  9270                           fsr2h	equ	0xFDA
  9271                           fsr2l	equ	0xFD9
  9272                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      86
    BANK0           160      8      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _main->_write_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _PWM_Selection->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_PWM_Selection

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31830
                                              6 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                      _PWM_Selection
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                            _pwm_set
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    2446
                                             22 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      65
                                              9 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              4     2      2     120
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                3     0      3    1033
                                             14 COMRAM     3     0      3
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    4178
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _PWM_Selection                                        6     4      2    4345
                                              0 BANK0      6     4      2
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    4178
                                             22 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      31
                                              9 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     369
                                              9 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                              8 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                             17 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             14 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  4     4      0    6182
                                             25 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    3622
                                             16 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              8 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2786
                                             17 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                             10 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             14 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             14 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              8 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                             11 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              8 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             7     7      0     319
                                              1 COMRAM     7     7      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
     _delay_1ms
     _readWeighingData
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SErr
     _delay_1ms
   _PWM_Selection
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _ToggleVIB_Mode
     _write_i2c
   _Write1USART
   _WriteSTLED316SData
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _pwm_set
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      56        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      56       1       91.5%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRllllll     2B      0       0      55        0.0%
BITBIGSFRhlhl       1C      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhl        C      0       0      45        0.0%
BITBIGSFRlhhhh       A      0       0      44        0.0%
BITBIGSFRllllh       7      0       0      50        0.0%
BITBIGSFRhlllhh      5      0       0      42        0.0%
BITBIGSFRlllllh      4      0       0      51        0.0%
BITBIGSFRlhl         4      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRhllll       3      0       0      43        0.0%
BITBIGSFRllhh        2      0       0      47        0.0%
BITBIGSFRlllllh      2      0       0      53        0.0%
BITBIGSFRhllhh       2      0       0      40        0.0%
BITBIGSFRllhl        2      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      52        0.0%
BITBIGSFRhlhh        1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      49        0.0%
BITBIGSFRhllhl       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      30        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 17 09:48:52 2024

                             _i 0013                   ??_i2c_Address 003E                    ___awdiv@sign 0041  
                 ?_InitSTLED316 0034                     i2c_Read@ack 003F                             l211 05A8  
                           l300 0FF6                             l221 060A                             l222 0610  
                           l410 1526                             l315 11B6                             l260 0C42  
                           l413 14DA                             l510 2346                             l430 1754  
                           l512 237C                             l504 233E                             l272 0DC0  
                           l256 0AB4                             l248 097A                             l433 179E  
                           l409 147C                             l515 2394                             l451 197A  
                           l443 18E2                             l419 16CC                             l372 2758  
                           l436 17AA                             l540 22B2                             l620 2892  
                           l461 2692                             l293 0F2E                             l518 23BE  
                           l446 1914                             l534 2096                             l614 27A4  
                           l623 289A                             l391 25E0                             l703 2420  
                           l199 272C                             l472 25FA                             l376 27EE  
                           l560 1BBE                             l456 2658                             l608 281C  
                           l632 26BE                             l640 2498                             l369 2746  
                           l545 1ED6                             l465 2552                             l617 28A2  
                           l705 242E                             l633 26C0                             l554 1EE2  
                           l466 2558                             l394 12DE                             l386 1DE2  
                           l626 2876                             l706 2430                             l634 26C8  
                           l475 261E                             l571 1FBE                             l723 286A  
                           l732 2880                             l492 1AAA                             l469 2806  
                           l629 285C                             l637 25A2                             l661 277E  
                           l726 28AA                             l486 1AA2                             l566 1BCA  
                           l735 288A                             l399 1310                             l664 2824  
                           l729 28B2                             l817 1CD6                             l579 1FCA  
                           l667 2832                             l982 220A                             l969 215A  
                           _GIE 007F97                             _PR2 000FCB                             _PR4 000F77  
                           _NUM 0019                    ___awmod@sign 0041                             wreg 000FE8  
                    _TXSTA1bits 000FAD                   ??_i2c_Restart 003D                            l3201 2382  
                          l3211 239A                            l3203 2384                            l4011 17C0  
                          l4003 17A4                            l3213 239C                            l3205 2396  
                          l4021 180E                            l4013 17C4                            l4005 17AC  
                          l3221 1FD0                            l3215 23AC                            l4031 184A  
                          l4023 1814                            l4015 17DC                            l4007 17B0  
                          l3231 1FF8                            l3223 1FD8                            l3217 23AE  
                          l4041 1888                            l4033 1856                            l4025 1818  
                          l4017 17EC                            l4009 17B4                            l3241 2020  
                          l3233 2000                            l3225 1FE0                            l3401 21FA  
                          l3163 2820                            l3171 2662                            l4051 18C6  
                          l4043 1898                            l4035 186C                            l4027 182A  
                          l4019 17F8                            l3235 2008                            l3227 1FE8  
                          l3219 1FCC                            l3331 20AA                            l3403 2202  
                          l3411 224C                            l3181 2740                            l3173 2672  
                          l3165 265A                            l3501 2500                            l4053 18C8  
                          l4045 18A4                            l4037 1872                            l4029 183A  
                          l4061 1904                            l3237 2010                            l3229 1FF0  
                          l3245 2028                            l3341 20D0                            l3333 20B2  
                          l3421 2298                            l3413 224E                            l3191 2366  
                          l3183 2342                            l3175 2676                            l3511 2532  
                          l3503 2516                            l4071 194A                            l4063 1916  
                          l4055 18E4                            l4047 18B8                            l4039 1876  
                          l3239 2018                            l3247 2094                            l3351 2108  
                          l3343 20D8                            l3335 20B6                            l3327 2098  
                          l3431 22AA                            l3423 229A                            l3415 2272  
                          l3407 220C                            l3177 272E                            l3441 2608  
                          l3281 28B0                            l3193 2376                            l3521 1DEE  
                          l3513 2536                            l4073 1956                            l4065 1928  
                          l4057 18F0                            l4049 18BA                            l3361 2134  
                          l3353 210E                            l3345 20EA                            l3337 20C4  
                          l3329 209C                            l3433 22B0                            l3425 22A0  
                          l3417 2282                            l3409 2244                            l4081 2620  
                          l3601 23F6                            l3179 2732                            l3435 25E2  
                          l3275 28A4                            l3195 237E                            l3531 1E2C  
                          l3523 1DF0                            l3515 2554                            l4075 1958  
                          l4067 1938                            l3355 2124                            l3347 20F2  
                          l3363 213A                            l3339 20CC                            l3371 215C  
                          l3427 22A6                            l3419 2292                            l4091 263C  
                          l3611 2400                            l3603 23F8                            l3437 25EC  
                          l3277 28A8                            l3453 27E6                            l3445 27CC  
                          l3189 2348                            l3461 1EE6                            l3533 1E3C  
                          l3525 1DFC                            l3517 1DE6                            l3509 2520  
                          l4069 1948                            l4077 196E                            l3365 214A  
                          l3357 212C                            l3349 20FA                            l3381 2188  
                          l3373 2160                            l3429 22A8                            l3701 1D54  
                          l5301 1CA6                            l3621 241A                            l3613 2412  
                          l3605 23FA                            l3439 25F8                            l3279 28AC  
                          l3447 27DA                            l3471 1F0C                            l3463 1EE8  
                          l3535 1E4C                            l3527 1E0C                            l3543 1E7C  
                          l3519 1DE8                            l4079 1976                            l3367 2152  
                          l3359 212E                            l3391 21C0                            l3383 2190  
                          l3375 216E                            l3631 22C0                            l3711 1D90  
                          l3703 1D64                            l5303 1CB6                            l4087 2628  
                          l3623 241C                            l3615 2414                            l3607 23FC  
                          l5311 288C                            l3457 2878                            l3481 1F5C  
                          l3473 1F1C                            l3465 1EEE                            l3545 1EDA  
                          l3537 1E5C                            l3529 1E1C                            l3393 21D6  
                          l3385 21A2                            l3377 2176                            l3641 22F6  
                          l3633 22C2                            l3721 1DD8                            l3713 1DA2  
                          l3705 1D70                            l5305 1CC6                            l5241 2780  
                          l4089 2638                            l3625 241E                            l3617 2416  
                          l3609 23FE                            l5321 26A8                            l5313 2890  
                          l5401 0322                            l3459 287C                            l3475 1F2C  
                          l3467 1EF0                            l3547 1EE0                            l3539 1E6C  
                          l3395 21DE                            l3387 21AA                            l3379 217A  
                          l3651 233C                            l3643 2310                            l3635 22EA  
                          l3627 22B6                            l3723 1DE0                            l3715 1DB2  
                          l3707 1D86                            l5243 2796                            l5251 2898  
                          l5331 197C                            l3731 1AB6                            l3619 2418  
                          l3571 23C4                            l5323 26B8                            l5315 2696  
                          l5411 0332                            l5403 0326                            l3477 1F3C  
                          l3469 1EFC                            l3485 1F6C                            l3397 21E4  
                          l3389 21B2                            l3901 1448                            l3645 2312  
                          l3637 22EC                            l3629 22BA                            l3717 1DBE  
                          l3709 1D8C                            l5261 2854                            l5245 289C  
                          l5253 286E                            l5309 255A                            l5341 19AC  
                          l5333 1980                            l3741 1B00                            l3733 1ABE  
                          l3725 1AAC                            l3661 280C                            l3581 23E2  
                          l3573 23DA                            l3653 285E                            l5317 269A  
                          l5325 2432                            l5501 047E                            l5421 033C  
                          l5413 0334                            l5405 032A                            l3495 2882  
                          l3487 1FC2                            l3479 1F4C                            l3399 21EA  
                          l3911 148C                            l3903 1458                            l3831 12A4  
                          l3647 231A                            l3639 22F4                            l3671 27FE  
                          l3719 1DC2                            l5271 1BEE                            l5239 2780  
                          l5263 2858                            l5247 28A0                            l5255 2872  
                          l5351 19E0                            l5343 19B4                            l5335 1988  
                          l3751 1B58                            l3743 1B14                            l3735 1ACE  
                          l3727 1AAE                            l3591 23EC                            l3583 23E4  
                          l3575 23DC                            l3655 2862                            l3663 275A  
                          l3567 2700                            l5319 26A0                            l5327 2490  
                          l5511 04BC                            l5503 0480                            l5431 0348  
                          l5423 033E                            l5415 0336                            l5407 032E  
                          l3497 2886                            l3489 1FC8                            l3921 14EE  
                          l3905 146A                            l3913 14A6                            l3833 12B4  
                          l3649 231C                            l3673 2800                            l3681 1CD8  
                          l5281 1C24                            l5273 1BF2                            l5265 1BCC  
                          l5257 284C                            l5249 2894                            l5361 1A0E  
                          l5353 19E2                            l5345 19B6                            l5337 198A  
                          l3761 1BAE                            l3753 1B68                            l3745 1B24  
                          l3737 1AE0                            l3729 1AB4                            l3593 23EE  
                          l3585 23E6                            l3577 23DE                            l3569 23C0  
                          l3657 2864                            l3665 2776                            l6321 1188  
                          l5601 072C                            l6313 0572                            l5521 04EE  
                          l5513 04BE                            l5505 049C                            l5441 035E  
                          l5433 034C                            l5425 0340                            l5417 0338  
                          l5409 0330                            l3499 2888                            l6331 1E90  
                          l3931 15CA                            l3923 1500                            l3915 14B6  
                          l3907 147E                            l3851 1304                            l3843 12E4  
                          l3835 12B6                            l3667 27F0                            l3691 1D12  
                          l3683 1CDA                            l5291 1C66                            l5283 1C3A  
                          l5275 1C00                            l5267 1BD0                            l5259 2850  
                          l5371 1A56                            l5363 1A2A                            l5355 19FE  
                          l5347 19D2                            l5339 19A6                            l3755 1B7C  
                          l3747 1B34                            l3763 1BBE                            l3739 1AF0  
                          l3659 2808                            l3595 23F0                            l3587 23E8  
                          l3579 23E0                            l6323 122E                            l5611 0792  
                          l6315 074E                            l5531 052C                            l5523 04F0  
                          l5515 04C2                            l5507 049E                            l5451 0376  
                          l5443 0360                            l5435 0350                            l5427 0342  
                          l5419 033A                            l6333 1F80                            l3933 15D2  
                          l3941 1620                            l3925 1510                            l3917 14C8  
                          l3909 148A                            l3861 132A                            l3853 1312  
                          l3845 12E6                            l3837 12C2                            l3669 27FC  
                          l3693 1D28                            l3685 1CDE                            l5293 1C84  
                          l5285 1C42                            l5277 1C10                            l5269 1BDE  
                          l5365 1A30                            l5357 1A04                            l5349 19D8  
                          l5381 25A4                            l3765 1BC0                            l3757 1B8C  
                          l3749 1B48                            l3597 23F2                            l3589 23EA  
                          l6325 128A                            l5701 0A90                            l6317 0926  
                          l5621 07D6                            l5613 07AE                            l5605 0738  
                          l5533 0538                            l5525 050A                            l5541 055C  
                          l5517 04D2                            l5509 04A0                            l5461 0380  
                          l5453 0378                            l5445 0362                            l5437 0358  
                          l5429 0344                            l3951 1678                            l3943 1632  
                          l3935 15F4                            l3927 15B6                            l3919 14DC  
                          l3871 137A                            l3863 1342                            l3855 1316  
                          l3847 12E6                            l3839 12C4                            l3695 1D2E  
                          l3687 1CF6                            l5295 1C94                            l5287 1C4E  
                          l5279 1C14                            l6327 1A74                            l5367 1A38  
                          l5359 1A0C                            l5375 1A5C                            l5391 25DE  
                          l5383 25B6                            l3767 1BC8                            l3759 1B9C  
                          l3599 23F4                            l6319 0FC0                            l5711 0AF0  
                          l5703 0A98                            l5623 07E8                            l5631 080A  
                          l5615 07B0                            l5607 078C                            l5551 05DC  
                          l5543 05AA                            l5535 0544                            l5527 0510  
                          l5519 04E2                            l5471 03CC                            l5463 0390  
                          l5455 037A                            l5447 0372                            l5439 035C  
                          l6329 203E                            l3961 16BA                            l3953 168A  
                          l3945 1644                            l3937 1602                            l3881 13BC  
                          l3873 137E                            l3865 1352                            l3857 131A  
                          l3849 12F8                            l3697 1D32                            l3689 1D06  
                          l5297 1C96                            l5289 1C5C                            l5369 1A3A  
                          l5385 25BE                            l5801 0DF6                            l5721 0B56  
                          l5713 0AFE                            l5705 0AC6                            l5641 0846  
                          l5633 081E                            l5625 07EC                            l5617 07B4  
                          l5609 0790                            l5561 0612                            l5553 05E0  
                          l5545 05C6                            l5537 0550                            l5529 0520  
                          l5481 03E8                            l5473 03CE                            l5465 03AA  
                          l5457 037C                            l5449 0374                            l5393 0312  
                          l3971 1712                            l3963 16CE                            l3955 1692  
                          l3947 1656                            l3939 1612                            l3891 13FE  
                          l3883 13D2                            l3875 1390                            l3867 135E  
                          l3859 1326                            l3699 1D44                            l5299 1CA0  
                          l5387 25C2                            l5803 0E0A                            l5731 0BBA  
                          l5715 0B1A                            l5723 0B6A                            l5707 0ACE  
                          l5651 08A6                            l5643 0858                            l5635 0820  
                          l5627 07EE                            l5619 07C4                            l5571 0658  
                          l5563 062E                            l5555 05E2                            l5547 05C8  
                          l5491 0426                            l5483 0402                            l5475 03D2  
                          l5467 03AE                            l5459 037E                            l5395 0314  
                          l3981 1740                            l3973 1714                            l3965 16E0  
                          l3957 169A                            l3949 1666                            l3893 140A  
                          l3885 13D8                            l3877 13A0                            l3869 1374  
                          l5389 25C4                            l5901 108C                            l5821 0E6C  
                          l5813 0E2A                            l5805 0E0E                            l5741 0BFA  
                          l5725 0B86                            l5733 0BC2                            l5717 0B30  
                          l5709 0ADC                            l5661 08DE                            l5653 08AE  
                          l5645 086A                            l5637 083E                            l5629 0808  
                          l5581 06B2                            l5573 066A                            l5565 0630  
                          l5557 05FC                            l5549 05CC                            l5493 0442  
                          l5477 03E2                            l5485 0404                            l5469 03B0  
                          l5397 0318                            l3991 1764                            l3983 1748  
                          l3975 1720                            l3967 16F0                            l3895 1420  
                          l3887 13DC                            l3879 13B0                            l3959 16A8  
                          l5911 10BA                            l5903 10AA                            l5831 0EA6  
                          l5815 0E3C                            l5823 0E74                            l5807 0E12  
                          l5743 0C0C                            l5735 0BD0                            l5727 0B92  
                          l5719 0B4A                            l5751 0C4E                            l5663 08EA  
                          l5655 08B0                            l5647 087E                            l5639 0840  
                          l5591 06EC                            l5583 06BE                            l5575 067C  
                          l5567 0634                            l5559 05FE                            l5495 044A  
                          l5487 041C                            l5479 03E6                            l5399 031E  
                          l3993 1774                            l3985 1750                            l3977 1722  
                          l3969 1702                            l3897 1432                            l3889 13EE  
                          l5921 1108                            l5913 10D4                            l5905 10AE  
                          l5841 0EF0                            l5833 0EB6                            l5825 0E86  
                          l5817 0E4C                            l5809 0E16                            l5761 0CAE  
                          l5753 0C5C                            l5737 0BDE                            l5745 0C14  
                          l5729 0BA2                            l5681 0990                            l5665 08F6  
                          l5657 08CC                            l5649 0892                            l5673 090E  
                          l5593 06FC                            l5585 06C0                            l5577 068E  
                          l5569 0646                            l5497 0460                            l5489 0424  
                          l3995 1776                            l3987 1756                            l3979 1738  
                          l3899 1438                            l5931 1128                            l5915 10DC  
                          l5907 10B2                            l5843 0EFA                            l5835 0EC6  
                          l5827 0E96                            l5819 0E54                            l5771 0D10  
                          l5763 0CC8                            l5755 0C6E                            l5747 0C22  
                          l5739 0BE6                            l5691 0A3A                            l5683 09A0  
                          l5667 0902                            l5659 08D2                            l5675 0954  
                          l5595 0708                            l5587 06DA                            l5579 06A0  
                          l5499 0476                            l3997 1782                            l3989 175E  
                          l5941 115C                            l5933 112C                            l5909 10B6  
                          l5925 1110                            l5861 0F54                            l5837 0ECA  
                          l5829 0E9E                            l5853 0F30                            l5781 0D5C  
                          l5773 0D20                            l5765 0CD4                            l5757 0C7C  
                          l5749 0C46                            l5693 0A4A                            l5685 09BC  
                          l5677 0962                            l5597 0714                            l5589 06E0  
                          l3999 1784                            l5951 11D2                            l5943 1168  
                          l5935 1134                            l5919 10F6                            l5871 0F88  
                          l5863 0F58                            l5855 0F38                            l5847 0F14  
                          l5839 0EDA                            l5791 0DA0                            l5783 0D64  
                          l5775 0D38                            l5759 0C98                            l5767 0CE8  
                          l5695 0A62                            l5687 0A00                            l5679 0972  
                          l5599 0720                            l5961 11F0                            l5953 11D4  
                          l5937 1140                            l5929 1118                            l5881 0FF8  
                          l5873 0F94                            l5865 0F60                            l5857 0F3C  
                          l5849 0F26                            l5785 0D78                            l5769 0D04  
                          l5777 0D40                            l5793 0DC4                            l5697 0A6E  
                          l5689 0A1E                            l5963 11F6                            l5939 1150  
                          l5947 1174                            l5955 11D8                            l5891 102C  
                          l5883 1012                            l5875 0FA0                            l5867 0F70  
                          l5859 0F44                            l5787 0D8A                            l5779 0D4E  
                          l5795 0DCC                            l5699 0A7E                            l5965 11F8  
                          l5957 11E8                            l5949 11B8                            l5893 103C  
                          l5885 1014                            l5869 0F7C                            l5973 1218  
                          l5797 0DD4                            l5789 0D92                            l5967 1212  
                          l5959 11EC                            l5895 1040                            l5879 0FAC  
                          l5975 125C                            l5799 0DE4                            l5897 1058  
                          l5889 101C                            l5977 126C                            l5899 1070  
                          l5979 1274                            u2000 20AA                            u2001 20A6  
                          u2010 20C4                            u2011 20C0                            u2020 20EA  
                          u2100 21D6                            u2021 20E6                            u2101 21D2  
                          u2030 2108                            u2110 21FA                            u2031 2104  
                          u2111 21F6                            u2040 2124                            u2120 2282  
                          u2200 1D28                            u2041 2120                            u2121 227E  
                          u2201 1D24                            u2050 214A                            u2130 2292  
                          u2210 1D44                            u2051 2146                            u2131 228E  
                          u2211 1D40                            u2140 2608                            u2060 216E  
                          u2220 1D86                            u2300 1B68                            u2141 2604  
                          u2061 216A                            u2221 1D82                            u2301 1B64  
                          u2150 27DA                            u2070 2188                            u2230 1DA2  
                          u2310 1B7C                            u2151 27D6                            u2071 2184  
                          u2231 1D9E                            u2311 1B78                            u2160 2552  
                          u2080 21A2                            u2400 13EE                            u2320 1B9C  
                          u2240 1ACE                            u4000 0AB4                            u2161 254E  
                          u2081 219E                            u2401 13EA                            u2321 1B98  
                          u2241 1ACA                            u4001 0AB0                            u2090 21C0  
                          u2410 1420                            u2330 1BAE                            u2250 1AE0  
                          u4010 0AC2                            u2091 21BC                            u2411 141C  
                          u2331 1BAA                            u2251 1ADC                            u4011 0ABE  
                          u2500 1500                            u2420 1432                            u2260 1B00  
                          u2180 242E                            u4100 0C22                            u4020 0ADC  
                          u2501 14FC                            u2421 142E                            u2261 1AFC  
                          u2181 242A                            u4101 0C1E                            u4021 0AD8  
                          u2510 15C6                            u2430 1458                            u2350 12B4  
                          u2270 1B14                            u4110 0C3E                            u4030 0AF0  
                          u2511 15C2                            u2431 1454                            u2351 12B0  
                          u2271 1B10                            u4111 0C3A                            u4031 0AEC  
                          u2600 16CC                            u2520 15EC                            u2440 146A  
                          u2360 12F8                            u2280 1B34                            u4200 0DA0  
                          u4120 0C5C                            u4040 0AFE                            u2601 16C8  
                          u2521 15E6                            u2441 1466                            u2361 12F4  
                          u2281 1B30                            u4201 0D9C                            u4121 0C58  
                          u4041 0AFA                            u2610 16E0                            u2530 15EE  
                          u2450 147C                            u2370 1374                            u2290 1B48  
                          u4210 0DBC                            u4130 0C6E                            u4050 0B1A  
                          u2611 16DC                            u2451 1478                            u2371 1370  
                          u2195 22D8                            u2291 1B44                            u4211 0DB8  
                          u4131 0C6A                            u4051 0B16                            u1900 2376  
                          u2700 18B8                            u2620 16F0                            u2540 1632  
                          u2460 14B6                            u2380 1390                            u4300 0F54  
                          u4220 0DF6                            u4140 0C7C                            u4060 0B30  
                          u1901 2372                            u2701 18B4                            u2621 16EC  
                          u2541 162E                            u2461 14B2                            u2381 138C  
                          u4301 0F50                            u4221 0DF2                            u4141 0C78  
                          u4061 0B2C                            u1910 2394                            u2710 1900  
                          u2630 1702                            u2550 1644                            u2470 14C8  
                          u2390 13D2                            u4310 102C                            u4230 0E26  
                          u4150 0C98                            u4070 0B86                            u1911 2390  
                          u2711 18FC                            u2631 16FE                            u2551 1640  
                          u2471 14C4                            u2391 13CE                            u4311 1028  
                          u4231 0E22                            u4151 0C94                            u4071 0B82  
                          u1920 23AC                            u2720 1914                            u2640 1712  
                          u2560 1656                            u2480 14DA                            u4320 103C  
                          u4240 0E3C                            u4160 0CAE                            u4080 0BD0  
                          u1921 23A8                            u2721 1910                            u2641 170E  
                          u2561 1652                            u2481 14D6                            u4321 1038  
                          u4241 0E38                            u4161 0CAA                            u4081 0BCC  
                          u1930 23BE                            u2730 1928                            u2650 1774  
                          u2570 1678                            u2490 14EE                            u4330 10F2  
                          u4250 0E4C                            u4170 0D04                            u4090 0BDE  
                          _PEN2 007B5A                            u1931 23BA                            u2731 1924  
                          u2651 1770                            u2571 1674                            u2491 14EA  
                          u4331 10EE                            u4251 0E48                            u4171 0D00  
                          u4091 0BDA                            u1860 2832                            u2740 1938  
                          u2660 180E                            u2580 168A                            u3700 1C3A  
                          u4340 1128                            u4260 0E86                            u4180 0D4E  
                          u1861 282E                            u2741 1934                            u2661 180A  
                          u2581 1686                            u3701 1C36                            u4341 1124  
                          u4261 0E82                            u4181 0D4A                            u1870 2692  
                          u2750 1948                            u2670 182A                            u2590 16BA  
                          u3710 1C5C                            u4350 11E8                            u4270 0E96  
                          u4190 0D5C                            u1871 268E                            u2751 1944  
                          u2671 1826                            u2591 16B6                            u3711 1C58  
                          u4351 11E4                            u4271 0E92                            u4191 0D58  
                          u4407 0B3C                            u1880 2758                            u2680 186C  
                          u3720 1C84                            u2760 2658                            u4280 0EDA  
                          u3800 04E2                            u1881 2754                            u2681 1868  
                          u3721 1C80                            u2761 2654                            u4281 0ED6  
                          u4417 0BAE                            u3801 04DE                            u2690 1888  
                          u3730 1CB6                            u4290 0F10                            u3810 05DC  
                          u2691 1884                            u4507 12CE                            u3731 1CB2  
                          u4291 0F0C                            u4427 0C02                            u3811 05D8  
                          u3660 2796                            u3740 26B8                            u3900 07D6  
                          u3820 0646                            u4517 1334                            u3661 2792  
                          u3741 26B4                            u4437 0CBA                            u3901 07D2  
                          u3821 0642                            u1894 235A                            u3670 27A4  
                          u3750 25B6                            u3910 07E8                            u3830 0658  
                          u1895 2356                            u4607 15A8                            u4527 1396  
                          u3671 27A0                            u3751 25B2                            u4447 0D2C  
                          u3911 07E4                            u3831 0654                            u4367 039C  
                          u3680 1BDE                            u3920 0858                            u3840 066A  
                          u3760 03E2                            u4617 15FA                            u4537 1496  
                          u3681 1BDA                            u4457 0D80                            u4377 0A0C  
                          u3921 0854                            u3841 0666                            u3761 03DE  
                          u3690 1C00                            u3930 086A                            u3850 067C  
                          u3770 0460                            u4707 2738                            u4627 1618  
                          u4547 151A                            u3691 1BFC                            u4467 10C6  
                          u4387 0A56                            u3931 0866                            u3851 0678  
                          u3771 045C                            u3940 087E                            u3860 068E  
                          u3780 0476                            u4637 16A0                            u4557 1530  
                          u4477 1CE8                            u4397 0A86                            u3941 087A  
                          u3861 068A                            u3781 0472                            u3950 0892  
                          u3870 06A0                            u3790 04D2                            u4647 172C  
                          u4567 1548                            u4487 1D4A                            u3951 088E  
                          u3871 069C                            u3791 04CE                            u3960 08A6  
                          u3880 06B2                            u4657 178E                            u4577 1560  
                          u4497 1DCC                            u3961 08A2                            u3881 06AE  
                          u3970 0990                            u3890 07C4                            _SEN2 007B58  
                          u4667 17CE                            u4587 1578                            u3971 098C  
                          u3891 07C0                            u3980 09BC                            u4677 1830  
                          u4597 1590                            u3981 09B8                            u3990 0A3A  
                          u4687 18D2                            u3991 0A36                            u4697 1962  
                          _TMR1 000FCE                            _Busy 002F                            _Stop 0031  
                          _data 002D  __end_of_AD_capture_BattVoltage 2620                            _main 0312  
                          _init 23C0                            _temp 0090                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
            _MotorPosition_Init 1CD8                            btemp 0057                            start 030E  
               __end_of_Get7Seg 2098                 __end_of_Clr_RG3 28B4     __end_of_Homing_Again_Manual 1756  
                  ___param_bank 000000                    high_isr@Temp 0039             ?_MotorPosition_Init 0034  
               __end_of_Read_IR 27F0                 __end_of_Set_RG3 28AC                  ??_InitSTLED316 0042  
               __end_of_MotorON 2882                    _BAUDCON1bits 000F7E                 __end_of___aldiv 1CD8  
                         ?_main 0034                           ?_init 0034                 __end_of___awdiv 215C  
                         _ADRES 000FC3                 __end_of___awmod 220C                 ___awdiv@divisor 003E  
                         _T1CON 000FCD                           _T4CON 000F76                           _RCEN2 007B5B  
                         i2l332 01BA                           i2l366 0302                           i2l481 26FE  
                         i2l670 27C4                           i2l672 27CA                           i2l664 283A  
                         i2l667 2848                 ___awdiv@counter 0040                           _RSEN2 007B59  
                         _ETemp 0023                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TRISF 000F97                           _TRISG 000F98             __end_of_i2c_Address 285E  
          ??_MotorPosition_Init 0045                           _flush 2620                      _Read1USART 27A6  
              _TMR1IF_triggered 0027                           tablat 000FF5        ??_STLED316s_SPI_SendData 003C  
               __end_of_pwm_set 272E             __end_of_i2c_Restart 2894                           ttemp5 0058  
                         ttemp6 005B                           ttemp7 005F                           status 000FD8  
                         wtemp8 0058                   _PWM_Selection 197C                PWM_Selection@msg 009A  
                 i2_Write1USART 2834           _WriteSTLED316SVibMode 1AAC                 __initialization 249A  
                 _holdTimeRight 0007                      _InitTimer1 27F0                    __end_of_main 12A4  
                  __end_of_init 2432                __end_of_i2c_Init 281E                __end_of_i2c_Read 26CA  
              __end_of_i2c_Wait 27A6                __end_of_i2c_Stop 289C                          ??_main 00A0  
                        ??_init 003C                   __activetblptr 000002                          _ACKEN2 007B5C  
                        _ACKDT2 007B5D                          ?_flush 0034                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR1L 000FBC                ___awdiv@dividend 003C  
                     ??_Get7Seg 003E                          i2l4101 26CA                          i2l4103 26E0  
                        i2l4105 26E6                          i2l4107 26FC                          i2l4109 2836  
                        i2l4093 27A6                          i2l4095 27B4                          i2l4097 27C8  
                        i2l4803 0130                          i2l4811 015C                          i2l4821 0174  
                        i2l4805 0136                          i2l4823 0184                          i2l4807 0138  
                        i2l4841 0210                          i2l4833 01C8                          i2l4825 0198  
                        i2l4817 016C                          i2l4809 0148                          i2l4761 0038  
                        i2l4851 0268                          i2l4843 0220                          i2l4827 01AA  
                        i2l4819 0172                          i2l4835 01CE                          i2l4763 0048  
                        i2l4771 007C                          i2l4755 0012                          i2l4861 0296  
                        i2l4845 0240                          i2l4837 01DE                          i2l4853 026C  
                        i2l4781 00DE                          i2l4829 01B2                          i2l4773 008C  
                        i2l4765 0058                          i2l4757 0020                          i2l4871 02EA  
                        i2l4863 02AC                          i2l4855 027A                          i2l4847 0254  
                        i2l4839 01FC                          i2l4791 0104                          i2l4783 00EE  
                        i2l4775 009C                          i2l4767 0064                          i2l4759 0026  
                        i2l4873 02F8                          i2l4865 02BE                          i2l4857 0282  
                        i2l4849 0264                          i2l4793 0116                          i2l4785 0100  
                        i2l4777 00B2                          i2l4769 0074                          i2l4875 0300  
                        i2l4867 02CC                          i2l4859 0288                          i2l4795 0118  
                        i2l4779 00C4                          i2l4869 02D8                          i2l4797 012C  
                        _RCREG1 000FAF                       ??_Clr_RG3 003C                          _SPBRG1 000FB0  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                  ?_PWM_Selection 009A  
                        _TRISD5 007CAD                          _TRISD6 007CAE                  ?i2_Write1USART 0034  
                        _TXREG1 000FAE                      _MotorBREAK 2882                       ??_Read_IR 003E  
                     ??_Set_RG3 003C                 read_i2c@address 004A                          _OpMode 002C  
                     ??_MotorON 003C                __end_of_high_isr 030E                       ??___aldiv 0044  
                     ??___awdiv 0040                       ??___awmod 0040                  _PWM_Duty_Cycle 0028  
              __end_of_flushOut 2694                __end_of_read_i2c 249A                     _i2c_Address 284A  
                        clear_0 24E0                          clear_1 24EC                ___awdiv@quotient 0042  
               ___awmod@divisor 003E                          isa$std 000001                 ___awmod@counter 0040  
              Read1USART@result 0034      __end_of_WriteSTLED316SData 22B4      __end_of_WriteSTLED316SMode 1EE4  
                        flush@i 003C                   i2c_Write@data 003D                    __pdataCOMRAM 0050  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   _i2c_Restart 288C                       ??_pwm_set 003E                     ?_Read1USART 0034  
          __end_of_InitSTLED316 2340                      __accesstop 0060                      _i_RUN_ZERO 0017  
       __end_of__initialization 24F2             _Low_Power_Indicator 26CA               _WriteSTLED316SErr 1EE4  
                 ___rparam_used 000001          ?_WriteSTLED316SVibMode 0042              ?_WriteSTLED316SErr 0034  
                __pcstackCOMRAM 0034                     ?_InitTimer1 0034                    __pidataBANK0 28BB  
                 __end_of_flush 265A               __end_of_i2c_Start 28A4             ??_WriteSTLED316SErr 0042  
             __end_of_i2c_Write 2878            ?_Low_Power_Indicator 0034                         ??_flush 003C  
                     ?_i2c_Init 0034                       ?_i2c_Read 003D                 ??_PWM_Selection 009C  
                    __pbssBANK0 0060                       ?_i2c_Wait 0034                 ??i2_Write1USART 0034  
                     ?_i2c_Stop 0034       __end_of_WriteSTLED316SErr 1FCC                   ??_Write1USART 003C  
                   ?_MotorBREAK 0034                   _dutyCycle_reg 000D                         _CCP4CON 000F73  
         ??_Low_Power_Indicator 0034          _STLED316s_SPI_SendData 2340                _readWeighingData 2500  
            i2c_Address@address 003E                         _SPBRGH1 000F7F     WriteSTLED316SVibMode@dc_reg 0042  
                       _SSP2ADD 000F6E                         _SSP2BUF 000F6F                         _NUM_REC 0015  
                       _VOLTAGE 000F                       ?_high_isr 0034                      ??_i2c_Init 003C  
                    ??_i2c_Read 003F                         _PWM_reg 0056                      ??_i2c_Wait 003C  
                       _Get7Seg 1FCC     WriteSTLED316SVibMode@v_mode 0044                      ??_i2c_Stop 003D  
                       _Clr_RG3 28AC               __end_of_delay_1ms 275A               i2Write1USART@data 0034  
                     ?_flushOut 0034                       ?_read_i2c 004A                     _Serial_Flag 0033  
                       _Read_IR 27CC           WriteSTLED316SMode@msg 0044                         _Set_RG3 28A4  
                       __Hparam 0000                         __Lparam 0000                         _MotorON 2878  
           __end_of_Write1USART 2834      WriteSTLED316SData@NUM_DIG0 0047      WriteSTLED316SData@NUM_DIG1 0049  
                       ___aldiv 1BCC                     _Motor_Speed 0021                         ___awdiv 2098  
                       ___awmod 215C                    Get7Seg@Digit 003C                         __pcinit 249A  
                       __ramtop 1000               __end_of_initUSART 2780                         __ptext0 0312  
                       __ptext1 2432                         __ptext2 288C                         __ptext3 2694  
                       __ptext4 2700                         __ptext5 275A                         __ptext6 285E  
                       __ptext7 23C0                         __ptext8 2808                         __ptext9 2620  
             __end_of_initMotor 286C                       _T2CONbits 000FCA                       _T3CONbits 000F79  
              ___awmod@dividend 003C                      _duty_cycle 000B                ___aldiv@dividend 003C  
                     _T4CONbits 000F76                   delay_1ms@time 003C                         _pwm_set 2700  
                    _pause_Time 002B                       _EAdd_High 0098                      ??_high_isr 0035  
          end_of_initialization 24F2            i2c_Address@l_address 003F                      ??_flushOut 003C  
                    ??_read_i2c 004E                   __Lmediumconst 0000         WriteSTLED316SData@data3 004B  
       WriteSTLED316SData@data4 004C                ___aldiv@quotient 0046                         postdec1 000FE5  
                       postinc0 000FEE                    ?_i2c_Address 003D                    _InitSTLED316 22B4  
                     _PORTAbits 000F80                       _PORTBbits 000F81               __end_of_write_i2c 25A4  
                     _TRISBbits 000F93                       _TRISCbits 000F94                    ?_i2c_Restart 0034  
      ??_AD_capture_BattVoltage 003F                    ??_Read1USART 0034              _WriteSTLED316SData 220C  
       ??_WriteSTLED316SVibMode 0045              _WriteSTLED316SMode 1DE4                     _Write1USART 281E  
                   _CCP1CONbits 000FBB             ?_WriteSTLED316SData 0044             ?_WriteSTLED316SMode 0034  
                  ??_InitTimer1 003C                  _ToggleVIB_Mode 25A4                       _Device_ID 001D  
                   _Vmotor_Time 0054                   __pidataCOMRAM 28B4              __end_of_Read1USART 27CC  
                 _Serial_Buffer 0080                       _i2c_Start 289C                       _i2c_Write 286C  
          ??_WriteSTLED316SData 0047             start_initialization 249A            ??_WriteSTLED316SMode 0042  
                  _holdTimeLeft 0005                    _holdTimeMode 0003              __end_of_InitTimer1 2808  
               _LowPowerCounter 00A2        __end_of_readWeighingData 255A                     pwm_set@duty 003C  
                  ??_MotorBREAK 003C          __end_of_ToggleVIB_Mode 25E2         ?_STLED316s_SPI_SendData 0034  
                   __pdataBANK0 00A2                      ?_i2c_Start 0034                      ?_i2c_Write 0034  
                   __pbssCOMRAM 0001              __end_of_MotorBREAK 288C                   __pcstackBANK0 009A  
                      ?_Get7Seg 003C             _Homing_Again_Manual 12A4                        ?_Clr_RG3 0034  
         __end_of_PWM_Selection 1AAC           __end_ofi2_Write1USART 284A                        ?_Read_IR 003C  
                     _delay_1ms 272E               _Homing_Again_Auto 1756                        ?_Set_RG3 0034  
               ?_ToggleVIB_Mode 0034                        ?_MotorON 0034  __end_of_STLED316s_SPI_SendData 23C0  
       PWM_Selection@dcSelected 009E     __end_of_Low_Power_Indicator 2700              ?_Homing_Again_Auto 0034  
                     __pintcode 0008                        ?___aldiv 003C                        ?___awdiv 003C  
                      ?___awmod 003C            ?_Homing_Again_Manual 0034                    _errorcounter 0050  
           ??_Homing_Again_Auto 0045            WriteSTLED316SErr@msg 0044                       _initUSART 275A  
                     _initMotor 285E                     Get7Seg@Data 0040                        ?_pwm_set 003C  
               Write1USART@data 003C                 ___aldiv@divisor 0040                 ___aldiv@counter 0044  
     __end_of_Homing_Again_Auto 197C                        _LATAbits 000F89                        _EAdd_Low 0096  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATGbits 000F8F  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                      ?_delay_1ms 003C  
             readWeighingData@i 003E                        i2u341_40 0020                        i2u341_41 001C  
                      i2u350_40 0100                        i2u342_40 0038                        i2u350_41 00FC  
                      i2u342_41 0034                        i2u351_40 0128                        i2u343_40 0048  
                      i2u351_41 0124                        i2u343_41 0044                        i2u280_40 2848  
                      i2u360_40 027A                        i2u352_40 0148                        i2u344_40 0058  
                      i2u280_41 2844                        i2u360_41 0276                        i2u352_41 0144  
                      i2u344_41 0054                        i2u361_40 0296                        i2u353_40 0184  
                      i2u345_40 008C                        i2u361_41 0292                        i2u353_41 0180  
                      i2u345_41 0088                        _PIR1bits 000F9E                        i2u362_40 02BE  
                      i2u354_40 0198                        i2u346_40 00B2                        i2u362_41 02BA  
                      i2u354_41 0194                        i2u346_41 00AE                        i2u363_40 02CC  
                      i2u355_40 01AA                        i2u347_40 00C4                        i2u363_41 02C8  
                      i2u355_41 01A6                        i2u347_41 00C0                        i2u364_40 02EA  
                      i2u356_40 01C8                        i2u348_40 00DE                        i2u364_41 02E6  
                      i2u356_41 01C4                        i2u348_41 00DA                        i2u277_40 27B4  
                      i2u365_40 02F8                        i2u357_40 01DE                        i2u349_40 00EE  
                      i2u277_41 27B0                        i2u365_41 02F4                        i2u357_41 01DA  
                      i2u349_41 00EA                        i2u278_40 26E0                        i2u358_40 01FC  
                      i2u278_41 26DC                        i2u358_41 01F8                        i2u279_40 26FC  
                      i2u359_40 0240                        i2u279_41 26F8                        i2u359_41 023C  
                      i2u471_47 02A0                        _RCONbits 000FD0          _AD_capture_BattVoltage 25E2  
                      _SSP2CON1 000F6C                        _SSP2CON2 000F6B                        _SSP2STAT 000F6D  
         ??_Homing_Again_Manual 004D                       _pwm_count 0094                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                       high_isr@c 003A                       high_isr@i 003B  
                   ??_i2c_Start 003D                     ??_i2c_Write 003D      __end_of_MotorPosition_Init 1DE4  
                    ?_initUSART 0034           _delay_motor_stop_time 0029                      ?_initMotor 0034  
                  _Serial_GData 0032                       _write_i2c 255A                     _INTCON3bits 000FF0  
                     copy_data0 24AE                       copy_data1 24CE          InitSTLED316@Brightness 0044  
                  _Serial_Count 0025                        _i2c_Init 2808                        _i2c_Read 2694  
                      _i2c_Wait 2780                        _i2c_Stop 2894                    ?_Write1USART 0034  
 __end_of_WriteSTLED316SVibMode 1BCC                       flushOut@i 003C                      _ANCON0bits 000FC1  
                      __Hrparam 0000                        __Lrparam 0000                  _vibration_mode 002E  
                      __ptext10 1AAC                        __ptext11 25A4                        __ptext20 1CD8  
                      __ptext12 197C                        __ptext21 27F0                        __ptext13 255A  
                      __ptext30 265A                        __ptext22 22B4                        __ptext14 286C  
                      __ptext31 281E                        __ptext23 12A4                        __ptext15 2894  
                      __ptext40 25E2                        __ptext32 1DE4                        __ptext24 220C  
                      __ptext16 289C                        __ptext41 272E                        __ptext33 1EE4  
                      __ptext25 215C                        __ptext17 284A                        __ptext34 2340  
                      __ptext26 2098                        __ptext18 2780                        __ptext43 2834  
                      __ptext35 27CC                        __ptext27 1FCC                        __ptext19 1BCC  
                      __ptext44 27A6                        __ptext36 2878                        __ptext28 1756  
                      __ptext45 26CA                        __ptext37 28A4                        __ptext29 2500  
                      __ptext38 2882                        __ptext39 28AC                      ?_write_i2c 004A  
              write_i2c@address 004A                        _high_isr 0008                        _dispense 0009  
             read_i2c@read_byte 004E                        _flushOut 265A                        _read_i2c 2432  
             ?_readWeighingData 0034                     ??_delay_1ms 003E              ??_readWeighingData 003E  
                      _vib_Time 002A           _Motor_Stop_Delay_Time 001F                        isa$xinst 000000  
                      int$flags 0057                        _pwm_mode 0092               _Serial_Buffer_Out 0060  
    STLED316s_SPI_SendData@Data 003E                      _INTCONbits 000FF2                     ??_initUSART 003C  
    STLED316s_SPI_SendData@temp 003F                     ??_initMotor 003C                        intlevel2 0000  
                  _motor_status 0030                ??_ToggleVIB_Mode 0050                 i2c_Address@mode 003D  
                    _RCSTA1bits 000FAC                      _OSCCONbits 000FD3        WriteSTLED316SData@v_mode 0046  
      WriteSTLED316SData@number 0044                      _IR_SENSORF 0011                _Motor_Pause_Time 001B  
            _Serial_Temp_Buffer 0070         STLED316s_SPI_SendData@i 0040         STLED316s_SPI_SendData@t 0041  
                  ___aldiv@sign 0045                      _WDTCONbits 000FC0                     ??_write_i2c 0050  
           i2c_Read@i2cReadData 0040                   write_i2c@data 004E                     _test_redled 0001  
       ?_AD_capture_BattVoltage 0034  
