

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 11 15:55:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F65J50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   002224                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _LowPowerCounter
   101   002224  0014               	dw	20
   102   002226  0000               	dw	0
   103                           
   104                           ;initializer for _errorcounter
   105   002228  001E               	dw	30
   106   00222A  0000               	dw	0
   107                           
   108                           ;initializer for _Vmotor_Time
   109   00222C  07D0               	dw	2000
   110                           
   111                           ;initializer for _PWM_reg
   112   00222E  3F                 	db	63
   113   000000                     _TRISB	set	3987
   114   000000                     _RCREG1	set	4015
   115   000000                     _TXREG1	set	4014
   116   000000                     _SPBRGH1	set	3967
   117   000000                     _SPBRG1	set	4016
   118   000000                     _TXSTA1bits	set	4013
   119   000000                     _SSP2STAT	set	3949
   120   000000                     _SSP2ADD	set	3950
   121   000000                     _ADRESL	set	4035
   122   000000                     _ADRESH	set	4036
   123   000000                     _ADRES	set	4035
   124   000000                     _T4CONbits	set	3958
   125   000000                     _ANCON0bits	set	4033
   126   000000                     _TRISD	set	3989
   127   000000                     _TRISC	set	3988
   128   000000                     _PIE1bits	set	3997
   129   000000                     _INTCONbits	set	4082
   130   000000                     _ACKEN2	set	31580
   131   000000                     _ACKDT2	set	31581
   132   000000                     _RCEN2	set	31579
   133   000000                     _PEN2	set	31578
   134   000000                     _RSEN2	set	31577
   135   000000                     _SEN2	set	31576
   136   000000                     _TRISD6	set	31918
   137   000000                     _TMR1IF	set	31984
   138   000000                     _SSP2CON2	set	3947
   139   000000                     _SSP2CON1	set	3948
   140   000000                     _PORTAbits	set	3968
   141   000000                     _PORTBbits	set	3969
   142   000000                     _LATAbits	set	3977
   143   000000                     _LATCbits	set	3979
   144   000000                     _CCP2CONbits	set	4022
   145   000000                     _TMR1	set	4046
   146   000000                     _WDTCONbits	set	4032
   147   000000                     _ADCON1bits	set	4033
   148   000000                     _ADCON0bits	set	4034
   149   000000                     _T1CON	set	4045
   150   000000                     _RCONbits	set	4048
   151   000000                     _CCPR2L	set	4023
   152   000000                     _GIE	set	32663
   153   000000                     _LATGbits	set	3983
   154   000000                     _TRISA	set	3986
   155   000000                     _TRISCbits	set	3988
   156   000000                     _PIR1bits	set	3998
   157   000000                     _LATDbits	set	3980
   158   000000                     _IPR1bits	set	3999
   159   000000                     _TRISD5	set	31917
   160   000000                     _TMR1IE	set	31976
   161   000000                     _OSCCONbits	set	4051
   162   000000                     _INTCON3bits	set	4080
   163   000000                     _RCSTA1bits	set	4012
   164   000000                     _TRISG	set	3992
   165   000000                     _TRISF	set	3991
   166   000000                     _TRISE	set	3990
   167   000000                     _CCP4CON	set	3955
   168   000000                     _T4CON	set	3958
   169   000000                     _PR4	set	3959
   170   000000                     _BAUDCON1bits	set	3966
   171   000000                     _SSP2BUF	set	3951
   172   000000                     _T3CONbits	set	3961
   173                           
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   001F3A                     __pcinit:
   178                           	callstack 0
   179   001F3A                     start_initialization:
   180                           	callstack 0
   181   001F3A                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Initialize objects allocated to COMRAM (11 bytes)
   185                           ; load TBLPTR registers with __pidataCOMRAM
   186   001F3A  0E24               	movlw	low __pidataCOMRAM
   187   001F3C  6EF6               	movwf	tblptrl,c
   188   001F3E  0E22               	movlw	high __pidataCOMRAM
   189   001F40  6EF7               	movwf	tblptrh,c
   190   001F42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   191   001F44  6EF8               	movwf	tblptru,c
   192   001F46  EE00  F04E         	lfsr	0,__pdataCOMRAM
   193   001F4A  EE10 F00B          	lfsr	1,11
   194   001F4E                     copy_data0:
   195   001F4E  0009               	tblrd		*+
   196   001F50  CFF5 FFEE          	movff	tablat,postinc0
   197   001F54  50E5               	movf	postdec1,w,c
   198   001F56  50E1               	movf	fsr1l,w,c
   199   001F58  E1FA               	bnz	copy_data0
   200                           
   201                           ; Clear objects allocated to BANK0 (48 bytes)
   202   001F5A  EE00  F060         	lfsr	0,__pbssBANK0
   203   001F5E  0E30               	movlw	48
   204   001F60                     clear_0:
   205   001F60  6AEE               	clrf	postinc0,c
   206   001F62  06E8               	decf	wreg,f,c
   207   001F64  E1FD               	bnz	clear_0
   208                           
   209                           ; Clear objects allocated to COMRAM (49 bytes)
   210   001F66  EE00  F001         	lfsr	0,__pbssCOMRAM
   211   001F6A  0E31               	movlw	49
   212   001F6C                     clear_1:
   213   001F6C  6AEE               	clrf	postinc0,c
   214   001F6E  06E8               	decf	wreg,f,c
   215   001F70  E1FD               	bnz	clear_1
   216   001F72                     end_of_initialization:
   217                           	callstack 0
   218   001F72                     __end_of__initialization:
   219                           	callstack 0
   220   001F72  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   221   001F74  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   222   001F76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223   001F78  6EF8               	movwf	tblptru,c
   224   001F7A  0100               	movlb	0
   225   001F7C  EF83  F001         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	bssCOMRAM
   228   000001                     __pbssCOMRAM:
   229                           	callstack 0
   230   000001                     _temp:
   231                           	callstack 0
   232   000001                     	ds	2
   233   000003                     _dispense:
   234                           	callstack 0
   235   000003                     	ds	2
   236   000005                     _pwm_mode:
   237                           	callstack 0
   238   000005                     	ds	2
   239   000007                     _pwm_count:
   240                           	callstack 0
   241   000007                     	ds	2
   242   000009                     _VOLTAGE:
   243                           	callstack 0
   244   000009                     	ds	2
   245   00000B                     _IR_SENSORF:
   246                           	callstack 0
   247   00000B                     	ds	2
   248   00000D                     _i:
   249                           	callstack 0
   250   00000D                     	ds	2
   251   00000F                     _NUM_REC:
   252                           	callstack 0
   253   00000F                     	ds	2
   254   000011                     _i_RUN_ZERO:
   255                           	callstack 0
   256   000011                     	ds	2
   257   000013                     _NUM:
   258                           	callstack 0
   259   000013                     	ds	2
   260   000015                     _Motor_Pause_Time:
   261                           	callstack 0
   262   000015                     	ds	2
   263   000017                     _Device_ID:
   264                           	callstack 0
   265   000017                     	ds	2
   266   000019                     _Motor_Stop_Delay_Time:
   267                           	callstack 0
   268   000019                     	ds	2
   269   00001B                     _Motor_Speed:
   270                           	callstack 0
   271   00001B                     	ds	2
   272   00001D                     _ETemp:
   273                           	callstack 0
   274   00001D                     	ds	2
   275   00001F                     _EAdd_Low:
   276                           	callstack 0
   277   00001F                     	ds	2
   278   000021                     _EAdd_High:
   279                           	callstack 0
   280   000021                     	ds	2
   281   000023                     _Serial_Count:
   282                           	callstack 0
   283   000023                     	ds	2
   284   000025                     _TMR1IF_triggered:
   285                           	callstack 0
   286   000025                     	ds	1
   287   000026                     _PWM_Duty_Cycle:
   288                           	callstack 0
   289   000026                     	ds	1
   290   000027                     _delay_motor_stop_time:
   291                           	callstack 0
   292   000027                     	ds	1
   293   000028                     _vib_Time:
   294                           	callstack 0
   295   000028                     	ds	1
   296   000029                     _pause_Time:
   297                           	callstack 0
   298   000029                     	ds	1
   299   00002A                     _OpMode:
   300                           	callstack 0
   301   00002A                     	ds	1
   302   00002B                     _data:
   303                           	callstack 0
   304   00002B                     	ds	1
   305   00002C                     _vibration_mode:
   306                           	callstack 0
   307   00002C                     	ds	1
   308   00002D                     _Busy:
   309                           	callstack 0
   310   00002D                     	ds	1
   311   00002E                     _motor_status:
   312                           	callstack 0
   313   00002E                     	ds	1
   314   00002F                     _Stop:
   315                           	callstack 0
   316   00002F                     	ds	1
   317   000030                     _Serial_GData:
   318                           	callstack 0
   319   000030                     	ds	1
   320   000031                     _Serial_Flag:
   321                           	callstack 0
   322   000031                     	ds	1
   323                           
   324                           	psect	dataCOMRAM
   325   00004E                     __pdataCOMRAM:
   326                           	callstack 0
   327   00004E                     _LowPowerCounter:
   328                           	callstack 0
   329   00004E                     	ds	4
   330   000052                     _errorcounter:
   331                           	callstack 0
   332   000052                     	ds	4
   333   000056                     _Vmotor_Time:
   334                           	callstack 0
   335   000056                     	ds	2
   336   000058                     _PWM_reg:
   337                           	callstack 0
   338   000058                     	ds	1
   339                           
   340                           	psect	bssBANK0
   341   000060                     __pbssBANK0:
   342                           	callstack 0
   343   000060                     _Serial_Buffer_Out:
   344                           	callstack 0
   345   000060                     	ds	16
   346   000070                     _Serial_Temp_Buffer:
   347                           	callstack 0
   348   000070                     	ds	16
   349   000080                     _Serial_Buffer:
   350                           	callstack 0
   351   000080                     	ds	16
   352                           
   353                           	psect	cstackCOMRAM
   354   000032                     __pcstackCOMRAM:
   355                           	callstack 0
   356   000032                     Read1USART@result:
   357                           	callstack 0
   358   000032                     i2Write1USART@data:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x0
   362   000032                     	ds	1
   363   000033                     ??_high_isr:
   364                           
   365                           ; 1 bytes @ 0x1
   366   000033                     	ds	2
   367   000035                     high_isr@Temp:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x3
   371   000035                     	ds	1
   372   000036                     high_isr@c:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x4
   376   000036                     	ds	1
   377   000037                     high_isr@i:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x5
   381   000037                     	ds	1
   382   000038                     ??_STLED316s_SPI_SendData:
   383   000038                     ??_i2c_Wait:
   384   000038                     ?_Read_IR:
   385                           	callstack 0
   386   000038                     ?___awdiv:
   387                           	callstack 0
   388   000038                     ?___awmod:
   389                           	callstack 0
   390   000038                     ?___aldiv:
   391                           	callstack 0
   392   000038                     Write1USART@data:
   393                           	callstack 0
   394   000038                     delay_1ms@time:
   395                           	callstack 0
   396   000038                     flush@i:
   397                           	callstack 0
   398   000038                     flushOut@i:
   399                           	callstack 0
   400   000038                     Get7Seg@Digit:
   401                           	callstack 0
   402   000038                     ___awdiv@dividend:
   403                           	callstack 0
   404   000038                     ___awmod@dividend:
   405                           	callstack 0
   406   000038                     ___aldiv@dividend:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x6
   410   000038                     	ds	1
   411   000039                     ?_i2c_Read:
   412                           	callstack 0
   413   000039                     i2c_Write@data:
   414                           	callstack 0
   415   000039                     i2c_Address@mode:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x7
   419   000039                     	ds	1
   420   00003A                     ??_delay_1ms:
   421   00003A                     ??_Get7Seg:
   422   00003A                     STLED316s_SPI_SendData@Data:
   423                           	callstack 0
   424   00003A                     i2c_Address@address:
   425                           	callstack 0
   426   00003A                     readWeighingData@i:
   427                           	callstack 0
   428   00003A                     ___awdiv@divisor:
   429                           	callstack 0
   430   00003A                     ___awmod@divisor:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x8
   434   00003A                     	ds	1
   435   00003B                     ??_AD_capture_BattVoltage:
   436   00003B                     STLED316s_SPI_SendData@temp:
   437                           	callstack 0
   438   00003B                     i2c_Address@l_address:
   439                           	callstack 0
   440   00003B                     i2c_Read@ack:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x9
   444   00003B                     	ds	1
   445   00003C                     STLED316s_SPI_SendData@i:
   446                           	callstack 0
   447   00003C                     Get7Seg@Data:
   448                           	callstack 0
   449   00003C                     i2c_Read@i2cReadData:
   450                           	callstack 0
   451   00003C                     ___awdiv@counter:
   452                           	callstack 0
   453   00003C                     ___awmod@counter:
   454                           	callstack 0
   455   00003C                     ___aldiv@divisor:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0xA
   459   00003C                     	ds	1
   460   00003D                     STLED316s_SPI_SendData@t:
   461                           	callstack 0
   462   00003D                     ___awdiv@sign:
   463                           	callstack 0
   464   00003D                     ___awmod@sign:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xB
   468   00003D                     	ds	1
   469   00003E                     ??_InitSTLED316:
   470   00003E                     ??_WriteSTLED316SErr:
   471   00003E                     ??_WriteSTLED316SMode:
   472   00003E                     WriteSTLED316SVibMode@v_mode:
   473                           	callstack 0
   474   00003E                     ___awdiv@quotient:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xC
   478   00003E                     	ds	2
   479   000040                     InitSTLED316@Brightness:
   480                           	callstack 0
   481   000040                     WriteSTLED316SMode@msg:
   482                           	callstack 0
   483   000040                     WriteSTLED316SErr@msg:
   484                           	callstack 0
   485   000040                     ___aldiv@counter:
   486                           	callstack 0
   487   000040                     WriteSTLED316SData@number:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xE
   491   000040                     	ds	1
   492   000041                     ??_MotorPosition_Init:
   493   000041                     ??_Homing_Again_Auto:
   494   000041                     ___aldiv@sign:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xF
   498   000041                     	ds	1
   499   000042                     WriteSTLED316SData@v_mode:
   500                           	callstack 0
   501   000042                     ___aldiv@quotient:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x10
   505   000042                     	ds	1
   506   000043                     WriteSTLED316SData@NUM_DIG0:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x11
   510   000043                     	ds	2
   511   000045                     WriteSTLED316SData@NUM_DIG1:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x13
   515   000045                     	ds	1
   516   000046                     ?_read_i2c:
   517                           	callstack 0
   518   000046                     write_i2c@address:
   519                           	callstack 0
   520   000046                     read_i2c@address:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x14
   524   000046                     	ds	1
   525   000047                     WriteSTLED316SData@data3:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x15
   529   000047                     	ds	1
   530   000048                     WriteSTLED316SData@data4:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x16
   534   000048                     	ds	1
   535   000049                     ??_Homing_Again_Manual:
   536                           
   537                           ; 1 bytes @ 0x17
   538   000049                     	ds	1
   539   00004A                     write_i2c@data:
   540                           	callstack 0
   541   00004A                     read_i2c@read_byte:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x18
   545   00004A                     	ds	2
   546   00004C                     ??_main:
   547                           
   548                           ; 1 bytes @ 0x1A
   549   00004C                     	ds	2
   550                           
   551 ;;
   552 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   553 ;;
   554 ;; *************** function _main *****************
   555 ;; Defined at:
   556 ;;		line 162 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        2 bytes
   575 ;; Hardware stack levels required when called: 6
   576 ;; This function calls:
   577 ;;		_AD_capture_BattVoltage
   578 ;;		_Homing_Again_Auto
   579 ;;		_Homing_Again_Manual
   580 ;;		_InitSTLED316
   581 ;;		_InitTimer1
   582 ;;		_MotorPosition_Init
   583 ;;		_ToggleVIB_Mode
   584 ;;		_Write1USART
   585 ;;		_WriteSTLED316SData
   586 ;;		_WriteSTLED316SVibMode
   587 ;;		_flush
   588 ;;		_flushOut
   589 ;;		_i2c_Init
   590 ;;		_init
   591 ;;		_initMotor
   592 ;;		_initUSART
   593 ;;		_read_i2c
   594 ;;		_write_i2c
   595 ;; This function is called by:
   596 ;;		Startup code after reset
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text0
   601   000306                     __ptext0:
   602                           	callstack 0
   603   000306                     _main:
   604                           	callstack 25
   605   000306                     
   606                           ;main.c: 163:     GIE = 0;
   607   000306  9EF2               	bcf	4082,7,c	;volatile
   608   000308                     
   609                           ;main.c: 164:     init();
   610   000308  ECB7  F00E         	call	_init	;wreg free
   611   00030C                     
   612                           ;main.c: 165:     InitSTLED316(0x77);
   613   00030C  0E77               	movlw	119
   614   00030E  EC31  F00E         	call	_InitSTLED316
   615   000312                     
   616                           ;main.c: 166:     initMotor();
   617   000312  EC05  F011         	call	_initMotor	;wreg free
   618   000316                     
   619                           ;main.c: 167:     i2c_Init();
   620   000316  ECDA  F010         	call	_i2c_Init	;wreg free
   621   00031A                     
   622                           ;main.c: 168:     initUSART();
   623   00031A  EC83  F010         	call	_initUSART	;wreg free
   624   00031E                     
   625                           ;main.c: 169:     InitTimer1();
   626   00031E  ECCE  F010         	call	_InitTimer1	;wreg free
   627   000322                     
   628                           ;main.c: 211:     LATCbits.LATC1 = 0;
   629   000322  928B               	bcf	139,1,c	;volatile
   630   000324                     
   631                           ;main.c: 212:     LATAbits.LATA2 = 0;
   632   000324  9489               	bcf	137,2,c	;volatile
   633   000326                     
   634                           ;main.c: 213:     errorcounter = 30;
   635   000326  0E1E               	movlw	30
   636   000328  6E52               	movwf	_errorcounter^0,c	;volatile
   637   00032A  0E00               	movlw	0
   638   00032C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   639   00032E  0E00               	movlw	0
   640   000330  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   641   000332  0E00               	movlw	0
   642   000334  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   643   000336                     
   644                           ;main.c: 217:     RCONbits.IPEN = 1;
   645   000336  8ED0               	bsf	208,7,c	;volatile
   646   000338                     
   647                           ;main.c: 220:     IPR1bits.RCIP = 1;
   648   000338  8A9F               	bsf	159,5,c	;volatile
   649   00033A                     
   650                           ;main.c: 223:     INTCONbits.GIEH = 1;
   651   00033A  8EF2               	bsf	242,7,c	;volatile
   652   00033C                     
   653                           ;main.c: 224:     INTCONbits.GIE = 1;
   654   00033C  8EF2               	bsf	242,7,c	;volatile
   655   00033E                     
   656                           ;main.c: 229:     LATDbits.LATD0 = 1;
   657   00033E  808C               	bsf	140,0,c	;volatile
   658   000340                     
   659                           ;main.c: 230:     LATDbits.LATD1 = 1;
   660   000340  828C               	bsf	140,1,c	;volatile
   661   000342                     
   662                           ;main.c: 232:     WriteSTLED316SData(36, 0xFF);
   663   000342  0E00               	movlw	0
   664   000344  6E41               	movwf	(WriteSTLED316SData@number+1)^0,c
   665   000346  0E24               	movlw	36
   666   000348  6E40               	movwf	WriteSTLED316SData@number^0,c
   667   00034A  0EFF               	movlw	255
   668   00034C  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
   669   00034E  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
   670   000352                     
   671                           ;main.c: 233:     _delay((unsigned long)((500)*(8000000/4000.0)));
   672   000352  0E06               	movlw	6
   673   000354  6E4D               	movwf	(??_main+1)^0,c
   674   000356  0E13               	movlw	19
   675   000358  6E4C               	movwf	??_main^0,c
   676   00035A  0EAE               	movlw	174
   677   00035C                     u3297:
   678   00035C  2EE8               	decfsz	wreg,f,c
   679   00035E  D7FE               	bra	u3297
   680   000360  2E4C               	decfsz	??_main^0,f,c
   681   000362  D7FC               	bra	u3297
   682   000364  2E4D               	decfsz	(??_main+1)^0,f,c
   683   000366  D7FA               	bra	u3297
   684   000368                     
   685                           ;main.c: 234:     AD_capture_BattVoltage();
   686   000368  ECC0  F00F         	call	_AD_capture_BattVoltage	;wreg free
   687   00036C                     
   688                           ;main.c: 243:     INTCONbits.GIE = 0;
   689   00036C  9EF2               	bcf	242,7,c	;volatile
   690   00036E                     
   691                           ;main.c: 244:     ETemp = read_i2c(0x0010);
   692   00036E  0E10               	movlw	16
   693   000370  6E46               	movwf	read_i2c@address^0,c
   694   000372  0E00               	movlw	0
   695   000374  6E47               	movwf	(read_i2c@address+1)^0,c
   696   000376  0E00               	movlw	0
   697   000378  6E48               	movwf	(read_i2c@address+2)^0,c
   698   00037A  0E00               	movlw	0
   699   00037C  6E49               	movwf	(read_i2c@address+3)^0,c
   700   00037E  ECF0  F00E         	call	_read_i2c	;wreg free
   701   000382  C046  F01D         	movff	?_read_i2c,_ETemp
   702   000386  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   703   00038A                     
   704                           ;main.c: 245:     INTCONbits.GIE = 1;
   705   00038A  8EF2               	bsf	242,7,c	;volatile
   706   00038C                     
   707                           ;main.c: 247:     vibration_mode = ETemp & 0x00FF;
   708   00038C  C01D  F02C         	movff	_ETemp,_vibration_mode
   709   000390                     
   710                           ;main.c: 248:     if (vibration_mode > 1) {
   711   000390  0E01               	movlw	1
   712   000392  642C               	cpfsgt	_vibration_mode^0,c
   713   000394  EFCE  F001         	goto	u2531
   714   000398  EFD0  F001         	goto	u2530
   715   00039C                     u2531:
   716   00039C  EFE1  F001         	goto	l3800
   717   0003A0                     u2530:
   718   0003A0                     
   719                           ;main.c: 249:         vibration_mode = 1;
   720   0003A0  0E01               	movlw	1
   721   0003A2  6E2C               	movwf	_vibration_mode^0,c
   722   0003A4                     
   723                           ;main.c: 251:         INTCONbits.GIE = 0;
   724   0003A4  9EF2               	bcf	242,7,c	;volatile
   725   0003A6                     
   726                           ;main.c: 252:         write_i2c(0x0010, vibration_mode);
   727   0003A6  0E10               	movlw	16
   728   0003A8  6E46               	movwf	write_i2c@address^0,c
   729   0003AA  0E00               	movlw	0
   730   0003AC  6E47               	movwf	(write_i2c@address+1)^0,c
   731   0003AE  0E00               	movlw	0
   732   0003B0  6E48               	movwf	(write_i2c@address+2)^0,c
   733   0003B2  0E00               	movlw	0
   734   0003B4  6E49               	movwf	(write_i2c@address+3)^0,c
   735   0003B6  C02C  F04A         	movff	_vibration_mode,write_i2c@data
   736   0003BA  6A4B               	clrf	(write_i2c@data+1)^0,c
   737   0003BC  EC78  F00F         	call	_write_i2c	;wreg free
   738   0003C0                     
   739                           ;main.c: 253:         INTCONbits.GIE = 1;
   740   0003C0  8EF2               	bsf	242,7,c	;volatile
   741   0003C2                     l3800:
   742                           
   743                           ;main.c: 256:     NUM = 1;
   744   0003C2  0E00               	movlw	0
   745   0003C4  6E14               	movwf	(_NUM+1)^0,c
   746   0003C6  0E01               	movlw	1
   747   0003C8  6E13               	movwf	_NUM^0,c
   748                           
   749                           ;main.c: 257:     WriteSTLED316SData(NUM, vibration_mode);
   750   0003CA  C013  F040         	movff	_NUM,WriteSTLED316SData@number
   751   0003CE  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
   752   0003D2  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   753   0003D6  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
   754   0003DA                     
   755                           ;main.c: 258:     NUM_REC = 1;
   756   0003DA  0E00               	movlw	0
   757   0003DC  6E10               	movwf	(_NUM_REC+1)^0,c
   758   0003DE  0E01               	movlw	1
   759   0003E0  6E0F               	movwf	_NUM_REC^0,c
   760   0003E2                     
   761                           ;main.c: 263:     INTCONbits.GIE = 0;
   762   0003E2  9EF2               	bcf	242,7,c	;volatile
   763   0003E4                     
   764                           ;main.c: 264:     ETemp = read_i2c(0x0020);
   765   0003E4  0E20               	movlw	32
   766   0003E6  6E46               	movwf	read_i2c@address^0,c
   767   0003E8  0E00               	movlw	0
   768   0003EA  6E47               	movwf	(read_i2c@address+1)^0,c
   769   0003EC  0E00               	movlw	0
   770   0003EE  6E48               	movwf	(read_i2c@address+2)^0,c
   771   0003F0  0E00               	movlw	0
   772   0003F2  6E49               	movwf	(read_i2c@address+3)^0,c
   773   0003F4  ECF0  F00E         	call	_read_i2c	;wreg free
   774   0003F8  C046  F01D         	movff	?_read_i2c,_ETemp
   775   0003FC  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   776   000400                     
   777                           ;main.c: 265:     INTCONbits.GIE = 1;
   778   000400  8EF2               	bsf	242,7,c	;volatile
   779                           
   780                           ;main.c: 267:     Device_ID = ETemp & 0x00FF;
   781   000402  501D               	movf	_ETemp^0,w,c
   782   000404  6E17               	movwf	_Device_ID^0,c
   783   000406  6A18               	clrf	(_Device_ID+1)^0,c
   784   000408                     
   785                           ;main.c: 268:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   786   000408  5018               	movf	(_Device_ID+1)^0,w,c
   787   00040A  E109               	bnz	u2540
   788   00040C  0E31               	movlw	49
   789   00040E  5C17               	subwf	_Device_ID^0,w,c
   790   000410  A0D8               	btfss	status,0,c
   791   000412  EF0D  F002         	goto	u2541
   792   000416  EF0F  F002         	goto	u2540
   793   00041A                     u2541:
   794   00041A  EF1A  F002         	goto	l3814
   795   00041E                     u2540:
   796   00041E  5018               	movf	(_Device_ID+1)^0,w,c
   797   000420  E109               	bnz	u2550
   798   000422  0E3B               	movlw	59
   799   000424  5C17               	subwf	_Device_ID^0,w,c
   800   000426  A0D8               	btfss	status,0,c
   801   000428  EF18  F002         	goto	u2551
   802   00042C  EF1A  F002         	goto	u2550
   803   000430                     u2551:
   804   000430  EF2E  F002         	goto	l3822
   805   000434                     u2550:
   806   000434                     l3814:
   807                           
   808                           ;main.c: 269:         Device_ID = 0x31;
   809   000434  0E00               	movlw	0
   810   000436  6E18               	movwf	(_Device_ID+1)^0,c
   811   000438  0E31               	movlw	49
   812   00043A  6E17               	movwf	_Device_ID^0,c
   813   00043C                     
   814                           ;main.c: 271:         INTCONbits.GIE = 0;
   815   00043C  9EF2               	bcf	242,7,c	;volatile
   816   00043E                     
   817                           ;main.c: 272:         write_i2c(0x0020, Device_ID);
   818   00043E  0E20               	movlw	32
   819   000440  6E46               	movwf	write_i2c@address^0,c
   820   000442  0E00               	movlw	0
   821   000444  6E47               	movwf	(write_i2c@address+1)^0,c
   822   000446  0E00               	movlw	0
   823   000448  6E48               	movwf	(write_i2c@address+2)^0,c
   824   00044A  0E00               	movlw	0
   825   00044C  6E49               	movwf	(write_i2c@address+3)^0,c
   826   00044E  C017  F04A         	movff	_Device_ID,write_i2c@data
   827   000452  C018  F04B         	movff	_Device_ID+1,write_i2c@data+1
   828   000456  EC78  F00F         	call	_write_i2c	;wreg free
   829   00045A                     
   830                           ;main.c: 273:         INTCONbits.GIE = 1;
   831   00045A  8EF2               	bsf	242,7,c	;volatile
   832   00045C                     l3822:
   833                           
   834                           ;main.c: 279:     INTCONbits.GIE = 0;
   835   00045C  9EF2               	bcf	242,7,c	;volatile
   836   00045E                     
   837                           ;main.c: 280:     ETemp = read_i2c(0x0060);
   838   00045E  0E60               	movlw	96
   839   000460  6E46               	movwf	read_i2c@address^0,c
   840   000462  0E00               	movlw	0
   841   000464  6E47               	movwf	(read_i2c@address+1)^0,c
   842   000466  0E00               	movlw	0
   843   000468  6E48               	movwf	(read_i2c@address+2)^0,c
   844   00046A  0E00               	movlw	0
   845   00046C  6E49               	movwf	(read_i2c@address+3)^0,c
   846   00046E  ECF0  F00E         	call	_read_i2c	;wreg free
   847   000472  C046  F01D         	movff	?_read_i2c,_ETemp
   848   000476  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   849   00047A                     
   850                           ;main.c: 281:     INTCONbits.GIE = 1;
   851   00047A  8EF2               	bsf	242,7,c	;volatile
   852   00047C                     
   853                           ;main.c: 283:     pause_Time = ETemp & 0x00FF;
   854   00047C  C01D  F029         	movff	_ETemp,_pause_Time	;volatile
   855   000480                     
   856                           ;main.c: 284:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   857   000480  0E2F               	movlw	47
   858   000482  6429               	cpfsgt	_pause_Time^0,c	;volatile
   859   000484  EF46  F002         	goto	u2561
   860   000488  EF48  F002         	goto	u2560
   861   00048C                     u2561:
   862   00048C  EF50  F002         	goto	l3834
   863   000490                     u2560:
   864   000490  0E35               	movlw	53
   865   000492  6429               	cpfsgt	_pause_Time^0,c	;volatile
   866   000494  EF4E  F002         	goto	u2571
   867   000498  EF50  F002         	goto	u2570
   868   00049C                     u2571:
   869   00049C  EF8D  F002         	goto	l3856
   870   0004A0                     u2570:
   871   0004A0                     l3834:
   872                           
   873                           ;main.c: 285:         pause_Time = 0x30;
   874   0004A0  0E30               	movlw	48
   875   0004A2  6E29               	movwf	_pause_Time^0,c	;volatile
   876                           
   877                           ;main.c: 286:         Motor_Pause_Time = 0;
   878   0004A4  0E00               	movlw	0
   879   0004A6  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   880   0004A8  0E00               	movlw	0
   881   0004AA  6E15               	movwf	_Motor_Pause_Time^0,c
   882   0004AC                     
   883                           ;main.c: 288:         INTCONbits.GIE = 0;
   884   0004AC  9EF2               	bcf	242,7,c	;volatile
   885   0004AE                     
   886                           ;main.c: 289:         write_i2c(0x0060, pause_Time);
   887   0004AE  0E60               	movlw	96
   888   0004B0  6E46               	movwf	write_i2c@address^0,c
   889   0004B2  0E00               	movlw	0
   890   0004B4  6E47               	movwf	(write_i2c@address+1)^0,c
   891   0004B6  0E00               	movlw	0
   892   0004B8  6E48               	movwf	(write_i2c@address+2)^0,c
   893   0004BA  0E00               	movlw	0
   894   0004BC  6E49               	movwf	(write_i2c@address+3)^0,c
   895   0004BE  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
   896   0004C2  6A4B               	clrf	(write_i2c@data+1)^0,c
   897   0004C4  EC78  F00F         	call	_write_i2c	;wreg free
   898   0004C8                     
   899                           ;main.c: 290:         INTCONbits.GIE = 1;
   900   0004C8  8EF2               	bsf	242,7,c	;volatile
   901                           
   902                           ;main.c: 291:     } else {
   903   0004CA  EFB2  F002         	goto	l185
   904   0004CE                     l3842:
   905                           
   906                           ;main.c: 295:                 Motor_Pause_Time = 0;
   907   0004CE  0E00               	movlw	0
   908   0004D0  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   909   0004D2  0E00               	movlw	0
   910   0004D4  6E15               	movwf	_Motor_Pause_Time^0,c
   911                           
   912                           ;main.c: 296:                 pause_Time = 0x30;
   913   0004D6  0E30               	movlw	48
   914   0004D8  6E29               	movwf	_pause_Time^0,c	;volatile
   915                           
   916                           ;main.c: 297:                 break;
   917   0004DA  EFB2  F002         	goto	l185
   918   0004DE                     l3844:
   919                           
   920                           ;main.c: 300:                 Motor_Pause_Time = 1000;
   921   0004DE  0E03               	movlw	3
   922   0004E0  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   923   0004E2  0EE8               	movlw	232
   924   0004E4  6E15               	movwf	_Motor_Pause_Time^0,c
   925                           
   926                           ;main.c: 301:                 break;
   927   0004E6  EFB2  F002         	goto	l185
   928   0004EA                     l3846:
   929                           
   930                           ;main.c: 304:                 Motor_Pause_Time = 2000;
   931   0004EA  0E07               	movlw	7
   932   0004EC  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   933   0004EE  0ED0               	movlw	208
   934   0004F0  6E15               	movwf	_Motor_Pause_Time^0,c
   935                           
   936                           ;main.c: 305:                 break;
   937   0004F2  EFB2  F002         	goto	l185
   938   0004F6                     l3848:
   939                           
   940                           ;main.c: 308:                 Motor_Pause_Time = 3000;
   941   0004F6  0E0B               	movlw	11
   942   0004F8  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   943   0004FA  0EB8               	movlw	184
   944   0004FC  6E15               	movwf	_Motor_Pause_Time^0,c
   945                           
   946                           ;main.c: 309:                 break;
   947   0004FE  EFB2  F002         	goto	l185
   948   000502                     l3850:
   949                           
   950                           ;main.c: 312:                 Motor_Pause_Time = 4000;
   951   000502  0E0F               	movlw	15
   952   000504  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   953   000506  0EA0               	movlw	160
   954   000508  6E15               	movwf	_Motor_Pause_Time^0,c
   955                           
   956                           ;main.c: 313:                 break;
   957   00050A  EFB2  F002         	goto	l185
   958   00050E                     l3852:
   959                           
   960                           ;main.c: 316:                 Motor_Pause_Time = 5000;
   961   00050E  0E13               	movlw	19
   962   000510  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   963   000512  0E88               	movlw	136
   964   000514  6E15               	movwf	_Motor_Pause_Time^0,c
   965                           
   966                           ;main.c: 317:                 break;
   967   000516  EFB2  F002         	goto	l185
   968   00051A                     l3856:
   969   00051A  5029               	movf	_pause_Time^0,w,c	;volatile
   970   00051C  6E4C               	movwf	??_main^0,c
   971   00051E  6A4D               	clrf	(??_main+1)^0,c
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ;	Chosen strategy is simple_byte
   980   000520  504D               	movf	(??_main+1)^0,w,c
   981   000522  0A00               	xorlw	0	; case 0
   982   000524  B4D8               	btfsc	status,2,c
   983   000526  EF97  F002         	goto	l4678
   984   00052A  EF67  F002         	goto	l3842
   985   00052E                     l4678:
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 6, Range of values is 48 to 53
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte           19    10 (average)
   992                           ;	Chosen strategy is simple_byte
   993   00052E  504C               	movf	??_main^0,w,c
   994   000530  0A30               	xorlw	48	; case 48
   995   000532  B4D8               	btfsc	status,2,c
   996   000534  EF67  F002         	goto	l3842
   997   000538  0A01               	xorlw	1	; case 49
   998   00053A  B4D8               	btfsc	status,2,c
   999   00053C  EF6F  F002         	goto	l3844
  1000   000540  0A03               	xorlw	3	; case 50
  1001   000542  B4D8               	btfsc	status,2,c
  1002   000544  EF75  F002         	goto	l3846
  1003   000548  0A01               	xorlw	1	; case 51
  1004   00054A  B4D8               	btfsc	status,2,c
  1005   00054C  EF7B  F002         	goto	l3848
  1006   000550  0A07               	xorlw	7	; case 52
  1007   000552  B4D8               	btfsc	status,2,c
  1008   000554  EF81  F002         	goto	l3850
  1009   000558  0A01               	xorlw	1	; case 53
  1010   00055A  B4D8               	btfsc	status,2,c
  1011   00055C  EF87  F002         	goto	l3852
  1012   000560  EF67  F002         	goto	l3842
  1013   000564                     l185:
  1014                           
  1015                           ;main.c: 324:     INTCONbits.GIE = 0;
  1016   000564  9EF2               	bcf	242,7,c	;volatile
  1017   000566                     
  1018                           ;main.c: 325:     ETemp = read_i2c(0x0050);
  1019   000566  0E50               	movlw	80
  1020   000568  6E46               	movwf	read_i2c@address^0,c
  1021   00056A  0E00               	movlw	0
  1022   00056C  6E47               	movwf	(read_i2c@address+1)^0,c
  1023   00056E  0E00               	movlw	0
  1024   000570  6E48               	movwf	(read_i2c@address+2)^0,c
  1025   000572  0E00               	movlw	0
  1026   000574  6E49               	movwf	(read_i2c@address+3)^0,c
  1027   000576  ECF0  F00E         	call	_read_i2c	;wreg free
  1028   00057A  C046  F01D         	movff	?_read_i2c,_ETemp
  1029   00057E  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1030   000582                     
  1031                           ;main.c: 326:     INTCONbits.GIE = 1;
  1032   000582  8EF2               	bsf	242,7,c	;volatile
  1033   000584                     
  1034                           ;main.c: 328:     delay_motor_stop_time = ETemp & 0x00FF;
  1035   000584  C01D  F027         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1036   000588                     
  1037                           ;main.c: 329:     if (delay_motor_stop_time > 0x96) {
  1038   000588  0E96               	movlw	150
  1039   00058A  6427               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1040   00058C  EFCA  F002         	goto	u2581
  1041   000590  EFCC  F002         	goto	u2580
  1042   000594                     u2581:
  1043   000594  EFE3  F002         	goto	l195
  1044   000598                     u2580:
  1045   000598                     
  1046                           ;main.c: 330:         delay_motor_stop_time = 0x00;
  1047   000598  0E00               	movlw	0
  1048   00059A  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  1049   00059C                     
  1050                           ;main.c: 332:         INTCONbits.GIE = 0;
  1051   00059C  9EF2               	bcf	242,7,c	;volatile
  1052   00059E                     
  1053                           ;main.c: 333:         write_i2c(0x0050, delay_motor_stop_time);
  1054   00059E  0E50               	movlw	80
  1055   0005A0  6E46               	movwf	write_i2c@address^0,c
  1056   0005A2  0E00               	movlw	0
  1057   0005A4  6E47               	movwf	(write_i2c@address+1)^0,c
  1058   0005A6  0E00               	movlw	0
  1059   0005A8  6E48               	movwf	(write_i2c@address+2)^0,c
  1060   0005AA  0E00               	movlw	0
  1061   0005AC  6E49               	movwf	(write_i2c@address+3)^0,c
  1062   0005AE  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1063   0005B2  6A4B               	clrf	(write_i2c@data+1)^0,c
  1064   0005B4  EC78  F00F         	call	_write_i2c	;wreg free
  1065   0005B8                     
  1066                           ;main.c: 334:         INTCONbits.GIE = 1;
  1067   0005B8  8EF2               	bsf	242,7,c	;volatile
  1068   0005BA                     
  1069                           ;main.c: 336:         Motor_Stop_Delay_Time = 0;
  1070   0005BA  0E00               	movlw	0
  1071   0005BC  6E1A               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1072   0005BE  0E00               	movlw	0
  1073   0005C0  6E19               	movwf	_Motor_Stop_Delay_Time^0,c
  1074                           
  1075                           ;main.c: 337:     } else {
  1076   0005C2  EFE6  F002         	goto	l196
  1077   0005C6                     l195:
  1078                           
  1079                           ;main.c: 338:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1080   0005C6  C027  F019         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1081   0005CA  6A1A               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1082   0005CC                     l196:
  1083                           
  1084                           ;main.c: 344:     INTCONbits.GIE = 0;
  1085   0005CC  9EF2               	bcf	242,7,c	;volatile
  1086   0005CE                     
  1087                           ;main.c: 345:     ETemp = read_i2c(0x0040);
  1088   0005CE  0E40               	movlw	64
  1089   0005D0  6E46               	movwf	read_i2c@address^0,c
  1090   0005D2  0E00               	movlw	0
  1091   0005D4  6E47               	movwf	(read_i2c@address+1)^0,c
  1092   0005D6  0E00               	movlw	0
  1093   0005D8  6E48               	movwf	(read_i2c@address+2)^0,c
  1094   0005DA  0E00               	movlw	0
  1095   0005DC  6E49               	movwf	(read_i2c@address+3)^0,c
  1096   0005DE  ECF0  F00E         	call	_read_i2c	;wreg free
  1097   0005E2  C046  F01D         	movff	?_read_i2c,_ETemp
  1098   0005E6  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1099   0005EA                     
  1100                           ;main.c: 346:     INTCONbits.GIE = 1
  1101   0005EA  8EF2               	bsf	242,7,c	;volatile
  1102   0005EC                     
  1103                           ;main.c: 348:     vib_Time = ETemp & 0x00FF;
  1104   0005EC  C01D  F028         	movff	_ETemp,_vib_Time	;volatile
  1105   0005F0                     
  1106                           ;main.c: 349:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85)) {
  1107   0005F0  0E81               	movlw	129
  1108   0005F2  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1109   0005F4  B4D8               	btfsc	status,2,c
  1110   0005F6  EFFF  F002         	goto	u2591
  1111   0005FA  EF01  F003         	goto	u2590
  1112   0005FE                     u2591:
  1113   0005FE  EF5C  F003         	goto	l3912
  1114   000602                     u2590:
  1115   000602  0E82               	movlw	130
  1116   000604  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1117   000606  B4D8               	btfsc	status,2,c
  1118   000608  EF08  F003         	goto	u2601
  1119   00060C  EF0A  F003         	goto	u2600
  1120   000610                     u2601:
  1121   000610  EF5C  F003         	goto	l3912
  1122   000614                     u2600:
  1123   000614  0E83               	movlw	131
  1124   000616  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1125   000618  B4D8               	btfsc	status,2,c
  1126   00061A  EF11  F003         	goto	u2611
  1127   00061E  EF13  F003         	goto	u2610
  1128   000622                     u2611:
  1129   000622  EF5C  F003         	goto	l3912
  1130   000626                     u2610:
  1131   000626  0E84               	movlw	132
  1132   000628  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1133   00062A  B4D8               	btfsc	status,2,c
  1134   00062C  EF1A  F003         	goto	u2621
  1135   000630  EF1C  F003         	goto	u2620
  1136   000634                     u2621:
  1137   000634  EF5C  F003         	goto	l3912
  1138   000638                     u2620:
  1139   000638  0E85               	movlw	133
  1140   00063A  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1141   00063C  B4D8               	btfsc	status,2,c
  1142   00063E  EF23  F003         	goto	u2631
  1143   000642  EF25  F003         	goto	u2630
  1144   000646                     u2631:
  1145   000646  EF5C  F003         	goto	l3912
  1146   00064A                     u2630:
  1147   00064A                     
  1148                           ;main.c: 350:         Vmotor_Time = 2000;
  1149   00064A  0E07               	movlw	7
  1150   00064C  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1151   00064E  0ED0               	movlw	208
  1152   000650  6E56               	movwf	_Vmotor_Time^0,c
  1153                           
  1154                           ;main.c: 351:         vib_Time = 0x82;
  1155   000652  0E82               	movlw	130
  1156   000654  6E28               	movwf	_vib_Time^0,c	;volatile
  1157   000656                     
  1158                           ;main.c: 353:         INTCONbits.GIE = 0;
  1159   000656  9EF2               	bcf	242,7,c	;volatile
  1160   000658                     
  1161                           ;main.c: 354:         write_i2c(0x0040, vib_Time);
  1162   000658  0E40               	movlw	64
  1163   00065A  6E46               	movwf	write_i2c@address^0,c
  1164   00065C  0E00               	movlw	0
  1165   00065E  6E47               	movwf	(write_i2c@address+1)^0,c
  1166   000660  0E00               	movlw	0
  1167   000662  6E48               	movwf	(write_i2c@address+2)^0,c
  1168   000664  0E00               	movlw	0
  1169   000666  6E49               	movwf	(write_i2c@address+3)^0,c
  1170   000668  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  1171   00066C  6A4B               	clrf	(write_i2c@data+1)^0,c
  1172   00066E  EC78  F00F         	call	_write_i2c	;wreg free
  1173   000672                     
  1174                           ;main.c: 355:         INTCONbits.GIE = 1;
  1175   000672  8EF2               	bsf	242,7,c	;volatile
  1176                           
  1177                           ;main.c: 356:     } else {
  1178   000674  EF7D  F003         	goto	l3914
  1179   000678                     l3900:
  1180                           
  1181                           ;main.c: 359:                 Vmotor_Time = 1000;
  1182   000678  0E03               	movlw	3
  1183   00067A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1184   00067C  0EE8               	movlw	232
  1185   00067E  6E56               	movwf	_Vmotor_Time^0,c
  1186                           
  1187                           ;main.c: 360:                 break;
  1188   000680  EF7D  F003         	goto	l3914
  1189   000684                     l3902:
  1190                           
  1191                           ;main.c: 363:                 Vmotor_Time = 2000;
  1192   000684  0E07               	movlw	7
  1193   000686  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1194   000688  0ED0               	movlw	208
  1195   00068A  6E56               	movwf	_Vmotor_Time^0,c
  1196                           
  1197                           ;main.c: 364:                 vib_Time = 0x82;
  1198   00068C  0E82               	movlw	130
  1199   00068E  6E28               	movwf	_vib_Time^0,c	;volatile
  1200                           
  1201                           ;main.c: 365:                 break;
  1202   000690  EF7D  F003         	goto	l3914
  1203   000694                     l3904:
  1204                           
  1205                           ;main.c: 367:                 Vmotor_Time = 3000;
  1206   000694  0E0B               	movlw	11
  1207   000696  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1208   000698  0EB8               	movlw	184
  1209   00069A  6E56               	movwf	_Vmotor_Time^0,c
  1210                           
  1211                           ;main.c: 368:                 break;
  1212   00069C  EF7D  F003         	goto	l3914
  1213   0006A0                     l3906:
  1214                           
  1215                           ;main.c: 370:                 Vmotor_Time = 4000;
  1216   0006A0  0E0F               	movlw	15
  1217   0006A2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1218   0006A4  0EA0               	movlw	160
  1219   0006A6  6E56               	movwf	_Vmotor_Time^0,c
  1220                           
  1221                           ;main.c: 371:                 break;
  1222   0006A8  EF7D  F003         	goto	l3914
  1223   0006AC                     l3908:
  1224                           
  1225                           ;main.c: 373:                 Vmotor_Time = 5000;
  1226   0006AC  0E13               	movlw	19
  1227   0006AE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1228   0006B0  0E88               	movlw	136
  1229   0006B2  6E56               	movwf	_Vmotor_Time^0,c
  1230                           
  1231                           ;main.c: 374:                 break;
  1232   0006B4  EF7D  F003         	goto	l3914
  1233   0006B8                     l3912:
  1234   0006B8  5028               	movf	_vib_Time^0,w,c	;volatile
  1235   0006BA  6E4C               	movwf	??_main^0,c
  1236   0006BC  6A4D               	clrf	(??_main+1)^0,c
  1237                           
  1238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1239                           ; Switch size 1, requested type "simple"
  1240                           ; Number of cases is 1, Range of values is 0 to 0
  1241                           ; switch strategies available:
  1242                           ; Name         Instructions Cycles
  1243                           ; simple_byte            4     3 (average)
  1244                           ;	Chosen strategy is simple_byte
  1245   0006BE  504D               	movf	(??_main+1)^0,w,c
  1246   0006C0  0A00               	xorlw	0	; case 0
  1247   0006C2  B4D8               	btfsc	status,2,c
  1248   0006C4  EF66  F003         	goto	l4680
  1249   0006C8  EF42  F003         	goto	l3902
  1250   0006CC                     l4680:
  1251                           
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 5, Range of values is 129 to 133
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte           16     9 (average)
  1257                           ;	Chosen strategy is simple_byte
  1258   0006CC  504C               	movf	??_main^0,w,c
  1259   0006CE  0A81               	xorlw	129	; case 129
  1260   0006D0  B4D8               	btfsc	status,2,c
  1261   0006D2  EF3C  F003         	goto	l3900
  1262   0006D6  0A03               	xorlw	3	; case 130
  1263   0006D8  B4D8               	btfsc	status,2,c
  1264   0006DA  EF42  F003         	goto	l3902
  1265   0006DE  0A01               	xorlw	1	; case 131
  1266   0006E0  B4D8               	btfsc	status,2,c
  1267   0006E2  EF4A  F003         	goto	l3904
  1268   0006E6  0A07               	xorlw	7	; case 132
  1269   0006E8  B4D8               	btfsc	status,2,c
  1270   0006EA  EF50  F003         	goto	l3906
  1271   0006EE  0A01               	xorlw	1	; case 133
  1272   0006F0  B4D8               	btfsc	status,2,c
  1273   0006F2  EF56  F003         	goto	l3908
  1274   0006F6  EF42  F003         	goto	l3902
  1275   0006FA                     l3914:
  1276                           
  1277                           ;main.c: 381:         PWM_reg = 0x3F;
  1278   0006FA  0E3F               	movlw	63
  1279   0006FC  6E58               	movwf	_PWM_reg^0,c
  1280   0006FE                     
  1281                           ;main.c: 383:     INTCONbits.GIE=0;
  1282   0006FE  9EF2               	bcf	242,7,c	;volatile
  1283   000700                     
  1284                           ;main.c: 384:     ETemp = read_i2c(0x0030);
  1285   000700  0E30               	movlw	48
  1286   000702  6E46               	movwf	read_i2c@address^0,c
  1287   000704  0E00               	movlw	0
  1288   000706  6E47               	movwf	(read_i2c@address+1)^0,c
  1289   000708  0E00               	movlw	0
  1290   00070A  6E48               	movwf	(read_i2c@address+2)^0,c
  1291   00070C  0E00               	movlw	0
  1292   00070E  6E49               	movwf	(read_i2c@address+3)^0,c
  1293   000710  ECF0  F00E         	call	_read_i2c	;wreg free
  1294   000714  C046  F01D         	movff	?_read_i2c,_ETemp
  1295   000718  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1296   00071C                     
  1297                           ;main.c: 385:     INTCONbits.GIE=1;
  1298   00071C  8EF2               	bsf	242,7,c	;volatile
  1299   00071E                     
  1300                           ;main.c: 387:     PWM_reg = ETemp & 0x00FF;
  1301   00071E  C01D  F058         	movff	_ETemp,_PWM_reg
  1302   000722                     
  1303                           ;main.c: 389:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1304   000722  5058               	movf	_PWM_reg^0,w,c
  1305   000724  B4D8               	btfsc	status,2,c
  1306   000726  EF97  F003         	goto	u2641
  1307   00072A  EF99  F003         	goto	u2640
  1308   00072E                     u2641:
  1309   00072E  EFBC  F003         	goto	l3938
  1310   000732                     u2640:
  1311   000732  0E3F               	movlw	63
  1312   000734  1858               	xorwf	_PWM_reg^0,w,c
  1313   000736  B4D8               	btfsc	status,2,c
  1314   000738  EFA0  F003         	goto	u2651
  1315   00073C  EFA2  F003         	goto	u2650
  1316   000740                     u2651:
  1317   000740  EFBC  F003         	goto	l3938
  1318   000744                     u2650:
  1319   000744  0E7F               	movlw	127
  1320   000746  1858               	xorwf	_PWM_reg^0,w,c
  1321   000748  B4D8               	btfsc	status,2,c
  1322   00074A  EFA9  F003         	goto	u2661
  1323   00074E  EFAB  F003         	goto	u2660
  1324   000752                     u2661:
  1325   000752  EFBC  F003         	goto	l3938
  1326   000756                     u2660:
  1327   000756                     
  1328                           ;main.c: 390:     {;main.c: 391:         PWM_reg=0x3F;
  1329   000756  0E3F               	movlw	63
  1330   000758  6E58               	movwf	_PWM_reg^0,c
  1331   00075A                     
  1332                           ;main.c: 393:         INTCONbits.GIE=0;
  1333   00075A  9EF2               	bcf	242,7,c	;volatile
  1334   00075C                     
  1335                           ;main.c: 394:         write_i2c(0x0030,PWM_reg);
  1336   00075C  0E30               	movlw	48
  1337   00075E  6E46               	movwf	write_i2c@address^0,c
  1338   000760  0E00               	movlw	0
  1339   000762  6E47               	movwf	(write_i2c@address+1)^0,c
  1340   000764  0E00               	movlw	0
  1341   000766  6E48               	movwf	(write_i2c@address+2)^0,c
  1342   000768  0E00               	movlw	0
  1343   00076A  6E49               	movwf	(write_i2c@address+3)^0,c
  1344   00076C  C058  F04A         	movff	_PWM_reg,write_i2c@data
  1345   000770  6A4B               	clrf	(write_i2c@data+1)^0,c
  1346   000772  EC78  F00F         	call	_write_i2c	;wreg free
  1347   000776                     
  1348                           ;main.c: 395:         INTCONbits.GIE=1;
  1349   000776  8EF2               	bsf	242,7,c	;volatile
  1350   000778                     l3938:
  1351                           
  1352                           ;main.c: 398:     errorcounter = 30;
  1353   000778  0E1E               	movlw	30
  1354   00077A  6E52               	movwf	_errorcounter^0,c	;volatile
  1355   00077C  0E00               	movlw	0
  1356   00077E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1357   000780  0E00               	movlw	0
  1358   000782  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1359   000784  0E00               	movlw	0
  1360   000786  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1361                           
  1362                           ;main.c: 399:     MotorPosition_Init();
  1363   000788  EC43  F00B         	call	_MotorPosition_Init	;wreg free
  1364   00078C                     
  1365                           ;main.c: 400:     LATDbits.LATD1 = 0;
  1366   00078C  928C               	bcf	140,1,c	;volatile
  1367   00078E                     l208:
  1368   00078E  0004               	clrwdt		;# 
  1369   000790                     
  1370                           ;main.c: 420:         errorcounter = 30;
  1371   000790  0E1E               	movlw	30
  1372   000792  6E52               	movwf	_errorcounter^0,c	;volatile
  1373   000794  0E00               	movlw	0
  1374   000796  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1375   000798  0E00               	movlw	0
  1376   00079A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1377   00079C  0E00               	movlw	0
  1378   00079E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1379   0007A0                     
  1380                           ;main.c: 421:         AD_capture_BattVoltage();
  1381   0007A0  ECC0  F00F         	call	_AD_capture_BattVoltage	;wreg free
  1382                           
  1383                           ;main.c: 423:         switch (OpMode) {
  1384   0007A4  EF82  F007         	goto	l4204
  1385   0007A8                     l210:
  1386                           
  1387                           ;main.c: 429:                 NUM = NUM_REC;
  1388   0007A8  C00F  F013         	movff	_NUM_REC,_NUM
  1389   0007AC  C010  F014         	movff	_NUM_REC+1,_NUM+1
  1390                           
  1391                           ;main.c: 430:                 if (PORTBbits.RB4 == 0) {
  1392   0007B0  B881               	btfsc	129,4,c	;volatile
  1393   0007B2  EFDD  F003         	goto	u2671
  1394   0007B6  EFDF  F003         	goto	u2670
  1395   0007BA                     u2671:
  1396   0007BA  EFFE  F003         	goto	l211
  1397   0007BE                     u2670:
  1398   0007BE                     l212:
  1399                           
  1400                           ;main.c: 432:                         if (PORTBbits.RB2 == 0) {
  1401   0007BE  B481               	btfsc	129,2,c	;volatile
  1402   0007C0  EFE4  F003         	goto	u2681
  1403   0007C4  EFE6  F003         	goto	u2680
  1404   0007C8                     u2681:
  1405   0007C8  EFE8  F003         	goto	l213
  1406   0007CC                     u2680:
  1407   0007CC                     
  1408                           ;main.c: 433:                             ToggleVIB_Mode();
  1409   0007CC  ECDF  F00F         	call	_ToggleVIB_Mode	;wreg free
  1410   0007D0                     l213:
  1411                           
  1412                           ;main.c: 436:                         WriteSTLED316SVibMode(vibration_mode);
  1413   0007D0  502C               	movf	_vibration_mode^0,w,c
  1414   0007D2  EC51  F00F         	call	_WriteSTLED316SVibMode
  1415   0007D6                     
  1416                           ;main.c: 437:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  1417   0007D6  0E02               	movlw	2
  1418   0007D8  6E4D               	movwf	(??_main+1)^0,c
  1419   0007DA  0E04               	movlw	4
  1420   0007DC  6E4C               	movwf	??_main^0,c
  1421   0007DE  0EBA               	movlw	186
  1422   0007E0                     u3307:
  1423   0007E0  2EE8               	decfsz	wreg,f,c
  1424   0007E2  D7FE               	bra	u3307
  1425   0007E4  2E4C               	decfsz	??_main^0,f,c
  1426   0007E6  D7FC               	bra	u3307
  1427   0007E8  2E4D               	decfsz	(??_main+1)^0,f,c
  1428   0007EA  D7FA               	bra	u3307
  1429   0007EC  D000               	nop2	
  1430   0007EE                     
  1431                           ;main.c: 439:                     } while (PORTBbits.RB4 == 0);
  1432   0007EE  A881               	btfss	129,4,c	;volatile
  1433   0007F0  EFFC  F003         	goto	u2691
  1434   0007F4  EFFE  F003         	goto	u2690
  1435   0007F8                     u2691:
  1436   0007F8  EFDF  F003         	goto	l212
  1437   0007FC                     u2690:
  1438   0007FC                     l211:
  1439                           
  1440                           ;main.c: 441:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1441   0007FC  B681               	btfsc	129,3,c	;volatile
  1442   0007FE  EF03  F004         	goto	u2701
  1443   000802  EF05  F004         	goto	u2700
  1444   000806                     u2701:
  1445   000806  EF76  F004         	goto	l215
  1446   00080A                     u2700:
  1447   00080A  0E63               	movlw	99
  1448   00080C  1813               	xorwf	_NUM^0,w,c
  1449   00080E  1014               	iorwf	(_NUM+1)^0,w,c
  1450   000810  B4D8               	btfsc	status,2,c
  1451   000812  EF0D  F004         	goto	u2711
  1452   000816  EF0F  F004         	goto	u2710
  1453   00081A                     u2711:
  1454   00081A  EF76  F004         	goto	l215
  1455   00081E                     u2710:
  1456   00081E                     
  1457                           ;main.c: 442:                     NUM = NUM + 1;
  1458   00081E  0E01               	movlw	1
  1459   000820  2413               	addwf	_NUM^0,w,c
  1460   000822  6E13               	movwf	_NUM^0,c
  1461   000824  0E00               	movlw	0
  1462   000826  2014               	addwfc	(_NUM+1)^0,w,c
  1463   000828  6E14               	movwf	(_NUM+1)^0,c
  1464   00082A                     
  1465                           ;main.c: 444:                     WriteSTLED316SData(NUM, vibration_mode);
  1466   00082A  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1467   00082E  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1468   000832  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1469   000836  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1470   00083A                     
  1471                           ;main.c: 445:                     _delay((unsigned long)((250)*(8000000/4000.0)));
  1472   00083A  0E03               	movlw	3
  1473   00083C  6E4D               	movwf	(??_main+1)^0,c
  1474   00083E  0E8A               	movlw	138
  1475   000840  6E4C               	movwf	??_main^0,c
  1476   000842  0E56               	movlw	86
  1477   000844                     u3317:
  1478   000844  2EE8               	decfsz	wreg,f,c
  1479   000846  D7FE               	bra	u3317
  1480   000848  2E4C               	decfsz	??_main^0,f,c
  1481   00084A  D7FC               	bra	u3317
  1482   00084C  2E4D               	decfsz	(??_main+1)^0,f,c
  1483   00084E  D7FA               	bra	u3317
  1484                           
  1485                           ;main.c: 446:                     while (PORTBbits.RB3 == 0){
  1486   000850  EF6F  F004         	goto	l3978
  1487   000854                     l3960:
  1488                           
  1489                           ;main.c: 447:                       _delay((unsigned long)((1000)*(8000000/4000.0)));
  1490   000854  0E0B               	movlw	11
  1491   000856  6E4D               	movwf	(??_main+1)^0,c
  1492   000858  0E26               	movlw	38
  1493   00085A  6E4C               	movwf	??_main^0,c
  1494   00085C  0E5E               	movlw	94
  1495   00085E                     u3327:
  1496   00085E  2EE8               	decfsz	wreg,f,c
  1497   000860  D7FE               	bra	u3327
  1498   000862  2E4C               	decfsz	??_main^0,f,c
  1499   000864  D7FC               	bra	u3327
  1500   000866  2E4D               	decfsz	(??_main+1)^0,f,c
  1501   000868  D7FA               	bra	u3327
  1502   00086A                     
  1503                           ;main.c: 451:                       if(PORTBbits.RB3 == 0 && NUM <= 89)
  1504   00086A  B681               	btfsc	129,3,c	;volatile
  1505   00086C  EF3A  F004         	goto	u2721
  1506   000870  EF3C  F004         	goto	u2720
  1507   000874                     u2721:
  1508   000874  EF55  F004         	goto	l3970
  1509   000878                     u2720:
  1510   000878  5014               	movf	(_NUM+1)^0,w,c
  1511   00087A  E107               	bnz	u2731
  1512   00087C  0E5A               	movlw	90
  1513   00087E  5C13               	subwf	_NUM^0,w,c
  1514   000880  B0D8               	btfsc	status,0,c
  1515   000882  EF45  F004         	goto	u2731
  1516   000886  EF47  F004         	goto	u2730
  1517   00088A                     u2731:
  1518   00088A  EF55  F004         	goto	l3970
  1519   00088E                     u2730:
  1520   00088E                     
  1521                           ;main.c: 452:                       {;main.c: 453:                         NUM = NUM + 1
      +                          0;
  1522   00088E  0E0A               	movlw	10
  1523   000890  2413               	addwf	_NUM^0,w,c
  1524   000892  6E13               	movwf	_NUM^0,c
  1525   000894  0E00               	movlw	0
  1526   000896  2014               	addwfc	(_NUM+1)^0,w,c
  1527   000898  6E14               	movwf	(_NUM+1)^0,c
  1528   00089A                     
  1529                           ;main.c: 454:                         WriteSTLED316SData(NUM, vibration_mode);
  1530   00089A  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1531   00089E  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1532   0008A2  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1533   0008A6  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1534   0008AA                     l3970:
  1535                           
  1536                           ;main.c: 459:                       if(PORTBbits.RB3 == 0 && PORTAbits.RA5 == 0)
  1537   0008AA  B681               	btfsc	129,3,c	;volatile
  1538   0008AC  EF5A  F004         	goto	u2741
  1539   0008B0  EF5C  F004         	goto	u2740
  1540   0008B4                     u2741:
  1541   0008B4  EF6F  F004         	goto	l3978
  1542   0008B8                     u2740:
  1543   0008B8  BA80               	btfsc	128,5,c	;volatile
  1544   0008BA  EF61  F004         	goto	u2751
  1545   0008BE  EF63  F004         	goto	u2750
  1546   0008C2                     u2751:
  1547   0008C2  EF6F  F004         	goto	l3978
  1548   0008C6                     u2750:
  1549   0008C6                     
  1550                           ;main.c: 460:                       {;main.c: 461:                           NUM = 0;
  1551   0008C6  0E00               	movlw	0
  1552   0008C8  6E14               	movwf	(_NUM+1)^0,c
  1553   0008CA  0E00               	movlw	0
  1554   0008CC  6E13               	movwf	_NUM^0,c
  1555   0008CE                     
  1556                           ;main.c: 462:                           WriteSTLED316SData(NUM, vibration_mode);
  1557   0008CE  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1558   0008D2  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1559   0008D6  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1560   0008DA  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1561   0008DE                     l3978:
  1562                           
  1563                           ;main.c: 446:                     while (PORTBbits.RB3 == 0){
  1564   0008DE  A681               	btfss	129,3,c	;volatile
  1565   0008E0  EF74  F004         	goto	u2761
  1566   0008E4  EF76  F004         	goto	u2760
  1567   0008E8                     u2761:
  1568   0008E8  EF2A  F004         	goto	l3960
  1569   0008EC                     u2760:
  1570   0008EC                     l215:
  1571                           
  1572                           ;main.c: 467:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  1573   0008EC  BA80               	btfsc	128,5,c	;volatile
  1574   0008EE  EF7B  F004         	goto	u2771
  1575   0008F2  EF7D  F004         	goto	u2770
  1576   0008F6                     u2771:
  1577   0008F6  EFED  F004         	goto	l221
  1578   0008FA                     u2770:
  1579   0008FA  5013               	movf	_NUM^0,w,c
  1580   0008FC  1014               	iorwf	(_NUM+1)^0,w,c
  1581   0008FE  B4D8               	btfsc	status,2,c
  1582   000900  EF84  F004         	goto	u2781
  1583   000904  EF86  F004         	goto	u2780
  1584   000908                     u2781:
  1585   000908  EFED  F004         	goto	l221
  1586   00090C                     u2780:
  1587   00090C                     
  1588                           ;main.c: 468:                     NUM = NUM - 1;
  1589   00090C  0EFF               	movlw	255
  1590   00090E  2413               	addwf	_NUM^0,w,c
  1591   000910  6E13               	movwf	_NUM^0,c
  1592   000912  0EFF               	movlw	255
  1593   000914  2014               	addwfc	(_NUM+1)^0,w,c
  1594   000916  6E14               	movwf	(_NUM+1)^0,c
  1595   000918                     
  1596                           ;main.c: 470:                     WriteSTLED316SData(NUM, vibration_mode);
  1597   000918  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1598   00091C  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1599   000920  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1600   000924  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1601   000928                     
  1602                           ;main.c: 471:                     _delay((unsigned long)((250)*(8000000/4000.0)));
  1603   000928  0E03               	movlw	3
  1604   00092A  6E4D               	movwf	(??_main+1)^0,c
  1605   00092C  0E8A               	movlw	138
  1606   00092E  6E4C               	movwf	??_main^0,c
  1607   000930  0E56               	movlw	86
  1608   000932                     u3337:
  1609   000932  2EE8               	decfsz	wreg,f,c
  1610   000934  D7FE               	bra	u3337
  1611   000936  2E4C               	decfsz	??_main^0,f,c
  1612   000938  D7FC               	bra	u3337
  1613   00093A  2E4D               	decfsz	(??_main+1)^0,f,c
  1614   00093C  D7FA               	bra	u3337
  1615                           
  1616                           ;main.c: 472:                     while (PORTAbits.RA5 == 0){
  1617   00093E  EFE6  F004         	goto	l4006
  1618   000942                     l3988:
  1619                           
  1620                           ;main.c: 473:                       _delay((unsigned long)((1000)*(8000000/4000.0)));
  1621   000942  0E0B               	movlw	11
  1622   000944  6E4D               	movwf	(??_main+1)^0,c
  1623   000946  0E26               	movlw	38
  1624   000948  6E4C               	movwf	??_main^0,c
  1625   00094A  0E5E               	movlw	94
  1626   00094C                     u3347:
  1627   00094C  2EE8               	decfsz	wreg,f,c
  1628   00094E  D7FE               	bra	u3347
  1629   000950  2E4C               	decfsz	??_main^0,f,c
  1630   000952  D7FC               	bra	u3347
  1631   000954  2E4D               	decfsz	(??_main+1)^0,f,c
  1632   000956  D7FA               	bra	u3347
  1633   000958                     
  1634                           ;main.c: 477:                       if(PORTAbits.RA5 == 0 && NUM >= 10){
  1635   000958  BA80               	btfsc	128,5,c	;volatile
  1636   00095A  EFB1  F004         	goto	u2791
  1637   00095E  EFB3  F004         	goto	u2790
  1638   000962                     u2791:
  1639   000962  EFCC  F004         	goto	l3998
  1640   000966                     u2790:
  1641   000966  5014               	movf	(_NUM+1)^0,w,c
  1642   000968  E109               	bnz	u2800
  1643   00096A  0E0A               	movlw	10
  1644   00096C  5C13               	subwf	_NUM^0,w,c
  1645   00096E  A0D8               	btfss	status,0,c
  1646   000970  EFBC  F004         	goto	u2801
  1647   000974  EFBE  F004         	goto	u2800
  1648   000978                     u2801:
  1649   000978  EFCC  F004         	goto	l3998
  1650   00097C                     u2800:
  1651   00097C                     
  1652                           ;main.c: 478:                         NUM = NUM - 10;
  1653   00097C  0EF6               	movlw	246
  1654   00097E  2413               	addwf	_NUM^0,w,c
  1655   000980  6E13               	movwf	_NUM^0,c
  1656   000982  0EFF               	movlw	255
  1657   000984  2014               	addwfc	(_NUM+1)^0,w,c
  1658   000986  6E14               	movwf	(_NUM+1)^0,c
  1659   000988                     
  1660                           ;main.c: 479:                         WriteSTLED316SData(NUM, vibration_mode);
  1661   000988  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1662   00098C  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1663   000990  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1664   000994  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1665   000998                     l3998:
  1666                           
  1667                           ;main.c: 484:                       if(PORTAbits.RA5 == 0 && PORTBbits.RB3 == 0)
  1668   000998  BA80               	btfsc	128,5,c	;volatile
  1669   00099A  EFD1  F004         	goto	u2811
  1670   00099E  EFD3  F004         	goto	u2810
  1671   0009A2                     u2811:
  1672   0009A2  EFE6  F004         	goto	l4006
  1673   0009A6                     u2810:
  1674   0009A6  B681               	btfsc	129,3,c	;volatile
  1675   0009A8  EFD8  F004         	goto	u2821
  1676   0009AC  EFDA  F004         	goto	u2820
  1677   0009B0                     u2821:
  1678   0009B0  EFE6  F004         	goto	l4006
  1679   0009B4                     u2820:
  1680   0009B4                     
  1681                           ;main.c: 485:                       {;main.c: 486:                           NUM = 0;
  1682   0009B4  0E00               	movlw	0
  1683   0009B6  6E14               	movwf	(_NUM+1)^0,c
  1684   0009B8  0E00               	movlw	0
  1685   0009BA  6E13               	movwf	_NUM^0,c
  1686   0009BC                     
  1687                           ;main.c: 487:                           WriteSTLED316SData(NUM, vibration_mode);
  1688   0009BC  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1689   0009C0  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1690   0009C4  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1691   0009C8  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1692   0009CC                     l4006:
  1693                           
  1694                           ;main.c: 472:                     while (PORTAbits.RA5 == 0){
  1695   0009CC  AA80               	btfss	128,5,c	;volatile
  1696   0009CE  EFEB  F004         	goto	u2831
  1697   0009D2  EFED  F004         	goto	u2830
  1698   0009D6                     u2831:
  1699   0009D6  EFA1  F004         	goto	l3988
  1700   0009DA                     u2830:
  1701   0009DA                     l221:
  1702                           
  1703                           ;main.c: 492:                 if (PORTAbits.RA4 == 0 && NUM <= 89) {
  1704   0009DA  B880               	btfsc	128,4,c	;volatile
  1705   0009DC  EFF2  F004         	goto	u2841
  1706   0009E0  EFF4  F004         	goto	u2840
  1707   0009E4                     u2841:
  1708   0009E4  EF0C  F005         	goto	l227
  1709   0009E8                     u2840:
  1710   0009E8  5014               	movf	(_NUM+1)^0,w,c
  1711   0009EA  E107               	bnz	u2851
  1712   0009EC  0E5A               	movlw	90
  1713   0009EE  5C13               	subwf	_NUM^0,w,c
  1714   0009F0  B0D8               	btfsc	status,0,c
  1715   0009F2  EFFD  F004         	goto	u2851
  1716   0009F6  EFFF  F004         	goto	u2850
  1717   0009FA                     u2851:
  1718   0009FA  EF0C  F005         	goto	l227
  1719   0009FE                     u2850:
  1720   0009FE                     
  1721                           ;main.c: 493:                     NUM = NUM + 10;
  1722   0009FE  0E0A               	movlw	10
  1723   000A00  2413               	addwf	_NUM^0,w,c
  1724   000A02  6E13               	movwf	_NUM^0,c
  1725   000A04  0E00               	movlw	0
  1726   000A06  2014               	addwfc	(_NUM+1)^0,w,c
  1727   000A08  6E14               	movwf	(_NUM+1)^0,c
  1728   000A0A                     l228:
  1729   000A0A  A880               	btfss	128,4,c	;volatile
  1730   000A0C  EF0A  F005         	goto	u2861
  1731   000A10  EF0C  F005         	goto	u2860
  1732   000A14                     u2861:
  1733   000A14  EF05  F005         	goto	l228
  1734   000A18                     u2860:
  1735   000A18                     l227:
  1736                           
  1737                           ;main.c: 497:                 if (PORTAbits.RA3 == 0 && NUM >= 10) {
  1738   000A18  B680               	btfsc	128,3,c	;volatile
  1739   000A1A  EF11  F005         	goto	u2871
  1740   000A1E  EF13  F005         	goto	u2870
  1741   000A22                     u2871:
  1742   000A22  EF2B  F005         	goto	l231
  1743   000A26                     u2870:
  1744   000A26  5014               	movf	(_NUM+1)^0,w,c
  1745   000A28  E109               	bnz	u2880
  1746   000A2A  0E0A               	movlw	10
  1747   000A2C  5C13               	subwf	_NUM^0,w,c
  1748   000A2E  A0D8               	btfss	status,0,c
  1749   000A30  EF1C  F005         	goto	u2881
  1750   000A34  EF1E  F005         	goto	u2880
  1751   000A38                     u2881:
  1752   000A38  EF2B  F005         	goto	l231
  1753   000A3C                     u2880:
  1754   000A3C                     
  1755                           ;main.c: 498:                     NUM = NUM - 10;
  1756   000A3C  0EF6               	movlw	246
  1757   000A3E  2413               	addwf	_NUM^0,w,c
  1758   000A40  6E13               	movwf	_NUM^0,c
  1759   000A42  0EFF               	movlw	255
  1760   000A44  2014               	addwfc	(_NUM+1)^0,w,c
  1761   000A46  6E14               	movwf	(_NUM+1)^0,c
  1762   000A48                     l232:
  1763   000A48  A680               	btfss	128,3,c	;volatile
  1764   000A4A  EF29  F005         	goto	u2891
  1765   000A4E  EF2B  F005         	goto	u2890
  1766   000A52                     u2891:
  1767   000A52  EF24  F005         	goto	l232
  1768   000A56                     u2890:
  1769   000A56                     l231:
  1770                           
  1771                           ;main.c: 502:                 NUM_REC = NUM;
  1772   000A56  C013  F00F         	movff	_NUM,_NUM_REC
  1773   000A5A  C014  F010         	movff	_NUM+1,_NUM_REC+1
  1774   000A5E                     
  1775                           ;main.c: 503:                 WriteSTLED316SData(NUM, vibration_mode);
  1776   000A5E  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1777   000A62  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1778   000A66  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1779   000A6A  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1780   000A6E                     
  1781                           ;main.c: 508:                 if(dispense == 1)
  1782   000A6E  0403               	decf	_dispense^0,w,c
  1783   000A70  1004               	iorwf	(_dispense+1)^0,w,c
  1784   000A72  A4D8               	btfss	status,2,c
  1785   000A74  EF3E  F005         	goto	u2901
  1786   000A78  EF40  F005         	goto	u2900
  1787   000A7C                     u2901:
  1788   000A7C  EF50  F005         	goto	l4028
  1789   000A80                     u2900:
  1790   000A80                     
  1791                           ;main.c: 509:                 {;main.c: 510:                     Busy = 1;
  1792   000A80  0E01               	movlw	1
  1793   000A82  6E2D               	movwf	_Busy^0,c
  1794                           
  1795                           ;main.c: 511:                     errorcounter = 30;
  1796   000A84  0E1E               	movlw	30
  1797   000A86  6E52               	movwf	_errorcounter^0,c	;volatile
  1798   000A88  0E00               	movlw	0
  1799   000A8A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1800   000A8C  0E00               	movlw	0
  1801   000A8E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1802   000A90  0E00               	movlw	0
  1803   000A92  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1804   000A94                     
  1805                           ;main.c: 512:                     Homing_Again_Manual();
  1806   000A94  EC99  F007         	call	_Homing_Again_Manual	;wreg free
  1807   000A98                     
  1808                           ;main.c: 513:                     Stop = 0;
  1809   000A98  0E00               	movlw	0
  1810   000A9A  6E2F               	movwf	_Stop^0,c
  1811   000A9C                     
  1812                           ;main.c: 514:                     Busy = 0;
  1813   000A9C  0E00               	movlw	0
  1814   000A9E  6E2D               	movwf	_Busy^0,c
  1815   000AA0                     l4028:
  1816                           
  1817                           ;main.c: 528:                 if (Serial_Flag == 1) {
  1818   000AA0  0431               	decf	_Serial_Flag^0,w,c
  1819   000AA2  A4D8               	btfss	status,2,c
  1820   000AA4  EF56  F005         	goto	u2911
  1821   000AA8  EF58  F005         	goto	u2910
  1822   000AAC                     u2911:
  1823   000AAC  EF7E  F007         	goto	l4202
  1824   000AB0                     u2910:
  1825   000AB0  EF54  F007         	goto	l4198
  1826   000AB4                     l4032:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 533:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  1830   000AB4  0EF1               	movlw	241
  1831   000AB6  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  1832   000AB8  A4D8               	btfss	status,2,c
  1833   000ABA  EF61  F005         	goto	u2921
  1834   000ABE  EF63  F005         	goto	u2920
  1835   000AC2                     u2921:
  1836   000AC2  EF7F  F005         	goto	l4042
  1837   000AC6                     u2920:
  1838   000AC6                     
  1839                           ; BSR set to: 0
  1840   000AC6  502D               	movf	_Busy^0,w,c
  1841   000AC8  A4D8               	btfss	status,2,c
  1842   000ACA  EF69  F005         	goto	u2931
  1843   000ACE  EF6B  F005         	goto	u2930
  1844   000AD2                     u2931:
  1845   000AD2  EF7F  F005         	goto	l4042
  1846   000AD6                     u2930:
  1847   000AD6                     
  1848                           ; BSR set to: 0
  1849                           ;main.c: 534:                             {;main.c: 535:                                
      +                           Stop = 0;
  1850   000AD6  0E00               	movlw	0
  1851   000AD8  6E2F               	movwf	_Stop^0,c
  1852                           
  1853                           ;main.c: 536:                                 Busy = 1;
  1854   000ADA  0E01               	movlw	1
  1855   000ADC  6E2D               	movwf	_Busy^0,c
  1856   000ADE                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 537:                                 NUM = NUM_REC;
  1859   000ADE  C00F  F013         	movff	_NUM_REC,_NUM
  1860   000AE2  C010  F014         	movff	_NUM_REC+1,_NUM+1
  1861                           
  1862                           ;main.c: 539:                                 errorcounter = 30;
  1863   000AE6  0E1E               	movlw	30
  1864   000AE8  6E52               	movwf	_errorcounter^0,c	;volatile
  1865   000AEA  0E00               	movlw	0
  1866   000AEC  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1867   000AEE  0E00               	movlw	0
  1868   000AF0  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1869   000AF2  0E00               	movlw	0
  1870   000AF4  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1871   000AF6                     
  1872                           ; BSR set to: 0
  1873                           ;main.c: 540:                                 Homing_Again_Auto();
  1874   000AF6  ECAA  F009         	call	_Homing_Again_Auto	;wreg free
  1875                           
  1876                           ;main.c: 542:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  1877   000AFA  EFDD  F005         	goto	l4072
  1878   000AFE                     l4042:
  1879                           
  1880                           ; BSR set to: 0
  1881   000AFE  0EF2               	movlw	242
  1882   000B00  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  1883   000B02  A4D8               	btfss	status,2,c
  1884   000B04  EF86  F005         	goto	u2941
  1885   000B08  EF88  F005         	goto	u2940
  1886   000B0C                     u2941:
  1887   000B0C  EFDD  F005         	goto	l4072
  1888   000B10                     u2940:
  1889   000B10                     
  1890                           ; BSR set to: 0
  1891   000B10  502D               	movf	_Busy^0,w,c
  1892   000B12  A4D8               	btfss	status,2,c
  1893   000B14  EF8E  F005         	goto	u2951
  1894   000B18  EF90  F005         	goto	u2950
  1895   000B1C                     u2951:
  1896   000B1C  EFDD  F005         	goto	l4072
  1897   000B20                     u2950:
  1898   000B20                     
  1899                           ; BSR set to: 0
  1900                           ;main.c: 543:                             {;main.c: 544:                                
      +                           Stop = 0;
  1901   000B20  0E00               	movlw	0
  1902   000B22  6E2F               	movwf	_Stop^0,c
  1903                           
  1904                           ;main.c: 545:                                 Busy = 1;
  1905   000B24  0E01               	movlw	1
  1906   000B26  6E2D               	movwf	_Busy^0,c
  1907   000B28                     
  1908                           ; BSR set to: 0
  1909                           ;main.c: 546:                                 NUM = NUM_REC;
  1910   000B28  C00F  F013         	movff	_NUM_REC,_NUM
  1911   000B2C  C010  F014         	movff	_NUM_REC+1,_NUM+1
  1912   000B30                     
  1913                           ; BSR set to: 0
  1914                           ;main.c: 547:                                 WriteSTLED316SData(NUM, vibration_mode);
  1915   000B30  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1916   000B34  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1917   000B38  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1918   000B3C  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  1919   000B40                     
  1920                           ;main.c: 549:                                 errorcounter = 30;
  1921   000B40  0E1E               	movlw	30
  1922   000B42  6E52               	movwf	_errorcounter^0,c	;volatile
  1923   000B44  0E00               	movlw	0
  1924   000B46  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1925   000B48  0E00               	movlw	0
  1926   000B4A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1927   000B4C  0E00               	movlw	0
  1928   000B4E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1929   000B50                     
  1930                           ;main.c: 550:                                 Homing_Again_Manual();
  1931   000B50  EC99  F007         	call	_Homing_Again_Manual	;wreg free
  1932   000B54                     
  1933                           ;main.c: 553:                                 if (Stop == 0) {
  1934   000B54  502F               	movf	_Stop^0,w,c
  1935   000B56  A4D8               	btfss	status,2,c
  1936   000B58  EFB0  F005         	goto	u2961
  1937   000B5C  EFB2  F005         	goto	u2960
  1938   000B60                     u2961:
  1939   000B60  EFDD  F005         	goto	l4072
  1940   000B64                     u2960:
  1941   000B64                     
  1942                           ;main.c: 554:                                     Serial_Buffer_Out[0] = 0xA5;
  1943   000B64  0EA5               	movlw	165
  1944   000B66  0100               	movlb	0	; () banked
  1945   000B68  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1946                           
  1947                           ;main.c: 555:                                     Serial_Buffer_Out[1] = 0x44;
  1948   000B6A  0E44               	movlw	68
  1949   000B6C  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  1950                           
  1951                           ;main.c: 556:                                     Serial_Buffer_Out[2] = 0xF9;
  1952   000B6E  0EF9               	movlw	249
  1953   000B70  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  1954                           
  1955                           ;main.c: 557:                                     Serial_Buffer_Out[3] = 0X3D;
  1956   000B72  0E3D               	movlw	61
  1957   000B74  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  1958                           
  1959                           ;main.c: 558:                                     Serial_Buffer_Out[4] = 0x5A;
  1960   000B76  0E5A               	movlw	90
  1961   000B78  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  1962   000B7A                     
  1963                           ; BSR set to: 0
  1964                           ;main.c: 560:                                     INTCONbits.GIE = 0;
  1965   000B7A  9EF2               	bcf	242,7,c	;volatile
  1966                           
  1967                           ;main.c: 561:                                     for (i = 0; i < 5; i++) {
  1968   000B7C  0E00               	movlw	0
  1969   000B7E  6E0E               	movwf	(_i+1)^0,c
  1970   000B80  0E00               	movlw	0
  1971   000B82  6E0D               	movwf	_i^0,c
  1972   000B84                     l4062:
  1973   000B84  500E               	movf	(_i+1)^0,w,c
  1974   000B86  E109               	bnz	u2970
  1975   000B88  0E05               	movlw	5
  1976   000B8A  5C0D               	subwf	_i^0,w,c
  1977   000B8C  A0D8               	btfss	status,0,c
  1978   000B8E  EFCB  F005         	goto	u2971
  1979   000B92  EFCD  F005         	goto	u2970
  1980   000B96                     u2971:
  1981   000B96  EFCF  F005         	goto	l4066
  1982   000B9A                     u2970:
  1983   000B9A  EFDC  F005         	goto	l245
  1984   000B9E                     l4066:
  1985                           
  1986                           ;main.c: 562:                                         Write1USART(Serial_Buffer_Out[i]);
  1987   000B9E  0E60               	movlw	low _Serial_Buffer_Out
  1988   000BA0  240D               	addwf	_i^0,w,c
  1989   000BA2  6ED9               	movwf	fsr2l,c
  1990   000BA4  0E00               	movlw	high _Serial_Buffer_Out
  1991   000BA6  200E               	addwfc	(_i+1)^0,w,c
  1992   000BA8  6EDA               	movwf	fsr2h,c
  1993   000BAA  50DF               	movf	indf2,w,c
  1994   000BAC  ECE5  F010         	call	_Write1USART
  1995   000BB0                     
  1996                           ;main.c: 563:                                     }
  1997   000BB0  4A0D               	infsnz	_i^0,f,c
  1998   000BB2  2A0E               	incf	(_i+1)^0,f,c
  1999   000BB4  EFC2  F005         	goto	l4062
  2000   000BB8                     l245:
  2001                           
  2002                           ;main.c: 564:                                     INTCONbits.GIE = 1;
  2003   000BB8  8EF2               	bsf	242,7,c	;volatile
  2004   000BBA                     l4072:
  2005                           
  2006                           ;main.c: 568:                             flush();
  2007   000BBA  ECFD  F00F         	call	_flush	;wreg free
  2008                           
  2009                           ;main.c: 569:                             flushOut();
  2010   000BBE  EC1A  F010         	call	_flushOut	;wreg free
  2011   000BC2                     
  2012                           ;main.c: 570:                             Stop = 0;
  2013   000BC2  0E00               	movlw	0
  2014   000BC4  6E2F               	movwf	_Stop^0,c
  2015   000BC6                     l4076:
  2016                           
  2017                           ;main.c: 571:                             Busy = 0;
  2018   000BC6  0E00               	movlw	0
  2019   000BC8  6E2D               	movwf	_Busy^0,c
  2020                           
  2021                           ;main.c: 572:                             break;
  2022   000BCA  EF76  F007         	goto	l4200
  2023   000BCE                     l4078:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;main.c: 577:                             if (Busy == 0) {
  2027   000BCE  502D               	movf	_Busy^0,w,c
  2028   000BD0  A4D8               	btfss	status,2,c
  2029   000BD2  EFED  F005         	goto	u2981
  2030   000BD6  EFEF  F005         	goto	u2980
  2031   000BDA                     u2981:
  2032   000BDA  EF76  F007         	goto	l4200
  2033   000BDE                     u2980:
  2034   000BDE                     
  2035                           ; BSR set to: 0
  2036                           ;main.c: 578:                                 Busy = 1;
  2037   000BDE  0E01               	movlw	1
  2038   000BE0  6E2D               	movwf	_Busy^0,c
  2039   000BE2                     
  2040                           ; BSR set to: 0
  2041                           ;main.c: 582:                                 pause_Time = Serial_Buffer[2];
  2042   000BE2  C082  F029         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  2043                           
  2044                           ;main.c: 583:                                 switch (pause_Time) {
  2045   000BE6  EF1B  F006         	goto	l4098
  2046   000BEA                     l4084:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;main.c: 586:                                         Motor_Pause_Time = 0;
  2050   000BEA  0E00               	movlw	0
  2051   000BEC  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2052   000BEE  0E00               	movlw	0
  2053   000BF0  6E15               	movwf	_Motor_Pause_Time^0,c
  2054                           
  2055                           ;main.c: 587:                                         pause_Time = 0x30;
  2056   000BF2  0E30               	movlw	48
  2057   000BF4  6E29               	movwf	_pause_Time^0,c	;volatile
  2058                           
  2059                           ;main.c: 588:                                         break;
  2060   000BF6  EF40  F006         	goto	l252
  2061   000BFA                     l4086:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;main.c: 591:                                         Motor_Pause_Time = 1000;
  2065   000BFA  0E03               	movlw	3
  2066   000BFC  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2067   000BFE  0EE8               	movlw	232
  2068   000C00  6E15               	movwf	_Motor_Pause_Time^0,c
  2069                           
  2070                           ;main.c: 592:                                         break;
  2071   000C02  EF40  F006         	goto	l252
  2072   000C06                     l4088:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 595:                                         Motor_Pause_Time = 2000;
  2076   000C06  0E07               	movlw	7
  2077   000C08  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2078   000C0A  0ED0               	movlw	208
  2079   000C0C  6E15               	movwf	_Motor_Pause_Time^0,c
  2080                           
  2081                           ;main.c: 596:                                         break;
  2082   000C0E  EF40  F006         	goto	l252
  2083   000C12                     l4090:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 599:                                         Motor_Pause_Time = 3000;
  2087   000C12  0E0B               	movlw	11
  2088   000C14  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2089   000C16  0EB8               	movlw	184
  2090   000C18  6E15               	movwf	_Motor_Pause_Time^0,c
  2091                           
  2092                           ;main.c: 600:                                         break;
  2093   000C1A  EF40  F006         	goto	l252
  2094   000C1E                     l4092:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 603:                                         Motor_Pause_Time = 4000;
  2098   000C1E  0E0F               	movlw	15
  2099   000C20  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2100   000C22  0EA0               	movlw	160
  2101   000C24  6E15               	movwf	_Motor_Pause_Time^0,c
  2102                           
  2103                           ;main.c: 604:                                         break;
  2104   000C26  EF40  F006         	goto	l252
  2105   000C2A                     l4094:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;main.c: 607:                                         Motor_Pause_Time = 5000;
  2109   000C2A  0E13               	movlw	19
  2110   000C2C  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2111   000C2E  0E88               	movlw	136
  2112   000C30  6E15               	movwf	_Motor_Pause_Time^0,c
  2113                           
  2114                           ;main.c: 608:                                         break;
  2115   000C32  EF40  F006         	goto	l252
  2116   000C36                     l4098:
  2117                           
  2118                           ; BSR set to: 0
  2119   000C36  5029               	movf	_pause_Time^0,w,c	;volatile
  2120   000C38  6E4C               	movwf	??_main^0,c
  2121   000C3A  6A4D               	clrf	(??_main+1)^0,c
  2122                           
  2123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2124                           ; Switch size 1, requested type "simple"
  2125                           ; Number of cases is 1, Range of values is 0 to 0
  2126                           ; switch strategies available:
  2127                           ; Name         Instructions Cycles
  2128                           ; simple_byte            4     3 (average)
  2129                           ;	Chosen strategy is simple_byte
  2130   000C3C  504D               	movf	(??_main+1)^0,w,c
  2131   000C3E  0A00               	xorlw	0	; case 0
  2132   000C40  B4D8               	btfsc	status,2,c
  2133   000C42  EF25  F006         	goto	l4682
  2134   000C46  EFF5  F005         	goto	l4084
  2135   000C4A                     l4682:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ; Switch size 1, requested type "simple"
  2139                           ; Number of cases is 6, Range of values is 48 to 53
  2140                           ; switch strategies available:
  2141                           ; Name         Instructions Cycles
  2142                           ; simple_byte           19    10 (average)
  2143                           ;	Chosen strategy is simple_byte
  2144   000C4A  504C               	movf	??_main^0,w,c
  2145   000C4C  0A30               	xorlw	48	; case 48
  2146   000C4E  B4D8               	btfsc	status,2,c
  2147   000C50  EFF5  F005         	goto	l4084
  2148   000C54  0A01               	xorlw	1	; case 49
  2149   000C56  B4D8               	btfsc	status,2,c
  2150   000C58  EFFD  F005         	goto	l4086
  2151   000C5C  0A03               	xorlw	3	; case 50
  2152   000C5E  B4D8               	btfsc	status,2,c
  2153   000C60  EF03  F006         	goto	l4088
  2154   000C64  0A01               	xorlw	1	; case 51
  2155   000C66  B4D8               	btfsc	status,2,c
  2156   000C68  EF09  F006         	goto	l4090
  2157   000C6C  0A07               	xorlw	7	; case 52
  2158   000C6E  B4D8               	btfsc	status,2,c
  2159   000C70  EF0F  F006         	goto	l4092
  2160   000C74  0A01               	xorlw	1	; case 53
  2161   000C76  B4D8               	btfsc	status,2,c
  2162   000C78  EF15  F006         	goto	l4094
  2163   000C7C  EFF5  F005         	goto	l4084
  2164   000C80                     l252:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 613:                                 INTCONbits.GIE = 0;
  2168   000C80  9EF2               	bcf	242,7,c	;volatile
  2169   000C82                     
  2170                           ; BSR set to: 0
  2171                           ;main.c: 614:                                 write_i2c(0x0060, pause_Time);
  2172   000C82  0E60               	movlw	96
  2173   000C84  6E46               	movwf	write_i2c@address^0,c
  2174   000C86  0E00               	movlw	0
  2175   000C88  6E47               	movwf	(write_i2c@address+1)^0,c
  2176   000C8A  0E00               	movlw	0
  2177   000C8C  6E48               	movwf	(write_i2c@address+2)^0,c
  2178   000C8E  0E00               	movlw	0
  2179   000C90  6E49               	movwf	(write_i2c@address+3)^0,c
  2180   000C92  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
  2181   000C96  6A4B               	clrf	(write_i2c@data+1)^0,c
  2182   000C98  EC78  F00F         	call	_write_i2c	;wreg free
  2183   000C9C                     
  2184                           ;main.c: 615:                                 INTCONbits.GIE = 1;
  2185   000C9C  8EF2               	bsf	242,7,c	;volatile
  2186   000C9E                     
  2187                           ;main.c: 617:                                 flush();
  2188   000C9E  ECFD  F00F         	call	_flush	;wreg free
  2189   000CA2  EFE3  F005         	goto	l4076
  2190   000CA6                     l4108:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;main.c: 625:                             if (Busy == 0) {
  2194   000CA6  502D               	movf	_Busy^0,w,c
  2195   000CA8  A4D8               	btfss	status,2,c
  2196   000CAA  EF59  F006         	goto	u2991
  2197   000CAE  EF5B  F006         	goto	u2990
  2198   000CB2                     u2991:
  2199   000CB2  EF76  F007         	goto	l4200
  2200   000CB6                     u2990:
  2201   000CB6                     
  2202                           ; BSR set to: 0
  2203                           ;main.c: 626:                                 if (Serial_Buffer[2] == 0x00) {
  2204   000CB6  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  2205   000CB8  A4D8               	btfss	status,2,c
  2206   000CBA  EF61  F006         	goto	u3001
  2207   000CBE  EF63  F006         	goto	u3000
  2208   000CC2                     u3001:
  2209   000CC2  EFD0  F006         	goto	l4150
  2210   000CC6                     u3000:
  2211   000CC6                     
  2212                           ; BSR set to: 0
  2213                           ;main.c: 627:                                     Busy = 1;
  2214   000CC6  0E01               	movlw	1
  2215   000CC8  6E2D               	movwf	_Busy^0,c
  2216   000CCA                     
  2217                           ; BSR set to: 0
  2218                           ;main.c: 629:                                     INTCONbits.GIE = 0;
  2219   000CCA  9EF2               	bcf	242,7,c	;volatile
  2220   000CCC                     
  2221                           ; BSR set to: 0
  2222                           ;main.c: 630:                                     pause_Time = read_i2c(0x0060);
  2223   000CCC  0E60               	movlw	96
  2224   000CCE  6E46               	movwf	read_i2c@address^0,c
  2225   000CD0  0E00               	movlw	0
  2226   000CD2  6E47               	movwf	(read_i2c@address+1)^0,c
  2227   000CD4  0E00               	movlw	0
  2228   000CD6  6E48               	movwf	(read_i2c@address+2)^0,c
  2229   000CD8  0E00               	movlw	0
  2230   000CDA  6E49               	movwf	(read_i2c@address+3)^0,c
  2231   000CDC  ECF0  F00E         	call	_read_i2c	;wreg free
  2232   000CE0  5046               	movf	?_read_i2c^0,w,c
  2233   000CE2  6E29               	movwf	_pause_Time^0,c	;volatile
  2234   000CE4                     
  2235                           ;main.c: 631:                                     vib_Time = read_i2c(0x0040);
  2236   000CE4  0E40               	movlw	64
  2237   000CE6  6E46               	movwf	read_i2c@address^0,c
  2238   000CE8  0E00               	movlw	0
  2239   000CEA  6E47               	movwf	(read_i2c@address+1)^0,c
  2240   000CEC  0E00               	movlw	0
  2241   000CEE  6E48               	movwf	(read_i2c@address+2)^0,c
  2242   000CF0  0E00               	movlw	0
  2243   000CF2  6E49               	movwf	(read_i2c@address+3)^0,c
  2244   000CF4  ECF0  F00E         	call	_read_i2c	;wreg free
  2245   000CF8  5046               	movf	?_read_i2c^0,w,c
  2246   000CFA  6E28               	movwf	_vib_Time^0,c	;volatile
  2247   000CFC                     
  2248                           ;main.c: 632:                                     Motor_Speed = read_i2c(0x0030);
  2249   000CFC  0E30               	movlw	48
  2250   000CFE  6E46               	movwf	read_i2c@address^0,c
  2251   000D00  0E00               	movlw	0
  2252   000D02  6E47               	movwf	(read_i2c@address+1)^0,c
  2253   000D04  0E00               	movlw	0
  2254   000D06  6E48               	movwf	(read_i2c@address+2)^0,c
  2255   000D08  0E00               	movlw	0
  2256   000D0A  6E49               	movwf	(read_i2c@address+3)^0,c
  2257   000D0C  ECF0  F00E         	call	_read_i2c	;wreg free
  2258   000D10  C046  F01B         	movff	?_read_i2c,_Motor_Speed
  2259   000D14  C047  F01C         	movff	?_read_i2c+1,_Motor_Speed+1
  2260   000D18                     
  2261                           ;main.c: 633:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2262   000D18  0E50               	movlw	80
  2263   000D1A  6E46               	movwf	read_i2c@address^0,c
  2264   000D1C  0E00               	movlw	0
  2265   000D1E  6E47               	movwf	(read_i2c@address+1)^0,c
  2266   000D20  0E00               	movlw	0
  2267   000D22  6E48               	movwf	(read_i2c@address+2)^0,c
  2268   000D24  0E00               	movlw	0
  2269   000D26  6E49               	movwf	(read_i2c@address+3)^0,c
  2270   000D28  ECF0  F00E         	call	_read_i2c	;wreg free
  2271   000D2C  5046               	movf	?_read_i2c^0,w,c
  2272   000D2E  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  2273   000D30                     
  2274                           ;main.c: 634:                                     INTCONbits.GIE = 1;
  2275   000D30  8EF2               	bsf	242,7,c	;volatile
  2276                           
  2277                           ;main.c: 636:                                     Serial_Buffer_Out[0] = 0x51;
  2278   000D32  0E51               	movlw	81
  2279   000D34  0100               	movlb	0	; () banked
  2280   000D36  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2281   000D38                     
  2282                           ; BSR set to: 0
  2283                           ;main.c: 637:                                     Serial_Buffer_Out[1] = pause_Time;
  2284   000D38  C029  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2285   000D3C                     
  2286                           ; BSR set to: 0
  2287                           ;main.c: 638:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2288   000D3C  C01B  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2289   000D40                     
  2290                           ; BSR set to: 0
  2291                           ;main.c: 639:                                     Serial_Buffer_Out[3] = vib_Time;
  2292   000D40  C028  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2293   000D44                     
  2294                           ; BSR set to: 0
  2295                           ;main.c: 640:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2296   000D44  C027  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2297   000D48                     
  2298                           ; BSR set to: 0
  2299                           ;main.c: 642:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2300   000D48  0E02               	movlw	2
  2301   000D4A  6E4D               	movwf	(??_main+1)^0,c
  2302   000D4C  0E04               	movlw	4
  2303   000D4E  6E4C               	movwf	??_main^0,c
  2304   000D50  0EBA               	movlw	186
  2305   000D52                     u3357:
  2306   000D52  2EE8               	decfsz	wreg,f,c
  2307   000D54  D7FE               	bra	u3357
  2308   000D56  2E4C               	decfsz	??_main^0,f,c
  2309   000D58  D7FC               	bra	u3357
  2310   000D5A  2E4D               	decfsz	(??_main+1)^0,f,c
  2311   000D5C  D7FA               	bra	u3357
  2312   000D5E  D000               	nop2	
  2313   000D60                     
  2314                           ;main.c: 644:                                     INTCONbits.GIE = 0;
  2315   000D60  9EF2               	bcf	242,7,c	;volatile
  2316   000D62                     
  2317                           ;main.c: 645:                                     for (i = 0; i < 5; i++) {
  2318   000D62  0E00               	movlw	0
  2319   000D64  6E0E               	movwf	(_i+1)^0,c
  2320   000D66  0E00               	movlw	0
  2321   000D68  6E0D               	movwf	_i^0,c
  2322   000D6A                     l4140:
  2323   000D6A  500E               	movf	(_i+1)^0,w,c
  2324   000D6C  E109               	bnz	u3010
  2325   000D6E  0E05               	movlw	5
  2326   000D70  5C0D               	subwf	_i^0,w,c
  2327   000D72  A0D8               	btfss	status,0,c
  2328   000D74  EFBE  F006         	goto	u3011
  2329   000D78  EFC0  F006         	goto	u3010
  2330   000D7C                     u3011:
  2331   000D7C  EFC2  F006         	goto	l4144
  2332   000D80                     u3010:
  2333   000D80  EFCF  F006         	goto	l262
  2334   000D84                     l4144:
  2335                           
  2336                           ;main.c: 646:                                         Write1USART(Serial_Buffer_Out[i]);
  2337   000D84  0E60               	movlw	low _Serial_Buffer_Out
  2338   000D86  240D               	addwf	_i^0,w,c
  2339   000D88  6ED9               	movwf	fsr2l,c
  2340   000D8A  0E00               	movlw	high _Serial_Buffer_Out
  2341   000D8C  200E               	addwfc	(_i+1)^0,w,c
  2342   000D8E  6EDA               	movwf	fsr2h,c
  2343   000D90  50DF               	movf	indf2,w,c
  2344   000D92  ECE5  F010         	call	_Write1USART
  2345   000D96                     
  2346                           ;main.c: 647:                                     }
  2347   000D96  4A0D               	infsnz	_i^0,f,c
  2348   000D98  2A0E               	incf	(_i+1)^0,f,c
  2349   000D9A  EFB5  F006         	goto	l4140
  2350   000D9E                     l262:
  2351                           
  2352                           ;main.c: 648:                                     INTCONbits.GIE = 1;
  2353   000D9E  8EF2               	bsf	242,7,c	;volatile
  2354   000DA0                     l4150:
  2355                           
  2356                           ;main.c: 650:                                 flushOut();
  2357   000DA0  EC1A  F010         	call	_flushOut	;wreg free
  2358   000DA4  EFE3  F005         	goto	l4076
  2359   000DA8                     l4154:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;main.c: 687:                             if (Busy == 0) {
  2363   000DA8  502D               	movf	_Busy^0,w,c
  2364   000DAA  A4D8               	btfss	status,2,c
  2365   000DAC  EFDA  F006         	goto	u3021
  2366   000DB0  EFDC  F006         	goto	u3020
  2367   000DB4                     u3021:
  2368   000DB4  EF34  F007         	goto	l4180
  2369   000DB8                     u3020:
  2370   000DB8                     
  2371                           ; BSR set to: 0
  2372                           ;main.c: 688:                                 Busy = 1;
  2373   000DB8  0E01               	movlw	1
  2374   000DBA  6E2D               	movwf	_Busy^0,c
  2375   000DBC                     
  2376                           ; BSR set to: 0
  2377                           ;main.c: 689:                                 vib_Time = Serial_Buffer[2];
  2378   000DBC  C082  F028         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2379                           
  2380                           ;main.c: 691:                                 switch (vib_Time) {
  2381   000DC0  EF02  F007         	goto	l4172
  2382   000DC4                     l4160:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;main.c: 693:                                         Vmotor_Time = 1000;
  2386   000DC4  0E03               	movlw	3
  2387   000DC6  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2388   000DC8  0EE8               	movlw	232
  2389   000DCA  6E56               	movwf	_Vmotor_Time^0,c
  2390                           
  2391                           ;main.c: 694:                                         break;
  2392   000DCC  EF23  F007         	goto	l267
  2393   000DD0                     l4162:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;main.c: 698:                                         Vmotor_Time = 2000;
  2397   000DD0  0E07               	movlw	7
  2398   000DD2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2399   000DD4  0ED0               	movlw	208
  2400   000DD6  6E56               	movwf	_Vmotor_Time^0,c
  2401                           
  2402                           ;main.c: 699:                                         vib_Time = 0x82;
  2403   000DD8  0E82               	movlw	130
  2404   000DDA  6E28               	movwf	_vib_Time^0,c	;volatile
  2405                           
  2406                           ;main.c: 700:                                         break;
  2407   000DDC  EF23  F007         	goto	l267
  2408   000DE0                     l4164:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;main.c: 703:                                         Vmotor_Time = 3000;
  2412   000DE0  0E0B               	movlw	11
  2413   000DE2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2414   000DE4  0EB8               	movlw	184
  2415   000DE6  6E56               	movwf	_Vmotor_Time^0,c
  2416                           
  2417                           ;main.c: 704:                                         break;
  2418   000DE8  EF23  F007         	goto	l267
  2419   000DEC                     l4166:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;main.c: 707:                                         Vmotor_Time = 4000;
  2423   000DEC  0E0F               	movlw	15
  2424   000DEE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2425   000DF0  0EA0               	movlw	160
  2426   000DF2  6E56               	movwf	_Vmotor_Time^0,c
  2427                           
  2428                           ;main.c: 708:                                         break;
  2429   000DF4  EF23  F007         	goto	l267
  2430   000DF8                     l4168:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 711:                                         Vmotor_Time = 5000;
  2434   000DF8  0E13               	movlw	19
  2435   000DFA  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2436   000DFC  0E88               	movlw	136
  2437   000DFE  6E56               	movwf	_Vmotor_Time^0,c
  2438                           
  2439                           ;main.c: 712:                                         break;
  2440   000E00  EF23  F007         	goto	l267
  2441   000E04                     l4172:
  2442                           
  2443                           ; BSR set to: 0
  2444   000E04  5028               	movf	_vib_Time^0,w,c	;volatile
  2445   000E06  6E4C               	movwf	??_main^0,c
  2446   000E08  6A4D               	clrf	(??_main+1)^0,c
  2447                           
  2448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2449                           ; Switch size 1, requested type "simple"
  2450                           ; Number of cases is 1, Range of values is 0 to 0
  2451                           ; switch strategies available:
  2452                           ; Name         Instructions Cycles
  2453                           ; simple_byte            4     3 (average)
  2454                           ;	Chosen strategy is simple_byte
  2455   000E0A  504D               	movf	(??_main+1)^0,w,c
  2456   000E0C  0A00               	xorlw	0	; case 0
  2457   000E0E  B4D8               	btfsc	status,2,c
  2458   000E10  EF0C  F007         	goto	l4684
  2459   000E14  EFE8  F006         	goto	l4162
  2460   000E18                     l4684:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 5, Range of values is 129 to 133
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte           16     9 (average)
  2468                           ;	Chosen strategy is simple_byte
  2469   000E18  504C               	movf	??_main^0,w,c
  2470   000E1A  0A81               	xorlw	129	; case 129
  2471   000E1C  B4D8               	btfsc	status,2,c
  2472   000E1E  EFE2  F006         	goto	l4160
  2473   000E22  0A03               	xorlw	3	; case 130
  2474   000E24  B4D8               	btfsc	status,2,c
  2475   000E26  EFE8  F006         	goto	l4162
  2476   000E2A  0A01               	xorlw	1	; case 131
  2477   000E2C  B4D8               	btfsc	status,2,c
  2478   000E2E  EFF0  F006         	goto	l4164
  2479   000E32  0A07               	xorlw	7	; case 132
  2480   000E34  B4D8               	btfsc	status,2,c
  2481   000E36  EFF6  F006         	goto	l4166
  2482   000E3A  0A01               	xorlw	1	; case 133
  2483   000E3C  B4D8               	btfsc	status,2,c
  2484   000E3E  EFFC  F006         	goto	l4168
  2485   000E42  EFE8  F006         	goto	l4162
  2486   000E46                     l267:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;main.c: 714:                                 INTCONbits.GIE = 0;
  2490   000E46  9EF2               	bcf	242,7,c	;volatile
  2491   000E48                     
  2492                           ; BSR set to: 0
  2493                           ;main.c: 715:                                 write_i2c(0x0040, vib_Time);
  2494   000E48  0E40               	movlw	64
  2495   000E4A  6E46               	movwf	write_i2c@address^0,c
  2496   000E4C  0E00               	movlw	0
  2497   000E4E  6E47               	movwf	(write_i2c@address+1)^0,c
  2498   000E50  0E00               	movlw	0
  2499   000E52  6E48               	movwf	(write_i2c@address+2)^0,c
  2500   000E54  0E00               	movlw	0
  2501   000E56  6E49               	movwf	(write_i2c@address+3)^0,c
  2502   000E58  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  2503   000E5C  6A4B               	clrf	(write_i2c@data+1)^0,c
  2504   000E5E  EC78  F00F         	call	_write_i2c	;wreg free
  2505   000E62                     
  2506                           ;main.c: 716:                                 INTCONbits.GIE = 1;
  2507   000E62  8EF2               	bsf	242,7,c	;volatile
  2508   000E64                     
  2509                           ;main.c: 718:                                 Busy = 0;
  2510   000E64  0E00               	movlw	0
  2511   000E66  6E2D               	movwf	_Busy^0,c
  2512   000E68                     l4180:
  2513                           
  2514                           ;main.c: 723:                             if (Busy == 0) {
  2515   000E68  502D               	movf	_Busy^0,w,c
  2516   000E6A  A4D8               	btfss	status,2,c
  2517   000E6C  EF3A  F007         	goto	u3031
  2518   000E70  EF3C  F007         	goto	u3030
  2519   000E74                     u3031:
  2520   000E74  EF76  F007         	goto	l4200
  2521   000E78                     u3030:
  2522   000E78                     
  2523                           ;main.c: 724:                                 Busy = 1;
  2524   000E78  0E01               	movlw	1
  2525   000E7A  6E2D               	movwf	_Busy^0,c
  2526   000E7C                     
  2527                           ;main.c: 725:                                 delay_motor_stop_time = Serial_Buffer[2];
  2528   000E7C  C082  F027         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2529   000E80                     
  2530                           ;main.c: 726:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2531   000E80  C027  F019         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2532   000E84  6A1A               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2533   000E86                     
  2534                           ;main.c: 728:                                 INTCONbits.GIE = 0;
  2535   000E86  9EF2               	bcf	242,7,c	;volatile
  2536   000E88                     
  2537                           ;main.c: 729:                                 write_i2c(0x0050, delay_motor_stop_time);
  2538   000E88  0E50               	movlw	80
  2539   000E8A  6E46               	movwf	write_i2c@address^0,c
  2540   000E8C  0E00               	movlw	0
  2541   000E8E  6E47               	movwf	(write_i2c@address+1)^0,c
  2542   000E90  0E00               	movlw	0
  2543   000E92  6E48               	movwf	(write_i2c@address+2)^0,c
  2544   000E94  0E00               	movlw	0
  2545   000E96  6E49               	movwf	(write_i2c@address+3)^0,c
  2546   000E98  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2547   000E9C  6A4B               	clrf	(write_i2c@data+1)^0,c
  2548   000E9E  EC78  F00F         	call	_write_i2c	;wreg free
  2549   000EA2                     
  2550                           ;main.c: 730:                                 INTCONbits.GIE = 1;
  2551   000EA2  8EF2               	bsf	242,7,c	;volatile
  2552   000EA4  EFE3  F005         	goto	l4076
  2553   000EA8                     l4198:
  2554   000EA8  0100               	movlb	0	; () banked
  2555   000EAA  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  2556   000EAC  6E4C               	movwf	??_main^0,c
  2557   000EAE  6A4D               	clrf	(??_main+1)^0,c
  2558                           
  2559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2560                           ; Switch size 1, requested type "simple"
  2561                           ; Number of cases is 1, Range of values is 0 to 0
  2562                           ; switch strategies available:
  2563                           ; Name         Instructions Cycles
  2564                           ; simple_byte            4     3 (average)
  2565                           ;	Chosen strategy is simple_byte
  2566   000EB0  504D               	movf	(??_main+1)^0,w,c
  2567   000EB2  0A00               	xorlw	0	; case 0
  2568   000EB4  B4D8               	btfsc	status,2,c
  2569   000EB6  EF5F  F007         	goto	l4686
  2570   000EBA  EF76  F007         	goto	l4200
  2571   000EBE                     l4686:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ; Switch size 1, requested type "simple"
  2575                           ; Number of cases is 5, Range of values is 35 to 102
  2576                           ; switch strategies available:
  2577                           ; Name         Instructions Cycles
  2578                           ; simple_byte           16     9 (average)
  2579                           ;	Chosen strategy is simple_byte
  2580   000EBE  504C               	movf	??_main^0,w,c
  2581   000EC0  0A23               	xorlw	35	; case 35
  2582   000EC2  B4D8               	btfsc	status,2,c
  2583   000EC4  EFE7  F005         	goto	l4078
  2584   000EC8  0A67               	xorlw	103	; case 68
  2585   000ECA  B4D8               	btfsc	status,2,c
  2586   000ECC  EF5A  F005         	goto	l4032
  2587   000ED0  0A15               	xorlw	21	; case 81
  2588   000ED2  B4D8               	btfsc	status,2,c
  2589   000ED4  EF53  F006         	goto	l4108
  2590   000ED8  0A34               	xorlw	52	; case 101
  2591   000EDA  B4D8               	btfsc	status,2,c
  2592   000EDC  EFD4  F006         	goto	l4154
  2593   000EE0  0A03               	xorlw	3	; case 102
  2594   000EE2  B4D8               	btfsc	status,2,c
  2595   000EE4  EF34  F007         	goto	l4180
  2596   000EE8  EF76  F007         	goto	l4200
  2597   000EEC                     l4200:
  2598                           
  2599                           ;main.c: 739:                     Serial_Flag = 0;
  2600   000EEC  0E00               	movlw	0
  2601   000EEE  6E31               	movwf	_Serial_Flag^0,c
  2602                           
  2603                           ;main.c: 740:                     Serial_GData = 0;
  2604   000EF0  0E00               	movlw	0
  2605   000EF2  6E30               	movwf	_Serial_GData^0,c
  2606                           
  2607                           ;main.c: 741:                     OpMode = MANUAL_MODE;
  2608   000EF4  0E00               	movlw	0
  2609   000EF6  6E2A               	movwf	_OpMode^0,c	;volatile
  2610                           
  2611                           ;main.c: 742:                 } else {
  2612   000EF8  EFC7  F003         	goto	l208
  2613   000EFC                     l4202:
  2614                           
  2615                           ;main.c: 743:                     OpMode = MANUAL_MODE;
  2616   000EFC  0E00               	movlw	0
  2617   000EFE  6E2A               	movwf	_OpMode^0,c	;volatile
  2618   000F00  EFC7  F003         	goto	l208
  2619   000F04                     l4204:
  2620   000F04  502A               	movf	_OpMode^0,w,c	;volatile
  2621   000F06  6E4C               	movwf	??_main^0,c
  2622   000F08  6A4D               	clrf	(??_main+1)^0,c
  2623                           
  2624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2625                           ; Switch size 1, requested type "simple"
  2626                           ; Number of cases is 1, Range of values is 0 to 0
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte            4     3 (average)
  2630                           ;	Chosen strategy is simple_byte
  2631   000F0A  504D               	movf	(??_main+1)^0,w,c
  2632   000F0C  0A00               	xorlw	0	; case 0
  2633   000F0E  B4D8               	btfsc	status,2,c
  2634   000F10  EF8C  F007         	goto	l4688
  2635   000F14  EFC7  F003         	goto	l208
  2636   000F18                     l4688:
  2637                           
  2638                           ; Switch size 1, requested type "simple"
  2639                           ; Number of cases is 2, Range of values is 0 to 2
  2640                           ; switch strategies available:
  2641                           ; Name         Instructions Cycles
  2642                           ; simple_byte            7     4 (average)
  2643                           ;	Chosen strategy is simple_byte
  2644   000F18  504C               	movf	??_main^0,w,c
  2645   000F1A  0A00               	xorlw	0	; case 0
  2646   000F1C  B4D8               	btfsc	status,2,c
  2647   000F1E  EFD4  F003         	goto	l210
  2648   000F22  0A02               	xorlw	2	; case 2
  2649   000F24  B4D8               	btfsc	status,2,c
  2650   000F26  EF50  F005         	goto	l4028
  2651   000F2A  EFC7  F003         	goto	l208
  2652   000F2E  EF81  F001         	goto	start
  2653   000F32                     __end_of_main:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _read_i2c *****************
  2657 ;; Defined at:
  2658 ;;		line 120 in file "i2c.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  address         4   20[COMRAM] long 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  read_byte       2   24[COMRAM] int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2   20[COMRAM] int 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;Total ram usage:        6 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 4
  2679 ;; This function calls:
  2680 ;;		___aldiv
  2681 ;;		_i2c_Address
  2682 ;;		_i2c_Read
  2683 ;;		_i2c_Restart
  2684 ;;		_i2c_Start
  2685 ;;		_i2c_Stop
  2686 ;;		_i2c_Write
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text1
  2693   001DE0                     __ptext1:
  2694                           	callstack 0
  2695   001DE0                     _read_i2c:
  2696                           	callstack 26
  2697   001DE0                     
  2698                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  2699   001DE0  EC2A  F011         	call	_i2c_Start	;wreg free
  2700                           
  2701                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  2702   001DE4  0E00               	movlw	0
  2703   001DE6  6E39               	movwf	i2c_Address@mode^0,c
  2704   001DE8  0EA0               	movlw	160
  2705   001DEA  ECFB  F010         	call	_i2c_Address
  2706                           
  2707                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  2708   001DEE  C046  F038         	movff	read_i2c@address,___aldiv@dividend
  2709   001DF2  C047  F039         	movff	read_i2c@address+1,___aldiv@dividend+1
  2710   001DF6  C048  F03A         	movff	read_i2c@address+2,___aldiv@dividend+2
  2711   001DFA  C049  F03B         	movff	read_i2c@address+3,___aldiv@dividend+3
  2712   001DFE  0E00               	movlw	0
  2713   001E00  6E3C               	movwf	___aldiv@divisor^0,c
  2714   001E02  0E01               	movlw	1
  2715   001E04  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  2716   001E06  0E00               	movlw	0
  2717   001E08  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  2718   001E0A  0E00               	movlw	0
  2719   001E0C  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  2720   001E0E  ECBD  F00A         	call	___aldiv	;wreg free
  2721   001E12  5038               	movf	?___aldiv^0,w,c
  2722   001E14  EC0C  F011         	call	_i2c_Write
  2723                           
  2724                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  2725   001E18  5046               	movf	read_i2c@address^0,w,c
  2726   001E1A  EC0C  F011         	call	_i2c_Write
  2727                           
  2728                           ;i2c.c: 128:     i2c_Restart();
  2729   001E1E  EC22  F011         	call	_i2c_Restart	;wreg free
  2730                           
  2731                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  2732   001E22  0E01               	movlw	1
  2733   001E24  6E39               	movwf	i2c_Address@mode^0,c
  2734   001E26  0EA0               	movlw	160
  2735   001E28  ECFB  F010         	call	_i2c_Address
  2736                           
  2737                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  2738   001E2C  0E00               	movlw	0
  2739   001E2E  EC37  F010         	call	_i2c_Read
  2740   001E32  C039  F04A         	movff	?_i2c_Read,read_i2c@read_byte
  2741   001E36  C03A  F04B         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2742                           
  2743                           ;i2c.c: 134:     i2c_Stop();
  2744   001E3A  EC26  F011         	call	_i2c_Stop	;wreg free
  2745   001E3E                     
  2746                           ;i2c.c: 135:     return (read_byte);
  2747   001E3E  C04A  F046         	movff	read_i2c@read_byte,?_read_i2c
  2748   001E42  C04B  F047         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2749   001E46  0012               	return		;funcret
  2750   001E48                     __end_of_read_i2c:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _i2c_Restart *****************
  2754 ;; Defined at:
  2755 ;;		line 56 in file "i2c.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 3
  2776 ;; This function calls:
  2777 ;;		_i2c_Wait
  2778 ;; This function is called by:
  2779 ;;		_read_i2c
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text2
  2784   002244                     __ptext2:
  2785                           	callstack 0
  2786   002244                     _i2c_Restart:
  2787                           	callstack 26
  2788   002244                     
  2789                           ;i2c.c: 57:     i2c_Wait();
  2790   002244  EC96  F010         	call	_i2c_Wait	;wreg free
  2791   002248                     
  2792                           ;i2c.c: 58:     RSEN2 = 1;
  2793   002248  826B               	bsf	3947,1,c	;volatile
  2794   00224A  0012               	return		;funcret
  2795   00224C                     __end_of_i2c_Restart:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _i2c_Read *****************
  2799 ;; Defined at:
  2800 ;;		line 89 in file "i2c.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  ack             1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  ack             1    9[COMRAM] unsigned char 
  2805 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2    7[COMRAM] int 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        4 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 3
  2822 ;; This function calls:
  2823 ;;		_i2c_Wait
  2824 ;; This function is called by:
  2825 ;;		_read_i2c
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text3
  2830   00206E                     __ptext3:
  2831                           	callstack 0
  2832   00206E                     _i2c_Read:
  2833                           	callstack 26
  2834                           
  2835                           ;incstack = 0
  2836                           ;i2c_Read@ack stored from wreg
  2837   00206E  6E3B               	movwf	i2c_Read@ack^0,c
  2838   002070                     
  2839                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  2840   002070  EC96  F010         	call	_i2c_Wait	;wreg free
  2841   002074                     
  2842                           ;i2c.c: 96:     RCEN2 = 1;
  2843   002074  866B               	bsf	3947,3,c	;volatile
  2844                           
  2845                           ;i2c.c: 97:     i2c_Wait();
  2846   002076  EC96  F010         	call	_i2c_Wait	;wreg free
  2847   00207A                     
  2848                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  2849   00207A  CF6F F03C          	movff	3951,i2c_Read@i2cReadData	;volatile
  2850                           
  2851                           ;i2c.c: 99:     i2c_Wait();
  2852   00207E  EC96  F010         	call	_i2c_Wait	;wreg free
  2853   002082                     
  2854                           ;i2c.c: 100:     if (ack)
  2855   002082  503B               	movf	i2c_Read@ack^0,w,c
  2856   002084  B4D8               	btfsc	status,2,c
  2857   002086  EF47  F010         	goto	u1981
  2858   00208A  EF49  F010         	goto	u1980
  2859   00208E                     u1981:
  2860   00208E  EF4C  F010         	goto	l561
  2861   002092                     u1980:
  2862   002092                     
  2863                           ;i2c.c: 101:         ACKDT2 = 0;
  2864   002092  9A6B               	bcf	3947,5,c	;volatile
  2865   002094  EF4D  F010         	goto	l562
  2866   002098                     l561:
  2867                           
  2868                           ;i2c.c: 103:         ACKDT2 = 1;
  2869   002098  8A6B               	bsf	3947,5,c	;volatile
  2870   00209A                     l562:
  2871                           
  2872                           ;i2c.c: 104:     ACKEN2 = 1;
  2873   00209A  886B               	bsf	3947,4,c	;volatile
  2874                           
  2875                           ;i2c.c: 106:     return ( i2cReadData);
  2876   00209C  C03C  F039         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2877   0020A0  6A3A               	clrf	(?_i2c_Read+1)^0,c
  2878   0020A2  0012               	return		;funcret
  2879   0020A4                     __end_of_i2c_Read:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _initUSART *****************
  2883 ;; Defined at:
  2884 ;;		line 20 in file "usart.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 2
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text4
  2913   002106                     __ptext4:
  2914                           	callstack 0
  2915   002106                     _initUSART:
  2916                           	callstack 28
  2917   002106                     
  2918                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  2919   002106  9C94               	bcf	148,6,c	;volatile
  2920                           
  2921                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  2922   002108  8E94               	bsf	148,7,c	;volatile
  2923                           
  2924                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  2925   00210A  98AD               	bcf	173,4,c	;volatile
  2926                           
  2927                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  2928   00210C  9CAD               	bcf	173,6,c	;volatile
  2929                           
  2930                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  2931   00210E  8AAD               	bsf	173,5,c	;volatile
  2932                           
  2933                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  2934   002110  9CAC               	bcf	172,6,c	;volatile
  2935                           
  2936                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  2937   002112  88AC               	bsf	172,4,c	;volatile
  2938                           
  2939                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  2940   002114  9EAD               	bcf	173,7,c	;volatile
  2941                           
  2942                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  2943   002116  86AC               	bsf	172,3,c	;volatile
  2944                           
  2945                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  2946   002118  8EAC               	bsf	172,7,c	;volatile
  2947                           
  2948                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  2949   00211A  967E               	bcf	126,3,c	;volatile
  2950                           
  2951                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  2952   00211C  84AD               	bsf	173,2,c	;volatile
  2953                           
  2954                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  2955   00211E  8A9D               	bsf	157,5,c	;volatile
  2956                           
  2957                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  2958   002120  989D               	bcf	157,4,c	;volatile
  2959   002122                     
  2960                           ;usart.c: 39:     SPBRG1 = 25;
  2961   002122  0E19               	movlw	25
  2962   002124  6EB0               	movwf	176,c	;volatile
  2963                           
  2964                           ;usart.c: 40:     SPBRGH1 = 0;
  2965   002126  0E00               	movlw	0
  2966   002128  6E7F               	movwf	127,c	;volatile
  2967   00212A  0012               	return		;funcret
  2968   00212C                     __end_of_initUSART:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function _initMotor *****************
  2972 ;; Defined at:
  2973 ;;		line 21 in file "MotorDriver.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 2
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text5
  3002   00220A                     __ptext5:
  3003                           	callstack 0
  3004   00220A                     _initMotor:
  3005                           	callstack 28
  3006   00220A                     
  3007                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  3008   00220A  0EC7               	movlw	199
  3009   00220C  6E77               	movwf	119,c	;volatile
  3010   00220E                     
  3011                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  3012   00220E  9679               	bcf	121,3,c	;volatile
  3013   002210                     
  3014                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  3015   002210  8C79               	bsf	121,6,c	;volatile
  3016                           
  3017                           ;MotorDriver.c: 25:     T4CON = 0x00;
  3018   002212  0E00               	movlw	0
  3019   002214  6E76               	movwf	118,c	;volatile
  3020   002216  0012               	return		;funcret
  3021   002218                     __end_of_initMotor:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _init *****************
  3025 ;; Defined at:
  3026 ;;		line 18 in file "IO.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 2
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text6
  3055   001D6E                     __ptext6:
  3056                           	callstack 0
  3057   001D6E                     _init:
  3058                           	callstack 28
  3059   001D6E                     
  3060                           ;IO.c: 19:     TRISA = 0xFB;
  3061   001D6E  0EFB               	movlw	251
  3062   001D70  6E92               	movwf	146,c	;volatile
  3063   001D72                     
  3064                           ;IO.c: 20:     TRISB = 0XFF;
  3065   001D72  6893               	setf	147,c	;volatile
  3066                           
  3067                           ;IO.c: 21:     TRISC = 0X84;
  3068   001D74  0E84               	movlw	132
  3069   001D76  6E94               	movwf	148,c	;volatile
  3070                           
  3071                           ;IO.c: 22:     TRISD = 0XC0;
  3072   001D78  0EC0               	movlw	192
  3073   001D7A  6E95               	movwf	149,c	;volatile
  3074                           
  3075                           ;IO.c: 23:     TRISE = 0X00;
  3076   001D7C  0E00               	movlw	0
  3077   001D7E  6E96               	movwf	150,c	;volatile
  3078                           
  3079                           ;IO.c: 24:     TRISF = 0X00;
  3080   001D80  0E00               	movlw	0
  3081   001D82  6E97               	movwf	151,c	;volatile
  3082                           
  3083                           ;IO.c: 25:     TRISG = 0X05;
  3084   001D84  0E05               	movlw	5
  3085   001D86  6E98               	movwf	152,c	;volatile
  3086   001D88                     
  3087                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3088   001D88  9EC2               	bcf	194,7,c	;volatile
  3089   001D8A                     
  3090                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3091   001D8A  9CC2               	bcf	194,6,c	;volatile
  3092   001D8C                     
  3093                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3094   001D8C  90C2               	bcf	194,0,c	;volatile
  3095   001D8E                     
  3096                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3097   001D8E  8EC1               	bsf	193,7,c	;volatile
  3098   001D90                     
  3099                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3100   001D90  9CC1               	bcf	193,6,c	;volatile
  3101   001D92                     
  3102                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3103   001D92  9AC1               	bcf	193,5,c	;volatile
  3104   001D94                     
  3105                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3106   001D94  88C1               	bsf	193,4,c	;volatile
  3107   001D96                     
  3108                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3109   001D96  96C1               	bcf	193,3,c	;volatile
  3110   001D98                     
  3111                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3112   001D98  84C1               	bsf	193,2,c	;volatile
  3113   001D9A                     
  3114                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3115   001D9A  92C1               	bcf	193,1,c	;volatile
  3116   001D9C                     
  3117                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3118   001D9C  90C1               	bcf	193,0,c	;volatile
  3119   001D9E                     
  3120                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3121   001D9E  88C0               	bsf	192,4,c	;volatile
  3122   001DA0                     
  3123                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3124   001DA0  90C1               	bcf	193,0,c	;volatile
  3125   001DA2                     
  3126                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3127   001DA2  82C1               	bsf	193,1,c	;volatile
  3128   001DA4                     
  3129                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3130   001DA4  84C1               	bsf	193,2,c	;volatile
  3131   001DA6                     
  3132                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3133   001DA6  86C1               	bsf	193,3,c	;volatile
  3134   001DA8                     
  3135                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3136   001DA8  88C1               	bsf	193,4,c	;volatile
  3137   001DAA                     
  3138                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3139   001DAA  8EC1               	bsf	193,7,c	;volatile
  3140   001DAC                     
  3141                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3142   001DAC  98C0               	bcf	192,4,c	;volatile
  3143   001DAE                     
  3144                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3145   001DAE  8EF2               	bsf	242,7,c	;volatile
  3146                           
  3147                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3148   001DB0  0E03               	movlw	3
  3149   001DB2  12D3               	iorwf	211,f,c	;volatile
  3150                           
  3151                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3152   001DB4  0E70               	movlw	112
  3153   001DB6  12D3               	iorwf	211,f,c	;volatile
  3154                           
  3155                           ;IO.c: 68:     ADRES = 0;
  3156   001DB8  0E00               	movlw	0
  3157   001DBA  6EC4               	movwf	196,c	;volatile
  3158   001DBC  0E00               	movlw	0
  3159   001DBE  6EC3               	movwf	195,c	;volatile
  3160   001DC0                     
  3161                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3162   001DC0  94C2               	bcf	194,2,c	;volatile
  3163   001DC2                     
  3164                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3165   001DC2  96C2               	bcf	194,3,c	;volatile
  3166   001DC4                     
  3167                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3168   001DC4  98C2               	bcf	194,4,c	;volatile
  3169   001DC6                     
  3170                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3171   001DC6  9AC2               	bcf	194,5,c	;volatile
  3172   001DC8                     
  3173                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3174   001DC8  8CC1               	bsf	193,6,c	;volatile
  3175   001DCA                     
  3176                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3177   001DCA  80C2               	bsf	194,0,c	;volatile
  3178   001DCC                     
  3179                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3180   001DCC  82C2               	bsf	194,1,c	;volatile
  3181   001DCE                     l632:
  3182                           
  3183                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3184   001DCE  B2C2               	btfsc	194,1,c	;volatile
  3185   001DD0  EFEC  F00E         	goto	u1991
  3186   001DD4  EFEE  F00E         	goto	u1990
  3187   001DD8                     u1991:
  3188   001DD8  EFE7  F00E         	goto	l632
  3189   001DDC                     u1990:
  3190   001DDC                     
  3191                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3192   001DDC  9CC1               	bcf	193,6,c	;volatile
  3193   001DDE  0012               	return		;funcret
  3194   001DE0                     __end_of_init:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _i2c_Init *****************
  3198 ;; Defined at:
  3199 ;;		line 25 in file "i2c.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 2
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text7
  3228   0021B4                     __ptext7:
  3229                           	callstack 0
  3230   0021B4                     _i2c_Init:
  3231                           	callstack 28
  3232   0021B4                     
  3233                           ;i2c.c: 29:     TRISD5 = 1;
  3234   0021B4  8A95               	bsf	3989,5,c	;volatile
  3235                           
  3236                           ;i2c.c: 30:     TRISD6 = 1;
  3237   0021B6  8C95               	bsf	3989,6,c	;volatile
  3238   0021B8                     
  3239                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3240   0021B8  0E28               	movlw	40
  3241   0021BA  6E6C               	movwf	108,c	;volatile
  3242                           
  3243                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3244   0021BC  0E00               	movlw	0
  3245   0021BE  6E6B               	movwf	107,c	;volatile
  3246                           
  3247                           ;i2c.c: 35:     SSP2ADD = 39;
  3248   0021C0  0E27               	movlw	39
  3249   0021C2  6E6E               	movwf	110,c	;volatile
  3250                           
  3251                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3252   0021C4  0EC0               	movlw	192
  3253   0021C6  6E6D               	movwf	109,c	;volatile
  3254   0021C8  0012               	return		;funcret
  3255   0021CA                     __end_of_i2c_Init:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _flush *****************
  3259 ;; Defined at:
  3260 ;;		line 1181 in file "main.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  i               2    6[COMRAM] int 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:        2 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text8
  3289   001FFA                     __ptext8:
  3290                           	callstack 0
  3291   001FFA                     _flush:
  3292                           	callstack 28
  3293   001FFA                     
  3294                           ;main.c: 1182:     int i;;main.c: 1184:     for (i = 0; i < 16; i++) {
  3295   001FFA  0E00               	movlw	0
  3296   001FFC  6E39               	movwf	(flush@i+1)^0,c
  3297   001FFE  0E00               	movlw	0
  3298   002000  6E38               	movwf	flush@i^0,c
  3299   002002                     l3720:
  3300                           
  3301                           ;main.c: 1185:         Serial_Buffer[i] = 0x00;
  3302   002002  0E80               	movlw	low _Serial_Buffer
  3303   002004  2438               	addwf	flush@i^0,w,c
  3304   002006  6ED9               	movwf	fsr2l,c
  3305   002008  0E00               	movlw	high _Serial_Buffer
  3306   00200A  2039               	addwfc	(flush@i+1)^0,w,c
  3307   00200C  6EDA               	movwf	fsr2h,c
  3308   00200E  0E00               	movlw	0
  3309   002010  6EDF               	movwf	indf2,c
  3310   002012                     
  3311                           ;main.c: 1186:     }
  3312   002012  4A38               	infsnz	flush@i^0,f,c
  3313   002014  2A39               	incf	(flush@i+1)^0,f,c
  3314   002016  BE39               	btfsc	(flush@i+1)^0,7,c
  3315   002018  EF17  F010         	goto	u2481
  3316   00201C  5039               	movf	(flush@i+1)^0,w,c
  3317   00201E  E109               	bnz	u2480
  3318   002020  0E10               	movlw	16
  3319   002022  5C38               	subwf	flush@i^0,w,c
  3320   002024  A0D8               	btfss	status,0,c
  3321   002026  EF17  F010         	goto	u2481
  3322   00202A  EF19  F010         	goto	u2480
  3323   00202E                     u2481:
  3324   00202E  EF01  F010         	goto	l3720
  3325   002032                     u2480:
  3326   002032  0012               	return		;funcret
  3327   002034                     __end_of_flush:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _WriteSTLED316SVibMode *****************
  3331 ;; Defined at:
  3332 ;;		line 244 in file "Display.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  v_mode          1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  v_mode          1   12[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 3
  3353 ;; This function calls:
  3354 ;;		_STLED316s_SPI_SendData
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text9
  3361   001EA2                     __ptext9:
  3362                           	callstack 0
  3363   001EA2                     _WriteSTLED316SVibMode:
  3364                           	callstack 27
  3365                           
  3366                           ;incstack = 0
  3367                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3368   001EA2  6E3E               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3369   001EA4                     
  3370                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  3371   001EA4  988B               	bcf	139,4,c	;volatile
  3372   001EA6                     
  3373                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  3374   001EA6  0E00               	movlw	0
  3375   001EA8  EC77  F00E         	call	_STLED316s_SPI_SendData
  3376   001EAC                     
  3377                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  3378   001EAC  888B               	bsf	139,4,c	;volatile
  3379   001EAE                     
  3380                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  3381   001EAE  988B               	bcf	139,4,c	;volatile
  3382                           
  3383                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  3384   001EB0  0E00               	movlw	0
  3385   001EB2  EC77  F00E         	call	_STLED316s_SPI_SendData
  3386   001EB6                     
  3387                           ;Display.c: 261:     if (v_mode == 1) {
  3388   001EB6  043E               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3389   001EB8  A4D8               	btfss	status,2,c
  3390   001EBA  EF61  F00F         	goto	u2061
  3391   001EBE  EF63  F00F         	goto	u2060
  3392   001EC2                     u2061:
  3393   001EC2  EF6B  F00F         	goto	l3456
  3394   001EC6                     u2060:
  3395   001EC6                     
  3396                           ;Display.c: 262:         STLED316s_SPI_SendData(0x00);
  3397   001EC6  0E00               	movlw	0
  3398   001EC8  EC77  F00E         	call	_STLED316s_SPI_SendData
  3399                           
  3400                           ;Display.c: 263:         STLED316s_SPI_SendData(0xBE);
  3401   001ECC  0EBE               	movlw	190
  3402   001ECE  EC77  F00E         	call	_STLED316s_SPI_SendData
  3403                           
  3404                           ;Display.c: 264:     } else {
  3405   001ED2  EF71  F00F         	goto	l3458
  3406   001ED6                     l3456:
  3407                           
  3408                           ;Display.c: 265:         STLED316s_SPI_SendData(0x00);
  3409   001ED6  0E00               	movlw	0
  3410   001ED8  EC77  F00E         	call	_STLED316s_SPI_SendData
  3411                           
  3412                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  3413   001EDC  0E3E               	movlw	62
  3414   001EDE  EC77  F00E         	call	_STLED316s_SPI_SendData
  3415   001EE2                     l3458:
  3416                           
  3417                           ;Display.c: 269:     LATCbits.LATC4 = 1;
  3418   001EE2  888B               	bsf	139,4,c	;volatile
  3419   001EE4                     
  3420                           ;Display.c: 271:     LATCbits.LATC4 = 0;
  3421   001EE4  988B               	bcf	139,4,c	;volatile
  3422                           
  3423                           ;Display.c: 273:     STLED316s_SPI_SendData(0x0D);
  3424   001EE6  0E0D               	movlw	13
  3425   001EE8  EC77  F00E         	call	_STLED316s_SPI_SendData
  3426   001EEC                     
  3427                           ;Display.c: 275:     LATCbits.LATC4 = 1;
  3428   001EEC  888B               	bsf	139,4,c	;volatile
  3429   001EEE  0012               	return		;funcret
  3430   001EF0                     __end_of_WriteSTLED316SVibMode:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _ToggleVIB_Mode *****************
  3434 ;; Defined at:
  3435 ;;		line 938 in file "main.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 5
  3456 ;; This function calls:
  3457 ;;		_write_i2c
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text10
  3464   001FBE                     __ptext10:
  3465                           	callstack 0
  3466   001FBE                     _ToggleVIB_Mode:
  3467                           	callstack 25
  3468   001FBE                     
  3469                           ;main.c: 939:     if (vibration_mode)
  3470   001FBE  502C               	movf	_vibration_mode^0,w,c
  3471   001FC0  B4D8               	btfsc	status,2,c
  3472   001FC2  EFE5  F00F         	goto	u2051
  3473   001FC6  EFE7  F00F         	goto	u2050
  3474   001FCA                     u2051:
  3475   001FCA  EFEB  F00F         	goto	l3436
  3476   001FCE                     u2050:
  3477   001FCE                     
  3478                           ;main.c: 940:         vibration_mode = 0;
  3479   001FCE  0E00               	movlw	0
  3480   001FD0  6E2C               	movwf	_vibration_mode^0,c
  3481   001FD2  EFED  F00F         	goto	l3438
  3482   001FD6                     l3436:
  3483                           
  3484                           ;main.c: 942:         vibration_mode = 1;
  3485   001FD6  0E01               	movlw	1
  3486   001FD8  6E2C               	movwf	_vibration_mode^0,c
  3487   001FDA                     l3438:
  3488                           
  3489                           ;main.c: 949:     INTCONbits.GIE = 0;
  3490   001FDA  9EF2               	bcf	242,7,c	;volatile
  3491   001FDC                     
  3492                           ;main.c: 950:     write_i2c(0x0010, vibration_mode);
  3493   001FDC  0E10               	movlw	16
  3494   001FDE  6E46               	movwf	write_i2c@address^0,c
  3495   001FE0  0E00               	movlw	0
  3496   001FE2  6E47               	movwf	(write_i2c@address+1)^0,c
  3497   001FE4  0E00               	movlw	0
  3498   001FE6  6E48               	movwf	(write_i2c@address+2)^0,c
  3499   001FE8  0E00               	movlw	0
  3500   001FEA  6E49               	movwf	(write_i2c@address+3)^0,c
  3501   001FEC  C02C  F04A         	movff	_vibration_mode,write_i2c@data
  3502   001FF0  6A4B               	clrf	(write_i2c@data+1)^0,c
  3503   001FF2  EC78  F00F         	call	_write_i2c	;wreg free
  3504   001FF6                     
  3505                           ;main.c: 951:     INTCONbits.GIE = 1;
  3506   001FF6  8EF2               	bsf	242,7,c	;volatile
  3507   001FF8  0012               	return		;funcret
  3508   001FFA                     __end_of_ToggleVIB_Mode:
  3509                           	callstack 0
  3510                           
  3511 ;; *************** function _write_i2c *****************
  3512 ;; Defined at:
  3513 ;;		line 109 in file "i2c.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  address         4   20[COMRAM] long 
  3516 ;;  data            2   24[COMRAM] int 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        6 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 4
  3535 ;; This function calls:
  3536 ;;		___aldiv
  3537 ;;		_i2c_Address
  3538 ;;		_i2c_Start
  3539 ;;		_i2c_Stop
  3540 ;;		_i2c_Write
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;;		_ToggleVIB_Mode
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text11
  3548   001EF0                     __ptext11:
  3549                           	callstack 0
  3550   001EF0                     _write_i2c:
  3551                           	callstack 26
  3552   001EF0                     
  3553                           ;i2c.c: 110:     i2c_Start();
  3554   001EF0  EC2A  F011         	call	_i2c_Start	;wreg free
  3555                           
  3556                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  3557   001EF4  0E00               	movlw	0
  3558   001EF6  6E39               	movwf	i2c_Address@mode^0,c
  3559   001EF8  0EA0               	movlw	160
  3560   001EFA  ECFB  F010         	call	_i2c_Address
  3561                           
  3562                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  3563   001EFE  C046  F038         	movff	write_i2c@address,___aldiv@dividend
  3564   001F02  C047  F039         	movff	write_i2c@address+1,___aldiv@dividend+1
  3565   001F06  C048  F03A         	movff	write_i2c@address+2,___aldiv@dividend+2
  3566   001F0A  C049  F03B         	movff	write_i2c@address+3,___aldiv@dividend+3
  3567   001F0E  0E00               	movlw	0
  3568   001F10  6E3C               	movwf	___aldiv@divisor^0,c
  3569   001F12  0E01               	movlw	1
  3570   001F14  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  3571   001F16  0E00               	movlw	0
  3572   001F18  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  3573   001F1A  0E00               	movlw	0
  3574   001F1C  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  3575   001F1E  ECBD  F00A         	call	___aldiv	;wreg free
  3576   001F22  5038               	movf	?___aldiv^0,w,c
  3577   001F24  EC0C  F011         	call	_i2c_Write
  3578                           
  3579                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  3580   001F28  5046               	movf	write_i2c@address^0,w,c
  3581   001F2A  EC0C  F011         	call	_i2c_Write
  3582                           
  3583                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  3584   001F2E  504A               	movf	write_i2c@data^0,w,c
  3585   001F30  EC0C  F011         	call	_i2c_Write
  3586                           
  3587                           ;i2c.c: 115:     i2c_Stop();
  3588   001F34  EC26  F011         	call	_i2c_Stop	;wreg free
  3589   001F38  0012               	return		;funcret
  3590   001F3A                     __end_of_write_i2c:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _i2c_Write *****************
  3594 ;; Defined at:
  3595 ;;		line 70 in file "i2c.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  data            1    wreg     unsigned char 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  data            1    7[COMRAM] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:        1 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; Hardware stack levels required when called: 3
  3616 ;; This function calls:
  3617 ;;		_i2c_Wait
  3618 ;; This function is called by:
  3619 ;;		_write_i2c
  3620 ;;		_read_i2c
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text12
  3625   002218                     __ptext12:
  3626                           	callstack 0
  3627   002218                     _i2c_Write:
  3628                           	callstack 26
  3629                           
  3630                           ;incstack = 0
  3631                           ;i2c_Write@data stored from wreg
  3632   002218  6E39               	movwf	i2c_Write@data^0,c
  3633   00221A                     
  3634                           ;i2c.c: 71:     i2c_Wait();
  3635   00221A  EC96  F010         	call	_i2c_Wait	;wreg free
  3636   00221E                     
  3637                           ;i2c.c: 72:     SSP2BUF = data;
  3638   00221E  C039  FF6F         	movff	i2c_Write@data,3951	;volatile
  3639   002222  0012               	return		;funcret
  3640   002224                     __end_of_i2c_Write:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _i2c_Stop *****************
  3644 ;; Defined at:
  3645 ;;		line 63 in file "i2c.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 3
  3666 ;; This function calls:
  3667 ;;		_i2c_Wait
  3668 ;; This function is called by:
  3669 ;;		_write_i2c
  3670 ;;		_read_i2c
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text13
  3675   00224C                     __ptext13:
  3676                           	callstack 0
  3677   00224C                     _i2c_Stop:
  3678                           	callstack 26
  3679   00224C                     
  3680                           ;i2c.c: 64:     i2c_Wait();
  3681   00224C  EC96  F010         	call	_i2c_Wait	;wreg free
  3682   002250                     
  3683                           ;i2c.c: 65:     PEN2 = 1;
  3684   002250  846B               	bsf	3947,2,c	;volatile
  3685   002252  0012               	return		;funcret
  3686   002254                     __end_of_i2c_Stop:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _i2c_Start *****************
  3690 ;; Defined at:
  3691 ;;		line 49 in file "i2c.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2, status,0, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 3
  3712 ;; This function calls:
  3713 ;;		_i2c_Wait
  3714 ;; This function is called by:
  3715 ;;		_write_i2c
  3716 ;;		_read_i2c
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text14
  3721   002254                     __ptext14:
  3722                           	callstack 0
  3723   002254                     _i2c_Start:
  3724                           	callstack 26
  3725   002254                     
  3726                           ;i2c.c: 50:     i2c_Wait();
  3727   002254  EC96  F010         	call	_i2c_Wait	;wreg free
  3728   002258                     
  3729                           ;i2c.c: 51:     SEN2 = 1;
  3730   002258  806B               	bsf	3947,0,c	;volatile
  3731   00225A  0012               	return		;funcret
  3732   00225C                     __end_of_i2c_Start:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _i2c_Address *****************
  3736 ;; Defined at:
  3737 ;;		line 78 in file "i2c.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  address         1    wreg     unsigned char 
  3740 ;;  mode            1    7[COMRAM] unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  address         1    8[COMRAM] unsigned char 
  3743 ;;  l_address       1    9[COMRAM] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3753 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;Total ram usage:        3 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; Hardware stack levels required when called: 3
  3760 ;; This function calls:
  3761 ;;		_i2c_Wait
  3762 ;; This function is called by:
  3763 ;;		_write_i2c
  3764 ;;		_read_i2c
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text15
  3769   0021F6                     __ptext15:
  3770                           	callstack 0
  3771   0021F6                     _i2c_Address:
  3772                           	callstack 26
  3773                           
  3774                           ;incstack = 0
  3775                           ;i2c_Address@address stored from wreg
  3776   0021F6  6E3A               	movwf	i2c_Address@address^0,c
  3777   0021F8                     
  3778                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  3779   0021F8  C03A  F03B         	movff	i2c_Address@address,i2c_Address@l_address
  3780   0021FC                     
  3781                           ;i2c.c: 82:     l_address += mode;
  3782   0021FC  5039               	movf	i2c_Address@mode^0,w,c
  3783   0021FE  263B               	addwf	i2c_Address@l_address^0,f,c
  3784   002200                     
  3785                           ;i2c.c: 83:     i2c_Wait();
  3786   002200  EC96  F010         	call	_i2c_Wait	;wreg free
  3787   002204                     
  3788                           ;i2c.c: 84:     SSP2BUF = l_address;
  3789   002204  C03B  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3790   002208  0012               	return		;funcret
  3791   00220A                     __end_of_i2c_Address:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _i2c_Wait *****************
  3795 ;; Defined at:
  3796 ;;		line 43 in file "i2c.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;Total ram usage:        1 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 2
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_i2c_Start
  3821 ;;		_i2c_Restart
  3822 ;;		_i2c_Stop
  3823 ;;		_i2c_Write
  3824 ;;		_i2c_Address
  3825 ;;		_i2c_Read
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text16
  3830   00212C                     __ptext16:
  3831                           	callstack 0
  3832   00212C                     _i2c_Wait:
  3833                           	callstack 26
  3834   00212C                     l2868:
  3835   00212C  CF6B F038          	movff	3947,??_i2c_Wait	;volatile
  3836   002130  0E1F               	movlw	31
  3837   002132  1638               	andwf	??_i2c_Wait^0,f,c
  3838   002134  A4D8               	btfss	status,2,c
  3839   002136  EF9F  F010         	goto	u1651
  3840   00213A  EFA1  F010         	goto	u1650
  3841   00213E                     u1651:
  3842   00213E  EF96  F010         	goto	l2868
  3843   002142                     u1650:
  3844   002142  B46D               	btfsc	109,2,c	;volatile
  3845   002144  EFA6  F010         	goto	u1661
  3846   002148  EFA8  F010         	goto	u1660
  3847   00214C                     u1661:
  3848   00214C  EF96  F010         	goto	l2868
  3849   002150                     u1660:
  3850   002150  0012               	return		;funcret
  3851   002152                     __end_of_i2c_Wait:
  3852                           	callstack 0
  3853                           
  3854 ;; *************** function ___aldiv *****************
  3855 ;; Defined at:
  3856 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  dividend        4    6[COMRAM] long 
  3859 ;;  divisor         4   10[COMRAM] long 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  quotient        4   16[COMRAM] long 
  3862 ;;  sign            1   15[COMRAM] unsigned char 
  3863 ;;  counter         1   14[COMRAM] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  4    6[COMRAM] long 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:       14 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 2
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_write_i2c
  3884 ;;		_read_i2c
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text17
  3889   00157A                     __ptext17:
  3890                           	callstack 0
  3891   00157A                     ___aldiv:
  3892                           	callstack 27
  3893   00157A  0E00               	movlw	0
  3894   00157C  6E41               	movwf	___aldiv@sign^0,c
  3895   00157E  BE3F               	btfsc	(___aldiv@divisor+3)^0,7,c
  3896   001580  EFC6  F00A         	goto	u1750
  3897   001584  EFC4  F00A         	goto	u1751
  3898   001588                     u1751:
  3899   001588  EFD0  F00A         	goto	l3000
  3900   00158C                     u1750:
  3901   00158C  1E3F               	comf	(___aldiv@divisor+3)^0,f,c
  3902   00158E  1E3E               	comf	(___aldiv@divisor+2)^0,f,c
  3903   001590  1E3D               	comf	(___aldiv@divisor+1)^0,f,c
  3904   001592  6C3C               	negf	___aldiv@divisor^0,c
  3905   001594  0E00               	movlw	0
  3906   001596  223D               	addwfc	(___aldiv@divisor+1)^0,f,c
  3907   001598  223E               	addwfc	(___aldiv@divisor+2)^0,f,c
  3908   00159A  223F               	addwfc	(___aldiv@divisor+3)^0,f,c
  3909   00159C  0E01               	movlw	1
  3910   00159E  6E41               	movwf	___aldiv@sign^0,c
  3911   0015A0                     l3000:
  3912   0015A0  BE3B               	btfsc	(___aldiv@dividend+3)^0,7,c
  3913   0015A2  EFD7  F00A         	goto	u1760
  3914   0015A6  EFD5  F00A         	goto	u1761
  3915   0015AA                     u1761:
  3916   0015AA  EFE1  F00A         	goto	l3006
  3917   0015AE                     u1760:
  3918   0015AE  1E3B               	comf	(___aldiv@dividend+3)^0,f,c
  3919   0015B0  1E3A               	comf	(___aldiv@dividend+2)^0,f,c
  3920   0015B2  1E39               	comf	(___aldiv@dividend+1)^0,f,c
  3921   0015B4  6C38               	negf	___aldiv@dividend^0,c
  3922   0015B6  0E00               	movlw	0
  3923   0015B8  2239               	addwfc	(___aldiv@dividend+1)^0,f,c
  3924   0015BA  223A               	addwfc	(___aldiv@dividend+2)^0,f,c
  3925   0015BC  223B               	addwfc	(___aldiv@dividend+3)^0,f,c
  3926   0015BE  0E01               	movlw	1
  3927   0015C0  1A41               	xorwf	___aldiv@sign^0,f,c
  3928   0015C2                     l3006:
  3929   0015C2  0E00               	movlw	0
  3930   0015C4  6E42               	movwf	___aldiv@quotient^0,c
  3931   0015C6  0E00               	movlw	0
  3932   0015C8  6E43               	movwf	(___aldiv@quotient+1)^0,c
  3933   0015CA  0E00               	movlw	0
  3934   0015CC  6E44               	movwf	(___aldiv@quotient+2)^0,c
  3935   0015CE  0E00               	movlw	0
  3936   0015D0  6E45               	movwf	(___aldiv@quotient+3)^0,c
  3937   0015D2  503C               	movf	___aldiv@divisor^0,w,c
  3938   0015D4  103D               	iorwf	(___aldiv@divisor+1)^0,w,c
  3939   0015D6  103E               	iorwf	(___aldiv@divisor+2)^0,w,c
  3940   0015D8  103F               	iorwf	(___aldiv@divisor+3)^0,w,c
  3941   0015DA  B4D8               	btfsc	status,2,c
  3942   0015DC  EFF2  F00A         	goto	u1771
  3943   0015E0  EFF4  F00A         	goto	u1770
  3944   0015E4                     u1771:
  3945   0015E4  EF2A  F00B         	goto	l3028
  3946   0015E8                     u1770:
  3947   0015E8  0E01               	movlw	1
  3948   0015EA  6E40               	movwf	___aldiv@counter^0,c
  3949   0015EC  EFFE  F00A         	goto	l3014
  3950   0015F0                     l3012:
  3951   0015F0  90D8               	bcf	status,0,c
  3952   0015F2  363C               	rlcf	___aldiv@divisor^0,f,c
  3953   0015F4  363D               	rlcf	(___aldiv@divisor+1)^0,f,c
  3954   0015F6  363E               	rlcf	(___aldiv@divisor+2)^0,f,c
  3955   0015F8  363F               	rlcf	(___aldiv@divisor+3)^0,f,c
  3956   0015FA  2A40               	incf	___aldiv@counter^0,f,c
  3957   0015FC                     l3014:
  3958   0015FC  AE3F               	btfss	(___aldiv@divisor+3)^0,7,c
  3959   0015FE  EF03  F00B         	goto	u1781
  3960   001602  EF05  F00B         	goto	u1780
  3961   001606                     u1781:
  3962   001606  EFF8  F00A         	goto	l3012
  3963   00160A                     u1780:
  3964   00160A                     l3016:
  3965   00160A  90D8               	bcf	status,0,c
  3966   00160C  3642               	rlcf	___aldiv@quotient^0,f,c
  3967   00160E  3643               	rlcf	(___aldiv@quotient+1)^0,f,c
  3968   001610  3644               	rlcf	(___aldiv@quotient+2)^0,f,c
  3969   001612  3645               	rlcf	(___aldiv@quotient+3)^0,f,c
  3970   001614  503C               	movf	___aldiv@divisor^0,w,c
  3971   001616  5C38               	subwf	___aldiv@dividend^0,w,c
  3972   001618  503D               	movf	(___aldiv@divisor+1)^0,w,c
  3973   00161A  5839               	subwfb	(___aldiv@dividend+1)^0,w,c
  3974   00161C  503E               	movf	(___aldiv@divisor+2)^0,w,c
  3975   00161E  583A               	subwfb	(___aldiv@dividend+2)^0,w,c
  3976   001620  503F               	movf	(___aldiv@divisor+3)^0,w,c
  3977   001622  583B               	subwfb	(___aldiv@dividend+3)^0,w,c
  3978   001624  A0D8               	btfss	status,0,c
  3979   001626  EF17  F00B         	goto	u1791
  3980   00162A  EF19  F00B         	goto	u1790
  3981   00162E                     u1791:
  3982   00162E  EF22  F00B         	goto	l3024
  3983   001632                     u1790:
  3984   001632  503C               	movf	___aldiv@divisor^0,w,c
  3985   001634  5E38               	subwf	___aldiv@dividend^0,f,c
  3986   001636  503D               	movf	(___aldiv@divisor+1)^0,w,c
  3987   001638  5A39               	subwfb	(___aldiv@dividend+1)^0,f,c
  3988   00163A  503E               	movf	(___aldiv@divisor+2)^0,w,c
  3989   00163C  5A3A               	subwfb	(___aldiv@dividend+2)^0,f,c
  3990   00163E  503F               	movf	(___aldiv@divisor+3)^0,w,c
  3991   001640  5A3B               	subwfb	(___aldiv@dividend+3)^0,f,c
  3992   001642  8042               	bsf	___aldiv@quotient^0,0,c
  3993   001644                     l3024:
  3994   001644  90D8               	bcf	status,0,c
  3995   001646  323F               	rrcf	(___aldiv@divisor+3)^0,f,c
  3996   001648  323E               	rrcf	(___aldiv@divisor+2)^0,f,c
  3997   00164A  323D               	rrcf	(___aldiv@divisor+1)^0,f,c
  3998   00164C  323C               	rrcf	___aldiv@divisor^0,f,c
  3999   00164E  2E40               	decfsz	___aldiv@counter^0,f,c
  4000   001650  EF05  F00B         	goto	l3016
  4001   001654                     l3028:
  4002   001654  5041               	movf	___aldiv@sign^0,w,c
  4003   001656  B4D8               	btfsc	status,2,c
  4004   001658  EF30  F00B         	goto	u1801
  4005   00165C  EF32  F00B         	goto	u1800
  4006   001660                     u1801:
  4007   001660  EF3A  F00B         	goto	l3032
  4008   001664                     u1800:
  4009   001664  1E45               	comf	(___aldiv@quotient+3)^0,f,c
  4010   001666  1E44               	comf	(___aldiv@quotient+2)^0,f,c
  4011   001668  1E43               	comf	(___aldiv@quotient+1)^0,f,c
  4012   00166A  6C42               	negf	___aldiv@quotient^0,c
  4013   00166C  0E00               	movlw	0
  4014   00166E  2243               	addwfc	(___aldiv@quotient+1)^0,f,c
  4015   001670  2244               	addwfc	(___aldiv@quotient+2)^0,f,c
  4016   001672  2245               	addwfc	(___aldiv@quotient+3)^0,f,c
  4017   001674                     l3032:
  4018   001674  C042  F038         	movff	___aldiv@quotient,?___aldiv
  4019   001678  C043  F039         	movff	___aldiv@quotient+1,?___aldiv+1
  4020   00167C  C044  F03A         	movff	___aldiv@quotient+2,?___aldiv+2
  4021   001680  C045  F03B         	movff	___aldiv@quotient+3,?___aldiv+3
  4022   001684  0012               	return		;funcret
  4023   001686                     __end_of___aldiv:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _MotorPosition_Init *****************
  4027 ;; Defined at:
  4028 ;;		line 898 in file "main.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        2 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 4
  4049 ;; This function calls:
  4050 ;;		_MotorBREAK
  4051 ;;		_MotorON
  4052 ;;		_Read_IR
  4053 ;;		_WriteSTLED316SErr
  4054 ;;		_delay_1ms
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text18
  4061   001686                     __ptext18:
  4062                           	callstack 0
  4063   001686                     _MotorPosition_Init:
  4064                           	callstack 26
  4065   001686                     
  4066                           ;main.c: 899:     LATAbits.LATA2 = 1;
  4067   001686  8489               	bsf	137,2,c	;volatile
  4068   001688                     
  4069                           ;main.c: 900:     MotorON();
  4070   001688  EC18  F011         	call	_MotorON	;wreg free
  4071   00168C                     
  4072                           ;main.c: 901:     _delay((unsigned long)((350)*(8000000/4000.0)));
  4073   00168C  0E04               	movlw	4
  4074   00168E  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4075   001690  0E8E               	movlw	142
  4076   001692  6E41               	movwf	??_MotorPosition_Init^0,c
  4077   001694  0E12               	movlw	18
  4078   001696                     u3367:
  4079   001696  2EE8               	decfsz	wreg,f,c
  4080   001698  D7FE               	bra	u3367
  4081   00169A  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4082   00169C  D7FC               	bra	u3367
  4083   00169E  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4084   0016A0  D7FA               	bra	u3367
  4085   0016A2  D000               	nop2	
  4086   0016A4                     
  4087                           ;main.c: 902:     errorcounter = 30;
  4088   0016A4  0E1E               	movlw	30
  4089   0016A6  6E52               	movwf	_errorcounter^0,c	;volatile
  4090   0016A8  0E00               	movlw	0
  4091   0016AA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4092   0016AC  0E00               	movlw	0
  4093   0016AE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4094   0016B0  0E00               	movlw	0
  4095   0016B2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4096   0016B4                     l3396:
  4097                           
  4098                           ;main.c: 905:         IR_SENSORF = Read_IR();
  4099   0016B4  ECBC  F010         	call	_Read_IR	;wreg free
  4100   0016B8  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4101   0016BC  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4102   0016C0                     
  4103                           ;main.c: 906:         if (errorcounter == 0) {
  4104   0016C0  5052               	movf	_errorcounter^0,w,c	;volatile
  4105   0016C2  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4106   0016C4  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4107   0016C6  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4108   0016C8  A4D8               	btfss	status,2,c
  4109   0016CA  EF69  F00B         	goto	u2011
  4110   0016CE  EF6B  F00B         	goto	u2010
  4111   0016D2                     u2011:
  4112   0016D2  EF70  F00B         	goto	l3404
  4113   0016D6                     u2010:
  4114   0016D6                     
  4115                           ;main.c: 907:             WriteSTLED316SErr('1');
  4116   0016D6  0E31               	movlw	49
  4117   0016D8  EC49  F00C         	call	_WriteSTLED316SErr
  4118   0016DC                     
  4119                           ;main.c: 908:             MotorBREAK();
  4120   0016DC  EC1D  F011         	call	_MotorBREAK	;wreg free
  4121   0016E0                     l3404:
  4122                           
  4123                           ;main.c: 911:     } while (IR_SENSORF != 0);
  4124   0016E0  500B               	movf	_IR_SENSORF^0,w,c
  4125   0016E2  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4126   0016E4  A4D8               	btfss	status,2,c
  4127   0016E6  EF77  F00B         	goto	u2021
  4128   0016EA  EF79  F00B         	goto	u2020
  4129   0016EE                     u2021:
  4130   0016EE  EF5A  F00B         	goto	l3396
  4131   0016F2                     u2020:
  4132   0016F2                     
  4133                           ;main.c: 913:     _delay((unsigned long)((30)*(8000000/4000.0)));
  4134   0016F2  0E4E               	movlw	78
  4135   0016F4  6E41               	movwf	??_MotorPosition_Init^0,c
  4136   0016F6  0EEB               	movlw	235
  4137   0016F8                     u3377:
  4138   0016F8  2EE8               	decfsz	wreg,f,c
  4139   0016FA  D7FE               	bra	u3377
  4140   0016FC  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4141   0016FE  D7FC               	bra	u3377
  4142   001700  F000               	nop	
  4143   001702                     
  4144                           ;main.c: 914:     errorcounter = 30;
  4145   001702  0E1E               	movlw	30
  4146   001704  6E52               	movwf	_errorcounter^0,c	;volatile
  4147   001706  0E00               	movlw	0
  4148   001708  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4149   00170A  0E00               	movlw	0
  4150   00170C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4151   00170E  0E00               	movlw	0
  4152   001710  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4153   001712                     l3410:
  4154                           
  4155                           ;main.c: 916:         IR_SENSORF = Read_IR();
  4156   001712  ECBC  F010         	call	_Read_IR	;wreg free
  4157   001716  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4158   00171A  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4159   00171E                     
  4160                           ;main.c: 917:         if (errorcounter == 0) {
  4161   00171E  5052               	movf	_errorcounter^0,w,c	;volatile
  4162   001720  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4163   001722  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4164   001724  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4165   001726  A4D8               	btfss	status,2,c
  4166   001728  EF98  F00B         	goto	u2031
  4167   00172C  EF9A  F00B         	goto	u2030
  4168   001730                     u2031:
  4169   001730  EF9F  F00B         	goto	l3418
  4170   001734                     u2030:
  4171   001734                     
  4172                           ;main.c: 918:             WriteSTLED316SErr('2');
  4173   001734  0E32               	movlw	50
  4174   001736  EC49  F00C         	call	_WriteSTLED316SErr
  4175   00173A                     
  4176                           ;main.c: 919:             MotorBREAK();
  4177   00173A  EC1D  F011         	call	_MotorBREAK	;wreg free
  4178   00173E                     l3418:
  4179                           
  4180                           ;main.c: 922:     } while (IR_SENSORF != 1);
  4181   00173E  040B               	decf	_IR_SENSORF^0,w,c
  4182   001740  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4183   001742  A4D8               	btfss	status,2,c
  4184   001744  EFA6  F00B         	goto	u2041
  4185   001748  EFA8  F00B         	goto	u2040
  4186   00174C                     u2041:
  4187   00174C  EF89  F00B         	goto	l3410
  4188   001750                     u2040:
  4189   001750                     
  4190                           ;main.c: 924:     errorcounter = 30;
  4191   001750  0E1E               	movlw	30
  4192   001752  6E52               	movwf	_errorcounter^0,c	;volatile
  4193   001754  0E00               	movlw	0
  4194   001756  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4195   001758  0E00               	movlw	0
  4196   00175A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4197   00175C  0E00               	movlw	0
  4198   00175E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4199   001760                     
  4200                           ;main.c: 926:     delay_1ms(Motor_Stop_Delay_Time);
  4201   001760  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4202   001764  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4203   001768  EC6D  F010         	call	_delay_1ms	;wreg free
  4204   00176C                     
  4205                           ;main.c: 927:     MotorBREAK();
  4206   00176C  EC1D  F011         	call	_MotorBREAK	;wreg free
  4207   001770                     
  4208                           ;main.c: 928:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4209   001770  0E06               	movlw	6
  4210   001772  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4211   001774  0E13               	movlw	19
  4212   001776  6E41               	movwf	??_MotorPosition_Init^0,c
  4213   001778  0EAE               	movlw	174
  4214   00177A                     u3387:
  4215   00177A  2EE8               	decfsz	wreg,f,c
  4216   00177C  D7FE               	bra	u3387
  4217   00177E  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4218   001780  D7FC               	bra	u3387
  4219   001782  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4220   001784  D7FA               	bra	u3387
  4221   001786                     
  4222                           ;main.c: 929:     IR_SENSORF = 0;
  4223   001786  0E00               	movlw	0
  4224   001788  6E0C               	movwf	(_IR_SENSORF+1)^0,c
  4225   00178A  0E00               	movlw	0
  4226   00178C  6E0B               	movwf	_IR_SENSORF^0,c
  4227   00178E                     
  4228                           ;main.c: 931:     LATAbits.LATA2 = 0;
  4229   00178E  9489               	bcf	137,2,c	;volatile
  4230   001790  0012               	return		;funcret
  4231   001792                     __end_of_MotorPosition_Init:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _InitTimer1 *****************
  4235 ;; Defined at:
  4236 ;;		line 1221 in file "main.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 2
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text19
  4265   00219C                     __ptext19:
  4266                           	callstack 0
  4267   00219C                     _InitTimer1:
  4268                           	callstack 28
  4269   00219C                     
  4270                           ;main.c: 1222:     T1CON = 0b00110001;
  4271   00219C  0E31               	movlw	49
  4272   00219E  6ECD               	movwf	205,c	;volatile
  4273                           
  4274                           ;main.c: 1225:     TMR1 = 0x9E57;
  4275   0021A0  0E9E               	movlw	158
  4276   0021A2  6ECF               	movwf	207,c	;volatile
  4277   0021A4  0E57               	movlw	87
  4278   0021A6  6ECE               	movwf	206,c	;volatile
  4279   0021A8                     
  4280                           ;main.c: 1226:     TMR1IF = 0;
  4281   0021A8  909E               	bcf	3998,0,c	;volatile
  4282   0021AA                     
  4283                           ;main.c: 1227:     TMR1IE = 1;
  4284   0021AA  809D               	bsf	3997,0,c	;volatile
  4285   0021AC                     
  4286                           ;main.c: 1228:     IPR1bits.TMR1IP = 1;
  4287   0021AC  809F               	bsf	159,0,c	;volatile
  4288                           
  4289                           ;main.c: 1230:     TMR1IF_triggered = 0;
  4290   0021AE  0E00               	movlw	0
  4291   0021B0  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  4292   0021B2  0012               	return		;funcret
  4293   0021B4                     __end_of_InitTimer1:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _InitSTLED316 *****************
  4297 ;; Defined at:
  4298 ;;		line 14 in file "Display.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  Brightness      1    wreg     unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  Brightness      1   14[COMRAM] unsigned char 
  4303 ;;  i               2    0        int 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        3 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 3
  4320 ;; This function calls:
  4321 ;;		_STLED316s_SPI_SendData
  4322 ;; This function is called by:
  4323 ;;		_main
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text20
  4328   001C62                     __ptext20:
  4329                           	callstack 0
  4330   001C62                     _InitSTLED316:
  4331                           	callstack 27
  4332                           
  4333                           ;incstack = 0
  4334                           ;InitSTLED316@Brightness stored from wreg
  4335   001C62  6E40               	movwf	InitSTLED316@Brightness^0,c
  4336   001C64                     
  4337                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  4338   001C64  888B               	bsf	139,4,c	;volatile
  4339                           
  4340                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  4341   001C66  988B               	bcf	139,4,c	;volatile
  4342   001C68                     
  4343                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4344   001C68  0E30               	movlw	48
  4345   001C6A  EC77  F00E         	call	_STLED316s_SPI_SendData
  4346   001C6E                     
  4347                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  4348   001C6E  888B               	bsf	139,4,c	;volatile
  4349   001C70                     
  4350                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  4351   001C70  988B               	bcf	139,4,c	;volatile
  4352                           
  4353                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4354   001C72  0E30               	movlw	48
  4355   001C74  EC77  F00E         	call	_STLED316s_SPI_SendData
  4356                           
  4357                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  4358   001C78  C040  F03E         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4359   001C7C  3A3E               	swapf	??_InitSTLED316^0,f,c
  4360   001C7E  0E0F               	movlw	15
  4361   001C80  163E               	andwf	??_InitSTLED316^0,f,c
  4362   001C82  0E05               	movlw	5
  4363   001C84  6E3F               	movwf	(??_InitSTLED316+1)^0,c
  4364   001C86                     u2005:
  4365   001C86  90D8               	bcf	status,0,c
  4366   001C88  363E               	rlcf	??_InitSTLED316^0,f,c
  4367   001C8A  2E3F               	decfsz	(??_InitSTLED316+1)^0,f,c
  4368   001C8C  EF43  F00E         	goto	u2005
  4369   001C90  503E               	movf	??_InitSTLED316^0,w,c
  4370   001C92  0905               	iorlw	5
  4371   001C94  EC77  F00E         	call	_STLED316s_SPI_SendData
  4372   001C98                     
  4373                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  4374   001C98  888B               	bsf	139,4,c	;volatile
  4375   001C9A                     
  4376                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  4377   001C9A  988B               	bcf	139,4,c	;volatile
  4378                           
  4379                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4380   001C9C  0E11               	movlw	17
  4381   001C9E  EC77  F00E         	call	_STLED316s_SPI_SendData
  4382   001CA2                     
  4383                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  4384   001CA2  888B               	bsf	139,4,c	;volatile
  4385   001CA4                     
  4386                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  4387   001CA4  988B               	bcf	139,4,c	;volatile
  4388                           
  4389                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4390   001CA6  0E11               	movlw	17
  4391   001CA8  EC77  F00E         	call	_STLED316s_SPI_SendData
  4392                           
  4393                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  4394   001CAC  5040               	movf	InitSTLED316@Brightness^0,w,c
  4395   001CAE  EC77  F00E         	call	_STLED316s_SPI_SendData
  4396                           
  4397                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  4398   001CB2  5040               	movf	InitSTLED316@Brightness^0,w,c
  4399   001CB4  EC77  F00E         	call	_STLED316s_SPI_SendData
  4400                           
  4401                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  4402   001CB8  5040               	movf	InitSTLED316@Brightness^0,w,c
  4403   001CBA  EC77  F00E         	call	_STLED316s_SPI_SendData
  4404   001CBE                     
  4405                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  4406   001CBE  888B               	bsf	139,4,c	;volatile
  4407   001CC0                     
  4408                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  4409   001CC0  988B               	bcf	139,4,c	;volatile
  4410                           
  4411                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  4412   001CC2  0E18               	movlw	24
  4413   001CC4  EC77  F00E         	call	_STLED316s_SPI_SendData
  4414   001CC8                     
  4415                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  4416   001CC8  888B               	bsf	139,4,c	;volatile
  4417   001CCA                     
  4418                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  4419   001CCA  988B               	bcf	139,4,c	;volatile
  4420                           
  4421                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  4422   001CCC  0E18               	movlw	24
  4423   001CCE  EC77  F00E         	call	_STLED316s_SPI_SendData
  4424                           
  4425                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  4426   001CD2  5040               	movf	InitSTLED316@Brightness^0,w,c
  4427   001CD4  EC77  F00E         	call	_STLED316s_SPI_SendData
  4428                           
  4429                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  4430   001CD8  5040               	movf	InitSTLED316@Brightness^0,w,c
  4431   001CDA  EC77  F00E         	call	_STLED316s_SPI_SendData
  4432                           
  4433                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  4434   001CDE  5040               	movf	InitSTLED316@Brightness^0,w,c
  4435   001CE0  EC77  F00E         	call	_STLED316s_SPI_SendData
  4436                           
  4437                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  4438   001CE4  5040               	movf	InitSTLED316@Brightness^0,w,c
  4439   001CE6  EC77  F00E         	call	_STLED316s_SPI_SendData
  4440   001CEA                     
  4441                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  4442   001CEA  888B               	bsf	139,4,c	;volatile
  4443   001CEC  0012               	return		;funcret
  4444   001CEE                     __end_of_InitSTLED316:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _Homing_Again_Manual *****************
  4448 ;; Defined at:
  4449 ;;		line 959 in file "main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  NUMInit         2    0        int 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        2 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 4
  4470 ;; This function calls:
  4471 ;;		_AD_capture_BattVoltage
  4472 ;;		_MotorBREAK
  4473 ;;		_MotorON
  4474 ;;		_Read_IR
  4475 ;;		_WriteSTLED316SData
  4476 ;;		_WriteSTLED316SErr
  4477 ;;		_delay_1ms
  4478 ;;		_readWeighingData
  4479 ;; This function is called by:
  4480 ;;		_main
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text21
  4485   000F32                     __ptext21:
  4486                           	callstack 0
  4487   000F32                     _Homing_Again_Manual:
  4488                           	callstack 26
  4489   000F32                     
  4490                           ;main.c: 962:     if (vibration_mode == 1) {
  4491   000F32  042C               	decf	_vibration_mode^0,w,c
  4492   000F34  A4D8               	btfss	status,2,c
  4493   000F36  EF9F  F007         	goto	u2071
  4494   000F3A  EFA1  F007         	goto	u2070
  4495   000F3E                     u2071:
  4496   000F3E  EFB6  F007         	goto	l346
  4497   000F42                     u2070:
  4498   000F42                     
  4499                           ;main.c: 963:         LATCbits.LATC1 = 1;
  4500   000F42  828B               	bsf	139,1,c	;volatile
  4501   000F44                     
  4502                           ;main.c: 964:         delay_1ms(Vmotor_Time);
  4503   000F44  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  4504   000F48  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4505   000F4C  EC6D  F010         	call	_delay_1ms	;wreg free
  4506   000F50                     
  4507                           ;main.c: 965:         LATCbits.LATC1 = 0;
  4508   000F50  928B               	bcf	139,1,c	;volatile
  4509   000F52                     l3472:
  4510                           
  4511                           ;main.c: 966:         _delay((unsigned long)((300)*(8000000/4000.0)));
  4512   000F52  0E04               	movlw	4
  4513   000F54  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4514   000F56  0E0C               	movlw	12
  4515   000F58  6E49               	movwf	??_Homing_Again_Manual^0,c
  4516   000F5A  0E34               	movlw	52
  4517   000F5C                     u3397:
  4518   000F5C  2EE8               	decfsz	wreg,f,c
  4519   000F5E  D7FE               	bra	u3397
  4520   000F60  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4521   000F62  D7FC               	bra	u3397
  4522   000F64  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4523   000F66  D7FA               	bra	u3397
  4524                           
  4525                           ;main.c: 967:     } else {
  4526   000F68  EFB9  F007         	goto	l3476
  4527   000F6C                     l346:
  4528                           
  4529                           ;main.c: 968:         LATCbits.LATC1 = 0;
  4530   000F6C  928B               	bcf	139,1,c	;volatile
  4531   000F6E  EFA9  F007         	goto	l3472
  4532   000F72                     l3476:
  4533                           
  4534                           ;main.c: 972:     LATAbits.LATA2 = 1;
  4535   000F72  8489               	bsf	137,2,c	;volatile
  4536   000F74                     
  4537                           ;main.c: 975:     if (NUM == 0) {
  4538   000F74  5013               	movf	_NUM^0,w,c
  4539   000F76  1014               	iorwf	(_NUM+1)^0,w,c
  4540   000F78  A4D8               	btfss	status,2,c
  4541   000F7A  EFC1  F007         	goto	u2081
  4542   000F7E  EFC3  F007         	goto	u2080
  4543   000F82                     u2081:
  4544   000F82  EFC9  F007         	goto	l3484
  4545   000F86                     u2080:
  4546   000F86                     
  4547                           ;main.c: 976:         i_RUN_ZERO = 1;
  4548   000F86  0E00               	movlw	0
  4549   000F88  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  4550   000F8A  0E01               	movlw	1
  4551   000F8C  6E11               	movwf	_i_RUN_ZERO^0,c
  4552                           
  4553                           ;main.c: 977:     }
  4554   000F8E  EF53  F009         	goto	l3592
  4555   000F92                     l3484:
  4556                           
  4557                           ;main.c: 979:     {;main.c: 980:         i_RUN_ZERO = 0;
  4558   000F92  0E00               	movlw	0
  4559   000F94  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  4560   000F96  0E00               	movlw	0
  4561   000F98  6E11               	movwf	_i_RUN_ZERO^0,c
  4562   000F9A  EF53  F009         	goto	l3592
  4563   000F9E                     l351:
  4564   000F9E  0004               	clrwdt		;# 
  4565   000FA0                     
  4566                           ;main.c: 986:         readWeighingData();
  4567   000FA0  EC24  F00F         	call	_readWeighingData	;wreg free
  4568   000FA4                     
  4569                           ;main.c: 987:         AD_capture_BattVoltage();
  4570   000FA4  ECC0  F00F         	call	_AD_capture_BattVoltage	;wreg free
  4571   000FA8                     
  4572                           ;main.c: 988:         delay_1ms(Motor_Pause_Time);
  4573   000FA8  C015  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  4574   000FAC  C016  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4575   000FB0  EC6D  F010         	call	_delay_1ms	;wreg free
  4576   000FB4                     
  4577                           ;main.c: 989:         MotorON();
  4578   000FB4  EC18  F011         	call	_MotorON	;wreg free
  4579   000FB8                     
  4580                           ;main.c: 990:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4581   000FB8  0E04               	movlw	4
  4582   000FBA  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4583   000FBC  0E8E               	movlw	142
  4584   000FBE  6E49               	movwf	??_Homing_Again_Manual^0,c
  4585   000FC0  0E12               	movlw	18
  4586   000FC2                     u3407:
  4587   000FC2  2EE8               	decfsz	wreg,f,c
  4588   000FC4  D7FE               	bra	u3407
  4589   000FC6  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4590   000FC8  D7FC               	bra	u3407
  4591   000FCA  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4592   000FCC  D7FA               	bra	u3407
  4593   000FCE  D000               	nop2	
  4594   000FD0                     
  4595                           ;main.c: 991:         errorcounter = 30;
  4596   000FD0  0E1E               	movlw	30
  4597   000FD2  6E52               	movwf	_errorcounter^0,c	;volatile
  4598   000FD4  0E00               	movlw	0
  4599   000FD6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4600   000FD8  0E00               	movlw	0
  4601   000FDA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4602   000FDC  0E00               	movlw	0
  4603   000FDE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4604   000FE0                     l3498:
  4605                           
  4606                           ;main.c: 995:             IR_SENSORF = Read_IR();
  4607   000FE0  ECBC  F010         	call	_Read_IR	;wreg free
  4608   000FE4  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4609   000FE8  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4610   000FEC                     
  4611                           ;main.c: 996:             if (errorcounter == 0) {
  4612   000FEC  5052               	movf	_errorcounter^0,w,c	;volatile
  4613   000FEE  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4614   000FF0  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4615   000FF2  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4616   000FF4  A4D8               	btfss	status,2,c
  4617   000FF6  EFFF  F007         	goto	u2091
  4618   000FFA  EF01  F008         	goto	u2090
  4619   000FFE                     u2091:
  4620   000FFE  EF06  F008         	goto	l3506
  4621   001002                     u2090:
  4622   001002                     
  4623                           ;main.c: 997:                 WriteSTLED316SErr('1');
  4624   001002  0E31               	movlw	49
  4625   001004  EC49  F00C         	call	_WriteSTLED316SErr
  4626   001008                     
  4627                           ;main.c: 998:                 MotorBREAK();
  4628   001008  EC1D  F011         	call	_MotorBREAK	;wreg free
  4629   00100C                     l3506:
  4630                           
  4631                           ;main.c: 1001:         } while (IR_SENSORF != 0);
  4632   00100C  500B               	movf	_IR_SENSORF^0,w,c
  4633   00100E  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4634   001010  A4D8               	btfss	status,2,c
  4635   001012  EF0D  F008         	goto	u2101
  4636   001016  EF0F  F008         	goto	u2100
  4637   00101A                     u2101:
  4638   00101A  EFF0  F007         	goto	l3498
  4639   00101E                     u2100:
  4640   00101E                     
  4641                           ;main.c: 1003:         _delay((unsigned long)((30)*(8000000/4000.0)));
  4642   00101E  0E4E               	movlw	78
  4643   001020  6E49               	movwf	??_Homing_Again_Manual^0,c
  4644   001022  0EEB               	movlw	235
  4645   001024                     u3417:
  4646   001024  2EE8               	decfsz	wreg,f,c
  4647   001026  D7FE               	bra	u3417
  4648   001028  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4649   00102A  D7FC               	bra	u3417
  4650   00102C  F000               	nop	
  4651   00102E                     
  4652                           ;main.c: 1005:         errorcounter = 30;
  4653   00102E  0E1E               	movlw	30
  4654   001030  6E52               	movwf	_errorcounter^0,c	;volatile
  4655   001032  0E00               	movlw	0
  4656   001034  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4657   001036  0E00               	movlw	0
  4658   001038  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4659   00103A  0E00               	movlw	0
  4660   00103C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4661   00103E                     l3512:
  4662                           
  4663                           ;main.c: 1008:             IR_SENSORF = Read_IR();
  4664   00103E  ECBC  F010         	call	_Read_IR	;wreg free
  4665   001042  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4666   001046  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4667   00104A                     
  4668                           ;main.c: 1009:             if (errorcounter == 0) {
  4669   00104A  5052               	movf	_errorcounter^0,w,c	;volatile
  4670   00104C  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4671   00104E  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4672   001050  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4673   001052  A4D8               	btfss	status,2,c
  4674   001054  EF2E  F008         	goto	u2111
  4675   001058  EF30  F008         	goto	u2110
  4676   00105C                     u2111:
  4677   00105C  EF35  F008         	goto	l3520
  4678   001060                     u2110:
  4679   001060                     
  4680                           ;main.c: 1010:                 WriteSTLED316SErr('2');
  4681   001060  0E32               	movlw	50
  4682   001062  EC49  F00C         	call	_WriteSTLED316SErr
  4683   001066                     
  4684                           ;main.c: 1011:                 MotorBREAK();
  4685   001066  EC1D  F011         	call	_MotorBREAK	;wreg free
  4686   00106A                     l3520:
  4687                           
  4688                           ;main.c: 1013:         } while (IR_SENSORF != 1);
  4689   00106A  040B               	decf	_IR_SENSORF^0,w,c
  4690   00106C  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4691   00106E  A4D8               	btfss	status,2,c
  4692   001070  EF3C  F008         	goto	u2121
  4693   001074  EF3E  F008         	goto	u2120
  4694   001078                     u2121:
  4695   001078  EF1F  F008         	goto	l3512
  4696   00107C                     u2120:
  4697   00107C                     
  4698                           ;main.c: 1016:         errorcounter = 30;
  4699   00107C  0E1E               	movlw	30
  4700   00107E  6E52               	movwf	_errorcounter^0,c	;volatile
  4701   001080  0E00               	movlw	0
  4702   001082  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4703   001084  0E00               	movlw	0
  4704   001086  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4705   001088  0E00               	movlw	0
  4706   00108A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4707   00108C                     
  4708                           ;main.c: 1017:         delay_1ms(Motor_Stop_Delay_Time);
  4709   00108C  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4710   001090  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4711   001094  EC6D  F010         	call	_delay_1ms	;wreg free
  4712   001098                     
  4713                           ;main.c: 1018:         MotorBREAK();
  4714   001098  EC1D  F011         	call	_MotorBREAK	;wreg free
  4715                           
  4716                           ;main.c: 1021:         if (NUM > 0 && i_RUN_ZERO != 1) {
  4717   00109C  5013               	movf	_NUM^0,w,c
  4718   00109E  1014               	iorwf	(_NUM+1)^0,w,c
  4719   0010A0  B4D8               	btfsc	status,2,c
  4720   0010A2  EF55  F008         	goto	u2131
  4721   0010A6  EF57  F008         	goto	u2130
  4722   0010AA                     u2131:
  4723   0010AA  EF63  F008         	goto	l3532
  4724   0010AE                     u2130:
  4725   0010AE  0411               	decf	_i_RUN_ZERO^0,w,c
  4726   0010B0  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4727   0010B2  B4D8               	btfsc	status,2,c
  4728   0010B4  EF5E  F008         	goto	u2141
  4729   0010B8  EF60  F008         	goto	u2140
  4730   0010BC                     u2141:
  4731   0010BC  EF63  F008         	goto	l3532
  4732   0010C0                     u2140:
  4733   0010C0                     
  4734                           ;main.c: 1022:             NUM--;
  4735   0010C0  0613               	decf	_NUM^0,f,c
  4736   0010C2  A0D8               	btfss	status,0,c
  4737   0010C4  0614               	decf	(_NUM+1)^0,f,c
  4738   0010C6                     l3532:
  4739                           
  4740                           ;main.c: 1025:         WriteSTLED316SData(NUM, vibration_mode);
  4741   0010C6  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  4742   0010CA  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  4743   0010CE  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4744   0010D2  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  4745   0010D6                     
  4746                           ;main.c: 1026:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  4747   0010D6  042C               	decf	_vibration_mode^0,w,c
  4748   0010D8  A4D8               	btfss	status,2,c
  4749   0010DA  EF71  F008         	goto	u2151
  4750   0010DE  EF73  F008         	goto	u2150
  4751   0010E2                     u2151:
  4752   0010E2  EF9A  F008         	goto	l3546
  4753   0010E6                     u2150:
  4754   0010E6  5013               	movf	_NUM^0,w,c
  4755   0010E8  1014               	iorwf	(_NUM+1)^0,w,c
  4756   0010EA  A4D8               	btfss	status,2,c
  4757   0010EC  EF7A  F008         	goto	u2161
  4758   0010F0  EF7C  F008         	goto	u2160
  4759   0010F4                     u2161:
  4760   0010F4  EF85  F008         	goto	l361
  4761   0010F8                     u2160:
  4762   0010F8  0411               	decf	_i_RUN_ZERO^0,w,c
  4763   0010FA  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4764   0010FC  A4D8               	btfss	status,2,c
  4765   0010FE  EF83  F008         	goto	u2171
  4766   001102  EF85  F008         	goto	u2170
  4767   001106                     u2171:
  4768   001106  EF9A  F008         	goto	l3546
  4769   00110A                     u2170:
  4770   00110A                     l361:
  4771                           
  4772                           ;main.c: 1027:             LATCbits.LATC1 = 1;
  4773   00110A  828B               	bsf	139,1,c	;volatile
  4774   00110C                     
  4775                           ;main.c: 1028:             delay_1ms(Vmotor_Time);
  4776   00110C  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  4777   001110  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4778   001114  EC6D  F010         	call	_delay_1ms	;wreg free
  4779   001118                     
  4780                           ;main.c: 1029:             LATCbits.LATC1 = 0;
  4781   001118  928B               	bcf	139,1,c	;volatile
  4782   00111A                     
  4783                           ;main.c: 1030:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4784   00111A  0E04               	movlw	4
  4785   00111C  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4786   00111E  0E0C               	movlw	12
  4787   001120  6E49               	movwf	??_Homing_Again_Manual^0,c
  4788   001122  0E34               	movlw	52
  4789   001124                     u3427:
  4790   001124  2EE8               	decfsz	wreg,f,c
  4791   001126  D7FE               	bra	u3427
  4792   001128  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4793   00112A  D7FC               	bra	u3427
  4794   00112C  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4795   00112E  D7FA               	bra	u3427
  4796                           
  4797                           ;main.c: 1032:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) 
      +                          {
  4798   001130  EFDA  F008         	goto	l3560
  4799   001134                     l3546:
  4800   001134  502C               	movf	_vibration_mode^0,w,c
  4801   001136  A4D8               	btfss	status,2,c
  4802   001138  EFA0  F008         	goto	u2181
  4803   00113C  EFA2  F008         	goto	u2180
  4804   001140                     u2181:
  4805   001140  EFDA  F008         	goto	l3560
  4806   001144                     u2180:
  4807   001144  5013               	movf	_NUM^0,w,c
  4808   001146  1014               	iorwf	(_NUM+1)^0,w,c
  4809   001148  A4D8               	btfss	status,2,c
  4810   00114A  EFA9  F008         	goto	u2191
  4811   00114E  EFAB  F008         	goto	u2190
  4812   001152                     u2191:
  4813   001152  EFB4  F008         	goto	l365
  4814   001156                     u2190:
  4815   001156  0411               	decf	_i_RUN_ZERO^0,w,c
  4816   001158  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4817   00115A  A4D8               	btfss	status,2,c
  4818   00115C  EFB2  F008         	goto	u2201
  4819   001160  EFB4  F008         	goto	u2200
  4820   001164                     u2201:
  4821   001164  EFDA  F008         	goto	l3560
  4822   001168                     u2200:
  4823   001168                     l365:
  4824                           
  4825                           ;main.c: 1033:             LATCbits.LATC1 = 0;
  4826   001168  928B               	bcf	139,1,c	;volatile
  4827   00116A                     
  4828                           ;main.c: 1034:             if (NUM != 0 || i_RUN_ZERO == 1) {
  4829   00116A  5013               	movf	_NUM^0,w,c
  4830   00116C  1014               	iorwf	(_NUM+1)^0,w,c
  4831   00116E  A4D8               	btfss	status,2,c
  4832   001170  EFBC  F008         	goto	u2211
  4833   001174  EFBE  F008         	goto	u2210
  4834   001178                     u2211:
  4835   001178  EFC7  F008         	goto	l3556
  4836   00117C                     u2210:
  4837   00117C  0411               	decf	_i_RUN_ZERO^0,w,c
  4838   00117E  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4839   001180  A4D8               	btfss	status,2,c
  4840   001182  EFC5  F008         	goto	u2221
  4841   001186  EFC7  F008         	goto	u2220
  4842   00118A                     u2221:
  4843   00118A  EFCF  F008         	goto	l3558
  4844   00118E                     u2220:
  4845   00118E                     l3556:
  4846                           
  4847                           ;main.c: 1035:                 delay_1ms(Vmotor_Time);
  4848   00118E  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  4849   001192  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4850   001196  EC6D  F010         	call	_delay_1ms	;wreg free
  4851                           
  4852                           ;main.c: 1036:             } else {
  4853   00119A  EFDA  F008         	goto	l3560
  4854   00119E                     l3558:
  4855                           
  4856                           ;main.c: 1037:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  4857   00119E  0E06               	movlw	6
  4858   0011A0  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4859   0011A2  0E13               	movlw	19
  4860   0011A4  6E49               	movwf	??_Homing_Again_Manual^0,c
  4861   0011A6  0EAE               	movlw	174
  4862   0011A8                     u3437:
  4863   0011A8  2EE8               	decfsz	wreg,f,c
  4864   0011AA  D7FE               	bra	u3437
  4865   0011AC  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4866   0011AE  D7FC               	bra	u3437
  4867   0011B0  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4868   0011B2  D7FA               	bra	u3437
  4869   0011B4                     l3560:
  4870                           
  4871                           ;main.c: 1043:         if (Stop == 1)
  4872   0011B4  042F               	decf	_Stop^0,w,c
  4873   0011B6  A4D8               	btfss	status,2,c
  4874   0011B8  EFE0  F008         	goto	u2231
  4875   0011BC  EFE2  F008         	goto	u2230
  4876   0011C0                     u2231:
  4877   0011C0  EF0F  F009         	goto	l3574
  4878   0011C4                     u2230:
  4879   0011C4  EF65  F009         	goto	l371
  4880   0011C8                     l3564:
  4881                           
  4882                           ;main.c: 1050:             i_RUN_ZERO = 2;
  4883   0011C8  0E00               	movlw	0
  4884   0011CA  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  4885   0011CC  0E02               	movlw	2
  4886   0011CE  6E11               	movwf	_i_RUN_ZERO^0,c
  4887   0011D0                     
  4888                           ;main.c: 1051:             WriteSTLED316SData(NUM, !vibration_mode);
  4889   0011D0  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  4890   0011D4  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  4891   0011D8  502C               	movf	_vibration_mode^0,w,c
  4892   0011DA  B4D8               	btfsc	status,2,c
  4893   0011DC  EFF2  F008         	goto	u2241
  4894   0011E0  EFF5  F008         	goto	u2240
  4895   0011E4                     u2241:
  4896   0011E4  0E01               	movlw	1
  4897   0011E6  EFF6  F008         	goto	u2250
  4898   0011EA                     u2240:
  4899   0011EA  0E00               	movlw	0
  4900   0011EC                     u2250:
  4901   0011EC  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
  4902   0011EE  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  4903   0011F2                     
  4904                           ;main.c: 1052:             _delay((unsigned long)((50)*(8000000/4000.0)));
  4905   0011F2  0E82               	movlw	130
  4906   0011F4  6E49               	movwf	??_Homing_Again_Manual^0,c
  4907   0011F6  0EDE               	movlw	222
  4908   0011F8                     u3447:
  4909   0011F8  2EE8               	decfsz	wreg,f,c
  4910   0011FA  D7FE               	bra	u3447
  4911   0011FC  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4912   0011FE  D7FC               	bra	u3447
  4913   001200                     
  4914                           ;main.c: 1053:             WriteSTLED316SData(NUM, vibration_mode);
  4915   001200  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  4916   001204  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  4917   001208  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4918   00120C  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  4919   001210                     
  4920                           ;main.c: 1054:             _delay((unsigned long)((50)*(8000000/4000.0)));
  4921   001210  0E82               	movlw	130
  4922   001212  6E49               	movwf	??_Homing_Again_Manual^0,c
  4923   001214  0EDE               	movlw	222
  4924   001216                     u3457:
  4925   001216  2EE8               	decfsz	wreg,f,c
  4926   001218  D7FE               	bra	u3457
  4927   00121A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4928   00121C  D7FC               	bra	u3457
  4929   00121E                     l3574:
  4930                           
  4931                           ;main.c: 1049:         while (dispense == 0 && (i_RUN_ZERO == 1 || i_RUN_ZERO == 0)) {
  4932   00121E  5003               	movf	_dispense^0,w,c
  4933   001220  1004               	iorwf	(_dispense+1)^0,w,c
  4934   001222  A4D8               	btfss	status,2,c
  4935   001224  EF16  F009         	goto	u2261
  4936   001228  EF18  F009         	goto	u2260
  4937   00122C                     u2261:
  4938   00122C  EF2A  F009         	goto	l3580
  4939   001230                     u2260:
  4940   001230  0411               	decf	_i_RUN_ZERO^0,w,c
  4941   001232  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4942   001234  B4D8               	btfsc	status,2,c
  4943   001236  EF1F  F009         	goto	u2271
  4944   00123A  EF21  F009         	goto	u2270
  4945   00123E                     u2271:
  4946   00123E  EFE4  F008         	goto	l3564
  4947   001242                     u2270:
  4948   001242  5011               	movf	_i_RUN_ZERO^0,w,c
  4949   001244  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4950   001246  B4D8               	btfsc	status,2,c
  4951   001248  EF28  F009         	goto	u2281
  4952   00124C  EF2A  F009         	goto	u2280
  4953   001250                     u2281:
  4954   001250  EFE4  F008         	goto	l3564
  4955   001254                     u2280:
  4956   001254                     l3580:
  4957                           
  4958                           ;main.c: 1056:         WriteSTLED316SData(NUM, vibration_mode);
  4959   001254  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  4960   001258  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  4961   00125C  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4962   001260  ECDD  F00D         	call	_WriteSTLED316SData	;wreg free
  4963   001264                     
  4964                           ;main.c: 1059:         if(dispense == 0 && NUM != 0)
  4965   001264  5003               	movf	_dispense^0,w,c
  4966   001266  1004               	iorwf	(_dispense+1)^0,w,c
  4967   001268  A4D8               	btfss	status,2,c
  4968   00126A  EF39  F009         	goto	u2291
  4969   00126E  EF3B  F009         	goto	u2290
  4970   001272                     u2291:
  4971   001272  EF4C  F009         	goto	l3590
  4972   001276                     u2290:
  4973   001276  5013               	movf	_NUM^0,w,c
  4974   001278  1014               	iorwf	(_NUM+1)^0,w,c
  4975   00127A  B4D8               	btfsc	status,2,c
  4976   00127C  EF42  F009         	goto	u2301
  4977   001280  EF44  F009         	goto	u2300
  4978   001284                     u2301:
  4979   001284  EF4C  F009         	goto	l3590
  4980   001288                     u2300:
  4981   001288                     
  4982                           ;main.c: 1060:         {;main.c: 1061:             NUM_REC = NUM;
  4983   001288  C013  F00F         	movff	_NUM,_NUM_REC
  4984   00128C  C014  F010         	movff	_NUM+1,_NUM_REC+1
  4985   001290                     
  4986                           ;main.c: 1062:             NUM = 0;
  4987   001290  0E00               	movlw	0
  4988   001292  6E14               	movwf	(_NUM+1)^0,c
  4989   001294  0E00               	movlw	0
  4990   001296  6E13               	movwf	_NUM^0,c
  4991   001298                     l3590:
  4992                           
  4993                           ;main.c: 1064:         _delay((unsigned long)((50)*(8000000/4000.0)));
  4994   001298  0E82               	movlw	130
  4995   00129A  6E49               	movwf	??_Homing_Again_Manual^0,c
  4996   00129C  0EDE               	movlw	222
  4997   00129E                     u3467:
  4998   00129E  2EE8               	decfsz	wreg,f,c
  4999   0012A0  D7FE               	bra	u3467
  5000   0012A2  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5001   0012A4  D7FC               	bra	u3467
  5002   0012A6                     l3592:
  5003                           
  5004                           ;main.c: 984:     while (NUM > 0 || i_RUN_ZERO == 1) {
  5005   0012A6  5013               	movf	_NUM^0,w,c
  5006   0012A8  1014               	iorwf	(_NUM+1)^0,w,c
  5007   0012AA  A4D8               	btfss	status,2,c
  5008   0012AC  EF5A  F009         	goto	u2311
  5009   0012B0  EF5C  F009         	goto	u2310
  5010   0012B4                     u2311:
  5011   0012B4  EFCF  F007         	goto	l351
  5012   0012B8                     u2310:
  5013   0012B8  0411               	decf	_i_RUN_ZERO^0,w,c
  5014   0012BA  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5015   0012BC  B4D8               	btfsc	status,2,c
  5016   0012BE  EF63  F009         	goto	u2321
  5017   0012C2  EF65  F009         	goto	u2320
  5018   0012C6                     u2321:
  5019   0012C6  EFCF  F007         	goto	l351
  5020   0012CA                     u2320:
  5021   0012CA                     l371:
  5022                           
  5023                           ;main.c: 1068:     LATAbits.LATA2 = 0;
  5024   0012CA  9489               	bcf	137,2,c	;volatile
  5025   0012CC                     
  5026                           ;main.c: 1070:     if ((NUM == 0 || Stop == 1) && i_RUN_ZERO == 0) {
  5027   0012CC  5013               	movf	_NUM^0,w,c
  5028   0012CE  1014               	iorwf	(_NUM+1)^0,w,c
  5029   0012D0  B4D8               	btfsc	status,2,c
  5030   0012D2  EF6D  F009         	goto	u2331
  5031   0012D6  EF6F  F009         	goto	u2330
  5032   0012DA                     u2331:
  5033   0012DA  EF77  F009         	goto	l3600
  5034   0012DE                     u2330:
  5035   0012DE  042F               	decf	_Stop^0,w,c
  5036   0012E0  A4D8               	btfss	status,2,c
  5037   0012E2  EF75  F009         	goto	u2341
  5038   0012E6  EF77  F009         	goto	u2340
  5039   0012EA                     u2341:
  5040   0012EA  EF9B  F009         	goto	l3612
  5041   0012EE                     u2340:
  5042   0012EE                     l3600:
  5043   0012EE  5011               	movf	_i_RUN_ZERO^0,w,c
  5044   0012F0  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5045   0012F2  A4D8               	btfss	status,2,c
  5046   0012F4  EF7E  F009         	goto	u2351
  5047   0012F8  EF80  F009         	goto	u2350
  5048   0012FC                     u2351:
  5049   0012FC  EF9B  F009         	goto	l3612
  5050   001300                     u2350:
  5051   001300                     
  5052                           ;main.c: 1072:         if (vibration_mode == 1) {
  5053   001300  042C               	decf	_vibration_mode^0,w,c
  5054   001302  A4D8               	btfss	status,2,c
  5055   001304  EF86  F009         	goto	u2361
  5056   001308  EF88  F009         	goto	u2360
  5057   00130C                     u2361:
  5058   00130C  EF9B  F009         	goto	l3612
  5059   001310                     u2360:
  5060   001310                     
  5061                           ;main.c: 1073:             LATCbits.LATC1 = 1;
  5062   001310  828B               	bsf	139,1,c	;volatile
  5063   001312                     
  5064                           ;main.c: 1074:             delay_1ms(Vmotor_Time);
  5065   001312  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5066   001316  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5067   00131A  EC6D  F010         	call	_delay_1ms	;wreg free
  5068   00131E                     
  5069                           ;main.c: 1076:             LATCbits.LATC1 = 0;
  5070   00131E  928B               	bcf	139,1,c	;volatile
  5071   001320                     
  5072                           ;main.c: 1077:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5073   001320  0E04               	movlw	4
  5074   001322  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5075   001324  0E0C               	movlw	12
  5076   001326  6E49               	movwf	??_Homing_Again_Manual^0,c
  5077   001328  0E34               	movlw	52
  5078   00132A                     u3477:
  5079   00132A  2EE8               	decfsz	wreg,f,c
  5080   00132C  D7FE               	bra	u3477
  5081   00132E  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5082   001330  D7FC               	bra	u3477
  5083   001332  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5084   001334  D7FA               	bra	u3477
  5085   001336                     l3612:
  5086                           
  5087                           ;main.c: 1081:     i_RUN_ZERO = 0;
  5088   001336  0E00               	movlw	0
  5089   001338  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5090   00133A  0E00               	movlw	0
  5091   00133C  6E11               	movwf	_i_RUN_ZERO^0,c
  5092   00133E                     
  5093                           ;main.c: 1082:     NUM = 0;
  5094   00133E  0E00               	movlw	0
  5095   001340  6E14               	movwf	(_NUM+1)^0,c
  5096   001342  0E00               	movlw	0
  5097   001344  6E13               	movwf	_NUM^0,c
  5098   001346                     
  5099                           ;main.c: 1084:     dispense = 0;
  5100   001346  0E00               	movlw	0
  5101   001348  6E04               	movwf	(_dispense+1)^0,c
  5102   00134A  0E00               	movlw	0
  5103   00134C  6E03               	movwf	_dispense^0,c
  5104   00134E                     
  5105                           ;main.c: 1085:     OpMode = MANUAL_MODE;
  5106   00134E  0E00               	movlw	0
  5107   001350  6E2A               	movwf	_OpMode^0,c	;volatile
  5108   001352  0012               	return		;funcret
  5109   001354                     __end_of_Homing_Again_Manual:
  5110                           	callstack 0
  5111                           
  5112 ;; *************** function _WriteSTLED316SData *****************
  5113 ;; Defined at:
  5114 ;;		line 145 in file "Display.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  number          2   14[COMRAM] int 
  5117 ;;  v_mode          1   16[COMRAM] unsigned char 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  NUM_DIG1        2   19[COMRAM] int 
  5120 ;;  NUM_DIG0        2   17[COMRAM] int 
  5121 ;;  data4           1   22[COMRAM] unsigned char 
  5122 ;;  data3           1   21[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:        9 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 3
  5139 ;; This function calls:
  5140 ;;		_Get7Seg
  5141 ;;		_STLED316s_SPI_SendData
  5142 ;;		___awdiv
  5143 ;;		___awmod
  5144 ;; This function is called by:
  5145 ;;		_main
  5146 ;;		_Homing_Again_Manual
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text22
  5151   001BBA                     __ptext22:
  5152                           	callstack 0
  5153   001BBA                     _WriteSTLED316SData:
  5154                           	callstack 27
  5155   001BBA                     
  5156                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  5157   001BBA  C040  F038         	movff	WriteSTLED316SData@number,___awmod@dividend
  5158   001BBE  C041  F039         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  5159   001BC2  0E00               	movlw	0
  5160   001BC4  6E3B               	movwf	(___awmod@divisor+1)^0,c
  5161   001BC6  0E0A               	movlw	10
  5162   001BC8  6E3A               	movwf	___awmod@divisor^0,c
  5163   001BCA  EC85  F00D         	call	___awmod	;wreg free
  5164   001BCE  C038  F043         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  5165   001BD2  C039  F044         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  5166                           
  5167                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  5168   001BD6  C040  F038         	movff	WriteSTLED316SData@number,___awdiv@dividend
  5169   001BDA  C041  F039         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  5170   001BDE  0E00               	movlw	0
  5171   001BE0  6E3B               	movwf	(___awdiv@divisor+1)^0,c
  5172   001BE2  0E0A               	movlw	10
  5173   001BE4  6E3A               	movwf	___awdiv@divisor^0,c
  5174   001BE6  EC23  F00D         	call	___awdiv	;wreg free
  5175   001BEA  C038  F045         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  5176   001BEE  C039  F046         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  5177   001BF2                     
  5178                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  5179   001BF2  988B               	bcf	139,4,c	;volatile
  5180                           
  5181                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  5182   001BF4  0E00               	movlw	0
  5183   001BF6  EC77  F00E         	call	_STLED316s_SPI_SendData
  5184   001BFA                     
  5185                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  5186   001BFA  888B               	bsf	139,4,c	;volatile
  5187   001BFC                     
  5188                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  5189   001BFC  988B               	bcf	139,4,c	;volatile
  5190                           
  5191                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  5192   001BFE  0E00               	movlw	0
  5193   001C00  EC77  F00E         	call	_STLED316s_SPI_SendData
  5194                           
  5195                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  5196   001C04  C045  F038         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  5197   001C08  C046  F039         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  5198   001C0C  ECBD  F00C         	call	_Get7Seg	;wreg free
  5199   001C10  6E48               	movwf	WriteSTLED316SData@data4^0,c
  5200                           
  5201                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  5202   001C12  C043  F038         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  5203   001C16  C044  F039         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  5204   001C1A  ECBD  F00C         	call	_Get7Seg	;wreg free
  5205   001C1E  6E47               	movwf	WriteSTLED316SData@data3^0,c
  5206   001C20                     
  5207                           ;Display.c: 165:     if (v_mode) {
  5208   001C20  5042               	movf	WriteSTLED316SData@v_mode^0,w,c
  5209   001C22  B4D8               	btfsc	status,2,c
  5210   001C24  EF16  F00E         	goto	u1931
  5211   001C28  EF18  F00E         	goto	u1930
  5212   001C2C                     u1931:
  5213   001C2C  EF24  F00E         	goto	l3132
  5214   001C30                     u1930:
  5215   001C30                     
  5216                           ;Display.c: 166:         if (v_mode == 0xFF)
  5217   001C30  2842               	incf	WriteSTLED316SData@v_mode^0,w,c
  5218   001C32  A4D8               	btfss	status,2,c
  5219   001C34  EF1E  F00E         	goto	u1941
  5220   001C38  EF20  F00E         	goto	u1940
  5221   001C3C                     u1941:
  5222   001C3C  EF23  F00E         	goto	l3130
  5223   001C40                     u1940:
  5224   001C40                     
  5225                           ;Display.c: 167:             data4 |= 0x80;
  5226   001C40  8E48               	bsf	WriteSTLED316SData@data4^0,7,c
  5227   001C42  EF24  F00E         	goto	l3132
  5228   001C46                     l3130:
  5229                           
  5230                           ;Display.c: 169:             data3 |= 0x80;
  5231   001C46  8E47               	bsf	WriteSTLED316SData@data3^0,7,c
  5232   001C48                     l3132:
  5233                           
  5234                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  5235   001C48  5048               	movf	WriteSTLED316SData@data4^0,w,c
  5236   001C4A  EC77  F00E         	call	_STLED316s_SPI_SendData
  5237   001C4E                     
  5238                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  5239   001C4E  5047               	movf	WriteSTLED316SData@data3^0,w,c
  5240   001C50  EC77  F00E         	call	_STLED316s_SPI_SendData
  5241   001C54                     
  5242                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  5243   001C54  888B               	bsf	139,4,c	;volatile
  5244   001C56                     
  5245                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  5246   001C56  988B               	bcf	139,4,c	;volatile
  5247   001C58                     
  5248                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  5249   001C58  0E0D               	movlw	13
  5250   001C5A  EC77  F00E         	call	_STLED316s_SPI_SendData
  5251   001C5E                     
  5252                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  5253   001C5E  888B               	bsf	139,4,c	;volatile
  5254   001C60  0012               	return		;funcret
  5255   001C62                     __end_of_WriteSTLED316SData:
  5256                           	callstack 0
  5257                           
  5258 ;; *************** function ___awmod *****************
  5259 ;; Defined at:
  5260 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  dividend        2    6[COMRAM] int 
  5263 ;;  divisor         2    8[COMRAM] int 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  sign            1   11[COMRAM] unsigned char 
  5266 ;;  counter         1   10[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2    6[COMRAM] int 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;Total ram usage:        6 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 2
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_WriteSTLED316SData
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text23
  5291   001B0A                     __ptext23:
  5292                           	callstack 0
  5293   001B0A                     ___awmod:
  5294                           	callstack 27
  5295   001B0A  0E00               	movlw	0
  5296   001B0C  6E3D               	movwf	___awmod@sign^0,c
  5297   001B0E  BE39               	btfsc	(___awmod@dividend+1)^0,7,c
  5298   001B10  EF8E  F00D         	goto	u1870
  5299   001B14  EF8C  F00D         	goto	u1871
  5300   001B18                     u1871:
  5301   001B18  EF94  F00D         	goto	l3088
  5302   001B1C                     u1870:
  5303   001B1C  6C38               	negf	___awmod@dividend^0,c
  5304   001B1E  1E39               	comf	(___awmod@dividend+1)^0,f,c
  5305   001B20  B0D8               	btfsc	status,0,c
  5306   001B22  2A39               	incf	(___awmod@dividend+1)^0,f,c
  5307   001B24  0E01               	movlw	1
  5308   001B26  6E3D               	movwf	___awmod@sign^0,c
  5309   001B28                     l3088:
  5310   001B28  BE3B               	btfsc	(___awmod@divisor+1)^0,7,c
  5311   001B2A  EF9B  F00D         	goto	u1880
  5312   001B2E  EF99  F00D         	goto	u1881
  5313   001B32                     u1881:
  5314   001B32  EF9F  F00D         	goto	l3092
  5315   001B36                     u1880:
  5316   001B36  6C3A               	negf	___awmod@divisor^0,c
  5317   001B38  1E3B               	comf	(___awmod@divisor+1)^0,f,c
  5318   001B3A  B0D8               	btfsc	status,0,c
  5319   001B3C  2A3B               	incf	(___awmod@divisor+1)^0,f,c
  5320   001B3E                     l3092:
  5321   001B3E  503A               	movf	___awmod@divisor^0,w,c
  5322   001B40  103B               	iorwf	(___awmod@divisor+1)^0,w,c
  5323   001B42  B4D8               	btfsc	status,2,c
  5324   001B44  EFA6  F00D         	goto	u1891
  5325   001B48  EFA8  F00D         	goto	u1890
  5326   001B4C                     u1891:
  5327   001B4C  EFCC  F00D         	goto	l3108
  5328   001B50                     u1890:
  5329   001B50  0E01               	movlw	1
  5330   001B52  6E3C               	movwf	___awmod@counter^0,c
  5331   001B54  EFB0  F00D         	goto	l3098
  5332   001B58                     l3096:
  5333   001B58  90D8               	bcf	status,0,c
  5334   001B5A  363A               	rlcf	___awmod@divisor^0,f,c
  5335   001B5C  363B               	rlcf	(___awmod@divisor+1)^0,f,c
  5336   001B5E  2A3C               	incf	___awmod@counter^0,f,c
  5337   001B60                     l3098:
  5338   001B60  AE3B               	btfss	(___awmod@divisor+1)^0,7,c
  5339   001B62  EFB5  F00D         	goto	u1901
  5340   001B66  EFB7  F00D         	goto	u1900
  5341   001B6A                     u1901:
  5342   001B6A  EFAC  F00D         	goto	l3096
  5343   001B6E                     u1900:
  5344   001B6E                     l3100:
  5345   001B6E  503A               	movf	___awmod@divisor^0,w,c
  5346   001B70  5C38               	subwf	___awmod@dividend^0,w,c
  5347   001B72  503B               	movf	(___awmod@divisor+1)^0,w,c
  5348   001B74  5839               	subwfb	(___awmod@dividend+1)^0,w,c
  5349   001B76  A0D8               	btfss	status,0,c
  5350   001B78  EFC0  F00D         	goto	u1911
  5351   001B7C  EFC2  F00D         	goto	u1910
  5352   001B80                     u1911:
  5353   001B80  EFC6  F00D         	goto	l3104
  5354   001B84                     u1910:
  5355   001B84  503A               	movf	___awmod@divisor^0,w,c
  5356   001B86  5E38               	subwf	___awmod@dividend^0,f,c
  5357   001B88  503B               	movf	(___awmod@divisor+1)^0,w,c
  5358   001B8A  5A39               	subwfb	(___awmod@dividend+1)^0,f,c
  5359   001B8C                     l3104:
  5360   001B8C  90D8               	bcf	status,0,c
  5361   001B8E  323B               	rrcf	(___awmod@divisor+1)^0,f,c
  5362   001B90  323A               	rrcf	___awmod@divisor^0,f,c
  5363   001B92  2E3C               	decfsz	___awmod@counter^0,f,c
  5364   001B94  EFB7  F00D         	goto	l3100
  5365   001B98                     l3108:
  5366   001B98  503D               	movf	___awmod@sign^0,w,c
  5367   001B9A  B4D8               	btfsc	status,2,c
  5368   001B9C  EFD2  F00D         	goto	u1921
  5369   001BA0  EFD4  F00D         	goto	u1920
  5370   001BA4                     u1921:
  5371   001BA4  EFD8  F00D         	goto	l3112
  5372   001BA8                     u1920:
  5373   001BA8  6C38               	negf	___awmod@dividend^0,c
  5374   001BAA  1E39               	comf	(___awmod@dividend+1)^0,f,c
  5375   001BAC  B0D8               	btfsc	status,0,c
  5376   001BAE  2A39               	incf	(___awmod@dividend+1)^0,f,c
  5377   001BB0                     l3112:
  5378   001BB0  C038  F038         	movff	___awmod@dividend,?___awmod
  5379   001BB4  C039  F039         	movff	___awmod@dividend+1,?___awmod+1
  5380   001BB8  0012               	return		;funcret
  5381   001BBA                     __end_of___awmod:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function ___awdiv *****************
  5385 ;; Defined at:
  5386 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  dividend        2    6[COMRAM] int 
  5389 ;;  divisor         2    8[COMRAM] int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  quotient        2   12[COMRAM] int 
  5392 ;;  sign            1   11[COMRAM] unsigned char 
  5393 ;;  counter         1   10[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  2    6[COMRAM] int 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;Total ram usage:        8 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 2
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_WriteSTLED316SData
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text24
  5418   001A46                     __ptext24:
  5419                           	callstack 0
  5420   001A46                     ___awdiv:
  5421                           	callstack 27
  5422   001A46  0E00               	movlw	0
  5423   001A48  6E3D               	movwf	___awdiv@sign^0,c
  5424   001A4A  BE3B               	btfsc	(___awdiv@divisor+1)^0,7,c
  5425   001A4C  EF2C  F00D         	goto	u1810
  5426   001A50  EF2A  F00D         	goto	u1811
  5427   001A54                     u1811:
  5428   001A54  EF32  F00D         	goto	l3044
  5429   001A58                     u1810:
  5430   001A58  6C3A               	negf	___awdiv@divisor^0,c
  5431   001A5A  1E3B               	comf	(___awdiv@divisor+1)^0,f,c
  5432   001A5C  B0D8               	btfsc	status,0,c
  5433   001A5E  2A3B               	incf	(___awdiv@divisor+1)^0,f,c
  5434   001A60  0E01               	movlw	1
  5435   001A62  6E3D               	movwf	___awdiv@sign^0,c
  5436   001A64                     l3044:
  5437   001A64  BE39               	btfsc	(___awdiv@dividend+1)^0,7,c
  5438   001A66  EF39  F00D         	goto	u1820
  5439   001A6A  EF37  F00D         	goto	u1821
  5440   001A6E                     u1821:
  5441   001A6E  EF3F  F00D         	goto	l3050
  5442   001A72                     u1820:
  5443   001A72  6C38               	negf	___awdiv@dividend^0,c
  5444   001A74  1E39               	comf	(___awdiv@dividend+1)^0,f,c
  5445   001A76  B0D8               	btfsc	status,0,c
  5446   001A78  2A39               	incf	(___awdiv@dividend+1)^0,f,c
  5447   001A7A  0E01               	movlw	1
  5448   001A7C  1A3D               	xorwf	___awdiv@sign^0,f,c
  5449   001A7E                     l3050:
  5450   001A7E  0E00               	movlw	0
  5451   001A80  6E3F               	movwf	(___awdiv@quotient+1)^0,c
  5452   001A82  0E00               	movlw	0
  5453   001A84  6E3E               	movwf	___awdiv@quotient^0,c
  5454   001A86  503A               	movf	___awdiv@divisor^0,w,c
  5455   001A88  103B               	iorwf	(___awdiv@divisor+1)^0,w,c
  5456   001A8A  B4D8               	btfsc	status,2,c
  5457   001A8C  EF4A  F00D         	goto	u1831
  5458   001A90  EF4C  F00D         	goto	u1830
  5459   001A94                     u1831:
  5460   001A94  EF74  F00D         	goto	l3072
  5461   001A98                     u1830:
  5462   001A98  0E01               	movlw	1
  5463   001A9A  6E3C               	movwf	___awdiv@counter^0,c
  5464   001A9C  EF54  F00D         	goto	l3058
  5465   001AA0                     l3056:
  5466   001AA0  90D8               	bcf	status,0,c
  5467   001AA2  363A               	rlcf	___awdiv@divisor^0,f,c
  5468   001AA4  363B               	rlcf	(___awdiv@divisor+1)^0,f,c
  5469   001AA6  2A3C               	incf	___awdiv@counter^0,f,c
  5470   001AA8                     l3058:
  5471   001AA8  AE3B               	btfss	(___awdiv@divisor+1)^0,7,c
  5472   001AAA  EF59  F00D         	goto	u1841
  5473   001AAE  EF5B  F00D         	goto	u1840
  5474   001AB2                     u1841:
  5475   001AB2  EF50  F00D         	goto	l3056
  5476   001AB6                     u1840:
  5477   001AB6                     l3060:
  5478   001AB6  90D8               	bcf	status,0,c
  5479   001AB8  363E               	rlcf	___awdiv@quotient^0,f,c
  5480   001ABA  363F               	rlcf	(___awdiv@quotient+1)^0,f,c
  5481   001ABC  503A               	movf	___awdiv@divisor^0,w,c
  5482   001ABE  5C38               	subwf	___awdiv@dividend^0,w,c
  5483   001AC0  503B               	movf	(___awdiv@divisor+1)^0,w,c
  5484   001AC2  5839               	subwfb	(___awdiv@dividend+1)^0,w,c
  5485   001AC4  A0D8               	btfss	status,0,c
  5486   001AC6  EF67  F00D         	goto	u1851
  5487   001ACA  EF69  F00D         	goto	u1850
  5488   001ACE                     u1851:
  5489   001ACE  EF6E  F00D         	goto	l3068
  5490   001AD2                     u1850:
  5491   001AD2  503A               	movf	___awdiv@divisor^0,w,c
  5492   001AD4  5E38               	subwf	___awdiv@dividend^0,f,c
  5493   001AD6  503B               	movf	(___awdiv@divisor+1)^0,w,c
  5494   001AD8  5A39               	subwfb	(___awdiv@dividend+1)^0,f,c
  5495   001ADA  803E               	bsf	___awdiv@quotient^0,0,c
  5496   001ADC                     l3068:
  5497   001ADC  90D8               	bcf	status,0,c
  5498   001ADE  323B               	rrcf	(___awdiv@divisor+1)^0,f,c
  5499   001AE0  323A               	rrcf	___awdiv@divisor^0,f,c
  5500   001AE2  2E3C               	decfsz	___awdiv@counter^0,f,c
  5501   001AE4  EF5B  F00D         	goto	l3060
  5502   001AE8                     l3072:
  5503   001AE8  503D               	movf	___awdiv@sign^0,w,c
  5504   001AEA  B4D8               	btfsc	status,2,c
  5505   001AEC  EF7A  F00D         	goto	u1861
  5506   001AF0  EF7C  F00D         	goto	u1860
  5507   001AF4                     u1861:
  5508   001AF4  EF80  F00D         	goto	l3076
  5509   001AF8                     u1860:
  5510   001AF8  6C3E               	negf	___awdiv@quotient^0,c
  5511   001AFA  1E3F               	comf	(___awdiv@quotient+1)^0,f,c
  5512   001AFC  B0D8               	btfsc	status,0,c
  5513   001AFE  2A3F               	incf	(___awdiv@quotient+1)^0,f,c
  5514   001B00                     l3076:
  5515   001B00  C03E  F038         	movff	___awdiv@quotient,?___awdiv
  5516   001B04  C03F  F039         	movff	___awdiv@quotient+1,?___awdiv+1
  5517   001B08  0012               	return		;funcret
  5518   001B0A                     __end_of___awdiv:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _Get7Seg *****************
  5522 ;; Defined at:
  5523 ;;		line 104 in file "Display.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  Digit           2    6[COMRAM] int 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  Data            1   10[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      unsigned char 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        5 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 2
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_WriteSTLED316SData
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text25
  5552   00197A                     __ptext25:
  5553                           	callstack 0
  5554   00197A                     _Get7Seg:
  5555                           	callstack 27
  5556   00197A                     
  5557                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  5558   00197A  EFEB  F00C         	goto	l2954
  5559   00197E                     l2930:
  5560                           
  5561                           ;Display.c: 109:             Data = 0x3F;
  5562   00197E  0E3F               	movlw	63
  5563   001980  6E3C               	movwf	Get7Seg@Data^0,c
  5564                           
  5565                           ;Display.c: 110:             break;
  5566   001982  EF21  F00D         	goto	l2956
  5567   001986                     l2932:
  5568                           
  5569                           ;Display.c: 112:             Data = 0x06;
  5570   001986  0E06               	movlw	6
  5571   001988  6E3C               	movwf	Get7Seg@Data^0,c
  5572                           
  5573                           ;Display.c: 113:             break;
  5574   00198A  EF21  F00D         	goto	l2956
  5575   00198E                     l2934:
  5576                           
  5577                           ;Display.c: 115:             Data = 0x5B;
  5578   00198E  0E5B               	movlw	91
  5579   001990  6E3C               	movwf	Get7Seg@Data^0,c
  5580                           
  5581                           ;Display.c: 116:             break;
  5582   001992  EF21  F00D         	goto	l2956
  5583   001996                     l2936:
  5584                           
  5585                           ;Display.c: 118:             Data = 0x4F;
  5586   001996  0E4F               	movlw	79
  5587   001998  6E3C               	movwf	Get7Seg@Data^0,c
  5588                           
  5589                           ;Display.c: 119:             break;
  5590   00199A  EF21  F00D         	goto	l2956
  5591   00199E                     l2938:
  5592                           
  5593                           ;Display.c: 121:             Data = 0x66;
  5594   00199E  0E66               	movlw	102
  5595   0019A0  6E3C               	movwf	Get7Seg@Data^0,c
  5596                           
  5597                           ;Display.c: 122:             break;
  5598   0019A2  EF21  F00D         	goto	l2956
  5599   0019A6                     l2940:
  5600                           
  5601                           ;Display.c: 124:             Data = 0x6D;
  5602   0019A6  0E6D               	movlw	109
  5603   0019A8  6E3C               	movwf	Get7Seg@Data^0,c
  5604                           
  5605                           ;Display.c: 125:             break;
  5606   0019AA  EF21  F00D         	goto	l2956
  5607   0019AE                     l2942:
  5608                           
  5609                           ;Display.c: 127:             Data = 0x7D;
  5610   0019AE  0E7D               	movlw	125
  5611   0019B0  6E3C               	movwf	Get7Seg@Data^0,c
  5612                           
  5613                           ;Display.c: 128:             break;
  5614   0019B2  EF21  F00D         	goto	l2956
  5615   0019B6                     l2944:
  5616                           
  5617                           ;Display.c: 130:             Data = 0x07;
  5618   0019B6  0E07               	movlw	7
  5619   0019B8  6E3C               	movwf	Get7Seg@Data^0,c
  5620                           
  5621                           ;Display.c: 131:             break;
  5622   0019BA  EF21  F00D         	goto	l2956
  5623   0019BE                     l2946:
  5624                           
  5625                           ;Display.c: 133:             Data = 0x7F;
  5626   0019BE  0E7F               	movlw	127
  5627   0019C0  6E3C               	movwf	Get7Seg@Data^0,c
  5628                           
  5629                           ;Display.c: 134:             break;
  5630   0019C2  EF21  F00D         	goto	l2956
  5631   0019C6                     l2948:
  5632                           
  5633                           ;Display.c: 136:             Data = 0x6F;
  5634   0019C6  0E6F               	movlw	111
  5635   0019C8  6E3C               	movwf	Get7Seg@Data^0,c
  5636                           
  5637                           ;Display.c: 137:             break;
  5638   0019CA  EF21  F00D         	goto	l2956
  5639   0019CE                     l2950:
  5640                           
  5641                           ;Display.c: 139:             Data = 0x00;
  5642   0019CE  0E00               	movlw	0
  5643   0019D0  6E3C               	movwf	Get7Seg@Data^0,c
  5644                           
  5645                           ;Display.c: 140:             break;
  5646   0019D2  EF21  F00D         	goto	l2956
  5647   0019D6                     l2954:
  5648   0019D6  C038  F03A         	movff	Get7Seg@Digit,??_Get7Seg
  5649   0019DA  C039  F03B         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5650                           
  5651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5652                           ; Switch size 1, requested type "simple"
  5653                           ; Number of cases is 1, Range of values is 0 to 0
  5654                           ; switch strategies available:
  5655                           ; Name         Instructions Cycles
  5656                           ; simple_byte            4     3 (average)
  5657                           ;	Chosen strategy is simple_byte
  5658   0019DE  503B               	movf	(??_Get7Seg+1)^0,w,c
  5659   0019E0  0A00               	xorlw	0	; case 0
  5660   0019E2  B4D8               	btfsc	status,2,c
  5661   0019E4  EFF6  F00C         	goto	l4690
  5662   0019E8  EFE7  F00C         	goto	l2950
  5663   0019EC                     l4690:
  5664                           
  5665                           ; Switch size 1, requested type "simple"
  5666                           ; Number of cases is 10, Range of values is 0 to 9
  5667                           ; switch strategies available:
  5668                           ; Name         Instructions Cycles
  5669                           ; simple_byte           31    16 (average)
  5670                           ;	Chosen strategy is simple_byte
  5671   0019EC  503A               	movf	??_Get7Seg^0,w,c
  5672   0019EE  0A00               	xorlw	0	; case 0
  5673   0019F0  B4D8               	btfsc	status,2,c
  5674   0019F2  EFBF  F00C         	goto	l2930
  5675   0019F6  0A01               	xorlw	1	; case 1
  5676   0019F8  B4D8               	btfsc	status,2,c
  5677   0019FA  EFC3  F00C         	goto	l2932
  5678   0019FE  0A03               	xorlw	3	; case 2
  5679   001A00  B4D8               	btfsc	status,2,c
  5680   001A02  EFC7  F00C         	goto	l2934
  5681   001A06  0A01               	xorlw	1	; case 3
  5682   001A08  B4D8               	btfsc	status,2,c
  5683   001A0A  EFCB  F00C         	goto	l2936
  5684   001A0E  0A07               	xorlw	7	; case 4
  5685   001A10  B4D8               	btfsc	status,2,c
  5686   001A12  EFCF  F00C         	goto	l2938
  5687   001A16  0A01               	xorlw	1	; case 5
  5688   001A18  B4D8               	btfsc	status,2,c
  5689   001A1A  EFD3  F00C         	goto	l2940
  5690   001A1E  0A03               	xorlw	3	; case 6
  5691   001A20  B4D8               	btfsc	status,2,c
  5692   001A22  EFD7  F00C         	goto	l2942
  5693   001A26  0A01               	xorlw	1	; case 7
  5694   001A28  B4D8               	btfsc	status,2,c
  5695   001A2A  EFDB  F00C         	goto	l2944
  5696   001A2E  0A0F               	xorlw	15	; case 8
  5697   001A30  B4D8               	btfsc	status,2,c
  5698   001A32  EFDF  F00C         	goto	l2946
  5699   001A36  0A01               	xorlw	1	; case 9
  5700   001A38  B4D8               	btfsc	status,2,c
  5701   001A3A  EFE3  F00C         	goto	l2948
  5702   001A3E  EFE7  F00C         	goto	l2950
  5703   001A42                     l2956:
  5704                           
  5705                           ;Display.c: 142:     return (Data);
  5706   001A42  503C               	movf	Get7Seg@Data^0,w,c
  5707   001A44  0012               	return		;funcret
  5708   001A46                     __end_of_Get7Seg:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _Homing_Again_Auto *****************
  5712 ;; Defined at:
  5713 ;;		line 1092 in file "main.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 4
  5734 ;; This function calls:
  5735 ;;		_AD_capture_BattVoltage
  5736 ;;		_MotorBREAK
  5737 ;;		_MotorON
  5738 ;;		_Read_IR
  5739 ;;		_WriteSTLED316SErr
  5740 ;;		_WriteSTLED316SMode
  5741 ;;		_delay_1ms
  5742 ;;		_readWeighingData
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text26
  5749   001354                     __ptext26:
  5750                           	callstack 0
  5751   001354                     _Homing_Again_Auto:
  5752                           	callstack 26
  5753   001354                     
  5754                           ;main.c: 1094:     IR_SENSORF = 0;
  5755   001354  0E00               	movlw	0
  5756   001356  6E0C               	movwf	(_IR_SENSORF+1)^0,c
  5757   001358  0E00               	movlw	0
  5758   00135A  6E0B               	movwf	_IR_SENSORF^0,c
  5759   00135C                     
  5760                           ;main.c: 1095:     WriteSTLED316SMode('A');
  5761   00135C  0E41               	movlw	65
  5762   00135E  ECC9  F00B         	call	_WriteSTLED316SMode
  5763   001362                     
  5764                           ;main.c: 1097:     if (vibration_mode == 1) {
  5765   001362  042C               	decf	_vibration_mode^0,w,c
  5766   001364  A4D8               	btfss	status,2,c
  5767   001366  EFB7  F009         	goto	u2371
  5768   00136A  EFB9  F009         	goto	u2370
  5769   00136E                     u2371:
  5770   00136E  EFCE  F009         	goto	l385
  5771   001372                     u2370:
  5772   001372                     
  5773                           ;main.c: 1098:         LATCbits.LATC1 = 1;
  5774   001372  828B               	bsf	139,1,c	;volatile
  5775   001374                     
  5776                           ;main.c: 1099:         delay_1ms(Vmotor_Time);
  5777   001374  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5778   001378  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5779   00137C  EC6D  F010         	call	_delay_1ms	;wreg free
  5780   001380                     
  5781                           ;main.c: 1100:         LATCbits.LATC1 = 0;
  5782   001380  928B               	bcf	139,1,c	;volatile
  5783   001382                     l3632:
  5784                           
  5785                           ;main.c: 1101:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5786   001382  0E04               	movlw	4
  5787   001384  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  5788   001386  0E0C               	movlw	12
  5789   001388  6E41               	movwf	??_Homing_Again_Auto^0,c
  5790   00138A  0E34               	movlw	52
  5791   00138C                     u3487:
  5792   00138C  2EE8               	decfsz	wreg,f,c
  5793   00138E  D7FE               	bra	u3487
  5794   001390  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  5795   001392  D7FC               	bra	u3487
  5796   001394  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5797   001396  D7FA               	bra	u3487
  5798                           
  5799                           ;main.c: 1102:     } else {
  5800   001398  EFD1  F009         	goto	l3636
  5801   00139C                     l385:
  5802                           
  5803                           ;main.c: 1103:         LATCbits.LATC1 = 0;
  5804   00139C  928B               	bcf	139,1,c	;volatile
  5805   00139E  EFC1  F009         	goto	l3632
  5806   0013A2                     l3636:
  5807                           
  5808                           ;main.c: 1107:     LATAbits.LATA2 = 1;
  5809   0013A2  8489               	bsf	137,2,c	;volatile
  5810                           
  5811                           ;main.c: 1109:     while (Stop == 0) {
  5812   0013A4  EF81  F00A         	goto	l3694
  5813   0013A8                     l388:
  5814   0013A8  0004               	clrwdt		;# 
  5815   0013AA                     
  5816                           ;main.c: 1111:         readWeighingData();
  5817   0013AA  EC24  F00F         	call	_readWeighingData	;wreg free
  5818   0013AE                     
  5819                           ;main.c: 1112:         AD_capture_BattVoltage();
  5820   0013AE  ECC0  F00F         	call	_AD_capture_BattVoltage	;wreg free
  5821   0013B2                     
  5822                           ;main.c: 1113:         delay_1ms(Motor_Pause_Time);
  5823   0013B2  C015  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  5824   0013B6  C016  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5825   0013BA  EC6D  F010         	call	_delay_1ms	;wreg free
  5826   0013BE                     
  5827                           ;main.c: 1114:         MotorON();
  5828   0013BE  EC18  F011         	call	_MotorON	;wreg free
  5829   0013C2                     
  5830                           ;main.c: 1115:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5831   0013C2  0E04               	movlw	4
  5832   0013C4  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  5833   0013C6  0E8E               	movlw	142
  5834   0013C8  6E41               	movwf	??_Homing_Again_Auto^0,c
  5835   0013CA  0E12               	movlw	18
  5836   0013CC                     u3497:
  5837   0013CC  2EE8               	decfsz	wreg,f,c
  5838   0013CE  D7FE               	bra	u3497
  5839   0013D0  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  5840   0013D2  D7FC               	bra	u3497
  5841   0013D4  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5842   0013D6  D7FA               	bra	u3497
  5843   0013D8  D000               	nop2	
  5844   0013DA                     
  5845                           ;main.c: 1117:         errorcounter = 30;
  5846   0013DA  0E1E               	movlw	30
  5847   0013DC  6E52               	movwf	_errorcounter^0,c	;volatile
  5848   0013DE  0E00               	movlw	0
  5849   0013E0  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5850   0013E2  0E00               	movlw	0
  5851   0013E4  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5852   0013E6  0E00               	movlw	0
  5853   0013E8  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5854   0013EA                     l3650:
  5855                           
  5856                           ;main.c: 1120:             IR_SENSORF = Read_IR();
  5857   0013EA  ECBC  F010         	call	_Read_IR	;wreg free
  5858   0013EE  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  5859   0013F2  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  5860   0013F6                     
  5861                           ;main.c: 1121:             if (errorcounter == 0) {
  5862   0013F6  5052               	movf	_errorcounter^0,w,c	;volatile
  5863   0013F8  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5864   0013FA  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5865   0013FC  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5866   0013FE  A4D8               	btfss	status,2,c
  5867   001400  EF04  F00A         	goto	u2381
  5868   001404  EF06  F00A         	goto	u2380
  5869   001408                     u2381:
  5870   001408  EF0B  F00A         	goto	l3658
  5871   00140C                     u2380:
  5872   00140C                     
  5873                           ;main.c: 1122:                 WriteSTLED316SErr('1');
  5874   00140C  0E31               	movlw	49
  5875   00140E  EC49  F00C         	call	_WriteSTLED316SErr
  5876   001412                     
  5877                           ;main.c: 1123:                 MotorBREAK();
  5878   001412  EC1D  F011         	call	_MotorBREAK	;wreg free
  5879   001416                     l3658:
  5880                           
  5881                           ;main.c: 1125:         } while (IR_SENSORF != 0);
  5882   001416  500B               	movf	_IR_SENSORF^0,w,c
  5883   001418  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  5884   00141A  A4D8               	btfss	status,2,c
  5885   00141C  EF12  F00A         	goto	u2391
  5886   001420  EF14  F00A         	goto	u2390
  5887   001424                     u2391:
  5888   001424  EFF5  F009         	goto	l3650
  5889   001428                     u2390:
  5890   001428                     
  5891                           ;main.c: 1127:         _delay((unsigned long)((30)*(8000000/4000.0)));
  5892   001428  0E4E               	movlw	78
  5893   00142A  6E41               	movwf	??_Homing_Again_Auto^0,c
  5894   00142C  0EEB               	movlw	235
  5895   00142E                     u3507:
  5896   00142E  2EE8               	decfsz	wreg,f,c
  5897   001430  D7FE               	bra	u3507
  5898   001432  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  5899   001434  D7FC               	bra	u3507
  5900   001436  F000               	nop	
  5901   001438                     
  5902                           ;main.c: 1128:         errorcounter = 30;
  5903   001438  0E1E               	movlw	30
  5904   00143A  6E52               	movwf	_errorcounter^0,c	;volatile
  5905   00143C  0E00               	movlw	0
  5906   00143E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5907   001440  0E00               	movlw	0
  5908   001442  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5909   001444  0E00               	movlw	0
  5910   001446  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5911   001448                     l3664:
  5912                           
  5913                           ;main.c: 1131:             IR_SENSORF = Read_IR();
  5914   001448  ECBC  F010         	call	_Read_IR	;wreg free
  5915   00144C  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  5916   001450  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  5917   001454                     
  5918                           ;main.c: 1132:             if (errorcounter == 0) {
  5919   001454  5052               	movf	_errorcounter^0,w,c	;volatile
  5920   001456  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5921   001458  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5922   00145A  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5923   00145C  A4D8               	btfss	status,2,c
  5924   00145E  EF33  F00A         	goto	u2401
  5925   001462  EF35  F00A         	goto	u2400
  5926   001466                     u2401:
  5927   001466  EF3A  F00A         	goto	l3672
  5928   00146A                     u2400:
  5929   00146A                     
  5930                           ;main.c: 1133:                 WriteSTLED316SErr('2');
  5931   00146A  0E32               	movlw	50
  5932   00146C  EC49  F00C         	call	_WriteSTLED316SErr
  5933   001470                     
  5934                           ;main.c: 1134:                 MotorBREAK();
  5935   001470  EC1D  F011         	call	_MotorBREAK	;wreg free
  5936   001474                     l3672:
  5937                           
  5938                           ;main.c: 1136:         } while (IR_SENSORF != 1);
  5939   001474  040B               	decf	_IR_SENSORF^0,w,c
  5940   001476  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  5941   001478  A4D8               	btfss	status,2,c
  5942   00147A  EF41  F00A         	goto	u2411
  5943   00147E  EF43  F00A         	goto	u2410
  5944   001482                     u2411:
  5945   001482  EF24  F00A         	goto	l3664
  5946   001486                     u2410:
  5947   001486                     
  5948                           ;main.c: 1138:         errorcounter = 30;
  5949   001486  0E1E               	movlw	30
  5950   001488  6E52               	movwf	_errorcounter^0,c	;volatile
  5951   00148A  0E00               	movlw	0
  5952   00148C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5953   00148E  0E00               	movlw	0
  5954   001490  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5955   001492  0E00               	movlw	0
  5956   001494  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5957   001496                     
  5958                           ;main.c: 1140:         delay_1ms(Motor_Stop_Delay_Time);
  5959   001496  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5960   00149A  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5961   00149E  EC6D  F010         	call	_delay_1ms	;wreg free
  5962   0014A2                     
  5963                           ;main.c: 1141:         MotorBREAK();
  5964   0014A2  EC1D  F011         	call	_MotorBREAK	;wreg free
  5965                           
  5966                           ;main.c: 1143:         if (vibration_mode == 1) {
  5967   0014A6  042C               	decf	_vibration_mode^0,w,c
  5968   0014A8  A4D8               	btfss	status,2,c
  5969   0014AA  EF59  F00A         	goto	u2421
  5970   0014AE  EF5B  F00A         	goto	u2420
  5971   0014B2                     u2421:
  5972   0014B2  EF70  F00A         	goto	l395
  5973   0014B6                     u2420:
  5974   0014B6                     
  5975                           ;main.c: 1144:             LATCbits.LATC1 = 1;
  5976   0014B6  828B               	bsf	139,1,c	;volatile
  5977   0014B8                     
  5978                           ;main.c: 1145:             delay_1ms(Vmotor_Time);
  5979   0014B8  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5980   0014BC  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5981   0014C0  EC6D  F010         	call	_delay_1ms	;wreg free
  5982   0014C4                     
  5983                           ;main.c: 1147:             LATCbits.LATC1 = 0;
  5984   0014C4  928B               	bcf	139,1,c	;volatile
  5985   0014C6                     
  5986                           ;main.c: 1148:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5987   0014C6  0E04               	movlw	4
  5988   0014C8  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  5989   0014CA  0E0C               	movlw	12
  5990   0014CC  6E41               	movwf	??_Homing_Again_Auto^0,c
  5991   0014CE  0E34               	movlw	52
  5992   0014D0                     u3517:
  5993   0014D0  2EE8               	decfsz	wreg,f,c
  5994   0014D2  D7FE               	bra	u3517
  5995   0014D4  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  5996   0014D6  D7FC               	bra	u3517
  5997   0014D8  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5998   0014DA  D7FA               	bra	u3517
  5999                           
  6000                           ;main.c: 1149:         } else {
  6001   0014DC  EF77  F00A         	goto	l3690
  6002   0014E0                     l395:
  6003                           
  6004                           ;main.c: 1150:             LATCbits.LATC1 = 0;
  6005   0014E0  928B               	bcf	139,1,c	;volatile
  6006   0014E2                     
  6007                           ;main.c: 1151:             delay_1ms(Vmotor_Time);
  6008   0014E2  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6009   0014E6  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6010   0014EA  EC6D  F010         	call	_delay_1ms	;wreg free
  6011   0014EE                     l3690:
  6012                           
  6013                           ;main.c: 1154:         if (Stop == 1)
  6014   0014EE  042F               	decf	_Stop^0,w,c
  6015   0014F0  A4D8               	btfss	status,2,c
  6016   0014F2  EF7D  F00A         	goto	u2431
  6017   0014F6  EF7F  F00A         	goto	u2430
  6018   0014FA                     u2431:
  6019   0014FA  EF81  F00A         	goto	l3694
  6020   0014FE                     u2430:
  6021   0014FE  EF89  F00A         	goto	l398
  6022   001502                     l3694:
  6023                           
  6024                           ;main.c: 1109:     while (Stop == 0) {
  6025   001502  502F               	movf	_Stop^0,w,c
  6026   001504  B4D8               	btfsc	status,2,c
  6027   001506  EF87  F00A         	goto	u2441
  6028   00150A  EF89  F00A         	goto	u2440
  6029   00150E                     u2441:
  6030   00150E  EFD4  F009         	goto	l388
  6031   001512                     u2440:
  6032   001512                     l398:
  6033                           
  6034                           ;main.c: 1159:     LATAbits.LATA2 = 0;
  6035   001512  9489               	bcf	137,2,c	;volatile
  6036   001514                     
  6037                           ;main.c: 1161:     if (NUM == 0 || Stop == 1) {
  6038   001514  5013               	movf	_NUM^0,w,c
  6039   001516  1014               	iorwf	(_NUM+1)^0,w,c
  6040   001518  B4D8               	btfsc	status,2,c
  6041   00151A  EF91  F00A         	goto	u2451
  6042   00151E  EF93  F00A         	goto	u2450
  6043   001522                     u2451:
  6044   001522  EF9B  F00A         	goto	l3700
  6045   001526                     u2450:
  6046   001526  042F               	decf	_Stop^0,w,c
  6047   001528  A4D8               	btfss	status,2,c
  6048   00152A  EF99  F00A         	goto	u2461
  6049   00152E  EF9B  F00A         	goto	u2460
  6050   001532                     u2461:
  6051   001532  EFB6  F00A         	goto	l3710
  6052   001536                     u2460:
  6053   001536                     l3700:
  6054                           
  6055                           ;main.c: 1163:         if (vibration_mode == 1) {
  6056   001536  042C               	decf	_vibration_mode^0,w,c
  6057   001538  A4D8               	btfss	status,2,c
  6058   00153A  EFA1  F00A         	goto	u2471
  6059   00153E  EFA3  F00A         	goto	u2470
  6060   001542                     u2471:
  6061   001542  EFB6  F00A         	goto	l3710
  6062   001546                     u2470:
  6063   001546                     
  6064                           ;main.c: 1164:             LATCbits.LATC1 = 1;
  6065   001546  828B               	bsf	139,1,c	;volatile
  6066   001548                     
  6067                           ;main.c: 1165:             delay_1ms(Vmotor_Time);
  6068   001548  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6069   00154C  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6070   001550  EC6D  F010         	call	_delay_1ms	;wreg free
  6071   001554                     
  6072                           ;main.c: 1167:             LATCbits.LATC1 = 0;
  6073   001554  928B               	bcf	139,1,c	;volatile
  6074   001556                     
  6075                           ;main.c: 1168:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6076   001556  0E04               	movlw	4
  6077   001558  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6078   00155A  0E0C               	movlw	12
  6079   00155C  6E41               	movwf	??_Homing_Again_Auto^0,c
  6080   00155E  0E34               	movlw	52
  6081   001560                     u3527:
  6082   001560  2EE8               	decfsz	wreg,f,c
  6083   001562  D7FE               	bra	u3527
  6084   001564  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6085   001566  D7FC               	bra	u3527
  6086   001568  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6087   00156A  D7FA               	bra	u3527
  6088   00156C                     l3710:
  6089                           
  6090                           ;main.c: 1173:     NUM = 0;
  6091   00156C  0E00               	movlw	0
  6092   00156E  6E14               	movwf	(_NUM+1)^0,c
  6093   001570  0E00               	movlw	0
  6094   001572  6E13               	movwf	_NUM^0,c
  6095   001574                     
  6096                           ;main.c: 1174:     OpMode = AUTO_MODE;
  6097   001574  0E02               	movlw	2
  6098   001576  6E2A               	movwf	_OpMode^0,c	;volatile
  6099   001578  0012               	return		;funcret
  6100   00157A                     __end_of_Homing_Again_Auto:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function _readWeighingData *****************
  6104 ;; Defined at:
  6105 ;;		line 1203 in file "main.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  i               2    8[COMRAM] int 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 3
  6126 ;; This function calls:
  6127 ;;		_Write1USART
  6128 ;;		_flushOut
  6129 ;; This function is called by:
  6130 ;;		_Homing_Again_Manual
  6131 ;;		_Homing_Again_Auto
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text27
  6136   001E48                     __ptext27:
  6137                           	callstack 0
  6138   001E48                     _readWeighingData:
  6139                           	callstack 26
  6140   001E48                     
  6141                           ;main.c: 1204:     int i;;main.c: 1206:     Serial_Buffer_Out[0] = 0xA5;
  6142   001E48  0EA5               	movlw	165
  6143   001E4A  0100               	movlb	0	; () banked
  6144   001E4C  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  6145                           
  6146                           ;main.c: 1207:     Serial_Buffer_Out[1] = 0x45;
  6147   001E4E  0E45               	movlw	69
  6148   001E50  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  6149                           
  6150                           ;main.c: 1208:     Serial_Buffer_Out[2] = 0x00;
  6151   001E52  0E00               	movlw	0
  6152   001E54  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  6153                           
  6154                           ;main.c: 1209:     Serial_Buffer_Out[3] = 0x45;
  6155   001E56  0E45               	movlw	69
  6156   001E58  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  6157                           
  6158                           ;main.c: 1210:     Serial_Buffer_Out[4] = 0x5A;
  6159   001E5A  0E5A               	movlw	90
  6160   001E5C  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  6161   001E5E                     
  6162                           ; BSR set to: 0
  6163                           ;main.c: 1212:     INTCONbits.GIE = 0;
  6164   001E5E  9EF2               	bcf	242,7,c	;volatile
  6165                           
  6166                           ;main.c: 1213:     for (i = 0; i < 5; i++) {
  6167   001E60  0E00               	movlw	0
  6168   001E62  6E3B               	movwf	(readWeighingData@i+1)^0,c
  6169   001E64  0E00               	movlw	0
  6170   001E66  6E3A               	movwf	readWeighingData@i^0,c
  6171   001E68                     l3218:
  6172                           
  6173                           ;main.c: 1214:         Write1USART(Serial_Buffer_Out[i]);
  6174   001E68  0E60               	movlw	low _Serial_Buffer_Out
  6175   001E6A  243A               	addwf	readWeighingData@i^0,w,c
  6176   001E6C  6ED9               	movwf	fsr2l,c
  6177   001E6E  0E00               	movlw	high _Serial_Buffer_Out
  6178   001E70  203B               	addwfc	(readWeighingData@i+1)^0,w,c
  6179   001E72  6EDA               	movwf	fsr2h,c
  6180   001E74  50DF               	movf	indf2,w,c
  6181   001E76  ECE5  F010         	call	_Write1USART
  6182   001E7A                     
  6183                           ;main.c: 1215:     }
  6184   001E7A  4A3A               	infsnz	readWeighingData@i^0,f,c
  6185   001E7C  2A3B               	incf	(readWeighingData@i+1)^0,f,c
  6186   001E7E  BE3B               	btfsc	(readWeighingData@i+1)^0,7,c
  6187   001E80  EF4B  F00F         	goto	u1971
  6188   001E84  503B               	movf	(readWeighingData@i+1)^0,w,c
  6189   001E86  E109               	bnz	u1970
  6190   001E88  0E05               	movlw	5
  6191   001E8A  5C3A               	subwf	readWeighingData@i^0,w,c
  6192   001E8C  A0D8               	btfss	status,0,c
  6193   001E8E  EF4B  F00F         	goto	u1971
  6194   001E92  EF4D  F00F         	goto	u1970
  6195   001E96                     u1971:
  6196   001E96  EF34  F00F         	goto	l3218
  6197   001E9A                     u1970:
  6198   001E9A                     
  6199                           ;main.c: 1216:     INTCONbits.GIE = 1;
  6200   001E9A  8EF2               	bsf	242,7,c	;volatile
  6201   001E9C                     
  6202                           ;main.c: 1218:     flushOut();
  6203   001E9C  EC1A  F010         	call	_flushOut	;wreg free
  6204   001EA0  0012               	return		;funcret
  6205   001EA2                     __end_of_readWeighingData:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _flushOut *****************
  6209 ;; Defined at:
  6210 ;;		line 1192 in file "main.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  i               2    6[COMRAM] int 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;Total ram usage:        2 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 2
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_main
  6235 ;;		_readWeighingData
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text28
  6240   002034                     __ptext28:
  6241                           	callstack 0
  6242   002034                     _flushOut:
  6243                           	callstack 28
  6244   002034                     
  6245                           ;main.c: 1193:     int i;;main.c: 1195:     for (i = 0; i < 16; i++) {
  6246   002034  0E00               	movlw	0
  6247   002036  6E39               	movwf	(flushOut@i+1)^0,c
  6248   002038  0E00               	movlw	0
  6249   00203A  6E38               	movwf	flushOut@i^0,c
  6250   00203C                     l2880:
  6251                           
  6252                           ;main.c: 1196:         Serial_Buffer_Out[i] = 0x00;
  6253   00203C  0E60               	movlw	low _Serial_Buffer_Out
  6254   00203E  2438               	addwf	flushOut@i^0,w,c
  6255   002040  6ED9               	movwf	fsr2l,c
  6256   002042  0E00               	movlw	high _Serial_Buffer_Out
  6257   002044  2039               	addwfc	(flushOut@i+1)^0,w,c
  6258   002046  6EDA               	movwf	fsr2h,c
  6259   002048  0E00               	movlw	0
  6260   00204A  6EDF               	movwf	indf2,c
  6261   00204C                     
  6262                           ;main.c: 1197:     }
  6263   00204C  4A38               	infsnz	flushOut@i^0,f,c
  6264   00204E  2A39               	incf	(flushOut@i+1)^0,f,c
  6265   002050  BE39               	btfsc	(flushOut@i+1)^0,7,c
  6266   002052  EF34  F010         	goto	u1681
  6267   002056  5039               	movf	(flushOut@i+1)^0,w,c
  6268   002058  E109               	bnz	u1680
  6269   00205A  0E10               	movlw	16
  6270   00205C  5C38               	subwf	flushOut@i^0,w,c
  6271   00205E  A0D8               	btfss	status,0,c
  6272   002060  EF34  F010         	goto	u1681
  6273   002064  EF36  F010         	goto	u1680
  6274   002068                     u1681:
  6275   002068  EF1E  F010         	goto	l2880
  6276   00206C                     u1680:
  6277   00206C  0012               	return		;funcret
  6278   00206E                     __end_of_flushOut:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _Write1USART *****************
  6282 ;; Defined at:
  6283 ;;		line 47 in file "usart.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  data            1    wreg     unsigned char 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  data            1    6[COMRAM] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;Total ram usage:        1 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 2
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_main
  6308 ;;		_readWeighingData
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text29
  6313   0021CA                     __ptext29:
  6314                           	callstack 0
  6315   0021CA                     _Write1USART:
  6316                           	callstack 28
  6317                           
  6318                           ;incstack = 0
  6319                           ;Write1USART@data stored from wreg
  6320   0021CA  6E38               	movwf	Write1USART@data^0,c
  6321   0021CC                     
  6322                           ;usart.c: 48:     TXREG1 = data;
  6323   0021CC  C038  FFAE         	movff	Write1USART@data,4014	;volatile
  6324   0021D0                     l593:
  6325   0021D0  A2AD               	btfss	173,1,c	;volatile
  6326   0021D2  EFED  F010         	goto	u1671
  6327   0021D6  EFEF  F010         	goto	u1670
  6328   0021DA                     u1671:
  6329   0021DA  EFE8  F010         	goto	l593
  6330   0021DE                     u1670:
  6331   0021DE  0012               	return		;funcret
  6332   0021E0                     __end_of_Write1USART:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function _WriteSTLED316SMode *****************
  6336 ;; Defined at:
  6337 ;;		line 184 in file "Display.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  msg             1    wreg     unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  msg             1   14[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;Total ram usage:        3 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 3
  6358 ;; This function calls:
  6359 ;;		_STLED316s_SPI_SendData
  6360 ;; This function is called by:
  6361 ;;		_Homing_Again_Auto
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text30
  6366   001792                     __ptext30:
  6367                           	callstack 0
  6368   001792                     _WriteSTLED316SMode:
  6369                           	callstack 26
  6370                           
  6371                           ;incstack = 0
  6372                           ;WriteSTLED316SMode@msg stored from wreg
  6373   001792  6E40               	movwf	WriteSTLED316SMode@msg^0,c
  6374   001794                     
  6375                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  6376   001794  988B               	bcf	139,4,c	;volatile
  6377   001796                     
  6378                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  6379   001796  0E00               	movlw	0
  6380   001798  EC77  F00E         	call	_STLED316s_SPI_SendData
  6381   00179C                     
  6382                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  6383   00179C  888B               	bsf	139,4,c	;volatile
  6384   00179E                     
  6385                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  6386   00179E  988B               	bcf	139,4,c	;volatile
  6387                           
  6388                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  6389   0017A0  0E00               	movlw	0
  6390   0017A2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6391                           
  6392                           ;Display.c: 196:     switch (msg) {
  6393   0017A6  EF15  F00C         	goto	l3252
  6394   0017AA                     l3234:
  6395                           
  6396                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  6397   0017AA  0E79               	movlw	121
  6398   0017AC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6399                           
  6400                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  6401   0017B0  0E3F               	movlw	63
  6402   0017B2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6403                           
  6404                           ;Display.c: 200:             break;
  6405   0017B6  EF42  F00C         	goto	l481
  6406   0017BA                     l3236:
  6407                           
  6408                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  6409   0017BA  0E3F               	movlw	63
  6410   0017BC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6411                           
  6412                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  6413   0017C0  0E73               	movlw	115
  6414   0017C2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6415                           
  6416                           ;Display.c: 204:             break;
  6417   0017C6  EF42  F00C         	goto	l481
  6418   0017CA                     l3238:
  6419                           
  6420                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  6421   0017CA  0E39               	movlw	57
  6422   0017CC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6423                           
  6424                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  6425   0017D0  0E77               	movlw	119
  6426   0017D2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6427                           
  6428                           ;Display.c: 208:             break;
  6429   0017D6  EF42  F00C         	goto	l481
  6430   0017DA                     l3240:
  6431                           
  6432                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  6433   0017DA  0E00               	movlw	0
  6434   0017DC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6435                           
  6436                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  6437   0017E0  0E00               	movlw	0
  6438   0017E2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6439                           
  6440                           ;Display.c: 212:             break;
  6441   0017E6  EF42  F00C         	goto	l481
  6442   0017EA                     l3242:
  6443                           
  6444                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  6445   0017EA  0E00               	movlw	0
  6446   0017EC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6447                           
  6448                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  6449   0017F0  0E3F               	movlw	63
  6450   0017F2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6451                           
  6452                           ;Display.c: 216:             break;
  6453   0017F6  EF42  F00C         	goto	l481
  6454   0017FA                     l3244:
  6455                           
  6456                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  6457   0017FA  0E79               	movlw	121
  6458   0017FC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6459                           
  6460                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  6461   001800  0E06               	movlw	6
  6462   001802  EC77  F00E         	call	_STLED316s_SPI_SendData
  6463                           
  6464                           ;Display.c: 220:             break;
  6465   001806  EF42  F00C         	goto	l481
  6466   00180A                     l3246:
  6467                           
  6468                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  6469   00180A  0E77               	movlw	119
  6470   00180C  EC77  F00E         	call	_STLED316s_SPI_SendData
  6471                           
  6472                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  6473   001810  0E3E               	movlw	62
  6474   001812  EC77  F00E         	call	_STLED316s_SPI_SendData
  6475                           
  6476                           ;Display.c: 224:             break;
  6477   001816  EF42  F00C         	goto	l481
  6478   00181A                     l3248:
  6479                           
  6480                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  6481   00181A  0E00               	movlw	0
  6482   00181C  EC77  F00E         	call	_STLED316s_SPI_SendData
  6483                           
  6484                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  6485   001820  0E3E               	movlw	62
  6486   001822  EC77  F00E         	call	_STLED316s_SPI_SendData
  6487                           
  6488                           ;Display.c: 228:             break;
  6489   001826  EF42  F00C         	goto	l481
  6490   00182A                     l3252:
  6491   00182A  5040               	movf	WriteSTLED316SMode@msg^0,w,c
  6492   00182C  6E3E               	movwf	??_WriteSTLED316SMode^0,c
  6493   00182E  6A3F               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6494                           
  6495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6496                           ; Switch size 1, requested type "simple"
  6497                           ; Number of cases is 1, Range of values is 0 to 0
  6498                           ; switch strategies available:
  6499                           ; Name         Instructions Cycles
  6500                           ; simple_byte            4     3 (average)
  6501                           ;	Chosen strategy is simple_byte
  6502   001830  503F               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6503   001832  0A00               	xorlw	0	; case 0
  6504   001834  B4D8               	btfsc	status,2,c
  6505   001836  EF1F  F00C         	goto	l4692
  6506   00183A  EF42  F00C         	goto	l481
  6507   00183E                     l4692:
  6508                           
  6509                           ; Switch size 1, requested type "simple"
  6510                           ; Number of cases is 8, Range of values is 65 to 88
  6511                           ; switch strategies available:
  6512                           ; Name         Instructions Cycles
  6513                           ; simple_byte           25    13 (average)
  6514                           ;	Chosen strategy is simple_byte
  6515   00183E  503E               	movf	??_WriteSTLED316SMode^0,w,c
  6516   001840  0A41               	xorlw	65	; case 65
  6517   001842  B4D8               	btfsc	status,2,c
  6518   001844  EF05  F00C         	goto	l3246
  6519   001848  0A02               	xorlw	2	; case 67
  6520   00184A  B4D8               	btfsc	status,2,c
  6521   00184C  EFE5  F00B         	goto	l3238
  6522   001850  0A06               	xorlw	6	; case 69
  6523   001852  B4D8               	btfsc	status,2,c
  6524   001854  EFD5  F00B         	goto	l3234
  6525   001858  0A02               	xorlw	2	; case 71
  6526   00185A  B4D8               	btfsc	status,2,c
  6527   00185C  EFF5  F00B         	goto	l3242
  6528   001860  0A08               	xorlw	8	; case 79
  6529   001862  B4D8               	btfsc	status,2,c
  6530   001864  EFDD  F00B         	goto	l3236
  6531   001868  0A1C               	xorlw	28	; case 83
  6532   00186A  B4D8               	btfsc	status,2,c
  6533   00186C  EFFD  F00B         	goto	l3244
  6534   001870  0A05               	xorlw	5	; case 86
  6535   001872  B4D8               	btfsc	status,2,c
  6536   001874  EF0D  F00C         	goto	l3248
  6537   001878  0A0E               	xorlw	14	; case 88
  6538   00187A  B4D8               	btfsc	status,2,c
  6539   00187C  EFED  F00B         	goto	l3240
  6540   001880  EF42  F00C         	goto	l481
  6541   001884                     l481:
  6542                           
  6543                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  6544   001884  888B               	bsf	139,4,c	;volatile
  6545                           
  6546                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  6547   001886  988B               	bcf	139,4,c	;volatile
  6548   001888                     
  6549                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  6550   001888  0E0D               	movlw	13
  6551   00188A  EC77  F00E         	call	_STLED316s_SPI_SendData
  6552   00188E                     
  6553                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  6554   00188E  888B               	bsf	139,4,c	;volatile
  6555   001890  0012               	return		;funcret
  6556   001892                     __end_of_WriteSTLED316SMode:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _WriteSTLED316SErr *****************
  6560 ;; Defined at:
  6561 ;;		line 278 in file "Display.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  msg             1    wreg     unsigned char 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  msg             1   14[COMRAM] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;Total ram usage:        3 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 3
  6582 ;; This function calls:
  6583 ;;		_STLED316s_SPI_SendData
  6584 ;; This function is called by:
  6585 ;;		_MotorPosition_Init
  6586 ;;		_Homing_Again_Manual
  6587 ;;		_Homing_Again_Auto
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text31
  6592   001892                     __ptext31:
  6593                           	callstack 0
  6594   001892                     _WriteSTLED316SErr:
  6595                           	callstack 26
  6596                           
  6597                           ;incstack = 0
  6598                           ;WriteSTLED316SErr@msg stored from wreg
  6599   001892  6E40               	movwf	WriteSTLED316SErr@msg^0,c
  6600   001894                     
  6601                           ;Display.c: 279:     LATCbits.LATC4 = 0;
  6602   001894  988B               	bcf	139,4,c	;volatile
  6603   001896                     
  6604                           ;Display.c: 281:     STLED316s_SPI_SendData(0x00);
  6605   001896  0E00               	movlw	0
  6606   001898  EC77  F00E         	call	_STLED316s_SPI_SendData
  6607   00189C                     
  6608                           ;Display.c: 284:     LATCbits.LATC4 = 1;
  6609   00189C  888B               	bsf	139,4,c	;volatile
  6610   00189E                     
  6611                           ;Display.c: 286:     LATCbits.LATC4 = 0;
  6612   00189E  988B               	bcf	139,4,c	;volatile
  6613                           
  6614                           ;Display.c: 288:     STLED316s_SPI_SendData(0x00);
  6615   0018A0  0E00               	movlw	0
  6616   0018A2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6617                           
  6618                           ;Display.c: 290:     switch (msg) {
  6619   0018A6  EF8D  F00C         	goto	l3194
  6620   0018AA                     l3178:
  6621                           
  6622                           ;Display.c: 292:             STLED316s_SPI_SendData(0x79);
  6623   0018AA  0E79               	movlw	121
  6624   0018AC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6625                           
  6626                           ;Display.c: 293:             STLED316s_SPI_SendData(0x77);
  6627   0018B0  0E77               	movlw	119
  6628   0018B2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6629                           
  6630                           ;Display.c: 294:             break;
  6631   0018B6  EFB6  F00C         	goto	l500
  6632   0018BA                     l3180:
  6633                           
  6634                           ;Display.c: 296:             STLED316s_SPI_SendData(0x79);
  6635   0018BA  0E79               	movlw	121
  6636   0018BC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6637                           
  6638                           ;Display.c: 297:             STLED316s_SPI_SendData(0x3F);
  6639   0018C0  0E3F               	movlw	63
  6640   0018C2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6641                           
  6642                           ;Display.c: 298:             break;
  6643   0018C6  EFB6  F00C         	goto	l500
  6644   0018CA                     l3182:
  6645                           
  6646                           ;Display.c: 300:             STLED316s_SPI_SendData(0x79);
  6647   0018CA  0E79               	movlw	121
  6648   0018CC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6649                           
  6650                           ;Display.c: 301:             STLED316s_SPI_SendData(0x06);
  6651   0018D0  0E06               	movlw	6
  6652   0018D2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6653                           
  6654                           ;Display.c: 302:             break;
  6655   0018D6  EFB6  F00C         	goto	l500
  6656   0018DA                     l3184:
  6657                           
  6658                           ;Display.c: 304:             STLED316s_SPI_SendData(0x79);
  6659   0018DA  0E79               	movlw	121
  6660   0018DC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6661                           
  6662                           ;Display.c: 305:             STLED316s_SPI_SendData(0x5B);
  6663   0018E0  0E5B               	movlw	91
  6664   0018E2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6665                           
  6666                           ;Display.c: 306:             break;
  6667   0018E6  EFB6  F00C         	goto	l500
  6668   0018EA                     l3186:
  6669                           
  6670                           ;Display.c: 308:             STLED316s_SPI_SendData(0x00);
  6671   0018EA  0E00               	movlw	0
  6672   0018EC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6673                           
  6674                           ;Display.c: 309:             STLED316s_SPI_SendData(0x3F);
  6675   0018F0  0E3F               	movlw	63
  6676   0018F2  EC77  F00E         	call	_STLED316s_SPI_SendData
  6677                           
  6678                           ;Display.c: 310:             break;
  6679   0018F6  EFB6  F00C         	goto	l500
  6680   0018FA                     l3188:
  6681                           
  6682                           ;Display.c: 312:             STLED316s_SPI_SendData(0x79);
  6683   0018FA  0E79               	movlw	121
  6684   0018FC  EC77  F00E         	call	_STLED316s_SPI_SendData
  6685                           
  6686                           ;Display.c: 313:             STLED316s_SPI_SendData(0x06);
  6687   001900  0E06               	movlw	6
  6688   001902  EC77  F00E         	call	_STLED316s_SPI_SendData
  6689                           
  6690                           ;Display.c: 314:             break;
  6691   001906  EFB6  F00C         	goto	l500
  6692   00190A                     l3190:
  6693                           
  6694                           ;Display.c: 316:             STLED316s_SPI_SendData(0x77);
  6695   00190A  0E77               	movlw	119
  6696   00190C  EC77  F00E         	call	_STLED316s_SPI_SendData
  6697                           
  6698                           ;Display.c: 317:             STLED316s_SPI_SendData(0x3E);
  6699   001910  0E3E               	movlw	62
  6700   001912  EC77  F00E         	call	_STLED316s_SPI_SendData
  6701                           
  6702                           ;Display.c: 318:             break;
  6703   001916  EFB6  F00C         	goto	l500
  6704   00191A                     l3194:
  6705   00191A  5040               	movf	WriteSTLED316SErr@msg^0,w,c
  6706   00191C  6E3E               	movwf	??_WriteSTLED316SErr^0,c
  6707   00191E  6A3F               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6708                           
  6709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6710                           ; Switch size 1, requested type "simple"
  6711                           ; Number of cases is 1, Range of values is 0 to 0
  6712                           ; switch strategies available:
  6713                           ; Name         Instructions Cycles
  6714                           ; simple_byte            4     3 (average)
  6715                           ;	Chosen strategy is simple_byte
  6716   001920  503F               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6717   001922  0A00               	xorlw	0	; case 0
  6718   001924  B4D8               	btfsc	status,2,c
  6719   001926  EF97  F00C         	goto	l4694
  6720   00192A  EFB6  F00C         	goto	l500
  6721   00192E                     l4694:
  6722                           
  6723                           ; Switch size 1, requested type "simple"
  6724                           ; Number of cases is 7, Range of values is 48 to 83
  6725                           ; switch strategies available:
  6726                           ; Name         Instructions Cycles
  6727                           ; simple_byte           22    12 (average)
  6728                           ;	Chosen strategy is simple_byte
  6729   00192E  503E               	movf	??_WriteSTLED316SErr^0,w,c
  6730   001930  0A30               	xorlw	48	; case 48
  6731   001932  B4D8               	btfsc	status,2,c
  6732   001934  EF5D  F00C         	goto	l3180
  6733   001938  0A01               	xorlw	1	; case 49
  6734   00193A  B4D8               	btfsc	status,2,c
  6735   00193C  EF65  F00C         	goto	l3182
  6736   001940  0A03               	xorlw	3	; case 50
  6737   001942  B4D8               	btfsc	status,2,c
  6738   001944  EF6D  F00C         	goto	l3184
  6739   001948  0A73               	xorlw	115	; case 65
  6740   00194A  B4D8               	btfsc	status,2,c
  6741   00194C  EF85  F00C         	goto	l3190
  6742   001950  0A04               	xorlw	4	; case 69
  6743   001952  B4D8               	btfsc	status,2,c
  6744   001954  EF55  F00C         	goto	l3178
  6745   001958  0A02               	xorlw	2	; case 71
  6746   00195A  B4D8               	btfsc	status,2,c
  6747   00195C  EF75  F00C         	goto	l3186
  6748   001960  0A14               	xorlw	20	; case 83
  6749   001962  B4D8               	btfsc	status,2,c
  6750   001964  EF7D  F00C         	goto	l3188
  6751   001968  EFB6  F00C         	goto	l500
  6752   00196C                     l500:
  6753                           
  6754                           ;Display.c: 323:     LATCbits.LATC4 = 1;
  6755   00196C  888B               	bsf	139,4,c	;volatile
  6756                           
  6757                           ;Display.c: 325:     LATCbits.LATC4 = 0;
  6758   00196E  988B               	bcf	139,4,c	;volatile
  6759   001970                     
  6760                           ;Display.c: 327:     STLED316s_SPI_SendData(0x0D);
  6761   001970  0E0D               	movlw	13
  6762   001972  EC77  F00E         	call	_STLED316s_SPI_SendData
  6763   001976                     
  6764                           ;Display.c: 329:     LATCbits.LATC4 = 1;
  6765   001976  888B               	bsf	139,4,c	;volatile
  6766   001978  0012               	return		;funcret
  6767   00197A                     __end_of_WriteSTLED316SErr:
  6768                           	callstack 0
  6769                           
  6770 ;; *************** function _STLED316s_SPI_SendData *****************
  6771 ;; Defined at:
  6772 ;;		line 88 in file "Display.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  Data            1    wreg     unsigned char 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  Data            1    8[COMRAM] unsigned char 
  6777 ;;  t               1   11[COMRAM] unsigned char 
  6778 ;;  i               1   10[COMRAM] unsigned char 
  6779 ;;  temp            1    9[COMRAM] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;Total ram usage:        6 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 2
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_InitSTLED316
  6800 ;;		_WriteSTLED316SData
  6801 ;;		_WriteSTLED316SMode
  6802 ;;		_WriteSTLED316SVibMode
  6803 ;;		_WriteSTLED316SErr
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text32
  6808   001CEE                     __ptext32:
  6809                           	callstack 0
  6810   001CEE                     _STLED316s_SPI_SendData:
  6811                           	callstack 27
  6812                           
  6813                           ;incstack = 0
  6814                           ;STLED316s_SPI_SendData@Data stored from wreg
  6815   001CEE  6E3A               	movwf	STLED316s_SPI_SendData@Data^0,c
  6816   001CF0                     
  6817                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  6818   001CF0  0E00               	movlw	0
  6819   001CF2  6E3C               	movwf	STLED316s_SPI_SendData@i^0,c
  6820   001CF4                     l446:
  6821                           
  6822                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  6823   001CF4  968B               	bcf	139,3,c	;volatile
  6824   001CF6                     
  6825                           ;Display.c: 93:         temp = Data & (0x1 << i);
  6826   001CF6  C03C  F038         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6827   001CFA  0E01               	movlw	1
  6828   001CFC  6E39               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6829   001CFE  2A38               	incf	??_STLED316s_SPI_SendData^0,f,c
  6830   001D00  EF84  F00E         	goto	u1704
  6831   001D04                     u1705:
  6832   001D04  90D8               	bcf	status,0,c
  6833   001D06  3639               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6834   001D08                     u1704:
  6835   001D08  2E38               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6836   001D0A  EF82  F00E         	goto	u1705
  6837   001D0E  5039               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6838   001D10  143A               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6839   001D12  6E3B               	movwf	STLED316s_SPI_SendData@temp^0,c
  6840   001D14                     
  6841                           ;Display.c: 94:         if (temp)
  6842   001D14  503B               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6843   001D16  B4D8               	btfsc	status,2,c
  6844   001D18  EF90  F00E         	goto	u1711
  6845   001D1C  EF92  F00E         	goto	u1710
  6846   001D20                     u1711:
  6847   001D20  EF95  F00E         	goto	l448
  6848   001D24                     u1710:
  6849   001D24                     
  6850                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  6851   001D24  8A8B               	bsf	139,5,c	;volatile
  6852   001D26  EF96  F00E         	goto	l2904
  6853   001D2A                     l448:
  6854                           
  6855                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  6856   001D2A  9A8B               	bcf	139,5,c	;volatile
  6857   001D2C                     l2904:
  6858                           
  6859                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  6860   001D2C  0E00               	movlw	0
  6861   001D2E  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  6862   001D30                     l2910:
  6863   001D30  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  6864   001D32  0E04               	movlw	4
  6865   001D34  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6866   001D36  EF9F  F00E         	goto	u1721
  6867   001D3A  EFA1  F00E         	goto	u1720
  6868   001D3E                     u1721:
  6869   001D3E  EF98  F00E         	goto	l2910
  6870   001D42                     u1720:
  6871   001D42                     
  6872                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  6873   001D42  868B               	bsf	139,3,c	;volatile
  6874   001D44                     
  6875                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  6876   001D44  0E00               	movlw	0
  6877   001D46  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  6878   001D48                     l2920:
  6879   001D48  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  6880   001D4A  0E04               	movlw	4
  6881   001D4C  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6882   001D4E  EFAB  F00E         	goto	u1731
  6883   001D52  EFAD  F00E         	goto	u1730
  6884   001D56                     u1731:
  6885   001D56  EFA4  F00E         	goto	l2920
  6886   001D5A                     u1730:
  6887   001D5A                     
  6888                           ;Display.c: 101:     }
  6889   001D5A  2A3C               	incf	STLED316s_SPI_SendData@i^0,f,c
  6890   001D5C  0E07               	movlw	7
  6891   001D5E  643C               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  6892   001D60  EFB4  F00E         	goto	u1741
  6893   001D64  EFB6  F00E         	goto	u1740
  6894   001D68                     u1741:
  6895   001D68  EF7A  F00E         	goto	l446
  6896   001D6C                     u1740:
  6897   001D6C  0012               	return		;funcret
  6898   001D6E                     __end_of_STLED316s_SPI_SendData:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _Read_IR *****************
  6902 ;; Defined at:
  6903 ;;		line 883 in file "main.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2    6[COMRAM] unsigned int 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;Total ram usage:        2 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 2
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_MotorPosition_Init
  6928 ;;		_Homing_Again_Manual
  6929 ;;		_Homing_Again_Auto
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text33
  6934   002178                     __ptext33:
  6935                           	callstack 0
  6936   002178                     _Read_IR:
  6937                           	callstack 27
  6938   002178                     
  6939                           ;main.c: 885:     if (PORTAbits.RA1 == 1)
  6940   002178  A280               	btfss	128,1,c	;volatile
  6941   00217A  EFC1  F010         	goto	u1961
  6942   00217E  EFC3  F010         	goto	u1960
  6943   002182                     u1961:
  6944   002182  EFC9  F010         	goto	l3162
  6945   002186                     u1960:
  6946   002186                     
  6947                           ;main.c: 886:     {;main.c: 887:         return 0;
  6948   002186  0E00               	movlw	0
  6949   002188  6E39               	movwf	(?_Read_IR+1)^0,c
  6950   00218A  0E00               	movlw	0
  6951   00218C  6E38               	movwf	?_Read_IR^0,c
  6952   00218E  EFCD  F010         	goto	l328
  6953   002192                     l3162:
  6954                           
  6955                           ;main.c: 889:     {;main.c: 890:         return 1;
  6956   002192  0E00               	movlw	0
  6957   002194  6E39               	movwf	(?_Read_IR+1)^0,c
  6958   002196  0E01               	movlw	1
  6959   002198  6E38               	movwf	?_Read_IR^0,c
  6960   00219A                     l328:
  6961   00219A  0012               	return		;funcret
  6962   00219C                     __end_of_Read_IR:
  6963                           	callstack 0
  6964                           
  6965 ;; *************** function _MotorON *****************
  6966 ;; Defined at:
  6967 ;;		line 40 in file "MotorDriver.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;Total ram usage:        0 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; Hardware stack levels required when called: 3
  6988 ;; This function calls:
  6989 ;;		_Set_RG3
  6990 ;; This function is called by:
  6991 ;;		_MotorPosition_Init
  6992 ;;		_Homing_Again_Manual
  6993 ;;		_Homing_Again_Auto
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text34
  6998   002230                     __ptext34:
  6999                           	callstack 0
  7000   002230                     _MotorON:
  7001                           	callstack 26
  7002   002230                     
  7003                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
  7004   002230  868F               	bsf	143,3,c	;volatile
  7005                           
  7006                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
  7007   002232  888F               	bsf	143,4,c	;volatile
  7008   002234                     
  7009                           ;MotorDriver.c: 44:     Set_RG3();
  7010   002234  EC2E  F011         	call	_Set_RG3	;wreg free
  7011   002238  0012               	return		;funcret
  7012   00223A                     __end_of_MotorON:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function _Set_RG3 *****************
  7016 ;; Defined at:
  7017 ;;		line 28 in file "MotorDriver.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;		None
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      void 
  7024 ;; Registers used:
  7025 ;;		wreg, status,2
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;Total ram usage:        0 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 2
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_MotorON
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text35
  7046   00225C                     __ptext35:
  7047                           	callstack 0
  7048   00225C                     _Set_RG3:
  7049                           	callstack 26
  7050   00225C                     
  7051                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
  7052   00225C  0E08               	movlw	8
  7053   00225E  6E73               	movwf	115,c	;volatile
  7054   002260                     
  7055                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
  7056   002260  8476               	bsf	118,2,c	;volatile
  7057   002262  0012               	return		;funcret
  7058   002264                     __end_of_Set_RG3:
  7059                           	callstack 0
  7060                           
  7061 ;; *************** function _MotorBREAK *****************
  7062 ;; Defined at:
  7063 ;;		line 47 in file "MotorDriver.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      void 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 3
  7084 ;; This function calls:
  7085 ;;		_Clr_RG3
  7086 ;; This function is called by:
  7087 ;;		_MotorPosition_Init
  7088 ;;		_Homing_Again_Manual
  7089 ;;		_Homing_Again_Auto
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text36
  7094   00223A                     __ptext36:
  7095                           	callstack 0
  7096   00223A                     _MotorBREAK:
  7097                           	callstack 26
  7098   00223A                     
  7099                           ;MotorDriver.c: 49:     Clr_RG3();
  7100   00223A  EC32  F011         	call	_Clr_RG3	;wreg free
  7101   00223E                     
  7102                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
  7103   00223E  868F               	bsf	143,3,c	;volatile
  7104   002240                     
  7105                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
  7106   002240  888F               	bsf	143,4,c	;volatile
  7107   002242  0012               	return		;funcret
  7108   002244                     __end_of_MotorBREAK:
  7109                           	callstack 0
  7110                           
  7111 ;; *************** function _Clr_RG3 *****************
  7112 ;; Defined at:
  7113 ;;		line 35 in file "MotorDriver.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;		None
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  1    wreg      void 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;Total ram usage:        0 bytes
  7132 ;; Hardware stack levels used: 1
  7133 ;; Hardware stack levels required when called: 2
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_MotorBREAK
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text37
  7142   002264                     __ptext37:
  7143                           	callstack 0
  7144   002264                     _Clr_RG3:
  7145                           	callstack 26
  7146   002264                     
  7147                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
  7148   002264  0E00               	movlw	0
  7149   002266  6E73               	movwf	115,c	;volatile
  7150   002268                     
  7151                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
  7152   002268  9476               	bcf	118,2,c	;volatile
  7153   00226A  0012               	return		;funcret
  7154   00226C                     __end_of_Clr_RG3:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function _AD_capture_BattVoltage *****************
  7158 ;; Defined at:
  7159 ;;		line 1235 in file "main.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;Total ram usage:        2 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; Hardware stack levels required when called: 3
  7180 ;; This function calls:
  7181 ;;		_delay_1ms
  7182 ;; This function is called by:
  7183 ;;		_main
  7184 ;;		_Homing_Again_Manual
  7185 ;;		_Homing_Again_Auto
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text38
  7190   001F80                     __ptext38:
  7191                           	callstack 0
  7192   001F80                     _AD_capture_BattVoltage:
  7193                           	callstack 26
  7194   001F80                     
  7195                           ;main.c: 1237:     ADCON0bits.CHS0 = 0;
  7196   001F80  94C2               	bcf	194,2,c	;volatile
  7197                           
  7198                           ;main.c: 1238:     ADCON0bits.CHS1 = 0;
  7199   001F82  96C2               	bcf	194,3,c	;volatile
  7200                           
  7201                           ;main.c: 1239:     ADCON0bits.CHS2 = 0;
  7202   001F84  98C2               	bcf	194,4,c	;volatile
  7203                           
  7204                           ;main.c: 1240:     ADCON0bits.CHS3 = 0;
  7205   001F86  9AC2               	bcf	194,5,c	;volatile
  7206                           
  7207                           ;main.c: 1242:     ADCON0bits.ADON = 1;
  7208   001F88  80C2               	bsf	194,0,c	;volatile
  7209   001F8A                     
  7210                           ;main.c: 1243:     delay_1ms(5);
  7211   001F8A  0E00               	movlw	0
  7212   001F8C  6E39               	movwf	(delay_1ms@time+1)^0,c
  7213   001F8E  0E05               	movlw	5
  7214   001F90  6E38               	movwf	delay_1ms@time^0,c
  7215   001F92  EC6D  F010         	call	_delay_1ms	;wreg free
  7216   001F96                     
  7217                           ;main.c: 1244:     ADCON0bits.GO = 1;
  7218   001F96  82C2               	bsf	194,1,c	;volatile
  7219   001F98                     l424:
  7220                           
  7221                           ;main.c: 1246:     while (ADCON0bits.GO == 1) {
  7222   001F98  B2C2               	btfsc	194,1,c	;volatile
  7223   001F9A  EFD1  F00F         	goto	u1951
  7224   001F9E  EFD3  F00F         	goto	u1950
  7225   001FA2                     u1951:
  7226   001FA2  EFCC  F00F         	goto	l424
  7227   001FA6                     u1950:
  7228   001FA6                     
  7229                           ;main.c: 1250:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  7230   001FA6  50C3               	movf	195,w,c	;volatile
  7231   001FA8  CFC4 F03B          	movff	4036,??_AD_capture_BattVoltage	;volatile
  7232   001FAC  6A3C               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  7233   001FAE  C03B  F03C         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  7234   001FB2  6A3B               	clrf	??_AD_capture_BattVoltage^0,c
  7235   001FB4  103B               	iorwf	??_AD_capture_BattVoltage^0,w,c
  7236   001FB6  6E09               	movwf	_VOLTAGE^0,c
  7237   001FB8  503C               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  7238   001FBA  6E0A               	movwf	(_VOLTAGE+1)^0,c
  7239   001FBC  0012               	return		;funcret
  7240   001FBE                     __end_of_AD_capture_BattVoltage:
  7241                           	callstack 0
  7242                           
  7243 ;; *************** function _delay_1ms *****************
  7244 ;; Defined at:
  7245 ;;		line 873 in file "main.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  time            2    6[COMRAM] unsigned int 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      void 
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;Total ram usage:        3 bytes
  7264 ;; Hardware stack levels used: 1
  7265 ;; Hardware stack levels required when called: 2
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		_MotorPosition_Init
  7270 ;;		_Homing_Again_Manual
  7271 ;;		_Homing_Again_Auto
  7272 ;;		_AD_capture_BattVoltage
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text39
  7277   0020DA                     __ptext39:
  7278                           	callstack 0
  7279   0020DA                     _delay_1ms:
  7280                           	callstack 27
  7281   0020DA                     
  7282                           ;main.c: 874:     while (time > 0) {
  7283   0020DA  EF79  F010         	goto	l321
  7284   0020DE                     l2888:
  7285                           
  7286                           ;main.c: 875:         _delay((unsigned long)((1)*(8000000/4000.0)));
  7287   0020DE  0E03               	movlw	3
  7288   0020E0  6E3A               	movwf	??_delay_1ms^0,c
  7289   0020E2  0E98               	movlw	152
  7290   0020E4                     u3537:
  7291   0020E4  2EE8               	decfsz	wreg,f,c
  7292   0020E6  D7FE               	bra	u3537
  7293   0020E8  2E3A               	decfsz	??_delay_1ms^0,f,c
  7294   0020EA  D7FC               	bra	u3537
  7295   0020EC                     
  7296                           ;main.c: 876:         time--;
  7297   0020EC  0638               	decf	delay_1ms@time^0,f,c
  7298   0020EE  A0D8               	btfss	status,0,c
  7299   0020F0  0639               	decf	(delay_1ms@time+1)^0,f,c
  7300   0020F2                     l321:
  7301                           
  7302                           ;main.c: 874:     while (time > 0) {
  7303   0020F2  5038               	movf	delay_1ms@time^0,w,c
  7304   0020F4  1039               	iorwf	(delay_1ms@time+1)^0,w,c
  7305   0020F6  A4D8               	btfss	status,2,c
  7306   0020F8  EF80  F010         	goto	u1691
  7307   0020FC  EF82  F010         	goto	u1690
  7308   002100                     u1691:
  7309   002100  EF6F  F010         	goto	l2888
  7310   002104                     u1690:
  7311   002104  0012               	return		;funcret
  7312   002106                     __end_of_delay_1ms:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _high_isr *****************
  7316 ;; Defined at:
  7317 ;;		line 757 in file "main.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  i               1    5[COMRAM] unsigned char 
  7322 ;;  c               1    4[COMRAM] unsigned char 
  7323 ;;  Temp            1    3[COMRAM] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;Total ram usage:        5 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 1
  7340 ;; This function calls:
  7341 ;;		_Low_Power_Indicator
  7342 ;;		_Read1USART
  7343 ;;		i2_Write1USART
  7344 ;; This function is called by:
  7345 ;;		Interrupt level 2
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	intcode
  7350   000008                     __pintcode:
  7351                           	callstack 0
  7352   000008                     _high_isr:
  7353                           	callstack 25
  7354                           
  7355                           ;incstack = 0
  7356   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7357   00000A  CFD9 F033          	movff	fsr2l,??_high_isr
  7358   00000E  CFDA F034          	movff	fsr2h,??_high_isr+1
  7359   000012                     
  7360                           ;main.c: 758:     unsigned char c, i;;main.c: 759:     unsigned char Temp;;main.c: 761: 
      +                              if ((PIR1bits.RC1IF))
  7361   000012  AA9E               	btfss	158,5,c	;volatile
  7362   000014  EF0E  F000         	goto	i2u304_41
  7363   000018  EF10  F000         	goto	i2u304_40
  7364   00001C                     i2u304_41:
  7365   00001C  EFE3  F000         	goto	i2l284
  7366   000020                     i2u304_40:
  7367   000020                     
  7368                           ;main.c: 762:     {;main.c: 764:         c = Read1USART();
  7369   000020  ECA9  F010         	call	_Read1USART	;wreg free
  7370   000024  6E36               	movwf	high_isr@c^0,c
  7371   000026                     
  7372                           ;main.c: 766:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  7373   000026  0EA5               	movlw	165
  7374   000028  1836               	xorwf	high_isr@c^0,w,c
  7375   00002A  A4D8               	btfss	status,2,c
  7376   00002C  EF1A  F000         	goto	i2u305_41
  7377   000030  EF1C  F000         	goto	i2u305_40
  7378   000034                     i2u305_41:
  7379   000034  EF3E  F000         	goto	i2l4270
  7380   000038                     i2u305_40:
  7381   000038  5031               	movf	_Serial_Flag^0,w,c
  7382   00003A  B4D8               	btfsc	status,2,c
  7383   00003C  EF22  F000         	goto	i2u306_41
  7384   000040  EF24  F000         	goto	i2u306_40
  7385   000044                     i2u306_41:
  7386   000044  EF2C  F000         	goto	i2l4264
  7387   000048                     i2u306_40:
  7388   000048  042D               	decf	_Busy^0,w,c
  7389   00004A  A4D8               	btfss	status,2,c
  7390   00004C  EF2A  F000         	goto	i2u307_41
  7391   000050  EF2C  F000         	goto	i2u307_40
  7392   000054                     i2u307_41:
  7393   000054  EF3E  F000         	goto	i2l4270
  7394   000058                     i2u307_40:
  7395   000058                     i2l4264:
  7396                           
  7397                           ;main.c: 767:             Serial_GData = 1;
  7398   000058  0E01               	movlw	1
  7399   00005A  6E30               	movwf	_Serial_GData^0,c
  7400                           
  7401                           ;main.c: 768:             Serial_Count = 0;
  7402   00005C  0E00               	movlw	0
  7403   00005E  6E24               	movwf	(_Serial_Count+1)^0,c
  7404   000060  0E00               	movlw	0
  7405   000062  6E23               	movwf	_Serial_Count^0,c
  7406   000064                     
  7407                           ;main.c: 769:             Serial_Buffer[Serial_Count] = c;
  7408   000064  0E80               	movlw	low _Serial_Buffer
  7409   000066  2423               	addwf	_Serial_Count^0,w,c
  7410   000068  6ED9               	movwf	fsr2l,c
  7411   00006A  0E00               	movlw	high _Serial_Buffer
  7412   00006C  2024               	addwfc	(_Serial_Count+1)^0,w,c
  7413   00006E  6EDA               	movwf	fsr2h,c
  7414   000070  C036  FFDF         	movff	high_isr@c,indf2
  7415   000074                     i2l4268:
  7416                           
  7417                           ;main.c: 770:             Serial_Count++;
  7418   000074  4A23               	infsnz	_Serial_Count^0,f,c
  7419   000076  2A24               	incf	(_Serial_Count+1)^0,f,c
  7420                           
  7421                           ;main.c: 771:         } else if (Serial_GData == 1) {
  7422   000078  EFED  F000         	goto	i2l4336
  7423   00007C                     i2l4270:
  7424   00007C  0430               	decf	_Serial_GData^0,w,c
  7425   00007E  A4D8               	btfss	status,2,c
  7426   000080  EF44  F000         	goto	i2u308_41
  7427   000084  EF46  F000         	goto	i2u308_40
  7428   000088                     i2u308_41:
  7429   000088  EFED  F000         	goto	i2l4336
  7430   00008C                     i2u308_40:
  7431   00008C                     
  7432                           ;main.c: 772:             Serial_Buffer[Serial_Count] = c;
  7433   00008C  0E80               	movlw	low _Serial_Buffer
  7434   00008E  2423               	addwf	_Serial_Count^0,w,c
  7435   000090  6ED9               	movwf	fsr2l,c
  7436   000092  0E00               	movlw	high _Serial_Buffer
  7437   000094  2024               	addwfc	(_Serial_Count+1)^0,w,c
  7438   000096  6EDA               	movwf	fsr2h,c
  7439   000098  C036  FFDF         	movff	high_isr@c,indf2
  7440   00009C                     
  7441                           ;main.c: 774:             if (Serial_Count < 5) {
  7442   00009C  5024               	movf	(_Serial_Count+1)^0,w,c
  7443   00009E  E107               	bnz	i2u309_41
  7444   0000A0  0E05               	movlw	5
  7445   0000A2  5C23               	subwf	_Serial_Count^0,w,c
  7446   0000A4  B0D8               	btfsc	status,0,c
  7447   0000A6  EF57  F000         	goto	i2u309_41
  7448   0000AA  EF59  F000         	goto	i2u309_40
  7449   0000AE                     i2u309_41:
  7450   0000AE  EFDF  F000         	goto	i2l4330
  7451   0000B2                     i2u309_40:
  7452   0000B2                     
  7453                           ;main.c: 775:                 if (c == 0x5A) {
  7454   0000B2  0E5A               	movlw	90
  7455   0000B4  1836               	xorwf	high_isr@c^0,w,c
  7456   0000B6  A4D8               	btfss	status,2,c
  7457   0000B8  EF60  F000         	goto	i2u310_41
  7458   0000BC  EF62  F000         	goto	i2u310_40
  7459   0000C0                     i2u310_41:
  7460   0000C0  EF3A  F000         	goto	i2l4268
  7461   0000C4                     i2u310_40:
  7462   0000C4                     
  7463                           ;main.c: 776:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  7464   0000C4  0100               	movlb	0	; () banked
  7465   0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  7466   0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  7467   0000CA  6E35               	movwf	high_isr@Temp^0,c
  7468                           
  7469                           ;main.c: 778:                     if (Temp == Serial_Buffer[3]) {
  7470   0000CC  5035               	movf	high_isr@Temp^0,w,c
  7471   0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  7472   0000D0  A4D8               	btfss	status,2,c
  7473   0000D2  EF6D  F000         	goto	i2u311_41
  7474   0000D6  EF6F  F000         	goto	i2u311_40
  7475   0000DA                     i2u311_41:
  7476   0000DA  EFB2  F000         	goto	i2l4310
  7477   0000DE                     i2u311_40:
  7478   0000DE                     
  7479                           ; BSR set to: 0
  7480                           ;main.c: 779:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  7481   0000DE  502D               	movf	_Busy^0,w,c
  7482   0000E0  B4D8               	btfsc	status,2,c
  7483   0000E2  EF75  F000         	goto	i2u312_41
  7484   0000E6  EF77  F000         	goto	i2u312_40
  7485   0000EA                     i2u312_41:
  7486   0000EA  EF80  F000         	goto	i2l295
  7487   0000EE                     i2u312_40:
  7488   0000EE                     
  7489                           ; BSR set to: 0
  7490   0000EE  0EF5               	movlw	245
  7491   0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7492   0000F2  A4D8               	btfss	status,2,c
  7493   0000F4  EF7E  F000         	goto	i2u313_41
  7494   0000F8  EF80  F000         	goto	i2u313_40
  7495   0000FC                     i2u313_41:
  7496   0000FC  EF98  F000         	goto	i2l293
  7497   000100                     i2u313_40:
  7498   000100                     i2l295:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;main.c: 780:                             INTCONbits.GIE = 0;
  7502   000100  9EF2               	bcf	242,7,c	;volatile
  7503   000102                     
  7504                           ; BSR set to: 0
  7505                           ;main.c: 781:                             for (i = 0; i < 5; i++) {
  7506   000102  0E00               	movlw	0
  7507   000104  6E37               	movwf	high_isr@i^0,c
  7508   000106                     i2l4290:
  7509                           
  7510                           ;main.c: 782:                                 Write1USART(Serial_Buffer[i]);
  7511   000106  0E80               	movlw	low _Serial_Buffer
  7512   000108  2437               	addwf	high_isr@i^0,w,c
  7513   00010A  6ED9               	movwf	fsr2l,c
  7514   00010C  6ADA               	clrf	fsr2h,c
  7515   00010E  0E00               	movlw	high _Serial_Buffer
  7516   000110  22DA               	addwfc	fsr2h,f,c
  7517   000112  50DF               	movf	indf2,w,c
  7518   000114  ECF0  F010         	call	i2_Write1USART
  7519   000118                     
  7520                           ;main.c: 783:                             }
  7521   000118  2A37               	incf	high_isr@i^0,f,c
  7522   00011A  0E04               	movlw	4
  7523   00011C  6437               	cpfsgt	high_isr@i^0,c
  7524   00011E  EF93  F000         	goto	i2u314_41
  7525   000122  EF95  F000         	goto	i2u314_40
  7526   000126                     i2u314_41:
  7527   000126  EF83  F000         	goto	i2l4290
  7528   00012A                     i2u314_40:
  7529   00012A                     
  7530                           ;main.c: 784:                             INTCONbits.GIE = 1;
  7531   00012A  8EF2               	bsf	242,7,c	;volatile
  7532                           
  7533                           ;main.c: 785:                         } else {
  7534   00012C  EFA8  F000         	goto	i2l4308
  7535   000130                     i2l293:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;main.c: 786:                             INTCONbits.GIE = 0;
  7539   000130  9EF2               	bcf	242,7,c	;volatile
  7540   000132                     
  7541                           ; BSR set to: 0
  7542                           ;main.c: 787:                             for (i = 0; i < 5; i++) {
  7543   000132  0E00               	movlw	0
  7544   000134  6E37               	movwf	high_isr@i^0,c
  7545   000136                     i2l4302:
  7546                           
  7547                           ;main.c: 788:                                 Write1USART(0x16);
  7548   000136  0E16               	movlw	22
  7549   000138  ECF0  F010         	call	i2_Write1USART
  7550   00013C                     
  7551                           ;main.c: 789:                             }
  7552   00013C  2A37               	incf	high_isr@i^0,f,c
  7553   00013E  0E04               	movlw	4
  7554   000140  6437               	cpfsgt	high_isr@i^0,c
  7555   000142  EFA5  F000         	goto	i2u315_41
  7556   000146  EFA7  F000         	goto	i2u315_40
  7557   00014A                     i2u315_41:
  7558   00014A  EF9B  F000         	goto	i2l4302
  7559   00014E                     i2u315_40:
  7560   00014E                     
  7561                           ;main.c: 790:                             INTCONbits.GIE = 1;
  7562   00014E  8EF2               	bsf	242,7,c	;volatile
  7563   000150                     i2l4308:
  7564                           
  7565                           ;main.c: 793:                         Serial_Flag = 1;
  7566   000150  0E01               	movlw	1
  7567   000152  6E31               	movwf	_Serial_Flag^0,c
  7568                           
  7569                           ;main.c: 794:                         Serial_Count = 0;
  7570   000154  0E00               	movlw	0
  7571   000156  6E24               	movwf	(_Serial_Count+1)^0,c
  7572   000158  0E00               	movlw	0
  7573   00015A  6E23               	movwf	_Serial_Count^0,c
  7574                           
  7575                           ;main.c: 795:                         OpMode = AUTO_MODE;
  7576   00015C  0E02               	movlw	2
  7577   00015E  6E2A               	movwf	_OpMode^0,c	;volatile
  7578                           
  7579                           ;main.c: 797:                     } else {
  7580   000160  EFC8  F000         	goto	i2l4324
  7581   000164                     i2l4310:
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;main.c: 798:                         Serial_Flag = 0;
  7585   000164  0E00               	movlw	0
  7586   000166  6E31               	movwf	_Serial_Flag^0,c
  7587                           
  7588                           ;main.c: 799:                         Serial_Count = 0;
  7589   000168  0E00               	movlw	0
  7590   00016A  6E24               	movwf	(_Serial_Count+1)^0,c
  7591   00016C  0E00               	movlw	0
  7592   00016E  6E23               	movwf	_Serial_Count^0,c
  7593   000170                     
  7594                           ; BSR set to: 0
  7595                           ;main.c: 801:                         INTCONbits.GIE = 0;
  7596   000170  9EF2               	bcf	242,7,c	;volatile
  7597                           
  7598                           ;main.c: 802:                         for (i = 0; i < 5; i++) {
  7599   000172  0E00               	movlw	0
  7600   000174  6E37               	movwf	high_isr@i^0,c
  7601   000176                     i2l4318:
  7602                           
  7603                           ;main.c: 803:                             Write1USART(0x15);
  7604   000176  0E15               	movlw	21
  7605   000178  ECF0  F010         	call	i2_Write1USART
  7606   00017C                     
  7607                           ;main.c: 804:                         }
  7608   00017C  2A37               	incf	high_isr@i^0,f,c
  7609   00017E  0E04               	movlw	4
  7610   000180  6437               	cpfsgt	high_isr@i^0,c
  7611   000182  EFC5  F000         	goto	i2u316_41
  7612   000186  EFC7  F000         	goto	i2u316_40
  7613   00018A                     i2u316_41:
  7614   00018A  EFBB  F000         	goto	i2l4318
  7615   00018E                     i2u316_40:
  7616   00018E                     
  7617                           ;main.c: 805:                         INTCONbits.GIE = 1;
  7618   00018E  8EF2               	bsf	242,7,c	;volatile
  7619   000190                     i2l4324:
  7620                           
  7621                           ;main.c: 808:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  7622   000190  0EF5               	movlw	245
  7623   000192  0100               	movlb	0	; () banked
  7624   000194  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7625   000196  A4D8               	btfss	status,2,c
  7626   000198  EFD0  F000         	goto	i2u317_41
  7627   00019C  EFD2  F000         	goto	i2u317_40
  7628   0001A0                     i2u317_41:
  7629   0001A0  EF3A  F000         	goto	i2l4268
  7630   0001A4                     i2u317_40:
  7631   0001A4                     
  7632                           ; BSR set to: 0
  7633   0001A4  0E02               	movlw	2
  7634   0001A6  182A               	xorwf	_OpMode^0,w,c	;volatile
  7635   0001A8  A4D8               	btfss	status,2,c
  7636   0001AA  EFD9  F000         	goto	i2u318_41
  7637   0001AE  EFDB  F000         	goto	i2u318_40
  7638   0001B2                     i2u318_41:
  7639   0001B2  EF3A  F000         	goto	i2l4268
  7640   0001B6                     i2u318_40:
  7641   0001B6                     
  7642                           ; BSR set to: 0
  7643                           ;main.c: 809:                         Stop = 1;
  7644   0001B6  0E01               	movlw	1
  7645   0001B8  6E2F               	movwf	_Stop^0,c
  7646   0001BA  EF3A  F000         	goto	i2l4268
  7647   0001BE                     i2l4330:
  7648                           
  7649                           ;main.c: 813:                 Serial_GData = 0;
  7650   0001BE  0E00               	movlw	0
  7651   0001C0  6E30               	movwf	_Serial_GData^0,c
  7652   0001C2  EF3A  F000         	goto	i2l4268
  7653   0001C6                     i2l284:
  7654                           
  7655                           ;main.c: 819:         if (RCSTA1bits.OERR == 1) {
  7656   0001C6  A2AC               	btfss	172,1,c	;volatile
  7657   0001C8  EFE8  F000         	goto	i2u319_41
  7658   0001CC  EFEA  F000         	goto	i2u319_40
  7659   0001D0                     i2u319_41:
  7660   0001D0  EFED  F000         	goto	i2l4336
  7661   0001D4                     i2u319_40:
  7662   0001D4                     
  7663                           ;main.c: 820:             RCSTA1bits.OERR = 0;
  7664   0001D4  92AC               	bcf	172,1,c	;volatile
  7665                           
  7666                           ;main.c: 821:             RCSTA1bits.CREN = 0;
  7667   0001D6  98AC               	bcf	172,4,c	;volatile
  7668                           
  7669                           ;main.c: 822:             RCSTA1bits.CREN = 1;
  7670   0001D8  88AC               	bsf	172,4,c	;volatile
  7671   0001DA                     i2l4336:
  7672                           
  7673                           ;main.c: 826:     if (TMR1IF_triggered == 1) {
  7674   0001DA  0425               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7675   0001DC  A4D8               	btfss	status,2,c
  7676   0001DE  EFF3  F000         	goto	i2u320_41
  7677   0001E2  EFF5  F000         	goto	i2u320_40
  7678   0001E6                     i2u320_41:
  7679   0001E6  EF3B  F001         	goto	i2l4354
  7680   0001EA                     i2u320_40:
  7681   0001EA                     
  7682                           ;main.c: 827:         if (errorcounter > 0) {
  7683   0001EA  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7684   0001EC  EF02  F001         	goto	i2u321_41
  7685   0001F0  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  7686   0001F2  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7687   0001F4  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7688   0001F6  E108               	bnz	i2u321_40
  7689   0001F8  0452               	decf	_errorcounter^0,w,c	;volatile
  7690   0001FA  A0D8               	btfss	status,0,c
  7691   0001FC  EF02  F001         	goto	i2u321_41
  7692   000200  EF04  F001         	goto	i2u321_40
  7693   000204                     i2u321_41:
  7694   000204  EF0E  F001         	goto	i2l4342
  7695   000208                     i2u321_40:
  7696   000208                     
  7697                           ;main.c: 828:             errorcounter--;
  7698   000208  0EFF               	movlw	255
  7699   00020A  2652               	addwf	_errorcounter^0,f,c	;volatile
  7700   00020C  0EFF               	movlw	255
  7701   00020E  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7702   000210  0EFF               	movlw	255
  7703   000212  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7704   000214  0EFF               	movlw	255
  7705   000216  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7706                           
  7707                           ;main.c: 829:         } else {
  7708   000218  EF16  F001         	goto	i2l4344
  7709   00021C                     i2l4342:
  7710                           
  7711                           ;main.c: 830:             errorcounter = 0;
  7712   00021C  0E00               	movlw	0
  7713   00021E  6E52               	movwf	_errorcounter^0,c	;volatile
  7714   000220  0E00               	movlw	0
  7715   000222  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  7716   000224  0E00               	movlw	0
  7717   000226  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  7718   000228  0E00               	movlw	0
  7719   00022A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  7720   00022C                     i2l4344:
  7721                           
  7722                           ;main.c: 833:         if (LowPowerCounter > 0) {
  7723   00022C  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7724   00022E  EF23  F001         	goto	i2u322_41
  7725   000232  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7726   000234  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7727   000236  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7728   000238  E108               	bnz	i2u322_40
  7729   00023A  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  7730   00023C  A0D8               	btfss	status,0,c
  7731   00023E  EF23  F001         	goto	i2u322_41
  7732   000242  EF25  F001         	goto	i2u322_40
  7733   000246                     i2u322_41:
  7734   000246  EF2F  F001         	goto	i2l4348
  7735   00024A                     i2u322_40:
  7736   00024A                     
  7737                           ;main.c: 834:             LowPowerCounter--;
  7738   00024A  0EFF               	movlw	255
  7739   00024C  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  7740   00024E  0EFF               	movlw	255
  7741   000250  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7742   000252  0EFF               	movlw	255
  7743   000254  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7744   000256  0EFF               	movlw	255
  7745   000258  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7746                           
  7747                           ;main.c: 835:         } else {
  7748   00025A  EF39  F001         	goto	i2l4352
  7749   00025E                     i2l4348:
  7750                           
  7751                           ;main.c: 836:             LowPowerCounter = 20;
  7752   00025E  0E14               	movlw	20
  7753   000260  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  7754   000262  0E00               	movlw	0
  7755   000264  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7756   000266  0E00               	movlw	0
  7757   000268  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7758   00026A  0E00               	movlw	0
  7759   00026C  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7760   00026E                     
  7761                           ;main.c: 837:             Low_Power_Indicator();
  7762   00026E  EC52  F010         	call	_Low_Power_Indicator	;wreg free
  7763   000272                     i2l4352:
  7764                           
  7765                           ;main.c: 840:         TMR1IF_triggered = 0;
  7766   000272  0E00               	movlw	0
  7767   000274  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  7768   000276                     i2l4354:
  7769                           
  7770                           ;main.c: 843:     if (TMR1IF) {
  7771   000276  A09E               	btfss	3998,0,c	;volatile
  7772   000278  EF40  F001         	goto	i2u323_41
  7773   00027C  EF42  F001         	goto	i2u323_40
  7774   000280                     i2u323_41:
  7775   000280  EF49  F001         	goto	i2l4360
  7776   000284                     i2u323_40:
  7777   000284                     
  7778                           ;main.c: 844:         TMR1 = 0x9E57;
  7779   000284  0E9E               	movlw	158
  7780   000286  6ECF               	movwf	207,c	;volatile
  7781   000288  0E57               	movlw	87
  7782   00028A  6ECE               	movwf	206,c	;volatile
  7783   00028C                     
  7784                           ;main.c: 845:         TMR1IF = 0;
  7785   00028C  909E               	bcf	3998,0,c	;volatile
  7786                           
  7787                           ;main.c: 846:         TMR1IF_triggered = 1;
  7788   00028E  0E01               	movlw	1
  7789   000290  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  7790   000292                     i2l4360:
  7791                           
  7792                           ;main.c: 851:     if(INTCON3bits.INT2F == 1) {
  7793   000292  A2F0               	btfss	240,1,c	;volatile
  7794   000294  EF4E  F001         	goto	i2u324_41
  7795   000298  EF50  F001         	goto	i2u324_40
  7796   00029C                     i2u324_41:
  7797   00029C  EF7B  F001         	goto	i2l318
  7798   0002A0                     i2u324_40:
  7799   0002A0                     
  7800                           ;main.c: 853:       if (dispense == 0 && PORTBbits.RB4 != 0)
  7801   0002A0  5003               	movf	_dispense^0,w,c
  7802   0002A2  1004               	iorwf	(_dispense+1)^0,w,c
  7803   0002A4  A4D8               	btfss	status,2,c
  7804   0002A6  EF57  F001         	goto	i2u325_41
  7805   0002AA  EF59  F001         	goto	i2u325_40
  7806   0002AE                     i2u325_41:
  7807   0002AE  EF66  F001         	goto	i2l4368
  7808   0002B2                     i2u325_40:
  7809   0002B2  A881               	btfss	129,4,c	;volatile
  7810   0002B4  EF5E  F001         	goto	i2u326_41
  7811   0002B8  EF60  F001         	goto	i2u326_40
  7812   0002BC                     i2u326_41:
  7813   0002BC  EF66  F001         	goto	i2l4368
  7814   0002C0                     i2u326_40:
  7815   0002C0                     
  7816                           ;main.c: 854:       {;main.c: 856:         dispense = 1;
  7817   0002C0  0E00               	movlw	0
  7818   0002C2  6E04               	movwf	(_dispense+1)^0,c
  7819   0002C4  0E01               	movlw	1
  7820   0002C6  6E03               	movwf	_dispense^0,c
  7821                           
  7822                           ;main.c: 857:       }
  7823   0002C8  EF7A  F001         	goto	i2l4374
  7824   0002CC                     i2l4368:
  7825   0002CC  0403               	decf	_dispense^0,w,c
  7826   0002CE  1004               	iorwf	(_dispense+1)^0,w,c
  7827   0002D0  A4D8               	btfss	status,2,c
  7828   0002D2  EF6D  F001         	goto	i2u327_41
  7829   0002D6  EF6F  F001         	goto	i2u327_40
  7830   0002DA                     i2u327_41:
  7831   0002DA  EF7A  F001         	goto	i2l4374
  7832   0002DE                     i2u327_40:
  7833   0002DE  A881               	btfss	129,4,c	;volatile
  7834   0002E0  EF74  F001         	goto	i2u328_41
  7835   0002E4  EF76  F001         	goto	i2u328_40
  7836   0002E8                     i2u328_41:
  7837   0002E8  EF7A  F001         	goto	i2l4374
  7838   0002EC                     i2u328_40:
  7839   0002EC                     
  7840                           ;main.c: 860:       {;main.c: 862:         dispense = 0;
  7841   0002EC  0E00               	movlw	0
  7842   0002EE  6E04               	movwf	(_dispense+1)^0,c
  7843   0002F0  0E00               	movlw	0
  7844   0002F2  6E03               	movwf	_dispense^0,c
  7845   0002F4                     i2l4374:
  7846                           
  7847                           ;main.c: 865:       INTCON3bits.INT2F = 0;
  7848   0002F4  92F0               	bcf	240,1,c	;volatile
  7849   0002F6                     i2l318:
  7850   0002F6  C034  FFDA         	movff	??_high_isr+1,fsr2h
  7851   0002FA  C033  FFD9         	movff	??_high_isr,fsr2l
  7852   0002FE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7853   000300  0011               	retfie		f
  7854   000302                     __end_of_high_isr:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function i2_Write1USART *****************
  7858 ;; Defined at:
  7859 ;;		line 47 in file "usart.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  data            1    wreg     unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  data            1    0[COMRAM] unsigned char 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      void 
  7866 ;; Registers used:
  7867 ;;		wreg
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;Total ram usage:        1 bytes
  7878 ;; Hardware stack levels used: 1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_high_isr
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text41
  7887   0021E0                     __ptext41:
  7888                           	callstack 0
  7889   0021E0                     i2_Write1USART:
  7890                           	callstack 25
  7891                           
  7892                           ;incstack = 0
  7893                           ;i2Write1USART@data stored from wreg
  7894   0021E0  6E32               	movwf	i2Write1USART@data^0,c
  7895   0021E2                     
  7896                           ;usart.c: 48:     TXREG1 = data;
  7897   0021E2  C032  FFAE         	movff	i2Write1USART@data,4014	;volatile
  7898   0021E6                     i2l593:
  7899   0021E6  A2AD               	btfss	173,1,c	;volatile
  7900   0021E8  EFF8  F010         	goto	i2u252_41
  7901   0021EC  EFFA  F010         	goto	i2u252_40
  7902   0021F0                     i2u252_41:
  7903   0021F0  EFF3  F010         	goto	i2l593
  7904   0021F4                     i2u252_40:
  7905   0021F4  0012               	return		;funcret
  7906   0021F6                     __end_ofi2_Write1USART:
  7907                           	callstack 0
  7908                           
  7909 ;; *************** function _Read1USART *****************
  7910 ;; Defined at:
  7911 ;;		line 56 in file "usart.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  result          1    0[COMRAM] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;Total ram usage:        1 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_high_isr
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text42
  7939   002152                     __ptext42:
  7940                           	callstack 0
  7941   002152                     _Read1USART:
  7942                           	callstack 25
  7943   002152                     
  7944                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  7945   002152  A2AC               	btfss	172,1,c	;volatile
  7946   002154  EFAE  F010         	goto	i2u249_41
  7947   002158  EFB0  F010         	goto	i2u249_40
  7948   00215C                     i2u249_41:
  7949   00215C  EFB8  F010         	goto	i2l599
  7950   002160                     i2u249_40:
  7951   002160                     
  7952                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  7953   002160  98AC               	bcf	172,4,c	;volatile
  7954                           
  7955                           ;usart.c: 61:         result = RCREG1;
  7956   002162  CFAF F032          	movff	4015,Read1USART@result	;volatile
  7957                           
  7958                           ;usart.c: 62:         result = RCREG1;
  7959   002166  CFAF F032          	movff	4015,Read1USART@result	;volatile
  7960                           
  7961                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  7962   00216A  88AC               	bsf	172,4,c	;volatile
  7963                           
  7964                           ;usart.c: 64:     } else {
  7965   00216C  EFBA  F010         	goto	i2l3730
  7966   002170                     i2l599:
  7967                           
  7968                           ;usart.c: 65:         result = RCREG1;
  7969   002170  CFAF F032          	movff	4015,Read1USART@result	;volatile
  7970   002174                     i2l3730:
  7971                           
  7972                           ;usart.c: 68:     return result;
  7973   002174  5032               	movf	Read1USART@result^0,w,c
  7974   002176  0012               	return		;funcret
  7975   002178                     __end_of_Read1USART:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _Low_Power_Indicator *****************
  7979 ;; Defined at:
  7980 ;;		line 1253 in file "main.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;Total ram usage:        0 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_high_isr
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text43
  8008   0020A4                     __ptext43:
  8009                           	callstack 0
  8010   0020A4                     _Low_Power_Indicator:
  8011                           	callstack 25
  8012   0020A4                     
  8013                           ;main.c: 1255:     if (VOLTAGE <= 0x0366)
  8014   0020A4  0E67               	movlw	103
  8015   0020A6  5C09               	subwf	_VOLTAGE^0,w,c
  8016   0020A8  0E03               	movlw	3
  8017   0020AA  580A               	subwfb	(_VOLTAGE+1)^0,w,c
  8018   0020AC  B0D8               	btfsc	status,0,c
  8019   0020AE  EF5B  F010         	goto	i2u250_41
  8020   0020B2  EF5D  F010         	goto	i2u250_40
  8021   0020B6                     i2u250_41:
  8022   0020B6  EF60  F010         	goto	i2l3738
  8023   0020BA                     i2u250_40:
  8024   0020BA                     
  8025                           ;main.c: 1256:     {;main.c: 1258:         LATDbits.LATD1 = 1;
  8026   0020BA  828C               	bsf	140,1,c	;volatile
  8027                           
  8028                           ;main.c: 1260:     } else if (VOLTAGE >= 0x03C0)
  8029   0020BC  EF6C  F010         	goto	i2l433
  8030   0020C0                     i2l3738:
  8031   0020C0  0EC0               	movlw	192
  8032   0020C2  5C09               	subwf	_VOLTAGE^0,w,c
  8033   0020C4  0E03               	movlw	3
  8034   0020C6  580A               	subwfb	(_VOLTAGE+1)^0,w,c
  8035   0020C8  A0D8               	btfss	status,0,c
  8036   0020CA  EF69  F010         	goto	i2u251_41
  8037   0020CE  EF6B  F010         	goto	i2u251_40
  8038   0020D2                     i2u251_41:
  8039   0020D2  EF6C  F010         	goto	i2l433
  8040   0020D6                     i2u251_40:
  8041   0020D6                     
  8042                           ;main.c: 1261:     {;main.c: 1262:         LATDbits.LATD1 = 0;
  8043   0020D6  928C               	bcf	140,1,c	;volatile
  8044   0020D8                     i2l433:
  8045   0020D8  0012               	return		;funcret
  8046   0020DA                     __end_of_Low_Power_Indicator:
  8047                           	callstack 0
  8048   000000                     
  8049                           	psect	rparam
  8050   000000                     
  8051                           	psect	temp
  8052   000059                     btemp:
  8053                           	callstack 0
  8054   000059                     	ds	1
  8055   000000                     int$flags	set	btemp
  8056   000000                     wtemp8	set	btemp+1
  8057   000000                     ttemp5	set	btemp+1
  8058   000000                     ttemp6	set	btemp+4
  8059   000000                     ttemp7	set	btemp+8
  8060                           
  8061                           	psect	config
  8062                           
  8063                           ;Config register CONFIG1L @ 0x7FF8
  8064                           ;	Watchdog Timer Enable bit
  8065                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  8066                           ;	PLL Prescaler Selection bits
  8067                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8068                           ;	Stack Overflow/Underflow Reset Enable bit
  8069                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  8070                           ;	Extended Instruction Set Enable bit
  8071                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8072                           ;	Background Debugger Enable bit
  8073                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  8074   007FF8                     	org	32760
  8075   007FF8  AE                 	db	174
  8076                           
  8077                           ;Config register CONFIG1H @ 0x7FF9
  8078                           ;	CPU System Clock Postscaler
  8079                           ;	CPUDIV = OSC1, No CPU system clock divide
  8080                           ;	Code Protection bit
  8081                           ;	CP0 = OFF, Program memory is not code-protected
  8082   007FF9                     	org	32761
  8083   007FF9  F7                 	db	247
  8084                           
  8085                           ;Config register CONFIG2L @ 0x7FFA
  8086                           ;	Oscillator Selection bits
  8087                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  8088                           ;	Fail-Safe Clock Monitor Enable bit
  8089                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8090                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  8091                           ;	IESO = OFF, Two-Speed Start-up disabled
  8092   007FFA                     	org	32762
  8093   007FFA  03                 	db	3
  8094                           
  8095                           ;Config register CONFIG2H @ 0x7FFB
  8096                           ;	Watchdog Timer Postscaler Select bits
  8097                           ;	WDTPS = 2048, 1:2048
  8098   007FFB                     	org	32763
  8099   007FFB  FB                 	db	251
  8100                           
  8101                           ;Config register CONFIG3L @ 0x7FFC
  8102                           ;	unspecified, using default values
  8103   007FFC                     	org	32764
  8104   007FFC  F8                 	db	248
  8105                           
  8106                           ;Config register CONFIG3H @ 0x7FFD
  8107                           ;	ECCP2 MUX bit
  8108                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  8109                           ;	MSSP Address Masking Mode Select bit
  8110                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  8111   007FFD                     	org	32765
  8112   007FFD  F1                 	db	241
  8113                           tosu	equ	0xFFF
  8114                           tosh	equ	0xFFE
  8115                           tosl	equ	0xFFD
  8116                           stkptr	equ	0xFFC
  8117                           pclatu	equ	0xFFB
  8118                           pclath	equ	0xFFA
  8119                           pcl	equ	0xFF9
  8120                           tblptru	equ	0xFF8
  8121                           tblptrh	equ	0xFF7
  8122                           tblptrl	equ	0xFF6
  8123                           tablat	equ	0xFF5
  8124                           prodh	equ	0xFF4
  8125                           prodl	equ	0xFF3
  8126                           indf0	equ	0xFEF
  8127                           postinc0	equ	0xFEE
  8128                           postdec0	equ	0xFED
  8129                           preinc0	equ	0xFEC
  8130                           plusw0	equ	0xFEB
  8131                           fsr0h	equ	0xFEA
  8132                           fsr0l	equ	0xFE9
  8133                           wreg	equ	0xFE8
  8134                           indf1	equ	0xFE7
  8135                           postinc1	equ	0xFE6
  8136                           postdec1	equ	0xFE5
  8137                           preinc1	equ	0xFE4
  8138                           plusw1	equ	0xFE3
  8139                           fsr1h	equ	0xFE2
  8140                           fsr1l	equ	0xFE1
  8141                           bsr	equ	0xFE0
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           preinc2	equ	0xFDC
  8146                           plusw2	equ	0xFDB
  8147                           fsr2h	equ	0xFDA
  8148                           fsr2l	equ	0xFD9
  8149                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      88
    BANK0           160      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _main->_write_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22567
                                             26 COMRAM     2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1794
                                             20 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     227
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2508
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2508
                                             20 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  4     4      0    6182
                                             23 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    3622
                                             14 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2786
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     319
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
     _delay_1ms
     _readWeighingData
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SErr
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      54        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      25        0.0%
BANK11             100      0       0      26        0.0%
BITBANK10          100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      21        0.0%
BANK9              100      0       0      22        0.0%
BITBANK8           100      0       0      19        0.0%
BANK8              100      0       0      20        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      30       4       30.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      58       1       93.6%
BITBANK15           40      0       0      34        0.0%
BANK15              40      0       0      35        0.0%
BITBIGSFRlllll      2B      0       0      53        0.0%
BITBIGSFRhlhlh      1C      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhl        C      0       0      43        0.0%
BITBIGSFRhllhh       8      0       0      40        0.0%
BITBIGSFRhlll        8      0       0      41        0.0%
BITBIGSFRlllh        7      0       0      48        0.0%
BITBIGSFRlhhhh       5      0       0      42        0.0%
BITBIGSFRllllhh      4      0       0      49        0.0%
BITBIGSFRlhlh        4      0       0      44        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlhlllh      2      0       0      45        0.0%
BITBIGSFRllllhh      2      0       0      51        0.0%
BITBIGSFRhlhll       2      0       0      39        0.0%
BITBIGSFRlhllll      2      0       0      46        0.0%
BITBIGSFRllllhh      1      0       0      50        0.0%
BITBIGSFRhlhh        1      0       0      37        0.0%
BITBIGSFRllh         1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      29        0.0%
DATA                 0      0      88      55        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 11 15:55:11 2023

                             _i 000D                   ??_i2c_Address 003A                    ___awdiv@sign 003D  
                 ?_InitSTLED316 0032                     i2c_Read@ack 003B                             l210 07A8  
                           l211 07FC                             l212 07BE                             l221 09DA  
                           l213 07D0                             l231 0A56                             l215 08EC  
                           l232 0A48                             l208 078E                             l321 20F2  
                           l403 1578                             l227 0A18                             l324 2104  
                           l500 196C                             l252 0C80                             l228 0A0A  
                           l413 206C                             l421 21B2                             l245 0BB8  
                           l262 0D9E                             l351 0F9E                             l343 1FF8  
                           l424 1F98                             l328 219A                             l440 1CEC  
                           l408 2032                             l417 1E9A                             l361 110A  
                           l185 0564                             l418 1EA0                             l346 0F6C  
                           l338 1790                             l427 1FBC                             l451 1D42  
                           l371 12CA                             l267 0E46                             l195 05C6  
                           l508 1978                             l196 05CC                             l365 1168  
                           l454 1D6C                             l446 1CF4                             l470 1A44  
                           l382 1352                             l543 2150                             l448 1D2A  
                           l552 2252                             l632 1DCE                             l481 1884  
                           l385 139C                             l537 21C8                             l561 2098  
                           l490 1890                             l546 225A                             l634 1DDC  
                           l562 209A                             l395 14E0                             l555 2222  
                           l635 1DDE                             l563 20A2                             l388 13A8  
                           l476 1C60                             l652 2216                             l661 2238  
                           l549 224A                             l398 1512                             l558 2208  
                           l566 1F38                             l590 212A                             l655 2262  
                           l911 1BB8                             l495 1EEE                             l664 2242  
                           l593 21D0                             l569 1E46                             l658 226A  
                           l746 1684                             l596 21DE                             l898 1B08  
                           _GIE 007F97                             _PR4 000F77                             _NUM 0013  
                  ___awmod@sign 003D                             wreg 000FE8                      _TXSTA1bits 000FAD  
                 ??_i2c_Restart 0039                            l3000 15A0                            l3010 15E8  
                          l3002 15AE                            l3100 1B6E                            l3020 1632  
                          l3012 15F0                            l3004 15BE                            l3110 1BA8  
                          l3102 1B84                            l3030 1664                            l3022 1642  
                          l3014 15FC                            l3006 15C2                            l3040 1A58  
                          l3112 1BB0                            l3104 1B8C                            l3120 1BFA  
                          l3032 1674                            l3024 1644                            l3016 160A  
                          l3008 15D2                            l4000 09A6                            l3210 1E48  
                          l3050 1A7E                            l3042 1A60                            l3106 1B92  
                          l3130 1C46                            l3122 1BFC                            l3026 164E  
                          l3018 1614                            l4010 09FE                            l4002 09B4  
                          l3204 223A                            l3220 1E7A                            l3212 1E5E  
                          l3060 1AB6                            l3052 1A86                            l3044 1A64  
                          l3036 1A46                            l3108 1B98                            l3140 1C58  
                          l3132 1C48                            l3124 1C20                            l3116 1BBA  
                          l3028 1654                            l3300 1D9C                            l4100 0C82  
                          l4020 0A80                            l4012 0A26                            l4004 09BC  
                          l3150 1FA6                            l3206 223E                            l3230 179C  
                          l3222 1E7E                            l3070 1AE2                            l3062 1ABC  
                          l3054 1A98                            l3046 1A72                            l3038 1A4A  
                          l3142 1C5E                            l3134 1C4E                            l3126 1C30  
                          l3118 1BF2                            l3310 1DA6                            l3302 1D9E  
                          l4110 0CB6                            l4102 0C9C                            l4022 0A94  
                          l4014 0A3C                            l4006 09CC                            l3144 1F80  
                          l3208 2240                            l3240 17DA                            l3232 179E  
                          l3224 1E9C                            l3064 1AD2                            l3056 1AA0  
                          l3072 1AE8                            l3048 1A7A                            l3080 1B0A  
                          l3136 1C54                            l3128 1C40                            l3400 16D6  
                          l3152 1EF0                            l3320 1DC0                            l3312 1DA8  
                          l3304 1DA0                            l4120 0CFC                            l4112 0CC6  
                          l4104 0C9E                            l4200 0EEC                            l4040 0AF6  
                          l4032 0AB4                            l4024 0A98                            l4016 0A5E  
                          l4008 09E8                            l3146 1F8A                            l3162 2192  
                          l3154 2178                            l3170 1894                            l3242 17EA  
                          l3234 17AA                            l3226 1794                            l3218 1E68  
                          l3074 1AF8                            l3066 1ADA                            l3058 1AA8  
                          l3090 1B36                            l3082 1B0E                            l3138 1C56  
                          l3410 1712                            l3402 16DC                            l3330 1DCA  
                          l3322 1DC2                            l3314 1DAA                            l3306 1DA2  
                          l4130 0D40                            l4122 0D18                            l4114 0CCA  
                          l4050 0B30                            l4034 0AC6                            l4042 0AFE  
                          l4202 0EFC                            l4026 0A9C                            l4018 0A6E  
                          l3148 1F96                            l3156 2186                            l3180 18BA  
                          l3172 1896                            l3244 17FA                            l3236 17BA  
                          l3252 182A                            l3228 1796                            l3076 1B00  
                          l3068 1ADC                            l3092 1B3E                            l3084 1B1C  
                          l3500 0FEC                            l3340 1C70                            l3420 1750  
                          l3412 171E                            l3404 16E0                            l3332 1DCC  
                          l3324 1DC4                            l3316 1DAC                            l3308 1DA4  
                          l4140 0D6A                            l4132 0D44                            l4124 0D30  
                          l4116 0CCC                            l4108 0CA6                            l4060 0B7A  
                          l4052 0B40                            l4044 0B10                            l4036 0AD6  
                          l4028 0AA0                            l4204 0F04                            l3166 2230  
                          l3190 190A                            l3182 18CA                            l3174 189C  
                          l3254 1888                            l3246 180A                            l3238 17CA  
                          l3094 1B50                            l3086 1B24                            l3510 102E  
                          l3502 1002                            l3350 1CBE                            l3342 1C98  
                          l3334 1C64                            l3430 178E                            l3422 1760  
                          l3414 1734                            l3406 16F2                            l3326 1DC6  
                          l3318 1DAE                            l3270 207A                            l3262 2244  
                          l4134 0D48                            l4126 0D38                            l4118 0CE4  
                          l4150 0DA0                            l4062 0B84                            l4054 0B50  
                          l4046 0B20                            l4038 0ADE                            l3168 2234  
                          l3184 18DA                            l3176 189E                            l3256 188E  
                          l3248 181A                            l3096 1B58                            l3088 1B28  
                          l3600 12EE                            l3520 106A                            l3512 103E  
                          l3504 1008                            l3352 1CC0                            l3344 1C9A  
                          l3336 1C68                            l3424 176C                            l3416 173A  
                          l3408 1702                            l3440 1FDC                            l3432 1FBE  
                          l3328 1DC8                            l3280 1D88                            l3360 220A  
                          l3272 2082                            l3264 2248                            l4160 0DC4  
                          l4144 0D84                            l4136 0D60                            l4128 0D3C  
                          l4080 0BDE                            l4056 0B54                            l4048 0B28  
                          l4072 0BBA                            l3186 18EA                            l3178 18AA  
                          l3194 191A                            l3098 1B60                            l3610 1320  
                          l3602 1300                            l3530 10C0                            l3522 107C  
                          l3514 104A                            l3506 100C                            l3354 1CC8  
                          l3346 1CA2                            l3338 1C6E                            l3426 1770  
                          l3418 173E                            l3442 1FF6                            l3434 1FCE  
                          l3450 1EAE                            l3290 1D92                            l3282 1D8A  
                          l3362 220E                            l3370 2106                            l3274 2092  
                          l3266 2070                            l4162 0DD0                            l4154 0DA8  
                          l4146 0D96                            l4138 0D62                            l4090 0C12  
                          l4082 0BE2                            l4074 0BC2                            l4066 0B9E  
                          l4058 0B64                            l2900 1D14                            l3196 1970  
                          l3188 18FA                            l3700 1536                            l3620 1354  
                          l3604 1310                            l3612 1336                            l3540 110C  
                          l3532 10C6                            l3524 108C                            l3516 1060  
                          l3508 101E                            l3356 1CCA                            l3348 1CA4  
                          l3380 21AC                            l3428 1786                            l3436 1FD6  
                          l3460 1EE4                            l3452 1EB6                            l3444 1EA4  
                          l3292 1D94                            l3284 1D8C                            l3276 1D6E  
                          l3364 2210                            l3372 2122                            l3268 2074  
                          l4164 0DE0                            l4172 0E04                            l4156 0DB8  
                          l4180 0E68                            l4092 0C1E                            l4084 0BEA  
                          l4076 0BC6                            l4068 0BB0                            l2910 1D30  
                          l2902 1D24                            l3198 1976                            l3702 1546  
                          l3710 156C                            l3630 1380                            l3622 135C  
                          l3614 133E                            l3606 1312                            l3550 1156  
                          l3542 1118                            l3534 10D6                            l3526 1098  
                          l3518 1066                            l3470 0F50                            l3358 1CEA  
                          l3374 219C                            l3390 1688                            l3438 1FDA  
                          l3462 1EEC                            l3454 1EC6                            l3446 1EA6  
                          l3366 21B4                            l3294 1D96                            l3286 1D8E  
                          l3278 1D72                            l3382 1DE0                            l4190 0E88  
                          l4182 0E78                            l4174 0E48                            l4166 0DEC  
                          l4158 0DBC                            l4094 0C2A                            l4086 0BFA  
                          l4078 0BCE                            l2920 1D48                            l2912 1D32  
                          l2904 1D2C                            l3712 1574                            l3704 1548  
                          l3640 13AE                            l3632 1382                            l3624 1362  
                          l3616 1346                            l3608 131E                            l3552 116A  
                          l3560 11B4                            l3544 111A                            l3536 10E6  
                          l3528 10AE                            l3480 0F74                            l3472 0F52  
                          l3464 0F32                            l3376 21A8                            l3392 168C  
                          l3456 1ED6                            l3448 1EAC                            l3720 2002  
                          l3368 21B8                            l3296 1D98                            l3288 1D90  
                          l3384 1E3E                            l4192 0EA2                            l4184 0E7C  
                          l4176 0E62                            l4168 0DF8                            l4088 0C06  
                          l3800 03C2                            l2922 1D4A                            l2914 1D44  
                          l3706 1554                            l3650 13EA                            l3642 13B2  
                          l3626 1372                            l2930 197E                            l3618 134E  
                          l3570 1200                            l3554 117C                            l3538 10F8  
                          l3546 1134                            l3490 0FA8                            l3482 0F86  
                          l3466 0F42                            l3378 21AA                            l3394 16A4  
                          l3458 1EE2                            l3722 2012                            l3714 1FFA  
                          l3298 1D9A                            l4186 0E80                            l4178 0E64  
                          l4098 0C36                            l3810 0408                            l3802 03DA  
                          l2924 1D5A                            l3708 1556                            l3660 1428  
                          l3652 13F6                            l3644 13BE                            l3636 13A2  
                          l3628 1374                            l2940 19A6                            l2932 1986  
                          l3580 1254                            l3572 1210                            l3564 11C8  
                          l3556 118E                            l3548 1144                            l3492 0FB4  
                          l3484 0F92                            l3476 0F72                            l3468 0F44  
                          l3396 16B4                            l3388 1686                            l3724 2016  
                          l4188 0E86                            l3900 0678                            l3820 045A  
                          l3812 041E                            l3804 03E2                            l2926 1D5C  
                          l3670 1470                            l3662 1438                            l3654 140C  
                          l3646 13C2                            l3638 13AA                            l2950 19CE  
                          l2942 19AE                            l2934 198E                            l3590 1298  
                          l3582 1264                            l3566 11D0                            l3574 121E  
                          l3558 119E                            l3494 0FB8                            l3486 0FA0  
                          l3478 0F74                            l3398 16C0                            l2870 2142  
                          l4198 0EA8                            l3902 0684                            l3830 0480  
                          l3822 045C                            l3814 0434                            l3806 03E4  
                          l3750 0312                            l2872 21CC                            l2880 203C  
                          l3680 14B6                            l3672 1474                            l3664 1448  
                          l3656 1412                            l3648 13DA                            l2944 19B6  
                          l2936 1996                            l2928 197A                            l3584 1276  
                          l3576 1230                            l3568 11F2                            l3496 0FD0  
                          l3488 0FA4                            l3592 12A6                            l3920 071C  
                          l3904 0694                            l3912 06B8                            l3840 04C8  
                          l3832 0490                            l3824 045E                            l3816 043C  
                          l3808 0400                            l3760 0324                            l3752 0316  
                          l3744 0306                            l2890 20EC                            l2882 204C  
                          l2874 2034                            l3690 14EE                            l3682 14B8  
                          l3674 1486                            l3666 1454                            l3658 1416  
                          l2946 19BE                            l2938 199E                            l2954 19D6  
                          l3594 12B8                            l3586 1288                            l3578 1242  
                          l3498 0FE0                            l2866 212C                            l2970 2250  
                          l3930 0756                            l3922 071E                            l3906 06A0  
                          l3914 06FA                            l3850 0502                            l3842 04CE  
                          l3834 04A0                            l3826 047A                            l3818 043E  
                          l3770 033C                            l3762 0326                            l3754 031A  
                          l3746 0308                            l2892 1CF0                            l2884 2050  
                          l3684 14C4                            l3676 1496                            l3668 146A  
                          l2948 19C6                            l2956 1A42                            l3596 12CC  
                          l3588 1290                            l2868 212C                            l2980 2200  
                          l2964 2254                            l2972 221A                            l3940 078C  
                          l3932 075A                            l3924 0722                            l3916 06FE  
                          l3908 06AC                            l3860 0582                            l3852 050E  
                          l3844 04DE                            l3836 04AC                            l3828 047C  
                          l3780 0368                            l3772 033E                            l3764 0336  
                          l3756 031E                            l3748 030C                            l2886 20DA  
                          l2990 2268                            l3686 14C6                            l3678 14A2  
                          l3694 1502                            l3598 12DE                            l2982 2204  
                          l2966 2258                            l2974 221E                            l3950 07EE  
                          l3942 0790                            l3934 075C                            l3926 0732  
                          l3918 0700                            l3870 059E                            l3862 0584  
                          l3846 04EA                            l3838 04AE                            l3790 0390  
                          l3782 036C                            l3774 0340                            l3766 0338  
                          l3758 0322                            l2888 20DE                            l2984 225C  
                          l3696 1514                            l3688 14E2                            l2992 157A  
                          l2976 21F8                            l2968 224C                            l3960 0854  
                          l3952 080A                            l3944 07A0                            l3936 0776  
                          l3928 0744                            l4680 06CC                            l3880 05EC  
                          l3872 05B8                            l3864 0588                            l3848 04F6  
                          l3856 051A                            l3792 03A0                            l3784 036E  
                          l3776 0342                            l3768 033A                            l2986 2260  
                          l2898 1CF6                            l3698 1526                            l4690 19EC  
                          l2994 157E                            l2978 21FC                            l4682 0C4A  
                          l3970 08AA                            l3962 086A                            l3954 081E  
                          l3946 07CC                            l3938 0778                            l3890 0638  
                          l3882 05F0                            l3874 05BA                            l3866 0598  
                          l3858 0566                            l3794 03A4                            l3786 038A  
                          l3778 0352                            l2988 2264                            l4692 183E  
                          l2996 158C                            l4684 0E18                            l3980 08FA  
                          l3972 08B8                            l3964 0878                            l3956 082A  
                          l3948 07D6                            l3892 064A                            l3884 0602  
                          l3876 05CE                            l3868 059C                            l3796 03A6  
                          l3788 038C                            l4694 192E                            l2998 159C  
                          l4686 0EBE                            l3990 0958                            l3982 090C  
                          l3974 08C6                            l3966 088E                            l3958 083A  
                          l3894 0656                            l3886 0614                            l3878 05EA  
                          l4678 052E                            l3798 03C0                            l4688 0F18  
                          l3992 0966                            l3984 0918                            l3976 08CE  
                          l3968 089A                            l3896 0658                            l3888 0626  
                          l3994 097C                            l3986 0928                            l3978 08DE  
                          l3898 0672                            l3996 0988                            l3988 0942  
                          l3998 0998                            u2010 16D6                            u2011 16D2  
                          u2100 101E                            u2020 16F2                            u2101 101A  
                          u2005 1C86                            u2021 16EE                            u2110 1060  
                          u2030 1734                            u2111 105C                            u2031 1730  
                          u2200 1168                            u2120 107C                            u2040 1750  
                          u3000 0CC6                            u2201 1164                            u2121 1078  
                          u2041 174C                            u3001 0CC2                            u2210 117C  
                          u2130 10AE                            u2050 1FCE                            u3010 0D80  
                          u2211 1178                            u2131 10AA                            u2051 1FCA  
                          u3011 0D7C                            u2300 1288                            u2220 118E  
                          u2140 10C0                            u2060 1EC6                            u3020 0DB8  
                          u2301 1284                            u2221 118A                            u2141 10BC  
                          u2061 1EC2                            u3021 0DB4                            u2310 12B8  
                          u2230 11C4                            u2150 10E6                            u2070 0F42  
                          u3030 0E78                            u2311 12B4                            u2231 11C0  
                          u2151 10E2                            u2071 0F3E                            u3031 0E74  
                          u2400 146A                            u2320 12CA                            u2240 11EA  
                          u2160 10F8                            u2080 0F86                            u2401 1466  
                          u2321 12C6                            u2241 11E4                            u2161 10F4  
                          u2081 0F82                            u2410 1486                            u2330 12DE  
                          u2250 11EC                            u2170 110A                            u2090 1002  
                          u2411 1482                            u2331 12DA                            u2171 1106  
                          u2091 0FFE                            u2420 14B6                            u2340 12EE  
                          u2260 1230                            u2180 1144                            u2421 14B2  
                          u2341 12EA                            u2261 122C                            u2181 1140  
                          u1710 1D24                            u2430 14FE                            u2350 1300  
                          u2270 1242                            u2190 1156                            u1711 1D20  
                          u2431 14FA                            u2351 12FC                            u2271 123E  
                          u2191 1152                            u1720 1D42                            u1704 1D08  
                          u2440 1512                            u2360 1310                            u2280 1254  
                          u1800 1664                            u2600 0614                            u1721 1D3E  
                          u1705 1D04                            u2441 150E                            u2361 130C  
                          u2281 1250                            u1801 1660                            u2601 0610  
                          u1730 1D5A                            u2450 1526                            u2370 1372  
                          u1810 1A58                            u2290 1276                            u1650 2142  
                          u2610 0626                            u2530 03A0                            u1731 1D56  
                          u2451 1522                            u2371 136E                            u1811 1A54  
                          u2291 1272                            u1651 213E                            u3307 07E0  
                          u2611 0622                            u2531 039C                            u1740 1D6C  
                          u2460 1536                            u2380 140C                            u1820 1A72  
                          u1900 1B6E                            u1660 2150                            u2700 080A  
                          u2620 0638                            u2540 041E                            u1741 1D68  
                          u2461 1532                            u2381 1408                            u1821 1A6E  
                          u1901 1B6A                            u1661 214C                            u3317 0844  
                          u2701 0806                            u2621 0634                            u2541 041A  
                          u1670 21DE                            u2470 1546                            u2390 1428  
                          u1830 1A98                            u1910 1B84                            u1750 158C  
                          u2710 081E                            u2630 064A                            u2550 0434  
                          u1671 21DA                            u2471 1542                            u2391 1424  
                          u1831 1A94                            u1911 1B80                            u3407 0FC2  
                          u1751 1588                            u3327 085E                            u2711 081A  
                          u2631 0646                            u2551 0430                            u1680 206C  
                          u1840 1AB6                            u1920 1BA8                            u1760 15AE  
                          u2480 2032                            u2800 097C                            u2720 0878  
                          u2640 0732                            u2560 0490                            u1681 2068  
                          u1841 1AB2                            u1921 1BA4                            u3417 1024  
                          u1761 15AA                            u2481 202E                            u2801 0978  
                          u3337 0932                            u2721 0874                            u2641 072E  
                          u2561 048C                            u1690 2104                            u1850 1AD2  
                          u1930 1C30                            u1770 15E8                            u2810 09A6  
                          u2730 088E                            u2650 0744                            u2570 04A0  
                          _PEN2 007B5A                            u1691 2100                            u3507 142E  
                          u1851 1ACE                            u1931 1C2C                            u3427 1124  
                          u1771 15E4                            u2811 09A2                            u3347 094C  
                          u2731 088A                            u2651 0740                            u2571 049C  
                          u1860 1AF8                            u1940 1C40                            u1780 160A  
                          u2900 0A80                            u2820 09B4                            u2740 08B8  
                          u2660 0756                            u2580 0598                            u3517 14D0  
                          u1861 1AF4                            u1941 1C3C                            u3437 11A8  
                          u1781 1606                            u3357 0D52                            u2901 0A7C  
                          u2821 09B0                            u2741 08B4                            u2661 0752  
                          u2581 0594                            u1950 1FA6                            u1870 1B1C  
                          u1790 1632                            u2910 0AB0                            u2830 09DA  
                          u2750 08C6                            u2670 07BE                            u2590 0602  
                          u1951 1FA2                            u3527 1560                            u1871 1B18  
                          u3447 11F8                            u3367 1696                            u1791 162E  
                          u2911 0AAC                            u2831 09D6                            u2751 08C2  
                          u2671 07BA                            u2591 05FE                            u1960 2186  
                          u1880 1B36                            u2920 0AC6                            u2840 09E8  
                          u2760 08EC                            u2680 07CC                            u3537 20E4  
                          u1961 2182                            u1881 1B32                            u3457 1216  
                          u3377 16F8                            u2921 0AC2                            u2841 09E4  
                          u2761 08E8                            u2681 07C8                            u3297 035C  
                          u1970 1E9A                            u1890 1B50                            u2930 0AD6  
                          u2850 09FE                            u2770 08FA                            u2690 07FC  
                          u1971 1E96                            u1891 1B4C                            u3467 129E  
                          u3387 177A                            u2931 0AD2                            u2851 09FA  
                          u2771 08F6                            u2691 07F8                            u1980 2092  
                          u2940 0B10                            u2860 0A18                            u2780 090C  
                          u3477 132A                            u3397 0F5C                            u1981 208E  
                          u2941 0B0C                            u2861 0A14                            u2781 0908  
                          u1990 1DDC                            u2950 0B20                            u2870 0A26  
                          u2790 0966                            u3487 138C                            u1991 1DD8  
                          u2951 0B1C                            u2871 0A22                            u2791 0962  
                          u2960 0B64                            u2880 0A3C                            u3497 13CC  
                          u2961 0B60                            u2881 0A38                            u2970 0B9A  
                          u2890 0A56                            u2971 0B96                            u2891 0A52  
                          u2980 0BDE                            u2981 0BDA                            u2990 0CB6  
                          u2991 0CB2                            _SEN2 007B58                            _TMR1 000FCE  
                          _Busy 002D                            _Stop 002F                            _data 002B  
__end_of_AD_capture_BattVoltage 1FBE                            _main 0306                            _init 1D6E  
                          _temp 0001                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9              _MotorPosition_Init 1686  
                          btemp 0059                            start 0302                 __end_of_Get7Seg 1A46  
               __end_of_Clr_RG3 226C     __end_of_Homing_Again_Manual 1354                    ___param_bank 000000  
                  high_isr@Temp 0035             ?_MotorPosition_Init 0032                 __end_of_Read_IR 219C  
               __end_of_Set_RG3 2264                  ??_InitSTLED316 003E                 __end_of_MotorON 223A  
                  _BAUDCON1bits 000F7E                 __end_of___aldiv 1686                           ?_main 0032  
                         ?_init 0032                 __end_of___awdiv 1B0A                           _ADRES 000FC3  
               __end_of___awmod 1BBA                 ___awdiv@divisor 003A                           _T1CON 000FCD  
                         _T4CON 000F76                           _RCEN2 007B5B                           i2l300 014E  
                         i2l303 018E                           i2l318 02F6                           i2l433 20D8  
                         i2l601 2176                           i2l284 01C6                           i2l293 0130  
                         i2l295 0100                           i2l297 012A                           i2l593 21E6  
                         i2l596 21F4                           i2l599 2170                 ___awdiv@counter 003C  
                         _RSEN2 007B59                           _ETemp 001D                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TRISF 000F97                           _TRISG 000F98  
           __end_of_i2c_Address 220A            ??_MotorPosition_Init 0041                           _flush 1FFA  
                    _Read1USART 2152                _TMR1IF_triggered 0025                           tablat 000FF5  
      ??_STLED316s_SPI_SendData 0038             __end_of_i2c_Restart 224C                           ttemp5 005A  
                         ttemp6 005D                           ttemp7 0061                           status 000FD8  
                         wtemp8 005A                   i2_Write1USART 21E0           _WriteSTLED316SVibMode 1EA2  
               __initialization 1F3A                      _InitTimer1 219C                    __end_of_main 0F32  
                  __end_of_init 1DE0                __end_of_i2c_Init 21CA                __end_of_i2c_Read 20A4  
              __end_of_i2c_Wait 2152                __end_of_i2c_Stop 2254                          ??_main 004C  
                        ??_init 0038                   __activetblptr 000002                          _ACKEN2 007B5C  
                        _ACKDT2 007B5D                          ?_flush 0032                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR2L 000FB7                ___awdiv@dividend 0038  
                     ??_Get7Seg 003A                          i2l4302 0136                          i2l4310 0164  
                        i2l4320 017C                          i2l4312 0170                          i2l4304 013C  
                        i2l4322 017E                          i2l4306 013E                          i2l4330 01BE  
                        i2l4340 0208                          i2l4324 0190                          i2l4308 0150  
                        i2l4260 0038                          i2l4350 026E                          i2l4342 021C  
                        i2l4334 01D4                          i2l4326 01A4                          i2l4318 0176  
                        i2l4262 0048                          i2l4270 007C                          i2l4254 0012  
                        i2l4360 0292                          i2l4352 0272                          i2l4344 022C  
                        i2l4328 01B6                          i2l4280 00DE                          i2l4272 008C  
                        i2l4336 01DA                          i2l4264 0058                          i2l4256 0020  
                        i2l3730 2174                          i2l4370 02DE                          i2l4362 02A0  
                        i2l4346 024A                          i2l4338 01EA                          i2l4354 0276  
                        i2l4290 0106                          i2l4282 00EE                          i2l4274 009C  
                        i2l4266 0064                          i2l4258 0026                          i2l3740 20D6  
                        i2l4372 02EC                          i2l4364 02B2                          i2l4356 0284  
                        i2l4348 025E                          i2l4292 0118                          i2l4284 0102  
                        i2l4276 00B2                          i2l4268 0074                          i2l3734 20A4  
                        i2l3726 2152                          i2l3742 21E2                          i2l4374 02F4  
                        i2l4366 02C0                          i2l4358 028C                          i2l4294 011A  
                        i2l4278 00C4                          i2l3736 20BA                          i2l3728 2160  
                        i2l4368 02CC                          i2l4296 0132                          i2l3738 20C0  
                        _RCREG1 000FAF                       ??_Clr_RG3 0038                          _SPBRG1 000FB0  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                          _TRISD5 007CAD  
                        _TRISD6 007CAE                  ?i2_Write1USART 0032                          _TXREG1 000FAE  
                    _MotorBREAK 223A                       ??_Read_IR 003A                       ??_Set_RG3 0038  
               read_i2c@address 0046                          _OpMode 002A                       ??_MotorON 0038  
              __end_of_high_isr 0302                       ??___aldiv 0040                       ??___awdiv 003C  
                     ??___awmod 003C                  _PWM_Duty_Cycle 0026                __end_of_flushOut 206E  
              __end_of_read_i2c 1E48                     _i2c_Address 21F6                          clear_0 1F60  
                        clear_1 1F6C                ___awdiv@quotient 003E                 ___awmod@divisor 003A  
                        isa$std 000001                 ___awmod@counter 003C                Read1USART@result 0032  
    __end_of_WriteSTLED316SData 1C62      __end_of_WriteSTLED316SMode 1892                          flush@i 0038  
                 i2c_Write@data 0039                    __pdataCOMRAM 004E                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     _i2c_Restart 2244  
                   ?_Read1USART 0032            __end_of_InitSTLED316 1CEE                      __accesstop 0060  
                    _i_RUN_ZERO 0011         __end_of__initialization 1F72             _Low_Power_Indicator 20A4  
             _WriteSTLED316SErr 1892                   ___rparam_used 000001          ?_WriteSTLED316SVibMode 0032  
            ?_WriteSTLED316SErr 0032                  __pcstackCOMRAM 0032                     ?_InitTimer1 0032  
                 __end_of_flush 2034               __end_of_i2c_Start 225C             ??_WriteSTLED316SErr 003E  
             __end_of_i2c_Write 2224            ?_Low_Power_Indicator 0032                         ??_flush 0038  
                     ?_i2c_Init 0032                       ?_i2c_Read 0039                      __pbssBANK0 0060  
                     ?_i2c_Wait 0032                 ??i2_Write1USART 0032                       ?_i2c_Stop 0032  
     __end_of_WriteSTLED316SErr 197A                   ??_Write1USART 0038                     ?_MotorBREAK 0032  
                       _CCP4CON 000F73           ??_Low_Power_Indicator 0032          _STLED316s_SPI_SendData 1CEE  
              _readWeighingData 1E48              i2c_Address@address 003A                         _SPBRGH1 000F7F  
                       _SSP2ADD 000F6E                         _SSP2BUF 000F6F                         _NUM_REC 000F  
                       _VOLTAGE 0009                       ?_high_isr 0032                      ??_i2c_Init 0038  
                    ??_i2c_Read 003B                         _PWM_reg 0058                      ??_i2c_Wait 0038  
                       _Get7Seg 197A     WriteSTLED316SVibMode@v_mode 003E                      ??_i2c_Stop 0039  
                       _Clr_RG3 2264               __end_of_delay_1ms 2106               i2Write1USART@data 0032  
                     ?_flushOut 0032                       ?_read_i2c 0046                     _Serial_Flag 0031  
                       _Read_IR 2178           WriteSTLED316SMode@msg 0040                         _Set_RG3 225C  
                       __Hparam 0000                         __Lparam 0000                         _MotorON 2230  
           __end_of_Write1USART 21E0      WriteSTLED316SData@NUM_DIG0 0043      WriteSTLED316SData@NUM_DIG1 0045  
                       ___aldiv 157A                     _Motor_Speed 001B                         ___awdiv 1A46  
                       ___awmod 1B0A                    Get7Seg@Digit 0038                         __pcinit 1F3A  
                       __ramtop 1000               __end_of_initUSART 212C                         __ptext0 0306  
                       __ptext1 1DE0                         __ptext2 2244                         __ptext3 206E  
                       __ptext4 2106                         __ptext5 220A                         __ptext6 1D6E  
                       __ptext7 21B4                         __ptext8 1FFA                         __ptext9 1EA2  
             __end_of_initMotor 2218                       _T3CONbits 000F79                ___awmod@dividend 0038  
              ___aldiv@dividend 0038                       _T4CONbits 000F76                   delay_1ms@time 0038  
                    _pause_Time 0029                       _EAdd_High 0021                      ??_high_isr 0033  
          end_of_initialization 1F72            i2c_Address@l_address 003B                      ??_flushOut 0038  
                    ??_read_i2c 004A                   __Lmediumconst 0000         WriteSTLED316SData@data3 0047  
       WriteSTLED316SData@data4 0048                ___aldiv@quotient 0042                         postdec1 000FE5  
                       postinc0 000FEE                    ?_i2c_Address 0039                    _InitSTLED316 1C62  
                     _PORTAbits 000F80                       _PORTBbits 000F81               __end_of_write_i2c 1F3A  
                     _TRISCbits 000F94                    ?_i2c_Restart 0032        ??_AD_capture_BattVoltage 003B  
                  ??_Read1USART 0032              _WriteSTLED316SData 1BBA         ??_WriteSTLED316SVibMode 003E  
            _WriteSTLED316SMode 1792                     _Write1USART 21CA                     _CCP2CONbits 000FB6  
           ?_WriteSTLED316SData 0040             ?_WriteSTLED316SMode 0032                    ??_InitTimer1 0038  
                _ToggleVIB_Mode 1FBE                       _Device_ID 0017                     _Vmotor_Time 0056  
                 __pidataCOMRAM 2224              __end_of_Read1USART 2178                   _Serial_Buffer 0080  
                     _i2c_Start 2254                       _i2c_Write 2218            ??_WriteSTLED316SData 0043  
           start_initialization 1F3A            ??_WriteSTLED316SMode 003E              __end_of_InitTimer1 21B4  
               _LowPowerCounter 004E        __end_of_readWeighingData 1EA2                    ??_MotorBREAK 0038  
        __end_of_ToggleVIB_Mode 1FFA         ?_STLED316s_SPI_SendData 0032                      ?_i2c_Start 0032  
                    ?_i2c_Write 0032                     __pbssCOMRAM 0001              __end_of_MotorBREAK 2244  
                      ?_Get7Seg 0038             _Homing_Again_Manual 0F32                        ?_Clr_RG3 0032  
         __end_ofi2_Write1USART 21F6                        ?_Read_IR 0038                       _delay_1ms 20DA  
             _Homing_Again_Auto 1354                        ?_Set_RG3 0032                 ?_ToggleVIB_Mode 0032  
                      ?_MotorON 0032  __end_of_STLED316s_SPI_SendData 1D6E     __end_of_Low_Power_Indicator 20DA  
            ?_Homing_Again_Auto 0032                       __pintcode 0008                        ?___aldiv 0038  
                      ?___awdiv 0038                        ?___awmod 0038            ?_Homing_Again_Manual 0032  
                  _errorcounter 0052             ??_Homing_Again_Auto 0041            WriteSTLED316SErr@msg 0040  
                     _initUSART 2106                       _initMotor 220A                     Get7Seg@Data 003C  
               Write1USART@data 0038                 ___aldiv@divisor 003C                 ___aldiv@counter 0040  
     __end_of_Homing_Again_Auto 157A                        _LATAbits 000F89                        _EAdd_Low 001F  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATGbits 000F8F  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                      ?_delay_1ms 0038  
             readWeighingData@i 003A                        i2u310_40 00C4                        i2u310_41 00C0  
                      i2u311_40 00DE                        i2u311_41 00DA                        i2u320_40 01EA  
                      i2u312_40 00EE                        i2u304_40 0020                        i2u320_41 01E6  
                      i2u312_41 00EA                        i2u304_41 001C                        i2u321_40 0208  
                      i2u313_40 0100                        i2u305_40 0038                        i2u321_41 0204  
                      i2u313_41 00FC                        i2u305_41 0034                        i2u250_40 20BA  
                      i2u322_40 024A                        i2u314_40 012A                        i2u306_40 0048  
                      i2u250_41 20B6                        i2u322_41 0246                        i2u314_41 0126  
                      i2u306_41 0044                        i2u251_40 20D6                        i2u323_40 0284  
                      i2u315_40 014E                        i2u307_40 0058                        i2u251_41 20D2  
                      i2u323_41 0280                        i2u315_41 014A                        i2u307_41 0054  
                      i2u252_40 21F4                        i2u324_40 02A0                        i2u316_40 018E  
                      i2u308_40 008C                        i2u252_41 21F0                        i2u324_41 029C  
                      i2u316_41 018A                        i2u308_41 0088                        i2u325_40 02B2  
                      i2u317_40 01A4                        i2u309_40 00B2                        i2u325_41 02AE  
                      i2u317_41 01A0                        i2u309_41 00AE                        i2u326_40 02C0  
                      i2u318_40 01B6                        i2u326_41 02BC                        i2u318_41 01B2  
                      i2u327_40 02DE                        i2u319_40 01D4                        i2u327_41 02DA  
                      i2u319_41 01D0                        i2u328_40 02EC                        i2u328_41 02E8  
                      i2u249_40 2160                        i2u249_41 215C                        _PIR1bits 000F9E  
                      _RCONbits 000FD0          _AD_capture_BattVoltage 1F80                        _SSP2CON1 000F6C  
                      _SSP2CON2 000F6B                        _SSP2STAT 000F6D           ??_Homing_Again_Manual 0049  
                     _pwm_count 0007                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                     high_isr@c 0036                       high_isr@i 0037                     ??_i2c_Start 0039  
                   ??_i2c_Write 0039      __end_of_MotorPosition_Init 1792                      ?_initUSART 0032  
         _delay_motor_stop_time 0027                      ?_initMotor 0032                    _Serial_GData 0030  
                     _write_i2c 1EF0                     _INTCON3bits 000FF0                       copy_data0 1F4E  
        InitSTLED316@Brightness 0040                    _Serial_Count 0023                        _i2c_Init 21B4  
                      _i2c_Read 206E                        _i2c_Wait 212C                        _i2c_Stop 224C  
                  ?_Write1USART 0032   __end_of_WriteSTLED316SVibMode 1EF0                       flushOut@i 0038  
                    _ANCON0bits 000FC1                        __Hrparam 0000                        __Lrparam 0000  
                _vibration_mode 002C                        __ptext10 1FBE                        __ptext11 1EF0  
                      __ptext20 1C62                        __ptext12 2218                        __ptext21 0F32  
                      __ptext13 224C                        __ptext30 1792                        __ptext22 1BBA  
                      __ptext14 2254                        __ptext31 1892                        __ptext23 1B0A  
                      __ptext15 21F6                        __ptext32 1CEE                        __ptext24 1A46  
                      __ptext16 212C                        __ptext41 21E0                        __ptext33 2178  
                      __ptext25 197A                        __ptext17 157A                        __ptext42 2152  
                      __ptext34 2230                        __ptext26 1354                        __ptext18 1686  
                      __ptext43 20A4                        __ptext35 225C                        __ptext27 1E48  
                      __ptext19 219C                        __ptext36 223A                        __ptext28 2034  
                      __ptext37 2264                        __ptext29 21CA                        __ptext38 1F80  
                      __ptext39 20DA                      ?_write_i2c 0046                write_i2c@address 0046  
                      _high_isr 0008                        _dispense 0003               read_i2c@read_byte 004A  
                      _flushOut 2034                        _read_i2c 1DE0               ?_readWeighingData 0032  
                   ??_delay_1ms 003A              ??_readWeighingData 003A                        _vib_Time 0028  
         _Motor_Stop_Delay_Time 0019                        isa$xinst 000000                        int$flags 0059  
                      _pwm_mode 0005               _Serial_Buffer_Out 0060      STLED316s_SPI_SendData@Data 003A  
                    _INTCONbits 000FF2                     ??_initUSART 0038      STLED316s_SPI_SendData@temp 003B  
                   ??_initMotor 0038                        intlevel2 0000                    _motor_status 002E  
              ??_ToggleVIB_Mode 004C                 i2c_Address@mode 0039                      _RCSTA1bits 000FAC  
                    _OSCCONbits 000FD3        WriteSTLED316SData@v_mode 0042        WriteSTLED316SData@number 0040  
                    _IR_SENSORF 000B                _Motor_Pause_Time 0015              _Serial_Temp_Buffer 0070  
       STLED316s_SPI_SendData@i 003C         STLED316s_SPI_SendData@t 003D                    ___aldiv@sign 0041  
                    _WDTCONbits 000FC0                     ??_write_i2c 004C             i2c_Read@i2cReadData 003C  
                 write_i2c@data 004A         ?_AD_capture_BattVoltage 0032  
