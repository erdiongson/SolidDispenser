

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 06 16:23:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F65J50 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataCOMRAM
   100   0024D8                     __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _LowPowerCounter
   104   0024D8  0014               	dw	20
   105   0024DA  0000               	dw	0
   106                           
   107                           ;initializer for _errorcounter
   108   0024DC  001E               	dw	30
   109   0024DE  0000               	dw	0
   110                           
   111                           ;initializer for _Vmotor_Time
   112   0024E0  07D0               	dw	2000
   113                           
   114                           ;initializer for _PWM_reg
   115   0024E2  3F                 	db	63
   116   000000                     _RCREG1	set	4015
   117   000000                     _TXREG1	set	4014
   118   000000                     _SPBRGH1	set	3967
   119   000000                     _SPBRG1	set	4016
   120   000000                     _TXSTA1bits	set	4013
   121   000000                     _SSP2STAT	set	3949
   122   000000                     _SSP2ADD	set	3950
   123   000000                     _ADRESL	set	4035
   124   000000                     _ADRESH	set	4036
   125   000000                     _ADRES	set	4035
   126   000000                     _T4CONbits	set	3958
   127   000000                     _ANCON0bits	set	4033
   128   000000                     _TRISD	set	3989
   129   000000                     _TRISC	set	3988
   130   000000                     _TRISB	set	3987
   131   000000                     _PIE1bits	set	3997
   132   000000                     _INTCONbits	set	4082
   133   000000                     _ACKEN2	set	31580
   134   000000                     _ACKDT2	set	31581
   135   000000                     _RCEN2	set	31579
   136   000000                     _PEN2	set	31578
   137   000000                     _RSEN2	set	31577
   138   000000                     _SEN2	set	31576
   139   000000                     _TRISD6	set	31918
   140   000000                     _TMR1IF	set	31984
   141   000000                     _SSP2CON2	set	3947
   142   000000                     _SSP2CON1	set	3948
   143   000000                     _PORTAbits	set	3968
   144   000000                     _PORTBbits	set	3969
   145   000000                     _LATAbits	set	3977
   146   000000                     _LATCbits	set	3979
   147   000000                     _TRISBbits	set	3987
   148   000000                     _TRISCbits	set	3988
   149   000000                     _CCP1CONbits	set	4027
   150   000000                     _WDTCONbits	set	4032
   151   000000                     _ADCON1bits	set	4033
   152   000000                     _ADCON0bits	set	4034
   153   000000                     _T2CONbits	set	4042
   154   000000                     _OSCCONbits	set	4051
   155   000000                     _CCPR1L	set	4028
   156   000000                     _GIE	set	32663
   157   000000                     _INTCON3bits	set	4080
   158   000000                     _TRISG	set	3992
   159   000000                     _TRISF	set	3991
   160   000000                     _TRISE	set	3990
   161   000000                     _PIR1bits	set	3998
   162   000000                     _IPR1bits	set	3999
   163   000000                     _TRISD5	set	31917
   164   000000                     _TMR1IE	set	31976
   165   000000                     _TMR1	set	4046
   166   000000                     _T1CON	set	4045
   167   000000                     _RCONbits	set	4048
   168   000000                     _PR2	set	4043
   169   000000                     _LATGbits	set	3983
   170   000000                     _TRISA	set	3986
   171   000000                     _LATDbits	set	3980
   172   000000                     _RCSTA1bits	set	4012
   173   000000                     _CCP4CON	set	3955
   174   000000                     _T4CON	set	3958
   175   000000                     _PR4	set	3959
   176   000000                     _BAUDCON1bits	set	3966
   177   000000                     _SSP2BUF	set	3951
   178   000000                     _T3CONbits	set	3961
   179                           
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   0021BE                     __pcinit:
   184                           	callstack 0
   185   0021BE                     start_initialization:
   186                           	callstack 0
   187   0021BE                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Initialize objects allocated to COMRAM (11 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192   0021BE  0ED8               	movlw	low __pidataCOMRAM
   193   0021C0  6EF6               	movwf	tblptrl,c
   194   0021C2  0E24               	movlw	high __pidataCOMRAM
   195   0021C4  6EF7               	movwf	tblptrh,c
   196   0021C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197   0021C8  6EF8               	movwf	tblptru,c
   198   0021CA  EE00  F04E         	lfsr	0,__pdataCOMRAM
   199   0021CE  EE10 F00B          	lfsr	1,11
   200   0021D2                     copy_data0:
   201   0021D2  0009               	tblrd		*+
   202   0021D4  CFF5 FFEE          	movff	tablat,postinc0
   203   0021D8  50E5               	movf	postdec1,w,c
   204   0021DA  50E1               	movf	fsr1l,w,c
   205   0021DC  E1FA               	bnz	copy_data0
   206                           
   207                           ; Clear objects allocated to BANK0 (50 bytes)
   208   0021DE  EE00  F060         	lfsr	0,__pbssBANK0
   209   0021E2  0E32               	movlw	50
   210   0021E4                     clear_0:
   211   0021E4  6AEE               	clrf	postinc0,c
   212   0021E6  06E8               	decf	wreg,f,c
   213   0021E8  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to COMRAM (49 bytes)
   216   0021EA  EE00  F001         	lfsr	0,__pbssCOMRAM
   217   0021EE  0E31               	movlw	49
   218   0021F0                     clear_1:
   219   0021F0  6AEE               	clrf	postinc0,c
   220   0021F2  06E8               	decf	wreg,f,c
   221   0021F4  E1FD               	bnz	clear_1
   222   0021F6                     end_of_initialization:
   223                           	callstack 0
   224   0021F6                     __end_of__initialization:
   225                           	callstack 0
   226   0021F6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   227   0021F8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   228   0021FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   229   0021FC  6EF8               	movwf	tblptru,c
   230   0021FE  0100               	movlb	0
   231   002200  EF83  F001         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234   000001                     __pbssCOMRAM:
   235                           	callstack 0
   236   000001                     _dispense:
   237                           	callstack 0
   238   000001                     	ds	2
   239   000003                     _pwm_count:
   240                           	callstack 0
   241   000003                     	ds	2
   242   000005                     _duty_cycle:
   243                           	callstack 0
   244   000005                     	ds	2
   245   000007                     _dutyCycle_reg:
   246                           	callstack 0
   247   000007                     	ds	2
   248   000009                     _VOLTAGE:
   249                           	callstack 0
   250   000009                     	ds	2
   251   00000B                     _IR_SENSORF:
   252                           	callstack 0
   253   00000B                     	ds	2
   254   00000D                     _i:
   255                           	callstack 0
   256   00000D                     	ds	2
   257   00000F                     _NUM_REC:
   258                           	callstack 0
   259   00000F                     	ds	2
   260   000011                     _i_RUN_ZERO:
   261                           	callstack 0
   262   000011                     	ds	2
   263   000013                     _NUM:
   264                           	callstack 0
   265   000013                     	ds	2
   266   000015                     _Motor_Pause_Time:
   267                           	callstack 0
   268   000015                     	ds	2
   269   000017                     _Device_ID:
   270                           	callstack 0
   271   000017                     	ds	2
   272   000019                     _Motor_Stop_Delay_Time:
   273                           	callstack 0
   274   000019                     	ds	2
   275   00001B                     _Motor_Speed:
   276                           	callstack 0
   277   00001B                     	ds	2
   278   00001D                     _ETemp:
   279                           	callstack 0
   280   00001D                     	ds	2
   281   00001F                     _EAdd_Low:
   282                           	callstack 0
   283   00001F                     	ds	2
   284   000021                     _EAdd_High:
   285                           	callstack 0
   286   000021                     	ds	2
   287   000023                     _Serial_Count:
   288                           	callstack 0
   289   000023                     	ds	2
   290   000025                     _TMR1IF_triggered:
   291                           	callstack 0
   292   000025                     	ds	1
   293   000026                     _PWM_Duty_Cycle:
   294                           	callstack 0
   295   000026                     	ds	1
   296   000027                     _delay_motor_stop_time:
   297                           	callstack 0
   298   000027                     	ds	1
   299   000028                     _vib_Time:
   300                           	callstack 0
   301   000028                     	ds	1
   302   000029                     _pause_Time:
   303                           	callstack 0
   304   000029                     	ds	1
   305   00002A                     _OpMode:
   306                           	callstack 0
   307   00002A                     	ds	1
   308   00002B                     _data:
   309                           	callstack 0
   310   00002B                     	ds	1
   311   00002C                     _vibration_mode:
   312                           	callstack 0
   313   00002C                     	ds	1
   314   00002D                     _Busy:
   315                           	callstack 0
   316   00002D                     	ds	1
   317   00002E                     _motor_status:
   318                           	callstack 0
   319   00002E                     	ds	1
   320   00002F                     _Stop:
   321                           	callstack 0
   322   00002F                     	ds	1
   323   000030                     _Serial_GData:
   324                           	callstack 0
   325   000030                     	ds	1
   326   000031                     _Serial_Flag:
   327                           	callstack 0
   328   000031                     	ds	1
   329                           
   330                           	psect	dataCOMRAM
   331   00004E                     __pdataCOMRAM:
   332                           	callstack 0
   333   00004E                     _LowPowerCounter:
   334                           	callstack 0
   335   00004E                     	ds	4
   336   000052                     _errorcounter:
   337                           	callstack 0
   338   000052                     	ds	4
   339   000056                     _Vmotor_Time:
   340                           	callstack 0
   341   000056                     	ds	2
   342   000058                     _PWM_reg:
   343                           	callstack 0
   344   000058                     	ds	1
   345                           
   346                           	psect	bssBANK0
   347   000060                     __pbssBANK0:
   348                           	callstack 0
   349   000060                     _Serial_Buffer_Out:
   350                           	callstack 0
   351   000060                     	ds	16
   352   000070                     _Serial_Temp_Buffer:
   353                           	callstack 0
   354   000070                     	ds	16
   355   000080                     _Serial_Buffer:
   356                           	callstack 0
   357   000080                     	ds	16
   358   000090                     _pwm_mode:
   359                           	callstack 0
   360   000090                     	ds	2
   361                           
   362                           	psect	cstackBANK0
   363   000092                     __pcstackBANK0:
   364                           	callstack 0
   365   000092                     ??_PWM_Selection:
   366                           
   367                           ; 1 bytes @ 0x0
   368   000092                     	ds	2
   369   000094                     PWM_Selection@dcSelected:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x2
   373   000094                     	ds	2
   374   000096                     ??_main:
   375                           
   376                           ; 1 bytes @ 0x4
   377   000096                     	ds	2
   378                           
   379                           	psect	cstackCOMRAM
   380   000032                     __pcstackCOMRAM:
   381                           	callstack 0
   382   000032                     Read1USART@result:
   383                           	callstack 0
   384   000032                     i2Write1USART@data:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x0
   388   000032                     	ds	1
   389   000033                     ??_high_isr:
   390                           
   391                           ; 1 bytes @ 0x1
   392   000033                     	ds	2
   393   000035                     high_isr@Temp:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x3
   397   000035                     	ds	1
   398   000036                     high_isr@c:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x4
   402   000036                     	ds	1
   403   000037                     high_isr@i:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x5
   407   000037                     	ds	1
   408   000038                     ??_STLED316s_SPI_SendData:
   409   000038                     ??_i2c_Wait:
   410   000038                     ?_Read_IR:
   411                           	callstack 0
   412   000038                     ?___awdiv:
   413                           	callstack 0
   414   000038                     ?___awmod:
   415                           	callstack 0
   416   000038                     ?___aldiv:
   417                           	callstack 0
   418   000038                     Write1USART@data:
   419                           	callstack 0
   420   000038                     pwm_set@duty:
   421                           	callstack 0
   422   000038                     delay_1ms@time:
   423                           	callstack 0
   424   000038                     flush@i:
   425                           	callstack 0
   426   000038                     flushOut@i:
   427                           	callstack 0
   428   000038                     Get7Seg@Digit:
   429                           	callstack 0
   430   000038                     ___awdiv@dividend:
   431                           	callstack 0
   432   000038                     ___awmod@dividend:
   433                           	callstack 0
   434   000038                     ___aldiv@dividend:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x6
   438   000038                     	ds	1
   439   000039                     ?_i2c_Read:
   440                           	callstack 0
   441   000039                     i2c_Write@data:
   442                           	callstack 0
   443   000039                     i2c_Address@mode:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x7
   447   000039                     	ds	1
   448   00003A                     ??_pwm_set:
   449   00003A                     ??_delay_1ms:
   450   00003A                     ??_Get7Seg:
   451   00003A                     STLED316s_SPI_SendData@Data:
   452                           	callstack 0
   453   00003A                     i2c_Address@address:
   454                           	callstack 0
   455   00003A                     readWeighingData@i:
   456                           	callstack 0
   457   00003A                     ___awdiv@divisor:
   458                           	callstack 0
   459   00003A                     ___awmod@divisor:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x8
   463   00003A                     	ds	1
   464   00003B                     ??_AD_capture_BattVoltage:
   465   00003B                     STLED316s_SPI_SendData@temp:
   466                           	callstack 0
   467   00003B                     i2c_Address@l_address:
   468                           	callstack 0
   469   00003B                     i2c_Read@ack:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x9
   473   00003B                     	ds	1
   474   00003C                     STLED316s_SPI_SendData@i:
   475                           	callstack 0
   476   00003C                     Get7Seg@Data:
   477                           	callstack 0
   478   00003C                     i2c_Read@i2cReadData:
   479                           	callstack 0
   480   00003C                     ___awdiv@counter:
   481                           	callstack 0
   482   00003C                     ___awmod@counter:
   483                           	callstack 0
   484   00003C                     ___aldiv@divisor:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0xA
   488   00003C                     	ds	1
   489   00003D                     STLED316s_SPI_SendData@t:
   490                           	callstack 0
   491   00003D                     ___awdiv@sign:
   492                           	callstack 0
   493   00003D                     ___awmod@sign:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xB
   497   00003D                     	ds	1
   498   00003E                     ??_InitSTLED316:
   499   00003E                     ??_WriteSTLED316SErr:
   500   00003E                     ??_WriteSTLED316SMode:
   501   00003E                     WriteSTLED316SVibMode@v_mode:
   502                           	callstack 0
   503   00003E                     ___awdiv@quotient:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0xC
   507   00003E                     	ds	2
   508   000040                     InitSTLED316@Brightness:
   509                           	callstack 0
   510   000040                     WriteSTLED316SMode@msg:
   511                           	callstack 0
   512   000040                     WriteSTLED316SErr@msg:
   513                           	callstack 0
   514   000040                     ___aldiv@counter:
   515                           	callstack 0
   516   000040                     WriteSTLED316SData@number:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520   000040                     	ds	1
   521   000041                     ??_MotorPosition_Init:
   522   000041                     ??_Homing_Again_Auto:
   523   000041                     ___aldiv@sign:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0xF
   527   000041                     	ds	1
   528   000042                     WriteSTLED316SData@v_mode:
   529                           	callstack 0
   530   000042                     ___aldiv@quotient:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x10
   534   000042                     	ds	1
   535   000043                     WriteSTLED316SData@NUM_DIG0:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x11
   539   000043                     	ds	2
   540   000045                     WriteSTLED316SData@NUM_DIG1:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x13
   544   000045                     	ds	1
   545   000046                     ?_read_i2c:
   546                           	callstack 0
   547   000046                     write_i2c@address:
   548                           	callstack 0
   549   000046                     read_i2c@address:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x14
   553   000046                     	ds	1
   554   000047                     WriteSTLED316SData@data3:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x15
   558   000047                     	ds	1
   559   000048                     WriteSTLED316SData@data4:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x16
   563   000048                     	ds	1
   564   000049                     ??_Homing_Again_Manual:
   565                           
   566                           ; 1 bytes @ 0x17
   567   000049                     	ds	1
   568   00004A                     write_i2c@data:
   569                           	callstack 0
   570   00004A                     read_i2c@read_byte:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x18
   574   00004A                     	ds	2
   575   00004C                     ?_PWM_Selection:
   576                           	callstack 0
   577   00004C                     PWM_Selection@msg:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x1A
   581   00004C                     	ds	2
   582                           
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 171 in file "main.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;Total ram usage:        2 bytes
   607 ;; Hardware stack levels required when called: 6
   608 ;; This function calls:
   609 ;;		_AD_capture_BattVoltage
   610 ;;		_Homing_Again_Auto
   611 ;;		_Homing_Again_Manual
   612 ;;		_InitSTLED316
   613 ;;		_InitTimer1
   614 ;;		_MotorPosition_Init
   615 ;;		_PWM_Selection
   616 ;;		_ToggleVIB_Mode
   617 ;;		_Write1USART
   618 ;;		_WriteSTLED316SData
   619 ;;		_WriteSTLED316SVibMode
   620 ;;		_flush
   621 ;;		_flushOut
   622 ;;		_i2c_Init
   623 ;;		_init
   624 ;;		_initMotor
   625 ;;		_initUSART
   626 ;;		_pwm_set
   627 ;;		_read_i2c
   628 ;;		_write_i2c
   629 ;; This function is called by:
   630 ;;		Startup code after reset
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text0
   635   000306                     __ptext0:
   636                           	callstack 0
   637   000306                     _main:
   638                           	callstack 25
   639   000306                     
   640                           ;main.c: 172:     GIE = 0;
   641   000306  9EF2               	bcf	4082,7,c	;volatile
   642   000308                     
   643                           ;main.c: 173:     init();
   644   000308  ECF9  F00F         	call	_init	;wreg free
   645   00030C                     
   646                           ;main.c: 174:     InitSTLED316(0x77);
   647   00030C  0E77               	movlw	119
   648   00030E  EC73  F00F         	call	_InitSTLED316
   649   000312                     
   650                           ;main.c: 175:     initMotor();
   651   000312  EC5F  F012         	call	_initMotor	;wreg free
   652   000316                     
   653                           ;main.c: 176:     i2c_Init();
   654   000316  EC34  F012         	call	_i2c_Init	;wreg free
   655   00031A                     
   656                           ;main.c: 177:     initUSART();
   657   00031A  ECDD  F011         	call	_initUSART	;wreg free
   658   00031E                     
   659                           ;main.c: 178:     InitTimer1();
   660   00031E  EC28  F012         	call	_InitTimer1	;wreg free
   661   000322                     
   662                           ;main.c: 187:     OSCCONbits.IRCF0 = 0;
   663   000322  98D3               	bcf	211,4,c	;volatile
   664   000324                     
   665                           ;main.c: 188:     OSCCONbits.IRCF1 = 0;
   666   000324  9AD3               	bcf	211,5,c	;volatile
   667   000326                     
   668                           ;main.c: 189:     OSCCONbits.IRCF2 = 0;
   669   000326  9CD3               	bcf	211,6,c	;volatile
   670   000328                     
   671                           ;main.c: 190:     OSCCONbits.SCS0 = 0;
   672   000328  90D3               	bcf	211,0,c	;volatile
   673   00032A                     
   674                           ;main.c: 191:     OSCCONbits.SCS1 = 0;
   675   00032A  92D3               	bcf	211,1,c	;volatile
   676   00032C                     
   677                           ;main.c: 195:     TRISCbits.TRISC2 = 0;
   678   00032C  9494               	bcf	148,2,c	;volatile
   679   00032E                     
   680                           ;main.c: 199:     TRISBbits.TRISB4 = 1;
   681   00032E  8893               	bsf	147,4,c	;volatile
   682   000330                     
   683                           ;main.c: 202:     T2CONbits.T2OUTPS0 = 0;
   684   000330  96CA               	bcf	202,3,c	;volatile
   685   000332                     
   686                           ;main.c: 203:     T2CONbits.T2OUTPS1 = 0;
   687   000332  98CA               	bcf	202,4,c	;volatile
   688   000334                     
   689                           ;main.c: 204:     T2CONbits.T2OUTPS2 = 0;
   690   000334  9ACA               	bcf	202,5,c	;volatile
   691   000336                     
   692                           ;main.c: 205:     T2CONbits.T2OUTPS3 = 0;
   693   000336  9CCA               	bcf	202,6,c	;volatile
   694   000338                     
   695                           ;main.c: 207:     T2CONbits.T2CKPS = 0x00;
   696   000338  0EFC               	movlw	-4
   697   00033A  16CA               	andwf	202,f,c	;volatile
   698   00033C                     
   699                           ;main.c: 213:     PR2 = 4;
   700   00033C  0E04               	movlw	4
   701   00033E  6ECB               	movwf	203,c	;volatile
   702   000340                     
   703                           ;main.c: 215:     CCP1CONbits.DC1B = 0;
   704   000340  0ECF               	movlw	-49
   705   000342  16BB               	andwf	187,f,c	;volatile
   706   000344                     
   707                           ;main.c: 216:     CCP1CONbits.CCP1M = 0x0C;
   708   000344  50BB               	movf	187,w,c	;volatile
   709   000346  0BF0               	andlw	-16
   710   000348  090C               	iorlw	12
   711   00034A  6EBB               	movwf	187,c	;volatile
   712   00034C                     
   713                           ;main.c: 217:     CCPR1L = 0;
   714   00034C  0E00               	movlw	0
   715   00034E  6EBC               	movwf	188,c	;volatile
   716   000350                     
   717                           ;main.c: 219:     T2CONbits.TMR2ON = 1;
   718   000350  84CA               	bsf	202,2,c	;volatile
   719   000352                     
   720                           ;main.c: 221:     LATCbits.LATC1 = 0;
   721   000352  928B               	bcf	139,1,c	;volatile
   722   000354                     
   723                           ;main.c: 222:     LATAbits.LATA2 = 0;
   724   000354  9489               	bcf	137,2,c	;volatile
   725   000356                     
   726                           ;main.c: 223:     errorcounter = 30;
   727   000356  0E1E               	movlw	30
   728   000358  6E52               	movwf	_errorcounter^0,c	;volatile
   729   00035A  0E00               	movlw	0
   730   00035C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   731   00035E  0E00               	movlw	0
   732   000360  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   733   000362  0E00               	movlw	0
   734   000364  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   735   000366                     
   736                           ;main.c: 226:     RCONbits.IPEN = 1;
   737   000366  8ED0               	bsf	208,7,c	;volatile
   738   000368                     
   739                           ;main.c: 229:     IPR1bits.RCIP = 1;
   740   000368  8A9F               	bsf	159,5,c	;volatile
   741   00036A                     
   742                           ;main.c: 232:     INTCONbits.GIEH = 1;
   743   00036A  8EF2               	bsf	242,7,c	;volatile
   744   00036C                     
   745                           ;main.c: 233:     INTCONbits.GIE = 1;
   746   00036C  8EF2               	bsf	242,7,c	;volatile
   747   00036E                     
   748                           ;main.c: 238:     LATDbits.LATD0 = 1;
   749   00036E  808C               	bsf	140,0,c	;volatile
   750   000370                     
   751                           ;main.c: 239:     LATDbits.LATD1 = 1;
   752   000370  828C               	bsf	140,1,c	;volatile
   753   000372                     
   754                           ;main.c: 241:     WriteSTLED316SData(37, 0xFF);
   755   000372  0E00               	movlw	0
   756   000374  6E41               	movwf	(WriteSTLED316SData@number+1)^0,c
   757   000376  0E25               	movlw	37
   758   000378  6E40               	movwf	WriteSTLED316SData@number^0,c
   759   00037A  0EFF               	movlw	255
   760   00037C  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
   761   00037E  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
   762   000382                     
   763                           ;main.c: 242:     _delay((unsigned long)((500)*(8000000/4000.0)));
   764   000382  0E06               	movlw	6
   765   000384  0100               	movlb	0	; () banked
   766   000386  6F97               	movwf	(??_main+1)& (0+255),b
   767   000388  0E13               	movlw	19
   768   00038A  6F96               	movwf	??_main& (0+255),b
   769   00038C  0EAD               	movlw	173
   770   00038E                     u3997:
   771   00038E  2EE8               	decfsz	wreg,f,c
   772   000390  D7FE               	bra	u3997
   773   000392  2F96               	decfsz	??_main& (0+255),f,b
   774   000394  D7FC               	bra	u3997
   775   000396  2F97               	decfsz	(??_main+1)& (0+255),f,b
   776   000398  D7FA               	bra	u3997
   777   00039A  D000               	nop2	
   778   00039C                     
   779                           ;main.c: 243:     AD_capture_BattVoltage();
   780   00039C  EC21  F011         	call	_AD_capture_BattVoltage	;wreg free
   781   0003A0                     
   782                           ;main.c: 252:     INTCONbits.GIE = 0;
   783   0003A0  9EF2               	bcf	242,7,c	;volatile
   784   0003A2                     
   785                           ;main.c: 253:     ETemp = read_i2c(0x0010);
   786   0003A2  0E10               	movlw	16
   787   0003A4  6E46               	movwf	read_i2c@address^0,c
   788   0003A6  0E00               	movlw	0
   789   0003A8  6E47               	movwf	(read_i2c@address+1)^0,c
   790   0003AA  0E00               	movlw	0
   791   0003AC  6E48               	movwf	(read_i2c@address+2)^0,c
   792   0003AE  0E00               	movlw	0
   793   0003B0  6E49               	movwf	(read_i2c@address+3)^0,c
   794   0003B2  EC32  F010         	call	_read_i2c	;wreg free
   795   0003B6  C046  F01D         	movff	?_read_i2c,_ETemp
   796   0003BA  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   797   0003BE                     
   798                           ;main.c: 254:     INTCONbits.GIE = 1;
   799   0003BE  8EF2               	bsf	242,7,c	;volatile
   800   0003C0                     
   801                           ;main.c: 256:     vibration_mode = ETemp & 0x00FF;
   802   0003C0  C01D  F02C         	movff	_ETemp,_vibration_mode
   803   0003C4                     
   804                           ;main.c: 257:     if (vibration_mode > 1) {
   805   0003C4  0E01               	movlw	1
   806   0003C6  642C               	cpfsgt	_vibration_mode^0,c
   807   0003C8  EFE8  F001         	goto	u3451
   808   0003CC  EFEA  F001         	goto	u3450
   809   0003D0                     u3451:
   810   0003D0  EFFB  F001         	goto	l5253
   811   0003D4                     u3450:
   812   0003D4                     
   813                           ;main.c: 258:         vibration_mode = 1;
   814   0003D4  0E01               	movlw	1
   815   0003D6  6E2C               	movwf	_vibration_mode^0,c
   816   0003D8                     
   817                           ;main.c: 260:         INTCONbits.GIE = 0;
   818   0003D8  9EF2               	bcf	242,7,c	;volatile
   819   0003DA                     
   820                           ;main.c: 261:         write_i2c(0x0010, vibration_mode);
   821   0003DA  0E10               	movlw	16
   822   0003DC  6E46               	movwf	write_i2c@address^0,c
   823   0003DE  0E00               	movlw	0
   824   0003E0  6E47               	movwf	(write_i2c@address+1)^0,c
   825   0003E2  0E00               	movlw	0
   826   0003E4  6E48               	movwf	(write_i2c@address+2)^0,c
   827   0003E6  0E00               	movlw	0
   828   0003E8  6E49               	movwf	(write_i2c@address+3)^0,c
   829   0003EA  C02C  F04A         	movff	_vibration_mode,write_i2c@data
   830   0003EE  6A4B               	clrf	(write_i2c@data+1)^0,c
   831   0003F0  ECBA  F010         	call	_write_i2c	;wreg free
   832   0003F4                     
   833                           ;main.c: 262:         INTCONbits.GIE = 1;
   834   0003F4  8EF2               	bsf	242,7,c	;volatile
   835   0003F6                     l5253:
   836                           
   837                           ;main.c: 265:     NUM = 1;
   838   0003F6  0E00               	movlw	0
   839   0003F8  6E14               	movwf	(_NUM+1)^0,c
   840   0003FA  0E01               	movlw	1
   841   0003FC  6E13               	movwf	_NUM^0,c
   842                           
   843                           ;main.c: 266:     WriteSTLED316SData(NUM, vibration_mode);
   844   0003FE  C013  F040         	movff	_NUM,WriteSTLED316SData@number
   845   000402  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
   846   000406  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   847   00040A  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
   848   00040E                     
   849                           ;main.c: 267:     NUM_REC = 1;
   850   00040E  0E00               	movlw	0
   851   000410  6E10               	movwf	(_NUM_REC+1)^0,c
   852   000412  0E01               	movlw	1
   853   000414  6E0F               	movwf	_NUM_REC^0,c
   854   000416                     
   855                           ;main.c: 272:     INTCONbits.GIE = 0;
   856   000416  9EF2               	bcf	242,7,c	;volatile
   857   000418                     
   858                           ;main.c: 273:     ETemp = read_i2c(0x0020);
   859   000418  0E20               	movlw	32
   860   00041A  6E46               	movwf	read_i2c@address^0,c
   861   00041C  0E00               	movlw	0
   862   00041E  6E47               	movwf	(read_i2c@address+1)^0,c
   863   000420  0E00               	movlw	0
   864   000422  6E48               	movwf	(read_i2c@address+2)^0,c
   865   000424  0E00               	movlw	0
   866   000426  6E49               	movwf	(read_i2c@address+3)^0,c
   867   000428  EC32  F010         	call	_read_i2c	;wreg free
   868   00042C  C046  F01D         	movff	?_read_i2c,_ETemp
   869   000430  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   870   000434                     
   871                           ;main.c: 274:     INTCONbits.GIE = 1;
   872   000434  8EF2               	bsf	242,7,c	;volatile
   873                           
   874                           ;main.c: 276:     Device_ID = ETemp & 0x00FF;
   875   000436  501D               	movf	_ETemp^0,w,c
   876   000438  6E17               	movwf	_Device_ID^0,c
   877   00043A  6A18               	clrf	(_Device_ID+1)^0,c
   878   00043C                     
   879                           ;main.c: 277:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   880   00043C  5018               	movf	(_Device_ID+1)^0,w,c
   881   00043E  E109               	bnz	u3460
   882   000440  0E31               	movlw	49
   883   000442  5C17               	subwf	_Device_ID^0,w,c
   884   000444  A0D8               	btfss	status,0,c
   885   000446  EF27  F002         	goto	u3461
   886   00044A  EF29  F002         	goto	u3460
   887   00044E                     u3461:
   888   00044E  EF34  F002         	goto	l5267
   889   000452                     u3460:
   890   000452  5018               	movf	(_Device_ID+1)^0,w,c
   891   000454  E109               	bnz	u3470
   892   000456  0E3B               	movlw	59
   893   000458  5C17               	subwf	_Device_ID^0,w,c
   894   00045A  A0D8               	btfss	status,0,c
   895   00045C  EF32  F002         	goto	u3471
   896   000460  EF34  F002         	goto	u3470
   897   000464                     u3471:
   898   000464  EF48  F002         	goto	l5275
   899   000468                     u3470:
   900   000468                     l5267:
   901                           
   902                           ;main.c: 278:         Device_ID = 0x31;
   903   000468  0E00               	movlw	0
   904   00046A  6E18               	movwf	(_Device_ID+1)^0,c
   905   00046C  0E31               	movlw	49
   906   00046E  6E17               	movwf	_Device_ID^0,c
   907   000470                     
   908                           ;main.c: 280:         INTCONbits.GIE = 0;
   909   000470  9EF2               	bcf	242,7,c	;volatile
   910   000472                     
   911                           ;main.c: 281:         write_i2c(0x0020, Device_ID);
   912   000472  0E20               	movlw	32
   913   000474  6E46               	movwf	write_i2c@address^0,c
   914   000476  0E00               	movlw	0
   915   000478  6E47               	movwf	(write_i2c@address+1)^0,c
   916   00047A  0E00               	movlw	0
   917   00047C  6E48               	movwf	(write_i2c@address+2)^0,c
   918   00047E  0E00               	movlw	0
   919   000480  6E49               	movwf	(write_i2c@address+3)^0,c
   920   000482  C017  F04A         	movff	_Device_ID,write_i2c@data
   921   000486  C018  F04B         	movff	_Device_ID+1,write_i2c@data+1
   922   00048A  ECBA  F010         	call	_write_i2c	;wreg free
   923   00048E                     
   924                           ;main.c: 282:         INTCONbits.GIE = 1;
   925   00048E  8EF2               	bsf	242,7,c	;volatile
   926   000490                     l5275:
   927                           
   928                           ;main.c: 288:     INTCONbits.GIE = 0;
   929   000490  9EF2               	bcf	242,7,c	;volatile
   930   000492                     
   931                           ;main.c: 289:     ETemp = read_i2c(0x0060);
   932   000492  0E60               	movlw	96
   933   000494  6E46               	movwf	read_i2c@address^0,c
   934   000496  0E00               	movlw	0
   935   000498  6E47               	movwf	(read_i2c@address+1)^0,c
   936   00049A  0E00               	movlw	0
   937   00049C  6E48               	movwf	(read_i2c@address+2)^0,c
   938   00049E  0E00               	movlw	0
   939   0004A0  6E49               	movwf	(read_i2c@address+3)^0,c
   940   0004A2  EC32  F010         	call	_read_i2c	;wreg free
   941   0004A6  C046  F01D         	movff	?_read_i2c,_ETemp
   942   0004AA  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
   943   0004AE                     
   944                           ;main.c: 290:     INTCONbits.GIE = 1;
   945   0004AE  8EF2               	bsf	242,7,c	;volatile
   946   0004B0                     
   947                           ;main.c: 292:     pause_Time = ETemp & 0x00FF;
   948   0004B0  C01D  F029         	movff	_ETemp,_pause_Time	;volatile
   949   0004B4                     
   950                           ;main.c: 293:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   951   0004B4  0E2F               	movlw	47
   952   0004B6  6429               	cpfsgt	_pause_Time^0,c	;volatile
   953   0004B8  EF60  F002         	goto	u3481
   954   0004BC  EF62  F002         	goto	u3480
   955   0004C0                     u3481:
   956   0004C0  EF6A  F002         	goto	l5287
   957   0004C4                     u3480:
   958   0004C4  0E35               	movlw	53
   959   0004C6  6429               	cpfsgt	_pause_Time^0,c	;volatile
   960   0004C8  EF68  F002         	goto	u3491
   961   0004CC  EF6A  F002         	goto	u3490
   962   0004D0                     u3491:
   963   0004D0  EFA7  F002         	goto	l5309
   964   0004D4                     u3490:
   965   0004D4                     l5287:
   966                           
   967                           ;main.c: 294:         pause_Time = 0x30;
   968   0004D4  0E30               	movlw	48
   969   0004D6  6E29               	movwf	_pause_Time^0,c	;volatile
   970                           
   971                           ;main.c: 295:         Motor_Pause_Time = 0;
   972   0004D8  0E00               	movlw	0
   973   0004DA  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
   974   0004DC  0E00               	movlw	0
   975   0004DE  6E15               	movwf	_Motor_Pause_Time^0,c
   976   0004E0                     
   977                           ;main.c: 297:         INTCONbits.GIE = 0;
   978   0004E0  9EF2               	bcf	242,7,c	;volatile
   979   0004E2                     
   980                           ;main.c: 298:         write_i2c(0x0060, pause_Time);
   981   0004E2  0E60               	movlw	96
   982   0004E4  6E46               	movwf	write_i2c@address^0,c
   983   0004E6  0E00               	movlw	0
   984   0004E8  6E47               	movwf	(write_i2c@address+1)^0,c
   985   0004EA  0E00               	movlw	0
   986   0004EC  6E48               	movwf	(write_i2c@address+2)^0,c
   987   0004EE  0E00               	movlw	0
   988   0004F0  6E49               	movwf	(write_i2c@address+3)^0,c
   989   0004F2  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
   990   0004F6  6A4B               	clrf	(write_i2c@data+1)^0,c
   991   0004F8  ECBA  F010         	call	_write_i2c	;wreg free
   992   0004FC                     
   993                           ;main.c: 299:         INTCONbits.GIE = 1;
   994   0004FC  8EF2               	bsf	242,7,c	;volatile
   995                           
   996                           ;main.c: 300:     } else {
   997   0004FE  EFCD  F002         	goto	l199
   998   000502                     l5295:
   999                           
  1000                           ; BSR set to: 0
  1001                           ;main.c: 304:                 Motor_Pause_Time = 0;
  1002   000502  0E00               	movlw	0
  1003   000504  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  1004   000506  0E00               	movlw	0
  1005   000508  6E15               	movwf	_Motor_Pause_Time^0,c
  1006                           
  1007                           ;main.c: 305:                 pause_Time = 0x30;
  1008   00050A  0E30               	movlw	48
  1009   00050C  6E29               	movwf	_pause_Time^0,c	;volatile
  1010                           
  1011                           ;main.c: 306:                 break;
  1012   00050E  EFCD  F002         	goto	l199
  1013   000512                     l5297:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;main.c: 309:                 Motor_Pause_Time = 1000;
  1017   000512  0E03               	movlw	3
  1018   000514  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  1019   000516  0EE8               	movlw	232
  1020   000518  6E15               	movwf	_Motor_Pause_Time^0,c
  1021                           
  1022                           ;main.c: 310:                 break;
  1023   00051A  EFCD  F002         	goto	l199
  1024   00051E                     l5299:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;main.c: 313:                 Motor_Pause_Time = 2000;
  1028   00051E  0E07               	movlw	7
  1029   000520  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  1030   000522  0ED0               	movlw	208
  1031   000524  6E15               	movwf	_Motor_Pause_Time^0,c
  1032                           
  1033                           ;main.c: 314:                 break;
  1034   000526  EFCD  F002         	goto	l199
  1035   00052A                     l5301:
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 317:                 Motor_Pause_Time = 3000;
  1039   00052A  0E0B               	movlw	11
  1040   00052C  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  1041   00052E  0EB8               	movlw	184
  1042   000530  6E15               	movwf	_Motor_Pause_Time^0,c
  1043                           
  1044                           ;main.c: 318:                 break;
  1045   000532  EFCD  F002         	goto	l199
  1046   000536                     l5303:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 321:                 Motor_Pause_Time = 4000;
  1050   000536  0E0F               	movlw	15
  1051   000538  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  1052   00053A  0EA0               	movlw	160
  1053   00053C  6E15               	movwf	_Motor_Pause_Time^0,c
  1054                           
  1055                           ;main.c: 322:                 break;
  1056   00053E  EFCD  F002         	goto	l199
  1057   000542                     l5305:
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;main.c: 325:                 Motor_Pause_Time = 5000;
  1061   000542  0E13               	movlw	19
  1062   000544  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  1063   000546  0E88               	movlw	136
  1064   000548  6E15               	movwf	_Motor_Pause_Time^0,c
  1065                           
  1066                           ;main.c: 326:                 break;
  1067   00054A  EFCD  F002         	goto	l199
  1068   00054E                     l5309:
  1069   00054E  5029               	movf	_pause_Time^0,w,c	;volatile
  1070   000550  0100               	movlb	0	; () banked
  1071   000552  6F96               	movwf	??_main& (0+255),b
  1072   000554  6B97               	clrf	(??_main+1)& (0+255),b
  1073                           
  1074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1075                           ; Switch size 1, requested type "simple"
  1076                           ; Number of cases is 1, Range of values is 0 to 0
  1077                           ; switch strategies available:
  1078                           ; Name         Instructions Cycles
  1079                           ; simple_byte            4     3 (average)
  1080                           ;	Chosen strategy is simple_byte
  1081   000556  5197               	movf	(??_main+1)& (0+255),w,b
  1082   000558  0A00               	xorlw	0	; case 0
  1083   00055A  B4D8               	btfsc	status,2,c
  1084   00055C  EFB2  F002         	goto	l6027
  1085   000560  EF81  F002         	goto	l5295
  1086   000564                     l6027:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ; Switch size 1, requested type "simple"
  1090                           ; Number of cases is 6, Range of values is 48 to 53
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte           19    10 (average)
  1094                           ;	Chosen strategy is simple_byte
  1095   000564  5196               	movf	??_main& (0+255),w,b
  1096   000566  0A30               	xorlw	48	; case 48
  1097   000568  B4D8               	btfsc	status,2,c
  1098   00056A  EF81  F002         	goto	l5295
  1099   00056E  0A01               	xorlw	1	; case 49
  1100   000570  B4D8               	btfsc	status,2,c
  1101   000572  EF89  F002         	goto	l5297
  1102   000576  0A03               	xorlw	3	; case 50
  1103   000578  B4D8               	btfsc	status,2,c
  1104   00057A  EF8F  F002         	goto	l5299
  1105   00057E  0A01               	xorlw	1	; case 51
  1106   000580  B4D8               	btfsc	status,2,c
  1107   000582  EF95  F002         	goto	l5301
  1108   000586  0A07               	xorlw	7	; case 52
  1109   000588  B4D8               	btfsc	status,2,c
  1110   00058A  EF9B  F002         	goto	l5303
  1111   00058E  0A01               	xorlw	1	; case 53
  1112   000590  B4D8               	btfsc	status,2,c
  1113   000592  EFA1  F002         	goto	l5305
  1114   000596  EF81  F002         	goto	l5295
  1115   00059A                     l199:
  1116                           
  1117                           ;main.c: 333:     INTCONbits.GIE = 0;
  1118   00059A  9EF2               	bcf	242,7,c	;volatile
  1119   00059C                     
  1120                           ;main.c: 334:     ETemp = read_i2c(0x0050);
  1121   00059C  0E50               	movlw	80
  1122   00059E  6E46               	movwf	read_i2c@address^0,c
  1123   0005A0  0E00               	movlw	0
  1124   0005A2  6E47               	movwf	(read_i2c@address+1)^0,c
  1125   0005A4  0E00               	movlw	0
  1126   0005A6  6E48               	movwf	(read_i2c@address+2)^0,c
  1127   0005A8  0E00               	movlw	0
  1128   0005AA  6E49               	movwf	(read_i2c@address+3)^0,c
  1129   0005AC  EC32  F010         	call	_read_i2c	;wreg free
  1130   0005B0  C046  F01D         	movff	?_read_i2c,_ETemp
  1131   0005B4  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1132   0005B8                     
  1133                           ;main.c: 335:     INTCONbits.GIE = 1;
  1134   0005B8  8EF2               	bsf	242,7,c	;volatile
  1135   0005BA                     
  1136                           ;main.c: 337:     delay_motor_stop_time = ETemp & 0x00FF;
  1137   0005BA  C01D  F027         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1138   0005BE                     
  1139                           ;main.c: 338:     if (delay_motor_stop_time > 0x96) {
  1140   0005BE  0E96               	movlw	150
  1141   0005C0  6427               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1142   0005C2  EFE5  F002         	goto	u3501
  1143   0005C6  EFE7  F002         	goto	u3500
  1144   0005CA                     u3501:
  1145   0005CA  EFFE  F002         	goto	l209
  1146   0005CE                     u3500:
  1147   0005CE                     
  1148                           ;main.c: 339:         delay_motor_stop_time = 0x00;
  1149   0005CE  0E00               	movlw	0
  1150   0005D0  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  1151   0005D2                     
  1152                           ;main.c: 341:         INTCONbits.GIE = 0;
  1153   0005D2  9EF2               	bcf	242,7,c	;volatile
  1154   0005D4                     
  1155                           ;main.c: 342:         write_i2c(0x0050, delay_motor_stop_time);
  1156   0005D4  0E50               	movlw	80
  1157   0005D6  6E46               	movwf	write_i2c@address^0,c
  1158   0005D8  0E00               	movlw	0
  1159   0005DA  6E47               	movwf	(write_i2c@address+1)^0,c
  1160   0005DC  0E00               	movlw	0
  1161   0005DE  6E48               	movwf	(write_i2c@address+2)^0,c
  1162   0005E0  0E00               	movlw	0
  1163   0005E2  6E49               	movwf	(write_i2c@address+3)^0,c
  1164   0005E4  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1165   0005E8  6A4B               	clrf	(write_i2c@data+1)^0,c
  1166   0005EA  ECBA  F010         	call	_write_i2c	;wreg free
  1167   0005EE                     
  1168                           ;main.c: 343:         INTCONbits.GIE = 1;
  1169   0005EE  8EF2               	bsf	242,7,c	;volatile
  1170   0005F0                     
  1171                           ;main.c: 345:         Motor_Stop_Delay_Time = 0;
  1172   0005F0  0E00               	movlw	0
  1173   0005F2  6E1A               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1174   0005F4  0E00               	movlw	0
  1175   0005F6  6E19               	movwf	_Motor_Stop_Delay_Time^0,c
  1176                           
  1177                           ;main.c: 346:     } else {
  1178   0005F8  EF01  F003         	goto	l210
  1179   0005FC                     l209:
  1180                           
  1181                           ;main.c: 347:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1182   0005FC  C027  F019         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1183   000600  6A1A               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1184   000602                     l210:
  1185                           
  1186                           ;main.c: 353:     INTCONbits.GIE = 0;
  1187   000602  9EF2               	bcf	242,7,c	;volatile
  1188   000604                     
  1189                           ;main.c: 354:     ETemp = read_i2c(0x0040);
  1190   000604  0E40               	movlw	64
  1191   000606  6E46               	movwf	read_i2c@address^0,c
  1192   000608  0E00               	movlw	0
  1193   00060A  6E47               	movwf	(read_i2c@address+1)^0,c
  1194   00060C  0E00               	movlw	0
  1195   00060E  6E48               	movwf	(read_i2c@address+2)^0,c
  1196   000610  0E00               	movlw	0
  1197   000612  6E49               	movwf	(read_i2c@address+3)^0,c
  1198   000614  EC32  F010         	call	_read_i2c	;wreg free
  1199   000618  C046  F01D         	movff	?_read_i2c,_ETemp
  1200   00061C  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1201   000620                     
  1202                           ;main.c: 355:     INTCONbits.GIE = 1
  1203   000620  8EF2               	bsf	242,7,c	;volatile
  1204   000622                     
  1205                           ;main.c: 357:     vib_Time = ETemp & 0x00FF;
  1206   000622  C01D  F028         	movff	_ETemp,_vib_Time	;volatile
  1207   000626                     
  1208                           ;main.c: 358:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85)) {
  1209   000626  0E81               	movlw	129
  1210   000628  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1211   00062A  B4D8               	btfsc	status,2,c
  1212   00062C  EF1A  F003         	goto	u3511
  1213   000630  EF1C  F003         	goto	u3510
  1214   000634                     u3511:
  1215   000634  EF77  F003         	goto	l5365
  1216   000638                     u3510:
  1217   000638  0E82               	movlw	130
  1218   00063A  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1219   00063C  B4D8               	btfsc	status,2,c
  1220   00063E  EF23  F003         	goto	u3521
  1221   000642  EF25  F003         	goto	u3520
  1222   000646                     u3521:
  1223   000646  EF77  F003         	goto	l5365
  1224   00064A                     u3520:
  1225   00064A  0E83               	movlw	131
  1226   00064C  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1227   00064E  B4D8               	btfsc	status,2,c
  1228   000650  EF2C  F003         	goto	u3531
  1229   000654  EF2E  F003         	goto	u3530
  1230   000658                     u3531:
  1231   000658  EF77  F003         	goto	l5365
  1232   00065C                     u3530:
  1233   00065C  0E84               	movlw	132
  1234   00065E  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1235   000660  B4D8               	btfsc	status,2,c
  1236   000662  EF35  F003         	goto	u3541
  1237   000666  EF37  F003         	goto	u3540
  1238   00066A                     u3541:
  1239   00066A  EF77  F003         	goto	l5365
  1240   00066E                     u3540:
  1241   00066E  0E85               	movlw	133
  1242   000670  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1243   000672  B4D8               	btfsc	status,2,c
  1244   000674  EF3E  F003         	goto	u3551
  1245   000678  EF40  F003         	goto	u3550
  1246   00067C                     u3551:
  1247   00067C  EF77  F003         	goto	l5365
  1248   000680                     u3550:
  1249   000680                     
  1250                           ;main.c: 359:         Vmotor_Time = 2000;
  1251   000680  0E07               	movlw	7
  1252   000682  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1253   000684  0ED0               	movlw	208
  1254   000686  6E56               	movwf	_Vmotor_Time^0,c
  1255                           
  1256                           ;main.c: 360:         vib_Time = 0x82;
  1257   000688  0E82               	movlw	130
  1258   00068A  6E28               	movwf	_vib_Time^0,c	;volatile
  1259   00068C                     
  1260                           ;main.c: 362:         INTCONbits.GIE = 0;
  1261   00068C  9EF2               	bcf	242,7,c	;volatile
  1262   00068E                     
  1263                           ;main.c: 363:         write_i2c(0x0040, vib_Time);
  1264   00068E  0E40               	movlw	64
  1265   000690  6E46               	movwf	write_i2c@address^0,c
  1266   000692  0E00               	movlw	0
  1267   000694  6E47               	movwf	(write_i2c@address+1)^0,c
  1268   000696  0E00               	movlw	0
  1269   000698  6E48               	movwf	(write_i2c@address+2)^0,c
  1270   00069A  0E00               	movlw	0
  1271   00069C  6E49               	movwf	(write_i2c@address+3)^0,c
  1272   00069E  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  1273   0006A2  6A4B               	clrf	(write_i2c@data+1)^0,c
  1274   0006A4  ECBA  F010         	call	_write_i2c	;wreg free
  1275   0006A8                     
  1276                           ;main.c: 364:         INTCONbits.GIE = 1;
  1277   0006A8  8EF2               	bsf	242,7,c	;volatile
  1278                           
  1279                           ;main.c: 365:     } else {
  1280   0006AA  EF99  F003         	goto	l5367
  1281   0006AE                     l5353:
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;main.c: 368:                 Vmotor_Time = 1000;
  1285   0006AE  0E03               	movlw	3
  1286   0006B0  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1287   0006B2  0EE8               	movlw	232
  1288   0006B4  6E56               	movwf	_Vmotor_Time^0,c
  1289                           
  1290                           ;main.c: 369:                 break;
  1291   0006B6  EF99  F003         	goto	l5367
  1292   0006BA                     l5355:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;main.c: 372:                 Vmotor_Time = 2000;
  1296   0006BA  0E07               	movlw	7
  1297   0006BC  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1298   0006BE  0ED0               	movlw	208
  1299   0006C0  6E56               	movwf	_Vmotor_Time^0,c
  1300                           
  1301                           ;main.c: 373:                 vib_Time = 0x82;
  1302   0006C2  0E82               	movlw	130
  1303   0006C4  6E28               	movwf	_vib_Time^0,c	;volatile
  1304                           
  1305                           ;main.c: 374:                 break;
  1306   0006C6  EF99  F003         	goto	l5367
  1307   0006CA                     l5357:
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;main.c: 376:                 Vmotor_Time = 3000;
  1311   0006CA  0E0B               	movlw	11
  1312   0006CC  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1313   0006CE  0EB8               	movlw	184
  1314   0006D0  6E56               	movwf	_Vmotor_Time^0,c
  1315                           
  1316                           ;main.c: 377:                 break;
  1317   0006D2  EF99  F003         	goto	l5367
  1318   0006D6                     l5359:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 379:                 Vmotor_Time = 4000;
  1322   0006D6  0E0F               	movlw	15
  1323   0006D8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1324   0006DA  0EA0               	movlw	160
  1325   0006DC  6E56               	movwf	_Vmotor_Time^0,c
  1326                           
  1327                           ;main.c: 380:                 break;
  1328   0006DE  EF99  F003         	goto	l5367
  1329   0006E2                     l5361:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 382:                 Vmotor_Time = 5000;
  1333   0006E2  0E13               	movlw	19
  1334   0006E4  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1335   0006E6  0E88               	movlw	136
  1336   0006E8  6E56               	movwf	_Vmotor_Time^0,c
  1337                           
  1338                           ;main.c: 383:                 break;
  1339   0006EA  EF99  F003         	goto	l5367
  1340   0006EE                     l5365:
  1341   0006EE  5028               	movf	_vib_Time^0,w,c	;volatile
  1342   0006F0  0100               	movlb	0	; () banked
  1343   0006F2  6F96               	movwf	??_main& (0+255),b
  1344   0006F4  6B97               	clrf	(??_main+1)& (0+255),b
  1345                           
  1346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1347                           ; Switch size 1, requested type "simple"
  1348                           ; Number of cases is 1, Range of values is 0 to 0
  1349                           ; switch strategies available:
  1350                           ; Name         Instructions Cycles
  1351                           ; simple_byte            4     3 (average)
  1352                           ;	Chosen strategy is simple_byte
  1353   0006F6  5197               	movf	(??_main+1)& (0+255),w,b
  1354   0006F8  0A00               	xorlw	0	; case 0
  1355   0006FA  B4D8               	btfsc	status,2,c
  1356   0006FC  EF82  F003         	goto	l6029
  1357   000700  EF5D  F003         	goto	l5355
  1358   000704                     l6029:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ; Switch size 1, requested type "simple"
  1362                           ; Number of cases is 5, Range of values is 129 to 133
  1363                           ; switch strategies available:
  1364                           ; Name         Instructions Cycles
  1365                           ; simple_byte           16     9 (average)
  1366                           ;	Chosen strategy is simple_byte
  1367   000704  5196               	movf	??_main& (0+255),w,b
  1368   000706  0A81               	xorlw	129	; case 129
  1369   000708  B4D8               	btfsc	status,2,c
  1370   00070A  EF57  F003         	goto	l5353
  1371   00070E  0A03               	xorlw	3	; case 130
  1372   000710  B4D8               	btfsc	status,2,c
  1373   000712  EF5D  F003         	goto	l5355
  1374   000716  0A01               	xorlw	1	; case 131
  1375   000718  B4D8               	btfsc	status,2,c
  1376   00071A  EF65  F003         	goto	l5357
  1377   00071E  0A07               	xorlw	7	; case 132
  1378   000720  B4D8               	btfsc	status,2,c
  1379   000722  EF6B  F003         	goto	l5359
  1380   000726  0A01               	xorlw	1	; case 133
  1381   000728  B4D8               	btfsc	status,2,c
  1382   00072A  EF71  F003         	goto	l5361
  1383   00072E  EF5D  F003         	goto	l5355
  1384   000732                     l5367:
  1385                           
  1386                           ;main.c: 390:         PWM_reg = 0x3F;
  1387   000732  0E3F               	movlw	63
  1388   000734  6E58               	movwf	_PWM_reg^0,c
  1389   000736                     
  1390                           ;main.c: 392:     INTCONbits.GIE=0;
  1391   000736  9EF2               	bcf	242,7,c	;volatile
  1392   000738                     
  1393                           ;main.c: 393:     ETemp = read_i2c(0x0030);
  1394   000738  0E30               	movlw	48
  1395   00073A  6E46               	movwf	read_i2c@address^0,c
  1396   00073C  0E00               	movlw	0
  1397   00073E  6E47               	movwf	(read_i2c@address+1)^0,c
  1398   000740  0E00               	movlw	0
  1399   000742  6E48               	movwf	(read_i2c@address+2)^0,c
  1400   000744  0E00               	movlw	0
  1401   000746  6E49               	movwf	(read_i2c@address+3)^0,c
  1402   000748  EC32  F010         	call	_read_i2c	;wreg free
  1403   00074C  C046  F01D         	movff	?_read_i2c,_ETemp
  1404   000750  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1405   000754                     
  1406                           ;main.c: 394:     INTCONbits.GIE=1;
  1407   000754  8EF2               	bsf	242,7,c	;volatile
  1408   000756                     
  1409                           ;main.c: 396:     PWM_reg = ETemp & 0x00FF;
  1410   000756  C01D  F058         	movff	_ETemp,_PWM_reg
  1411   00075A                     
  1412                           ;main.c: 398:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1413   00075A  5058               	movf	_PWM_reg^0,w,c
  1414   00075C  B4D8               	btfsc	status,2,c
  1415   00075E  EFB3  F003         	goto	u3561
  1416   000762  EFB5  F003         	goto	u3560
  1417   000766                     u3561:
  1418   000766  EFD8  F003         	goto	l5391
  1419   00076A                     u3560:
  1420   00076A  0E3F               	movlw	63
  1421   00076C  1858               	xorwf	_PWM_reg^0,w,c
  1422   00076E  B4D8               	btfsc	status,2,c
  1423   000770  EFBC  F003         	goto	u3571
  1424   000774  EFBE  F003         	goto	u3570
  1425   000778                     u3571:
  1426   000778  EFD8  F003         	goto	l5391
  1427   00077C                     u3570:
  1428   00077C  0E7F               	movlw	127
  1429   00077E  1858               	xorwf	_PWM_reg^0,w,c
  1430   000780  B4D8               	btfsc	status,2,c
  1431   000782  EFC5  F003         	goto	u3581
  1432   000786  EFC7  F003         	goto	u3580
  1433   00078A                     u3581:
  1434   00078A  EFD8  F003         	goto	l5391
  1435   00078E                     u3580:
  1436   00078E                     
  1437                           ;main.c: 399:     {;main.c: 400:         PWM_reg=0x3F;
  1438   00078E  0E3F               	movlw	63
  1439   000790  6E58               	movwf	_PWM_reg^0,c
  1440   000792                     
  1441                           ;main.c: 402:         INTCONbits.GIE=0;
  1442   000792  9EF2               	bcf	242,7,c	;volatile
  1443   000794                     
  1444                           ;main.c: 403:         write_i2c(0x0030,PWM_reg);
  1445   000794  0E30               	movlw	48
  1446   000796  6E46               	movwf	write_i2c@address^0,c
  1447   000798  0E00               	movlw	0
  1448   00079A  6E47               	movwf	(write_i2c@address+1)^0,c
  1449   00079C  0E00               	movlw	0
  1450   00079E  6E48               	movwf	(write_i2c@address+2)^0,c
  1451   0007A0  0E00               	movlw	0
  1452   0007A2  6E49               	movwf	(write_i2c@address+3)^0,c
  1453   0007A4  C058  F04A         	movff	_PWM_reg,write_i2c@data
  1454   0007A8  6A4B               	clrf	(write_i2c@data+1)^0,c
  1455   0007AA  ECBA  F010         	call	_write_i2c	;wreg free
  1456   0007AE                     
  1457                           ;main.c: 404:         INTCONbits.GIE=1;
  1458   0007AE  8EF2               	bsf	242,7,c	;volatile
  1459   0007B0                     l5391:
  1460                           
  1461                           ;main.c: 407:     errorcounter = 30;
  1462   0007B0  0E1E               	movlw	30
  1463   0007B2  6E52               	movwf	_errorcounter^0,c	;volatile
  1464   0007B4  0E00               	movlw	0
  1465   0007B6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1466   0007B8  0E00               	movlw	0
  1467   0007BA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1468   0007BC  0E00               	movlw	0
  1469   0007BE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1470                           
  1471                           ;main.c: 408:     MotorPosition_Init();
  1472   0007C0  EC07  F00C         	call	_MotorPosition_Init	;wreg free
  1473   0007C4                     
  1474                           ;main.c: 409:     LATDbits.LATD1 = 0;
  1475   0007C4  928C               	bcf	140,1,c	;volatile
  1476   0007C6                     
  1477                           ;main.c: 414:     INTCONbits.GIE=0;
  1478   0007C6  9EF2               	bcf	242,7,c	;volatile
  1479                           
  1480                           ;main.c: 415:     ETemp = read_i2c(0x0070);
  1481   0007C8  0E70               	movlw	112
  1482   0007CA  6E46               	movwf	read_i2c@address^0,c
  1483   0007CC  0E00               	movlw	0
  1484   0007CE  6E47               	movwf	(read_i2c@address+1)^0,c
  1485   0007D0  0E00               	movlw	0
  1486   0007D2  6E48               	movwf	(read_i2c@address+2)^0,c
  1487   0007D4  0E00               	movlw	0
  1488   0007D6  6E49               	movwf	(read_i2c@address+3)^0,c
  1489   0007D8  EC32  F010         	call	_read_i2c	;wreg free
  1490   0007DC  C046  F01D         	movff	?_read_i2c,_ETemp
  1491   0007E0  C047  F01E         	movff	?_read_i2c+1,_ETemp+1
  1492   0007E4                     
  1493                           ;main.c: 416:     INTCONbits.GIE=1;
  1494   0007E4  8EF2               	bsf	242,7,c	;volatile
  1495   0007E6                     
  1496                           ;main.c: 418:     dutyCycle_reg = ETemp & 0xFF;
  1497   0007E6  501D               	movf	_ETemp^0,w,c
  1498   0007E8  6E07               	movwf	_dutyCycle_reg^0,c
  1499   0007EA  6A08               	clrf	(_dutyCycle_reg+1)^0,c
  1500   0007EC                     
  1501                           ;main.c: 420:     if(dutyCycle_reg != 0x00 && dutyCycle_reg != 0x01 && dutyCycle_reg != 
      +                          0x02 && dutyCycle_reg != 0x03)
  1502   0007EC  5007               	movf	_dutyCycle_reg^0,w,c
  1503   0007EE  1008               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1504   0007F0  B4D8               	btfsc	status,2,c
  1505   0007F2  EFFD  F003         	goto	u3591
  1506   0007F6  EFFF  F003         	goto	u3590
  1507   0007FA                     u3591:
  1508   0007FA  EF4A  F004         	goto	l5429
  1509   0007FE                     u3590:
  1510   0007FE  0407               	decf	_dutyCycle_reg^0,w,c
  1511   000800  1008               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1512   000802  B4D8               	btfsc	status,2,c
  1513   000804  EF06  F004         	goto	u3601
  1514   000808  EF08  F004         	goto	u3600
  1515   00080C                     u3601:
  1516   00080C  EF4A  F004         	goto	l5429
  1517   000810                     u3600:
  1518   000810  0E02               	movlw	2
  1519   000812  1807               	xorwf	_dutyCycle_reg^0,w,c
  1520   000814  1008               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1521   000816  B4D8               	btfsc	status,2,c
  1522   000818  EF10  F004         	goto	u3611
  1523   00081C  EF12  F004         	goto	u3610
  1524   000820                     u3611:
  1525   000820  EF4A  F004         	goto	l5429
  1526   000824                     u3610:
  1527   000824  0E03               	movlw	3
  1528   000826  1807               	xorwf	_dutyCycle_reg^0,w,c
  1529   000828  1008               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1530   00082A  B4D8               	btfsc	status,2,c
  1531   00082C  EF1A  F004         	goto	u3621
  1532   000830  EF1C  F004         	goto	u3620
  1533   000834                     u3621:
  1534   000834  EF4A  F004         	goto	l5429
  1535   000838                     u3620:
  1536   000838                     
  1537                           ;main.c: 421:     {;main.c: 422:         dutyCycle_reg = 0x00;
  1538   000838  0E00               	movlw	0
  1539   00083A  6E08               	movwf	(_dutyCycle_reg+1)^0,c
  1540   00083C  0E00               	movlw	0
  1541   00083E  6E07               	movwf	_dutyCycle_reg^0,c
  1542   000840                     
  1543                           ;main.c: 423:         INTCONbits.GIE=0;
  1544   000840  9EF2               	bcf	242,7,c	;volatile
  1545   000842                     
  1546                           ;main.c: 424:         write_i2c(0x0070,dutyCycle_reg);
  1547   000842  0E70               	movlw	112
  1548   000844  6E46               	movwf	write_i2c@address^0,c
  1549   000846  0E00               	movlw	0
  1550   000848  6E47               	movwf	(write_i2c@address+1)^0,c
  1551   00084A  0E00               	movlw	0
  1552   00084C  6E48               	movwf	(write_i2c@address+2)^0,c
  1553   00084E  0E00               	movlw	0
  1554   000850  6E49               	movwf	(write_i2c@address+3)^0,c
  1555   000852  C007  F04A         	movff	_dutyCycle_reg,write_i2c@data
  1556   000856  C008  F04B         	movff	_dutyCycle_reg+1,write_i2c@data+1
  1557   00085A  ECBA  F010         	call	_write_i2c	;wreg free
  1558   00085E                     
  1559                           ;main.c: 425:         INTCONbits.GIE=1;
  1560   00085E  8EF2               	bsf	242,7,c	;volatile
  1561                           
  1562                           ;main.c: 426:     }
  1563   000860  EF69  F004         	goto	l5431
  1564   000864                     l5417:
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;main.c: 430:           duty_cycle = 0;
  1568   000864  0E00               	movlw	0
  1569   000866  6E06               	movwf	(_duty_cycle+1)^0,c
  1570   000868  0E00               	movlw	0
  1571   00086A  6E05               	movwf	_duty_cycle^0,c
  1572                           
  1573                           ;main.c: 431:           break;
  1574   00086C  EF69  F004         	goto	l5431
  1575   000870                     l5419:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;main.c: 433:           duty_cycle = 9;
  1579   000870  0E00               	movlw	0
  1580   000872  6E06               	movwf	(_duty_cycle+1)^0,c
  1581   000874  0E09               	movlw	9
  1582   000876  6E05               	movwf	_duty_cycle^0,c
  1583                           
  1584                           ;main.c: 434:           break;
  1585   000878  EF69  F004         	goto	l5431
  1586   00087C                     l5421:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;main.c: 436:           duty_cycle = 14;
  1590   00087C  0E00               	movlw	0
  1591   00087E  6E06               	movwf	(_duty_cycle+1)^0,c
  1592   000880  0E0E               	movlw	14
  1593   000882  6E05               	movwf	_duty_cycle^0,c
  1594                           
  1595                           ;main.c: 437:           break;
  1596   000884  EF69  F004         	goto	l5431
  1597   000888                     l5423:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 439:           duty_cycle = 20;
  1601   000888  0E00               	movlw	0
  1602   00088A  6E06               	movwf	(_duty_cycle+1)^0,c
  1603   00088C  0E14               	movlw	20
  1604   00088E  6E05               	movwf	_duty_cycle^0,c
  1605                           
  1606                           ;main.c: 440:           break;
  1607   000890  EF69  F004         	goto	l5431
  1608   000894                     l5429:
  1609   000894  C007  F096         	movff	_dutyCycle_reg,??_main
  1610   000898  C008  F097         	movff	_dutyCycle_reg+1,??_main+1
  1611                           
  1612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 1, Range of values is 0 to 0
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte            4     3 (average)
  1618                           ;	Chosen strategy is simple_byte
  1619   00089C  0100               	movlb	0	; () banked
  1620   00089E  5197               	movf	(??_main+1)& (0+255),w,b
  1621   0008A0  0A00               	xorlw	0	; case 0
  1622   0008A2  B4D8               	btfsc	status,2,c
  1623   0008A4  EF56  F004         	goto	l6031
  1624   0008A8  EF32  F004         	goto	l5417
  1625   0008AC                     l6031:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ; Switch size 1, requested type "simple"
  1629                           ; Number of cases is 4, Range of values is 0 to 3
  1630                           ; switch strategies available:
  1631                           ; Name         Instructions Cycles
  1632                           ; simple_byte           13     7 (average)
  1633                           ;	Chosen strategy is simple_byte
  1634   0008AC  5196               	movf	??_main& (0+255),w,b
  1635   0008AE  0A00               	xorlw	0	; case 0
  1636   0008B0  B4D8               	btfsc	status,2,c
  1637   0008B2  EF32  F004         	goto	l5417
  1638   0008B6  0A01               	xorlw	1	; case 1
  1639   0008B8  B4D8               	btfsc	status,2,c
  1640   0008BA  EF38  F004         	goto	l5419
  1641   0008BE  0A03               	xorlw	3	; case 2
  1642   0008C0  B4D8               	btfsc	status,2,c
  1643   0008C2  EF3E  F004         	goto	l5421
  1644   0008C6  0A01               	xorlw	1	; case 3
  1645   0008C8  B4D8               	btfsc	status,2,c
  1646   0008CA  EF44  F004         	goto	l5423
  1647   0008CE  EF32  F004         	goto	l5417
  1648   0008D2                     l5431:
  1649                           
  1650                           ;main.c: 464:         pwm_set(duty_cycle);
  1651   0008D2  C005  F038         	movff	_duty_cycle,pwm_set@duty
  1652   0008D6  C006  F039         	movff	_duty_cycle+1,pwm_set@duty+1
  1653   0008DA  ECB0  F011         	call	_pwm_set	;wreg free
  1654   0008DE  0004               	clrwdt		;# 
  1655   0008E0                     
  1656                           ;main.c: 467:         errorcounter = 30;
  1657   0008E0  0E1E               	movlw	30
  1658   0008E2  6E52               	movwf	_errorcounter^0,c	;volatile
  1659   0008E4  0E00               	movlw	0
  1660   0008E6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1661   0008E8  0E00               	movlw	0
  1662   0008EA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1663   0008EC  0E00               	movlw	0
  1664   0008EE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1665   0008F0                     
  1666                           ;main.c: 468:         AD_capture_BattVoltage();
  1667   0008F0  EC21  F011         	call	_AD_capture_BattVoltage	;wreg free
  1668                           
  1669                           ;main.c: 470:         switch (OpMode) {
  1670   0008F4  EF45  F008         	goto	l5693
  1671   0008F8                     l233:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 476:                 NUM = NUM_REC;
  1675   0008F8  C00F  F013         	movff	_NUM_REC,_NUM
  1676   0008FC  C010  F014         	movff	_NUM_REC+1,_NUM+1
  1677                           
  1678                           ;main.c: 477:                 if (PORTBbits.RB4 == 0) {
  1679   000900  B881               	btfsc	129,4,c	;volatile
  1680   000902  EF85  F004         	goto	u3631
  1681   000906  EF87  F004         	goto	u3630
  1682   00090A                     u3631:
  1683   00090A  EFB8  F004         	goto	l234
  1684   00090E                     u3630:
  1685   00090E                     
  1686                           ; BSR set to: 0
  1687                           ;main.c: 478:                   duty_cycle = PWM_Selection(dutyCycle_reg);
  1688   00090E  C007  F04C         	movff	_dutyCycle_reg,PWM_Selection@msg
  1689   000912  C008  F04D         	movff	_dutyCycle_reg+1,PWM_Selection@msg+1
  1690   000916  EC0D  F00D         	call	_PWM_Selection	;wreg free
  1691   00091A  C04C  F005         	movff	?_PWM_Selection,_duty_cycle
  1692   00091E  C04D  F006         	movff	?_PWM_Selection+1,_duty_cycle+1
  1693                           
  1694                           ;main.c: 479:                   dutyCycle_reg = read_i2c(0x0070);
  1695   000922  0E70               	movlw	112
  1696   000924  6E46               	movwf	read_i2c@address^0,c
  1697   000926  0E00               	movlw	0
  1698   000928  6E47               	movwf	(read_i2c@address+1)^0,c
  1699   00092A  0E00               	movlw	0
  1700   00092C  6E48               	movwf	(read_i2c@address+2)^0,c
  1701   00092E  0E00               	movlw	0
  1702   000930  6E49               	movwf	(read_i2c@address+3)^0,c
  1703   000932  EC32  F010         	call	_read_i2c	;wreg free
  1704   000936  C046  F007         	movff	?_read_i2c,_dutyCycle_reg
  1705   00093A  C047  F008         	movff	?_read_i2c+1,_dutyCycle_reg+1
  1706                           
  1707                           ;main.c: 480:                   ToggleVIB_Mode();
  1708   00093E  EC02  F011         	call	_ToggleVIB_Mode	;wreg free
  1709                           
  1710                           ;main.c: 482:                   WriteSTLED316SVibMode(vibration_mode);
  1711   000942  502C               	movf	_vibration_mode^0,w,c
  1712   000944  EC93  F010         	call	_WriteSTLED316SVibMode
  1713   000948                     
  1714                           ;main.c: 483:                   _delay((unsigned long)((100)*(8000000/4000.0)));
  1715   000948  0E02               	movlw	2
  1716   00094A  0100               	movlb	0	; () banked
  1717   00094C  6F97               	movwf	(??_main+1)& (0+255),b
  1718   00094E  0E04               	movlw	4
  1719   000950  6F96               	movwf	??_main& (0+255),b
  1720   000952  0EBA               	movlw	186
  1721   000954                     u4007:
  1722   000954  2EE8               	decfsz	wreg,f,c
  1723   000956  D7FE               	bra	u4007
  1724   000958  2F96               	decfsz	??_main& (0+255),f,b
  1725   00095A  D7FC               	bra	u4007
  1726   00095C  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1727   00095E  D7FA               	bra	u4007
  1728   000960  F000               	nop	
  1729   000962                     l235:
  1730   000962  A881               	btfss	129,4,c	;volatile
  1731   000964  EFB6  F004         	goto	u3641
  1732   000968  EFB8  F004         	goto	u3640
  1733   00096C                     u3641:
  1734   00096C  EFB1  F004         	goto	l235
  1735   000970                     u3640:
  1736   000970                     l234:
  1737                           
  1738                           ;main.c: 507:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1739   000970  B681               	btfsc	129,3,c	;volatile
  1740   000972  EFBD  F004         	goto	u3651
  1741   000976  EFBF  F004         	goto	u3650
  1742   00097A                     u3651:
  1743   00097A  EF34  F005         	goto	l238
  1744   00097E                     u3650:
  1745   00097E  0E63               	movlw	99
  1746   000980  1813               	xorwf	_NUM^0,w,c
  1747   000982  1014               	iorwf	(_NUM+1)^0,w,c
  1748   000984  B4D8               	btfsc	status,2,c
  1749   000986  EFC7  F004         	goto	u3661
  1750   00098A  EFC9  F004         	goto	u3660
  1751   00098E                     u3661:
  1752   00098E  EF34  F005         	goto	l238
  1753   000992                     u3660:
  1754   000992                     
  1755                           ;main.c: 508:                     NUM = NUM + 1;
  1756   000992  0E01               	movlw	1
  1757   000994  2413               	addwf	_NUM^0,w,c
  1758   000996  6E13               	movwf	_NUM^0,c
  1759   000998  0E00               	movlw	0
  1760   00099A  2014               	addwfc	(_NUM+1)^0,w,c
  1761   00099C  6E14               	movwf	(_NUM+1)^0,c
  1762   00099E                     
  1763                           ;main.c: 510:                     WriteSTLED316SData(NUM, vibration_mode);
  1764   00099E  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1765   0009A2  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1766   0009A6  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1767   0009AA  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  1768   0009AE                     
  1769                           ;main.c: 511:                     _delay((unsigned long)((250)*(8000000/4000.0)));
  1770   0009AE  0E03               	movlw	3
  1771   0009B0  0100               	movlb	0	; () banked
  1772   0009B2  6F97               	movwf	(??_main+1)& (0+255),b
  1773   0009B4  0E8A               	movlw	138
  1774   0009B6  6F96               	movwf	??_main& (0+255),b
  1775   0009B8  0E55               	movlw	85
  1776   0009BA                     u4017:
  1777   0009BA  2EE8               	decfsz	wreg,f,c
  1778   0009BC  D7FE               	bra	u4017
  1779   0009BE  2F96               	decfsz	??_main& (0+255),f,b
  1780   0009C0  D7FC               	bra	u4017
  1781   0009C2  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1782   0009C4  D7FA               	bra	u4017
  1783   0009C6  D000               	nop2	
  1784                           
  1785                           ;main.c: 512:                     while (PORTBbits.RB3 == 0){
  1786   0009C8  EF2D  F005         	goto	l5467
  1787   0009CC                     l5449:
  1788                           
  1789                           ;main.c: 513:                       _delay((unsigned long)((1000)*(8000000/4000.0)));
  1790   0009CC  0E0B               	movlw	11
  1791   0009CE  0100               	movlb	0	; () banked
  1792   0009D0  6F97               	movwf	(??_main+1)& (0+255),b
  1793   0009D2  0E26               	movlw	38
  1794   0009D4  6F96               	movwf	??_main& (0+255),b
  1795   0009D6  0E5D               	movlw	93
  1796   0009D8                     u4027:
  1797   0009D8  2EE8               	decfsz	wreg,f,c
  1798   0009DA  D7FE               	bra	u4027
  1799   0009DC  2F96               	decfsz	??_main& (0+255),f,b
  1800   0009DE  D7FC               	bra	u4027
  1801   0009E0  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1802   0009E2  D7FA               	bra	u4027
  1803   0009E4  D000               	nop2	
  1804   0009E6                     
  1805                           ;main.c: 515:                       if(PORTBbits.RB3 == 0 && NUM <= 89)
  1806   0009E6  B681               	btfsc	129,3,c	;volatile
  1807   0009E8  EFF8  F004         	goto	u3671
  1808   0009EC  EFFA  F004         	goto	u3670
  1809   0009F0                     u3671:
  1810   0009F0  EF13  F005         	goto	l5459
  1811   0009F4                     u3670:
  1812   0009F4  5014               	movf	(_NUM+1)^0,w,c
  1813   0009F6  E107               	bnz	u3681
  1814   0009F8  0E5A               	movlw	90
  1815   0009FA  5C13               	subwf	_NUM^0,w,c
  1816   0009FC  B0D8               	btfsc	status,0,c
  1817   0009FE  EF03  F005         	goto	u3681
  1818   000A02  EF05  F005         	goto	u3680
  1819   000A06                     u3681:
  1820   000A06  EF13  F005         	goto	l5459
  1821   000A0A                     u3680:
  1822   000A0A                     
  1823                           ;main.c: 516:                       {;main.c: 517:                         NUM = NUM + 1
      +                          0;
  1824   000A0A  0E0A               	movlw	10
  1825   000A0C  2413               	addwf	_NUM^0,w,c
  1826   000A0E  6E13               	movwf	_NUM^0,c
  1827   000A10  0E00               	movlw	0
  1828   000A12  2014               	addwfc	(_NUM+1)^0,w,c
  1829   000A14  6E14               	movwf	(_NUM+1)^0,c
  1830   000A16                     
  1831                           ;main.c: 518:                         WriteSTLED316SData(NUM, vibration_mode);
  1832   000A16  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1833   000A1A  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1834   000A1E  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1835   000A22  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  1836   000A26                     l5459:
  1837                           
  1838                           ;main.c: 520:                       if(PORTBbits.RB3 == 0 && PORTAbits.RA5 == 0)
  1839   000A26  B681               	btfsc	129,3,c	;volatile
  1840   000A28  EF18  F005         	goto	u3691
  1841   000A2C  EF1A  F005         	goto	u3690
  1842   000A30                     u3691:
  1843   000A30  EF2D  F005         	goto	l5467
  1844   000A34                     u3690:
  1845   000A34  BA80               	btfsc	128,5,c	;volatile
  1846   000A36  EF1F  F005         	goto	u3701
  1847   000A3A  EF21  F005         	goto	u3700
  1848   000A3E                     u3701:
  1849   000A3E  EF2D  F005         	goto	l5467
  1850   000A42                     u3700:
  1851   000A42                     
  1852                           ;main.c: 521:                       {;main.c: 522:                           NUM = 0;
  1853   000A42  0E00               	movlw	0
  1854   000A44  6E14               	movwf	(_NUM+1)^0,c
  1855   000A46  0E00               	movlw	0
  1856   000A48  6E13               	movwf	_NUM^0,c
  1857   000A4A                     
  1858                           ;main.c: 523:                           WriteSTLED316SData(NUM, vibration_mode);
  1859   000A4A  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1860   000A4E  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1861   000A52  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1862   000A56  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  1863   000A5A                     l5467:
  1864                           
  1865                           ;main.c: 512:                     while (PORTBbits.RB3 == 0){
  1866   000A5A  A681               	btfss	129,3,c	;volatile
  1867   000A5C  EF32  F005         	goto	u3711
  1868   000A60  EF34  F005         	goto	u3710
  1869   000A64                     u3711:
  1870   000A64  EFE6  F004         	goto	l5449
  1871   000A68                     u3710:
  1872   000A68                     l238:
  1873                           
  1874                           ;main.c: 528:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  1875   000A68  BA80               	btfsc	128,5,c	;volatile
  1876   000A6A  EF39  F005         	goto	u3721
  1877   000A6E  EF3B  F005         	goto	u3720
  1878   000A72                     u3721:
  1879   000A72  EFAF  F005         	goto	l244
  1880   000A76                     u3720:
  1881   000A76  5013               	movf	_NUM^0,w,c
  1882   000A78  1014               	iorwf	(_NUM+1)^0,w,c
  1883   000A7A  B4D8               	btfsc	status,2,c
  1884   000A7C  EF42  F005         	goto	u3731
  1885   000A80  EF44  F005         	goto	u3730
  1886   000A84                     u3731:
  1887   000A84  EFAF  F005         	goto	l244
  1888   000A88                     u3730:
  1889   000A88                     
  1890                           ;main.c: 529:                     NUM = NUM - 1;
  1891   000A88  0EFF               	movlw	255
  1892   000A8A  2413               	addwf	_NUM^0,w,c
  1893   000A8C  6E13               	movwf	_NUM^0,c
  1894   000A8E  0EFF               	movlw	255
  1895   000A90  2014               	addwfc	(_NUM+1)^0,w,c
  1896   000A92  6E14               	movwf	(_NUM+1)^0,c
  1897   000A94                     
  1898                           ;main.c: 531:                     WriteSTLED316SData(NUM, vibration_mode);
  1899   000A94  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1900   000A98  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1901   000A9C  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1902   000AA0  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  1903   000AA4                     
  1904                           ;main.c: 532:                     _delay((unsigned long)((250)*(8000000/4000.0)));
  1905   000AA4  0E03               	movlw	3
  1906   000AA6  0100               	movlb	0	; () banked
  1907   000AA8  6F97               	movwf	(??_main+1)& (0+255),b
  1908   000AAA  0E8A               	movlw	138
  1909   000AAC  6F96               	movwf	??_main& (0+255),b
  1910   000AAE  0E55               	movlw	85
  1911   000AB0                     u4037:
  1912   000AB0  2EE8               	decfsz	wreg,f,c
  1913   000AB2  D7FE               	bra	u4037
  1914   000AB4  2F96               	decfsz	??_main& (0+255),f,b
  1915   000AB6  D7FC               	bra	u4037
  1916   000AB8  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1917   000ABA  D7FA               	bra	u4037
  1918   000ABC  D000               	nop2	
  1919                           
  1920                           ;main.c: 533:                     while (PORTAbits.RA5 == 0){
  1921   000ABE  EFA8  F005         	goto	l5495
  1922   000AC2                     l5477:
  1923                           
  1924                           ;main.c: 534:                       _delay((unsigned long)((1000)*(8000000/4000.0)));
  1925   000AC2  0E0B               	movlw	11
  1926   000AC4  0100               	movlb	0	; () banked
  1927   000AC6  6F97               	movwf	(??_main+1)& (0+255),b
  1928   000AC8  0E26               	movlw	38
  1929   000ACA  6F96               	movwf	??_main& (0+255),b
  1930   000ACC  0E5D               	movlw	93
  1931   000ACE                     u4047:
  1932   000ACE  2EE8               	decfsz	wreg,f,c
  1933   000AD0  D7FE               	bra	u4047
  1934   000AD2  2F96               	decfsz	??_main& (0+255),f,b
  1935   000AD4  D7FC               	bra	u4047
  1936   000AD6  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1937   000AD8  D7FA               	bra	u4047
  1938   000ADA  D000               	nop2	
  1939   000ADC                     
  1940                           ;main.c: 536:                       if(PORTAbits.RA5 == 0 && NUM >= 10){
  1941   000ADC  BA80               	btfsc	128,5,c	;volatile
  1942   000ADE  EF73  F005         	goto	u3741
  1943   000AE2  EF75  F005         	goto	u3740
  1944   000AE6                     u3741:
  1945   000AE6  EF8E  F005         	goto	l5487
  1946   000AEA                     u3740:
  1947   000AEA  5014               	movf	(_NUM+1)^0,w,c
  1948   000AEC  E109               	bnz	u3750
  1949   000AEE  0E0A               	movlw	10
  1950   000AF0  5C13               	subwf	_NUM^0,w,c
  1951   000AF2  A0D8               	btfss	status,0,c
  1952   000AF4  EF7E  F005         	goto	u3751
  1953   000AF8  EF80  F005         	goto	u3750
  1954   000AFC                     u3751:
  1955   000AFC  EF8E  F005         	goto	l5487
  1956   000B00                     u3750:
  1957   000B00                     
  1958                           ;main.c: 537:                         NUM = NUM - 10;
  1959   000B00  0EF6               	movlw	246
  1960   000B02  2413               	addwf	_NUM^0,w,c
  1961   000B04  6E13               	movwf	_NUM^0,c
  1962   000B06  0EFF               	movlw	255
  1963   000B08  2014               	addwfc	(_NUM+1)^0,w,c
  1964   000B0A  6E14               	movwf	(_NUM+1)^0,c
  1965   000B0C                     
  1966                           ;main.c: 538:                         WriteSTLED316SData(NUM, vibration_mode);
  1967   000B0C  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1968   000B10  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1969   000B14  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1970   000B18  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  1971   000B1C                     l5487:
  1972                           
  1973                           ;main.c: 540:                       if(PORTAbits.RA5 == 0 && PORTBbits.RB3 == 0)
  1974   000B1C  BA80               	btfsc	128,5,c	;volatile
  1975   000B1E  EF93  F005         	goto	u3761
  1976   000B22  EF95  F005         	goto	u3760
  1977   000B26                     u3761:
  1978   000B26  EFA8  F005         	goto	l5495
  1979   000B2A                     u3760:
  1980   000B2A  B681               	btfsc	129,3,c	;volatile
  1981   000B2C  EF9A  F005         	goto	u3771
  1982   000B30  EF9C  F005         	goto	u3770
  1983   000B34                     u3771:
  1984   000B34  EFA8  F005         	goto	l5495
  1985   000B38                     u3770:
  1986   000B38                     
  1987                           ;main.c: 541:                       {;main.c: 542:                           NUM = 0;
  1988   000B38  0E00               	movlw	0
  1989   000B3A  6E14               	movwf	(_NUM+1)^0,c
  1990   000B3C  0E00               	movlw	0
  1991   000B3E  6E13               	movwf	_NUM^0,c
  1992   000B40                     
  1993                           ;main.c: 543:                           WriteSTLED316SData(NUM, vibration_mode);
  1994   000B40  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  1995   000B44  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1996   000B48  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1997   000B4C  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  1998   000B50                     l5495:
  1999                           
  2000                           ;main.c: 533:                     while (PORTAbits.RA5 == 0){
  2001   000B50  AA80               	btfss	128,5,c	;volatile
  2002   000B52  EFAD  F005         	goto	u3781
  2003   000B56  EFAF  F005         	goto	u3780
  2004   000B5A                     u3781:
  2005   000B5A  EF61  F005         	goto	l5477
  2006   000B5E                     u3780:
  2007   000B5E                     l244:
  2008                           
  2009                           ;main.c: 548:                 if (PORTAbits.RA4 == 0 && NUM <= 89) {
  2010   000B5E  B880               	btfsc	128,4,c	;volatile
  2011   000B60  EFB4  F005         	goto	u3791
  2012   000B64  EFB6  F005         	goto	u3790
  2013   000B68                     u3791:
  2014   000B68  EFCE  F005         	goto	l250
  2015   000B6C                     u3790:
  2016   000B6C  5014               	movf	(_NUM+1)^0,w,c
  2017   000B6E  E107               	bnz	u3801
  2018   000B70  0E5A               	movlw	90
  2019   000B72  5C13               	subwf	_NUM^0,w,c
  2020   000B74  B0D8               	btfsc	status,0,c
  2021   000B76  EFBF  F005         	goto	u3801
  2022   000B7A  EFC1  F005         	goto	u3800
  2023   000B7E                     u3801:
  2024   000B7E  EFCE  F005         	goto	l250
  2025   000B82                     u3800:
  2026   000B82                     
  2027                           ;main.c: 549:                     NUM = NUM + 10;
  2028   000B82  0E0A               	movlw	10
  2029   000B84  2413               	addwf	_NUM^0,w,c
  2030   000B86  6E13               	movwf	_NUM^0,c
  2031   000B88  0E00               	movlw	0
  2032   000B8A  2014               	addwfc	(_NUM+1)^0,w,c
  2033   000B8C  6E14               	movwf	(_NUM+1)^0,c
  2034   000B8E                     l251:
  2035   000B8E  A880               	btfss	128,4,c	;volatile
  2036   000B90  EFCC  F005         	goto	u3811
  2037   000B94  EFCE  F005         	goto	u3810
  2038   000B98                     u3811:
  2039   000B98  EFC7  F005         	goto	l251
  2040   000B9C                     u3810:
  2041   000B9C                     l250:
  2042                           
  2043                           ;main.c: 553:                 if (PORTAbits.RA3 == 0 && NUM >= 10) {
  2044   000B9C  B680               	btfsc	128,3,c	;volatile
  2045   000B9E  EFD3  F005         	goto	u3821
  2046   000BA2  EFD5  F005         	goto	u3820
  2047   000BA6                     u3821:
  2048   000BA6  EFED  F005         	goto	l254
  2049   000BAA                     u3820:
  2050   000BAA  5014               	movf	(_NUM+1)^0,w,c
  2051   000BAC  E109               	bnz	u3830
  2052   000BAE  0E0A               	movlw	10
  2053   000BB0  5C13               	subwf	_NUM^0,w,c
  2054   000BB2  A0D8               	btfss	status,0,c
  2055   000BB4  EFDE  F005         	goto	u3831
  2056   000BB8  EFE0  F005         	goto	u3830
  2057   000BBC                     u3831:
  2058   000BBC  EFED  F005         	goto	l254
  2059   000BC0                     u3830:
  2060   000BC0                     
  2061                           ;main.c: 554:                     NUM = NUM - 10;
  2062   000BC0  0EF6               	movlw	246
  2063   000BC2  2413               	addwf	_NUM^0,w,c
  2064   000BC4  6E13               	movwf	_NUM^0,c
  2065   000BC6  0EFF               	movlw	255
  2066   000BC8  2014               	addwfc	(_NUM+1)^0,w,c
  2067   000BCA  6E14               	movwf	(_NUM+1)^0,c
  2068   000BCC                     l255:
  2069   000BCC  A680               	btfss	128,3,c	;volatile
  2070   000BCE  EFEB  F005         	goto	u3841
  2071   000BD2  EFED  F005         	goto	u3840
  2072   000BD6                     u3841:
  2073   000BD6  EFE6  F005         	goto	l255
  2074   000BDA                     u3840:
  2075   000BDA                     l254:
  2076                           
  2077                           ;main.c: 558:                 NUM_REC = NUM;
  2078   000BDA  C013  F00F         	movff	_NUM,_NUM_REC
  2079   000BDE  C014  F010         	movff	_NUM+1,_NUM_REC+1
  2080   000BE2                     
  2081                           ;main.c: 559:                 WriteSTLED316SData(NUM, vibration_mode);
  2082   000BE2  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  2083   000BE6  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2084   000BEA  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2085   000BEE  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  2086   000BF2                     
  2087                           ;main.c: 562:                 if(dispense == 1)
  2088   000BF2  0401               	decf	_dispense^0,w,c
  2089   000BF4  1002               	iorwf	(_dispense+1)^0,w,c
  2090   000BF6  A4D8               	btfss	status,2,c
  2091   000BF8  EF00  F006         	goto	u3851
  2092   000BFC  EF02  F006         	goto	u3850
  2093   000C00                     u3851:
  2094   000C00  EF12  F006         	goto	l5517
  2095   000C04                     u3850:
  2096   000C04                     
  2097                           ;main.c: 563:                 {;main.c: 564:                     Busy = 1;
  2098   000C04  0E01               	movlw	1
  2099   000C06  6E2D               	movwf	_Busy^0,c
  2100                           
  2101                           ;main.c: 565:                     errorcounter = 30;
  2102   000C08  0E1E               	movlw	30
  2103   000C0A  6E52               	movwf	_errorcounter^0,c	;volatile
  2104   000C0C  0E00               	movlw	0
  2105   000C0E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2106   000C10  0E00               	movlw	0
  2107   000C12  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2108   000C14  0E00               	movlw	0
  2109   000C16  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2110   000C18                     
  2111                           ;main.c: 566:                     Homing_Again_Manual();
  2112   000C18  EC5D  F008         	call	_Homing_Again_Manual	;wreg free
  2113   000C1C                     
  2114                           ;main.c: 567:                     Stop = 0;
  2115   000C1C  0E00               	movlw	0
  2116   000C1E  6E2F               	movwf	_Stop^0,c
  2117   000C20                     
  2118                           ;main.c: 568:                     Busy = 0;
  2119   000C20  0E00               	movlw	0
  2120   000C22  6E2D               	movwf	_Busy^0,c
  2121   000C24                     l5517:
  2122                           
  2123                           ;main.c: 582:                 if (Serial_Flag == 1) {
  2124   000C24  0431               	decf	_Serial_Flag^0,w,c
  2125   000C26  A4D8               	btfss	status,2,c
  2126   000C28  EF18  F006         	goto	u3861
  2127   000C2C  EF1A  F006         	goto	u3860
  2128   000C30                     u3861:
  2129   000C30  EF41  F008         	goto	l5691
  2130   000C34                     u3860:
  2131   000C34  EF17  F008         	goto	l5687
  2132   000C38                     l5521:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 587:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  2136   000C38  0EF1               	movlw	241
  2137   000C3A  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2138   000C3C  A4D8               	btfss	status,2,c
  2139   000C3E  EF23  F006         	goto	u3871
  2140   000C42  EF25  F006         	goto	u3870
  2141   000C46                     u3871:
  2142   000C46  EF41  F006         	goto	l5531
  2143   000C4A                     u3870:
  2144   000C4A                     
  2145                           ; BSR set to: 0
  2146   000C4A  502D               	movf	_Busy^0,w,c
  2147   000C4C  A4D8               	btfss	status,2,c
  2148   000C4E  EF2B  F006         	goto	u3881
  2149   000C52  EF2D  F006         	goto	u3880
  2150   000C56                     u3881:
  2151   000C56  EF41  F006         	goto	l5531
  2152   000C5A                     u3880:
  2153   000C5A                     
  2154                           ; BSR set to: 0
  2155                           ;main.c: 588:                             {;main.c: 589:                                
      +                           Stop = 0;
  2156   000C5A  0E00               	movlw	0
  2157   000C5C  6E2F               	movwf	_Stop^0,c
  2158                           
  2159                           ;main.c: 590:                                 Busy = 1;
  2160   000C5E  0E01               	movlw	1
  2161   000C60  6E2D               	movwf	_Busy^0,c
  2162   000C62                     
  2163                           ; BSR set to: 0
  2164                           ;main.c: 591:                                 NUM = NUM_REC;
  2165   000C62  C00F  F013         	movff	_NUM_REC,_NUM
  2166   000C66  C010  F014         	movff	_NUM_REC+1,_NUM+1
  2167                           
  2168                           ;main.c: 593:                                 errorcounter = 30;
  2169   000C6A  0E1E               	movlw	30
  2170   000C6C  6E52               	movwf	_errorcounter^0,c	;volatile
  2171   000C6E  0E00               	movlw	0
  2172   000C70  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2173   000C72  0E00               	movlw	0
  2174   000C74  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2175   000C76  0E00               	movlw	0
  2176   000C78  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2177   000C7A                     
  2178                           ; BSR set to: 0
  2179                           ;main.c: 594:                                 Homing_Again_Auto();
  2180   000C7A  EC6E  F00A         	call	_Homing_Again_Auto	;wreg free
  2181                           
  2182                           ;main.c: 596:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  2183   000C7E  EF9F  F006         	goto	l5561
  2184   000C82                     l5531:
  2185                           
  2186                           ; BSR set to: 0
  2187   000C82  0EF2               	movlw	242
  2188   000C84  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2189   000C86  A4D8               	btfss	status,2,c
  2190   000C88  EF48  F006         	goto	u3891
  2191   000C8C  EF4A  F006         	goto	u3890
  2192   000C90                     u3891:
  2193   000C90  EF9F  F006         	goto	l5561
  2194   000C94                     u3890:
  2195   000C94                     
  2196                           ; BSR set to: 0
  2197   000C94  502D               	movf	_Busy^0,w,c
  2198   000C96  A4D8               	btfss	status,2,c
  2199   000C98  EF50  F006         	goto	u3901
  2200   000C9C  EF52  F006         	goto	u3900
  2201   000CA0                     u3901:
  2202   000CA0  EF9F  F006         	goto	l5561
  2203   000CA4                     u3900:
  2204   000CA4                     
  2205                           ; BSR set to: 0
  2206                           ;main.c: 597:                             {;main.c: 598:                                
      +                           Stop = 0;
  2207   000CA4  0E00               	movlw	0
  2208   000CA6  6E2F               	movwf	_Stop^0,c
  2209                           
  2210                           ;main.c: 599:                                 Busy = 1;
  2211   000CA8  0E01               	movlw	1
  2212   000CAA  6E2D               	movwf	_Busy^0,c
  2213   000CAC                     
  2214                           ; BSR set to: 0
  2215                           ;main.c: 600:                                 NUM = NUM_REC;
  2216   000CAC  C00F  F013         	movff	_NUM_REC,_NUM
  2217   000CB0  C010  F014         	movff	_NUM_REC+1,_NUM+1
  2218   000CB4                     
  2219                           ; BSR set to: 0
  2220                           ;main.c: 601:                                 WriteSTLED316SData(NUM, vibration_mode);
  2221   000CB4  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  2222   000CB8  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2223   000CBC  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2224   000CC0  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  2225   000CC4                     
  2226                           ;main.c: 603:                                 errorcounter = 30;
  2227   000CC4  0E1E               	movlw	30
  2228   000CC6  6E52               	movwf	_errorcounter^0,c	;volatile
  2229   000CC8  0E00               	movlw	0
  2230   000CCA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2231   000CCC  0E00               	movlw	0
  2232   000CCE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2233   000CD0  0E00               	movlw	0
  2234   000CD2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2235   000CD4                     
  2236                           ;main.c: 604:                                 Homing_Again_Manual();
  2237   000CD4  EC5D  F008         	call	_Homing_Again_Manual	;wreg free
  2238   000CD8                     
  2239                           ;main.c: 607:                                 if (Stop == 0) {
  2240   000CD8  502F               	movf	_Stop^0,w,c
  2241   000CDA  A4D8               	btfss	status,2,c
  2242   000CDC  EF72  F006         	goto	u3911
  2243   000CE0  EF74  F006         	goto	u3910
  2244   000CE4                     u3911:
  2245   000CE4  EF9F  F006         	goto	l5561
  2246   000CE8                     u3910:
  2247   000CE8                     
  2248                           ;main.c: 608:                                     Serial_Buffer_Out[0] = 0xA5;
  2249   000CE8  0EA5               	movlw	165
  2250   000CEA  0100               	movlb	0	; () banked
  2251   000CEC  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2252                           
  2253                           ;main.c: 609:                                     Serial_Buffer_Out[1] = 0x44;
  2254   000CEE  0E44               	movlw	68
  2255   000CF0  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  2256                           
  2257                           ;main.c: 610:                                     Serial_Buffer_Out[2] = 0xF9;
  2258   000CF2  0EF9               	movlw	249
  2259   000CF4  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  2260                           
  2261                           ;main.c: 611:                                     Serial_Buffer_Out[3] = 0X3D;
  2262   000CF6  0E3D               	movlw	61
  2263   000CF8  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  2264                           
  2265                           ;main.c: 612:                                     Serial_Buffer_Out[4] = 0x5A;
  2266   000CFA  0E5A               	movlw	90
  2267   000CFC  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  2268   000CFE                     
  2269                           ; BSR set to: 0
  2270                           ;main.c: 614:                                     INTCONbits.GIE = 0;
  2271   000CFE  9EF2               	bcf	242,7,c	;volatile
  2272                           
  2273                           ;main.c: 615:                                     for (i = 0; i < 5; i++) {
  2274   000D00  0E00               	movlw	0
  2275   000D02  6E0E               	movwf	(_i+1)^0,c
  2276   000D04  0E00               	movlw	0
  2277   000D06  6E0D               	movwf	_i^0,c
  2278   000D08                     l5551:
  2279   000D08  500E               	movf	(_i+1)^0,w,c
  2280   000D0A  E109               	bnz	u3920
  2281   000D0C  0E05               	movlw	5
  2282   000D0E  5C0D               	subwf	_i^0,w,c
  2283   000D10  A0D8               	btfss	status,0,c
  2284   000D12  EF8D  F006         	goto	u3921
  2285   000D16  EF8F  F006         	goto	u3920
  2286   000D1A                     u3921:
  2287   000D1A  EF91  F006         	goto	l5555
  2288   000D1E                     u3920:
  2289   000D1E  EF9E  F006         	goto	l268
  2290   000D22                     l5555:
  2291                           
  2292                           ;main.c: 616:                                         Write1USART(Serial_Buffer_Out[i]);
  2293   000D22  0E60               	movlw	low _Serial_Buffer_Out
  2294   000D24  240D               	addwf	_i^0,w,c
  2295   000D26  6ED9               	movwf	fsr2l,c
  2296   000D28  0E00               	movlw	high _Serial_Buffer_Out
  2297   000D2A  200E               	addwfc	(_i+1)^0,w,c
  2298   000D2C  6EDA               	movwf	fsr2h,c
  2299   000D2E  50DF               	movf	indf2,w,c
  2300   000D30  EC3F  F012         	call	_Write1USART
  2301   000D34                     
  2302                           ;main.c: 617:                                     }
  2303   000D34  4A0D               	infsnz	_i^0,f,c
  2304   000D36  2A0E               	incf	(_i+1)^0,f,c
  2305   000D38  EF84  F006         	goto	l5551
  2306   000D3C                     l268:
  2307                           
  2308                           ;main.c: 618:                                     INTCONbits.GIE = 1;
  2309   000D3C  8EF2               	bsf	242,7,c	;volatile
  2310   000D3E                     l5561:
  2311                           
  2312                           ;main.c: 622:                             flush();
  2313   000D3E  EC40  F011         	call	_flush	;wreg free
  2314                           
  2315                           ;main.c: 623:                             flushOut();
  2316   000D42  EC5D  F011         	call	_flushOut	;wreg free
  2317   000D46                     
  2318                           ;main.c: 624:                             Stop = 0;
  2319   000D46  0E00               	movlw	0
  2320   000D48  6E2F               	movwf	_Stop^0,c
  2321   000D4A                     l5565:
  2322                           
  2323                           ;main.c: 625:                             Busy = 0;
  2324   000D4A  0E00               	movlw	0
  2325   000D4C  6E2D               	movwf	_Busy^0,c
  2326                           
  2327                           ;main.c: 626:                             break;
  2328   000D4E  EF39  F008         	goto	l5689
  2329   000D52                     l5567:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 631:                             if (Busy == 0) {
  2333   000D52  502D               	movf	_Busy^0,w,c
  2334   000D54  A4D8               	btfss	status,2,c
  2335   000D56  EFAF  F006         	goto	u3931
  2336   000D5A  EFB1  F006         	goto	u3930
  2337   000D5E                     u3931:
  2338   000D5E  EF39  F008         	goto	l5689
  2339   000D62                     u3930:
  2340   000D62                     
  2341                           ; BSR set to: 0
  2342                           ;main.c: 632:                                 Busy = 1;
  2343   000D62  0E01               	movlw	1
  2344   000D64  6E2D               	movwf	_Busy^0,c
  2345   000D66                     
  2346                           ; BSR set to: 0
  2347                           ;main.c: 636:                                 pause_Time = Serial_Buffer[2];
  2348   000D66  C082  F029         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  2349                           
  2350                           ;main.c: 637:                                 switch (pause_Time) {
  2351   000D6A  EFDD  F006         	goto	l5587
  2352   000D6E                     l5573:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;main.c: 640:                                         Motor_Pause_Time = 0;
  2356   000D6E  0E00               	movlw	0
  2357   000D70  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2358   000D72  0E00               	movlw	0
  2359   000D74  6E15               	movwf	_Motor_Pause_Time^0,c
  2360                           
  2361                           ;main.c: 641:                                         pause_Time = 0x30;
  2362   000D76  0E30               	movlw	48
  2363   000D78  6E29               	movwf	_pause_Time^0,c	;volatile
  2364                           
  2365                           ;main.c: 642:                                         break;
  2366   000D7A  EF02  F007         	goto	l275
  2367   000D7E                     l5575:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;main.c: 645:                                         Motor_Pause_Time = 1000;
  2371   000D7E  0E03               	movlw	3
  2372   000D80  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2373   000D82  0EE8               	movlw	232
  2374   000D84  6E15               	movwf	_Motor_Pause_Time^0,c
  2375                           
  2376                           ;main.c: 646:                                         break;
  2377   000D86  EF02  F007         	goto	l275
  2378   000D8A                     l5577:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 649:                                         Motor_Pause_Time = 2000;
  2382   000D8A  0E07               	movlw	7
  2383   000D8C  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2384   000D8E  0ED0               	movlw	208
  2385   000D90  6E15               	movwf	_Motor_Pause_Time^0,c
  2386                           
  2387                           ;main.c: 650:                                         break;
  2388   000D92  EF02  F007         	goto	l275
  2389   000D96                     l5579:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;main.c: 653:                                         Motor_Pause_Time = 3000;
  2393   000D96  0E0B               	movlw	11
  2394   000D98  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2395   000D9A  0EB8               	movlw	184
  2396   000D9C  6E15               	movwf	_Motor_Pause_Time^0,c
  2397                           
  2398                           ;main.c: 654:                                         break;
  2399   000D9E  EF02  F007         	goto	l275
  2400   000DA2                     l5581:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;main.c: 657:                                         Motor_Pause_Time = 4000;
  2404   000DA2  0E0F               	movlw	15
  2405   000DA4  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2406   000DA6  0EA0               	movlw	160
  2407   000DA8  6E15               	movwf	_Motor_Pause_Time^0,c
  2408                           
  2409                           ;main.c: 658:                                         break;
  2410   000DAA  EF02  F007         	goto	l275
  2411   000DAE                     l5583:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 661:                                         Motor_Pause_Time = 5000;
  2415   000DAE  0E13               	movlw	19
  2416   000DB0  6E16               	movwf	(_Motor_Pause_Time+1)^0,c
  2417   000DB2  0E88               	movlw	136
  2418   000DB4  6E15               	movwf	_Motor_Pause_Time^0,c
  2419                           
  2420                           ;main.c: 662:                                         break;
  2421   000DB6  EF02  F007         	goto	l275
  2422   000DBA                     l5587:
  2423                           
  2424                           ; BSR set to: 0
  2425   000DBA  5029               	movf	_pause_Time^0,w,c	;volatile
  2426   000DBC  6F96               	movwf	??_main& (0+255),b
  2427   000DBE  6B97               	clrf	(??_main+1)& (0+255),b
  2428                           
  2429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2430                           ; Switch size 1, requested type "simple"
  2431                           ; Number of cases is 1, Range of values is 0 to 0
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte            4     3 (average)
  2435                           ;	Chosen strategy is simple_byte
  2436   000DC0  5197               	movf	(??_main+1)& (0+255),w,b
  2437   000DC2  0A00               	xorlw	0	; case 0
  2438   000DC4  B4D8               	btfsc	status,2,c
  2439   000DC6  EFE7  F006         	goto	l6033
  2440   000DCA  EFB7  F006         	goto	l5573
  2441   000DCE                     l6033:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ; Switch size 1, requested type "simple"
  2445                           ; Number of cases is 6, Range of values is 48 to 53
  2446                           ; switch strategies available:
  2447                           ; Name         Instructions Cycles
  2448                           ; simple_byte           19    10 (average)
  2449                           ;	Chosen strategy is simple_byte
  2450   000DCE  5196               	movf	??_main& (0+255),w,b
  2451   000DD0  0A30               	xorlw	48	; case 48
  2452   000DD2  B4D8               	btfsc	status,2,c
  2453   000DD4  EFB7  F006         	goto	l5573
  2454   000DD8  0A01               	xorlw	1	; case 49
  2455   000DDA  B4D8               	btfsc	status,2,c
  2456   000DDC  EFBF  F006         	goto	l5575
  2457   000DE0  0A03               	xorlw	3	; case 50
  2458   000DE2  B4D8               	btfsc	status,2,c
  2459   000DE4  EFC5  F006         	goto	l5577
  2460   000DE8  0A01               	xorlw	1	; case 51
  2461   000DEA  B4D8               	btfsc	status,2,c
  2462   000DEC  EFCB  F006         	goto	l5579
  2463   000DF0  0A07               	xorlw	7	; case 52
  2464   000DF2  B4D8               	btfsc	status,2,c
  2465   000DF4  EFD1  F006         	goto	l5581
  2466   000DF8  0A01               	xorlw	1	; case 53
  2467   000DFA  B4D8               	btfsc	status,2,c
  2468   000DFC  EFD7  F006         	goto	l5583
  2469   000E00  EFB7  F006         	goto	l5573
  2470   000E04                     l275:
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;main.c: 667:                                 INTCONbits.GIE = 0;
  2474   000E04  9EF2               	bcf	242,7,c	;volatile
  2475   000E06                     
  2476                           ; BSR set to: 0
  2477                           ;main.c: 668:                                 write_i2c(0x0060, pause_Time);
  2478   000E06  0E60               	movlw	96
  2479   000E08  6E46               	movwf	write_i2c@address^0,c
  2480   000E0A  0E00               	movlw	0
  2481   000E0C  6E47               	movwf	(write_i2c@address+1)^0,c
  2482   000E0E  0E00               	movlw	0
  2483   000E10  6E48               	movwf	(write_i2c@address+2)^0,c
  2484   000E12  0E00               	movlw	0
  2485   000E14  6E49               	movwf	(write_i2c@address+3)^0,c
  2486   000E16  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
  2487   000E1A  6A4B               	clrf	(write_i2c@data+1)^0,c
  2488   000E1C  ECBA  F010         	call	_write_i2c	;wreg free
  2489   000E20                     
  2490                           ;main.c: 669:                                 INTCONbits.GIE = 1;
  2491   000E20  8EF2               	bsf	242,7,c	;volatile
  2492   000E22                     
  2493                           ;main.c: 671:                                 flush();
  2494   000E22  EC40  F011         	call	_flush	;wreg free
  2495   000E26  EFA5  F006         	goto	l5565
  2496   000E2A                     l5597:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 679:                             if (Busy == 0) {
  2500   000E2A  502D               	movf	_Busy^0,w,c
  2501   000E2C  A4D8               	btfss	status,2,c
  2502   000E2E  EF1B  F007         	goto	u3941
  2503   000E32  EF1D  F007         	goto	u3940
  2504   000E36                     u3941:
  2505   000E36  EF39  F008         	goto	l5689
  2506   000E3A                     u3940:
  2507   000E3A                     
  2508                           ; BSR set to: 0
  2509                           ;main.c: 680:                                 if (Serial_Buffer[2] == 0x00) {
  2510   000E3A  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  2511   000E3C  A4D8               	btfss	status,2,c
  2512   000E3E  EF23  F007         	goto	u3951
  2513   000E42  EF25  F007         	goto	u3950
  2514   000E46                     u3951:
  2515   000E46  EF93  F007         	goto	l5639
  2516   000E4A                     u3950:
  2517   000E4A                     
  2518                           ; BSR set to: 0
  2519                           ;main.c: 681:                                     Busy = 1;
  2520   000E4A  0E01               	movlw	1
  2521   000E4C  6E2D               	movwf	_Busy^0,c
  2522   000E4E                     
  2523                           ; BSR set to: 0
  2524                           ;main.c: 683:                                     INTCONbits.GIE = 0;
  2525   000E4E  9EF2               	bcf	242,7,c	;volatile
  2526   000E50                     
  2527                           ; BSR set to: 0
  2528                           ;main.c: 684:                                     pause_Time = read_i2c(0x0060);
  2529   000E50  0E60               	movlw	96
  2530   000E52  6E46               	movwf	read_i2c@address^0,c
  2531   000E54  0E00               	movlw	0
  2532   000E56  6E47               	movwf	(read_i2c@address+1)^0,c
  2533   000E58  0E00               	movlw	0
  2534   000E5A  6E48               	movwf	(read_i2c@address+2)^0,c
  2535   000E5C  0E00               	movlw	0
  2536   000E5E  6E49               	movwf	(read_i2c@address+3)^0,c
  2537   000E60  EC32  F010         	call	_read_i2c	;wreg free
  2538   000E64  5046               	movf	?_read_i2c^0,w,c
  2539   000E66  6E29               	movwf	_pause_Time^0,c	;volatile
  2540   000E68                     
  2541                           ;main.c: 685:                                     vib_Time = read_i2c(0x0040);
  2542   000E68  0E40               	movlw	64
  2543   000E6A  6E46               	movwf	read_i2c@address^0,c
  2544   000E6C  0E00               	movlw	0
  2545   000E6E  6E47               	movwf	(read_i2c@address+1)^0,c
  2546   000E70  0E00               	movlw	0
  2547   000E72  6E48               	movwf	(read_i2c@address+2)^0,c
  2548   000E74  0E00               	movlw	0
  2549   000E76  6E49               	movwf	(read_i2c@address+3)^0,c
  2550   000E78  EC32  F010         	call	_read_i2c	;wreg free
  2551   000E7C  5046               	movf	?_read_i2c^0,w,c
  2552   000E7E  6E28               	movwf	_vib_Time^0,c	;volatile
  2553   000E80                     
  2554                           ;main.c: 686:                                     Motor_Speed = read_i2c(0x0030);
  2555   000E80  0E30               	movlw	48
  2556   000E82  6E46               	movwf	read_i2c@address^0,c
  2557   000E84  0E00               	movlw	0
  2558   000E86  6E47               	movwf	(read_i2c@address+1)^0,c
  2559   000E88  0E00               	movlw	0
  2560   000E8A  6E48               	movwf	(read_i2c@address+2)^0,c
  2561   000E8C  0E00               	movlw	0
  2562   000E8E  6E49               	movwf	(read_i2c@address+3)^0,c
  2563   000E90  EC32  F010         	call	_read_i2c	;wreg free
  2564   000E94  C046  F01B         	movff	?_read_i2c,_Motor_Speed
  2565   000E98  C047  F01C         	movff	?_read_i2c+1,_Motor_Speed+1
  2566   000E9C                     
  2567                           ;main.c: 687:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2568   000E9C  0E50               	movlw	80
  2569   000E9E  6E46               	movwf	read_i2c@address^0,c
  2570   000EA0  0E00               	movlw	0
  2571   000EA2  6E47               	movwf	(read_i2c@address+1)^0,c
  2572   000EA4  0E00               	movlw	0
  2573   000EA6  6E48               	movwf	(read_i2c@address+2)^0,c
  2574   000EA8  0E00               	movlw	0
  2575   000EAA  6E49               	movwf	(read_i2c@address+3)^0,c
  2576   000EAC  EC32  F010         	call	_read_i2c	;wreg free
  2577   000EB0  5046               	movf	?_read_i2c^0,w,c
  2578   000EB2  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  2579   000EB4                     
  2580                           ;main.c: 688:                                     INTCONbits.GIE = 1;
  2581   000EB4  8EF2               	bsf	242,7,c	;volatile
  2582                           
  2583                           ;main.c: 690:                                     Serial_Buffer_Out[0] = 0x51;
  2584   000EB6  0E51               	movlw	81
  2585   000EB8  0100               	movlb	0	; () banked
  2586   000EBA  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2587   000EBC                     
  2588                           ; BSR set to: 0
  2589                           ;main.c: 691:                                     Serial_Buffer_Out[1] = pause_Time;
  2590   000EBC  C029  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2591   000EC0                     
  2592                           ; BSR set to: 0
  2593                           ;main.c: 692:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2594   000EC0  C01B  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2595   000EC4                     
  2596                           ; BSR set to: 0
  2597                           ;main.c: 693:                                     Serial_Buffer_Out[3] = vib_Time;
  2598   000EC4  C028  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2599   000EC8                     
  2600                           ; BSR set to: 0
  2601                           ;main.c: 694:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2602   000EC8  C027  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2603   000ECC                     
  2604                           ; BSR set to: 0
  2605                           ;main.c: 696:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2606   000ECC  0E02               	movlw	2
  2607   000ECE  0100               	movlb	0	; () banked
  2608   000ED0  6F97               	movwf	(??_main+1)& (0+255),b
  2609   000ED2  0E04               	movlw	4
  2610   000ED4  6F96               	movwf	??_main& (0+255),b
  2611   000ED6  0EBA               	movlw	186
  2612   000ED8                     u4057:
  2613   000ED8  2EE8               	decfsz	wreg,f,c
  2614   000EDA  D7FE               	bra	u4057
  2615   000EDC  2F96               	decfsz	??_main& (0+255),f,b
  2616   000EDE  D7FC               	bra	u4057
  2617   000EE0  2F97               	decfsz	(??_main+1)& (0+255),f,b
  2618   000EE2  D7FA               	bra	u4057
  2619   000EE4  F000               	nop	
  2620   000EE6                     
  2621                           ;main.c: 698:                                     INTCONbits.GIE = 0;
  2622   000EE6  9EF2               	bcf	242,7,c	;volatile
  2623   000EE8                     
  2624                           ;main.c: 699:                                     for (i = 0; i < 5; i++) {
  2625   000EE8  0E00               	movlw	0
  2626   000EEA  6E0E               	movwf	(_i+1)^0,c
  2627   000EEC  0E00               	movlw	0
  2628   000EEE  6E0D               	movwf	_i^0,c
  2629   000EF0                     l5629:
  2630   000EF0  500E               	movf	(_i+1)^0,w,c
  2631   000EF2  E109               	bnz	u3960
  2632   000EF4  0E05               	movlw	5
  2633   000EF6  5C0D               	subwf	_i^0,w,c
  2634   000EF8  A0D8               	btfss	status,0,c
  2635   000EFA  EF81  F007         	goto	u3961
  2636   000EFE  EF83  F007         	goto	u3960
  2637   000F02                     u3961:
  2638   000F02  EF85  F007         	goto	l5633
  2639   000F06                     u3960:
  2640   000F06  EF92  F007         	goto	l285
  2641   000F0A                     l5633:
  2642                           
  2643                           ;main.c: 700:                                         Write1USART(Serial_Buffer_Out[i]);
  2644   000F0A  0E60               	movlw	low _Serial_Buffer_Out
  2645   000F0C  240D               	addwf	_i^0,w,c
  2646   000F0E  6ED9               	movwf	fsr2l,c
  2647   000F10  0E00               	movlw	high _Serial_Buffer_Out
  2648   000F12  200E               	addwfc	(_i+1)^0,w,c
  2649   000F14  6EDA               	movwf	fsr2h,c
  2650   000F16  50DF               	movf	indf2,w,c
  2651   000F18  EC3F  F012         	call	_Write1USART
  2652   000F1C                     
  2653                           ;main.c: 701:                                     }
  2654   000F1C  4A0D               	infsnz	_i^0,f,c
  2655   000F1E  2A0E               	incf	(_i+1)^0,f,c
  2656   000F20  EF78  F007         	goto	l5629
  2657   000F24                     l285:
  2658                           
  2659                           ;main.c: 702:                                     INTCONbits.GIE = 1;
  2660   000F24  8EF2               	bsf	242,7,c	;volatile
  2661   000F26                     l5639:
  2662                           
  2663                           ;main.c: 704:                                 flushOut();
  2664   000F26  EC5D  F011         	call	_flushOut	;wreg free
  2665   000F2A  EFA5  F006         	goto	l5565
  2666   000F2E                     l5643:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;main.c: 741:                             if (Busy == 0) {
  2670   000F2E  502D               	movf	_Busy^0,w,c
  2671   000F30  A4D8               	btfss	status,2,c
  2672   000F32  EF9D  F007         	goto	u3971
  2673   000F36  EF9F  F007         	goto	u3970
  2674   000F3A                     u3971:
  2675   000F3A  EFF7  F007         	goto	l5669
  2676   000F3E                     u3970:
  2677   000F3E                     
  2678                           ; BSR set to: 0
  2679                           ;main.c: 742:                                 Busy = 1;
  2680   000F3E  0E01               	movlw	1
  2681   000F40  6E2D               	movwf	_Busy^0,c
  2682   000F42                     
  2683                           ; BSR set to: 0
  2684                           ;main.c: 743:                                 vib_Time = Serial_Buffer[2];
  2685   000F42  C082  F028         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2686                           
  2687                           ;main.c: 745:                                 switch (vib_Time) {
  2688   000F46  EFC5  F007         	goto	l5661
  2689   000F4A                     l5649:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;main.c: 747:                                         Vmotor_Time = 1000;
  2693   000F4A  0E03               	movlw	3
  2694   000F4C  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2695   000F4E  0EE8               	movlw	232
  2696   000F50  6E56               	movwf	_Vmotor_Time^0,c
  2697                           
  2698                           ;main.c: 748:                                         break;
  2699   000F52  EFE6  F007         	goto	l290
  2700   000F56                     l5651:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;main.c: 752:                                         Vmotor_Time = 2000;
  2704   000F56  0E07               	movlw	7
  2705   000F58  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2706   000F5A  0ED0               	movlw	208
  2707   000F5C  6E56               	movwf	_Vmotor_Time^0,c
  2708                           
  2709                           ;main.c: 753:                                         vib_Time = 0x82;
  2710   000F5E  0E82               	movlw	130
  2711   000F60  6E28               	movwf	_vib_Time^0,c	;volatile
  2712                           
  2713                           ;main.c: 754:                                         break;
  2714   000F62  EFE6  F007         	goto	l290
  2715   000F66                     l5653:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;main.c: 757:                                         Vmotor_Time = 3000;
  2719   000F66  0E0B               	movlw	11
  2720   000F68  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2721   000F6A  0EB8               	movlw	184
  2722   000F6C  6E56               	movwf	_Vmotor_Time^0,c
  2723                           
  2724                           ;main.c: 758:                                         break;
  2725   000F6E  EFE6  F007         	goto	l290
  2726   000F72                     l5655:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;main.c: 761:                                         Vmotor_Time = 4000;
  2730   000F72  0E0F               	movlw	15
  2731   000F74  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2732   000F76  0EA0               	movlw	160
  2733   000F78  6E56               	movwf	_Vmotor_Time^0,c
  2734                           
  2735                           ;main.c: 762:                                         break;
  2736   000F7A  EFE6  F007         	goto	l290
  2737   000F7E                     l5657:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;main.c: 765:                                         Vmotor_Time = 5000;
  2741   000F7E  0E13               	movlw	19
  2742   000F80  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2743   000F82  0E88               	movlw	136
  2744   000F84  6E56               	movwf	_Vmotor_Time^0,c
  2745                           
  2746                           ;main.c: 766:                                         break;
  2747   000F86  EFE6  F007         	goto	l290
  2748   000F8A                     l5661:
  2749                           
  2750                           ; BSR set to: 0
  2751   000F8A  5028               	movf	_vib_Time^0,w,c	;volatile
  2752   000F8C  6F96               	movwf	??_main& (0+255),b
  2753   000F8E  6B97               	clrf	(??_main+1)& (0+255),b
  2754                           
  2755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2756                           ; Switch size 1, requested type "simple"
  2757                           ; Number of cases is 1, Range of values is 0 to 0
  2758                           ; switch strategies available:
  2759                           ; Name         Instructions Cycles
  2760                           ; simple_byte            4     3 (average)
  2761                           ;	Chosen strategy is simple_byte
  2762   000F90  5197               	movf	(??_main+1)& (0+255),w,b
  2763   000F92  0A00               	xorlw	0	; case 0
  2764   000F94  B4D8               	btfsc	status,2,c
  2765   000F96  EFCF  F007         	goto	l6035
  2766   000F9A  EFAB  F007         	goto	l5651
  2767   000F9E                     l6035:
  2768                           
  2769                           ; BSR set to: 0
  2770                           ; Switch size 1, requested type "simple"
  2771                           ; Number of cases is 5, Range of values is 129 to 133
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte           16     9 (average)
  2775                           ;	Chosen strategy is simple_byte
  2776   000F9E  5196               	movf	??_main& (0+255),w,b
  2777   000FA0  0A81               	xorlw	129	; case 129
  2778   000FA2  B4D8               	btfsc	status,2,c
  2779   000FA4  EFA5  F007         	goto	l5649
  2780   000FA8  0A03               	xorlw	3	; case 130
  2781   000FAA  B4D8               	btfsc	status,2,c
  2782   000FAC  EFAB  F007         	goto	l5651
  2783   000FB0  0A01               	xorlw	1	; case 131
  2784   000FB2  B4D8               	btfsc	status,2,c
  2785   000FB4  EFB3  F007         	goto	l5653
  2786   000FB8  0A07               	xorlw	7	; case 132
  2787   000FBA  B4D8               	btfsc	status,2,c
  2788   000FBC  EFB9  F007         	goto	l5655
  2789   000FC0  0A01               	xorlw	1	; case 133
  2790   000FC2  B4D8               	btfsc	status,2,c
  2791   000FC4  EFBF  F007         	goto	l5657
  2792   000FC8  EFAB  F007         	goto	l5651
  2793   000FCC                     l290:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;main.c: 768:                                 INTCONbits.GIE = 0;
  2797   000FCC  9EF2               	bcf	242,7,c	;volatile
  2798   000FCE                     
  2799                           ; BSR set to: 0
  2800                           ;main.c: 769:                                 write_i2c(0x0040, vib_Time);
  2801   000FCE  0E40               	movlw	64
  2802   000FD0  6E46               	movwf	write_i2c@address^0,c
  2803   000FD2  0E00               	movlw	0
  2804   000FD4  6E47               	movwf	(write_i2c@address+1)^0,c
  2805   000FD6  0E00               	movlw	0
  2806   000FD8  6E48               	movwf	(write_i2c@address+2)^0,c
  2807   000FDA  0E00               	movlw	0
  2808   000FDC  6E49               	movwf	(write_i2c@address+3)^0,c
  2809   000FDE  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  2810   000FE2  6A4B               	clrf	(write_i2c@data+1)^0,c
  2811   000FE4  ECBA  F010         	call	_write_i2c	;wreg free
  2812   000FE8                     
  2813                           ;main.c: 770:                                 INTCONbits.GIE = 1;
  2814   000FE8  8EF2               	bsf	242,7,c	;volatile
  2815   000FEA                     
  2816                           ;main.c: 772:                                 Busy = 0;
  2817   000FEA  0E00               	movlw	0
  2818   000FEC  6E2D               	movwf	_Busy^0,c
  2819   000FEE                     l5669:
  2820                           
  2821                           ;main.c: 777:                             if (Busy == 0) {
  2822   000FEE  502D               	movf	_Busy^0,w,c
  2823   000FF0  A4D8               	btfss	status,2,c
  2824   000FF2  EFFD  F007         	goto	u3981
  2825   000FF6  EFFF  F007         	goto	u3980
  2826   000FFA                     u3981:
  2827   000FFA  EF39  F008         	goto	l5689
  2828   000FFE                     u3980:
  2829   000FFE                     
  2830                           ;main.c: 778:                                 Busy = 1;
  2831   000FFE  0E01               	movlw	1
  2832   001000  6E2D               	movwf	_Busy^0,c
  2833   001002                     
  2834                           ;main.c: 779:                                 delay_motor_stop_time = Serial_Buffer[2];
  2835   001002  C082  F027         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2836   001006                     
  2837                           ;main.c: 780:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2838   001006  C027  F019         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2839   00100A  6A1A               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2840   00100C                     
  2841                           ;main.c: 782:                                 INTCONbits.GIE = 0;
  2842   00100C  9EF2               	bcf	242,7,c	;volatile
  2843   00100E                     
  2844                           ;main.c: 783:                                 write_i2c(0x0050, delay_motor_stop_time);
  2845   00100E  0E50               	movlw	80
  2846   001010  6E46               	movwf	write_i2c@address^0,c
  2847   001012  0E00               	movlw	0
  2848   001014  6E47               	movwf	(write_i2c@address+1)^0,c
  2849   001016  0E00               	movlw	0
  2850   001018  6E48               	movwf	(write_i2c@address+2)^0,c
  2851   00101A  0E00               	movlw	0
  2852   00101C  6E49               	movwf	(write_i2c@address+3)^0,c
  2853   00101E  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2854   001022  6A4B               	clrf	(write_i2c@data+1)^0,c
  2855   001024  ECBA  F010         	call	_write_i2c	;wreg free
  2856   001028                     
  2857                           ;main.c: 784:                                 INTCONbits.GIE = 1;
  2858   001028  8EF2               	bsf	242,7,c	;volatile
  2859   00102A  EFA5  F006         	goto	l5565
  2860   00102E                     l5687:
  2861   00102E  0100               	movlb	0	; () banked
  2862   001030  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  2863   001032  6F96               	movwf	??_main& (0+255),b
  2864   001034  6B97               	clrf	(??_main+1)& (0+255),b
  2865                           
  2866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2867                           ; Switch size 1, requested type "simple"
  2868                           ; Number of cases is 1, Range of values is 0 to 0
  2869                           ; switch strategies available:
  2870                           ; Name         Instructions Cycles
  2871                           ; simple_byte            4     3 (average)
  2872                           ;	Chosen strategy is simple_byte
  2873   001036  5197               	movf	(??_main+1)& (0+255),w,b
  2874   001038  0A00               	xorlw	0	; case 0
  2875   00103A  B4D8               	btfsc	status,2,c
  2876   00103C  EF22  F008         	goto	l6037
  2877   001040  EF39  F008         	goto	l5689
  2878   001044                     l6037:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ; Switch size 1, requested type "simple"
  2882                           ; Number of cases is 5, Range of values is 35 to 102
  2883                           ; switch strategies available:
  2884                           ; Name         Instructions Cycles
  2885                           ; simple_byte           16     9 (average)
  2886                           ;	Chosen strategy is simple_byte
  2887   001044  5196               	movf	??_main& (0+255),w,b
  2888   001046  0A23               	xorlw	35	; case 35
  2889   001048  B4D8               	btfsc	status,2,c
  2890   00104A  EFA9  F006         	goto	l5567
  2891   00104E  0A67               	xorlw	103	; case 68
  2892   001050  B4D8               	btfsc	status,2,c
  2893   001052  EF1C  F006         	goto	l5521
  2894   001056  0A15               	xorlw	21	; case 81
  2895   001058  B4D8               	btfsc	status,2,c
  2896   00105A  EF15  F007         	goto	l5597
  2897   00105E  0A34               	xorlw	52	; case 101
  2898   001060  B4D8               	btfsc	status,2,c
  2899   001062  EF97  F007         	goto	l5643
  2900   001066  0A03               	xorlw	3	; case 102
  2901   001068  B4D8               	btfsc	status,2,c
  2902   00106A  EFF7  F007         	goto	l5669
  2903   00106E  EF39  F008         	goto	l5689
  2904   001072                     l5689:
  2905                           
  2906                           ;main.c: 793:                     Serial_Flag = 0;
  2907   001072  0E00               	movlw	0
  2908   001074  6E31               	movwf	_Serial_Flag^0,c
  2909                           
  2910                           ;main.c: 794:                     Serial_GData = 0;
  2911   001076  0E00               	movlw	0
  2912   001078  6E30               	movwf	_Serial_GData^0,c
  2913                           
  2914                           ;main.c: 795:                     OpMode = MANUAL_MODE;
  2915   00107A  0E00               	movlw	0
  2916   00107C  6E2A               	movwf	_OpMode^0,c	;volatile
  2917                           
  2918                           ;main.c: 796:                 } else {
  2919   00107E  EF69  F004         	goto	l5431
  2920   001082                     l5691:
  2921                           
  2922                           ;main.c: 797:                     OpMode = MANUAL_MODE;
  2923   001082  0E00               	movlw	0
  2924   001084  6E2A               	movwf	_OpMode^0,c	;volatile
  2925   001086  EF69  F004         	goto	l5431
  2926   00108A                     l5693:
  2927   00108A  502A               	movf	_OpMode^0,w,c	;volatile
  2928   00108C  0100               	movlb	0	; () banked
  2929   00108E  6F96               	movwf	??_main& (0+255),b
  2930   001090  6B97               	clrf	(??_main+1)& (0+255),b
  2931                           
  2932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2933                           ; Switch size 1, requested type "simple"
  2934                           ; Number of cases is 1, Range of values is 0 to 0
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte            4     3 (average)
  2938                           ;	Chosen strategy is simple_byte
  2939   001092  5197               	movf	(??_main+1)& (0+255),w,b
  2940   001094  0A00               	xorlw	0	; case 0
  2941   001096  B4D8               	btfsc	status,2,c
  2942   001098  EF50  F008         	goto	l6039
  2943   00109C  EF69  F004         	goto	l5431
  2944   0010A0                     l6039:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ; Switch size 1, requested type "simple"
  2948                           ; Number of cases is 2, Range of values is 0 to 2
  2949                           ; switch strategies available:
  2950                           ; Name         Instructions Cycles
  2951                           ; simple_byte            7     4 (average)
  2952                           ;	Chosen strategy is simple_byte
  2953   0010A0  5196               	movf	??_main& (0+255),w,b
  2954   0010A2  0A00               	xorlw	0	; case 0
  2955   0010A4  B4D8               	btfsc	status,2,c
  2956   0010A6  EF7C  F004         	goto	l233
  2957   0010AA  0A02               	xorlw	2	; case 2
  2958   0010AC  B4D8               	btfsc	status,2,c
  2959   0010AE  EF12  F006         	goto	l5517
  2960   0010B2  EF69  F004         	goto	l5431
  2961   0010B6  EF81  F001         	goto	start
  2962   0010BA                     __end_of_main:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _read_i2c *****************
  2966 ;; Defined at:
  2967 ;;		line 120 in file "i2c.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  address         4   20[COMRAM] long 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  read_byte       2   24[COMRAM] int 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2   20[COMRAM] int 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;Total ram usage:        6 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 4
  2988 ;; This function calls:
  2989 ;;		___aldiv
  2990 ;;		_i2c_Address
  2991 ;;		_i2c_Read
  2992 ;;		_i2c_Restart
  2993 ;;		_i2c_Start
  2994 ;;		_i2c_Stop
  2995 ;;		_i2c_Write
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text1
  3002   002064                     __ptext1:
  3003                           	callstack 0
  3004   002064                     _read_i2c:
  3005                           	callstack 26
  3006   002064                     
  3007                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  3008   002064  EC84  F012         	call	_i2c_Start	;wreg free
  3009                           
  3010                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  3011   002068  0E00               	movlw	0
  3012   00206A  6E39               	movwf	i2c_Address@mode^0,c
  3013   00206C  0EA0               	movlw	160
  3014   00206E  EC55  F012         	call	_i2c_Address
  3015                           
  3016                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  3017   002072  C046  F038         	movff	read_i2c@address,___aldiv@dividend
  3018   002076  C047  F039         	movff	read_i2c@address+1,___aldiv@dividend+1
  3019   00207A  C048  F03A         	movff	read_i2c@address+2,___aldiv@dividend+2
  3020   00207E  C049  F03B         	movff	read_i2c@address+3,___aldiv@dividend+3
  3021   002082  0E00               	movlw	0
  3022   002084  6E3C               	movwf	___aldiv@divisor^0,c
  3023   002086  0E01               	movlw	1
  3024   002088  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  3025   00208A  0E00               	movlw	0
  3026   00208C  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  3027   00208E  0E00               	movlw	0
  3028   002090  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  3029   002092  EC81  F00B         	call	___aldiv	;wreg free
  3030   002096  5038               	movf	?___aldiv^0,w,c
  3031   002098  EC66  F012         	call	_i2c_Write
  3032                           
  3033                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  3034   00209C  5046               	movf	read_i2c@address^0,w,c
  3035   00209E  EC66  F012         	call	_i2c_Write
  3036                           
  3037                           ;i2c.c: 128:     i2c_Restart();
  3038   0020A2  EC7C  F012         	call	_i2c_Restart	;wreg free
  3039                           
  3040                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  3041   0020A6  0E01               	movlw	1
  3042   0020A8  6E39               	movwf	i2c_Address@mode^0,c
  3043   0020AA  0EA0               	movlw	160
  3044   0020AC  EC55  F012         	call	_i2c_Address
  3045                           
  3046                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  3047   0020B0  0E00               	movlw	0
  3048   0020B2  EC7A  F011         	call	_i2c_Read
  3049   0020B6  C039  F04A         	movff	?_i2c_Read,read_i2c@read_byte
  3050   0020BA  C03A  F04B         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  3051                           
  3052                           ;i2c.c: 134:     i2c_Stop();
  3053   0020BE  EC80  F012         	call	_i2c_Stop	;wreg free
  3054   0020C2                     
  3055                           ;i2c.c: 135:     return (read_byte);
  3056   0020C2  C04A  F046         	movff	read_i2c@read_byte,?_read_i2c
  3057   0020C6  C04B  F047         	movff	read_i2c@read_byte+1,?_read_i2c+1
  3058   0020CA  0012               	return		;funcret
  3059   0020CC                     __end_of_read_i2c:
  3060                           	callstack 0
  3061                           
  3062 ;; *************** function _i2c_Restart *****************
  3063 ;; Defined at:
  3064 ;;		line 56 in file "i2c.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 3
  3085 ;; This function calls:
  3086 ;;		_i2c_Wait
  3087 ;; This function is called by:
  3088 ;;		_read_i2c
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text2
  3093   0024F8                     __ptext2:
  3094                           	callstack 0
  3095   0024F8                     _i2c_Restart:
  3096                           	callstack 26
  3097   0024F8                     
  3098                           ;i2c.c: 57:     i2c_Wait();
  3099   0024F8  ECF0  F011         	call	_i2c_Wait	;wreg free
  3100   0024FC                     
  3101                           ;i2c.c: 58:     RSEN2 = 1;
  3102   0024FC  826B               	bsf	3947,1,c	;volatile
  3103   0024FE  0012               	return		;funcret
  3104   002500                     __end_of_i2c_Restart:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _i2c_Read *****************
  3108 ;; Defined at:
  3109 ;;		line 89 in file "i2c.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  ack             1    wreg     unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  ack             1    9[COMRAM] unsigned char 
  3114 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  2    7[COMRAM] int 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;Total ram usage:        4 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 3
  3131 ;; This function calls:
  3132 ;;		_i2c_Wait
  3133 ;; This function is called by:
  3134 ;;		_read_i2c
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text3
  3139   0022F4                     __ptext3:
  3140                           	callstack 0
  3141   0022F4                     _i2c_Read:
  3142                           	callstack 26
  3143                           
  3144                           ;incstack = 0
  3145                           ;i2c_Read@ack stored from wreg
  3146   0022F4  6E3B               	movwf	i2c_Read@ack^0,c
  3147   0022F6                     
  3148                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  3149   0022F6  ECF0  F011         	call	_i2c_Wait	;wreg free
  3150   0022FA                     
  3151                           ;i2c.c: 96:     RCEN2 = 1;
  3152   0022FA  866B               	bsf	3947,3,c	;volatile
  3153                           
  3154                           ;i2c.c: 97:     i2c_Wait();
  3155   0022FC  ECF0  F011         	call	_i2c_Wait	;wreg free
  3156   002300                     
  3157                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  3158   002300  CF6F F03C          	movff	3951,i2c_Read@i2cReadData	;volatile
  3159                           
  3160                           ;i2c.c: 99:     i2c_Wait();
  3161   002304  ECF0  F011         	call	_i2c_Wait	;wreg free
  3162   002308                     
  3163                           ;i2c.c: 100:     if (ack)
  3164   002308  503B               	movf	i2c_Read@ack^0,w,c
  3165   00230A  B4D8               	btfsc	status,2,c
  3166   00230C  EF8A  F011         	goto	u3431
  3167   002310  EF8C  F011         	goto	u3430
  3168   002314                     u3431:
  3169   002314  EF8F  F011         	goto	l594
  3170   002318                     u3430:
  3171   002318                     
  3172                           ;i2c.c: 101:         ACKDT2 = 0;
  3173   002318  9A6B               	bcf	3947,5,c	;volatile
  3174   00231A  EF90  F011         	goto	l595
  3175   00231E                     l594:
  3176                           
  3177                           ;i2c.c: 103:         ACKDT2 = 1;
  3178   00231E  8A6B               	bsf	3947,5,c	;volatile
  3179   002320                     l595:
  3180                           
  3181                           ;i2c.c: 104:     ACKEN2 = 1;
  3182   002320  886B               	bsf	3947,4,c	;volatile
  3183                           
  3184                           ;i2c.c: 106:     return ( i2cReadData);
  3185   002322  C03C  F039         	movff	i2c_Read@i2cReadData,?_i2c_Read
  3186   002326  6A3A               	clrf	(?_i2c_Read+1)^0,c
  3187   002328  0012               	return		;funcret
  3188   00232A                     __end_of_i2c_Read:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _pwm_set *****************
  3192 ;; Defined at:
  3193 ;;		line 163 in file "main.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  duty            2    6[COMRAM] unsigned short 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;Total ram usage:        4 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 2
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text4
  3222   002360                     __ptext4:
  3223                           	callstack 0
  3224   002360                     _pwm_set:
  3225                           	callstack 28
  3226   002360                     
  3227                           ;main.c: 164:     CCP1CONbits.DC1B = (uint8_t)(duty & 0x0003);
  3228   002360  C038  F03A         	movff	pwm_set@duty,??_pwm_set
  3229   002364  0E03               	movlw	3
  3230   002366  163A               	andwf	??_pwm_set^0,f,c
  3231   002368  3A3A               	swapf	??_pwm_set^0,f,c
  3232   00236A  50BB               	movf	187,w,c	;volatile
  3233   00236C  183A               	xorwf	??_pwm_set^0,w,c
  3234   00236E  0BCF               	andlw	-49
  3235   002370  183A               	xorwf	??_pwm_set^0,w,c
  3236   002372  6EBB               	movwf	187,c	;volatile
  3237                           
  3238                           ;main.c: 165:     CCPR1L = (uint8_t)(duty >> 2);
  3239   002374  C038  F03A         	movff	pwm_set@duty,??_pwm_set
  3240   002378  C039  F03B         	movff	pwm_set@duty+1,??_pwm_set+1
  3241   00237C  90D8               	bcf	status,0,c
  3242   00237E  323B               	rrcf	(??_pwm_set+1)^0,f,c
  3243   002380  323A               	rrcf	??_pwm_set^0,f,c
  3244   002382  90D8               	bcf	status,0,c
  3245   002384  323B               	rrcf	(??_pwm_set+1)^0,f,c
  3246   002386  323A               	rrcf	??_pwm_set^0,f,c
  3247   002388  503A               	movf	??_pwm_set^0,w,c
  3248   00238A  6EBC               	movwf	188,c	;volatile
  3249   00238C  0012               	return		;funcret
  3250   00238E                     __end_of_pwm_set:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _initUSART *****************
  3254 ;; Defined at:
  3255 ;;		line 20 in file "usart.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text5
  3284   0023BA                     __ptext5:
  3285                           	callstack 0
  3286   0023BA                     _initUSART:
  3287                           	callstack 28
  3288   0023BA                     
  3289                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  3290   0023BA  9C94               	bcf	148,6,c	;volatile
  3291                           
  3292                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  3293   0023BC  8E94               	bsf	148,7,c	;volatile
  3294                           
  3295                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  3296   0023BE  98AD               	bcf	173,4,c	;volatile
  3297                           
  3298                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  3299   0023C0  9CAD               	bcf	173,6,c	;volatile
  3300                           
  3301                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  3302   0023C2  8AAD               	bsf	173,5,c	;volatile
  3303                           
  3304                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  3305   0023C4  9CAC               	bcf	172,6,c	;volatile
  3306                           
  3307                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  3308   0023C6  88AC               	bsf	172,4,c	;volatile
  3309                           
  3310                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  3311   0023C8  9EAD               	bcf	173,7,c	;volatile
  3312                           
  3313                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  3314   0023CA  86AC               	bsf	172,3,c	;volatile
  3315                           
  3316                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  3317   0023CC  8EAC               	bsf	172,7,c	;volatile
  3318                           
  3319                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  3320   0023CE  967E               	bcf	126,3,c	;volatile
  3321                           
  3322                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  3323   0023D0  84AD               	bsf	173,2,c	;volatile
  3324                           
  3325                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  3326   0023D2  8A9D               	bsf	157,5,c	;volatile
  3327                           
  3328                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  3329   0023D4  989D               	bcf	157,4,c	;volatile
  3330   0023D6                     
  3331                           ;usart.c: 39:     SPBRG1 = 25;
  3332   0023D6  0E19               	movlw	25
  3333   0023D8  6EB0               	movwf	176,c	;volatile
  3334                           
  3335                           ;usart.c: 40:     SPBRGH1 = 0;
  3336   0023DA  0E00               	movlw	0
  3337   0023DC  6E7F               	movwf	127,c	;volatile
  3338   0023DE  0012               	return		;funcret
  3339   0023E0                     __end_of_initUSART:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _initMotor *****************
  3343 ;; Defined at:
  3344 ;;		line 21 in file "MotorDriver.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 2
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text6
  3373   0024BE                     __ptext6:
  3374                           	callstack 0
  3375   0024BE                     _initMotor:
  3376                           	callstack 28
  3377   0024BE                     
  3378                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  3379   0024BE  0EC7               	movlw	199
  3380   0024C0  6E77               	movwf	119,c	;volatile
  3381   0024C2                     
  3382                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  3383   0024C2  9679               	bcf	121,3,c	;volatile
  3384   0024C4                     
  3385                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  3386   0024C4  8C79               	bsf	121,6,c	;volatile
  3387                           
  3388                           ;MotorDriver.c: 25:     T4CON = 0x00;
  3389   0024C6  0E00               	movlw	0
  3390   0024C8  6E76               	movwf	118,c	;volatile
  3391   0024CA  0012               	return		;funcret
  3392   0024CC                     __end_of_initMotor:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _init *****************
  3396 ;; Defined at:
  3397 ;;		line 18 in file "IO.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 2
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text7
  3426   001FF2                     __ptext7:
  3427                           	callstack 0
  3428   001FF2                     _init:
  3429                           	callstack 28
  3430   001FF2                     
  3431                           ;IO.c: 19:     TRISA = 0xFB;
  3432   001FF2  0EFB               	movlw	251
  3433   001FF4  6E92               	movwf	146,c	;volatile
  3434   001FF6                     
  3435                           ;IO.c: 20:     TRISB = 0XFF;
  3436   001FF6  6893               	setf	147,c	;volatile
  3437                           
  3438                           ;IO.c: 21:     TRISC = 0X84;
  3439   001FF8  0E84               	movlw	132
  3440   001FFA  6E94               	movwf	148,c	;volatile
  3441                           
  3442                           ;IO.c: 22:     TRISD = 0XC0;
  3443   001FFC  0EC0               	movlw	192
  3444   001FFE  6E95               	movwf	149,c	;volatile
  3445                           
  3446                           ;IO.c: 23:     TRISE = 0X00;
  3447   002000  0E00               	movlw	0
  3448   002002  6E96               	movwf	150,c	;volatile
  3449                           
  3450                           ;IO.c: 24:     TRISF = 0X00;
  3451   002004  0E00               	movlw	0
  3452   002006  6E97               	movwf	151,c	;volatile
  3453                           
  3454                           ;IO.c: 25:     TRISG = 0X05;
  3455   002008  0E05               	movlw	5
  3456   00200A  6E98               	movwf	152,c	;volatile
  3457   00200C                     
  3458                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3459   00200C  9EC2               	bcf	194,7,c	;volatile
  3460   00200E                     
  3461                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3462   00200E  9CC2               	bcf	194,6,c	;volatile
  3463   002010                     
  3464                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3465   002010  90C2               	bcf	194,0,c	;volatile
  3466   002012                     
  3467                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3468   002012  8EC1               	bsf	193,7,c	;volatile
  3469   002014                     
  3470                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3471   002014  9CC1               	bcf	193,6,c	;volatile
  3472   002016                     
  3473                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3474   002016  9AC1               	bcf	193,5,c	;volatile
  3475   002018                     
  3476                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3477   002018  88C1               	bsf	193,4,c	;volatile
  3478   00201A                     
  3479                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3480   00201A  96C1               	bcf	193,3,c	;volatile
  3481   00201C                     
  3482                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3483   00201C  84C1               	bsf	193,2,c	;volatile
  3484   00201E                     
  3485                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3486   00201E  92C1               	bcf	193,1,c	;volatile
  3487   002020                     
  3488                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3489   002020  90C1               	bcf	193,0,c	;volatile
  3490   002022                     
  3491                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3492   002022  88C0               	bsf	192,4,c	;volatile
  3493   002024                     
  3494                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3495   002024  90C1               	bcf	193,0,c	;volatile
  3496   002026                     
  3497                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3498   002026  82C1               	bsf	193,1,c	;volatile
  3499   002028                     
  3500                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3501   002028  84C1               	bsf	193,2,c	;volatile
  3502   00202A                     
  3503                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3504   00202A  86C1               	bsf	193,3,c	;volatile
  3505   00202C                     
  3506                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3507   00202C  88C1               	bsf	193,4,c	;volatile
  3508   00202E                     
  3509                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3510   00202E  8EC1               	bsf	193,7,c	;volatile
  3511   002030                     
  3512                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3513   002030  98C0               	bcf	192,4,c	;volatile
  3514   002032                     
  3515                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3516   002032  8EF2               	bsf	242,7,c	;volatile
  3517                           
  3518                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3519   002034  0E03               	movlw	3
  3520   002036  12D3               	iorwf	211,f,c	;volatile
  3521                           
  3522                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3523   002038  0E70               	movlw	112
  3524   00203A  12D3               	iorwf	211,f,c	;volatile
  3525                           
  3526                           ;IO.c: 68:     ADRES = 0;
  3527   00203C  0E00               	movlw	0
  3528   00203E  6EC4               	movwf	196,c	;volatile
  3529   002040  0E00               	movlw	0
  3530   002042  6EC3               	movwf	195,c	;volatile
  3531   002044                     
  3532                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3533   002044  94C2               	bcf	194,2,c	;volatile
  3534   002046                     
  3535                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3536   002046  96C2               	bcf	194,3,c	;volatile
  3537   002048                     
  3538                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3539   002048  98C2               	bcf	194,4,c	;volatile
  3540   00204A                     
  3541                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3542   00204A  9AC2               	bcf	194,5,c	;volatile
  3543   00204C                     
  3544                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3545   00204C  8CC1               	bsf	193,6,c	;volatile
  3546   00204E                     
  3547                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3548   00204E  80C2               	bsf	194,0,c	;volatile
  3549   002050                     
  3550                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3551   002050  82C2               	bsf	194,1,c	;volatile
  3552   002052                     l665:
  3553                           
  3554                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3555   002052  B2C2               	btfsc	194,1,c	;volatile
  3556   002054  EF2E  F010         	goto	u2021
  3557   002058  EF30  F010         	goto	u2020
  3558   00205C                     u2021:
  3559   00205C  EF29  F010         	goto	l665
  3560   002060                     u2020:
  3561   002060                     
  3562                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3563   002060  9CC1               	bcf	193,6,c	;volatile
  3564   002062  0012               	return		;funcret
  3565   002064                     __end_of_init:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _i2c_Init *****************
  3569 ;; Defined at:
  3570 ;;		line 25 in file "i2c.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 2
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text8
  3599   002468                     __ptext8:
  3600                           	callstack 0
  3601   002468                     _i2c_Init:
  3602                           	callstack 28
  3603   002468                     
  3604                           ;i2c.c: 29:     TRISD5 = 1;
  3605   002468  8A95               	bsf	3989,5,c	;volatile
  3606                           
  3607                           ;i2c.c: 30:     TRISD6 = 1;
  3608   00246A  8C95               	bsf	3989,6,c	;volatile
  3609   00246C                     
  3610                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3611   00246C  0E28               	movlw	40
  3612   00246E  6E6C               	movwf	108,c	;volatile
  3613                           
  3614                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3615   002470  0E00               	movlw	0
  3616   002472  6E6B               	movwf	107,c	;volatile
  3617                           
  3618                           ;i2c.c: 35:     SSP2ADD = 39;
  3619   002474  0E27               	movlw	39
  3620   002476  6E6E               	movwf	110,c	;volatile
  3621                           
  3622                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3623   002478  0EC0               	movlw	192
  3624   00247A  6E6D               	movwf	109,c	;volatile
  3625   00247C  0012               	return		;funcret
  3626   00247E                     __end_of_i2c_Init:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _flush *****************
  3630 ;; Defined at:
  3631 ;;		line 1243 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  i               2    6[COMRAM] int 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;Total ram usage:        2 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 2
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text9
  3660   002280                     __ptext9:
  3661                           	callstack 0
  3662   002280                     _flush:
  3663                           	callstack 28
  3664   002280                     
  3665                           ;main.c: 1244:     int i;;main.c: 1246:     for (i = 0; i < 16; i++) {
  3666   002280  0E00               	movlw	0
  3667   002282  6E39               	movwf	(flush@i+1)^0,c
  3668   002284  0E00               	movlw	0
  3669   002286  6E38               	movwf	flush@i^0,c
  3670   002288                     l3921:
  3671                           
  3672                           ;main.c: 1247:         Serial_Buffer[i] = 0x00;
  3673   002288  0E80               	movlw	low _Serial_Buffer
  3674   00228A  2438               	addwf	flush@i^0,w,c
  3675   00228C  6ED9               	movwf	fsr2l,c
  3676   00228E  0E00               	movlw	high _Serial_Buffer
  3677   002290  2039               	addwfc	(flush@i+1)^0,w,c
  3678   002292  6EDA               	movwf	fsr2h,c
  3679   002294  0E00               	movlw	0
  3680   002296  6EDF               	movwf	indf2,c
  3681   002298                     
  3682                           ;main.c: 1248:     }
  3683   002298  4A38               	infsnz	flush@i^0,f,c
  3684   00229A  2A39               	incf	(flush@i+1)^0,f,c
  3685   00229C  BE39               	btfsc	(flush@i+1)^0,7,c
  3686   00229E  EF5A  F011         	goto	u2511
  3687   0022A2  5039               	movf	(flush@i+1)^0,w,c
  3688   0022A4  E109               	bnz	u2510
  3689   0022A6  0E10               	movlw	16
  3690   0022A8  5C38               	subwf	flush@i^0,w,c
  3691   0022AA  A0D8               	btfss	status,0,c
  3692   0022AC  EF5A  F011         	goto	u2511
  3693   0022B0  EF5C  F011         	goto	u2510
  3694   0022B4                     u2511:
  3695   0022B4  EF44  F011         	goto	l3921
  3696   0022B8                     u2510:
  3697   0022B8  0012               	return		;funcret
  3698   0022BA                     __end_of_flush:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _WriteSTLED316SVibMode *****************
  3702 ;; Defined at:
  3703 ;;		line 244 in file "Display.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  v_mode          1    wreg     unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  v_mode          1   12[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;Total ram usage:        1 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 3
  3724 ;; This function calls:
  3725 ;;		_STLED316s_SPI_SendData
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text10
  3732   002126                     __ptext10:
  3733                           	callstack 0
  3734   002126                     _WriteSTLED316SVibMode:
  3735                           	callstack 27
  3736                           
  3737                           ;incstack = 0
  3738                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3739   002126  6E3E               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3740   002128                     
  3741                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  3742   002128  988B               	bcf	139,4,c	;volatile
  3743   00212A                     
  3744                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  3745   00212A  0E00               	movlw	0
  3746   00212C  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3747   002130                     
  3748                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  3749   002130  888B               	bsf	139,4,c	;volatile
  3750   002132                     
  3751                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  3752   002132  988B               	bcf	139,4,c	;volatile
  3753                           
  3754                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  3755   002134  0E00               	movlw	0
  3756   002136  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3757   00213A                     
  3758                           ;Display.c: 261:     if (v_mode == 1) {
  3759   00213A  043E               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3760   00213C  A4D8               	btfss	status,2,c
  3761   00213E  EFA3  F010         	goto	u2091
  3762   002142  EFA5  F010         	goto	u2090
  3763   002146                     u2091:
  3764   002146  EFAD  F010         	goto	l3657
  3765   00214A                     u2090:
  3766   00214A                     
  3767                           ;Display.c: 262:         STLED316s_SPI_SendData(0x00);
  3768   00214A  0E00               	movlw	0
  3769   00214C  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3770                           
  3771                           ;Display.c: 263:         STLED316s_SPI_SendData(0xBE);
  3772   002150  0EBE               	movlw	190
  3773   002152  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3774                           
  3775                           ;Display.c: 264:     } else {
  3776   002156  EFB3  F010         	goto	l3659
  3777   00215A                     l3657:
  3778                           
  3779                           ;Display.c: 265:         STLED316s_SPI_SendData(0x00);
  3780   00215A  0E00               	movlw	0
  3781   00215C  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3782                           
  3783                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  3784   002160  0E3E               	movlw	62
  3785   002162  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3786   002166                     l3659:
  3787                           
  3788                           ;Display.c: 269:     LATCbits.LATC4 = 1;
  3789   002166  888B               	bsf	139,4,c	;volatile
  3790   002168                     
  3791                           ;Display.c: 271:     LATCbits.LATC4 = 0;
  3792   002168  988B               	bcf	139,4,c	;volatile
  3793                           
  3794                           ;Display.c: 273:     STLED316s_SPI_SendData(0x0D);
  3795   00216A  0E0D               	movlw	13
  3796   00216C  ECB9  F00F         	call	_STLED316s_SPI_SendData
  3797   002170                     
  3798                           ;Display.c: 275:     LATCbits.LATC4 = 1;
  3799   002170  888B               	bsf	139,4,c	;volatile
  3800   002172  0012               	return		;funcret
  3801   002174                     __end_of_WriteSTLED316SVibMode:
  3802                           	callstack 0
  3803                           
  3804 ;; *************** function _ToggleVIB_Mode *****************
  3805 ;; Defined at:
  3806 ;;		line 990 in file "main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; Hardware stack levels required when called: 5
  3827 ;; This function calls:
  3828 ;;		_write_i2c
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text11
  3835   002204                     __ptext11:
  3836                           	callstack 0
  3837   002204                     _ToggleVIB_Mode:
  3838                           	callstack 25
  3839   002204                     
  3840                           ;main.c: 992:     if (dutyCycle_reg == 0x00)
  3841   002204  5007               	movf	_dutyCycle_reg^0,w,c
  3842   002206  1008               	iorwf	(_dutyCycle_reg+1)^0,w,c
  3843   002208  A4D8               	btfss	status,2,c
  3844   00220A  EF09  F011         	goto	u3441
  3845   00220E  EF0B  F011         	goto	u3440
  3846   002212                     u3441:
  3847   002212  EF0F  F011         	goto	l5155
  3848   002216                     u3440:
  3849   002216                     
  3850                           ;main.c: 993:         vibration_mode = 0;
  3851   002216  0E00               	movlw	0
  3852   002218  6E2C               	movwf	_vibration_mode^0,c
  3853   00221A  EF11  F011         	goto	l5157
  3854   00221E                     l5155:
  3855                           
  3856                           ;main.c: 995:         vibration_mode = 1;
  3857   00221E  0E01               	movlw	1
  3858   002220  6E2C               	movwf	_vibration_mode^0,c
  3859   002222                     l5157:
  3860                           
  3861                           ;main.c: 1002:     INTCONbits.GIE = 0;
  3862   002222  9EF2               	bcf	242,7,c	;volatile
  3863   002224                     
  3864                           ;main.c: 1003:     write_i2c(0x0010, vibration_mode);
  3865   002224  0E10               	movlw	16
  3866   002226  6E46               	movwf	write_i2c@address^0,c
  3867   002228  0E00               	movlw	0
  3868   00222A  6E47               	movwf	(write_i2c@address+1)^0,c
  3869   00222C  0E00               	movlw	0
  3870   00222E  6E48               	movwf	(write_i2c@address+2)^0,c
  3871   002230  0E00               	movlw	0
  3872   002232  6E49               	movwf	(write_i2c@address+3)^0,c
  3873   002234  C02C  F04A         	movff	_vibration_mode,write_i2c@data
  3874   002238  6A4B               	clrf	(write_i2c@data+1)^0,c
  3875   00223A  ECBA  F010         	call	_write_i2c	;wreg free
  3876   00223E                     
  3877                           ;main.c: 1004:     INTCONbits.GIE = 1;
  3878   00223E  8EF2               	bsf	242,7,c	;volatile
  3879   002240  0012               	return		;funcret
  3880   002242                     __end_of_ToggleVIB_Mode:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _PWM_Selection *****************
  3884 ;; Defined at:
  3885 ;;		line 1331 in file "main.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  msg             2   26[COMRAM] unsigned int 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  dcSelected      2    2[BANK0 ] int 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2   26[COMRAM] unsigned int 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;Total ram usage:        6 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 5
  3906 ;; This function calls:
  3907 ;;		_write_i2c
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text12
  3914   001A1A                     __ptext12:
  3915                           	callstack 0
  3916   001A1A                     _PWM_Selection:
  3917                           	callstack 25
  3918   001A1A                     
  3919                           ;main.c: 1332:     int dcSelected;;main.c: 1333:     switch(msg){
  3920   001A1A  EF67  F00D         	goto	l5145
  3921   001A1E                     l5111:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;main.c: 1335:             dcSelected = 9;
  3925   001A1E  0E00               	movlw	0
  3926   001A20  6F95               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  3927   001A22  0E09               	movlw	9
  3928   001A24  6F94               	movwf	PWM_Selection@dcSelected& (0+255),b
  3929   001A26                     
  3930                           ; BSR set to: 0
  3931                           ;main.c: 1336:             INTCONbits.GIE = 0;
  3932   001A26  9EF2               	bcf	242,7,c	;volatile
  3933   001A28                     
  3934                           ; BSR set to: 0
  3935                           ;main.c: 1337:             write_i2c(0x0070, 0x01);
  3936   001A28  0E70               	movlw	112
  3937   001A2A  6E46               	movwf	write_i2c@address^0,c
  3938   001A2C  0E00               	movlw	0
  3939   001A2E  6E47               	movwf	(write_i2c@address+1)^0,c
  3940   001A30  0E00               	movlw	0
  3941   001A32  6E48               	movwf	(write_i2c@address+2)^0,c
  3942   001A34  0E00               	movlw	0
  3943   001A36  6E49               	movwf	(write_i2c@address+3)^0,c
  3944   001A38  0E00               	movlw	0
  3945   001A3A  6E4B               	movwf	(write_i2c@data+1)^0,c
  3946   001A3C  0E01               	movlw	1
  3947   001A3E  6E4A               	movwf	write_i2c@data^0,c
  3948   001A40  ECBA  F010         	call	_write_i2c	;wreg free
  3949   001A44                     
  3950                           ;main.c: 1338:             INTCONbits.GIE = 1;
  3951   001A44  8EF2               	bsf	242,7,c	;volatile
  3952                           
  3953                           ;main.c: 1339:             break;
  3954   001A46  EF86  F00D         	goto	l461
  3955   001A4A                     l5119:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;main.c: 1341:             dcSelected = 14;
  3959   001A4A  0E00               	movlw	0
  3960   001A4C  6F95               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  3961   001A4E  0E0E               	movlw	14
  3962   001A50  6F94               	movwf	PWM_Selection@dcSelected& (0+255),b
  3963   001A52                     
  3964                           ; BSR set to: 0
  3965                           ;main.c: 1342:             INTCONbits.GIE = 0;
  3966   001A52  9EF2               	bcf	242,7,c	;volatile
  3967   001A54                     
  3968                           ; BSR set to: 0
  3969                           ;main.c: 1343:             write_i2c(0x0070, 0x02);
  3970   001A54  0E70               	movlw	112
  3971   001A56  6E46               	movwf	write_i2c@address^0,c
  3972   001A58  0E00               	movlw	0
  3973   001A5A  6E47               	movwf	(write_i2c@address+1)^0,c
  3974   001A5C  0E00               	movlw	0
  3975   001A5E  6E48               	movwf	(write_i2c@address+2)^0,c
  3976   001A60  0E00               	movlw	0
  3977   001A62  6E49               	movwf	(write_i2c@address+3)^0,c
  3978   001A64  0E00               	movlw	0
  3979   001A66  6E4B               	movwf	(write_i2c@data+1)^0,c
  3980   001A68  0E02               	movlw	2
  3981   001A6A  6E4A               	movwf	write_i2c@data^0,c
  3982   001A6C  ECBA  F010         	call	_write_i2c	;wreg free
  3983   001A70                     
  3984                           ;main.c: 1344:             INTCONbits.GIE = 1;
  3985   001A70  8EF2               	bsf	242,7,c	;volatile
  3986                           
  3987                           ;main.c: 1345:             break;
  3988   001A72  EF86  F00D         	goto	l461
  3989   001A76                     l5127:
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;main.c: 1347:             dcSelected = 20;
  3993   001A76  0E00               	movlw	0
  3994   001A78  6F95               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  3995   001A7A  0E14               	movlw	20
  3996   001A7C  6F94               	movwf	PWM_Selection@dcSelected& (0+255),b
  3997   001A7E                     
  3998                           ; BSR set to: 0
  3999                           ;main.c: 1348:             INTCONbits.GIE = 0;
  4000   001A7E  9EF2               	bcf	242,7,c	;volatile
  4001   001A80                     
  4002                           ; BSR set to: 0
  4003                           ;main.c: 1349:             write_i2c(0x0070, 0x03);
  4004   001A80  0E70               	movlw	112
  4005   001A82  6E46               	movwf	write_i2c@address^0,c
  4006   001A84  0E00               	movlw	0
  4007   001A86  6E47               	movwf	(write_i2c@address+1)^0,c
  4008   001A88  0E00               	movlw	0
  4009   001A8A  6E48               	movwf	(write_i2c@address+2)^0,c
  4010   001A8C  0E00               	movlw	0
  4011   001A8E  6E49               	movwf	(write_i2c@address+3)^0,c
  4012   001A90  0E00               	movlw	0
  4013   001A92  6E4B               	movwf	(write_i2c@data+1)^0,c
  4014   001A94  0E03               	movlw	3
  4015   001A96  6E4A               	movwf	write_i2c@data^0,c
  4016   001A98  ECBA  F010         	call	_write_i2c	;wreg free
  4017   001A9C                     
  4018                           ;main.c: 1350:             INTCONbits.GIE = 1;
  4019   001A9C  8EF2               	bsf	242,7,c	;volatile
  4020                           
  4021                           ;main.c: 1351:             break;
  4022   001A9E  EF86  F00D         	goto	l461
  4023   001AA2                     l5135:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 1353:             dcSelected = 0;
  4027   001AA2  0E00               	movlw	0
  4028   001AA4  6F95               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4029   001AA6  0E00               	movlw	0
  4030   001AA8  6F94               	movwf	PWM_Selection@dcSelected& (0+255),b
  4031   001AAA                     
  4032                           ; BSR set to: 0
  4033                           ;main.c: 1354:             INTCONbits.GIE = 0;
  4034   001AAA  9EF2               	bcf	242,7,c	;volatile
  4035   001AAC                     
  4036                           ; BSR set to: 0
  4037                           ;main.c: 1355:             write_i2c(0x0070, 0x00);
  4038   001AAC  0E70               	movlw	112
  4039   001AAE  6E46               	movwf	write_i2c@address^0,c
  4040   001AB0  0E00               	movlw	0
  4041   001AB2  6E47               	movwf	(write_i2c@address+1)^0,c
  4042   001AB4  0E00               	movlw	0
  4043   001AB6  6E48               	movwf	(write_i2c@address+2)^0,c
  4044   001AB8  0E00               	movlw	0
  4045   001ABA  6E49               	movwf	(write_i2c@address+3)^0,c
  4046   001ABC  0E00               	movlw	0
  4047   001ABE  6E4B               	movwf	(write_i2c@data+1)^0,c
  4048   001AC0  0E00               	movlw	0
  4049   001AC2  6E4A               	movwf	write_i2c@data^0,c
  4050   001AC4  ECBA  F010         	call	_write_i2c	;wreg free
  4051   001AC8                     
  4052                           ;main.c: 1356:             INTCONbits.GIE = 1;
  4053   001AC8  8EF2               	bsf	242,7,c	;volatile
  4054                           
  4055                           ;main.c: 1357:             break;
  4056   001ACA  EF86  F00D         	goto	l461
  4057   001ACE                     l5145:
  4058   001ACE  C04C  F092         	movff	PWM_Selection@msg,??_PWM_Selection
  4059   001AD2  C04D  F093         	movff	PWM_Selection@msg+1,??_PWM_Selection+1
  4060                           
  4061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4062                           ; Switch size 1, requested type "simple"
  4063                           ; Number of cases is 1, Range of values is 0 to 0
  4064                           ; switch strategies available:
  4065                           ; Name         Instructions Cycles
  4066                           ; simple_byte            4     3 (average)
  4067                           ;	Chosen strategy is simple_byte
  4068   001AD6  0100               	movlb	0	; () banked
  4069   001AD8  5193               	movf	(??_PWM_Selection+1)& (0+255),w,b
  4070   001ADA  0A00               	xorlw	0	; case 0
  4071   001ADC  B4D8               	btfsc	status,2,c
  4072   001ADE  EF73  F00D         	goto	l6041
  4073   001AE2  EF86  F00D         	goto	l461
  4074   001AE6                     l6041:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ; Switch size 1, requested type "simple"
  4078                           ; Number of cases is 4, Range of values is 0 to 3
  4079                           ; switch strategies available:
  4080                           ; Name         Instructions Cycles
  4081                           ; simple_byte           13     7 (average)
  4082                           ;	Chosen strategy is simple_byte
  4083   001AE6  5192               	movf	??_PWM_Selection& (0+255),w,b
  4084   001AE8  0A00               	xorlw	0	; case 0
  4085   001AEA  B4D8               	btfsc	status,2,c
  4086   001AEC  EF0F  F00D         	goto	l5111
  4087   001AF0  0A01               	xorlw	1	; case 1
  4088   001AF2  B4D8               	btfsc	status,2,c
  4089   001AF4  EF25  F00D         	goto	l5119
  4090   001AF8  0A03               	xorlw	3	; case 2
  4091   001AFA  B4D8               	btfsc	status,2,c
  4092   001AFC  EF3B  F00D         	goto	l5127
  4093   001B00  0A01               	xorlw	1	; case 3
  4094   001B02  B4D8               	btfsc	status,2,c
  4095   001B04  EF51  F00D         	goto	l5135
  4096   001B08  EF86  F00D         	goto	l461
  4097   001B0C                     l461:
  4098                           
  4099                           ;main.c: 1361:     return(dcSelected);
  4100   001B0C  C094  F04C         	movff	PWM_Selection@dcSelected,?_PWM_Selection
  4101   001B10  C095  F04D         	movff	PWM_Selection@dcSelected+1,?_PWM_Selection+1
  4102   001B14  0012               	return		;funcret
  4103   001B16                     __end_of_PWM_Selection:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _write_i2c *****************
  4107 ;; Defined at:
  4108 ;;		line 109 in file "i2c.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  address         4   20[COMRAM] long 
  4111 ;;  data            2   24[COMRAM] int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4123 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;Total ram usage:        6 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 4
  4130 ;; This function calls:
  4131 ;;		___aldiv
  4132 ;;		_i2c_Address
  4133 ;;		_i2c_Start
  4134 ;;		_i2c_Stop
  4135 ;;		_i2c_Write
  4136 ;; This function is called by:
  4137 ;;		_main
  4138 ;;		_ToggleVIB_Mode
  4139 ;;		_PWM_Selection
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text13
  4144   002174                     __ptext13:
  4145                           	callstack 0
  4146   002174                     _write_i2c:
  4147                           	callstack 26
  4148   002174                     
  4149                           ;i2c.c: 110:     i2c_Start();
  4150   002174  EC84  F012         	call	_i2c_Start	;wreg free
  4151                           
  4152                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  4153   002178  0E00               	movlw	0
  4154   00217A  6E39               	movwf	i2c_Address@mode^0,c
  4155   00217C  0EA0               	movlw	160
  4156   00217E  EC55  F012         	call	_i2c_Address
  4157                           
  4158                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  4159   002182  C046  F038         	movff	write_i2c@address,___aldiv@dividend
  4160   002186  C047  F039         	movff	write_i2c@address+1,___aldiv@dividend+1
  4161   00218A  C048  F03A         	movff	write_i2c@address+2,___aldiv@dividend+2
  4162   00218E  C049  F03B         	movff	write_i2c@address+3,___aldiv@dividend+3
  4163   002192  0E00               	movlw	0
  4164   002194  6E3C               	movwf	___aldiv@divisor^0,c
  4165   002196  0E01               	movlw	1
  4166   002198  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  4167   00219A  0E00               	movlw	0
  4168   00219C  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  4169   00219E  0E00               	movlw	0
  4170   0021A0  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  4171   0021A2  EC81  F00B         	call	___aldiv	;wreg free
  4172   0021A6  5038               	movf	?___aldiv^0,w,c
  4173   0021A8  EC66  F012         	call	_i2c_Write
  4174                           
  4175                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  4176   0021AC  5046               	movf	write_i2c@address^0,w,c
  4177   0021AE  EC66  F012         	call	_i2c_Write
  4178                           
  4179                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  4180   0021B2  504A               	movf	write_i2c@data^0,w,c
  4181   0021B4  EC66  F012         	call	_i2c_Write
  4182                           
  4183                           ;i2c.c: 115:     i2c_Stop();
  4184   0021B8  EC80  F012         	call	_i2c_Stop	;wreg free
  4185   0021BC  0012               	return		;funcret
  4186   0021BE                     __end_of_write_i2c:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _i2c_Write *****************
  4190 ;; Defined at:
  4191 ;;		line 70 in file "i2c.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  data            1    wreg     unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  data            1    7[COMRAM] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;Total ram usage:        1 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 3
  4212 ;; This function calls:
  4213 ;;		_i2c_Wait
  4214 ;; This function is called by:
  4215 ;;		_write_i2c
  4216 ;;		_read_i2c
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text14
  4221   0024CC                     __ptext14:
  4222                           	callstack 0
  4223   0024CC                     _i2c_Write:
  4224                           	callstack 26
  4225                           
  4226                           ;incstack = 0
  4227                           ;i2c_Write@data stored from wreg
  4228   0024CC  6E39               	movwf	i2c_Write@data^0,c
  4229   0024CE                     
  4230                           ;i2c.c: 71:     i2c_Wait();
  4231   0024CE  ECF0  F011         	call	_i2c_Wait	;wreg free
  4232   0024D2                     
  4233                           ;i2c.c: 72:     SSP2BUF = data;
  4234   0024D2  C039  FF6F         	movff	i2c_Write@data,3951	;volatile
  4235   0024D6  0012               	return		;funcret
  4236   0024D8                     __end_of_i2c_Write:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function _i2c_Stop *****************
  4240 ;; Defined at:
  4241 ;;		line 63 in file "i2c.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 3
  4262 ;; This function calls:
  4263 ;;		_i2c_Wait
  4264 ;; This function is called by:
  4265 ;;		_write_i2c
  4266 ;;		_read_i2c
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text15
  4271   002500                     __ptext15:
  4272                           	callstack 0
  4273   002500                     _i2c_Stop:
  4274                           	callstack 26
  4275   002500                     
  4276                           ;i2c.c: 64:     i2c_Wait();
  4277   002500  ECF0  F011         	call	_i2c_Wait	;wreg free
  4278   002504                     
  4279                           ;i2c.c: 65:     PEN2 = 1;
  4280   002504  846B               	bsf	3947,2,c	;volatile
  4281   002506  0012               	return		;funcret
  4282   002508                     __end_of_i2c_Stop:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _i2c_Start *****************
  4286 ;; Defined at:
  4287 ;;		line 49 in file "i2c.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 3
  4308 ;; This function calls:
  4309 ;;		_i2c_Wait
  4310 ;; This function is called by:
  4311 ;;		_write_i2c
  4312 ;;		_read_i2c
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text16
  4317   002508                     __ptext16:
  4318                           	callstack 0
  4319   002508                     _i2c_Start:
  4320                           	callstack 26
  4321   002508                     
  4322                           ;i2c.c: 50:     i2c_Wait();
  4323   002508  ECF0  F011         	call	_i2c_Wait	;wreg free
  4324   00250C                     
  4325                           ;i2c.c: 51:     SEN2 = 1;
  4326   00250C  806B               	bsf	3947,0,c	;volatile
  4327   00250E  0012               	return		;funcret
  4328   002510                     __end_of_i2c_Start:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _i2c_Address *****************
  4332 ;; Defined at:
  4333 ;;		line 78 in file "i2c.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  address         1    wreg     unsigned char 
  4336 ;;  mode            1    7[COMRAM] unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  address         1    8[COMRAM] unsigned char 
  4339 ;;  l_address       1    9[COMRAM] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;Total ram usage:        3 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 3
  4356 ;; This function calls:
  4357 ;;		_i2c_Wait
  4358 ;; This function is called by:
  4359 ;;		_write_i2c
  4360 ;;		_read_i2c
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text17
  4365   0024AA                     __ptext17:
  4366                           	callstack 0
  4367   0024AA                     _i2c_Address:
  4368                           	callstack 26
  4369                           
  4370                           ;incstack = 0
  4371                           ;i2c_Address@address stored from wreg
  4372   0024AA  6E3A               	movwf	i2c_Address@address^0,c
  4373   0024AC                     
  4374                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  4375   0024AC  C03A  F03B         	movff	i2c_Address@address,i2c_Address@l_address
  4376   0024B0                     
  4377                           ;i2c.c: 82:     l_address += mode;
  4378   0024B0  5039               	movf	i2c_Address@mode^0,w,c
  4379   0024B2  263B               	addwf	i2c_Address@l_address^0,f,c
  4380   0024B4                     
  4381                           ;i2c.c: 83:     i2c_Wait();
  4382   0024B4  ECF0  F011         	call	_i2c_Wait	;wreg free
  4383   0024B8                     
  4384                           ;i2c.c: 84:     SSP2BUF = l_address;
  4385   0024B8  C03B  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  4386   0024BC  0012               	return		;funcret
  4387   0024BE                     __end_of_i2c_Address:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _i2c_Wait *****************
  4391 ;; Defined at:
  4392 ;;		line 43 in file "i2c.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;Total ram usage:        1 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 2
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_i2c_Start
  4417 ;;		_i2c_Restart
  4418 ;;		_i2c_Stop
  4419 ;;		_i2c_Write
  4420 ;;		_i2c_Address
  4421 ;;		_i2c_Read
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text18
  4426   0023E0                     __ptext18:
  4427                           	callstack 0
  4428   0023E0                     _i2c_Wait:
  4429                           	callstack 26
  4430   0023E0                     l5019:
  4431   0023E0  CF6B F038          	movff	3947,??_i2c_Wait	;volatile
  4432   0023E4  0E1F               	movlw	31
  4433   0023E6  1638               	andwf	??_i2c_Wait^0,f,c
  4434   0023E8  A4D8               	btfss	status,2,c
  4435   0023EA  EFF9  F011         	goto	u3351
  4436   0023EE  EFFB  F011         	goto	u3350
  4437   0023F2                     u3351:
  4438   0023F2  EFF0  F011         	goto	l5019
  4439   0023F6                     u3350:
  4440   0023F6  B46D               	btfsc	109,2,c	;volatile
  4441   0023F8  EF00  F012         	goto	u3361
  4442   0023FC  EF02  F012         	goto	u3360
  4443   002400                     u3361:
  4444   002400  EFF0  F011         	goto	l5019
  4445   002404                     u3360:
  4446   002404  0012               	return		;funcret
  4447   002406                     __end_of_i2c_Wait:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function ___aldiv *****************
  4451 ;; Defined at:
  4452 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  dividend        4    6[COMRAM] long 
  4455 ;;  divisor         4   10[COMRAM] long 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  quotient        4   16[COMRAM] long 
  4458 ;;  sign            1   15[COMRAM] unsigned char 
  4459 ;;  counter         1   14[COMRAM] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  4    6[COMRAM] long 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4469 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;Total ram usage:       14 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 2
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_write_i2c
  4480 ;;		_read_i2c
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text19
  4485   001702                     __ptext19:
  4486                           	callstack 0
  4487   001702                     ___aldiv:
  4488                           	callstack 27
  4489   001702  0E00               	movlw	0
  4490   001704  6E41               	movwf	___aldiv@sign^0,c
  4491   001706  BE3F               	btfsc	(___aldiv@divisor+3)^0,7,c
  4492   001708  EF8A  F00B         	goto	u3370
  4493   00170C  EF88  F00B         	goto	u3371
  4494   001710                     u3371:
  4495   001710  EF94  F00B         	goto	l5051
  4496   001714                     u3370:
  4497   001714  1E3F               	comf	(___aldiv@divisor+3)^0,f,c
  4498   001716  1E3E               	comf	(___aldiv@divisor+2)^0,f,c
  4499   001718  1E3D               	comf	(___aldiv@divisor+1)^0,f,c
  4500   00171A  6C3C               	negf	___aldiv@divisor^0,c
  4501   00171C  0E00               	movlw	0
  4502   00171E  223D               	addwfc	(___aldiv@divisor+1)^0,f,c
  4503   001720  223E               	addwfc	(___aldiv@divisor+2)^0,f,c
  4504   001722  223F               	addwfc	(___aldiv@divisor+3)^0,f,c
  4505   001724  0E01               	movlw	1
  4506   001726  6E41               	movwf	___aldiv@sign^0,c
  4507   001728                     l5051:
  4508   001728  BE3B               	btfsc	(___aldiv@dividend+3)^0,7,c
  4509   00172A  EF9B  F00B         	goto	u3380
  4510   00172E  EF99  F00B         	goto	u3381
  4511   001732                     u3381:
  4512   001732  EFA5  F00B         	goto	l5057
  4513   001736                     u3380:
  4514   001736  1E3B               	comf	(___aldiv@dividend+3)^0,f,c
  4515   001738  1E3A               	comf	(___aldiv@dividend+2)^0,f,c
  4516   00173A  1E39               	comf	(___aldiv@dividend+1)^0,f,c
  4517   00173C  6C38               	negf	___aldiv@dividend^0,c
  4518   00173E  0E00               	movlw	0
  4519   001740  2239               	addwfc	(___aldiv@dividend+1)^0,f,c
  4520   001742  223A               	addwfc	(___aldiv@dividend+2)^0,f,c
  4521   001744  223B               	addwfc	(___aldiv@dividend+3)^0,f,c
  4522   001746  0E01               	movlw	1
  4523   001748  1A41               	xorwf	___aldiv@sign^0,f,c
  4524   00174A                     l5057:
  4525   00174A  0E00               	movlw	0
  4526   00174C  6E42               	movwf	___aldiv@quotient^0,c
  4527   00174E  0E00               	movlw	0
  4528   001750  6E43               	movwf	(___aldiv@quotient+1)^0,c
  4529   001752  0E00               	movlw	0
  4530   001754  6E44               	movwf	(___aldiv@quotient+2)^0,c
  4531   001756  0E00               	movlw	0
  4532   001758  6E45               	movwf	(___aldiv@quotient+3)^0,c
  4533   00175A  503C               	movf	___aldiv@divisor^0,w,c
  4534   00175C  103D               	iorwf	(___aldiv@divisor+1)^0,w,c
  4535   00175E  103E               	iorwf	(___aldiv@divisor+2)^0,w,c
  4536   001760  103F               	iorwf	(___aldiv@divisor+3)^0,w,c
  4537   001762  B4D8               	btfsc	status,2,c
  4538   001764  EFB6  F00B         	goto	u3391
  4539   001768  EFB8  F00B         	goto	u3390
  4540   00176C                     u3391:
  4541   00176C  EFEE  F00B         	goto	l5079
  4542   001770                     u3390:
  4543   001770  0E01               	movlw	1
  4544   001772  6E40               	movwf	___aldiv@counter^0,c
  4545   001774  EFC2  F00B         	goto	l5065
  4546   001778                     l5063:
  4547   001778  90D8               	bcf	status,0,c
  4548   00177A  363C               	rlcf	___aldiv@divisor^0,f,c
  4549   00177C  363D               	rlcf	(___aldiv@divisor+1)^0,f,c
  4550   00177E  363E               	rlcf	(___aldiv@divisor+2)^0,f,c
  4551   001780  363F               	rlcf	(___aldiv@divisor+3)^0,f,c
  4552   001782  2A40               	incf	___aldiv@counter^0,f,c
  4553   001784                     l5065:
  4554   001784  AE3F               	btfss	(___aldiv@divisor+3)^0,7,c
  4555   001786  EFC7  F00B         	goto	u3401
  4556   00178A  EFC9  F00B         	goto	u3400
  4557   00178E                     u3401:
  4558   00178E  EFBC  F00B         	goto	l5063
  4559   001792                     u3400:
  4560   001792                     l5067:
  4561   001792  90D8               	bcf	status,0,c
  4562   001794  3642               	rlcf	___aldiv@quotient^0,f,c
  4563   001796  3643               	rlcf	(___aldiv@quotient+1)^0,f,c
  4564   001798  3644               	rlcf	(___aldiv@quotient+2)^0,f,c
  4565   00179A  3645               	rlcf	(___aldiv@quotient+3)^0,f,c
  4566   00179C  503C               	movf	___aldiv@divisor^0,w,c
  4567   00179E  5C38               	subwf	___aldiv@dividend^0,w,c
  4568   0017A0  503D               	movf	(___aldiv@divisor+1)^0,w,c
  4569   0017A2  5839               	subwfb	(___aldiv@dividend+1)^0,w,c
  4570   0017A4  503E               	movf	(___aldiv@divisor+2)^0,w,c
  4571   0017A6  583A               	subwfb	(___aldiv@dividend+2)^0,w,c
  4572   0017A8  503F               	movf	(___aldiv@divisor+3)^0,w,c
  4573   0017AA  583B               	subwfb	(___aldiv@dividend+3)^0,w,c
  4574   0017AC  A0D8               	btfss	status,0,c
  4575   0017AE  EFDB  F00B         	goto	u3411
  4576   0017B2  EFDD  F00B         	goto	u3410
  4577   0017B6                     u3411:
  4578   0017B6  EFE6  F00B         	goto	l5075
  4579   0017BA                     u3410:
  4580   0017BA  503C               	movf	___aldiv@divisor^0,w,c
  4581   0017BC  5E38               	subwf	___aldiv@dividend^0,f,c
  4582   0017BE  503D               	movf	(___aldiv@divisor+1)^0,w,c
  4583   0017C0  5A39               	subwfb	(___aldiv@dividend+1)^0,f,c
  4584   0017C2  503E               	movf	(___aldiv@divisor+2)^0,w,c
  4585   0017C4  5A3A               	subwfb	(___aldiv@dividend+2)^0,f,c
  4586   0017C6  503F               	movf	(___aldiv@divisor+3)^0,w,c
  4587   0017C8  5A3B               	subwfb	(___aldiv@dividend+3)^0,f,c
  4588   0017CA  8042               	bsf	___aldiv@quotient^0,0,c
  4589   0017CC                     l5075:
  4590   0017CC  90D8               	bcf	status,0,c
  4591   0017CE  323F               	rrcf	(___aldiv@divisor+3)^0,f,c
  4592   0017D0  323E               	rrcf	(___aldiv@divisor+2)^0,f,c
  4593   0017D2  323D               	rrcf	(___aldiv@divisor+1)^0,f,c
  4594   0017D4  323C               	rrcf	___aldiv@divisor^0,f,c
  4595   0017D6  2E40               	decfsz	___aldiv@counter^0,f,c
  4596   0017D8  EFC9  F00B         	goto	l5067
  4597   0017DC                     l5079:
  4598   0017DC  5041               	movf	___aldiv@sign^0,w,c
  4599   0017DE  B4D8               	btfsc	status,2,c
  4600   0017E0  EFF4  F00B         	goto	u3421
  4601   0017E4  EFF6  F00B         	goto	u3420
  4602   0017E8                     u3421:
  4603   0017E8  EFFE  F00B         	goto	l5083
  4604   0017EC                     u3420:
  4605   0017EC  1E45               	comf	(___aldiv@quotient+3)^0,f,c
  4606   0017EE  1E44               	comf	(___aldiv@quotient+2)^0,f,c
  4607   0017F0  1E43               	comf	(___aldiv@quotient+1)^0,f,c
  4608   0017F2  6C42               	negf	___aldiv@quotient^0,c
  4609   0017F4  0E00               	movlw	0
  4610   0017F6  2243               	addwfc	(___aldiv@quotient+1)^0,f,c
  4611   0017F8  2244               	addwfc	(___aldiv@quotient+2)^0,f,c
  4612   0017FA  2245               	addwfc	(___aldiv@quotient+3)^0,f,c
  4613   0017FC                     l5083:
  4614   0017FC  C042  F038         	movff	___aldiv@quotient,?___aldiv
  4615   001800  C043  F039         	movff	___aldiv@quotient+1,?___aldiv+1
  4616   001804  C044  F03A         	movff	___aldiv@quotient+2,?___aldiv+2
  4617   001808  C045  F03B         	movff	___aldiv@quotient+3,?___aldiv+3
  4618   00180C  0012               	return		;funcret
  4619   00180E                     __end_of___aldiv:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _MotorPosition_Init *****************
  4623 ;; Defined at:
  4624 ;;		line 950 in file "main.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 4
  4645 ;; This function calls:
  4646 ;;		_MotorBREAK
  4647 ;;		_MotorON
  4648 ;;		_Read_IR
  4649 ;;		_WriteSTLED316SErr
  4650 ;;		_delay_1ms
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text20
  4657   00180E                     __ptext20:
  4658                           	callstack 0
  4659   00180E                     _MotorPosition_Init:
  4660                           	callstack 26
  4661   00180E                     
  4662                           ;main.c: 951:     LATAbits.LATA2 = 1;
  4663   00180E  8489               	bsf	137,2,c	;volatile
  4664   001810                     
  4665                           ;main.c: 952:     MotorON();
  4666   001810  EC72  F012         	call	_MotorON	;wreg free
  4667   001814                     
  4668                           ;main.c: 953:     _delay((unsigned long)((350)*(8000000/4000.0)));
  4669   001814  0E04               	movlw	4
  4670   001816  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4671   001818  0E8E               	movlw	142
  4672   00181A  6E41               	movwf	??_MotorPosition_Init^0,c
  4673   00181C  0E12               	movlw	18
  4674   00181E                     u4067:
  4675   00181E  2EE8               	decfsz	wreg,f,c
  4676   001820  D7FE               	bra	u4067
  4677   001822  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4678   001824  D7FC               	bra	u4067
  4679   001826  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4680   001828  D7FA               	bra	u4067
  4681   00182A  D000               	nop2	
  4682   00182C                     
  4683                           ;main.c: 954:     errorcounter = 30;
  4684   00182C  0E1E               	movlw	30
  4685   00182E  6E52               	movwf	_errorcounter^0,c	;volatile
  4686   001830  0E00               	movlw	0
  4687   001832  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4688   001834  0E00               	movlw	0
  4689   001836  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4690   001838  0E00               	movlw	0
  4691   00183A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4692   00183C                     l3555:
  4693                           
  4694                           ;main.c: 957:         IR_SENSORF = Read_IR();
  4695   00183C  EC16  F012         	call	_Read_IR	;wreg free
  4696   001840  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4697   001844  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4698   001848                     
  4699                           ;main.c: 958:         if (errorcounter == 0) {
  4700   001848  5052               	movf	_errorcounter^0,w,c	;volatile
  4701   00184A  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4702   00184C  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4703   00184E  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4704   001850  A4D8               	btfss	status,2,c
  4705   001852  EF2D  F00C         	goto	u2041
  4706   001856  EF2F  F00C         	goto	u2040
  4707   00185A                     u2041:
  4708   00185A  EF34  F00C         	goto	l3563
  4709   00185E                     u2040:
  4710   00185E                     
  4711                           ;main.c: 959:             WriteSTLED316SErr('1');
  4712   00185E  0E31               	movlw	49
  4713   001860  EC8B  F00D         	call	_WriteSTLED316SErr
  4714   001864                     
  4715                           ;main.c: 960:             MotorBREAK();
  4716   001864  EC77  F012         	call	_MotorBREAK	;wreg free
  4717   001868                     l3563:
  4718                           
  4719                           ;main.c: 963:     } while (IR_SENSORF != 0);
  4720   001868  500B               	movf	_IR_SENSORF^0,w,c
  4721   00186A  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4722   00186C  A4D8               	btfss	status,2,c
  4723   00186E  EF3B  F00C         	goto	u2051
  4724   001872  EF3D  F00C         	goto	u2050
  4725   001876                     u2051:
  4726   001876  EF1E  F00C         	goto	l3555
  4727   00187A                     u2050:
  4728   00187A                     
  4729                           ;main.c: 965:     _delay((unsigned long)((30)*(8000000/4000.0)));
  4730   00187A  0E4E               	movlw	78
  4731   00187C  6E41               	movwf	??_MotorPosition_Init^0,c
  4732   00187E  0EEB               	movlw	235
  4733   001880                     u4077:
  4734   001880  2EE8               	decfsz	wreg,f,c
  4735   001882  D7FE               	bra	u4077
  4736   001884  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4737   001886  D7FC               	bra	u4077
  4738   001888  F000               	nop	
  4739   00188A                     
  4740                           ;main.c: 966:     errorcounter = 30;
  4741   00188A  0E1E               	movlw	30
  4742   00188C  6E52               	movwf	_errorcounter^0,c	;volatile
  4743   00188E  0E00               	movlw	0
  4744   001890  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4745   001892  0E00               	movlw	0
  4746   001894  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4747   001896  0E00               	movlw	0
  4748   001898  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4749   00189A                     l3569:
  4750                           
  4751                           ;main.c: 968:         IR_SENSORF = Read_IR();
  4752   00189A  EC16  F012         	call	_Read_IR	;wreg free
  4753   00189E  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  4754   0018A2  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  4755   0018A6                     
  4756                           ;main.c: 969:         if (errorcounter == 0) {
  4757   0018A6  5052               	movf	_errorcounter^0,w,c	;volatile
  4758   0018A8  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4759   0018AA  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4760   0018AC  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4761   0018AE  A4D8               	btfss	status,2,c
  4762   0018B0  EF5C  F00C         	goto	u2061
  4763   0018B4  EF5E  F00C         	goto	u2060
  4764   0018B8                     u2061:
  4765   0018B8  EF63  F00C         	goto	l3577
  4766   0018BC                     u2060:
  4767   0018BC                     
  4768                           ;main.c: 970:             WriteSTLED316SErr('2');
  4769   0018BC  0E32               	movlw	50
  4770   0018BE  EC8B  F00D         	call	_WriteSTLED316SErr
  4771   0018C2                     
  4772                           ;main.c: 971:             MotorBREAK();
  4773   0018C2  EC77  F012         	call	_MotorBREAK	;wreg free
  4774   0018C6                     l3577:
  4775                           
  4776                           ;main.c: 974:     } while (IR_SENSORF != 1);
  4777   0018C6  040B               	decf	_IR_SENSORF^0,w,c
  4778   0018C8  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  4779   0018CA  A4D8               	btfss	status,2,c
  4780   0018CC  EF6A  F00C         	goto	u2071
  4781   0018D0  EF6C  F00C         	goto	u2070
  4782   0018D4                     u2071:
  4783   0018D4  EF4D  F00C         	goto	l3569
  4784   0018D8                     u2070:
  4785   0018D8                     
  4786                           ;main.c: 976:     errorcounter = 30;
  4787   0018D8  0E1E               	movlw	30
  4788   0018DA  6E52               	movwf	_errorcounter^0,c	;volatile
  4789   0018DC  0E00               	movlw	0
  4790   0018DE  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4791   0018E0  0E00               	movlw	0
  4792   0018E2  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4793   0018E4  0E00               	movlw	0
  4794   0018E6  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4795   0018E8                     
  4796                           ;main.c: 978:     delay_1ms(Motor_Stop_Delay_Time);
  4797   0018E8  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4798   0018EC  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4799   0018F0  ECC7  F011         	call	_delay_1ms	;wreg free
  4800   0018F4                     
  4801                           ;main.c: 979:     MotorBREAK();
  4802   0018F4  EC77  F012         	call	_MotorBREAK	;wreg free
  4803   0018F8                     
  4804                           ;main.c: 980:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4805   0018F8  0E06               	movlw	6
  4806   0018FA  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4807   0018FC  0E13               	movlw	19
  4808   0018FE  6E41               	movwf	??_MotorPosition_Init^0,c
  4809   001900  0EAE               	movlw	174
  4810   001902                     u4087:
  4811   001902  2EE8               	decfsz	wreg,f,c
  4812   001904  D7FE               	bra	u4087
  4813   001906  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4814   001908  D7FC               	bra	u4087
  4815   00190A  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4816   00190C  D7FA               	bra	u4087
  4817   00190E                     
  4818                           ;main.c: 981:     IR_SENSORF = 0;
  4819   00190E  0E00               	movlw	0
  4820   001910  6E0C               	movwf	(_IR_SENSORF+1)^0,c
  4821   001912  0E00               	movlw	0
  4822   001914  6E0B               	movwf	_IR_SENSORF^0,c
  4823   001916                     
  4824                           ;main.c: 983:     LATAbits.LATA2 = 0;
  4825   001916  9489               	bcf	137,2,c	;volatile
  4826   001918  0012               	return		;funcret
  4827   00191A                     __end_of_MotorPosition_Init:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _InitTimer1 *****************
  4831 ;; Defined at:
  4832 ;;		line 1283 in file "main.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 2
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text21
  4861   002450                     __ptext21:
  4862                           	callstack 0
  4863   002450                     _InitTimer1:
  4864                           	callstack 28
  4865   002450                     
  4866                           ;main.c: 1284:     T1CON = 0b00110001;
  4867   002450  0E31               	movlw	49
  4868   002452  6ECD               	movwf	205,c	;volatile
  4869                           
  4870                           ;main.c: 1287:     TMR1 = 0x9E57;
  4871   002454  0E9E               	movlw	158
  4872   002456  6ECF               	movwf	207,c	;volatile
  4873   002458  0E57               	movlw	87
  4874   00245A  6ECE               	movwf	206,c	;volatile
  4875   00245C                     
  4876                           ;main.c: 1288:     TMR1IF = 0;
  4877   00245C  909E               	bcf	3998,0,c	;volatile
  4878   00245E                     
  4879                           ;main.c: 1289:     TMR1IE = 1;
  4880   00245E  809D               	bsf	3997,0,c	;volatile
  4881   002460                     
  4882                           ;main.c: 1290:     IPR1bits.TMR1IP = 1;
  4883   002460  809F               	bsf	159,0,c	;volatile
  4884                           
  4885                           ;main.c: 1292:     TMR1IF_triggered = 0;
  4886   002462  0E00               	movlw	0
  4887   002464  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  4888   002466  0012               	return		;funcret
  4889   002468                     __end_of_InitTimer1:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _InitSTLED316 *****************
  4893 ;; Defined at:
  4894 ;;		line 14 in file "Display.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  Brightness      1    wreg     unsigned char 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  Brightness      1   14[COMRAM] unsigned char 
  4899 ;;  i               2    0        int 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:        3 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 3
  4916 ;; This function calls:
  4917 ;;		_STLED316s_SPI_SendData
  4918 ;; This function is called by:
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text22
  4924   001EE6                     __ptext22:
  4925                           	callstack 0
  4926   001EE6                     _InitSTLED316:
  4927                           	callstack 27
  4928                           
  4929                           ;incstack = 0
  4930                           ;InitSTLED316@Brightness stored from wreg
  4931   001EE6  6E40               	movwf	InitSTLED316@Brightness^0,c
  4932   001EE8                     
  4933                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  4934   001EE8  888B               	bsf	139,4,c	;volatile
  4935                           
  4936                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  4937   001EEA  988B               	bcf	139,4,c	;volatile
  4938   001EEC                     
  4939                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4940   001EEC  0E30               	movlw	48
  4941   001EEE  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4942   001EF2                     
  4943                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  4944   001EF2  888B               	bsf	139,4,c	;volatile
  4945   001EF4                     
  4946                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  4947   001EF4  988B               	bcf	139,4,c	;volatile
  4948                           
  4949                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4950   001EF6  0E30               	movlw	48
  4951   001EF8  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4952                           
  4953                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  4954   001EFC  C040  F03E         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4955   001F00  3A3E               	swapf	??_InitSTLED316^0,f,c
  4956   001F02  0E0F               	movlw	15
  4957   001F04  163E               	andwf	??_InitSTLED316^0,f,c
  4958   001F06  0E05               	movlw	5
  4959   001F08  6E3F               	movwf	(??_InitSTLED316+1)^0,c
  4960   001F0A                     u2035:
  4961   001F0A  90D8               	bcf	status,0,c
  4962   001F0C  363E               	rlcf	??_InitSTLED316^0,f,c
  4963   001F0E  2E3F               	decfsz	(??_InitSTLED316+1)^0,f,c
  4964   001F10  EF85  F00F         	goto	u2035
  4965   001F14  503E               	movf	??_InitSTLED316^0,w,c
  4966   001F16  0905               	iorlw	5
  4967   001F18  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4968   001F1C                     
  4969                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  4970   001F1C  888B               	bsf	139,4,c	;volatile
  4971   001F1E                     
  4972                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  4973   001F1E  988B               	bcf	139,4,c	;volatile
  4974                           
  4975                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4976   001F20  0E11               	movlw	17
  4977   001F22  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4978   001F26                     
  4979                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  4980   001F26  888B               	bsf	139,4,c	;volatile
  4981   001F28                     
  4982                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  4983   001F28  988B               	bcf	139,4,c	;volatile
  4984                           
  4985                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4986   001F2A  0E11               	movlw	17
  4987   001F2C  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4988                           
  4989                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  4990   001F30  5040               	movf	InitSTLED316@Brightness^0,w,c
  4991   001F32  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4992                           
  4993                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  4994   001F36  5040               	movf	InitSTLED316@Brightness^0,w,c
  4995   001F38  ECB9  F00F         	call	_STLED316s_SPI_SendData
  4996                           
  4997                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  4998   001F3C  5040               	movf	InitSTLED316@Brightness^0,w,c
  4999   001F3E  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5000   001F42                     
  5001                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  5002   001F42  888B               	bsf	139,4,c	;volatile
  5003   001F44                     
  5004                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  5005   001F44  988B               	bcf	139,4,c	;volatile
  5006                           
  5007                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5008   001F46  0E18               	movlw	24
  5009   001F48  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5010   001F4C                     
  5011                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  5012   001F4C  888B               	bsf	139,4,c	;volatile
  5013   001F4E                     
  5014                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  5015   001F4E  988B               	bcf	139,4,c	;volatile
  5016                           
  5017                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5018   001F50  0E18               	movlw	24
  5019   001F52  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5020                           
  5021                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  5022   001F56  5040               	movf	InitSTLED316@Brightness^0,w,c
  5023   001F58  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5024                           
  5025                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  5026   001F5C  5040               	movf	InitSTLED316@Brightness^0,w,c
  5027   001F5E  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5028                           
  5029                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  5030   001F62  5040               	movf	InitSTLED316@Brightness^0,w,c
  5031   001F64  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5032                           
  5033                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  5034   001F68  5040               	movf	InitSTLED316@Brightness^0,w,c
  5035   001F6A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5036   001F6E                     
  5037                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  5038   001F6E  888B               	bsf	139,4,c	;volatile
  5039   001F70  0012               	return		;funcret
  5040   001F72                     __end_of_InitSTLED316:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function _Homing_Again_Manual *****************
  5044 ;; Defined at:
  5045 ;;		line 1012 in file "main.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  NUMInit         2    0        int 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;Total ram usage:        2 bytes
  5064 ;; Hardware stack levels used: 1
  5065 ;; Hardware stack levels required when called: 4
  5066 ;; This function calls:
  5067 ;;		_AD_capture_BattVoltage
  5068 ;;		_MotorBREAK
  5069 ;;		_MotorON
  5070 ;;		_Read_IR
  5071 ;;		_WriteSTLED316SData
  5072 ;;		_WriteSTLED316SErr
  5073 ;;		_delay_1ms
  5074 ;;		_readWeighingData
  5075 ;; This function is called by:
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text23
  5081   0010BA                     __ptext23:
  5082                           	callstack 0
  5083   0010BA                     _Homing_Again_Manual:
  5084                           	callstack 26
  5085   0010BA                     
  5086                           ;main.c: 1015:     if (vibration_mode == 1) {
  5087   0010BA  042C               	decf	_vibration_mode^0,w,c
  5088   0010BC  A4D8               	btfss	status,2,c
  5089   0010BE  EF63  F008         	goto	u2101
  5090   0010C2  EF65  F008         	goto	u2100
  5091   0010C6                     u2101:
  5092   0010C6  EF7A  F008         	goto	l369
  5093   0010CA                     u2100:
  5094   0010CA                     
  5095                           ;main.c: 1016:         LATCbits.LATC1 = 1;
  5096   0010CA  828B               	bsf	139,1,c	;volatile
  5097   0010CC                     
  5098                           ;main.c: 1017:         delay_1ms(Vmotor_Time);
  5099   0010CC  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5100   0010D0  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5101   0010D4  ECC7  F011         	call	_delay_1ms	;wreg free
  5102   0010D8                     
  5103                           ;main.c: 1018:         LATCbits.LATC1 = 0;
  5104   0010D8  928B               	bcf	139,1,c	;volatile
  5105   0010DA                     l3673:
  5106                           
  5107                           ;main.c: 1019:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5108   0010DA  0E04               	movlw	4
  5109   0010DC  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5110   0010DE  0E0C               	movlw	12
  5111   0010E0  6E49               	movwf	??_Homing_Again_Manual^0,c
  5112   0010E2  0E34               	movlw	52
  5113   0010E4                     u4097:
  5114   0010E4  2EE8               	decfsz	wreg,f,c
  5115   0010E6  D7FE               	bra	u4097
  5116   0010E8  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5117   0010EA  D7FC               	bra	u4097
  5118   0010EC  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5119   0010EE  D7FA               	bra	u4097
  5120                           
  5121                           ;main.c: 1020:     } else {
  5122   0010F0  EF7D  F008         	goto	l3677
  5123   0010F4                     l369:
  5124                           
  5125                           ;main.c: 1021:         LATCbits.LATC1 = 0;
  5126   0010F4  928B               	bcf	139,1,c	;volatile
  5127   0010F6  EF6D  F008         	goto	l3673
  5128   0010FA                     l3677:
  5129                           
  5130                           ;main.c: 1025:     LATAbits.LATA2 = 1;
  5131   0010FA  8489               	bsf	137,2,c	;volatile
  5132   0010FC                     
  5133                           ;main.c: 1028:     if (NUM == 0) {
  5134   0010FC  5013               	movf	_NUM^0,w,c
  5135   0010FE  1014               	iorwf	(_NUM+1)^0,w,c
  5136   001100  A4D8               	btfss	status,2,c
  5137   001102  EF85  F008         	goto	u2111
  5138   001106  EF87  F008         	goto	u2110
  5139   00110A                     u2111:
  5140   00110A  EF8D  F008         	goto	l3685
  5141   00110E                     u2110:
  5142   00110E                     
  5143                           ;main.c: 1029:         i_RUN_ZERO = 1;
  5144   00110E  0E00               	movlw	0
  5145   001110  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5146   001112  0E01               	movlw	1
  5147   001114  6E11               	movwf	_i_RUN_ZERO^0,c
  5148                           
  5149                           ;main.c: 1030:     }
  5150   001116  EF17  F00A         	goto	l3793
  5151   00111A                     l3685:
  5152                           
  5153                           ;main.c: 1032:     {;main.c: 1033:         i_RUN_ZERO = 0;
  5154   00111A  0E00               	movlw	0
  5155   00111C  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5156   00111E  0E00               	movlw	0
  5157   001120  6E11               	movwf	_i_RUN_ZERO^0,c
  5158   001122  EF17  F00A         	goto	l3793
  5159   001126                     l374:
  5160   001126  0004               	clrwdt		;# 
  5161   001128                     
  5162                           ;main.c: 1039:         readWeighingData();
  5163   001128  EC66  F010         	call	_readWeighingData	;wreg free
  5164   00112C                     
  5165                           ;main.c: 1040:         AD_capture_BattVoltage();
  5166   00112C  EC21  F011         	call	_AD_capture_BattVoltage	;wreg free
  5167   001130                     
  5168                           ;main.c: 1041:         delay_1ms(Motor_Pause_Time);
  5169   001130  C015  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  5170   001134  C016  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5171   001138  ECC7  F011         	call	_delay_1ms	;wreg free
  5172   00113C                     
  5173                           ;main.c: 1042:         MotorON();
  5174   00113C  EC72  F012         	call	_MotorON	;wreg free
  5175   001140                     
  5176                           ;main.c: 1043:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5177   001140  0E04               	movlw	4
  5178   001142  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5179   001144  0E8E               	movlw	142
  5180   001146  6E49               	movwf	??_Homing_Again_Manual^0,c
  5181   001148  0E12               	movlw	18
  5182   00114A                     u4107:
  5183   00114A  2EE8               	decfsz	wreg,f,c
  5184   00114C  D7FE               	bra	u4107
  5185   00114E  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5186   001150  D7FC               	bra	u4107
  5187   001152  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5188   001154  D7FA               	bra	u4107
  5189   001156  D000               	nop2	
  5190   001158                     
  5191                           ;main.c: 1044:         errorcounter = 30;
  5192   001158  0E1E               	movlw	30
  5193   00115A  6E52               	movwf	_errorcounter^0,c	;volatile
  5194   00115C  0E00               	movlw	0
  5195   00115E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5196   001160  0E00               	movlw	0
  5197   001162  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5198   001164  0E00               	movlw	0
  5199   001166  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5200   001168                     l3699:
  5201                           
  5202                           ;main.c: 1048:             IR_SENSORF = Read_IR();
  5203   001168  EC16  F012         	call	_Read_IR	;wreg free
  5204   00116C  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  5205   001170  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  5206   001174                     
  5207                           ;main.c: 1049:             if (errorcounter == 0) {
  5208   001174  5052               	movf	_errorcounter^0,w,c	;volatile
  5209   001176  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5210   001178  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5211   00117A  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5212   00117C  A4D8               	btfss	status,2,c
  5213   00117E  EFC3  F008         	goto	u2121
  5214   001182  EFC5  F008         	goto	u2120
  5215   001186                     u2121:
  5216   001186  EFCA  F008         	goto	l3707
  5217   00118A                     u2120:
  5218   00118A                     
  5219                           ;main.c: 1050:                 WriteSTLED316SErr('1');
  5220   00118A  0E31               	movlw	49
  5221   00118C  EC8B  F00D         	call	_WriteSTLED316SErr
  5222   001190                     
  5223                           ;main.c: 1051:                 MotorBREAK();
  5224   001190  EC77  F012         	call	_MotorBREAK	;wreg free
  5225   001194                     l3707:
  5226                           
  5227                           ;main.c: 1054:         } while (IR_SENSORF != 0);
  5228   001194  500B               	movf	_IR_SENSORF^0,w,c
  5229   001196  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  5230   001198  A4D8               	btfss	status,2,c
  5231   00119A  EFD1  F008         	goto	u2131
  5232   00119E  EFD3  F008         	goto	u2130
  5233   0011A2                     u2131:
  5234   0011A2  EFB4  F008         	goto	l3699
  5235   0011A6                     u2130:
  5236   0011A6                     
  5237                           ;main.c: 1056:         _delay((unsigned long)((30)*(8000000/4000.0)));
  5238   0011A6  0E4E               	movlw	78
  5239   0011A8  6E49               	movwf	??_Homing_Again_Manual^0,c
  5240   0011AA  0EEB               	movlw	235
  5241   0011AC                     u4117:
  5242   0011AC  2EE8               	decfsz	wreg,f,c
  5243   0011AE  D7FE               	bra	u4117
  5244   0011B0  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5245   0011B2  D7FC               	bra	u4117
  5246   0011B4  F000               	nop	
  5247   0011B6                     
  5248                           ;main.c: 1058:         errorcounter = 30;
  5249   0011B6  0E1E               	movlw	30
  5250   0011B8  6E52               	movwf	_errorcounter^0,c	;volatile
  5251   0011BA  0E00               	movlw	0
  5252   0011BC  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5253   0011BE  0E00               	movlw	0
  5254   0011C0  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5255   0011C2  0E00               	movlw	0
  5256   0011C4  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5257   0011C6                     l3713:
  5258                           
  5259                           ;main.c: 1061:             IR_SENSORF = Read_IR();
  5260   0011C6  EC16  F012         	call	_Read_IR	;wreg free
  5261   0011CA  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  5262   0011CE  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  5263   0011D2                     
  5264                           ;main.c: 1062:             if (errorcounter == 0) {
  5265   0011D2  5052               	movf	_errorcounter^0,w,c	;volatile
  5266   0011D4  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5267   0011D6  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5268   0011D8  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5269   0011DA  A4D8               	btfss	status,2,c
  5270   0011DC  EFF2  F008         	goto	u2141
  5271   0011E0  EFF4  F008         	goto	u2140
  5272   0011E4                     u2141:
  5273   0011E4  EFF9  F008         	goto	l3721
  5274   0011E8                     u2140:
  5275   0011E8                     
  5276                           ;main.c: 1063:                 WriteSTLED316SErr('2');
  5277   0011E8  0E32               	movlw	50
  5278   0011EA  EC8B  F00D         	call	_WriteSTLED316SErr
  5279   0011EE                     
  5280                           ;main.c: 1064:                 MotorBREAK();
  5281   0011EE  EC77  F012         	call	_MotorBREAK	;wreg free
  5282   0011F2                     l3721:
  5283                           
  5284                           ;main.c: 1066:         } while (IR_SENSORF != 1);
  5285   0011F2  040B               	decf	_IR_SENSORF^0,w,c
  5286   0011F4  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  5287   0011F6  A4D8               	btfss	status,2,c
  5288   0011F8  EF00  F009         	goto	u2151
  5289   0011FC  EF02  F009         	goto	u2150
  5290   001200                     u2151:
  5291   001200  EFE3  F008         	goto	l3713
  5292   001204                     u2150:
  5293   001204                     
  5294                           ;main.c: 1069:         errorcounter = 30;
  5295   001204  0E1E               	movlw	30
  5296   001206  6E52               	movwf	_errorcounter^0,c	;volatile
  5297   001208  0E00               	movlw	0
  5298   00120A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5299   00120C  0E00               	movlw	0
  5300   00120E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5301   001210  0E00               	movlw	0
  5302   001212  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5303   001214                     
  5304                           ;main.c: 1070:         delay_1ms(Motor_Stop_Delay_Time);
  5305   001214  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5306   001218  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5307   00121C  ECC7  F011         	call	_delay_1ms	;wreg free
  5308   001220                     
  5309                           ;main.c: 1071:         MotorBREAK();
  5310   001220  EC77  F012         	call	_MotorBREAK	;wreg free
  5311                           
  5312                           ;main.c: 1074:         if (NUM > 0 && i_RUN_ZERO != 1) {
  5313   001224  5013               	movf	_NUM^0,w,c
  5314   001226  1014               	iorwf	(_NUM+1)^0,w,c
  5315   001228  B4D8               	btfsc	status,2,c
  5316   00122A  EF19  F009         	goto	u2161
  5317   00122E  EF1B  F009         	goto	u2160
  5318   001232                     u2161:
  5319   001232  EF27  F009         	goto	l3733
  5320   001236                     u2160:
  5321   001236  0411               	decf	_i_RUN_ZERO^0,w,c
  5322   001238  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5323   00123A  B4D8               	btfsc	status,2,c
  5324   00123C  EF22  F009         	goto	u2171
  5325   001240  EF24  F009         	goto	u2170
  5326   001244                     u2171:
  5327   001244  EF27  F009         	goto	l3733
  5328   001248                     u2170:
  5329   001248                     
  5330                           ;main.c: 1075:             NUM--;
  5331   001248  0613               	decf	_NUM^0,f,c
  5332   00124A  A0D8               	btfss	status,0,c
  5333   00124C  0614               	decf	(_NUM+1)^0,f,c
  5334   00124E                     l3733:
  5335                           
  5336                           ;main.c: 1078:         WriteSTLED316SData(NUM, vibration_mode);
  5337   00124E  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5338   001252  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5339   001256  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5340   00125A  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  5341   00125E                     
  5342                           ;main.c: 1079:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  5343   00125E  042C               	decf	_vibration_mode^0,w,c
  5344   001260  A4D8               	btfss	status,2,c
  5345   001262  EF35  F009         	goto	u2181
  5346   001266  EF37  F009         	goto	u2180
  5347   00126A                     u2181:
  5348   00126A  EF5E  F009         	goto	l3747
  5349   00126E                     u2180:
  5350   00126E  5013               	movf	_NUM^0,w,c
  5351   001270  1014               	iorwf	(_NUM+1)^0,w,c
  5352   001272  A4D8               	btfss	status,2,c
  5353   001274  EF3E  F009         	goto	u2191
  5354   001278  EF40  F009         	goto	u2190
  5355   00127C                     u2191:
  5356   00127C  EF49  F009         	goto	l384
  5357   001280                     u2190:
  5358   001280  0411               	decf	_i_RUN_ZERO^0,w,c
  5359   001282  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5360   001284  A4D8               	btfss	status,2,c
  5361   001286  EF47  F009         	goto	u2201
  5362   00128A  EF49  F009         	goto	u2200
  5363   00128E                     u2201:
  5364   00128E  EF5E  F009         	goto	l3747
  5365   001292                     u2200:
  5366   001292                     l384:
  5367                           
  5368                           ;main.c: 1080:             LATCbits.LATC1 = 1;
  5369   001292  828B               	bsf	139,1,c	;volatile
  5370   001294                     
  5371                           ;main.c: 1081:             delay_1ms(Vmotor_Time);
  5372   001294  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5373   001298  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5374   00129C  ECC7  F011         	call	_delay_1ms	;wreg free
  5375   0012A0                     
  5376                           ;main.c: 1082:             LATCbits.LATC1 = 0;
  5377   0012A0  928B               	bcf	139,1,c	;volatile
  5378   0012A2                     
  5379                           ;main.c: 1083:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5380   0012A2  0E04               	movlw	4
  5381   0012A4  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5382   0012A6  0E0C               	movlw	12
  5383   0012A8  6E49               	movwf	??_Homing_Again_Manual^0,c
  5384   0012AA  0E34               	movlw	52
  5385   0012AC                     u4127:
  5386   0012AC  2EE8               	decfsz	wreg,f,c
  5387   0012AE  D7FE               	bra	u4127
  5388   0012B0  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5389   0012B2  D7FC               	bra	u4127
  5390   0012B4  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5391   0012B6  D7FA               	bra	u4127
  5392                           
  5393                           ;main.c: 1085:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) 
      +                          {
  5394   0012B8  EF9E  F009         	goto	l3761
  5395   0012BC                     l3747:
  5396   0012BC  502C               	movf	_vibration_mode^0,w,c
  5397   0012BE  A4D8               	btfss	status,2,c
  5398   0012C0  EF64  F009         	goto	u2211
  5399   0012C4  EF66  F009         	goto	u2210
  5400   0012C8                     u2211:
  5401   0012C8  EF9E  F009         	goto	l3761
  5402   0012CC                     u2210:
  5403   0012CC  5013               	movf	_NUM^0,w,c
  5404   0012CE  1014               	iorwf	(_NUM+1)^0,w,c
  5405   0012D0  A4D8               	btfss	status,2,c
  5406   0012D2  EF6D  F009         	goto	u2221
  5407   0012D6  EF6F  F009         	goto	u2220
  5408   0012DA                     u2221:
  5409   0012DA  EF78  F009         	goto	l388
  5410   0012DE                     u2220:
  5411   0012DE  0411               	decf	_i_RUN_ZERO^0,w,c
  5412   0012E0  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5413   0012E2  A4D8               	btfss	status,2,c
  5414   0012E4  EF76  F009         	goto	u2231
  5415   0012E8  EF78  F009         	goto	u2230
  5416   0012EC                     u2231:
  5417   0012EC  EF9E  F009         	goto	l3761
  5418   0012F0                     u2230:
  5419   0012F0                     l388:
  5420                           
  5421                           ;main.c: 1086:             LATCbits.LATC1 = 0;
  5422   0012F0  928B               	bcf	139,1,c	;volatile
  5423   0012F2                     
  5424                           ;main.c: 1087:             if (NUM != 0 || i_RUN_ZERO == 1) {
  5425   0012F2  5013               	movf	_NUM^0,w,c
  5426   0012F4  1014               	iorwf	(_NUM+1)^0,w,c
  5427   0012F6  A4D8               	btfss	status,2,c
  5428   0012F8  EF80  F009         	goto	u2241
  5429   0012FC  EF82  F009         	goto	u2240
  5430   001300                     u2241:
  5431   001300  EF8B  F009         	goto	l3757
  5432   001304                     u2240:
  5433   001304  0411               	decf	_i_RUN_ZERO^0,w,c
  5434   001306  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5435   001308  A4D8               	btfss	status,2,c
  5436   00130A  EF89  F009         	goto	u2251
  5437   00130E  EF8B  F009         	goto	u2250
  5438   001312                     u2251:
  5439   001312  EF93  F009         	goto	l3759
  5440   001316                     u2250:
  5441   001316                     l3757:
  5442                           
  5443                           ;main.c: 1088:                 delay_1ms(Vmotor_Time);
  5444   001316  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5445   00131A  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5446   00131E  ECC7  F011         	call	_delay_1ms	;wreg free
  5447                           
  5448                           ;main.c: 1089:             } else {
  5449   001322  EF9E  F009         	goto	l3761
  5450   001326                     l3759:
  5451                           
  5452                           ;main.c: 1090:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  5453   001326  0E06               	movlw	6
  5454   001328  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5455   00132A  0E13               	movlw	19
  5456   00132C  6E49               	movwf	??_Homing_Again_Manual^0,c
  5457   00132E  0EAE               	movlw	174
  5458   001330                     u4137:
  5459   001330  2EE8               	decfsz	wreg,f,c
  5460   001332  D7FE               	bra	u4137
  5461   001334  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5462   001336  D7FC               	bra	u4137
  5463   001338  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5464   00133A  D7FA               	bra	u4137
  5465   00133C                     l3761:
  5466                           
  5467                           ;main.c: 1096:         if (Stop == 1)
  5468   00133C  042F               	decf	_Stop^0,w,c
  5469   00133E  A4D8               	btfss	status,2,c
  5470   001340  EFA4  F009         	goto	u2261
  5471   001344  EFA6  F009         	goto	u2260
  5472   001348                     u2261:
  5473   001348  EFD3  F009         	goto	l3775
  5474   00134C                     u2260:
  5475   00134C  EF29  F00A         	goto	l394
  5476   001350                     l3765:
  5477                           
  5478                           ;main.c: 1109:             i_RUN_ZERO = 2;
  5479   001350  0E00               	movlw	0
  5480   001352  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5481   001354  0E02               	movlw	2
  5482   001356  6E11               	movwf	_i_RUN_ZERO^0,c
  5483   001358                     
  5484                           ;main.c: 1110:             WriteSTLED316SData(NUM, !vibration_mode);
  5485   001358  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5486   00135C  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5487   001360  502C               	movf	_vibration_mode^0,w,c
  5488   001362  B4D8               	btfsc	status,2,c
  5489   001364  EFB6  F009         	goto	u2271
  5490   001368  EFB9  F009         	goto	u2270
  5491   00136C                     u2271:
  5492   00136C  0E01               	movlw	1
  5493   00136E  EFBA  F009         	goto	u2280
  5494   001372                     u2270:
  5495   001372  0E00               	movlw	0
  5496   001374                     u2280:
  5497   001374  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
  5498   001376  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  5499   00137A                     
  5500                           ;main.c: 1111:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5501   00137A  0E82               	movlw	130
  5502   00137C  6E49               	movwf	??_Homing_Again_Manual^0,c
  5503   00137E  0EDE               	movlw	222
  5504   001380                     u4147:
  5505   001380  2EE8               	decfsz	wreg,f,c
  5506   001382  D7FE               	bra	u4147
  5507   001384  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5508   001386  D7FC               	bra	u4147
  5509   001388                     
  5510                           ;main.c: 1112:             WriteSTLED316SData(NUM, vibration_mode);
  5511   001388  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5512   00138C  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5513   001390  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5514   001394  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  5515   001398                     
  5516                           ;main.c: 1113:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5517   001398  0E82               	movlw	130
  5518   00139A  6E49               	movwf	??_Homing_Again_Manual^0,c
  5519   00139C  0EDE               	movlw	222
  5520   00139E                     u4157:
  5521   00139E  2EE8               	decfsz	wreg,f,c
  5522   0013A0  D7FE               	bra	u4157
  5523   0013A2  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5524   0013A4  D7FC               	bra	u4157
  5525   0013A6                     l3775:
  5526                           
  5527                           ;main.c: 1108:         while (dispense == 0 && (i_RUN_ZERO == 1 || i_RUN_ZERO == 0)) {
  5528   0013A6  5001               	movf	_dispense^0,w,c
  5529   0013A8  1002               	iorwf	(_dispense+1)^0,w,c
  5530   0013AA  A4D8               	btfss	status,2,c
  5531   0013AC  EFDA  F009         	goto	u2291
  5532   0013B0  EFDC  F009         	goto	u2290
  5533   0013B4                     u2291:
  5534   0013B4  EFEE  F009         	goto	l3781
  5535   0013B8                     u2290:
  5536   0013B8  0411               	decf	_i_RUN_ZERO^0,w,c
  5537   0013BA  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5538   0013BC  B4D8               	btfsc	status,2,c
  5539   0013BE  EFE3  F009         	goto	u2301
  5540   0013C2  EFE5  F009         	goto	u2300
  5541   0013C6                     u2301:
  5542   0013C6  EFA8  F009         	goto	l3765
  5543   0013CA                     u2300:
  5544   0013CA  5011               	movf	_i_RUN_ZERO^0,w,c
  5545   0013CC  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5546   0013CE  B4D8               	btfsc	status,2,c
  5547   0013D0  EFEC  F009         	goto	u2311
  5548   0013D4  EFEE  F009         	goto	u2310
  5549   0013D8                     u2311:
  5550   0013D8  EFA8  F009         	goto	l3765
  5551   0013DC                     u2310:
  5552   0013DC                     l3781:
  5553                           
  5554                           ;main.c: 1120:         WriteSTLED316SData(NUM, vibration_mode);
  5555   0013DC  C013  F040         	movff	_NUM,WriteSTLED316SData@number
  5556   0013E0  C014  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5557   0013E4  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5558   0013E8  EC1F  F00F         	call	_WriteSTLED316SData	;wreg free
  5559   0013EC                     
  5560                           ;main.c: 1121:         if(dispense == 0 && NUM != 0)
  5561   0013EC  5001               	movf	_dispense^0,w,c
  5562   0013EE  1002               	iorwf	(_dispense+1)^0,w,c
  5563   0013F0  A4D8               	btfss	status,2,c
  5564   0013F2  EFFD  F009         	goto	u2321
  5565   0013F6  EFFF  F009         	goto	u2320
  5566   0013FA                     u2321:
  5567   0013FA  EF10  F00A         	goto	l3791
  5568   0013FE                     u2320:
  5569   0013FE  5013               	movf	_NUM^0,w,c
  5570   001400  1014               	iorwf	(_NUM+1)^0,w,c
  5571   001402  B4D8               	btfsc	status,2,c
  5572   001404  EF06  F00A         	goto	u2331
  5573   001408  EF08  F00A         	goto	u2330
  5574   00140C                     u2331:
  5575   00140C  EF10  F00A         	goto	l3791
  5576   001410                     u2330:
  5577   001410                     
  5578                           ;main.c: 1122:         {;main.c: 1123:             NUM_REC = NUM;
  5579   001410  C013  F00F         	movff	_NUM,_NUM_REC
  5580   001414  C014  F010         	movff	_NUM+1,_NUM_REC+1
  5581   001418                     
  5582                           ;main.c: 1124:             NUM = 0;
  5583   001418  0E00               	movlw	0
  5584   00141A  6E14               	movwf	(_NUM+1)^0,c
  5585   00141C  0E00               	movlw	0
  5586   00141E  6E13               	movwf	_NUM^0,c
  5587   001420                     l3791:
  5588                           
  5589                           ;main.c: 1126:         _delay((unsigned long)((50)*(8000000/4000.0)));
  5590   001420  0E82               	movlw	130
  5591   001422  6E49               	movwf	??_Homing_Again_Manual^0,c
  5592   001424  0EDE               	movlw	222
  5593   001426                     u4167:
  5594   001426  2EE8               	decfsz	wreg,f,c
  5595   001428  D7FE               	bra	u4167
  5596   00142A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5597   00142C  D7FC               	bra	u4167
  5598   00142E                     l3793:
  5599                           
  5600                           ;main.c: 1037:     while (NUM > 0 || i_RUN_ZERO == 1) {
  5601   00142E  5013               	movf	_NUM^0,w,c
  5602   001430  1014               	iorwf	(_NUM+1)^0,w,c
  5603   001432  A4D8               	btfss	status,2,c
  5604   001434  EF1E  F00A         	goto	u2341
  5605   001438  EF20  F00A         	goto	u2340
  5606   00143C                     u2341:
  5607   00143C  EF93  F008         	goto	l374
  5608   001440                     u2340:
  5609   001440  0411               	decf	_i_RUN_ZERO^0,w,c
  5610   001442  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5611   001444  B4D8               	btfsc	status,2,c
  5612   001446  EF27  F00A         	goto	u2351
  5613   00144A  EF29  F00A         	goto	u2350
  5614   00144E                     u2351:
  5615   00144E  EF93  F008         	goto	l374
  5616   001452                     u2350:
  5617   001452                     l394:
  5618                           
  5619                           ;main.c: 1130:     LATAbits.LATA2 = 0;
  5620   001452  9489               	bcf	137,2,c	;volatile
  5621   001454                     
  5622                           ;main.c: 1132:     if ((NUM == 0 || Stop == 1) && i_RUN_ZERO == 0) {
  5623   001454  5013               	movf	_NUM^0,w,c
  5624   001456  1014               	iorwf	(_NUM+1)^0,w,c
  5625   001458  B4D8               	btfsc	status,2,c
  5626   00145A  EF31  F00A         	goto	u2361
  5627   00145E  EF33  F00A         	goto	u2360
  5628   001462                     u2361:
  5629   001462  EF3B  F00A         	goto	l3801
  5630   001466                     u2360:
  5631   001466  042F               	decf	_Stop^0,w,c
  5632   001468  A4D8               	btfss	status,2,c
  5633   00146A  EF39  F00A         	goto	u2371
  5634   00146E  EF3B  F00A         	goto	u2370
  5635   001472                     u2371:
  5636   001472  EF5F  F00A         	goto	l3813
  5637   001476                     u2370:
  5638   001476                     l3801:
  5639   001476  5011               	movf	_i_RUN_ZERO^0,w,c
  5640   001478  1012               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5641   00147A  A4D8               	btfss	status,2,c
  5642   00147C  EF42  F00A         	goto	u2381
  5643   001480  EF44  F00A         	goto	u2380
  5644   001484                     u2381:
  5645   001484  EF5F  F00A         	goto	l3813
  5646   001488                     u2380:
  5647   001488                     
  5648                           ;main.c: 1134:         if (vibration_mode == 1) {
  5649   001488  042C               	decf	_vibration_mode^0,w,c
  5650   00148A  A4D8               	btfss	status,2,c
  5651   00148C  EF4A  F00A         	goto	u2391
  5652   001490  EF4C  F00A         	goto	u2390
  5653   001494                     u2391:
  5654   001494  EF5F  F00A         	goto	l3813
  5655   001498                     u2390:
  5656   001498                     
  5657                           ;main.c: 1135:             LATCbits.LATC1 = 1;
  5658   001498  828B               	bsf	139,1,c	;volatile
  5659   00149A                     
  5660                           ;main.c: 1136:             delay_1ms(Vmotor_Time);
  5661   00149A  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5662   00149E  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5663   0014A2  ECC7  F011         	call	_delay_1ms	;wreg free
  5664   0014A6                     
  5665                           ;main.c: 1138:             LATCbits.LATC1 = 0;
  5666   0014A6  928B               	bcf	139,1,c	;volatile
  5667   0014A8                     
  5668                           ;main.c: 1139:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5669   0014A8  0E04               	movlw	4
  5670   0014AA  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5671   0014AC  0E0C               	movlw	12
  5672   0014AE  6E49               	movwf	??_Homing_Again_Manual^0,c
  5673   0014B0  0E34               	movlw	52
  5674   0014B2                     u4177:
  5675   0014B2  2EE8               	decfsz	wreg,f,c
  5676   0014B4  D7FE               	bra	u4177
  5677   0014B6  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5678   0014B8  D7FC               	bra	u4177
  5679   0014BA  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5680   0014BC  D7FA               	bra	u4177
  5681   0014BE                     l3813:
  5682                           
  5683                           ;main.c: 1143:     i_RUN_ZERO = 0;
  5684   0014BE  0E00               	movlw	0
  5685   0014C0  6E12               	movwf	(_i_RUN_ZERO+1)^0,c
  5686   0014C2  0E00               	movlw	0
  5687   0014C4  6E11               	movwf	_i_RUN_ZERO^0,c
  5688   0014C6                     
  5689                           ;main.c: 1144:     NUM = 0;
  5690   0014C6  0E00               	movlw	0
  5691   0014C8  6E14               	movwf	(_NUM+1)^0,c
  5692   0014CA  0E00               	movlw	0
  5693   0014CC  6E13               	movwf	_NUM^0,c
  5694   0014CE                     
  5695                           ;main.c: 1146:     dispense = 0;
  5696   0014CE  0E00               	movlw	0
  5697   0014D0  6E02               	movwf	(_dispense+1)^0,c
  5698   0014D2  0E00               	movlw	0
  5699   0014D4  6E01               	movwf	_dispense^0,c
  5700   0014D6                     
  5701                           ;main.c: 1147:     OpMode = MANUAL_MODE;
  5702   0014D6  0E00               	movlw	0
  5703   0014D8  6E2A               	movwf	_OpMode^0,c	;volatile
  5704   0014DA  0012               	return		;funcret
  5705   0014DC                     __end_of_Homing_Again_Manual:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _WriteSTLED316SData *****************
  5709 ;; Defined at:
  5710 ;;		line 145 in file "Display.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  number          2   14[COMRAM] int 
  5713 ;;  v_mode          1   16[COMRAM] unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  NUM_DIG1        2   19[COMRAM] int 
  5716 ;;  NUM_DIG0        2   17[COMRAM] int 
  5717 ;;  data4           1   22[COMRAM] unsigned char 
  5718 ;;  data3           1   21[COMRAM] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5728 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;Total ram usage:        9 bytes
  5733 ;; Hardware stack levels used: 1
  5734 ;; Hardware stack levels required when called: 3
  5735 ;; This function calls:
  5736 ;;		_Get7Seg
  5737 ;;		_STLED316s_SPI_SendData
  5738 ;;		___awdiv
  5739 ;;		___awmod
  5740 ;; This function is called by:
  5741 ;;		_main
  5742 ;;		_Homing_Again_Manual
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text24
  5747   001E3E                     __ptext24:
  5748                           	callstack 0
  5749   001E3E                     _WriteSTLED316SData:
  5750                           	callstack 27
  5751   001E3E                     
  5752                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  5753   001E3E  C040  F038         	movff	WriteSTLED316SData@number,___awmod@dividend
  5754   001E42  C041  F039         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  5755   001E46  0E00               	movlw	0
  5756   001E48  6E3B               	movwf	(___awmod@divisor+1)^0,c
  5757   001E4A  0E0A               	movlw	10
  5758   001E4C  6E3A               	movwf	___awmod@divisor^0,c
  5759   001E4E  ECC7  F00E         	call	___awmod	;wreg free
  5760   001E52  C038  F043         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  5761   001E56  C039  F044         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  5762                           
  5763                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  5764   001E5A  C040  F038         	movff	WriteSTLED316SData@number,___awdiv@dividend
  5765   001E5E  C041  F039         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  5766   001E62  0E00               	movlw	0
  5767   001E64  6E3B               	movwf	(___awdiv@divisor+1)^0,c
  5768   001E66  0E0A               	movlw	10
  5769   001E68  6E3A               	movwf	___awdiv@divisor^0,c
  5770   001E6A  EC65  F00E         	call	___awdiv	;wreg free
  5771   001E6E  C038  F045         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  5772   001E72  C039  F046         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  5773   001E76                     
  5774                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  5775   001E76  988B               	bcf	139,4,c	;volatile
  5776                           
  5777                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  5778   001E78  0E00               	movlw	0
  5779   001E7A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5780   001E7E                     
  5781                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  5782   001E7E  888B               	bsf	139,4,c	;volatile
  5783   001E80                     
  5784                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  5785   001E80  988B               	bcf	139,4,c	;volatile
  5786                           
  5787                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  5788   001E82  0E00               	movlw	0
  5789   001E84  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5790                           
  5791                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  5792   001E88  C045  F038         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  5793   001E8C  C046  F039         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  5794   001E90  ECFF  F00D         	call	_Get7Seg	;wreg free
  5795   001E94  6E48               	movwf	WriteSTLED316SData@data4^0,c
  5796                           
  5797                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  5798   001E96  C043  F038         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  5799   001E9A  C044  F039         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  5800   001E9E  ECFF  F00D         	call	_Get7Seg	;wreg free
  5801   001EA2  6E47               	movwf	WriteSTLED316SData@data3^0,c
  5802   001EA4                     
  5803                           ;Display.c: 165:     if (v_mode) {
  5804   001EA4  5042               	movf	WriteSTLED316SData@v_mode^0,w,c
  5805   001EA6  B4D8               	btfsc	status,2,c
  5806   001EA8  EF58  F00F         	goto	u1961
  5807   001EAC  EF5A  F00F         	goto	u1960
  5808   001EB0                     u1961:
  5809   001EB0  EF66  F00F         	goto	l3289
  5810   001EB4                     u1960:
  5811   001EB4                     
  5812                           ;Display.c: 166:         if (v_mode == 0xFF)
  5813   001EB4  2842               	incf	WriteSTLED316SData@v_mode^0,w,c
  5814   001EB6  A4D8               	btfss	status,2,c
  5815   001EB8  EF60  F00F         	goto	u1971
  5816   001EBC  EF62  F00F         	goto	u1970
  5817   001EC0                     u1971:
  5818   001EC0  EF65  F00F         	goto	l3287
  5819   001EC4                     u1970:
  5820   001EC4                     
  5821                           ;Display.c: 167:             data4 |= 0x80;
  5822   001EC4  8E48               	bsf	WriteSTLED316SData@data4^0,7,c
  5823   001EC6  EF66  F00F         	goto	l3289
  5824   001ECA                     l3287:
  5825                           
  5826                           ;Display.c: 169:             data3 |= 0x80;
  5827   001ECA  8E47               	bsf	WriteSTLED316SData@data3^0,7,c
  5828   001ECC                     l3289:
  5829                           
  5830                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  5831   001ECC  5048               	movf	WriteSTLED316SData@data4^0,w,c
  5832   001ECE  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5833   001ED2                     
  5834                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  5835   001ED2  5047               	movf	WriteSTLED316SData@data3^0,w,c
  5836   001ED4  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5837   001ED8                     
  5838                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  5839   001ED8  888B               	bsf	139,4,c	;volatile
  5840   001EDA                     
  5841                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  5842   001EDA  988B               	bcf	139,4,c	;volatile
  5843   001EDC                     
  5844                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  5845   001EDC  0E0D               	movlw	13
  5846   001EDE  ECB9  F00F         	call	_STLED316s_SPI_SendData
  5847   001EE2                     
  5848                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  5849   001EE2  888B               	bsf	139,4,c	;volatile
  5850   001EE4  0012               	return		;funcret
  5851   001EE6                     __end_of_WriteSTLED316SData:
  5852                           	callstack 0
  5853                           
  5854 ;; *************** function ___awmod *****************
  5855 ;; Defined at:
  5856 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  dividend        2    6[COMRAM] int 
  5859 ;;  divisor         2    8[COMRAM] int 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  sign            1   11[COMRAM] unsigned char 
  5862 ;;  counter         1   10[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2    6[COMRAM] int 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;Total ram usage:        6 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; Hardware stack levels required when called: 2
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_WriteSTLED316SData
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text25
  5887   001D8E                     __ptext25:
  5888                           	callstack 0
  5889   001D8E                     ___awmod:
  5890                           	callstack 27
  5891   001D8E  0E00               	movlw	0
  5892   001D90  6E3D               	movwf	___awmod@sign^0,c
  5893   001D92  BE39               	btfsc	(___awmod@dividend+1)^0,7,c
  5894   001D94  EFD0  F00E         	goto	u1900
  5895   001D98  EFCE  F00E         	goto	u1901
  5896   001D9C                     u1901:
  5897   001D9C  EFD6  F00E         	goto	l3245
  5898   001DA0                     u1900:
  5899   001DA0  6C38               	negf	___awmod@dividend^0,c
  5900   001DA2  1E39               	comf	(___awmod@dividend+1)^0,f,c
  5901   001DA4  B0D8               	btfsc	status,0,c
  5902   001DA6  2A39               	incf	(___awmod@dividend+1)^0,f,c
  5903   001DA8  0E01               	movlw	1
  5904   001DAA  6E3D               	movwf	___awmod@sign^0,c
  5905   001DAC                     l3245:
  5906   001DAC  BE3B               	btfsc	(___awmod@divisor+1)^0,7,c
  5907   001DAE  EFDD  F00E         	goto	u1910
  5908   001DB2  EFDB  F00E         	goto	u1911
  5909   001DB6                     u1911:
  5910   001DB6  EFE1  F00E         	goto	l3249
  5911   001DBA                     u1910:
  5912   001DBA  6C3A               	negf	___awmod@divisor^0,c
  5913   001DBC  1E3B               	comf	(___awmod@divisor+1)^0,f,c
  5914   001DBE  B0D8               	btfsc	status,0,c
  5915   001DC0  2A3B               	incf	(___awmod@divisor+1)^0,f,c
  5916   001DC2                     l3249:
  5917   001DC2  503A               	movf	___awmod@divisor^0,w,c
  5918   001DC4  103B               	iorwf	(___awmod@divisor+1)^0,w,c
  5919   001DC6  B4D8               	btfsc	status,2,c
  5920   001DC8  EFE8  F00E         	goto	u1921
  5921   001DCC  EFEA  F00E         	goto	u1920
  5922   001DD0                     u1921:
  5923   001DD0  EF0E  F00F         	goto	l3265
  5924   001DD4                     u1920:
  5925   001DD4  0E01               	movlw	1
  5926   001DD6  6E3C               	movwf	___awmod@counter^0,c
  5927   001DD8  EFF2  F00E         	goto	l3255
  5928   001DDC                     l3253:
  5929   001DDC  90D8               	bcf	status,0,c
  5930   001DDE  363A               	rlcf	___awmod@divisor^0,f,c
  5931   001DE0  363B               	rlcf	(___awmod@divisor+1)^0,f,c
  5932   001DE2  2A3C               	incf	___awmod@counter^0,f,c
  5933   001DE4                     l3255:
  5934   001DE4  AE3B               	btfss	(___awmod@divisor+1)^0,7,c
  5935   001DE6  EFF7  F00E         	goto	u1931
  5936   001DEA  EFF9  F00E         	goto	u1930
  5937   001DEE                     u1931:
  5938   001DEE  EFEE  F00E         	goto	l3253
  5939   001DF2                     u1930:
  5940   001DF2                     l3257:
  5941   001DF2  503A               	movf	___awmod@divisor^0,w,c
  5942   001DF4  5C38               	subwf	___awmod@dividend^0,w,c
  5943   001DF6  503B               	movf	(___awmod@divisor+1)^0,w,c
  5944   001DF8  5839               	subwfb	(___awmod@dividend+1)^0,w,c
  5945   001DFA  A0D8               	btfss	status,0,c
  5946   001DFC  EF02  F00F         	goto	u1941
  5947   001E00  EF04  F00F         	goto	u1940
  5948   001E04                     u1941:
  5949   001E04  EF08  F00F         	goto	l3261
  5950   001E08                     u1940:
  5951   001E08  503A               	movf	___awmod@divisor^0,w,c
  5952   001E0A  5E38               	subwf	___awmod@dividend^0,f,c
  5953   001E0C  503B               	movf	(___awmod@divisor+1)^0,w,c
  5954   001E0E  5A39               	subwfb	(___awmod@dividend+1)^0,f,c
  5955   001E10                     l3261:
  5956   001E10  90D8               	bcf	status,0,c
  5957   001E12  323B               	rrcf	(___awmod@divisor+1)^0,f,c
  5958   001E14  323A               	rrcf	___awmod@divisor^0,f,c
  5959   001E16  2E3C               	decfsz	___awmod@counter^0,f,c
  5960   001E18  EFF9  F00E         	goto	l3257
  5961   001E1C                     l3265:
  5962   001E1C  503D               	movf	___awmod@sign^0,w,c
  5963   001E1E  B4D8               	btfsc	status,2,c
  5964   001E20  EF14  F00F         	goto	u1951
  5965   001E24  EF16  F00F         	goto	u1950
  5966   001E28                     u1951:
  5967   001E28  EF1A  F00F         	goto	l3269
  5968   001E2C                     u1950:
  5969   001E2C  6C38               	negf	___awmod@dividend^0,c
  5970   001E2E  1E39               	comf	(___awmod@dividend+1)^0,f,c
  5971   001E30  B0D8               	btfsc	status,0,c
  5972   001E32  2A39               	incf	(___awmod@dividend+1)^0,f,c
  5973   001E34                     l3269:
  5974   001E34  C038  F038         	movff	___awmod@dividend,?___awmod
  5975   001E38  C039  F039         	movff	___awmod@dividend+1,?___awmod+1
  5976   001E3C  0012               	return		;funcret
  5977   001E3E                     __end_of___awmod:
  5978                           	callstack 0
  5979                           
  5980 ;; *************** function ___awdiv *****************
  5981 ;; Defined at:
  5982 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  dividend        2    6[COMRAM] int 
  5985 ;;  divisor         2    8[COMRAM] int 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  quotient        2   12[COMRAM] int 
  5988 ;;  sign            1   11[COMRAM] unsigned char 
  5989 ;;  counter         1   10[COMRAM] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  2    6[COMRAM] int 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;Total ram usage:        8 bytes
  6004 ;; Hardware stack levels used: 1
  6005 ;; Hardware stack levels required when called: 2
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_WriteSTLED316SData
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text26
  6014   001CCA                     __ptext26:
  6015                           	callstack 0
  6016   001CCA                     ___awdiv:
  6017                           	callstack 27
  6018   001CCA  0E00               	movlw	0
  6019   001CCC  6E3D               	movwf	___awdiv@sign^0,c
  6020   001CCE  BE3B               	btfsc	(___awdiv@divisor+1)^0,7,c
  6021   001CD0  EF6E  F00E         	goto	u1840
  6022   001CD4  EF6C  F00E         	goto	u1841
  6023   001CD8                     u1841:
  6024   001CD8  EF74  F00E         	goto	l3201
  6025   001CDC                     u1840:
  6026   001CDC  6C3A               	negf	___awdiv@divisor^0,c
  6027   001CDE  1E3B               	comf	(___awdiv@divisor+1)^0,f,c
  6028   001CE0  B0D8               	btfsc	status,0,c
  6029   001CE2  2A3B               	incf	(___awdiv@divisor+1)^0,f,c
  6030   001CE4  0E01               	movlw	1
  6031   001CE6  6E3D               	movwf	___awdiv@sign^0,c
  6032   001CE8                     l3201:
  6033   001CE8  BE39               	btfsc	(___awdiv@dividend+1)^0,7,c
  6034   001CEA  EF7B  F00E         	goto	u1850
  6035   001CEE  EF79  F00E         	goto	u1851
  6036   001CF2                     u1851:
  6037   001CF2  EF81  F00E         	goto	l3207
  6038   001CF6                     u1850:
  6039   001CF6  6C38               	negf	___awdiv@dividend^0,c
  6040   001CF8  1E39               	comf	(___awdiv@dividend+1)^0,f,c
  6041   001CFA  B0D8               	btfsc	status,0,c
  6042   001CFC  2A39               	incf	(___awdiv@dividend+1)^0,f,c
  6043   001CFE  0E01               	movlw	1
  6044   001D00  1A3D               	xorwf	___awdiv@sign^0,f,c
  6045   001D02                     l3207:
  6046   001D02  0E00               	movlw	0
  6047   001D04  6E3F               	movwf	(___awdiv@quotient+1)^0,c
  6048   001D06  0E00               	movlw	0
  6049   001D08  6E3E               	movwf	___awdiv@quotient^0,c
  6050   001D0A  503A               	movf	___awdiv@divisor^0,w,c
  6051   001D0C  103B               	iorwf	(___awdiv@divisor+1)^0,w,c
  6052   001D0E  B4D8               	btfsc	status,2,c
  6053   001D10  EF8C  F00E         	goto	u1861
  6054   001D14  EF8E  F00E         	goto	u1860
  6055   001D18                     u1861:
  6056   001D18  EFB6  F00E         	goto	l3229
  6057   001D1C                     u1860:
  6058   001D1C  0E01               	movlw	1
  6059   001D1E  6E3C               	movwf	___awdiv@counter^0,c
  6060   001D20  EF96  F00E         	goto	l3215
  6061   001D24                     l3213:
  6062   001D24  90D8               	bcf	status,0,c
  6063   001D26  363A               	rlcf	___awdiv@divisor^0,f,c
  6064   001D28  363B               	rlcf	(___awdiv@divisor+1)^0,f,c
  6065   001D2A  2A3C               	incf	___awdiv@counter^0,f,c
  6066   001D2C                     l3215:
  6067   001D2C  AE3B               	btfss	(___awdiv@divisor+1)^0,7,c
  6068   001D2E  EF9B  F00E         	goto	u1871
  6069   001D32  EF9D  F00E         	goto	u1870
  6070   001D36                     u1871:
  6071   001D36  EF92  F00E         	goto	l3213
  6072   001D3A                     u1870:
  6073   001D3A                     l3217:
  6074   001D3A  90D8               	bcf	status,0,c
  6075   001D3C  363E               	rlcf	___awdiv@quotient^0,f,c
  6076   001D3E  363F               	rlcf	(___awdiv@quotient+1)^0,f,c
  6077   001D40  503A               	movf	___awdiv@divisor^0,w,c
  6078   001D42  5C38               	subwf	___awdiv@dividend^0,w,c
  6079   001D44  503B               	movf	(___awdiv@divisor+1)^0,w,c
  6080   001D46  5839               	subwfb	(___awdiv@dividend+1)^0,w,c
  6081   001D48  A0D8               	btfss	status,0,c
  6082   001D4A  EFA9  F00E         	goto	u1881
  6083   001D4E  EFAB  F00E         	goto	u1880
  6084   001D52                     u1881:
  6085   001D52  EFB0  F00E         	goto	l3225
  6086   001D56                     u1880:
  6087   001D56  503A               	movf	___awdiv@divisor^0,w,c
  6088   001D58  5E38               	subwf	___awdiv@dividend^0,f,c
  6089   001D5A  503B               	movf	(___awdiv@divisor+1)^0,w,c
  6090   001D5C  5A39               	subwfb	(___awdiv@dividend+1)^0,f,c
  6091   001D5E  803E               	bsf	___awdiv@quotient^0,0,c
  6092   001D60                     l3225:
  6093   001D60  90D8               	bcf	status,0,c
  6094   001D62  323B               	rrcf	(___awdiv@divisor+1)^0,f,c
  6095   001D64  323A               	rrcf	___awdiv@divisor^0,f,c
  6096   001D66  2E3C               	decfsz	___awdiv@counter^0,f,c
  6097   001D68  EF9D  F00E         	goto	l3217
  6098   001D6C                     l3229:
  6099   001D6C  503D               	movf	___awdiv@sign^0,w,c
  6100   001D6E  B4D8               	btfsc	status,2,c
  6101   001D70  EFBC  F00E         	goto	u1891
  6102   001D74  EFBE  F00E         	goto	u1890
  6103   001D78                     u1891:
  6104   001D78  EFC2  F00E         	goto	l3233
  6105   001D7C                     u1890:
  6106   001D7C  6C3E               	negf	___awdiv@quotient^0,c
  6107   001D7E  1E3F               	comf	(___awdiv@quotient+1)^0,f,c
  6108   001D80  B0D8               	btfsc	status,0,c
  6109   001D82  2A3F               	incf	(___awdiv@quotient+1)^0,f,c
  6110   001D84                     l3233:
  6111   001D84  C03E  F038         	movff	___awdiv@quotient,?___awdiv
  6112   001D88  C03F  F039         	movff	___awdiv@quotient+1,?___awdiv+1
  6113   001D8C  0012               	return		;funcret
  6114   001D8E                     __end_of___awdiv:
  6115                           	callstack 0
  6116                           
  6117 ;; *************** function _Get7Seg *****************
  6118 ;; Defined at:
  6119 ;;		line 104 in file "Display.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  Digit           2    6[COMRAM] int 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  Data            1   10[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      unsigned char 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;Total ram usage:        5 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 2
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_WriteSTLED316SData
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text27
  6148   001BFE                     __ptext27:
  6149                           	callstack 0
  6150   001BFE                     _Get7Seg:
  6151                           	callstack 27
  6152   001BFE                     
  6153                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  6154   001BFE  EF2D  F00E         	goto	l3111
  6155   001C02                     l3087:
  6156                           
  6157                           ;Display.c: 109:             Data = 0x3F;
  6158   001C02  0E3F               	movlw	63
  6159   001C04  6E3C               	movwf	Get7Seg@Data^0,c
  6160                           
  6161                           ;Display.c: 110:             break;
  6162   001C06  EF63  F00E         	goto	l3113
  6163   001C0A                     l3089:
  6164                           
  6165                           ;Display.c: 112:             Data = 0x06;
  6166   001C0A  0E06               	movlw	6
  6167   001C0C  6E3C               	movwf	Get7Seg@Data^0,c
  6168                           
  6169                           ;Display.c: 113:             break;
  6170   001C0E  EF63  F00E         	goto	l3113
  6171   001C12                     l3091:
  6172                           
  6173                           ;Display.c: 115:             Data = 0x5B;
  6174   001C12  0E5B               	movlw	91
  6175   001C14  6E3C               	movwf	Get7Seg@Data^0,c
  6176                           
  6177                           ;Display.c: 116:             break;
  6178   001C16  EF63  F00E         	goto	l3113
  6179   001C1A                     l3093:
  6180                           
  6181                           ;Display.c: 118:             Data = 0x4F;
  6182   001C1A  0E4F               	movlw	79
  6183   001C1C  6E3C               	movwf	Get7Seg@Data^0,c
  6184                           
  6185                           ;Display.c: 119:             break;
  6186   001C1E  EF63  F00E         	goto	l3113
  6187   001C22                     l3095:
  6188                           
  6189                           ;Display.c: 121:             Data = 0x66;
  6190   001C22  0E66               	movlw	102
  6191   001C24  6E3C               	movwf	Get7Seg@Data^0,c
  6192                           
  6193                           ;Display.c: 122:             break;
  6194   001C26  EF63  F00E         	goto	l3113
  6195   001C2A                     l3097:
  6196                           
  6197                           ;Display.c: 124:             Data = 0x6D;
  6198   001C2A  0E6D               	movlw	109
  6199   001C2C  6E3C               	movwf	Get7Seg@Data^0,c
  6200                           
  6201                           ;Display.c: 125:             break;
  6202   001C2E  EF63  F00E         	goto	l3113
  6203   001C32                     l3099:
  6204                           
  6205                           ;Display.c: 127:             Data = 0x7D;
  6206   001C32  0E7D               	movlw	125
  6207   001C34  6E3C               	movwf	Get7Seg@Data^0,c
  6208                           
  6209                           ;Display.c: 128:             break;
  6210   001C36  EF63  F00E         	goto	l3113
  6211   001C3A                     l3101:
  6212                           
  6213                           ;Display.c: 130:             Data = 0x07;
  6214   001C3A  0E07               	movlw	7
  6215   001C3C  6E3C               	movwf	Get7Seg@Data^0,c
  6216                           
  6217                           ;Display.c: 131:             break;
  6218   001C3E  EF63  F00E         	goto	l3113
  6219   001C42                     l3103:
  6220                           
  6221                           ;Display.c: 133:             Data = 0x7F;
  6222   001C42  0E7F               	movlw	127
  6223   001C44  6E3C               	movwf	Get7Seg@Data^0,c
  6224                           
  6225                           ;Display.c: 134:             break;
  6226   001C46  EF63  F00E         	goto	l3113
  6227   001C4A                     l3105:
  6228                           
  6229                           ;Display.c: 136:             Data = 0x6F;
  6230   001C4A  0E6F               	movlw	111
  6231   001C4C  6E3C               	movwf	Get7Seg@Data^0,c
  6232                           
  6233                           ;Display.c: 137:             break;
  6234   001C4E  EF63  F00E         	goto	l3113
  6235   001C52                     l3107:
  6236                           
  6237                           ;Display.c: 139:             Data = 0x00;
  6238   001C52  0E00               	movlw	0
  6239   001C54  6E3C               	movwf	Get7Seg@Data^0,c
  6240                           
  6241                           ;Display.c: 140:             break;
  6242   001C56  EF63  F00E         	goto	l3113
  6243   001C5A                     l3111:
  6244   001C5A  C038  F03A         	movff	Get7Seg@Digit,??_Get7Seg
  6245   001C5E  C039  F03B         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  6246                           
  6247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6248                           ; Switch size 1, requested type "simple"
  6249                           ; Number of cases is 1, Range of values is 0 to 0
  6250                           ; switch strategies available:
  6251                           ; Name         Instructions Cycles
  6252                           ; simple_byte            4     3 (average)
  6253                           ;	Chosen strategy is simple_byte
  6254   001C62  503B               	movf	(??_Get7Seg+1)^0,w,c
  6255   001C64  0A00               	xorlw	0	; case 0
  6256   001C66  B4D8               	btfsc	status,2,c
  6257   001C68  EF38  F00E         	goto	l6043
  6258   001C6C  EF29  F00E         	goto	l3107
  6259   001C70                     l6043:
  6260                           
  6261                           ; Switch size 1, requested type "simple"
  6262                           ; Number of cases is 10, Range of values is 0 to 9
  6263                           ; switch strategies available:
  6264                           ; Name         Instructions Cycles
  6265                           ; simple_byte           31    16 (average)
  6266                           ;	Chosen strategy is simple_byte
  6267   001C70  503A               	movf	??_Get7Seg^0,w,c
  6268   001C72  0A00               	xorlw	0	; case 0
  6269   001C74  B4D8               	btfsc	status,2,c
  6270   001C76  EF01  F00E         	goto	l3087
  6271   001C7A  0A01               	xorlw	1	; case 1
  6272   001C7C  B4D8               	btfsc	status,2,c
  6273   001C7E  EF05  F00E         	goto	l3089
  6274   001C82  0A03               	xorlw	3	; case 2
  6275   001C84  B4D8               	btfsc	status,2,c
  6276   001C86  EF09  F00E         	goto	l3091
  6277   001C8A  0A01               	xorlw	1	; case 3
  6278   001C8C  B4D8               	btfsc	status,2,c
  6279   001C8E  EF0D  F00E         	goto	l3093
  6280   001C92  0A07               	xorlw	7	; case 4
  6281   001C94  B4D8               	btfsc	status,2,c
  6282   001C96  EF11  F00E         	goto	l3095
  6283   001C9A  0A01               	xorlw	1	; case 5
  6284   001C9C  B4D8               	btfsc	status,2,c
  6285   001C9E  EF15  F00E         	goto	l3097
  6286   001CA2  0A03               	xorlw	3	; case 6
  6287   001CA4  B4D8               	btfsc	status,2,c
  6288   001CA6  EF19  F00E         	goto	l3099
  6289   001CAA  0A01               	xorlw	1	; case 7
  6290   001CAC  B4D8               	btfsc	status,2,c
  6291   001CAE  EF1D  F00E         	goto	l3101
  6292   001CB2  0A0F               	xorlw	15	; case 8
  6293   001CB4  B4D8               	btfsc	status,2,c
  6294   001CB6  EF21  F00E         	goto	l3103
  6295   001CBA  0A01               	xorlw	1	; case 9
  6296   001CBC  B4D8               	btfsc	status,2,c
  6297   001CBE  EF25  F00E         	goto	l3105
  6298   001CC2  EF29  F00E         	goto	l3107
  6299   001CC6                     l3113:
  6300                           
  6301                           ;Display.c: 142:     return (Data);
  6302   001CC6  503C               	movf	Get7Seg@Data^0,w,c
  6303   001CC8  0012               	return		;funcret
  6304   001CCA                     __end_of_Get7Seg:
  6305                           	callstack 0
  6306                           
  6307 ;; *************** function _Homing_Again_Auto *****************
  6308 ;; Defined at:
  6309 ;;		line 1154 in file "main.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; Hardware stack levels required when called: 4
  6330 ;; This function calls:
  6331 ;;		_AD_capture_BattVoltage
  6332 ;;		_MotorBREAK
  6333 ;;		_MotorON
  6334 ;;		_Read_IR
  6335 ;;		_WriteSTLED316SErr
  6336 ;;		_WriteSTLED316SMode
  6337 ;;		_delay_1ms
  6338 ;;		_readWeighingData
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text28
  6345   0014DC                     __ptext28:
  6346                           	callstack 0
  6347   0014DC                     _Homing_Again_Auto:
  6348                           	callstack 26
  6349   0014DC                     
  6350                           ;main.c: 1156:     IR_SENSORF = 0;
  6351   0014DC  0E00               	movlw	0
  6352   0014DE  6E0C               	movwf	(_IR_SENSORF+1)^0,c
  6353   0014E0  0E00               	movlw	0
  6354   0014E2  6E0B               	movwf	_IR_SENSORF^0,c
  6355   0014E4                     
  6356                           ;main.c: 1157:     WriteSTLED316SMode('A');
  6357   0014E4  0E41               	movlw	65
  6358   0014E6  EC8D  F00C         	call	_WriteSTLED316SMode
  6359   0014EA                     
  6360                           ;main.c: 1159:     if (vibration_mode == 1) {
  6361   0014EA  042C               	decf	_vibration_mode^0,w,c
  6362   0014EC  A4D8               	btfss	status,2,c
  6363   0014EE  EF7B  F00A         	goto	u2401
  6364   0014F2  EF7D  F00A         	goto	u2400
  6365   0014F6                     u2401:
  6366   0014F6  EF92  F00A         	goto	l408
  6367   0014FA                     u2400:
  6368   0014FA                     
  6369                           ;main.c: 1160:         LATCbits.LATC1 = 1;
  6370   0014FA  828B               	bsf	139,1,c	;volatile
  6371   0014FC                     
  6372                           ;main.c: 1161:         delay_1ms(Vmotor_Time);
  6373   0014FC  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6374   001500  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6375   001504  ECC7  F011         	call	_delay_1ms	;wreg free
  6376   001508                     
  6377                           ;main.c: 1162:         LATCbits.LATC1 = 0;
  6378   001508  928B               	bcf	139,1,c	;volatile
  6379   00150A                     l3833:
  6380                           
  6381                           ;main.c: 1163:         _delay((unsigned long)((300)*(8000000/4000.0)));
  6382   00150A  0E04               	movlw	4
  6383   00150C  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6384   00150E  0E0C               	movlw	12
  6385   001510  6E41               	movwf	??_Homing_Again_Auto^0,c
  6386   001512  0E34               	movlw	52
  6387   001514                     u4187:
  6388   001514  2EE8               	decfsz	wreg,f,c
  6389   001516  D7FE               	bra	u4187
  6390   001518  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6391   00151A  D7FC               	bra	u4187
  6392   00151C  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6393   00151E  D7FA               	bra	u4187
  6394                           
  6395                           ;main.c: 1164:     } else {
  6396   001520  EF95  F00A         	goto	l3837
  6397   001524                     l408:
  6398                           
  6399                           ;main.c: 1165:         LATCbits.LATC1 = 0;
  6400   001524  928B               	bcf	139,1,c	;volatile
  6401   001526  EF85  F00A         	goto	l3833
  6402   00152A                     l3837:
  6403                           
  6404                           ;main.c: 1169:     LATAbits.LATA2 = 1;
  6405   00152A  8489               	bsf	137,2,c	;volatile
  6406                           
  6407                           ;main.c: 1171:     while (Stop == 0) {
  6408   00152C  EF45  F00B         	goto	l3895
  6409   001530                     l411:
  6410   001530  0004               	clrwdt		;# 
  6411   001532                     
  6412                           ;main.c: 1173:         readWeighingData();
  6413   001532  EC66  F010         	call	_readWeighingData	;wreg free
  6414   001536                     
  6415                           ;main.c: 1174:         AD_capture_BattVoltage();
  6416   001536  EC21  F011         	call	_AD_capture_BattVoltage	;wreg free
  6417   00153A                     
  6418                           ;main.c: 1175:         delay_1ms(Motor_Pause_Time);
  6419   00153A  C015  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  6420   00153E  C016  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  6421   001542  ECC7  F011         	call	_delay_1ms	;wreg free
  6422   001546                     
  6423                           ;main.c: 1176:         MotorON();
  6424   001546  EC72  F012         	call	_MotorON	;wreg free
  6425   00154A                     
  6426                           ;main.c: 1177:         _delay((unsigned long)((350)*(8000000/4000.0)));
  6427   00154A  0E04               	movlw	4
  6428   00154C  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6429   00154E  0E8E               	movlw	142
  6430   001550  6E41               	movwf	??_Homing_Again_Auto^0,c
  6431   001552  0E12               	movlw	18
  6432   001554                     u4197:
  6433   001554  2EE8               	decfsz	wreg,f,c
  6434   001556  D7FE               	bra	u4197
  6435   001558  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6436   00155A  D7FC               	bra	u4197
  6437   00155C  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6438   00155E  D7FA               	bra	u4197
  6439   001560  D000               	nop2	
  6440   001562                     
  6441                           ;main.c: 1179:         errorcounter = 30;
  6442   001562  0E1E               	movlw	30
  6443   001564  6E52               	movwf	_errorcounter^0,c	;volatile
  6444   001566  0E00               	movlw	0
  6445   001568  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6446   00156A  0E00               	movlw	0
  6447   00156C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6448   00156E  0E00               	movlw	0
  6449   001570  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6450   001572                     l3851:
  6451                           
  6452                           ;main.c: 1182:             IR_SENSORF = Read_IR();
  6453   001572  EC16  F012         	call	_Read_IR	;wreg free
  6454   001576  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  6455   00157A  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  6456   00157E                     
  6457                           ;main.c: 1183:             if (errorcounter == 0) {
  6458   00157E  5052               	movf	_errorcounter^0,w,c	;volatile
  6459   001580  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6460   001582  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6461   001584  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6462   001586  A4D8               	btfss	status,2,c
  6463   001588  EFC8  F00A         	goto	u2411
  6464   00158C  EFCA  F00A         	goto	u2410
  6465   001590                     u2411:
  6466   001590  EFCF  F00A         	goto	l3859
  6467   001594                     u2410:
  6468   001594                     
  6469                           ;main.c: 1184:                 WriteSTLED316SErr('1');
  6470   001594  0E31               	movlw	49
  6471   001596  EC8B  F00D         	call	_WriteSTLED316SErr
  6472   00159A                     
  6473                           ;main.c: 1185:                 MotorBREAK();
  6474   00159A  EC77  F012         	call	_MotorBREAK	;wreg free
  6475   00159E                     l3859:
  6476                           
  6477                           ;main.c: 1187:         } while (IR_SENSORF != 0);
  6478   00159E  500B               	movf	_IR_SENSORF^0,w,c
  6479   0015A0  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  6480   0015A2  A4D8               	btfss	status,2,c
  6481   0015A4  EFD6  F00A         	goto	u2421
  6482   0015A8  EFD8  F00A         	goto	u2420
  6483   0015AC                     u2421:
  6484   0015AC  EFB9  F00A         	goto	l3851
  6485   0015B0                     u2420:
  6486   0015B0                     
  6487                           ;main.c: 1189:         _delay((unsigned long)((30)*(8000000/4000.0)));
  6488   0015B0  0E4E               	movlw	78
  6489   0015B2  6E41               	movwf	??_Homing_Again_Auto^0,c
  6490   0015B4  0EEB               	movlw	235
  6491   0015B6                     u4207:
  6492   0015B6  2EE8               	decfsz	wreg,f,c
  6493   0015B8  D7FE               	bra	u4207
  6494   0015BA  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6495   0015BC  D7FC               	bra	u4207
  6496   0015BE  F000               	nop	
  6497   0015C0                     
  6498                           ;main.c: 1190:         errorcounter = 30;
  6499   0015C0  0E1E               	movlw	30
  6500   0015C2  6E52               	movwf	_errorcounter^0,c	;volatile
  6501   0015C4  0E00               	movlw	0
  6502   0015C6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6503   0015C8  0E00               	movlw	0
  6504   0015CA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6505   0015CC  0E00               	movlw	0
  6506   0015CE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6507   0015D0                     l3865:
  6508                           
  6509                           ;main.c: 1193:             IR_SENSORF = Read_IR();
  6510   0015D0  EC16  F012         	call	_Read_IR	;wreg free
  6511   0015D4  C038  F00B         	movff	?_Read_IR,_IR_SENSORF
  6512   0015D8  C039  F00C         	movff	?_Read_IR+1,_IR_SENSORF+1
  6513   0015DC                     
  6514                           ;main.c: 1194:             if (errorcounter == 0) {
  6515   0015DC  5052               	movf	_errorcounter^0,w,c	;volatile
  6516   0015DE  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6517   0015E0  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6518   0015E2  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6519   0015E4  A4D8               	btfss	status,2,c
  6520   0015E6  EFF7  F00A         	goto	u2431
  6521   0015EA  EFF9  F00A         	goto	u2430
  6522   0015EE                     u2431:
  6523   0015EE  EFFE  F00A         	goto	l3873
  6524   0015F2                     u2430:
  6525   0015F2                     
  6526                           ;main.c: 1195:                 WriteSTLED316SErr('2');
  6527   0015F2  0E32               	movlw	50
  6528   0015F4  EC8B  F00D         	call	_WriteSTLED316SErr
  6529   0015F8                     
  6530                           ;main.c: 1196:                 MotorBREAK();
  6531   0015F8  EC77  F012         	call	_MotorBREAK	;wreg free
  6532   0015FC                     l3873:
  6533                           
  6534                           ;main.c: 1198:         } while (IR_SENSORF != 1);
  6535   0015FC  040B               	decf	_IR_SENSORF^0,w,c
  6536   0015FE  100C               	iorwf	(_IR_SENSORF+1)^0,w,c
  6537   001600  A4D8               	btfss	status,2,c
  6538   001602  EF05  F00B         	goto	u2441
  6539   001606  EF07  F00B         	goto	u2440
  6540   00160A                     u2441:
  6541   00160A  EFE8  F00A         	goto	l3865
  6542   00160E                     u2440:
  6543   00160E                     
  6544                           ;main.c: 1200:         errorcounter = 30;
  6545   00160E  0E1E               	movlw	30
  6546   001610  6E52               	movwf	_errorcounter^0,c	;volatile
  6547   001612  0E00               	movlw	0
  6548   001614  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6549   001616  0E00               	movlw	0
  6550   001618  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6551   00161A  0E00               	movlw	0
  6552   00161C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6553   00161E                     
  6554                           ;main.c: 1202:         delay_1ms(Motor_Stop_Delay_Time);
  6555   00161E  C019  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  6556   001622  C01A  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  6557   001626  ECC7  F011         	call	_delay_1ms	;wreg free
  6558   00162A                     
  6559                           ;main.c: 1203:         MotorBREAK();
  6560   00162A  EC77  F012         	call	_MotorBREAK	;wreg free
  6561                           
  6562                           ;main.c: 1205:         if (vibration_mode == 1) {
  6563   00162E  042C               	decf	_vibration_mode^0,w,c
  6564   001630  A4D8               	btfss	status,2,c
  6565   001632  EF1D  F00B         	goto	u2451
  6566   001636  EF1F  F00B         	goto	u2450
  6567   00163A                     u2451:
  6568   00163A  EF34  F00B         	goto	l418
  6569   00163E                     u2450:
  6570   00163E                     
  6571                           ;main.c: 1206:             LATCbits.LATC1 = 1;
  6572   00163E  828B               	bsf	139,1,c	;volatile
  6573   001640                     
  6574                           ;main.c: 1207:             delay_1ms(Vmotor_Time);
  6575   001640  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6576   001644  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6577   001648  ECC7  F011         	call	_delay_1ms	;wreg free
  6578   00164C                     
  6579                           ;main.c: 1209:             LATCbits.LATC1 = 0;
  6580   00164C  928B               	bcf	139,1,c	;volatile
  6581   00164E                     
  6582                           ;main.c: 1210:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6583   00164E  0E04               	movlw	4
  6584   001650  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6585   001652  0E0C               	movlw	12
  6586   001654  6E41               	movwf	??_Homing_Again_Auto^0,c
  6587   001656  0E34               	movlw	52
  6588   001658                     u4217:
  6589   001658  2EE8               	decfsz	wreg,f,c
  6590   00165A  D7FE               	bra	u4217
  6591   00165C  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6592   00165E  D7FC               	bra	u4217
  6593   001660  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6594   001662  D7FA               	bra	u4217
  6595                           
  6596                           ;main.c: 1211:         } else {
  6597   001664  EF3B  F00B         	goto	l3891
  6598   001668                     l418:
  6599                           
  6600                           ;main.c: 1212:             LATCbits.LATC1 = 0;
  6601   001668  928B               	bcf	139,1,c	;volatile
  6602   00166A                     
  6603                           ;main.c: 1213:             delay_1ms(Vmotor_Time);
  6604   00166A  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6605   00166E  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6606   001672  ECC7  F011         	call	_delay_1ms	;wreg free
  6607   001676                     l3891:
  6608                           
  6609                           ;main.c: 1216:         if (Stop == 1)
  6610   001676  042F               	decf	_Stop^0,w,c
  6611   001678  A4D8               	btfss	status,2,c
  6612   00167A  EF41  F00B         	goto	u2461
  6613   00167E  EF43  F00B         	goto	u2460
  6614   001682                     u2461:
  6615   001682  EF45  F00B         	goto	l3895
  6616   001686                     u2460:
  6617   001686  EF4D  F00B         	goto	l421
  6618   00168A                     l3895:
  6619                           
  6620                           ;main.c: 1171:     while (Stop == 0) {
  6621   00168A  502F               	movf	_Stop^0,w,c
  6622   00168C  B4D8               	btfsc	status,2,c
  6623   00168E  EF4B  F00B         	goto	u2471
  6624   001692  EF4D  F00B         	goto	u2470
  6625   001696                     u2471:
  6626   001696  EF98  F00A         	goto	l411
  6627   00169A                     u2470:
  6628   00169A                     l421:
  6629                           
  6630                           ;main.c: 1221:     LATAbits.LATA2 = 0;
  6631   00169A  9489               	bcf	137,2,c	;volatile
  6632   00169C                     
  6633                           ;main.c: 1223:     if (NUM == 0 || Stop == 1) {
  6634   00169C  5013               	movf	_NUM^0,w,c
  6635   00169E  1014               	iorwf	(_NUM+1)^0,w,c
  6636   0016A0  B4D8               	btfsc	status,2,c
  6637   0016A2  EF55  F00B         	goto	u2481
  6638   0016A6  EF57  F00B         	goto	u2480
  6639   0016AA                     u2481:
  6640   0016AA  EF5F  F00B         	goto	l3901
  6641   0016AE                     u2480:
  6642   0016AE  042F               	decf	_Stop^0,w,c
  6643   0016B0  A4D8               	btfss	status,2,c
  6644   0016B2  EF5D  F00B         	goto	u2491
  6645   0016B6  EF5F  F00B         	goto	u2490
  6646   0016BA                     u2491:
  6647   0016BA  EF7A  F00B         	goto	l3911
  6648   0016BE                     u2490:
  6649   0016BE                     l3901:
  6650                           
  6651                           ;main.c: 1225:         if (vibration_mode == 1) {
  6652   0016BE  042C               	decf	_vibration_mode^0,w,c
  6653   0016C0  A4D8               	btfss	status,2,c
  6654   0016C2  EF65  F00B         	goto	u2501
  6655   0016C6  EF67  F00B         	goto	u2500
  6656   0016CA                     u2501:
  6657   0016CA  EF7A  F00B         	goto	l3911
  6658   0016CE                     u2500:
  6659   0016CE                     
  6660                           ;main.c: 1226:             LATCbits.LATC1 = 1;
  6661   0016CE  828B               	bsf	139,1,c	;volatile
  6662   0016D0                     
  6663                           ;main.c: 1227:             delay_1ms(Vmotor_Time);
  6664   0016D0  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6665   0016D4  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6666   0016D8  ECC7  F011         	call	_delay_1ms	;wreg free
  6667   0016DC                     
  6668                           ;main.c: 1229:             LATCbits.LATC1 = 0;
  6669   0016DC  928B               	bcf	139,1,c	;volatile
  6670   0016DE                     
  6671                           ;main.c: 1230:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6672   0016DE  0E04               	movlw	4
  6673   0016E0  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6674   0016E2  0E0C               	movlw	12
  6675   0016E4  6E41               	movwf	??_Homing_Again_Auto^0,c
  6676   0016E6  0E34               	movlw	52
  6677   0016E8                     u4227:
  6678   0016E8  2EE8               	decfsz	wreg,f,c
  6679   0016EA  D7FE               	bra	u4227
  6680   0016EC  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6681   0016EE  D7FC               	bra	u4227
  6682   0016F0  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6683   0016F2  D7FA               	bra	u4227
  6684   0016F4                     l3911:
  6685                           
  6686                           ;main.c: 1235:     NUM = 0;
  6687   0016F4  0E00               	movlw	0
  6688   0016F6  6E14               	movwf	(_NUM+1)^0,c
  6689   0016F8  0E00               	movlw	0
  6690   0016FA  6E13               	movwf	_NUM^0,c
  6691   0016FC                     
  6692                           ;main.c: 1236:     OpMode = AUTO_MODE;
  6693   0016FC  0E02               	movlw	2
  6694   0016FE  6E2A               	movwf	_OpMode^0,c	;volatile
  6695   001700  0012               	return		;funcret
  6696   001702                     __end_of_Homing_Again_Auto:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _readWeighingData *****************
  6700 ;; Defined at:
  6701 ;;		line 1265 in file "main.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  i               2    8[COMRAM] int 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;Total ram usage:        2 bytes
  6720 ;; Hardware stack levels used: 1
  6721 ;; Hardware stack levels required when called: 3
  6722 ;; This function calls:
  6723 ;;		_Write1USART
  6724 ;;		_flushOut
  6725 ;; This function is called by:
  6726 ;;		_Homing_Again_Manual
  6727 ;;		_Homing_Again_Auto
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text29
  6732   0020CC                     __ptext29:
  6733                           	callstack 0
  6734   0020CC                     _readWeighingData:
  6735                           	callstack 26
  6736   0020CC                     
  6737                           ;main.c: 1266:     int i;;main.c: 1268:     Serial_Buffer_Out[0] = 0xA5;
  6738   0020CC  0EA5               	movlw	165
  6739   0020CE  0100               	movlb	0	; () banked
  6740   0020D0  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  6741                           
  6742                           ;main.c: 1269:     Serial_Buffer_Out[1] = 0x45;
  6743   0020D2  0E45               	movlw	69
  6744   0020D4  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  6745                           
  6746                           ;main.c: 1270:     Serial_Buffer_Out[2] = 0x00;
  6747   0020D6  0E00               	movlw	0
  6748   0020D8  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  6749                           
  6750                           ;main.c: 1271:     Serial_Buffer_Out[3] = 0x45;
  6751   0020DA  0E45               	movlw	69
  6752   0020DC  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  6753                           
  6754                           ;main.c: 1272:     Serial_Buffer_Out[4] = 0x5A;
  6755   0020DE  0E5A               	movlw	90
  6756   0020E0  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  6757   0020E2                     
  6758                           ; BSR set to: 0
  6759                           ;main.c: 1274:     INTCONbits.GIE = 0;
  6760   0020E2  9EF2               	bcf	242,7,c	;volatile
  6761                           
  6762                           ;main.c: 1275:     for (i = 0; i < 5; i++) {
  6763   0020E4  0E00               	movlw	0
  6764   0020E6  6E3B               	movwf	(readWeighingData@i+1)^0,c
  6765   0020E8  0E00               	movlw	0
  6766   0020EA  6E3A               	movwf	readWeighingData@i^0,c
  6767   0020EC                     l3375:
  6768                           
  6769                           ;main.c: 1276:         Write1USART(Serial_Buffer_Out[i]);
  6770   0020EC  0E60               	movlw	low _Serial_Buffer_Out
  6771   0020EE  243A               	addwf	readWeighingData@i^0,w,c
  6772   0020F0  6ED9               	movwf	fsr2l,c
  6773   0020F2  0E00               	movlw	high _Serial_Buffer_Out
  6774   0020F4  203B               	addwfc	(readWeighingData@i+1)^0,w,c
  6775   0020F6  6EDA               	movwf	fsr2h,c
  6776   0020F8  50DF               	movf	indf2,w,c
  6777   0020FA  EC3F  F012         	call	_Write1USART
  6778   0020FE                     
  6779                           ;main.c: 1277:     }
  6780   0020FE  4A3A               	infsnz	readWeighingData@i^0,f,c
  6781   002100  2A3B               	incf	(readWeighingData@i+1)^0,f,c
  6782   002102  BE3B               	btfsc	(readWeighingData@i+1)^0,7,c
  6783   002104  EF8D  F010         	goto	u2001
  6784   002108  503B               	movf	(readWeighingData@i+1)^0,w,c
  6785   00210A  E109               	bnz	u2000
  6786   00210C  0E05               	movlw	5
  6787   00210E  5C3A               	subwf	readWeighingData@i^0,w,c
  6788   002110  A0D8               	btfss	status,0,c
  6789   002112  EF8D  F010         	goto	u2001
  6790   002116  EF8F  F010         	goto	u2000
  6791   00211A                     u2001:
  6792   00211A  EF76  F010         	goto	l3375
  6793   00211E                     u2000:
  6794   00211E                     
  6795                           ;main.c: 1278:     INTCONbits.GIE = 1;
  6796   00211E  8EF2               	bsf	242,7,c	;volatile
  6797   002120                     
  6798                           ;main.c: 1280:     flushOut();
  6799   002120  EC5D  F011         	call	_flushOut	;wreg free
  6800   002124  0012               	return		;funcret
  6801   002126                     __end_of_readWeighingData:
  6802                           	callstack 0
  6803                           
  6804 ;; *************** function _flushOut *****************
  6805 ;; Defined at:
  6806 ;;		line 1254 in file "main.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;		None
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  i               2    6[COMRAM] int 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      void 
  6813 ;; Registers used:
  6814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;Total ram usage:        2 bytes
  6825 ;; Hardware stack levels used: 1
  6826 ;; Hardware stack levels required when called: 2
  6827 ;; This function calls:
  6828 ;;		Nothing
  6829 ;; This function is called by:
  6830 ;;		_main
  6831 ;;		_readWeighingData
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text30
  6836   0022BA                     __ptext30:
  6837                           	callstack 0
  6838   0022BA                     _flushOut:
  6839                           	callstack 28
  6840   0022BA                     
  6841                           ;main.c: 1255:     int i;;main.c: 1257:     for (i = 0; i < 16; i++) {
  6842   0022BA  0E00               	movlw	0
  6843   0022BC  6E39               	movwf	(flushOut@i+1)^0,c
  6844   0022BE  0E00               	movlw	0
  6845   0022C0  6E38               	movwf	flushOut@i^0,c
  6846   0022C2                     l3037:
  6847                           
  6848                           ;main.c: 1258:         Serial_Buffer_Out[i] = 0x00;
  6849   0022C2  0E60               	movlw	low _Serial_Buffer_Out
  6850   0022C4  2438               	addwf	flushOut@i^0,w,c
  6851   0022C6  6ED9               	movwf	fsr2l,c
  6852   0022C8  0E00               	movlw	high _Serial_Buffer_Out
  6853   0022CA  2039               	addwfc	(flushOut@i+1)^0,w,c
  6854   0022CC  6EDA               	movwf	fsr2h,c
  6855   0022CE  0E00               	movlw	0
  6856   0022D0  6EDF               	movwf	indf2,c
  6857   0022D2                     
  6858                           ;main.c: 1259:     }
  6859   0022D2  4A38               	infsnz	flushOut@i^0,f,c
  6860   0022D4  2A39               	incf	(flushOut@i+1)^0,f,c
  6861   0022D6  BE39               	btfsc	(flushOut@i+1)^0,7,c
  6862   0022D8  EF77  F011         	goto	u1711
  6863   0022DC  5039               	movf	(flushOut@i+1)^0,w,c
  6864   0022DE  E109               	bnz	u1710
  6865   0022E0  0E10               	movlw	16
  6866   0022E2  5C38               	subwf	flushOut@i^0,w,c
  6867   0022E4  A0D8               	btfss	status,0,c
  6868   0022E6  EF77  F011         	goto	u1711
  6869   0022EA  EF79  F011         	goto	u1710
  6870   0022EE                     u1711:
  6871   0022EE  EF61  F011         	goto	l3037
  6872   0022F2                     u1710:
  6873   0022F2  0012               	return		;funcret
  6874   0022F4                     __end_of_flushOut:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function _Write1USART *****************
  6878 ;; Defined at:
  6879 ;;		line 47 in file "usart.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  data            1    wreg     unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  data            1    6[COMRAM] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:        1 bytes
  6898 ;; Hardware stack levels used: 1
  6899 ;; Hardware stack levels required when called: 2
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;;		_readWeighingData
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text31
  6909   00247E                     __ptext31:
  6910                           	callstack 0
  6911   00247E                     _Write1USART:
  6912                           	callstack 28
  6913                           
  6914                           ;incstack = 0
  6915                           ;Write1USART@data stored from wreg
  6916   00247E  6E38               	movwf	Write1USART@data^0,c
  6917   002480                     
  6918                           ;usart.c: 48:     TXREG1 = data;
  6919   002480  C038  FFAE         	movff	Write1USART@data,4014	;volatile
  6920   002484                     l626:
  6921   002484  A2AD               	btfss	173,1,c	;volatile
  6922   002486  EF47  F012         	goto	u1701
  6923   00248A  EF49  F012         	goto	u1700
  6924   00248E                     u1701:
  6925   00248E  EF42  F012         	goto	l626
  6926   002492                     u1700:
  6927   002492  0012               	return		;funcret
  6928   002494                     __end_of_Write1USART:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _WriteSTLED316SMode *****************
  6932 ;; Defined at:
  6933 ;;		line 184 in file "Display.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  msg             1    wreg     unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  msg             1   14[COMRAM] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;Total ram usage:        3 bytes
  6952 ;; Hardware stack levels used: 1
  6953 ;; Hardware stack levels required when called: 3
  6954 ;; This function calls:
  6955 ;;		_STLED316s_SPI_SendData
  6956 ;; This function is called by:
  6957 ;;		_Homing_Again_Auto
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text32
  6962   00191A                     __ptext32:
  6963                           	callstack 0
  6964   00191A                     _WriteSTLED316SMode:
  6965                           	callstack 26
  6966                           
  6967                           ;incstack = 0
  6968                           ;WriteSTLED316SMode@msg stored from wreg
  6969   00191A  6E40               	movwf	WriteSTLED316SMode@msg^0,c
  6970   00191C                     
  6971                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  6972   00191C  988B               	bcf	139,4,c	;volatile
  6973   00191E                     
  6974                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  6975   00191E  0E00               	movlw	0
  6976   001920  ECB9  F00F         	call	_STLED316s_SPI_SendData
  6977   001924                     
  6978                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  6979   001924  888B               	bsf	139,4,c	;volatile
  6980   001926                     
  6981                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  6982   001926  988B               	bcf	139,4,c	;volatile
  6983                           
  6984                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  6985   001928  0E00               	movlw	0
  6986   00192A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  6987                           
  6988                           ;Display.c: 196:     switch (msg) {
  6989   00192E  EFD9  F00C         	goto	l3409
  6990   001932                     l3391:
  6991                           
  6992                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  6993   001932  0E79               	movlw	121
  6994   001934  ECB9  F00F         	call	_STLED316s_SPI_SendData
  6995                           
  6996                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  6997   001938  0E3F               	movlw	63
  6998   00193A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  6999                           
  7000                           ;Display.c: 200:             break;
  7001   00193E  EF06  F00D         	goto	l514
  7002   001942                     l3393:
  7003                           
  7004                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  7005   001942  0E3F               	movlw	63
  7006   001944  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7007                           
  7008                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  7009   001948  0E73               	movlw	115
  7010   00194A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7011                           
  7012                           ;Display.c: 204:             break;
  7013   00194E  EF06  F00D         	goto	l514
  7014   001952                     l3395:
  7015                           
  7016                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  7017   001952  0E39               	movlw	57
  7018   001954  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7019                           
  7020                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  7021   001958  0E77               	movlw	119
  7022   00195A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7023                           
  7024                           ;Display.c: 208:             break;
  7025   00195E  EF06  F00D         	goto	l514
  7026   001962                     l3397:
  7027                           
  7028                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  7029   001962  0E00               	movlw	0
  7030   001964  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7031                           
  7032                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  7033   001968  0E00               	movlw	0
  7034   00196A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7035                           
  7036                           ;Display.c: 212:             break;
  7037   00196E  EF06  F00D         	goto	l514
  7038   001972                     l3399:
  7039                           
  7040                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  7041   001972  0E00               	movlw	0
  7042   001974  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7043                           
  7044                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  7045   001978  0E3F               	movlw	63
  7046   00197A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7047                           
  7048                           ;Display.c: 216:             break;
  7049   00197E  EF06  F00D         	goto	l514
  7050   001982                     l3401:
  7051                           
  7052                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  7053   001982  0E79               	movlw	121
  7054   001984  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7055                           
  7056                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  7057   001988  0E06               	movlw	6
  7058   00198A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7059                           
  7060                           ;Display.c: 220:             break;
  7061   00198E  EF06  F00D         	goto	l514
  7062   001992                     l3403:
  7063                           
  7064                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  7065   001992  0E77               	movlw	119
  7066   001994  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7067                           
  7068                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  7069   001998  0E3E               	movlw	62
  7070   00199A  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7071                           
  7072                           ;Display.c: 224:             break;
  7073   00199E  EF06  F00D         	goto	l514
  7074   0019A2                     l3405:
  7075                           
  7076                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  7077   0019A2  0E00               	movlw	0
  7078   0019A4  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7079                           
  7080                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  7081   0019A8  0E3E               	movlw	62
  7082   0019AA  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7083                           
  7084                           ;Display.c: 228:             break;
  7085   0019AE  EF06  F00D         	goto	l514
  7086   0019B2                     l3409:
  7087   0019B2  5040               	movf	WriteSTLED316SMode@msg^0,w,c
  7088   0019B4  6E3E               	movwf	??_WriteSTLED316SMode^0,c
  7089   0019B6  6A3F               	clrf	(??_WriteSTLED316SMode+1)^0,c
  7090                           
  7091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7092                           ; Switch size 1, requested type "simple"
  7093                           ; Number of cases is 1, Range of values is 0 to 0
  7094                           ; switch strategies available:
  7095                           ; Name         Instructions Cycles
  7096                           ; simple_byte            4     3 (average)
  7097                           ;	Chosen strategy is simple_byte
  7098   0019B8  503F               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  7099   0019BA  0A00               	xorlw	0	; case 0
  7100   0019BC  B4D8               	btfsc	status,2,c
  7101   0019BE  EFE3  F00C         	goto	l6045
  7102   0019C2  EF06  F00D         	goto	l514
  7103   0019C6                     l6045:
  7104                           
  7105                           ; Switch size 1, requested type "simple"
  7106                           ; Number of cases is 8, Range of values is 65 to 88
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte           25    13 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111   0019C6  503E               	movf	??_WriteSTLED316SMode^0,w,c
  7112   0019C8  0A41               	xorlw	65	; case 65
  7113   0019CA  B4D8               	btfsc	status,2,c
  7114   0019CC  EFC9  F00C         	goto	l3403
  7115   0019D0  0A02               	xorlw	2	; case 67
  7116   0019D2  B4D8               	btfsc	status,2,c
  7117   0019D4  EFA9  F00C         	goto	l3395
  7118   0019D8  0A06               	xorlw	6	; case 69
  7119   0019DA  B4D8               	btfsc	status,2,c
  7120   0019DC  EF99  F00C         	goto	l3391
  7121   0019E0  0A02               	xorlw	2	; case 71
  7122   0019E2  B4D8               	btfsc	status,2,c
  7123   0019E4  EFB9  F00C         	goto	l3399
  7124   0019E8  0A08               	xorlw	8	; case 79
  7125   0019EA  B4D8               	btfsc	status,2,c
  7126   0019EC  EFA1  F00C         	goto	l3393
  7127   0019F0  0A1C               	xorlw	28	; case 83
  7128   0019F2  B4D8               	btfsc	status,2,c
  7129   0019F4  EFC1  F00C         	goto	l3401
  7130   0019F8  0A05               	xorlw	5	; case 86
  7131   0019FA  B4D8               	btfsc	status,2,c
  7132   0019FC  EFD1  F00C         	goto	l3405
  7133   001A00  0A0E               	xorlw	14	; case 88
  7134   001A02  B4D8               	btfsc	status,2,c
  7135   001A04  EFB1  F00C         	goto	l3397
  7136   001A08  EF06  F00D         	goto	l514
  7137   001A0C                     l514:
  7138                           
  7139                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  7140   001A0C  888B               	bsf	139,4,c	;volatile
  7141                           
  7142                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  7143   001A0E  988B               	bcf	139,4,c	;volatile
  7144   001A10                     
  7145                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  7146   001A10  0E0D               	movlw	13
  7147   001A12  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7148   001A16                     
  7149                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  7150   001A16  888B               	bsf	139,4,c	;volatile
  7151   001A18  0012               	return		;funcret
  7152   001A1A                     __end_of_WriteSTLED316SMode:
  7153                           	callstack 0
  7154                           
  7155 ;; *************** function _WriteSTLED316SErr *****************
  7156 ;; Defined at:
  7157 ;;		line 278 in file "Display.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  msg             1    wreg     unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  msg             1   14[COMRAM] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;Total ram usage:        3 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 3
  7178 ;; This function calls:
  7179 ;;		_STLED316s_SPI_SendData
  7180 ;; This function is called by:
  7181 ;;		_MotorPosition_Init
  7182 ;;		_Homing_Again_Manual
  7183 ;;		_Homing_Again_Auto
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           	psect	text33
  7188   001B16                     __ptext33:
  7189                           	callstack 0
  7190   001B16                     _WriteSTLED316SErr:
  7191                           	callstack 26
  7192                           
  7193                           ;incstack = 0
  7194                           ;WriteSTLED316SErr@msg stored from wreg
  7195   001B16  6E40               	movwf	WriteSTLED316SErr@msg^0,c
  7196   001B18                     
  7197                           ;Display.c: 279:     LATCbits.LATC4 = 0;
  7198   001B18  988B               	bcf	139,4,c	;volatile
  7199   001B1A                     
  7200                           ;Display.c: 281:     STLED316s_SPI_SendData(0x00);
  7201   001B1A  0E00               	movlw	0
  7202   001B1C  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7203   001B20                     
  7204                           ;Display.c: 284:     LATCbits.LATC4 = 1;
  7205   001B20  888B               	bsf	139,4,c	;volatile
  7206   001B22                     
  7207                           ;Display.c: 286:     LATCbits.LATC4 = 0;
  7208   001B22  988B               	bcf	139,4,c	;volatile
  7209                           
  7210                           ;Display.c: 288:     STLED316s_SPI_SendData(0x00);
  7211   001B24  0E00               	movlw	0
  7212   001B26  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7213                           
  7214                           ;Display.c: 290:     switch (msg) {
  7215   001B2A  EFCF  F00D         	goto	l3351
  7216   001B2E                     l3335:
  7217                           
  7218                           ;Display.c: 292:             STLED316s_SPI_SendData(0x79);
  7219   001B2E  0E79               	movlw	121
  7220   001B30  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7221                           
  7222                           ;Display.c: 293:             STLED316s_SPI_SendData(0x77);
  7223   001B34  0E77               	movlw	119
  7224   001B36  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7225                           
  7226                           ;Display.c: 294:             break;
  7227   001B3A  EFF8  F00D         	goto	l533
  7228   001B3E                     l3337:
  7229                           
  7230                           ;Display.c: 296:             STLED316s_SPI_SendData(0x79);
  7231   001B3E  0E79               	movlw	121
  7232   001B40  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7233                           
  7234                           ;Display.c: 297:             STLED316s_SPI_SendData(0x3F);
  7235   001B44  0E3F               	movlw	63
  7236   001B46  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7237                           
  7238                           ;Display.c: 298:             break;
  7239   001B4A  EFF8  F00D         	goto	l533
  7240   001B4E                     l3339:
  7241                           
  7242                           ;Display.c: 300:             STLED316s_SPI_SendData(0x79);
  7243   001B4E  0E79               	movlw	121
  7244   001B50  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7245                           
  7246                           ;Display.c: 301:             STLED316s_SPI_SendData(0x06);
  7247   001B54  0E06               	movlw	6
  7248   001B56  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7249                           
  7250                           ;Display.c: 302:             break;
  7251   001B5A  EFF8  F00D         	goto	l533
  7252   001B5E                     l3341:
  7253                           
  7254                           ;Display.c: 304:             STLED316s_SPI_SendData(0x79);
  7255   001B5E  0E79               	movlw	121
  7256   001B60  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7257                           
  7258                           ;Display.c: 305:             STLED316s_SPI_SendData(0x5B);
  7259   001B64  0E5B               	movlw	91
  7260   001B66  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7261                           
  7262                           ;Display.c: 306:             break;
  7263   001B6A  EFF8  F00D         	goto	l533
  7264   001B6E                     l3343:
  7265                           
  7266                           ;Display.c: 308:             STLED316s_SPI_SendData(0x00);
  7267   001B6E  0E00               	movlw	0
  7268   001B70  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7269                           
  7270                           ;Display.c: 309:             STLED316s_SPI_SendData(0x3F);
  7271   001B74  0E3F               	movlw	63
  7272   001B76  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7273                           
  7274                           ;Display.c: 310:             break;
  7275   001B7A  EFF8  F00D         	goto	l533
  7276   001B7E                     l3345:
  7277                           
  7278                           ;Display.c: 312:             STLED316s_SPI_SendData(0x79);
  7279   001B7E  0E79               	movlw	121
  7280   001B80  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7281                           
  7282                           ;Display.c: 313:             STLED316s_SPI_SendData(0x06);
  7283   001B84  0E06               	movlw	6
  7284   001B86  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7285                           
  7286                           ;Display.c: 314:             break;
  7287   001B8A  EFF8  F00D         	goto	l533
  7288   001B8E                     l3347:
  7289                           
  7290                           ;Display.c: 316:             STLED316s_SPI_SendData(0x77);
  7291   001B8E  0E77               	movlw	119
  7292   001B90  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7293                           
  7294                           ;Display.c: 317:             STLED316s_SPI_SendData(0x3E);
  7295   001B94  0E3E               	movlw	62
  7296   001B96  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7297                           
  7298                           ;Display.c: 318:             break;
  7299   001B9A  EFF8  F00D         	goto	l533
  7300   001B9E                     l3351:
  7301   001B9E  5040               	movf	WriteSTLED316SErr@msg^0,w,c
  7302   001BA0  6E3E               	movwf	??_WriteSTLED316SErr^0,c
  7303   001BA2  6A3F               	clrf	(??_WriteSTLED316SErr+1)^0,c
  7304                           
  7305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7306                           ; Switch size 1, requested type "simple"
  7307                           ; Number of cases is 1, Range of values is 0 to 0
  7308                           ; switch strategies available:
  7309                           ; Name         Instructions Cycles
  7310                           ; simple_byte            4     3 (average)
  7311                           ;	Chosen strategy is simple_byte
  7312   001BA4  503F               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  7313   001BA6  0A00               	xorlw	0	; case 0
  7314   001BA8  B4D8               	btfsc	status,2,c
  7315   001BAA  EFD9  F00D         	goto	l6047
  7316   001BAE  EFF8  F00D         	goto	l533
  7317   001BB2                     l6047:
  7318                           
  7319                           ; Switch size 1, requested type "simple"
  7320                           ; Number of cases is 7, Range of values is 48 to 83
  7321                           ; switch strategies available:
  7322                           ; Name         Instructions Cycles
  7323                           ; simple_byte           22    12 (average)
  7324                           ;	Chosen strategy is simple_byte
  7325   001BB2  503E               	movf	??_WriteSTLED316SErr^0,w,c
  7326   001BB4  0A30               	xorlw	48	; case 48
  7327   001BB6  B4D8               	btfsc	status,2,c
  7328   001BB8  EF9F  F00D         	goto	l3337
  7329   001BBC  0A01               	xorlw	1	; case 49
  7330   001BBE  B4D8               	btfsc	status,2,c
  7331   001BC0  EFA7  F00D         	goto	l3339
  7332   001BC4  0A03               	xorlw	3	; case 50
  7333   001BC6  B4D8               	btfsc	status,2,c
  7334   001BC8  EFAF  F00D         	goto	l3341
  7335   001BCC  0A73               	xorlw	115	; case 65
  7336   001BCE  B4D8               	btfsc	status,2,c
  7337   001BD0  EFC7  F00D         	goto	l3347
  7338   001BD4  0A04               	xorlw	4	; case 69
  7339   001BD6  B4D8               	btfsc	status,2,c
  7340   001BD8  EF97  F00D         	goto	l3335
  7341   001BDC  0A02               	xorlw	2	; case 71
  7342   001BDE  B4D8               	btfsc	status,2,c
  7343   001BE0  EFB7  F00D         	goto	l3343
  7344   001BE4  0A14               	xorlw	20	; case 83
  7345   001BE6  B4D8               	btfsc	status,2,c
  7346   001BE8  EFBF  F00D         	goto	l3345
  7347   001BEC  EFF8  F00D         	goto	l533
  7348   001BF0                     l533:
  7349                           
  7350                           ;Display.c: 323:     LATCbits.LATC4 = 1;
  7351   001BF0  888B               	bsf	139,4,c	;volatile
  7352                           
  7353                           ;Display.c: 325:     LATCbits.LATC4 = 0;
  7354   001BF2  988B               	bcf	139,4,c	;volatile
  7355   001BF4                     
  7356                           ;Display.c: 327:     STLED316s_SPI_SendData(0x0D);
  7357   001BF4  0E0D               	movlw	13
  7358   001BF6  ECB9  F00F         	call	_STLED316s_SPI_SendData
  7359   001BFA                     
  7360                           ;Display.c: 329:     LATCbits.LATC4 = 1;
  7361   001BFA  888B               	bsf	139,4,c	;volatile
  7362   001BFC  0012               	return		;funcret
  7363   001BFE                     __end_of_WriteSTLED316SErr:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function _STLED316s_SPI_SendData *****************
  7367 ;; Defined at:
  7368 ;;		line 88 in file "Display.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  Data            1    wreg     unsigned char 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  Data            1    8[COMRAM] unsigned char 
  7373 ;;  t               1   11[COMRAM] unsigned char 
  7374 ;;  i               1   10[COMRAM] unsigned char 
  7375 ;;  temp            1    9[COMRAM] unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;Total ram usage:        6 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 2
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_InitSTLED316
  7396 ;;		_WriteSTLED316SData
  7397 ;;		_WriteSTLED316SMode
  7398 ;;		_WriteSTLED316SVibMode
  7399 ;;		_WriteSTLED316SErr
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text34
  7404   001F72                     __ptext34:
  7405                           	callstack 0
  7406   001F72                     _STLED316s_SPI_SendData:
  7407                           	callstack 27
  7408                           
  7409                           ;incstack = 0
  7410                           ;STLED316s_SPI_SendData@Data stored from wreg
  7411   001F72  6E3A               	movwf	STLED316s_SPI_SendData@Data^0,c
  7412   001F74                     
  7413                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  7414   001F74  0E00               	movlw	0
  7415   001F76  6E3C               	movwf	STLED316s_SPI_SendData@i^0,c
  7416   001F78                     l479:
  7417                           
  7418                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  7419   001F78  968B               	bcf	139,3,c	;volatile
  7420   001F7A                     
  7421                           ;Display.c: 93:         temp = Data & (0x1 << i);
  7422   001F7A  C03C  F038         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  7423   001F7E  0E01               	movlw	1
  7424   001F80  6E39               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  7425   001F82  2A38               	incf	??_STLED316s_SPI_SendData^0,f,c
  7426   001F84  EFC6  F00F         	goto	u1734
  7427   001F88                     u1735:
  7428   001F88  90D8               	bcf	status,0,c
  7429   001F8A  3639               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  7430   001F8C                     u1734:
  7431   001F8C  2E38               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  7432   001F8E  EFC4  F00F         	goto	u1735
  7433   001F92  5039               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  7434   001F94  143A               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  7435   001F96  6E3B               	movwf	STLED316s_SPI_SendData@temp^0,c
  7436   001F98                     
  7437                           ;Display.c: 94:         if (temp)
  7438   001F98  503B               	movf	STLED316s_SPI_SendData@temp^0,w,c
  7439   001F9A  B4D8               	btfsc	status,2,c
  7440   001F9C  EFD2  F00F         	goto	u1741
  7441   001FA0  EFD4  F00F         	goto	u1740
  7442   001FA4                     u1741:
  7443   001FA4  EFD7  F00F         	goto	l481
  7444   001FA8                     u1740:
  7445   001FA8                     
  7446                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  7447   001FA8  8A8B               	bsf	139,5,c	;volatile
  7448   001FAA  EFD8  F00F         	goto	l3061
  7449   001FAE                     l481:
  7450                           
  7451                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  7452   001FAE  9A8B               	bcf	139,5,c	;volatile
  7453   001FB0                     l3061:
  7454                           
  7455                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  7456   001FB0  0E00               	movlw	0
  7457   001FB2  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  7458   001FB4                     l3067:
  7459   001FB4  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  7460   001FB6  0E04               	movlw	4
  7461   001FB8  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7462   001FBA  EFE1  F00F         	goto	u1751
  7463   001FBE  EFE3  F00F         	goto	u1750
  7464   001FC2                     u1751:
  7465   001FC2  EFDA  F00F         	goto	l3067
  7466   001FC6                     u1750:
  7467   001FC6                     
  7468                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  7469   001FC6  868B               	bsf	139,3,c	;volatile
  7470   001FC8                     
  7471                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  7472   001FC8  0E00               	movlw	0
  7473   001FCA  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  7474   001FCC                     l3077:
  7475   001FCC  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  7476   001FCE  0E04               	movlw	4
  7477   001FD0  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7478   001FD2  EFED  F00F         	goto	u1761
  7479   001FD6  EFEF  F00F         	goto	u1760
  7480   001FDA                     u1761:
  7481   001FDA  EFE6  F00F         	goto	l3077
  7482   001FDE                     u1760:
  7483   001FDE                     
  7484                           ;Display.c: 101:     }
  7485   001FDE  2A3C               	incf	STLED316s_SPI_SendData@i^0,f,c
  7486   001FE0  0E07               	movlw	7
  7487   001FE2  643C               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  7488   001FE4  EFF6  F00F         	goto	u1771
  7489   001FE8  EFF8  F00F         	goto	u1770
  7490   001FEC                     u1771:
  7491   001FEC  EFBC  F00F         	goto	l479
  7492   001FF0                     u1770:
  7493   001FF0  0012               	return		;funcret
  7494   001FF2                     __end_of_STLED316s_SPI_SendData:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function _Read_IR *****************
  7498 ;; Defined at:
  7499 ;;		line 935 in file "main.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  2    6[COMRAM] unsigned int 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;Total ram usage:        2 bytes
  7518 ;; Hardware stack levels used: 1
  7519 ;; Hardware stack levels required when called: 2
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_MotorPosition_Init
  7524 ;;		_Homing_Again_Manual
  7525 ;;		_Homing_Again_Auto
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text35
  7530   00242C                     __ptext35:
  7531                           	callstack 0
  7532   00242C                     _Read_IR:
  7533                           	callstack 27
  7534   00242C                     
  7535                           ;main.c: 937:     if (PORTAbits.RA1 == 1)
  7536   00242C  A280               	btfss	128,1,c	;volatile
  7537   00242E  EF1B  F012         	goto	u1991
  7538   002432  EF1D  F012         	goto	u1990
  7539   002436                     u1991:
  7540   002436  EF23  F012         	goto	l3319
  7541   00243A                     u1990:
  7542   00243A                     
  7543                           ;main.c: 938:     {;main.c: 939:         return 0;
  7544   00243A  0E00               	movlw	0
  7545   00243C  6E39               	movwf	(?_Read_IR+1)^0,c
  7546   00243E  0E00               	movlw	0
  7547   002440  6E38               	movwf	?_Read_IR^0,c
  7548   002442  EF27  F012         	goto	l351
  7549   002446                     l3319:
  7550                           
  7551                           ;main.c: 941:     {;main.c: 942:         return 1;
  7552   002446  0E00               	movlw	0
  7553   002448  6E39               	movwf	(?_Read_IR+1)^0,c
  7554   00244A  0E01               	movlw	1
  7555   00244C  6E38               	movwf	?_Read_IR^0,c
  7556   00244E                     l351:
  7557   00244E  0012               	return		;funcret
  7558   002450                     __end_of_Read_IR:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _MotorON *****************
  7562 ;; Defined at:
  7563 ;;		line 40 in file "MotorDriver.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;Total ram usage:        0 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 3
  7584 ;; This function calls:
  7585 ;;		_Set_RG3
  7586 ;; This function is called by:
  7587 ;;		_MotorPosition_Init
  7588 ;;		_Homing_Again_Manual
  7589 ;;		_Homing_Again_Auto
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text36
  7594   0024E4                     __ptext36:
  7595                           	callstack 0
  7596   0024E4                     _MotorON:
  7597                           	callstack 26
  7598   0024E4                     
  7599                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
  7600   0024E4  868F               	bsf	143,3,c	;volatile
  7601                           
  7602                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
  7603   0024E6  888F               	bsf	143,4,c	;volatile
  7604   0024E8                     
  7605                           ;MotorDriver.c: 44:     Set_RG3();
  7606   0024E8  EC88  F012         	call	_Set_RG3	;wreg free
  7607   0024EC  0012               	return		;funcret
  7608   0024EE                     __end_of_MotorON:
  7609                           	callstack 0
  7610                           
  7611 ;; *************** function _Set_RG3 *****************
  7612 ;; Defined at:
  7613 ;;		line 28 in file "MotorDriver.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;		None
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      void 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used: 1
  7633 ;; Hardware stack levels required when called: 2
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_MotorON
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text37
  7642   002510                     __ptext37:
  7643                           	callstack 0
  7644   002510                     _Set_RG3:
  7645                           	callstack 26
  7646   002510                     
  7647                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
  7648   002510  0E08               	movlw	8
  7649   002512  6E73               	movwf	115,c	;volatile
  7650   002514                     
  7651                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
  7652   002514  8476               	bsf	118,2,c	;volatile
  7653   002516  0012               	return		;funcret
  7654   002518                     __end_of_Set_RG3:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _MotorBREAK *****************
  7658 ;; Defined at:
  7659 ;;		line 47 in file "MotorDriver.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; Hardware stack levels required when called: 3
  7680 ;; This function calls:
  7681 ;;		_Clr_RG3
  7682 ;; This function is called by:
  7683 ;;		_MotorPosition_Init
  7684 ;;		_Homing_Again_Manual
  7685 ;;		_Homing_Again_Auto
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text38
  7690   0024EE                     __ptext38:
  7691                           	callstack 0
  7692   0024EE                     _MotorBREAK:
  7693                           	callstack 26
  7694   0024EE                     
  7695                           ;MotorDriver.c: 49:     Clr_RG3();
  7696   0024EE  EC8C  F012         	call	_Clr_RG3	;wreg free
  7697   0024F2                     
  7698                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
  7699   0024F2  868F               	bsf	143,3,c	;volatile
  7700   0024F4                     
  7701                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
  7702   0024F4  888F               	bsf	143,4,c	;volatile
  7703   0024F6  0012               	return		;funcret
  7704   0024F8                     __end_of_MotorBREAK:
  7705                           	callstack 0
  7706                           
  7707 ;; *************** function _Clr_RG3 *****************
  7708 ;; Defined at:
  7709 ;;		line 35 in file "MotorDriver.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;Total ram usage:        0 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 2
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_MotorBREAK
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text39
  7738   002518                     __ptext39:
  7739                           	callstack 0
  7740   002518                     _Clr_RG3:
  7741                           	callstack 26
  7742   002518                     
  7743                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
  7744   002518  0E00               	movlw	0
  7745   00251A  6E73               	movwf	115,c	;volatile
  7746   00251C                     
  7747                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
  7748   00251C  9476               	bcf	118,2,c	;volatile
  7749   00251E  0012               	return		;funcret
  7750   002520                     __end_of_Clr_RG3:
  7751                           	callstack 0
  7752                           
  7753 ;; *************** function _AD_capture_BattVoltage *****************
  7754 ;; Defined at:
  7755 ;;		line 1297 in file "main.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, status,2, status,0, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;Total ram usage:        2 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 3
  7776 ;; This function calls:
  7777 ;;		_delay_1ms
  7778 ;; This function is called by:
  7779 ;;		_main
  7780 ;;		_Homing_Again_Manual
  7781 ;;		_Homing_Again_Auto
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text40
  7786   002242                     __ptext40:
  7787                           	callstack 0
  7788   002242                     _AD_capture_BattVoltage:
  7789                           	callstack 26
  7790   002242                     
  7791                           ;main.c: 1299:     ADCON0bits.CHS0 = 0;
  7792   002242  94C2               	bcf	194,2,c	;volatile
  7793                           
  7794                           ;main.c: 1300:     ADCON0bits.CHS1 = 0;
  7795   002244  96C2               	bcf	194,3,c	;volatile
  7796                           
  7797                           ;main.c: 1301:     ADCON0bits.CHS2 = 0;
  7798   002246  98C2               	bcf	194,4,c	;volatile
  7799                           
  7800                           ;main.c: 1302:     ADCON0bits.CHS3 = 0;
  7801   002248  9AC2               	bcf	194,5,c	;volatile
  7802                           
  7803                           ;main.c: 1304:     ADCON0bits.ADON = 1;
  7804   00224A  80C2               	bsf	194,0,c	;volatile
  7805   00224C                     
  7806                           ;main.c: 1305:     delay_1ms(5);
  7807   00224C  0E00               	movlw	0
  7808   00224E  6E39               	movwf	(delay_1ms@time+1)^0,c
  7809   002250  0E05               	movlw	5
  7810   002252  6E38               	movwf	delay_1ms@time^0,c
  7811   002254  ECC7  F011         	call	_delay_1ms	;wreg free
  7812   002258                     
  7813                           ;main.c: 1306:     ADCON0bits.GO = 1;
  7814   002258  82C2               	bsf	194,1,c	;volatile
  7815   00225A                     l447:
  7816                           
  7817                           ;main.c: 1308:     while (ADCON0bits.GO == 1) {
  7818   00225A  B2C2               	btfsc	194,1,c	;volatile
  7819   00225C  EF32  F011         	goto	u1981
  7820   002260  EF34  F011         	goto	u1980
  7821   002264                     u1981:
  7822   002264  EF2D  F011         	goto	l447
  7823   002268                     u1980:
  7824   002268                     
  7825                           ;main.c: 1312:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  7826   002268  50C3               	movf	195,w,c	;volatile
  7827   00226A  CFC4 F03B          	movff	4036,??_AD_capture_BattVoltage	;volatile
  7828   00226E  6A3C               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  7829   002270  C03B  F03C         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  7830   002274  6A3B               	clrf	??_AD_capture_BattVoltage^0,c
  7831   002276  103B               	iorwf	??_AD_capture_BattVoltage^0,w,c
  7832   002278  6E09               	movwf	_VOLTAGE^0,c
  7833   00227A  503C               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  7834   00227C  6E0A               	movwf	(_VOLTAGE+1)^0,c
  7835   00227E  0012               	return		;funcret
  7836   002280                     __end_of_AD_capture_BattVoltage:
  7837                           	callstack 0
  7838                           
  7839 ;; *************** function _delay_1ms *****************
  7840 ;; Defined at:
  7841 ;;		line 925 in file "main.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  time            2    6[COMRAM] unsigned int 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;		None
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  1    wreg      void 
  7848 ;; Registers used:
  7849 ;;		wreg, status,2, status,0
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;Total ram usage:        3 bytes
  7860 ;; Hardware stack levels used: 1
  7861 ;; Hardware stack levels required when called: 2
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_MotorPosition_Init
  7866 ;;		_Homing_Again_Manual
  7867 ;;		_Homing_Again_Auto
  7868 ;;		_AD_capture_BattVoltage
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text41
  7873   00238E                     __ptext41:
  7874                           	callstack 0
  7875   00238E                     _delay_1ms:
  7876                           	callstack 27
  7877   00238E                     
  7878                           ;main.c: 926:     while (time > 0) {
  7879   00238E  EFD3  F011         	goto	l344
  7880   002392                     l3045:
  7881                           
  7882                           ;main.c: 927:         _delay((unsigned long)((1)*(8000000/4000.0)));
  7883   002392  0E03               	movlw	3
  7884   002394  6E3A               	movwf	??_delay_1ms^0,c
  7885   002396  0E98               	movlw	152
  7886   002398                     u4237:
  7887   002398  2EE8               	decfsz	wreg,f,c
  7888   00239A  D7FE               	bra	u4237
  7889   00239C  2E3A               	decfsz	??_delay_1ms^0,f,c
  7890   00239E  D7FC               	bra	u4237
  7891   0023A0                     
  7892                           ;main.c: 928:         time--;
  7893   0023A0  0638               	decf	delay_1ms@time^0,f,c
  7894   0023A2  A0D8               	btfss	status,0,c
  7895   0023A4  0639               	decf	(delay_1ms@time+1)^0,f,c
  7896   0023A6                     l344:
  7897                           
  7898                           ;main.c: 926:     while (time > 0) {
  7899   0023A6  5038               	movf	delay_1ms@time^0,w,c
  7900   0023A8  1039               	iorwf	(delay_1ms@time+1)^0,w,c
  7901   0023AA  A4D8               	btfss	status,2,c
  7902   0023AC  EFDA  F011         	goto	u1721
  7903   0023B0  EFDC  F011         	goto	u1720
  7904   0023B4                     u1721:
  7905   0023B4  EFC9  F011         	goto	l3045
  7906   0023B8                     u1720:
  7907   0023B8  0012               	return		;funcret
  7908   0023BA                     __end_of_delay_1ms:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _high_isr *****************
  7912 ;; Defined at:
  7913 ;;		line 811 in file "main.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  i               1    5[COMRAM] unsigned char 
  7918 ;;  c               1    4[COMRAM] unsigned char 
  7919 ;;  Temp            1    3[COMRAM] unsigned char 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;Total ram usage:        5 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 1
  7936 ;; This function calls:
  7937 ;;		_Low_Power_Indicator
  7938 ;;		_Read1USART
  7939 ;;		i2_Write1USART
  7940 ;; This function is called by:
  7941 ;;		Interrupt level 2
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	intcode
  7946   000008                     __pintcode:
  7947                           	callstack 0
  7948   000008                     _high_isr:
  7949                           	callstack 25
  7950                           
  7951                           ;incstack = 0
  7952   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7953   00000A  CFD9 F033          	movff	fsr2l,??_high_isr
  7954   00000E  CFDA F034          	movff	fsr2h,??_high_isr+1
  7955   000012                     
  7956                           ;main.c: 812:     unsigned char c, i;;main.c: 813:     unsigned char Temp;;main.c: 815: 
      +                              if ((PIR1bits.RC1IF))
  7957   000012  AA9E               	btfss	158,5,c	;volatile
  7958   000014  EF0E  F000         	goto	i2u310_41
  7959   000018  EF10  F000         	goto	i2u310_40
  7960   00001C                     i2u310_41:
  7961   00001C  EFE3  F000         	goto	i2l307
  7962   000020                     i2u310_40:
  7963   000020                     
  7964                           ;main.c: 816:     {;main.c: 818:         c = Read1USART();
  7965   000020  EC03  F012         	call	_Read1USART	;wreg free
  7966   000024  6E36               	movwf	high_isr@c^0,c
  7967   000026                     
  7968                           ;main.c: 820:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  7969   000026  0EA5               	movlw	165
  7970   000028  1836               	xorwf	high_isr@c^0,w,c
  7971   00002A  A4D8               	btfss	status,2,c
  7972   00002C  EF1A  F000         	goto	i2u311_41
  7973   000030  EF1C  F000         	goto	i2u311_40
  7974   000034                     i2u311_41:
  7975   000034  EF3E  F000         	goto	i2l4549
  7976   000038                     i2u311_40:
  7977   000038  5031               	movf	_Serial_Flag^0,w,c
  7978   00003A  B4D8               	btfsc	status,2,c
  7979   00003C  EF22  F000         	goto	i2u312_41
  7980   000040  EF24  F000         	goto	i2u312_40
  7981   000044                     i2u312_41:
  7982   000044  EF2C  F000         	goto	i2l4543
  7983   000048                     i2u312_40:
  7984   000048  042D               	decf	_Busy^0,w,c
  7985   00004A  A4D8               	btfss	status,2,c
  7986   00004C  EF2A  F000         	goto	i2u313_41
  7987   000050  EF2C  F000         	goto	i2u313_40
  7988   000054                     i2u313_41:
  7989   000054  EF3E  F000         	goto	i2l4549
  7990   000058                     i2u313_40:
  7991   000058                     i2l4543:
  7992                           
  7993                           ;main.c: 821:             Serial_GData = 1;
  7994   000058  0E01               	movlw	1
  7995   00005A  6E30               	movwf	_Serial_GData^0,c
  7996                           
  7997                           ;main.c: 822:             Serial_Count = 0;
  7998   00005C  0E00               	movlw	0
  7999   00005E  6E24               	movwf	(_Serial_Count+1)^0,c
  8000   000060  0E00               	movlw	0
  8001   000062  6E23               	movwf	_Serial_Count^0,c
  8002   000064                     
  8003                           ;main.c: 823:             Serial_Buffer[Serial_Count] = c;
  8004   000064  0E80               	movlw	low _Serial_Buffer
  8005   000066  2423               	addwf	_Serial_Count^0,w,c
  8006   000068  6ED9               	movwf	fsr2l,c
  8007   00006A  0E00               	movlw	high _Serial_Buffer
  8008   00006C  2024               	addwfc	(_Serial_Count+1)^0,w,c
  8009   00006E  6EDA               	movwf	fsr2h,c
  8010   000070  C036  FFDF         	movff	high_isr@c,indf2
  8011   000074                     i2l4547:
  8012                           
  8013                           ;main.c: 824:             Serial_Count++;
  8014   000074  4A23               	infsnz	_Serial_Count^0,f,c
  8015   000076  2A24               	incf	(_Serial_Count+1)^0,f,c
  8016                           
  8017                           ;main.c: 825:         } else if (Serial_GData == 1) {
  8018   000078  EFED  F000         	goto	i2l4615
  8019   00007C                     i2l4549:
  8020   00007C  0430               	decf	_Serial_GData^0,w,c
  8021   00007E  A4D8               	btfss	status,2,c
  8022   000080  EF44  F000         	goto	i2u314_41
  8023   000084  EF46  F000         	goto	i2u314_40
  8024   000088                     i2u314_41:
  8025   000088  EFED  F000         	goto	i2l4615
  8026   00008C                     i2u314_40:
  8027   00008C                     
  8028                           ;main.c: 826:             Serial_Buffer[Serial_Count] = c;
  8029   00008C  0E80               	movlw	low _Serial_Buffer
  8030   00008E  2423               	addwf	_Serial_Count^0,w,c
  8031   000090  6ED9               	movwf	fsr2l,c
  8032   000092  0E00               	movlw	high _Serial_Buffer
  8033   000094  2024               	addwfc	(_Serial_Count+1)^0,w,c
  8034   000096  6EDA               	movwf	fsr2h,c
  8035   000098  C036  FFDF         	movff	high_isr@c,indf2
  8036   00009C                     
  8037                           ;main.c: 828:             if (Serial_Count < 5) {
  8038   00009C  5024               	movf	(_Serial_Count+1)^0,w,c
  8039   00009E  E107               	bnz	i2u315_41
  8040   0000A0  0E05               	movlw	5
  8041   0000A2  5C23               	subwf	_Serial_Count^0,w,c
  8042   0000A4  B0D8               	btfsc	status,0,c
  8043   0000A6  EF57  F000         	goto	i2u315_41
  8044   0000AA  EF59  F000         	goto	i2u315_40
  8045   0000AE                     i2u315_41:
  8046   0000AE  EFDF  F000         	goto	i2l4609
  8047   0000B2                     i2u315_40:
  8048   0000B2                     
  8049                           ;main.c: 829:                 if (c == 0x5A) {
  8050   0000B2  0E5A               	movlw	90
  8051   0000B4  1836               	xorwf	high_isr@c^0,w,c
  8052   0000B6  A4D8               	btfss	status,2,c
  8053   0000B8  EF60  F000         	goto	i2u316_41
  8054   0000BC  EF62  F000         	goto	i2u316_40
  8055   0000C0                     i2u316_41:
  8056   0000C0  EF3A  F000         	goto	i2l4547
  8057   0000C4                     i2u316_40:
  8058   0000C4                     
  8059                           ;main.c: 830:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  8060   0000C4  0100               	movlb	0	; () banked
  8061   0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  8062   0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  8063   0000CA  6E35               	movwf	high_isr@Temp^0,c
  8064                           
  8065                           ;main.c: 832:                     if (Temp == Serial_Buffer[3]) {
  8066   0000CC  5035               	movf	high_isr@Temp^0,w,c
  8067   0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  8068   0000D0  A4D8               	btfss	status,2,c
  8069   0000D2  EF6D  F000         	goto	i2u317_41
  8070   0000D6  EF6F  F000         	goto	i2u317_40
  8071   0000DA                     i2u317_41:
  8072   0000DA  EFB2  F000         	goto	i2l4589
  8073   0000DE                     i2u317_40:
  8074   0000DE                     
  8075                           ; BSR set to: 0
  8076                           ;main.c: 833:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  8077   0000DE  502D               	movf	_Busy^0,w,c
  8078   0000E0  B4D8               	btfsc	status,2,c
  8079   0000E2  EF75  F000         	goto	i2u318_41
  8080   0000E6  EF77  F000         	goto	i2u318_40
  8081   0000EA                     i2u318_41:
  8082   0000EA  EF80  F000         	goto	i2l318
  8083   0000EE                     i2u318_40:
  8084   0000EE                     
  8085                           ; BSR set to: 0
  8086   0000EE  0EF5               	movlw	245
  8087   0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8088   0000F2  A4D8               	btfss	status,2,c
  8089   0000F4  EF7E  F000         	goto	i2u319_41
  8090   0000F8  EF80  F000         	goto	i2u319_40
  8091   0000FC                     i2u319_41:
  8092   0000FC  EF98  F000         	goto	i2l316
  8093   000100                     i2u319_40:
  8094   000100                     i2l318:
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;main.c: 834:                             INTCONbits.GIE = 0;
  8098   000100  9EF2               	bcf	242,7,c	;volatile
  8099   000102                     
  8100                           ; BSR set to: 0
  8101                           ;main.c: 835:                             for (i = 0; i < 5; i++) {
  8102   000102  0E00               	movlw	0
  8103   000104  6E37               	movwf	high_isr@i^0,c
  8104   000106                     i2l4569:
  8105                           
  8106                           ;main.c: 836:                                 Write1USART(Serial_Buffer[i]);
  8107   000106  0E80               	movlw	low _Serial_Buffer
  8108   000108  2437               	addwf	high_isr@i^0,w,c
  8109   00010A  6ED9               	movwf	fsr2l,c
  8110   00010C  6ADA               	clrf	fsr2h,c
  8111   00010E  0E00               	movlw	high _Serial_Buffer
  8112   000110  22DA               	addwfc	fsr2h,f,c
  8113   000112  50DF               	movf	indf2,w,c
  8114   000114  EC4A  F012         	call	i2_Write1USART
  8115   000118                     
  8116                           ;main.c: 837:                             }
  8117   000118  2A37               	incf	high_isr@i^0,f,c
  8118   00011A  0E04               	movlw	4
  8119   00011C  6437               	cpfsgt	high_isr@i^0,c
  8120   00011E  EF93  F000         	goto	i2u320_41
  8121   000122  EF95  F000         	goto	i2u320_40
  8122   000126                     i2u320_41:
  8123   000126  EF83  F000         	goto	i2l4569
  8124   00012A                     i2u320_40:
  8125   00012A                     
  8126                           ;main.c: 838:                             INTCONbits.GIE = 1;
  8127   00012A  8EF2               	bsf	242,7,c	;volatile
  8128                           
  8129                           ;main.c: 839:                         } else {
  8130   00012C  EFA8  F000         	goto	i2l4587
  8131   000130                     i2l316:
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;main.c: 840:                             INTCONbits.GIE = 0;
  8135   000130  9EF2               	bcf	242,7,c	;volatile
  8136   000132                     
  8137                           ; BSR set to: 0
  8138                           ;main.c: 841:                             for (i = 0; i < 5; i++) {
  8139   000132  0E00               	movlw	0
  8140   000134  6E37               	movwf	high_isr@i^0,c
  8141   000136                     i2l4581:
  8142                           
  8143                           ;main.c: 842:                                 Write1USART(0x16);
  8144   000136  0E16               	movlw	22
  8145   000138  EC4A  F012         	call	i2_Write1USART
  8146   00013C                     
  8147                           ;main.c: 843:                             }
  8148   00013C  2A37               	incf	high_isr@i^0,f,c
  8149   00013E  0E04               	movlw	4
  8150   000140  6437               	cpfsgt	high_isr@i^0,c
  8151   000142  EFA5  F000         	goto	i2u321_41
  8152   000146  EFA7  F000         	goto	i2u321_40
  8153   00014A                     i2u321_41:
  8154   00014A  EF9B  F000         	goto	i2l4581
  8155   00014E                     i2u321_40:
  8156   00014E                     
  8157                           ;main.c: 844:                             INTCONbits.GIE = 1;
  8158   00014E  8EF2               	bsf	242,7,c	;volatile
  8159   000150                     i2l4587:
  8160                           
  8161                           ;main.c: 847:                         Serial_Flag = 1;
  8162   000150  0E01               	movlw	1
  8163   000152  6E31               	movwf	_Serial_Flag^0,c
  8164                           
  8165                           ;main.c: 848:                         Serial_Count = 0;
  8166   000154  0E00               	movlw	0
  8167   000156  6E24               	movwf	(_Serial_Count+1)^0,c
  8168   000158  0E00               	movlw	0
  8169   00015A  6E23               	movwf	_Serial_Count^0,c
  8170                           
  8171                           ;main.c: 849:                         OpMode = AUTO_MODE;
  8172   00015C  0E02               	movlw	2
  8173   00015E  6E2A               	movwf	_OpMode^0,c	;volatile
  8174                           
  8175                           ;main.c: 851:                     } else {
  8176   000160  EFC8  F000         	goto	i2l4603
  8177   000164                     i2l4589:
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;main.c: 852:                         Serial_Flag = 0;
  8181   000164  0E00               	movlw	0
  8182   000166  6E31               	movwf	_Serial_Flag^0,c
  8183                           
  8184                           ;main.c: 853:                         Serial_Count = 0;
  8185   000168  0E00               	movlw	0
  8186   00016A  6E24               	movwf	(_Serial_Count+1)^0,c
  8187   00016C  0E00               	movlw	0
  8188   00016E  6E23               	movwf	_Serial_Count^0,c
  8189   000170                     
  8190                           ; BSR set to: 0
  8191                           ;main.c: 855:                         INTCONbits.GIE = 0;
  8192   000170  9EF2               	bcf	242,7,c	;volatile
  8193                           
  8194                           ;main.c: 856:                         for (i = 0; i < 5; i++) {
  8195   000172  0E00               	movlw	0
  8196   000174  6E37               	movwf	high_isr@i^0,c
  8197   000176                     i2l4597:
  8198                           
  8199                           ;main.c: 857:                             Write1USART(0x15);
  8200   000176  0E15               	movlw	21
  8201   000178  EC4A  F012         	call	i2_Write1USART
  8202   00017C                     
  8203                           ;main.c: 858:                         }
  8204   00017C  2A37               	incf	high_isr@i^0,f,c
  8205   00017E  0E04               	movlw	4
  8206   000180  6437               	cpfsgt	high_isr@i^0,c
  8207   000182  EFC5  F000         	goto	i2u322_41
  8208   000186  EFC7  F000         	goto	i2u322_40
  8209   00018A                     i2u322_41:
  8210   00018A  EFBB  F000         	goto	i2l4597
  8211   00018E                     i2u322_40:
  8212   00018E                     
  8213                           ;main.c: 859:                         INTCONbits.GIE = 1;
  8214   00018E  8EF2               	bsf	242,7,c	;volatile
  8215   000190                     i2l4603:
  8216                           
  8217                           ;main.c: 862:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  8218   000190  0EF5               	movlw	245
  8219   000192  0100               	movlb	0	; () banked
  8220   000194  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8221   000196  A4D8               	btfss	status,2,c
  8222   000198  EFD0  F000         	goto	i2u323_41
  8223   00019C  EFD2  F000         	goto	i2u323_40
  8224   0001A0                     i2u323_41:
  8225   0001A0  EF3A  F000         	goto	i2l4547
  8226   0001A4                     i2u323_40:
  8227   0001A4                     
  8228                           ; BSR set to: 0
  8229   0001A4  0E02               	movlw	2
  8230   0001A6  182A               	xorwf	_OpMode^0,w,c	;volatile
  8231   0001A8  A4D8               	btfss	status,2,c
  8232   0001AA  EFD9  F000         	goto	i2u324_41
  8233   0001AE  EFDB  F000         	goto	i2u324_40
  8234   0001B2                     i2u324_41:
  8235   0001B2  EF3A  F000         	goto	i2l4547
  8236   0001B6                     i2u324_40:
  8237   0001B6                     
  8238                           ; BSR set to: 0
  8239                           ;main.c: 863:                         Stop = 1;
  8240   0001B6  0E01               	movlw	1
  8241   0001B8  6E2F               	movwf	_Stop^0,c
  8242   0001BA  EF3A  F000         	goto	i2l4547
  8243   0001BE                     i2l4609:
  8244                           
  8245                           ;main.c: 867:                 Serial_GData = 0;
  8246   0001BE  0E00               	movlw	0
  8247   0001C0  6E30               	movwf	_Serial_GData^0,c
  8248   0001C2  EF3A  F000         	goto	i2l4547
  8249   0001C6                     i2l307:
  8250                           
  8251                           ;main.c: 873:         if (RCSTA1bits.OERR == 1) {
  8252   0001C6  A2AC               	btfss	172,1,c	;volatile
  8253   0001C8  EFE8  F000         	goto	i2u325_41
  8254   0001CC  EFEA  F000         	goto	i2u325_40
  8255   0001D0                     i2u325_41:
  8256   0001D0  EFED  F000         	goto	i2l4615
  8257   0001D4                     i2u325_40:
  8258   0001D4                     
  8259                           ;main.c: 874:             RCSTA1bits.OERR = 0;
  8260   0001D4  92AC               	bcf	172,1,c	;volatile
  8261                           
  8262                           ;main.c: 875:             RCSTA1bits.CREN = 0;
  8263   0001D6  98AC               	bcf	172,4,c	;volatile
  8264                           
  8265                           ;main.c: 876:             RCSTA1bits.CREN = 1;
  8266   0001D8  88AC               	bsf	172,4,c	;volatile
  8267   0001DA                     i2l4615:
  8268                           
  8269                           ;main.c: 880:     if (TMR1IF_triggered == 1) {
  8270   0001DA  0425               	decf	_TMR1IF_triggered^0,w,c	;volatile
  8271   0001DC  A4D8               	btfss	status,2,c
  8272   0001DE  EFF3  F000         	goto	i2u326_41
  8273   0001E2  EFF5  F000         	goto	i2u326_40
  8274   0001E6                     i2u326_41:
  8275   0001E6  EF3B  F001         	goto	i2l4633
  8276   0001EA                     i2u326_40:
  8277   0001EA                     
  8278                           ;main.c: 881:         if (errorcounter > 0) {
  8279   0001EA  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  8280   0001EC  EF02  F001         	goto	i2u327_41
  8281   0001F0  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  8282   0001F2  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  8283   0001F4  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  8284   0001F6  E108               	bnz	i2u327_40
  8285   0001F8  0452               	decf	_errorcounter^0,w,c	;volatile
  8286   0001FA  A0D8               	btfss	status,0,c
  8287   0001FC  EF02  F001         	goto	i2u327_41
  8288   000200  EF04  F001         	goto	i2u327_40
  8289   000204                     i2u327_41:
  8290   000204  EF0E  F001         	goto	i2l4621
  8291   000208                     i2u327_40:
  8292   000208                     
  8293                           ;main.c: 882:             errorcounter--;
  8294   000208  0EFF               	movlw	255
  8295   00020A  2652               	addwf	_errorcounter^0,f,c	;volatile
  8296   00020C  0EFF               	movlw	255
  8297   00020E  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  8298   000210  0EFF               	movlw	255
  8299   000212  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  8300   000214  0EFF               	movlw	255
  8301   000216  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  8302                           
  8303                           ;main.c: 883:         } else {
  8304   000218  EF16  F001         	goto	i2l4623
  8305   00021C                     i2l4621:
  8306                           
  8307                           ;main.c: 884:             errorcounter = 0;
  8308   00021C  0E00               	movlw	0
  8309   00021E  6E52               	movwf	_errorcounter^0,c	;volatile
  8310   000220  0E00               	movlw	0
  8311   000222  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  8312   000224  0E00               	movlw	0
  8313   000226  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  8314   000228  0E00               	movlw	0
  8315   00022A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  8316   00022C                     i2l4623:
  8317                           
  8318                           ;main.c: 887:         if (LowPowerCounter > 0) {
  8319   00022C  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  8320   00022E  EF23  F001         	goto	i2u328_41
  8321   000232  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  8322   000234  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  8323   000236  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  8324   000238  E108               	bnz	i2u328_40
  8325   00023A  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  8326   00023C  A0D8               	btfss	status,0,c
  8327   00023E  EF23  F001         	goto	i2u328_41
  8328   000242  EF25  F001         	goto	i2u328_40
  8329   000246                     i2u328_41:
  8330   000246  EF2F  F001         	goto	i2l4627
  8331   00024A                     i2u328_40:
  8332   00024A                     
  8333                           ;main.c: 888:             LowPowerCounter--;
  8334   00024A  0EFF               	movlw	255
  8335   00024C  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  8336   00024E  0EFF               	movlw	255
  8337   000250  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  8338   000252  0EFF               	movlw	255
  8339   000254  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  8340   000256  0EFF               	movlw	255
  8341   000258  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  8342                           
  8343                           ;main.c: 889:         } else {
  8344   00025A  EF39  F001         	goto	i2l4631
  8345   00025E                     i2l4627:
  8346                           
  8347                           ;main.c: 890:             LowPowerCounter = 20;
  8348   00025E  0E14               	movlw	20
  8349   000260  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  8350   000262  0E00               	movlw	0
  8351   000264  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  8352   000266  0E00               	movlw	0
  8353   000268  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  8354   00026A  0E00               	movlw	0
  8355   00026C  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  8356   00026E                     
  8357                           ;main.c: 891:             Low_Power_Indicator();
  8358   00026E  EC95  F011         	call	_Low_Power_Indicator	;wreg free
  8359   000272                     i2l4631:
  8360                           
  8361                           ;main.c: 894:         TMR1IF_triggered = 0;
  8362   000272  0E00               	movlw	0
  8363   000274  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  8364   000276                     i2l4633:
  8365                           
  8366                           ;main.c: 897:     if (TMR1IF) {
  8367   000276  A09E               	btfss	3998,0,c	;volatile
  8368   000278  EF40  F001         	goto	i2u329_41
  8369   00027C  EF42  F001         	goto	i2u329_40
  8370   000280                     i2u329_41:
  8371   000280  EF49  F001         	goto	i2l4639
  8372   000284                     i2u329_40:
  8373   000284                     
  8374                           ;main.c: 898:         TMR1 = 0x9E57;
  8375   000284  0E9E               	movlw	158
  8376   000286  6ECF               	movwf	207,c	;volatile
  8377   000288  0E57               	movlw	87
  8378   00028A  6ECE               	movwf	206,c	;volatile
  8379   00028C                     
  8380                           ;main.c: 899:         TMR1IF = 0;
  8381   00028C  909E               	bcf	3998,0,c	;volatile
  8382                           
  8383                           ;main.c: 900:         TMR1IF_triggered = 1;
  8384   00028E  0E01               	movlw	1
  8385   000290  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  8386   000292                     i2l4639:
  8387                           
  8388                           ;main.c: 904:     if(INTCON3bits.INT2F == 1) {
  8389   000292  A2F0               	btfss	240,1,c	;volatile
  8390   000294  EF4E  F001         	goto	i2u330_41
  8391   000298  EF50  F001         	goto	i2u330_40
  8392   00029C                     i2u330_41:
  8393   00029C  EF7B  F001         	goto	i2l341
  8394   0002A0                     i2u330_40:
  8395   0002A0                     
  8396                           ;main.c: 906:       if (dispense == 0 && PORTBbits.RB4 != 0)
  8397   0002A0  5001               	movf	_dispense^0,w,c
  8398   0002A2  1002               	iorwf	(_dispense+1)^0,w,c
  8399   0002A4  A4D8               	btfss	status,2,c
  8400   0002A6  EF57  F001         	goto	i2u331_41
  8401   0002AA  EF59  F001         	goto	i2u331_40
  8402   0002AE                     i2u331_41:
  8403   0002AE  EF66  F001         	goto	i2l4647
  8404   0002B2                     i2u331_40:
  8405   0002B2  A881               	btfss	129,4,c	;volatile
  8406   0002B4  EF5E  F001         	goto	i2u332_41
  8407   0002B8  EF60  F001         	goto	i2u332_40
  8408   0002BC                     i2u332_41:
  8409   0002BC  EF66  F001         	goto	i2l4647
  8410   0002C0                     i2u332_40:
  8411   0002C0                     
  8412                           ;main.c: 907:       {;main.c: 909:         dispense = 1;
  8413   0002C0  0E00               	movlw	0
  8414   0002C2  6E02               	movwf	(_dispense+1)^0,c
  8415   0002C4  0E01               	movlw	1
  8416   0002C6  6E01               	movwf	_dispense^0,c
  8417                           
  8418                           ;main.c: 910:       }
  8419   0002C8  EF7A  F001         	goto	i2l4653
  8420   0002CC                     i2l4647:
  8421   0002CC  0401               	decf	_dispense^0,w,c
  8422   0002CE  1002               	iorwf	(_dispense+1)^0,w,c
  8423   0002D0  A4D8               	btfss	status,2,c
  8424   0002D2  EF6D  F001         	goto	i2u333_41
  8425   0002D6  EF6F  F001         	goto	i2u333_40
  8426   0002DA                     i2u333_41:
  8427   0002DA  EF7A  F001         	goto	i2l4653
  8428   0002DE                     i2u333_40:
  8429   0002DE  A881               	btfss	129,4,c	;volatile
  8430   0002E0  EF74  F001         	goto	i2u334_41
  8431   0002E4  EF76  F001         	goto	i2u334_40
  8432   0002E8                     i2u334_41:
  8433   0002E8  EF7A  F001         	goto	i2l4653
  8434   0002EC                     i2u334_40:
  8435   0002EC                     
  8436                           ;main.c: 912:       {;main.c: 914:         dispense = 0;
  8437   0002EC  0E00               	movlw	0
  8438   0002EE  6E02               	movwf	(_dispense+1)^0,c
  8439   0002F0  0E00               	movlw	0
  8440   0002F2  6E01               	movwf	_dispense^0,c
  8441   0002F4                     i2l4653:
  8442                           
  8443                           ;main.c: 917:       INTCON3bits.INT2F = 0;
  8444   0002F4  92F0               	bcf	240,1,c	;volatile
  8445   0002F6                     i2l341:
  8446   0002F6  C034  FFDA         	movff	??_high_isr+1,fsr2h
  8447   0002FA  C033  FFD9         	movff	??_high_isr,fsr2l
  8448   0002FE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8449   000300  0011               	retfie		f
  8450   000302                     __end_of_high_isr:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function i2_Write1USART *****************
  8454 ;; Defined at:
  8455 ;;		line 47 in file "usart.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  data            1    wreg     unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  data            1    0[COMRAM] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		wreg
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;Total ram usage:        1 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_high_isr
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text43
  8483   002494                     __ptext43:
  8484                           	callstack 0
  8485   002494                     i2_Write1USART:
  8486                           	callstack 25
  8487                           
  8488                           ;incstack = 0
  8489                           ;i2Write1USART@data stored from wreg
  8490   002494  6E32               	movwf	i2Write1USART@data^0,c
  8491   002496                     
  8492                           ;usart.c: 48:     TXREG1 = data;
  8493   002496  C032  FFAE         	movff	i2Write1USART@data,4014	;volatile
  8494   00249A                     i2l626:
  8495   00249A  A2AD               	btfss	173,1,c	;volatile
  8496   00249C  EF52  F012         	goto	i2u255_41
  8497   0024A0  EF54  F012         	goto	i2u255_40
  8498   0024A4                     i2u255_41:
  8499   0024A4  EF4D  F012         	goto	i2l626
  8500   0024A8                     i2u255_40:
  8501   0024A8  0012               	return		;funcret
  8502   0024AA                     __end_ofi2_Write1USART:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function _Read1USART *****************
  8506 ;; Defined at:
  8507 ;;		line 56 in file "usart.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  result          1    0[COMRAM] unsigned char 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      unsigned char 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;Total ram usage:        1 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_high_isr
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text44
  8535   002406                     __ptext44:
  8536                           	callstack 0
  8537   002406                     _Read1USART:
  8538                           	callstack 25
  8539   002406                     
  8540                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  8541   002406  A2AC               	btfss	172,1,c	;volatile
  8542   002408  EF08  F012         	goto	i2u252_41
  8543   00240C  EF0A  F012         	goto	i2u252_40
  8544   002410                     i2u252_41:
  8545   002410  EF12  F012         	goto	i2l632
  8546   002414                     i2u252_40:
  8547   002414                     
  8548                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  8549   002414  98AC               	bcf	172,4,c	;volatile
  8550                           
  8551                           ;usart.c: 61:         result = RCREG1;
  8552   002416  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8553                           
  8554                           ;usart.c: 62:         result = RCREG1;
  8555   00241A  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8556                           
  8557                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  8558   00241E  88AC               	bsf	172,4,c	;volatile
  8559                           
  8560                           ;usart.c: 64:     } else {
  8561   002420  EF14  F012         	goto	i2l3931
  8562   002424                     i2l632:
  8563                           
  8564                           ;usart.c: 65:         result = RCREG1;
  8565   002424  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8566   002428                     i2l3931:
  8567                           
  8568                           ;usart.c: 68:     return result;
  8569   002428  5032               	movf	Read1USART@result^0,w,c
  8570   00242A  0012               	return		;funcret
  8571   00242C                     __end_of_Read1USART:
  8572                           	callstack 0
  8573                           
  8574 ;; *************** function _Low_Power_Indicator *****************
  8575 ;; Defined at:
  8576 ;;		line 1315 in file "main.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_high_isr
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text45
  8604   00232A                     __ptext45:
  8605                           	callstack 0
  8606   00232A                     _Low_Power_Indicator:
  8607                           	callstack 25
  8608   00232A                     
  8609                           ;main.c: 1317:     if (VOLTAGE <= 0x0366)
  8610   00232A  0E67               	movlw	103
  8611   00232C  5C09               	subwf	_VOLTAGE^0,w,c
  8612   00232E  0E03               	movlw	3
  8613   002330  580A               	subwfb	(_VOLTAGE+1)^0,w,c
  8614   002332  B0D8               	btfsc	status,0,c
  8615   002334  EF9E  F011         	goto	i2u253_41
  8616   002338  EFA0  F011         	goto	i2u253_40
  8617   00233C                     i2u253_41:
  8618   00233C  EFA3  F011         	goto	i2l3939
  8619   002340                     i2u253_40:
  8620   002340                     
  8621                           ;main.c: 1318:     {;main.c: 1320:         LATDbits.LATD1 = 1;
  8622   002340  828C               	bsf	140,1,c	;volatile
  8623                           
  8624                           ;main.c: 1322:     } else if (VOLTAGE >= 0x03C0)
  8625   002342  EFAF  F011         	goto	i2l456
  8626   002346                     i2l3939:
  8627   002346  0EC0               	movlw	192
  8628   002348  5C09               	subwf	_VOLTAGE^0,w,c
  8629   00234A  0E03               	movlw	3
  8630   00234C  580A               	subwfb	(_VOLTAGE+1)^0,w,c
  8631   00234E  A0D8               	btfss	status,0,c
  8632   002350  EFAC  F011         	goto	i2u254_41
  8633   002354  EFAE  F011         	goto	i2u254_40
  8634   002358                     i2u254_41:
  8635   002358  EFAF  F011         	goto	i2l456
  8636   00235C                     i2u254_40:
  8637   00235C                     
  8638                           ;main.c: 1323:     {;main.c: 1324:         LATDbits.LATD1 = 0;
  8639   00235C  928C               	bcf	140,1,c	;volatile
  8640   00235E                     i2l456:
  8641   00235E  0012               	return		;funcret
  8642   002360                     __end_of_Low_Power_Indicator:
  8643                           	callstack 0
  8644   000000                     
  8645                           	psect	rparam
  8646   000000                     
  8647                           	psect	temp
  8648   000059                     btemp:
  8649                           	callstack 0
  8650   000059                     	ds	1
  8651   000000                     int$flags	set	btemp
  8652   000000                     wtemp8	set	btemp+1
  8653   000000                     ttemp5	set	btemp+1
  8654   000000                     ttemp6	set	btemp+4
  8655   000000                     ttemp7	set	btemp+8
  8656                           
  8657                           	psect	config
  8658                           
  8659                           ;Config register CONFIG1L @ 0x7FF8
  8660                           ;	Watchdog Timer Enable bit
  8661                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  8662                           ;	PLL Prescaler Selection bits
  8663                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8664                           ;	Stack Overflow/Underflow Reset Enable bit
  8665                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  8666                           ;	Extended Instruction Set Enable bit
  8667                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8668                           ;	Background Debugger Enable bit
  8669                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  8670   007FF8                     	org	32760
  8671   007FF8  AE                 	db	174
  8672                           
  8673                           ;Config register CONFIG1H @ 0x7FF9
  8674                           ;	CPU System Clock Postscaler
  8675                           ;	CPUDIV = OSC1, No CPU system clock divide
  8676                           ;	Code Protection bit
  8677                           ;	CP0 = OFF, Program memory is not code-protected
  8678   007FF9                     	org	32761
  8679   007FF9  F7                 	db	247
  8680                           
  8681                           ;Config register CONFIG2L @ 0x7FFA
  8682                           ;	Oscillator Selection bits
  8683                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  8684                           ;	Fail-Safe Clock Monitor Enable bit
  8685                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8686                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  8687                           ;	IESO = OFF, Two-Speed Start-up disabled
  8688   007FFA                     	org	32762
  8689   007FFA  03                 	db	3
  8690                           
  8691                           ;Config register CONFIG2H @ 0x7FFB
  8692                           ;	Watchdog Timer Postscaler Select bits
  8693                           ;	WDTPS = 2048, 1:2048
  8694   007FFB                     	org	32763
  8695   007FFB  FB                 	db	251
  8696                           
  8697                           ;Config register CONFIG3L @ 0x7FFC
  8698                           ;	unspecified, using default values
  8699   007FFC                     	org	32764
  8700   007FFC  F8                 	db	248
  8701                           
  8702                           ;Config register CONFIG3H @ 0x7FFD
  8703                           ;	ECCP2 MUX bit
  8704                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  8705                           ;	MSSP Address Masking Mode Select bit
  8706                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  8707   007FFD                     	org	32765
  8708   007FFD  F1                 	db	241
  8709                           tosu	equ	0xFFF
  8710                           tosh	equ	0xFFE
  8711                           tosl	equ	0xFFD
  8712                           stkptr	equ	0xFFC
  8713                           pclatu	equ	0xFFB
  8714                           pclath	equ	0xFFA
  8715                           pcl	equ	0xFF9
  8716                           tblptru	equ	0xFF8
  8717                           tblptrh	equ	0xFF7
  8718                           tblptrl	equ	0xFF6
  8719                           tablat	equ	0xFF5
  8720                           prodh	equ	0xFF4
  8721                           prodl	equ	0xFF3
  8722                           indf0	equ	0xFEF
  8723                           postinc0	equ	0xFEE
  8724                           postdec0	equ	0xFED
  8725                           preinc0	equ	0xFEC
  8726                           plusw0	equ	0xFEB
  8727                           fsr0h	equ	0xFEA
  8728                           fsr0l	equ	0xFE9
  8729                           wreg	equ	0xFE8
  8730                           indf1	equ	0xFE7
  8731                           postinc1	equ	0xFE6
  8732                           postdec1	equ	0xFE5
  8733                           preinc1	equ	0xFE4
  8734                           plusw1	equ	0xFE3
  8735                           fsr1h	equ	0xFE2
  8736                           fsr1l	equ	0xFE1
  8737                           bsr	equ	0xFE0
  8738                           indf2	equ	0xFDF
  8739                           postinc2	equ	0xFDE
  8740                           postdec2	equ	0xFDD
  8741                           preinc2	equ	0xFDC
  8742                           plusw2	equ	0xFDB
  8743                           fsr2h	equ	0xFDA
  8744                           fsr2l	equ	0xFD9
  8745                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         99
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      88
    BANK0           160      6      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM_Selection
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _PWM_Selection->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_PWM_Selection

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30481
                                              4 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                      _PWM_Selection
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                            _pwm_set
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    2446
                                             20 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      65
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              4     2      2     120
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     227
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    3998
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _PWM_Selection                                        6     4      2    4162
                                             26 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    3998
                                             20 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      31
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     369
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  4     4      0    6182
                                             23 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    3622
                                             14 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2786
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     319
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
     _delay_1ms
     _readWeighingData
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SErr
     _delay_1ms
   _PWM_Selection
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _ToggleVIB_Mode
     _write_i2c
   _Write1USART
   _WriteSTLED316SData
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _pwm_set
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      56        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      38       5       35.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      58       1       93.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRllllll     2B      0       0      55        0.0%
BITBIGSFRhlhl       1C      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhl        C      0       0      45        0.0%
BITBIGSFRlhhhh       A      0       0      44        0.0%
BITBIGSFRllllh       7      0       0      50        0.0%
BITBIGSFRhlllhh      5      0       0      42        0.0%
BITBIGSFRlllllh      4      0       0      51        0.0%
BITBIGSFRlhl         4      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRhllll       3      0       0      43        0.0%
BITBIGSFRllhh        2      0       0      47        0.0%
BITBIGSFRlllllh      2      0       0      53        0.0%
BITBIGSFRhllhh       2      0       0      40        0.0%
BITBIGSFRllhl        2      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      52        0.0%
BITBIGSFRhlhh        1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      49        0.0%
BITBIGSFRhllhl       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      30        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 06 16:23:48 2023

                             _i 000D                   ??_i2c_Address 003A                    ___awdiv@sign 003D  
                 ?_InitSTLED316 0032                     i2c_Read@ack 003B                             l210 0602  
                           l233 08F8                             l209 05FC                             l250 0B9C  
                           l234 0970                             l411 1530                             l251 0B8E  
                           l235 0962                             l244 0B5E                             l421 169A  
                           l405 14DA                             l254 0BDA                             l238 0A68  
                           l351 244E                             l503 1CC8                             l431 22B8  
                           l255 0BCC                             l344 23A6                             l440 211E  
                           l408 1524                             l441 2124                             l361 1918  
                           l450 227E                             l514 1A0C                             l426 1700  
                           l418 1668                             l602 20CA                             l290 0FCC  
                           l347 23B8                             l523 1A18                             l187 238C  
                           l275 0E04                             l436 22F2                             l444 2466  
                           l268 0D3C                             l541 1BFC                             l533 1BF0  
                           l509 1EE4                             l461 1B0C                             l285 0F24  
                           l374 1126                             l366 2240                             l447 225A  
                           l623 23DE                             l199 059A                             l384 1292  
                           l528 2172                             l481 1FAE                             l369 10F4  
                           l473 1F70                             l626 2484                             l394 1452  
                           l466 1B14                             l570 247C                             l484 1FC6  
                           l388 12F0                             l629 2492                             l582 24FE  
                           l487 1FF0                             l479 1F78                             l591 24BC  
                           l576 2404                             l585 2506                             l665 2052  
                           l594 231E                             l691 251E                             l931 1D8C  
                           l579 250E                             l667 2060                             l595 2320  
                           l588 24D6                             l668 2062                             l596 2328  
                           l685 24CA                             l694 24EC                             l599 21BC  
                           l688 2516                             l944 1E3C                             l697 24F6  
                           l779 180C                             _GIE 007F97                             _PR2 000FCB  
                           _PR4 000F77                             _NUM 0013                    ___awmod@sign 003D  
                           wreg 000FE8                      _TXSTA1bits 000FAD                   ??_i2c_Restart 0039  
                          l3101 1C3A                            l3031 22BA                            l3103 1C42  
                          l3111 1C5A                            l3041 22D6                            l3105 1C4A  
                          l3113 1CC6                            l3201 1CE8                            l3043 238E  
                          l3107 1C52                            l3211 1D1C                            l3203 1CF6  
                          l3045 2392                            l3301 2242                            l3141 2510  
                          l3061 1FB0                            l3029 2480                            l3037 22C2  
                          l3221 1D56                            l3213 1D24                            l3205 1CFE  
                          l3047 23A0                            l3303 224C                            l3143 2514  
                          l3311 242C                            l3071 1FC8                            l3055 1F7A  
                          l3039 22D2                            l3231 1D7C                            l3223 1D5E  
                          l3215 1D2C                            l3207 1D02                            l3305 2258  
                          l3145 2518                            l3313 243A                            l3081 1FDE  
                          l3057 1F98                            l3049 1F74                            l3401 1982  
                          l3233 1D84                            l3225 1D60                            l3217 1D3A  
                          l3209 1D0A                            l3241 1DA0                            l3307 2268  
                          l3147 251C                            l3323 24E4                            l3083 1FE0  
                          l3067 1FB4                            l3059 1FA8                            l3331 1B20  
                          l3411 1A10                            l3403 1992                            l3091 1C12  
                          l3227 1D66                            l3219 1D40                            l3251 1DD4  
                          l3243 1DA8                            l3325 24E8                            l3077 1FCC  
                          l3069 1FB6                            l3341 1B5E                            l3333 1B22  
                          l3413 1A16                            l3405 19A2                            l3093 1C1A  
                          l3085 1BFE                            l3229 1D6C                            l3261 1E10  
                          l3253 1DDC                            l3245 1DAC                            l3237 1D8E  
                          l3501 1F1C                            l5021 23F6                            l5101 2318  
                          l3319 2446                            l3079 1FCE                            l3343 1B6E  
                          l3335 1B2E                            l3351 1B9E                            l3327 1B18  
                          l3095 1C22                            l3087 1C02                            l3263 1E16  
                          l3255 1DE4                            l3247 1DBA                            l3239 1D92  
                          l3511 1F44                            l3503 1F1E                            l5023 2508  
                          l5031 24CE                            l5111 1A1E                            l5103 2064  
                          l3361 24EE                            l3353 1BF4                            l3345 1B7E  
                          l3337 1B3E                            l3329 1B1A                            l3409 19B2  
                          l3097 1C2A                            l3089 1C0A                            l3193 1CCA  
                          l3257 1DF2                            l3265 1E1C                            l3249 1DC2  
                          l3281 1EA4                            l3273 1E3E                            l3513 1F4C  
                          l3505 1F26                            l5017 23E0                            l5041 24B8  
                          l5025 250C                            l5033 24D2                            l5121 1A52  
                          l5113 1A26                            l3441 200E                            l3521 24C2  
                          l3433 2360                            l5105 20C2                            l5201 033C  
                          l3363 24F2                            l3355 1BFA                            l3347 1B8E  
                          l3339 1B4E                            l3099 1C32                            l3195 1CCE  
                          l3267 1E2C                            l3259 1E08                            l3291 1ED2  
                          l3283 1EB4                            l3275 1E76                            l3515 1F4E  
                          l3507 1F28                            l5051 1728                            l5043 1702  
                          l5019 23E0                            l5035 24AC                            l5027 2500  
                          l5131 1A80                            l5123 1A54                            l5115 1A28  
                          l3451 2018                            l3443 2010                            l3435 1FF2  
                          l3523 24C4                            l3531 23D6                            l5211 0352  
                          l5203 0340                            l3365 24F4                            l3381 2120  
                          l3197 1CDC                            l3269 1E34                            l3293 1ED8  
                          l3285 1EC4                            l3277 1E7E                            l3701 1174  
                          l3517 1F6E                            l3509 1F42                            l3533 2450  
                          l5061 1770                            l5053 1736                            l5045 1706  
                          l5037 24B0                            l5029 2504                            l5141 1AC8  
                          l5133 1A9C                            l5125 1A70                            l5117 1A44  
                          l5109 1A1A                            l3525 2468                            l3461 2022  
                          l3453 201A                            l3445 2012                            l3437 1FF6  
                          l5301 052A                            l5221 036A                            l5213 0354  
                          l5205 0344                            l3391 1932                            l3383 191C  
                          l3375 20EC                            l3367 20CC                            l3199 1CE4  
                          l3295 1EDA                            l3287 1ECA                            l3279 1E80  
                          l3711 11B6                            l3703 118A                            l3535 245C  
                          l3551 1814                            l5071 17BA                            l5063 1778  
                          l5055 1746                            l5047 1714                            l5039 24B4  
                          l5135 1AA2                            l5127 1A76                            l5119 1A4A  
                          l5151 2204                            l3527 246C                            l3471 202C  
                          l3463 2024                            l3455 201C                            l3447 2014  
                          l3439 200C                            l3519 24BE                            l6031 08AC  
                          l5311 059C                            l5303 0536                            l5231 0382  
                          l5223 036C                            l5215 0356                            l5207 034C  
                          l3393 1942                            l3385 191E                            l3377 20FE  
                          l3369 20E2                            l3297 1EDC                            l3289 1ECC  
                          l3801 1476                            l3721 11F2                            l3713 11C6  
                          l3705 1190                            l3537 245E                            l3561 1864  
                          l3553 182C                            l5081 17EC                            l5073 17CA  
                          l5065 1784                            l5057 174A                            l5049 1724  
                          l6041 1AE6                            l5137 1AAA                            l5129 1A7E  
                          l5145 1ACE                            l5161 223E                            l5153 2216  
                          l3481 2046                            l3473 202E                            l3465 2026  
                          l3457 201E                            l3449 2016                            l3529 23BA  
                          l6033 0DCE                            l5401 07EC                            l5321 05D2  
                          l5313 05B8                            l5305 0542                            l5241 03C0  
                          l5233 039C                            l5225 036E                            l5217 0366  
                          l5209 0350                            l3395 1952                            l3387 1924  
                          l3379 2102                            l6043 1C70                            l3299 1EE2  
                          l3811 14A8                            l3803 1488                            l3731 1248  
                          l3723 1204                            l3715 11D2                            l3707 1194  
                          l3539 2460                            l3571 18A6                            l3563 1868  
                          l3555 183C                            l3547 180E                            l5083 17FC  
                          l5075 17CC                            l5067 1792                            l5059 175A  
                          l5139 1AAC                            l5155 221E                            l3651 2132  
                          l3491 2050                            l3483 2048                            l3475 2030  
                          l3467 2028                            l3459 2020                            l5091 24FC  
                          l6035 0F9E                            l5411 0840                            l5403 07FE  
                          l5331 0620                            l5323 05D4                            l5315 05BA  
                          l6027 0564                            l5251 03F4                            l5243 03C4  
                          l5235 03A0                            l5227 0370                            l5219 0368  
                          l5171 0316                            l5163 0306                            l6045 19C6  
                          l3397 1962                            l3389 1926                            l3901 16BE  
                          l3821 14DC                            l3805 1498                            l3813 14BE  
                          l3741 1294                            l3733 124E                            l3725 1214  
                          l3717 11E8                            l3709 11A6                            l3493 1EE8  
                          l3581 18E8                            l3573 18BC                            l3565 187A  
                          l3557 1848                            l3549 1810                            l5077 17D6  
                          l5069 179C                            l5157 2222                            l3661 2168  
                          l3653 213A                            l3645 2128                            l3485 204A  
                          l3477 2032                            l3469 202A                            l5093 22F6  
                          l6037 1044                            l5501 0BAA                            l5421 087C  
                          l5413 0842                            l5405 0810                            l6029 0704  
                          l5341 065C                            l5333 0622                            l5325 05EE  
                          l5317 05BE                            l5309 054E                            l5261 0434  
                          l5245 03D4                            l5253 03F6                            l5237 03A2  
                          l5229 0372                            l5181 0326                            l5173 031A  
                          l5165 0308                            l6047 1BB2                            l3399 1972  
                          l3903 16CE                            l3911 16F4                            l3831 1508  
                          l3823 14E4                            l3815 14C6                            l3807 149A  
                          l3751 12DE                            l3743 12A0                            l3735 125E  
                          l3727 1220                            l3719 11EE                            l3671 10D8  
                          l3495 1EEC                            l3583 18F4                            l3575 18C2  
                          l3567 188A                            l3559 185E                            l5079 17DC  
                          l5087 2174                            l5159 2224                            l3663 2170  
                          l3655 214A                            l3647 212A                            l3487 204C  
                          l3479 2044                            l5095 22FA                            l6039 10A0  
                          l5511 0C18                            l5503 0BC0                            l5423 0888  
                          l5431 08D2                            l5415 085E                            l5407 0824  
                          l5351 06A8                            l5343 066E                            l5335 0626  
                          l5327 05F0                            l5319 05CE                            l5271 0472  
                          l5263 043C                            l5255 040E                            l5247 03D8  
                          l5239 03BE                            l5191 0330                            l5183 0328  
                          l5175 031E                            l5167 030C                            l3913 16FC  
                          l3905 16D0                            l3841 1536                            l3833 150A  
                          l3825 14EA                            l3817 14CE                            l3809 14A6  
                          l3753 12F2                            l3761 133C                            l3745 12A2  
                          l3737 126E                            l3729 1236                            l3681 10FC  
                          l3673 10DA                            l3665 10BA                            l3497 1EF2  
                          l3585 18F8                            l3577 18C6                            l3569 189A  
                          l3657 215A                            l3649 2130                            l3921 2288  
                          l3489 204E                            l5097 2300                            l5089 24F8  
                          l5601 0E4A                            l5521 0C38                            l5513 0C1C  
                          l5505 0BE2                            l5441 097E                            l5433 08E0  
                          l5417 0864                            l5409 0838                            l5361 06E2  
                          l5353 06AE                            l5345 0680                            l5337 0638  
                          l5329 0604                            l5281 04B0                            l5273 048E  
                          l5265 0452                            l5257 0416                            l5249 03DA  
                          l5193 0332                            l5185 032A                            l5177 0322  
                          l5169 0312                            l3907 16DC                            l3851 1572  
                          l3843 153A                            l3827 14FA                            l3819 14D6  
                          l3771 1388                            l3755 1304                            l3739 1280  
                          l3747 12BC                            l3691 1130                            l3683 110E  
                          l3667 10CA                            l3499 1EF4                            l3587 190E  
                          l3579 18D8                            l3659 2166                            l3923 2298  
                          l3915 2280                            l5099 2308                            l5611 0E9C  
                          l5603 0E4E                            l5523 0C4A                            l5531 0C82  
                          l5515 0C20                            l5507 0BF2                            l5451 09E6  
                          l5443 0992                            l5435 08F0                            l5419 0870  
                          l5371 0738                            l5355 06BA                            l5347 068C  
                          l5339 064A                            l5291 04E2                            l5283 04B4  
                          l5275 0490                            l5267 0468                            l5259 0418  
                          l5195 0334                            l5187 032C                            l5179 0324  
                          l3909 16DE                            l3861 15B0                            l3853 157E  
                          l3845 1546                            l3837 152A                            l3829 14FC  
                          l3781 13DC                            l3773 1398                            l3765 1350  
                          l3757 1316                            l3749 12CC                            l3693 113C  
                          l3685 111A                            l3677 10FA                            l3669 10CC  
                          l3589 1916                            l3925 229C                            l5621 0EC8  
                          l5613 0EB4                            l5605 0E50                            l5541 0CC4  
                          l5533 0C94                            l5525 0C5A                            l5509 0C04  
                          l5517 0C24                            l5461 0A34                            l5453 09F4  
                          l5445 099E                            l5437 090E                            l5429 0894  
                          l5381 077C                            l5373 0754                            l5357 06CA  
                          l5349 068E                            l5365 06EE                            l5293 04FC  
                          l5285 04C4                            l5277 0492                            l5269 0470  
                          l5197 0336                            l5189 032E                            l3871 15F8  
                          l3863 15C0                            l3855 1594                            l3847 154A  
                          l3839 1532                            l3791 1420                            l3783 13EC  
                          l3767 1358                            l3775 13A6                            l3759 1326  
                          l3695 1140                            l3687 1128                            l3679 10FC  
                          l5623 0ECC                            l5615 0EBC                            l5607 0E68  
                          l5551 0D08                            l5543 0CD4                            l5535 0CA4  
                          l5527 0C62                            l5471 0A88                            l5463 0A42  
                          l5455 0A0A                            l5447 09AE                            l5439 0948  
                          l5383 078E                            l5391 07B0                            l5375 0756  
                          l5359 06D6                            l5367 0732                            l5295 0502  
                          l5287 04D4                            l5279 04AE                            l5199 0338  
                          l3881 163E                            l3873 15FC                            l3865 15D0  
                          l3857 159A                            l3849 1562                            l3785 13FE  
                          l3777 13B8                            l3769 137A                            l3697 1158  
                          l3689 112C                            l3793 142E                            l5633 0F0A  
                          l5625 0EE6                            l5617 0EC0                            l5609 0E80  
                          l5545 0CD8                            l5537 0CAC                            l5561 0D3E  
                          l5529 0C7A                            l5481 0AEA                            l5473 0A94  
                          l5465 0A4A                            l5457 0A16                            l5449 09CC  
                          l5393 07C4                            l5385 0792                            l5377 075A  
                          l5369 0736                            l5297 0512                            l5289 04E0  
                          l3891 1676                            l3883 1640                            l3875 160E  
                          l3867 15DC                            l3859 159E                            l3795 1440  
                          l3787 1410                            l3779 13CA                            l3699 1168  
                          l5651 0F56                            l5643 0F2E                            l5635 0F1C  
                          l5627 0EE8                            l5619 0EC4                            l5571 0D66  
                          l5563 0D46                            l5555 0D22                            l5547 0CE8  
                          l5539 0CB4                            l5491 0B38                            l5483 0B00  
                          l5475 0AA4                            l5459 0A26                            l5467 0A5A  
                          l5395 07C6                            l5387 0794                            l5379 076A  
                          l5299 051E                            l3885 164C                            l3877 161E  
                          l3869 15F2                            l3797 1454                            l3789 1418  
                          l5653 0F66                            l5661 0F8A                            l5645 0F3E  
                          l5629 0EF0                            l5581 0DA2                            l5573 0D6E  
                          l5565 0D4A                            l5557 0D34                            l5549 0CFE  
                          l5493 0B40                            l5485 0B0C                            l5477 0AC2  
                          l5469 0A76                            l5397 07E4                            l5389 07AE  
                          l3887 164E                            l3879 162A                            l3895 168A  
                          l3799 1466                            l5671 0FFE                            l5663 0FCE  
                          l5655 0F72                            l5647 0F42                            l5639 0F26  
                          l5591 0E20                            l5583 0DAE                            l5575 0D7E  
                          l5567 0D52                            l5487 0B1C                            l5479 0ADC  
                          l5495 0B50                            l5399 07E6                            l3897 169C  
                          l3889 166A                            l5681 1028                            l5673 1002  
                          l5665 0FE8                            l5657 0F7E                            l5649 0F4A  
                          l5593 0E22                            l5577 0D8A                            l5569 0D62  
                          l5497 0B6C                            l5489 0B2A                            l3899 16AE  
                          l5675 1006                            l5667 0FEA                            l5579 0D96  
                          l5587 0DBA                            l5691 1082                            l5499 0B82  
                          l5677 100C                            l5669 0FEE                            l5597 0E2A  
                          l5589 0E06                            l5693 108A                            l5679 100E  
                          l5599 0E3A                            l5687 102E                            l5689 1072  
                          u2000 211E                            u2001 211A                            u2100 10CA  
                          u2020 2060                            u2101 10C6                            u2021 205C  
                          u2110 110E                            u2111 110A                            u2200 1292  
                          u2120 118A                            u2040 185E                            u2201 128E  
                          u2121 1186                            u2041 185A                            u2210 12CC  
                          u2130 11A6                            u2050 187A                            u2211 12C8  
                          u2131 11A2                            u2035 1F0A                            u2051 1876  
                          u2300 13CA                            u2220 12DE                            u2140 11E8  
                          u2060 18BC                            u2301 13C6                            u2221 12DA  
                          u2141 11E4                            u2061 18B8                            u2310 13DC  
                          u2230 12F0                            u2150 1204                            u2070 18D8  
                          u2311 13D8                            u2231 12EC                            u2151 1200  
                          u2071 18D4                            u2400 14FA                            u2320 13FE  
                          u2240 1304                            u2160 1236                            u2401 14F6  
                          u2321 13FA                            u2241 1300                            u2161 1232  
                          u2410 1594                            u2330 1410                            u2250 1316  
                          u2170 1248                            u2090 214A                            u2411 1590  
                          u2331 140C                            u2251 1312                            u2171 1244  
                          u2091 2146                            u1700 2492                            u2500 16CE  
                          u2420 15B0                            u2340 1440                            u2260 134C  
                          u2180 126E                            u1701 248E                            u2501 16CA  
                          u2421 15AC                            u2341 143C                            u2261 1348  
                          u2181 126A                            u1710 22F2                            u2430 15F2  
                          u2350 1452                            u2270 1372                            u2190 1280  
                          u2510 22B8                            u1711 22EE                            u2431 15EE  
                          u2351 144E                            u2271 136C                            u2191 127C  
                          u2511 22B4                            u4007 0954                            u1720 23B8  
                          u2440 160E                            u2360 1466                            u2280 1374  
                          u3400 1792                            u1721 23B4                            u2441 160A  
                          u2361 1462                            u3401 178E                            u4017 09BA  
                          u2450 163E                            u2370 1476                            u2290 13B8  
                          u3410 17BA                            u2451 163A                            u2371 1472  
                          u2291 13B4                            u4107 114A                            u3411 17B6  
                          u4027 09D8                            u1740 1FA8                            u2460 1686  
                          u1900 1DA0                            u2380 1488                            u3420 17EC  
                          u3500 05CE                            u1741 1FA4                            u2461 1682  
                          u1901 1D9C                            u2381 1484                            u4117 11AC  
                          u3421 17E8                            u4037 0AB0                            u3501 05CA  
                          u1750 1FC6                            u1734 1F8C                            u2470 169A  
                          u1910 1DBA                            u2390 1498                            u3350 23F6  
                          u3430 2318                            u3510 0638                            u1751 1FC2  
                          u1735 1F88                            u2471 1696                            u4207 15B6  
                          u1911 1DB6                            u2391 1494                            u4127 12AC  
                          u3351 23F2                            u3431 2314                            u4047 0ACE  
                          u3511 0634                            u1760 1FDE                            u2480 16AE  
                          u1840 1CDC                            u1920 1DD4                            u3360 2404  
                          u3440 2216                            u3600 0810                            u3520 064A  
                          u1761 1FDA                            u2481 16AA                            u4217 1658  
                          u1841 1CD8                            u1921 1DD0                            u4137 1330  
                          u3361 2400                            u3441 2212                            u4057 0ED8  
                          u3601 080C                            u3521 0646                            u1770 1FF0  
                          u2490 16BE                            u1850 1CF6                            u1930 1DF2  
                          u3370 1714                            u3610 0824                            u3530 065C  
                          u3450 03D4                            _PEN2 007B5A                            u1771 1FEC  
                          u4227 16E8                            u2491 16BA                            u1851 1CF2  
                          u1931 1DEE                            u4147 1380                            u4067 181E  
                          u3371 1710                            u3611 0820                            u3531 0658  
                          u3451 03D0                            u1860 1D1C                            u1940 1E08  
                          u3380 1736                            u3700 0A42                            u3620 0838  
                          u3540 066E                            u3460 0452                            u4237 2398  
                          u1861 1D18                            u1941 1E04                            u4157 139E  
                          u4077 1880                            u3381 1732                            u3701 0A3E  
                          u3621 0834                            u3541 066A                            u3461 044E  
                          u1870 1D3A                            u1950 1E2C                            u3390 1770  
                          u3710 0A68                            u3630 090E                            u3550 0680  
                          u3470 0468                            u1871 1D36                            u1951 1E28  
                          u4167 1426                            u4087 1902                            u3391 176C  
                          u3711 0A64                            u3631 090A                            u3551 067C  
                          u3471 0464                            u1880 1D56                            u1960 1EB4  
                          u3800 0B82                            u3720 0A76                            u3640 0970  
                          u3560 076A                            u3480 04C4                            u1881 1D52  
                          u1961 1EB0                            u4177 14B2                            u4097 10E4  
                          u3801 0B7E                            u3721 0A72                            u3641 096C  
                          u3561 0766                            u3481 04C0                            u1890 1D7C  
                          u1970 1EC4                            u3810 0B9C                            u3730 0A88  
                          u3650 097E                            u3570 077C                            u3490 04D4  
                          u4187 1514                            u1891 1D78                            u1971 1EC0  
                          u3811 0B98                            u3731 0A84                            u3651 097A  
                          u3571 0778                            u3491 04D0                            u1980 2268  
                          u3900 0CA4                            u3820 0BAA                            u3740 0AEA  
                          u3660 0992                            u3580 078E                            u1981 2264  
                          u4197 1554                            u3901 0CA0                            u3821 0BA6  
                          u3741 0AE6                            u3661 098E                            u3581 078A  
                          u1990 243A                            u3910 0CE8                            u3830 0BC0  
                          u3750 0B00                            u3670 09F4                            u3590 07FE  
                          u1991 2436                            u3911 0CE4                            u3831 0BBC  
                          u3751 0AFC                            u3671 09F0                            u3591 07FA  
                          u3920 0D1E                            u3840 0BDA                            u3760 0B2A  
                          u3680 0A0A                            u3921 0D1A                            u3841 0BD6  
                          u3761 0B26                            u3681 0A06                            u3930 0D62  
                          u3850 0C04                            u3770 0B38                            u3690 0A34  
                          u3931 0D5E                            u3851 0C00                            u3771 0B34  
                          u3691 0A30                            u3940 0E3A                            u3860 0C34  
                          u3780 0B5E                            u3941 0E36                            u3861 0C30  
                          u3781 0B5A                            u3950 0E4A                            u3870 0C4A  
                          u3790 0B6C                            u3951 0E46                            u3871 0C46  
                          u3791 0B68                            u3960 0F06                            u3880 0C5A  
                          u3961 0F02                            u3881 0C56                            u3970 0F3E  
                          u3890 0C94                            _SEN2 007B58                            u3971 0F3A  
                          u3891 0C90                            u3980 0FFE                            u3981 0FFA  
                          u3997 038E                            _TMR1 000FCE                            _Busy 002D  
                          _Stop 002F                            _data 002B  __end_of_AD_capture_BattVoltage 2280  
                          _main 0306                            _init 1FF2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
            _MotorPosition_Init 180E                            btemp 0059                            start 0302  
               __end_of_Get7Seg 1CCA                 __end_of_Clr_RG3 2520     __end_of_Homing_Again_Manual 14DC  
                  ___param_bank 000000                    high_isr@Temp 0035             ?_MotorPosition_Init 0032  
               __end_of_Read_IR 2450                 __end_of_Set_RG3 2518                  ??_InitSTLED316 003E  
               __end_of_MotorON 24EE                    _BAUDCON1bits 000F7E                 __end_of___aldiv 180E  
                         ?_main 0032                           ?_init 0032                 __end_of___awdiv 1D8E  
                         _ADRES 000FC3                 __end_of___awmod 1E3E                 ___awdiv@divisor 003A  
                         _T1CON 000FCD                           _T4CON 000F76                           _RCEN2 007B5B  
                         i2l320 012A                           i2l323 014E                           i2l307 01C6  
                         i2l316 0130                           i2l341 02F6                           i2l326 018E  
                         i2l318 0100                           i2l456 235E                           i2l632 2424  
                         i2l634 242A                           i2l626 249A                           i2l629 24A8  
               ___awdiv@counter 003C                           _RSEN2 007B59                           _ETemp 001D  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TRISF 000F97  
                         _TRISG 000F98             __end_of_i2c_Address 24BE            ??_MotorPosition_Init 0041  
                         _flush 2280                      _Read1USART 2406                _TMR1IF_triggered 0025  
                         tablat 000FF5        ??_STLED316s_SPI_SendData 0038                 __end_of_pwm_set 238E  
           __end_of_i2c_Restart 2500                           ttemp5 005A                           ttemp6 005D  
                         ttemp7 0061                           status 000FD8                           wtemp8 005A  
                 _PWM_Selection 1A1A                PWM_Selection@msg 004C                   i2_Write1USART 2494  
         _WriteSTLED316SVibMode 2126                 __initialization 21BE                      _InitTimer1 2450  
                  __end_of_main 10BA                    __end_of_init 2064                __end_of_i2c_Init 247E  
              __end_of_i2c_Read 232A                __end_of_i2c_Wait 2406                __end_of_i2c_Stop 2508  
                        ??_main 0096                          ??_init 0038                   __activetblptr 000002  
                        _ACKEN2 007B5C                          _ACKDT2 007B5D                          ?_flush 0032  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _CCPR1L 000FBC  
              ___awdiv@dividend 0038                       ??_Get7Seg 003A                          i2l4601 017E  
                        i2l4603 0190                          i2l4621 021C                          i2l4613 01D4  
                        i2l4605 01A4                          i2l4541 0048                          i2l4533 0012  
                        i2l4631 0272                          i2l4623 022C                          i2l4607 01B6  
                        i2l4551 008C                          i2l4615 01DA                          i2l4543 0058  
                        i2l4535 0020                          i2l4641 02A0                          i2l4625 024A  
                        i2l4617 01EA                          i2l4633 0276                          i2l4561 00EE  
                        i2l4609 01BE                          i2l4553 009C                          i2l4545 0064  
                        i2l4537 0026                          i2l3931 2428                          i2l4651 02EC  
                        i2l4643 02B2                          i2l4635 0284                          i2l4627 025E  
                        i2l4619 0208                          i2l4571 0118                          i2l4563 0102  
                        i2l4555 00B2                          i2l4547 0074                          i2l4539 0038  
                        i2l3941 235C                          i2l4653 02F4                          i2l4645 02C0  
                        i2l4637 028C                          i2l4629 026E                          i2l4581 0136  
                        i2l4573 011A                          i2l4557 00C4                          i2l4549 007C  
                        i2l3935 232A                          i2l3927 2406                          i2l3943 2496  
                        i2l4647 02CC                          i2l4639 0292                          i2l4591 0170  
                        i2l4583 013C                          i2l4575 0132                          i2l4559 00DE  
                        i2l3937 2340                          i2l3929 2414                          i2l4649 02DE  
                        i2l4585 013E                          i2l4569 0106                          i2l3939 2346  
                        i2l4587 0150                          i2l4597 0176                          i2l4589 0164  
                        i2l4599 017C                          _RCREG1 000FAF                       ??_Clr_RG3 0038  
                        _SPBRG1 000FB0                          _TMR1IE 007CE8                          _TMR1IF 007CF0  
                ?_PWM_Selection 004C                          _TRISD5 007CAD                          _TRISD6 007CAE  
                ?i2_Write1USART 0032                          _TXREG1 000FAE                      _MotorBREAK 24EE  
                     ??_Read_IR 003A                       ??_Set_RG3 0038                 read_i2c@address 0046  
                        _OpMode 002A                       ??_MotorON 0038                __end_of_high_isr 0302  
                     ??___aldiv 0040                       ??___awdiv 003C                       ??___awmod 003C  
                _PWM_Duty_Cycle 0026                __end_of_flushOut 22F4                __end_of_read_i2c 20CC  
                   _i2c_Address 24AA                          clear_0 21E4                          clear_1 21F0  
              ___awdiv@quotient 003E                 ___awmod@divisor 003A                          isa$std 000001  
               ___awmod@counter 003C                Read1USART@result 0032      __end_of_WriteSTLED316SData 1EE6  
    __end_of_WriteSTLED316SMode 1A1A                          flush@i 0038                   i2c_Write@data 0039  
                  __pdataCOMRAM 004E                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     _i2c_Restart 24F8                       ??_pwm_set 003A  
                   ?_Read1USART 0032            __end_of_InitSTLED316 1F72                      __accesstop 0060  
                    _i_RUN_ZERO 0011         __end_of__initialization 21F6             _Low_Power_Indicator 232A  
             _WriteSTLED316SErr 1B16                   ___rparam_used 000001          ?_WriteSTLED316SVibMode 0032  
            ?_WriteSTLED316SErr 0032                  __pcstackCOMRAM 0032                     ?_InitTimer1 0032  
                 __end_of_flush 22BA               __end_of_i2c_Start 2510             ??_WriteSTLED316SErr 003E  
             __end_of_i2c_Write 24D8            ?_Low_Power_Indicator 0032                         ??_flush 0038  
                     ?_i2c_Init 0032                       ?_i2c_Read 0039                 ??_PWM_Selection 0092  
                    __pbssBANK0 0060                       ?_i2c_Wait 0032                 ??i2_Write1USART 0032  
                     ?_i2c_Stop 0032       __end_of_WriteSTLED316SErr 1BFE                   ??_Write1USART 0038  
                   ?_MotorBREAK 0032                   _dutyCycle_reg 0007                         _CCP4CON 000F73  
         ??_Low_Power_Indicator 0032          _STLED316s_SPI_SendData 1F72                _readWeighingData 20CC  
            i2c_Address@address 003A                         _SPBRGH1 000F7F                         _SSP2ADD 000F6E  
                       _SSP2BUF 000F6F                         _NUM_REC 000F                         _VOLTAGE 0009  
                     ?_high_isr 0032                      ??_i2c_Init 0038                      ??_i2c_Read 003B  
                       _PWM_reg 0058                      ??_i2c_Wait 0038                         _Get7Seg 1BFE  
   WriteSTLED316SVibMode@v_mode 003E                      ??_i2c_Stop 0039                         _Clr_RG3 2518  
             __end_of_delay_1ms 23BA               i2Write1USART@data 0032                       ?_flushOut 0032  
                     ?_read_i2c 0046                     _Serial_Flag 0031                         _Read_IR 242C  
         WriteSTLED316SMode@msg 0040                         _Set_RG3 2510                         __Hparam 0000  
                       __Lparam 0000                         _MotorON 24E4             __end_of_Write1USART 2494  
    WriteSTLED316SData@NUM_DIG0 0043      WriteSTLED316SData@NUM_DIG1 0045                         ___aldiv 1702  
                   _Motor_Speed 001B                         ___awdiv 1CCA                         ___awmod 1D8E  
                  Get7Seg@Digit 0038                         __pcinit 21BE                         __ramtop 1000  
             __end_of_initUSART 23E0                         __ptext0 0306                         __ptext1 2064  
                       __ptext2 24F8                         __ptext3 22F4                         __ptext4 2360  
                       __ptext5 23BA                         __ptext6 24BE                         __ptext7 1FF2  
                       __ptext8 2468                         __ptext9 2280               __end_of_initMotor 24CC  
                     _T2CONbits 000FCA                       _T3CONbits 000F79                ___awmod@dividend 0038  
                    _duty_cycle 0005                ___aldiv@dividend 0038                       _T4CONbits 000F76  
                 delay_1ms@time 0038                         _pwm_set 2360                      _pause_Time 0029  
                     _EAdd_High 0021                      ??_high_isr 0033            end_of_initialization 21F6  
          i2c_Address@l_address 003B                      ??_flushOut 0038                      ??_read_i2c 004A  
                 __Lmediumconst 0000         WriteSTLED316SData@data3 0047         WriteSTLED316SData@data4 0048  
              ___aldiv@quotient 0042                         postdec1 000FE5                         postinc0 000FEE  
                  ?_i2c_Address 0039                    _InitSTLED316 1EE6                       _PORTAbits 000F80  
                     _PORTBbits 000F81               __end_of_write_i2c 21BE                       _TRISBbits 000F93  
                     _TRISCbits 000F94                    ?_i2c_Restart 0032        ??_AD_capture_BattVoltage 003B  
                  ??_Read1USART 0032              _WriteSTLED316SData 1E3E         ??_WriteSTLED316SVibMode 003E  
            _WriteSTLED316SMode 191A                     _Write1USART 247E                     _CCP1CONbits 000FBB  
           ?_WriteSTLED316SData 0040             ?_WriteSTLED316SMode 0032                    ??_InitTimer1 0038  
                _ToggleVIB_Mode 2204                       _Device_ID 0017                     _Vmotor_Time 0056  
                 __pidataCOMRAM 24D8              __end_of_Read1USART 242C                   _Serial_Buffer 0080  
                     _i2c_Start 2508                       _i2c_Write 24CC            ??_WriteSTLED316SData 0043  
           start_initialization 21BE            ??_WriteSTLED316SMode 003E              __end_of_InitTimer1 2468  
               _LowPowerCounter 004E        __end_of_readWeighingData 2126                     pwm_set@duty 0038  
                  ??_MotorBREAK 0038          __end_of_ToggleVIB_Mode 2242         ?_STLED316s_SPI_SendData 0032  
                    ?_i2c_Start 0032                      ?_i2c_Write 0032                     __pbssCOMRAM 0001  
            __end_of_MotorBREAK 24F8                   __pcstackBANK0 0092                        ?_Get7Seg 0038  
           _Homing_Again_Manual 10BA                        ?_Clr_RG3 0032           __end_of_PWM_Selection 1B16  
         __end_ofi2_Write1USART 24AA                        ?_Read_IR 0038                       _delay_1ms 238E  
             _Homing_Again_Auto 14DC                        ?_Set_RG3 0032                 ?_ToggleVIB_Mode 0032  
                      ?_MotorON 0032  __end_of_STLED316s_SPI_SendData 1FF2         PWM_Selection@dcSelected 0094  
   __end_of_Low_Power_Indicator 2360              ?_Homing_Again_Auto 0032                       __pintcode 0008  
                      ?___aldiv 0038                        ?___awdiv 0038                        ?___awmod 0038  
          ?_Homing_Again_Manual 0032                    _errorcounter 0052             ??_Homing_Again_Auto 0041  
          WriteSTLED316SErr@msg 0040                       _initUSART 23BA                       _initMotor 24BE  
                   Get7Seg@Data 003C                        ?_pwm_set 0038                 Write1USART@data 0038  
               ___aldiv@divisor 003C                 ___aldiv@counter 0040       __end_of_Homing_Again_Auto 1702  
                      _LATAbits 000F89                        _EAdd_Low 001F                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATGbits 000F8F                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                      ?_delay_1ms 0038               readWeighingData@i 003A  
                      i2u310_40 0020                        i2u310_41 001C                        i2u311_40 0038  
                      i2u311_41 0034                        i2u320_40 012A                        i2u312_40 0048  
                      i2u320_41 0126                        i2u312_41 0044                        i2u321_40 014E  
                      i2u313_40 0058                        i2u321_41 014A                        i2u313_41 0054  
                      i2u330_40 02A0                        i2u322_40 018E                        i2u314_40 008C  
                      i2u330_41 029C                        i2u322_41 018A                        i2u314_41 0088  
                      i2u331_40 02B2                        i2u323_40 01A4                        i2u315_40 00B2  
                      i2u331_41 02AE                        i2u323_41 01A0                        i2u315_41 00AE  
                      i2u252_40 2414                        i2u332_40 02C0                        i2u324_40 01B6  
                      i2u316_40 00C4                        i2u252_41 2410                        i2u332_41 02BC  
                      i2u324_41 01B2                        i2u316_41 00C0                        i2u253_40 2340  
                      i2u333_40 02DE                        i2u325_40 01D4                        i2u317_40 00DE  
                      i2u253_41 233C                        i2u333_41 02DA                        i2u325_41 01D0  
                      i2u317_41 00DA                        i2u254_40 235C                        i2u334_40 02EC  
                      i2u326_40 01EA                        i2u318_40 00EE                        i2u254_41 2358  
                      i2u334_41 02E8                        i2u326_41 01E6                        i2u318_41 00EA  
                      i2u255_40 24A8                        i2u327_40 0208                        i2u319_40 0100  
                      i2u255_41 24A4                        i2u327_41 0204                        i2u319_41 00FC  
                      i2u328_40 024A                        i2u328_41 0246                        i2u329_40 0284  
                      i2u329_41 0280                        _PIR1bits 000F9E                        _RCONbits 000FD0  
        _AD_capture_BattVoltage 2242                        _SSP2CON1 000F6C                        _SSP2CON2 000F6B  
                      _SSP2STAT 000F6D           ??_Homing_Again_Manual 0049                       _pwm_count 0003  
                    _ADCON0bits 000FC2                      _ADCON1bits 000FC1                       high_isr@c 0036  
                     high_isr@i 0037                     ??_i2c_Start 0039                     ??_i2c_Write 0039  
    __end_of_MotorPosition_Init 191A                      ?_initUSART 0032           _delay_motor_stop_time 0027  
                    ?_initMotor 0032                    _Serial_GData 0030                       _write_i2c 2174  
                   _INTCON3bits 000FF0                       copy_data0 21D2          InitSTLED316@Brightness 0040  
                  _Serial_Count 0023                        _i2c_Init 2468                        _i2c_Read 22F4  
                      _i2c_Wait 23E0                        _i2c_Stop 2500                    ?_Write1USART 0032  
 __end_of_WriteSTLED316SVibMode 2174                       flushOut@i 0038                      _ANCON0bits 000FC1  
                      __Hrparam 0000                        __Lrparam 0000                  _vibration_mode 002C  
                      __ptext10 2126                        __ptext11 2204                        __ptext20 180E  
                      __ptext12 1A1A                        __ptext21 2450                        __ptext13 2174  
                      __ptext30 22BA                        __ptext22 1EE6                        __ptext14 24CC  
                      __ptext31 247E                        __ptext23 10BA                        __ptext15 2500  
                      __ptext40 2242                        __ptext32 191A                        __ptext24 1E3E  
                      __ptext16 2508                        __ptext41 238E                        __ptext33 1B16  
                      __ptext25 1D8E                        __ptext17 24AA                        __ptext34 1F72  
                      __ptext26 1CCA                        __ptext18 23E0                        __ptext43 2494  
                      __ptext35 242C                        __ptext27 1BFE                        __ptext19 1702  
                      __ptext44 2406                        __ptext36 24E4                        __ptext28 14DC  
                      __ptext45 232A                        __ptext37 2510                        __ptext29 20CC  
                      __ptext38 24EE                        __ptext39 2518                      ?_write_i2c 0046  
              write_i2c@address 0046                        _high_isr 0008                        _dispense 0001  
             read_i2c@read_byte 004A                        _flushOut 22BA                        _read_i2c 2064  
             ?_readWeighingData 0032                     ??_delay_1ms 003A              ??_readWeighingData 003A  
                      _vib_Time 0028           _Motor_Stop_Delay_Time 0019                        isa$xinst 000000  
                      int$flags 0059                        _pwm_mode 0090               _Serial_Buffer_Out 0060  
    STLED316s_SPI_SendData@Data 003A                      _INTCONbits 000FF2                     ??_initUSART 0038  
    STLED316s_SPI_SendData@temp 003B                     ??_initMotor 0038                        intlevel2 0000  
                  _motor_status 002E                ??_ToggleVIB_Mode 004C                 i2c_Address@mode 0039  
                    _RCSTA1bits 000FAC                      _OSCCONbits 000FD3        WriteSTLED316SData@v_mode 0042  
      WriteSTLED316SData@number 0040                      _IR_SENSORF 000B                _Motor_Pause_Time 0015  
            _Serial_Temp_Buffer 0070         STLED316s_SPI_SendData@i 003C         STLED316s_SPI_SendData@t 003D  
                  ___aldiv@sign 0041                      _WDTCONbits 000FC0                     ??_write_i2c 004C  
           i2c_Read@i2cReadData 003C                   write_i2c@data 004A         ?_AD_capture_BattVoltage 0032  
