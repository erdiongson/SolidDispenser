

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 08 11:24:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F65J50 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataCOMRAM
   100   002662                     __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _LowPowerCounter
   104   002662  0014               	dw	20
   105   002664  0000               	dw	0
   106                           
   107                           ;initializer for _errorcounter
   108   002666  001E               	dw	30
   109   002668  0000               	dw	0
   110                           
   111                           ;initializer for _Vmotor_Time
   112   00266A  07D0               	dw	2000
   113                           
   114                           ;initializer for _PWM_reg
   115   00266C  3F                 	db	63
   116   000000                     _ADCON1bits	set	4033
   117   000000                     _RCREG1	set	4015
   118   000000                     _TXREG1	set	4014
   119   000000                     _SPBRGH1	set	3967
   120   000000                     _SPBRG1	set	4016
   121   000000                     _TXSTA1bits	set	4013
   122   000000                     _SSP2STAT	set	3949
   123   000000                     _SSP2ADD	set	3950
   124   000000                     _ADRESL	set	4035
   125   000000                     _ADRESH	set	4036
   126   000000                     _ADCON0bits	set	4034
   127   000000                     _ADRES	set	4035
   128   000000                     _T4CONbits	set	3958
   129   000000                     _ANCON0bits	set	4033
   130   000000                     _TRISD	set	3989
   131   000000                     _TRISC	set	3988
   132   000000                     _TRISB	set	3987
   133   000000                     _PIE1bits	set	3997
   134   000000                     _INTCONbits	set	4082
   135   000000                     _ACKEN2	set	31580
   136   000000                     _ACKDT2	set	31581
   137   000000                     _RCEN2	set	31579
   138   000000                     _PEN2	set	31578
   139   000000                     _RSEN2	set	31577
   140   000000                     _SEN2	set	31576
   141   000000                     _TRISD6	set	31918
   142   000000                     _TMR1IF	set	31984
   143   000000                     _SSP2CON2	set	3947
   144   000000                     _SSP2CON1	set	3948
   145   000000                     _PORTAbits	set	3968
   146   000000                     _PORTBbits	set	3969
   147   000000                     _LATAbits	set	3977
   148   000000                     _LATCbits	set	3979
   149   000000                     _TRISBbits	set	3987
   150   000000                     _TRISCbits	set	3988
   151   000000                     _CCP1CONbits	set	4027
   152   000000                     _WDTCONbits	set	4032
   153   000000                     _T2CONbits	set	4042
   154   000000                     _OSCCONbits	set	4051
   155   000000                     _CCPR1L	set	4028
   156   000000                     _GIE	set	32663
   157   000000                     _INTCON3bits	set	4080
   158   000000                     _TRISG	set	3992
   159   000000                     _TRISF	set	3991
   160   000000                     _TRISE	set	3990
   161   000000                     _PIR1bits	set	3998
   162   000000                     _IPR1bits	set	3999
   163   000000                     _TRISD5	set	31917
   164   000000                     _TMR1IE	set	31976
   165   000000                     _TMR1	set	4046
   166   000000                     _T1CON	set	4045
   167   000000                     _RCONbits	set	4048
   168   000000                     _PR2	set	4043
   169   000000                     _LATGbits	set	3983
   170   000000                     _TRISA	set	3986
   171   000000                     _LATDbits	set	3980
   172   000000                     _RCSTA1bits	set	4012
   173   000000                     _CCP4CON	set	3955
   174   000000                     _T4CON	set	3958
   175   000000                     _PR4	set	3959
   176   000000                     _BAUDCON1bits	set	3966
   177   000000                     _SSP2BUF	set	3951
   178   000000                     _T3CONbits	set	3961
   179                           
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   002348                     __pcinit:
   184                           	callstack 0
   185   002348                     start_initialization:
   186                           	callstack 0
   187   002348                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Initialize objects allocated to COMRAM (11 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192   002348  0E62               	movlw	low __pidataCOMRAM
   193   00234A  6EF6               	movwf	tblptrl,c
   194   00234C  0E26               	movlw	high __pidataCOMRAM
   195   00234E  6EF7               	movwf	tblptrh,c
   196   002350  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197   002352  6EF8               	movwf	tblptru,c
   198   002354  EE00  F04E         	lfsr	0,__pdataCOMRAM
   199   002358  EE10 F00B          	lfsr	1,11
   200   00235C                     copy_data0:
   201   00235C  0009               	tblrd		*+
   202   00235E  CFF5 FFEE          	movff	tablat,postinc0
   203   002362  50E5               	movf	postdec1,w,c
   204   002364  50E1               	movf	fsr1l,w,c
   205   002366  E1FA               	bnz	copy_data0
   206                           
   207                           ; Clear objects allocated to BANK0 (58 bytes)
   208   002368  EE00  F060         	lfsr	0,__pbssBANK0
   209   00236C  0E3A               	movlw	58
   210   00236E                     clear_0:
   211   00236E  6AEE               	clrf	postinc0,c
   212   002370  06E8               	decf	wreg,f,c
   213   002372  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to COMRAM (49 bytes)
   216   002374  EE00  F001         	lfsr	0,__pbssCOMRAM
   217   002378  0E31               	movlw	49
   218   00237A                     clear_1:
   219   00237A  6AEE               	clrf	postinc0,c
   220   00237C  06E8               	decf	wreg,f,c
   221   00237E  E1FD               	bnz	clear_1
   222   002380                     end_of_initialization:
   223                           	callstack 0
   224   002380                     __end_of__initialization:
   225                           	callstack 0
   226   002380  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   227   002382  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   228   002384  0E00               	movlw	low (__Lmediumconst shr (0+16))
   229   002386  6EF8               	movwf	tblptru,c
   230   002388  0100               	movlb	0
   231   00238A  EF83  F001         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234   000001                     __pbssCOMRAM:
   235                           	callstack 0
   236   000001                     _test_redled:
   237                           	callstack 0
   238   000001                     	ds	2
   239   000003                     _holdTimeLeft:
   240                           	callstack 0
   241   000003                     	ds	2
   242   000005                     _holdTimeRight:
   243                           	callstack 0
   244   000005                     	ds	2
   245   000007                     _dispense:
   246                           	callstack 0
   247   000007                     	ds	2
   248   000009                     _duty_cycle:
   249                           	callstack 0
   250   000009                     	ds	2
   251   00000B                     _dutyCycle_reg:
   252                           	callstack 0
   253   00000B                     	ds	2
   254   00000D                     _VOLTAGE:
   255                           	callstack 0
   256   00000D                     	ds	2
   257   00000F                     _IR_SENSORF:
   258                           	callstack 0
   259   00000F                     	ds	2
   260   000011                     _i:
   261                           	callstack 0
   262   000011                     	ds	2
   263   000013                     _NUM_REC:
   264                           	callstack 0
   265   000013                     	ds	2
   266   000015                     _i_RUN_ZERO:
   267                           	callstack 0
   268   000015                     	ds	2
   269   000017                     _NUM:
   270                           	callstack 0
   271   000017                     	ds	2
   272   000019                     _Motor_Pause_Time:
   273                           	callstack 0
   274   000019                     	ds	2
   275   00001B                     _Device_ID:
   276                           	callstack 0
   277   00001B                     	ds	2
   278   00001D                     _Motor_Stop_Delay_Time:
   279                           	callstack 0
   280   00001D                     	ds	2
   281   00001F                     _Motor_Speed:
   282                           	callstack 0
   283   00001F                     	ds	2
   284   000021                     _ETemp:
   285                           	callstack 0
   286   000021                     	ds	2
   287   000023                     _Serial_Count:
   288                           	callstack 0
   289   000023                     	ds	2
   290   000025                     _TMR1IF_triggered:
   291                           	callstack 0
   292   000025                     	ds	1
   293   000026                     _PWM_Duty_Cycle:
   294                           	callstack 0
   295   000026                     	ds	1
   296   000027                     _delay_motor_stop_time:
   297                           	callstack 0
   298   000027                     	ds	1
   299   000028                     _vib_Time:
   300                           	callstack 0
   301   000028                     	ds	1
   302   000029                     _pause_Time:
   303                           	callstack 0
   304   000029                     	ds	1
   305   00002A                     _OpMode:
   306                           	callstack 0
   307   00002A                     	ds	1
   308   00002B                     _data:
   309                           	callstack 0
   310   00002B                     	ds	1
   311   00002C                     _vibration_mode:
   312                           	callstack 0
   313   00002C                     	ds	1
   314   00002D                     _Busy:
   315                           	callstack 0
   316   00002D                     	ds	1
   317   00002E                     _motor_status:
   318                           	callstack 0
   319   00002E                     	ds	1
   320   00002F                     _Stop:
   321                           	callstack 0
   322   00002F                     	ds	1
   323   000030                     _Serial_GData:
   324                           	callstack 0
   325   000030                     	ds	1
   326   000031                     _Serial_Flag:
   327                           	callstack 0
   328   000031                     	ds	1
   329                           
   330                           	psect	dataCOMRAM
   331   00004E                     __pdataCOMRAM:
   332                           	callstack 0
   333   00004E                     _LowPowerCounter:
   334                           	callstack 0
   335   00004E                     	ds	4
   336   000052                     _errorcounter:
   337                           	callstack 0
   338   000052                     	ds	4
   339   000056                     _Vmotor_Time:
   340                           	callstack 0
   341   000056                     	ds	2
   342   000058                     _PWM_reg:
   343                           	callstack 0
   344   000058                     	ds	1
   345                           
   346                           	psect	bssBANK0
   347   000060                     __pbssBANK0:
   348                           	callstack 0
   349   000060                     _Serial_Buffer_Out:
   350                           	callstack 0
   351   000060                     	ds	16
   352   000070                     _Serial_Temp_Buffer:
   353                           	callstack 0
   354   000070                     	ds	16
   355   000080                     _Serial_Buffer:
   356                           	callstack 0
   357   000080                     	ds	16
   358   000090                     _temp:
   359                           	callstack 0
   360   000090                     	ds	2
   361   000092                     _pwm_mode:
   362                           	callstack 0
   363   000092                     	ds	2
   364   000094                     _pwm_count:
   365                           	callstack 0
   366   000094                     	ds	2
   367   000096                     _EAdd_Low:
   368                           	callstack 0
   369   000096                     	ds	2
   370   000098                     _EAdd_High:
   371                           	callstack 0
   372   000098                     	ds	2
   373                           
   374                           	psect	cstackBANK0
   375   00009A                     __pcstackBANK0:
   376                           	callstack 0
   377   00009A                     ??_PWM_Selection:
   378                           
   379                           ; 1 bytes @ 0x0
   380   00009A                     	ds	2
   381   00009C                     PWM_Selection@dcSelected:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x2
   385   00009C                     	ds	2
   386   00009E                     ??_main:
   387                           
   388                           ; 1 bytes @ 0x4
   389   00009E                     	ds	2
   390                           
   391                           	psect	cstackCOMRAM
   392   000032                     __pcstackCOMRAM:
   393                           	callstack 0
   394   000032                     Read1USART@result:
   395                           	callstack 0
   396   000032                     i2Write1USART@data:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x0
   400   000032                     	ds	1
   401   000033                     ??_high_isr:
   402                           
   403                           ; 1 bytes @ 0x1
   404   000033                     	ds	2
   405   000035                     high_isr@Temp:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x3
   409   000035                     	ds	1
   410   000036                     high_isr@c:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x4
   414   000036                     	ds	1
   415   000037                     high_isr@i:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x5
   419   000037                     	ds	1
   420   000038                     ??_STLED316s_SPI_SendData:
   421   000038                     ??_i2c_Wait:
   422   000038                     ?_Read_IR:
   423                           	callstack 0
   424   000038                     ?___awdiv:
   425                           	callstack 0
   426   000038                     ?___awmod:
   427                           	callstack 0
   428   000038                     ?___aldiv:
   429                           	callstack 0
   430   000038                     Write1USART@data:
   431                           	callstack 0
   432   000038                     pwm_set@duty:
   433                           	callstack 0
   434   000038                     delay_1ms@time:
   435                           	callstack 0
   436   000038                     flush@i:
   437                           	callstack 0
   438   000038                     flushOut@i:
   439                           	callstack 0
   440   000038                     Get7Seg@Digit:
   441                           	callstack 0
   442   000038                     ___awdiv@dividend:
   443                           	callstack 0
   444   000038                     ___awmod@dividend:
   445                           	callstack 0
   446   000038                     ___aldiv@dividend:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x6
   450   000038                     	ds	1
   451   000039                     ?_i2c_Read:
   452                           	callstack 0
   453   000039                     i2c_Write@data:
   454                           	callstack 0
   455   000039                     i2c_Address@mode:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x7
   459   000039                     	ds	1
   460   00003A                     ??_pwm_set:
   461   00003A                     ??_delay_1ms:
   462   00003A                     ??_Get7Seg:
   463   00003A                     STLED316s_SPI_SendData@Data:
   464                           	callstack 0
   465   00003A                     i2c_Address@address:
   466                           	callstack 0
   467   00003A                     readWeighingData@i:
   468                           	callstack 0
   469   00003A                     ___awdiv@divisor:
   470                           	callstack 0
   471   00003A                     ___awmod@divisor:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475   00003A                     	ds	1
   476   00003B                     ??_AD_capture_BattVoltage:
   477   00003B                     STLED316s_SPI_SendData@temp:
   478                           	callstack 0
   479   00003B                     i2c_Address@l_address:
   480                           	callstack 0
   481   00003B                     i2c_Read@ack:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x9
   485   00003B                     	ds	1
   486   00003C                     STLED316s_SPI_SendData@i:
   487                           	callstack 0
   488   00003C                     Get7Seg@Data:
   489                           	callstack 0
   490   00003C                     i2c_Read@i2cReadData:
   491                           	callstack 0
   492   00003C                     ___awdiv@counter:
   493                           	callstack 0
   494   00003C                     ___awmod@counter:
   495                           	callstack 0
   496   00003C                     ___aldiv@divisor:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0xA
   500   00003C                     	ds	1
   501   00003D                     STLED316s_SPI_SendData@t:
   502                           	callstack 0
   503   00003D                     ___awdiv@sign:
   504                           	callstack 0
   505   00003D                     ___awmod@sign:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xB
   509   00003D                     	ds	1
   510   00003E                     ??_InitSTLED316:
   511   00003E                     ??_WriteSTLED316SErr:
   512   00003E                     ??_WriteSTLED316SMode:
   513   00003E                     WriteSTLED316SVibMode@dc_reg:
   514                           	callstack 0
   515   00003E                     ___awdiv@quotient:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xC
   519   00003E                     	ds	2
   520   000040                     InitSTLED316@Brightness:
   521                           	callstack 0
   522   000040                     WriteSTLED316SMode@msg:
   523                           	callstack 0
   524   000040                     WriteSTLED316SVibMode@v_mode:
   525                           	callstack 0
   526   000040                     WriteSTLED316SErr@msg:
   527                           	callstack 0
   528   000040                     ___aldiv@counter:
   529                           	callstack 0
   530   000040                     WriteSTLED316SData@number:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xE
   534   000040                     	ds	1
   535   000041                     ??_MotorPosition_Init:
   536   000041                     ??_Homing_Again_Auto:
   537   000041                     ___aldiv@sign:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0xF
   541   000041                     	ds	1
   542   000042                     WriteSTLED316SData@v_mode:
   543                           	callstack 0
   544   000042                     ___aldiv@quotient:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x10
   548   000042                     	ds	1
   549   000043                     WriteSTLED316SData@NUM_DIG0:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x11
   553   000043                     	ds	2
   554   000045                     WriteSTLED316SData@NUM_DIG1:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x13
   558   000045                     	ds	1
   559   000046                     ?_read_i2c:
   560                           	callstack 0
   561   000046                     write_i2c@address:
   562                           	callstack 0
   563   000046                     read_i2c@address:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x14
   567   000046                     	ds	1
   568   000047                     WriteSTLED316SData@data3:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x15
   572   000047                     	ds	1
   573   000048                     WriteSTLED316SData@data4:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x16
   577   000048                     	ds	1
   578   000049                     ??_Homing_Again_Manual:
   579                           
   580                           ; 1 bytes @ 0x17
   581   000049                     	ds	1
   582   00004A                     write_i2c@data:
   583                           	callstack 0
   584   00004A                     read_i2c@read_byte:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x18
   588   00004A                     	ds	2
   589   00004C                     ?_PWM_Selection:
   590                           	callstack 0
   591   00004C                     PWM_Selection@msg:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x1A
   595   00004C                     	ds	2
   596                           
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 185 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels required when called: 6
   622 ;; This function calls:
   623 ;;		_AD_capture_BattVoltage
   624 ;;		_Homing_Again_Auto
   625 ;;		_Homing_Again_Manual
   626 ;;		_InitSTLED316
   627 ;;		_InitTimer1
   628 ;;		_MotorPosition_Init
   629 ;;		_PWM_Selection
   630 ;;		_ToggleVIB_Mode
   631 ;;		_Write1USART
   632 ;;		_WriteSTLED316SData
   633 ;;		_WriteSTLED316SVibMode
   634 ;;		_flush
   635 ;;		_flushOut
   636 ;;		_i2c_Init
   637 ;;		_init
   638 ;;		_initMotor
   639 ;;		_initUSART
   640 ;;		_pwm_set
   641 ;;		_read_i2c
   642 ;;		_write_i2c
   643 ;; This function is called by:
   644 ;;		Startup code after reset
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text0
   649   000306                     __ptext0:
   650                           	callstack 0
   651   000306                     _main:
   652                           	callstack 25
   653   000306                     
   654                           ;main.c: 186:     GIE = 0;
   655   000306  9EF2               	bcf	4082,7,c	;volatile
   656   000308                     
   657                           ;main.c: 187:     init();
   658   000308  ECE5  F010         	call	_init	;wreg free
   659   00030C                     
   660                           ;main.c: 188:     InitSTLED316(0x77);
   661   00030C  0E77               	movlw	119
   662   00030E  EC5F  F010         	call	_InitSTLED316
   663   000312                     
   664                           ;main.c: 189:     initMotor();
   665   000312  EC24  F013         	call	_initMotor	;wreg free
   666   000316                     
   667                           ;main.c: 190:     i2c_Init();
   668   000316  ECF9  F012         	call	_i2c_Init	;wreg free
   669   00031A                     
   670                           ;main.c: 191:     initUSART();
   671   00031A  ECA2  F012         	call	_initUSART	;wreg free
   672   00031E                     
   673                           ;main.c: 192:     InitTimer1();
   674   00031E  ECED  F012         	call	_InitTimer1	;wreg free
   675   000322                     
   676                           ;main.c: 201:     OSCCONbits.IRCF0 = 0;
   677   000322  98D3               	bcf	211,4,c	;volatile
   678   000324                     
   679                           ;main.c: 202:     OSCCONbits.IRCF1 = 0;
   680   000324  9AD3               	bcf	211,5,c	;volatile
   681   000326                     
   682                           ;main.c: 203:     OSCCONbits.IRCF2 = 0;
   683   000326  9CD3               	bcf	211,6,c	;volatile
   684   000328                     
   685                           ;main.c: 204:     OSCCONbits.SCS0 = 0;
   686   000328  90D3               	bcf	211,0,c	;volatile
   687   00032A                     
   688                           ;main.c: 205:     OSCCONbits.SCS1 = 0;
   689   00032A  92D3               	bcf	211,1,c	;volatile
   690   00032C                     
   691                           ;main.c: 209:     TRISCbits.TRISC2 = 0;
   692   00032C  9494               	bcf	148,2,c	;volatile
   693   00032E                     
   694                           ;main.c: 213:     TRISBbits.TRISB4 = 1;
   695   00032E  8893               	bsf	147,4,c	;volatile
   696   000330                     
   697                           ;main.c: 216:     T2CONbits.T2OUTPS0 = 0;
   698   000330  96CA               	bcf	202,3,c	;volatile
   699   000332                     
   700                           ;main.c: 217:     T2CONbits.T2OUTPS1 = 0;
   701   000332  98CA               	bcf	202,4,c	;volatile
   702   000334                     
   703                           ;main.c: 218:     T2CONbits.T2OUTPS2 = 0;
   704   000334  9ACA               	bcf	202,5,c	;volatile
   705   000336                     
   706                           ;main.c: 219:     T2CONbits.T2OUTPS3 = 0;
   707   000336  9CCA               	bcf	202,6,c	;volatile
   708   000338                     
   709                           ;main.c: 221:     T2CONbits.T2CKPS = 0x00;
   710   000338  0EFC               	movlw	-4
   711   00033A  16CA               	andwf	202,f,c	;volatile
   712   00033C                     
   713                           ;main.c: 227:     PR2 = 4;
   714   00033C  0E04               	movlw	4
   715   00033E  6ECB               	movwf	203,c	;volatile
   716   000340                     
   717                           ;main.c: 229:     CCP1CONbits.DC1B = 0;
   718   000340  0ECF               	movlw	-49
   719   000342  16BB               	andwf	187,f,c	;volatile
   720   000344                     
   721                           ;main.c: 230:     CCP1CONbits.CCP1M = 0x0C;
   722   000344  50BB               	movf	187,w,c	;volatile
   723   000346  0BF0               	andlw	-16
   724   000348  090C               	iorlw	12
   725   00034A  6EBB               	movwf	187,c	;volatile
   726   00034C                     
   727                           ;main.c: 231:     CCPR1L = 0;
   728   00034C  0E00               	movlw	0
   729   00034E  6EBC               	movwf	188,c	;volatile
   730   000350                     
   731                           ;main.c: 233:     T2CONbits.TMR2ON = 1;
   732   000350  84CA               	bsf	202,2,c	;volatile
   733   000352                     
   734                           ;main.c: 235:     LATCbits.LATC1 = 0;
   735   000352  928B               	bcf	139,1,c	;volatile
   736   000354                     
   737                           ;main.c: 236:     LATAbits.LATA2 = 0;
   738   000354  9489               	bcf	137,2,c	;volatile
   739   000356                     
   740                           ;main.c: 237:     errorcounter = 30;
   741   000356  0E1E               	movlw	30
   742   000358  6E52               	movwf	_errorcounter^0,c	;volatile
   743   00035A  0E00               	movlw	0
   744   00035C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   745   00035E  0E00               	movlw	0
   746   000360  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   747   000362  0E00               	movlw	0
   748   000364  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   749   000366                     
   750                           ;main.c: 240:     RCONbits.IPEN = 1;
   751   000366  8ED0               	bsf	208,7,c	;volatile
   752   000368                     
   753                           ;main.c: 243:     IPR1bits.RCIP = 1;
   754   000368  8A9F               	bsf	159,5,c	;volatile
   755   00036A                     
   756                           ;main.c: 246:     INTCONbits.GIEH = 1;
   757   00036A  8EF2               	bsf	242,7,c	;volatile
   758   00036C                     
   759                           ;main.c: 247:     INTCONbits.GIE = 1;
   760   00036C  8EF2               	bsf	242,7,c	;volatile
   761   00036E                     
   762                           ;main.c: 251:     WDTCONbits.SWDTEN = 0;
   763   00036E  90C0               	bcf	192,0,c	;volatile
   764   000370                     
   765                           ;main.c: 252:     LATDbits.LATD0 = 1;
   766   000370  808C               	bsf	140,0,c	;volatile
   767   000372                     
   768                           ;main.c: 253:     LATDbits.LATD1 = 1;
   769   000372  828C               	bsf	140,1,c	;volatile
   770   000374                     
   771                           ;main.c: 255:     WriteSTLED316SData(37, 0xFF);
   772   000374  0E00               	movlw	0
   773   000376  6E41               	movwf	(WriteSTLED316SData@number+1)^0,c
   774   000378  0E25               	movlw	37
   775   00037A  6E40               	movwf	WriteSTLED316SData@number^0,c
   776   00037C  0EFF               	movlw	255
   777   00037E  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
   778   000380  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
   779   000384                     
   780                           ;main.c: 256:     _delay((unsigned long)((500)*(8000000/4000.0)));
   781   000384  0E06               	movlw	6
   782   000386  0100               	movlb	0	; () banked
   783   000388  6F9F               	movwf	(??_main+1)& (0+255),b
   784   00038A  0E13               	movlw	19
   785   00038C  6F9E               	movwf	??_main& (0+255),b
   786   00038E  0EAD               	movlw	173
   787   000390                     u4207:
   788   000390  2EE8               	decfsz	wreg,f,c
   789   000392  D7FE               	bra	u4207
   790   000394  2F9E               	decfsz	??_main& (0+255),f,b
   791   000396  D7FC               	bra	u4207
   792   000398  2F9F               	decfsz	(??_main+1)& (0+255),f,b
   793   00039A  D7FA               	bra	u4207
   794   00039C  D000               	nop2	
   795   00039E                     
   796                           ;main.c: 257:     AD_capture_BattVoltage();
   797   00039E  ECE6  F011         	call	_AD_capture_BattVoltage	;wreg free
   798   0003A2                     
   799                           ;main.c: 266:     INTCONbits.GIE = 0;
   800   0003A2  9EF2               	bcf	242,7,c	;volatile
   801   0003A4                     
   802                           ;main.c: 267:     ETemp = read_i2c(0x0010);
   803   0003A4  0E10               	movlw	16
   804   0003A6  6E46               	movwf	read_i2c@address^0,c
   805   0003A8  0E00               	movlw	0
   806   0003AA  6E47               	movwf	(read_i2c@address+1)^0,c
   807   0003AC  0E00               	movlw	0
   808   0003AE  6E48               	movwf	(read_i2c@address+2)^0,c
   809   0003B0  0E00               	movlw	0
   810   0003B2  6E49               	movwf	(read_i2c@address+3)^0,c
   811   0003B4  EC1E  F011         	call	_read_i2c	;wreg free
   812   0003B8  C046  F021         	movff	?_read_i2c,_ETemp
   813   0003BC  C047  F022         	movff	?_read_i2c+1,_ETemp+1
   814   0003C0                     
   815                           ;main.c: 268:     INTCONbits.GIE = 1;
   816   0003C0  8EF2               	bsf	242,7,c	;volatile
   817   0003C2                     
   818                           ;main.c: 270:     vibration_mode = ETemp & 0x00FF;
   819   0003C2  C021  F02C         	movff	_ETemp,_vibration_mode
   820   0003C6                     
   821                           ;main.c: 271:     if (vibration_mode > 1) {
   822   0003C6  0E01               	movlw	1
   823   0003C8  642C               	cpfsgt	_vibration_mode^0,c
   824   0003CA  EFE9  F001         	goto	u3641
   825   0003CE  EFEB  F001         	goto	u3640
   826   0003D2                     u3641:
   827   0003D2  EFFC  F001         	goto	l5399
   828   0003D6                     u3640:
   829   0003D6                     
   830                           ;main.c: 272:         vibration_mode = 1;
   831   0003D6  0E01               	movlw	1
   832   0003D8  6E2C               	movwf	_vibration_mode^0,c
   833   0003DA                     
   834                           ;main.c: 274:         INTCONbits.GIE = 0;
   835   0003DA  9EF2               	bcf	242,7,c	;volatile
   836   0003DC                     
   837                           ;main.c: 275:         write_i2c(0x0010, vibration_mode);
   838   0003DC  0E10               	movlw	16
   839   0003DE  6E46               	movwf	write_i2c@address^0,c
   840   0003E0  0E00               	movlw	0
   841   0003E2  6E47               	movwf	(write_i2c@address+1)^0,c
   842   0003E4  0E00               	movlw	0
   843   0003E6  6E48               	movwf	(write_i2c@address+2)^0,c
   844   0003E8  0E00               	movlw	0
   845   0003EA  6E49               	movwf	(write_i2c@address+3)^0,c
   846   0003EC  C02C  F04A         	movff	_vibration_mode,write_i2c@data
   847   0003F0  6A4B               	clrf	(write_i2c@data+1)^0,c
   848   0003F2  EC7F  F011         	call	_write_i2c	;wreg free
   849   0003F6                     
   850                           ;main.c: 276:         INTCONbits.GIE = 1;
   851   0003F6  8EF2               	bsf	242,7,c	;volatile
   852   0003F8                     l5399:
   853                           
   854                           ;main.c: 279:     NUM = 1;
   855   0003F8  0E00               	movlw	0
   856   0003FA  6E18               	movwf	(_NUM+1)^0,c
   857   0003FC  0E01               	movlw	1
   858   0003FE  6E17               	movwf	_NUM^0,c
   859                           
   860                           ;main.c: 280:     WriteSTLED316SData(NUM, vibration_mode);
   861   000400  C017  F040         	movff	_NUM,WriteSTLED316SData@number
   862   000404  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
   863   000408  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   864   00040C  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
   865   000410                     
   866                           ;main.c: 281:     NUM_REC = 1;
   867   000410  0E00               	movlw	0
   868   000412  6E14               	movwf	(_NUM_REC+1)^0,c
   869   000414  0E01               	movlw	1
   870   000416  6E13               	movwf	_NUM_REC^0,c
   871   000418                     
   872                           ;main.c: 286:     INTCONbits.GIE = 0;
   873   000418  9EF2               	bcf	242,7,c	;volatile
   874   00041A                     
   875                           ;main.c: 287:     ETemp = read_i2c(0x0020);
   876   00041A  0E20               	movlw	32
   877   00041C  6E46               	movwf	read_i2c@address^0,c
   878   00041E  0E00               	movlw	0
   879   000420  6E47               	movwf	(read_i2c@address+1)^0,c
   880   000422  0E00               	movlw	0
   881   000424  6E48               	movwf	(read_i2c@address+2)^0,c
   882   000426  0E00               	movlw	0
   883   000428  6E49               	movwf	(read_i2c@address+3)^0,c
   884   00042A  EC1E  F011         	call	_read_i2c	;wreg free
   885   00042E  C046  F021         	movff	?_read_i2c,_ETemp
   886   000432  C047  F022         	movff	?_read_i2c+1,_ETemp+1
   887   000436                     
   888                           ;main.c: 288:     INTCONbits.GIE = 1;
   889   000436  8EF2               	bsf	242,7,c	;volatile
   890                           
   891                           ;main.c: 290:     Device_ID = ETemp & 0x00FF;
   892   000438  5021               	movf	_ETemp^0,w,c
   893   00043A  6E1B               	movwf	_Device_ID^0,c
   894   00043C  6A1C               	clrf	(_Device_ID+1)^0,c
   895   00043E                     
   896                           ;main.c: 291:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   897   00043E  501C               	movf	(_Device_ID+1)^0,w,c
   898   000440  E109               	bnz	u3650
   899   000442  0E31               	movlw	49
   900   000444  5C1B               	subwf	_Device_ID^0,w,c
   901   000446  A0D8               	btfss	status,0,c
   902   000448  EF28  F002         	goto	u3651
   903   00044C  EF2A  F002         	goto	u3650
   904   000450                     u3651:
   905   000450  EF35  F002         	goto	l5413
   906   000454                     u3650:
   907   000454  501C               	movf	(_Device_ID+1)^0,w,c
   908   000456  E109               	bnz	u3660
   909   000458  0E3B               	movlw	59
   910   00045A  5C1B               	subwf	_Device_ID^0,w,c
   911   00045C  A0D8               	btfss	status,0,c
   912   00045E  EF33  F002         	goto	u3661
   913   000462  EF35  F002         	goto	u3660
   914   000466                     u3661:
   915   000466  EF49  F002         	goto	l5421
   916   00046A                     u3660:
   917   00046A                     l5413:
   918                           
   919                           ;main.c: 292:         Device_ID = 0x31;
   920   00046A  0E00               	movlw	0
   921   00046C  6E1C               	movwf	(_Device_ID+1)^0,c
   922   00046E  0E31               	movlw	49
   923   000470  6E1B               	movwf	_Device_ID^0,c
   924   000472                     
   925                           ;main.c: 294:         INTCONbits.GIE = 0;
   926   000472  9EF2               	bcf	242,7,c	;volatile
   927   000474                     
   928                           ;main.c: 295:         write_i2c(0x0020, Device_ID);
   929   000474  0E20               	movlw	32
   930   000476  6E46               	movwf	write_i2c@address^0,c
   931   000478  0E00               	movlw	0
   932   00047A  6E47               	movwf	(write_i2c@address+1)^0,c
   933   00047C  0E00               	movlw	0
   934   00047E  6E48               	movwf	(write_i2c@address+2)^0,c
   935   000480  0E00               	movlw	0
   936   000482  6E49               	movwf	(write_i2c@address+3)^0,c
   937   000484  C01B  F04A         	movff	_Device_ID,write_i2c@data
   938   000488  C01C  F04B         	movff	_Device_ID+1,write_i2c@data+1
   939   00048C  EC7F  F011         	call	_write_i2c	;wreg free
   940   000490                     
   941                           ;main.c: 296:         INTCONbits.GIE = 1;
   942   000490  8EF2               	bsf	242,7,c	;volatile
   943   000492                     l5421:
   944                           
   945                           ;main.c: 302:     INTCONbits.GIE = 0;
   946   000492  9EF2               	bcf	242,7,c	;volatile
   947   000494                     
   948                           ;main.c: 303:     ETemp = read_i2c(0x0060);
   949   000494  0E60               	movlw	96
   950   000496  6E46               	movwf	read_i2c@address^0,c
   951   000498  0E00               	movlw	0
   952   00049A  6E47               	movwf	(read_i2c@address+1)^0,c
   953   00049C  0E00               	movlw	0
   954   00049E  6E48               	movwf	(read_i2c@address+2)^0,c
   955   0004A0  0E00               	movlw	0
   956   0004A2  6E49               	movwf	(read_i2c@address+3)^0,c
   957   0004A4  EC1E  F011         	call	_read_i2c	;wreg free
   958   0004A8  C046  F021         	movff	?_read_i2c,_ETemp
   959   0004AC  C047  F022         	movff	?_read_i2c+1,_ETemp+1
   960   0004B0                     
   961                           ;main.c: 304:     INTCONbits.GIE = 1;
   962   0004B0  8EF2               	bsf	242,7,c	;volatile
   963   0004B2                     
   964                           ;main.c: 306:     pause_Time = ETemp & 0x00FF;
   965   0004B2  C021  F029         	movff	_ETemp,_pause_Time	;volatile
   966   0004B6                     
   967                           ;main.c: 307:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   968   0004B6  0E2F               	movlw	47
   969   0004B8  6429               	cpfsgt	_pause_Time^0,c	;volatile
   970   0004BA  EF61  F002         	goto	u3671
   971   0004BE  EF63  F002         	goto	u3670
   972   0004C2                     u3671:
   973   0004C2  EF6B  F002         	goto	l5433
   974   0004C6                     u3670:
   975   0004C6  0E35               	movlw	53
   976   0004C8  6429               	cpfsgt	_pause_Time^0,c	;volatile
   977   0004CA  EF69  F002         	goto	u3681
   978   0004CE  EF6B  F002         	goto	u3680
   979   0004D2                     u3681:
   980   0004D2  EFA8  F002         	goto	l5455
   981   0004D6                     u3680:
   982   0004D6                     l5433:
   983                           
   984                           ;main.c: 308:         pause_Time = 0x30;
   985   0004D6  0E30               	movlw	48
   986   0004D8  6E29               	movwf	_pause_Time^0,c	;volatile
   987                           
   988                           ;main.c: 309:         Motor_Pause_Time = 0;
   989   0004DA  0E00               	movlw	0
   990   0004DC  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
   991   0004DE  0E00               	movlw	0
   992   0004E0  6E19               	movwf	_Motor_Pause_Time^0,c
   993   0004E2                     
   994                           ;main.c: 311:         INTCONbits.GIE = 0;
   995   0004E2  9EF2               	bcf	242,7,c	;volatile
   996   0004E4                     
   997                           ;main.c: 312:         write_i2c(0x0060, pause_Time);
   998   0004E4  0E60               	movlw	96
   999   0004E6  6E46               	movwf	write_i2c@address^0,c
  1000   0004E8  0E00               	movlw	0
  1001   0004EA  6E47               	movwf	(write_i2c@address+1)^0,c
  1002   0004EC  0E00               	movlw	0
  1003   0004EE  6E48               	movwf	(write_i2c@address+2)^0,c
  1004   0004F0  0E00               	movlw	0
  1005   0004F2  6E49               	movwf	(write_i2c@address+3)^0,c
  1006   0004F4  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
  1007   0004F8  6A4B               	clrf	(write_i2c@data+1)^0,c
  1008   0004FA  EC7F  F011         	call	_write_i2c	;wreg free
  1009   0004FE                     
  1010                           ;main.c: 313:         INTCONbits.GIE = 1;
  1011   0004FE  8EF2               	bsf	242,7,c	;volatile
  1012                           
  1013                           ;main.c: 314:     } else {
  1014   000500  EFCE  F002         	goto	l209
  1015   000504                     l5441:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;main.c: 318:                 Motor_Pause_Time = 0;
  1019   000504  0E00               	movlw	0
  1020   000506  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  1021   000508  0E00               	movlw	0
  1022   00050A  6E19               	movwf	_Motor_Pause_Time^0,c
  1023                           
  1024                           ;main.c: 319:                 pause_Time = 0x30;
  1025   00050C  0E30               	movlw	48
  1026   00050E  6E29               	movwf	_pause_Time^0,c	;volatile
  1027                           
  1028                           ;main.c: 320:                 break;
  1029   000510  EFCE  F002         	goto	l209
  1030   000514                     l5443:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 323:                 Motor_Pause_Time = 1000;
  1034   000514  0E03               	movlw	3
  1035   000516  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  1036   000518  0EE8               	movlw	232
  1037   00051A  6E19               	movwf	_Motor_Pause_Time^0,c
  1038                           
  1039                           ;main.c: 324:                 break;
  1040   00051C  EFCE  F002         	goto	l209
  1041   000520                     l5445:
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 327:                 Motor_Pause_Time = 2000;
  1045   000520  0E07               	movlw	7
  1046   000522  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  1047   000524  0ED0               	movlw	208
  1048   000526  6E19               	movwf	_Motor_Pause_Time^0,c
  1049                           
  1050                           ;main.c: 328:                 break;
  1051   000528  EFCE  F002         	goto	l209
  1052   00052C                     l5447:
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;main.c: 331:                 Motor_Pause_Time = 3000;
  1056   00052C  0E0B               	movlw	11
  1057   00052E  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  1058   000530  0EB8               	movlw	184
  1059   000532  6E19               	movwf	_Motor_Pause_Time^0,c
  1060                           
  1061                           ;main.c: 332:                 break;
  1062   000534  EFCE  F002         	goto	l209
  1063   000538                     l5449:
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;main.c: 335:                 Motor_Pause_Time = 4000;
  1067   000538  0E0F               	movlw	15
  1068   00053A  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  1069   00053C  0EA0               	movlw	160
  1070   00053E  6E19               	movwf	_Motor_Pause_Time^0,c
  1071                           
  1072                           ;main.c: 336:                 break;
  1073   000540  EFCE  F002         	goto	l209
  1074   000544                     l5451:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;main.c: 339:                 Motor_Pause_Time = 5000;
  1078   000544  0E13               	movlw	19
  1079   000546  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  1080   000548  0E88               	movlw	136
  1081   00054A  6E19               	movwf	_Motor_Pause_Time^0,c
  1082                           
  1083                           ;main.c: 340:                 break;
  1084   00054C  EFCE  F002         	goto	l209
  1085   000550                     l5455:
  1086   000550  5029               	movf	_pause_Time^0,w,c	;volatile
  1087   000552  0100               	movlb	0	; () banked
  1088   000554  6F9E               	movwf	??_main& (0+255),b
  1089   000556  6B9F               	clrf	(??_main+1)& (0+255),b
  1090                           
  1091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1092                           ; Switch size 1, requested type "simple"
  1093                           ; Number of cases is 1, Range of values is 0 to 0
  1094                           ; switch strategies available:
  1095                           ; Name         Instructions Cycles
  1096                           ; simple_byte            4     3 (average)
  1097                           ;	Chosen strategy is simple_byte
  1098   000558  519F               	movf	(??_main+1)& (0+255),w,b
  1099   00055A  0A00               	xorlw	0	; case 0
  1100   00055C  B4D8               	btfsc	status,2,c
  1101   00055E  EFB3  F002         	goto	l6209
  1102   000562  EF82  F002         	goto	l5441
  1103   000566                     l6209:
  1104                           
  1105                           ; BSR set to: 0
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 6, Range of values is 48 to 53
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte           19    10 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112   000566  519E               	movf	??_main& (0+255),w,b
  1113   000568  0A30               	xorlw	48	; case 48
  1114   00056A  B4D8               	btfsc	status,2,c
  1115   00056C  EF82  F002         	goto	l5441
  1116   000570  0A01               	xorlw	1	; case 49
  1117   000572  B4D8               	btfsc	status,2,c
  1118   000574  EF8A  F002         	goto	l5443
  1119   000578  0A03               	xorlw	3	; case 50
  1120   00057A  B4D8               	btfsc	status,2,c
  1121   00057C  EF90  F002         	goto	l5445
  1122   000580  0A01               	xorlw	1	; case 51
  1123   000582  B4D8               	btfsc	status,2,c
  1124   000584  EF96  F002         	goto	l5447
  1125   000588  0A07               	xorlw	7	; case 52
  1126   00058A  B4D8               	btfsc	status,2,c
  1127   00058C  EF9C  F002         	goto	l5449
  1128   000590  0A01               	xorlw	1	; case 53
  1129   000592  B4D8               	btfsc	status,2,c
  1130   000594  EFA2  F002         	goto	l5451
  1131   000598  EF82  F002         	goto	l5441
  1132   00059C                     l209:
  1133                           
  1134                           ;main.c: 347:     INTCONbits.GIE = 0;
  1135   00059C  9EF2               	bcf	242,7,c	;volatile
  1136   00059E                     
  1137                           ;main.c: 348:     ETemp = read_i2c(0x0050);
  1138   00059E  0E50               	movlw	80
  1139   0005A0  6E46               	movwf	read_i2c@address^0,c
  1140   0005A2  0E00               	movlw	0
  1141   0005A4  6E47               	movwf	(read_i2c@address+1)^0,c
  1142   0005A6  0E00               	movlw	0
  1143   0005A8  6E48               	movwf	(read_i2c@address+2)^0,c
  1144   0005AA  0E00               	movlw	0
  1145   0005AC  6E49               	movwf	(read_i2c@address+3)^0,c
  1146   0005AE  EC1E  F011         	call	_read_i2c	;wreg free
  1147   0005B2  C046  F021         	movff	?_read_i2c,_ETemp
  1148   0005B6  C047  F022         	movff	?_read_i2c+1,_ETemp+1
  1149   0005BA                     
  1150                           ;main.c: 349:     INTCONbits.GIE = 1;
  1151   0005BA  8EF2               	bsf	242,7,c	;volatile
  1152   0005BC                     
  1153                           ;main.c: 351:     delay_motor_stop_time = ETemp & 0x00FF;
  1154   0005BC  C021  F027         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1155   0005C0                     
  1156                           ;main.c: 352:     if (delay_motor_stop_time > 0x96) {
  1157   0005C0  0E96               	movlw	150
  1158   0005C2  6427               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1159   0005C4  EFE6  F002         	goto	u3691
  1160   0005C8  EFE8  F002         	goto	u3690
  1161   0005CC                     u3691:
  1162   0005CC  EFFF  F002         	goto	l219
  1163   0005D0                     u3690:
  1164   0005D0                     
  1165                           ;main.c: 353:         delay_motor_stop_time = 0x00;
  1166   0005D0  0E00               	movlw	0
  1167   0005D2  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  1168   0005D4                     
  1169                           ;main.c: 355:         INTCONbits.GIE = 0;
  1170   0005D4  9EF2               	bcf	242,7,c	;volatile
  1171   0005D6                     
  1172                           ;main.c: 356:         write_i2c(0x0050, delay_motor_stop_time);
  1173   0005D6  0E50               	movlw	80
  1174   0005D8  6E46               	movwf	write_i2c@address^0,c
  1175   0005DA  0E00               	movlw	0
  1176   0005DC  6E47               	movwf	(write_i2c@address+1)^0,c
  1177   0005DE  0E00               	movlw	0
  1178   0005E0  6E48               	movwf	(write_i2c@address+2)^0,c
  1179   0005E2  0E00               	movlw	0
  1180   0005E4  6E49               	movwf	(write_i2c@address+3)^0,c
  1181   0005E6  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1182   0005EA  6A4B               	clrf	(write_i2c@data+1)^0,c
  1183   0005EC  EC7F  F011         	call	_write_i2c	;wreg free
  1184   0005F0                     
  1185                           ;main.c: 357:         INTCONbits.GIE = 1;
  1186   0005F0  8EF2               	bsf	242,7,c	;volatile
  1187   0005F2                     
  1188                           ;main.c: 359:         Motor_Stop_Delay_Time = 0;
  1189   0005F2  0E00               	movlw	0
  1190   0005F4  6E1E               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1191   0005F6  0E00               	movlw	0
  1192   0005F8  6E1D               	movwf	_Motor_Stop_Delay_Time^0,c
  1193                           
  1194                           ;main.c: 360:     } else {
  1195   0005FA  EF02  F003         	goto	l220
  1196   0005FE                     l219:
  1197                           
  1198                           ;main.c: 361:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1199   0005FE  C027  F01D         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1200   000602  6A1E               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1201   000604                     l220:
  1202                           
  1203                           ;main.c: 367:     INTCONbits.GIE = 0;
  1204   000604  9EF2               	bcf	242,7,c	;volatile
  1205   000606                     
  1206                           ;main.c: 368:     ETemp = read_i2c(0x0040);
  1207   000606  0E40               	movlw	64
  1208   000608  6E46               	movwf	read_i2c@address^0,c
  1209   00060A  0E00               	movlw	0
  1210   00060C  6E47               	movwf	(read_i2c@address+1)^0,c
  1211   00060E  0E00               	movlw	0
  1212   000610  6E48               	movwf	(read_i2c@address+2)^0,c
  1213   000612  0E00               	movlw	0
  1214   000614  6E49               	movwf	(read_i2c@address+3)^0,c
  1215   000616  EC1E  F011         	call	_read_i2c	;wreg free
  1216   00061A  C046  F021         	movff	?_read_i2c,_ETemp
  1217   00061E  C047  F022         	movff	?_read_i2c+1,_ETemp+1
  1218   000622                     
  1219                           ;main.c: 369:     INTCONbits.GIE = 1;
  1220   000622  8EF2               	bsf	242,7,c	;volatile
  1221   000624                     
  1222                           ;main.c: 370:     vib_Time = ETemp & 0x00FF;
  1223   000624  C021  F028         	movff	_ETemp,_vib_Time	;volatile
  1224   000628                     
  1225                           ;main.c: 372:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85
  1226   000628  0E81               	movlw	129
  1227   00062A  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1228   00062C  B4D8               	btfsc	status,2,c
  1229   00062E  EF1B  F003         	goto	u3701
  1230   000632  EF1D  F003         	goto	u3700
  1231   000636                     u3701:
  1232   000636  EF96  F003         	goto	l5519
  1233   00063A                     u3700:
  1234   00063A  0E82               	movlw	130
  1235   00063C  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1236   00063E  B4D8               	btfsc	status,2,c
  1237   000640  EF24  F003         	goto	u3711
  1238   000644  EF26  F003         	goto	u3710
  1239   000648                     u3711:
  1240   000648  EF96  F003         	goto	l5519
  1241   00064C                     u3710:
  1242   00064C  0E83               	movlw	131
  1243   00064E  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1244   000650  B4D8               	btfsc	status,2,c
  1245   000652  EF2D  F003         	goto	u3721
  1246   000656  EF2F  F003         	goto	u3720
  1247   00065A                     u3721:
  1248   00065A  EF96  F003         	goto	l5519
  1249   00065E                     u3720:
  1250   00065E  0E84               	movlw	132
  1251   000660  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1252   000662  B4D8               	btfsc	status,2,c
  1253   000664  EF36  F003         	goto	u3731
  1254   000668  EF38  F003         	goto	u3730
  1255   00066C                     u3731:
  1256   00066C  EF96  F003         	goto	l5519
  1257   000670                     u3730:
  1258   000670  0E85               	movlw	133
  1259   000672  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1260   000674  B4D8               	btfsc	status,2,c
  1261   000676  EF3F  F003         	goto	u3741
  1262   00067A  EF41  F003         	goto	u3740
  1263   00067E                     u3741:
  1264   00067E  EF96  F003         	goto	l5519
  1265   000682                     u3740:
  1266   000682  0E86               	movlw	134
  1267   000684  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1268   000686  B4D8               	btfsc	status,2,c
  1269   000688  EF48  F003         	goto	u3751
  1270   00068C  EF4A  F003         	goto	u3750
  1271   000690                     u3751:
  1272   000690  EF96  F003         	goto	l5519
  1273   000694                     u3750:
  1274   000694  0E87               	movlw	135
  1275   000696  1828               	xorwf	_vib_Time^0,w,c	;volatile
  1276   000698  B4D8               	btfsc	status,2,c
  1277   00069A  EF51  F003         	goto	u3761
  1278   00069E  EF53  F003         	goto	u3760
  1279   0006A2                     u3761:
  1280   0006A2  EF96  F003         	goto	l5519
  1281   0006A6                     u3760:
  1282   0006A6                     
  1283                           ;main.c: 373:             && vib_Time != 0x86 && vib_Time != 0x87)) {;main.c: 374:      
      +                             Vmotor_Time = 2000;
  1284   0006A6  0E07               	movlw	7
  1285   0006A8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1286   0006AA  0ED0               	movlw	208
  1287   0006AC  6E56               	movwf	_Vmotor_Time^0,c
  1288                           
  1289                           ;main.c: 375:         vib_Time = 0x82;
  1290   0006AE  0E82               	movlw	130
  1291   0006B0  6E28               	movwf	_vib_Time^0,c	;volatile
  1292   0006B2                     
  1293                           ;main.c: 377:         INTCONbits.GIE = 0;
  1294   0006B2  9EF2               	bcf	242,7,c	;volatile
  1295   0006B4                     
  1296                           ;main.c: 378:         write_i2c(0x0040, vib_Time);
  1297   0006B4  0E40               	movlw	64
  1298   0006B6  6E46               	movwf	write_i2c@address^0,c
  1299   0006B8  0E00               	movlw	0
  1300   0006BA  6E47               	movwf	(write_i2c@address+1)^0,c
  1301   0006BC  0E00               	movlw	0
  1302   0006BE  6E48               	movwf	(write_i2c@address+2)^0,c
  1303   0006C0  0E00               	movlw	0
  1304   0006C2  6E49               	movwf	(write_i2c@address+3)^0,c
  1305   0006C4  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  1306   0006C8  6A4B               	clrf	(write_i2c@data+1)^0,c
  1307   0006CA  EC7F  F011         	call	_write_i2c	;wreg free
  1308   0006CE                     
  1309                           ;main.c: 379:         INTCONbits.GIE = 1;
  1310   0006CE  8EF2               	bsf	242,7,c	;volatile
  1311                           
  1312                           ;main.c: 380:     } else {
  1313   0006D0  EFC0  F003         	goto	l5521
  1314   0006D4                     l5503:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 383:                 Vmotor_Time = 1000;
  1318   0006D4  0E03               	movlw	3
  1319   0006D6  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1320   0006D8  0EE8               	movlw	232
  1321   0006DA  6E56               	movwf	_Vmotor_Time^0,c
  1322                           
  1323                           ;main.c: 384:                 break;
  1324   0006DC  EFC0  F003         	goto	l5521
  1325   0006E0                     l5505:
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;main.c: 387:                 Vmotor_Time = 2000;
  1329   0006E0  0E07               	movlw	7
  1330   0006E2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1331   0006E4  0ED0               	movlw	208
  1332   0006E6  6E56               	movwf	_Vmotor_Time^0,c
  1333                           
  1334                           ;main.c: 388:                 vib_Time = 0x82;
  1335   0006E8  0E82               	movlw	130
  1336   0006EA  6E28               	movwf	_vib_Time^0,c	;volatile
  1337                           
  1338                           ;main.c: 389:                 break;
  1339   0006EC  EFC0  F003         	goto	l5521
  1340   0006F0                     l5507:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;main.c: 391:                 Vmotor_Time = 3000;
  1344   0006F0  0E0B               	movlw	11
  1345   0006F2  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1346   0006F4  0EB8               	movlw	184
  1347   0006F6  6E56               	movwf	_Vmotor_Time^0,c
  1348                           
  1349                           ;main.c: 392:                 break;
  1350   0006F8  EFC0  F003         	goto	l5521
  1351   0006FC                     l5509:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;main.c: 394:                 Vmotor_Time = 4000;
  1355   0006FC  0E0F               	movlw	15
  1356   0006FE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1357   000700  0EA0               	movlw	160
  1358   000702  6E56               	movwf	_Vmotor_Time^0,c
  1359                           
  1360                           ;main.c: 395:                 break;
  1361   000704  EFC0  F003         	goto	l5521
  1362   000708                     l5511:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;main.c: 397:                 Vmotor_Time = 5000;
  1366   000708  0E13               	movlw	19
  1367   00070A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1368   00070C  0E88               	movlw	136
  1369   00070E  6E56               	movwf	_Vmotor_Time^0,c
  1370                           
  1371                           ;main.c: 398:                 break;
  1372   000710  EFC0  F003         	goto	l5521
  1373   000714                     l5513:
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;main.c: 400:                 Vmotor_Time = 800;
  1377   000714  0E03               	movlw	3
  1378   000716  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1379   000718  0E20               	movlw	32
  1380   00071A  6E56               	movwf	_Vmotor_Time^0,c
  1381                           
  1382                           ;main.c: 401:                 break;
  1383   00071C  EFC0  F003         	goto	l5521
  1384   000720                     l5515:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;main.c: 403:                 Vmotor_Time = 1500;
  1388   000720  0E05               	movlw	5
  1389   000722  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1390   000724  0EDC               	movlw	220
  1391   000726  6E56               	movwf	_Vmotor_Time^0,c
  1392                           
  1393                           ;main.c: 404:                 break;
  1394   000728  EFC0  F003         	goto	l5521
  1395   00072C                     l5519:
  1396   00072C  5028               	movf	_vib_Time^0,w,c	;volatile
  1397   00072E  0100               	movlb	0	; () banked
  1398   000730  6F9E               	movwf	??_main& (0+255),b
  1399   000732  6B9F               	clrf	(??_main+1)& (0+255),b
  1400                           
  1401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1402                           ; Switch size 1, requested type "simple"
  1403                           ; Number of cases is 1, Range of values is 0 to 0
  1404                           ; switch strategies available:
  1405                           ; Name         Instructions Cycles
  1406                           ; simple_byte            4     3 (average)
  1407                           ;	Chosen strategy is simple_byte
  1408   000734  519F               	movf	(??_main+1)& (0+255),w,b
  1409   000736  0A00               	xorlw	0	; case 0
  1410   000738  B4D8               	btfsc	status,2,c
  1411   00073A  EFA1  F003         	goto	l6211
  1412   00073E  EF70  F003         	goto	l5505
  1413   000742                     l6211:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ; Switch size 1, requested type "simple"
  1417                           ; Number of cases is 7, Range of values is 129 to 135
  1418                           ; switch strategies available:
  1419                           ; Name         Instructions Cycles
  1420                           ; simple_byte           22    12 (average)
  1421                           ;	Chosen strategy is simple_byte
  1422   000742  519E               	movf	??_main& (0+255),w,b
  1423   000744  0A81               	xorlw	129	; case 129
  1424   000746  B4D8               	btfsc	status,2,c
  1425   000748  EF6A  F003         	goto	l5503
  1426   00074C  0A03               	xorlw	3	; case 130
  1427   00074E  B4D8               	btfsc	status,2,c
  1428   000750  EF70  F003         	goto	l5505
  1429   000754  0A01               	xorlw	1	; case 131
  1430   000756  B4D8               	btfsc	status,2,c
  1431   000758  EF78  F003         	goto	l5507
  1432   00075C  0A07               	xorlw	7	; case 132
  1433   00075E  B4D8               	btfsc	status,2,c
  1434   000760  EF7E  F003         	goto	l5509
  1435   000764  0A01               	xorlw	1	; case 133
  1436   000766  B4D8               	btfsc	status,2,c
  1437   000768  EF84  F003         	goto	l5511
  1438   00076C  0A03               	xorlw	3	; case 134
  1439   00076E  B4D8               	btfsc	status,2,c
  1440   000770  EF8A  F003         	goto	l5513
  1441   000774  0A01               	xorlw	1	; case 135
  1442   000776  B4D8               	btfsc	status,2,c
  1443   000778  EF90  F003         	goto	l5515
  1444   00077C  EF70  F003         	goto	l5505
  1445   000780                     l5521:
  1446                           
  1447                           ;main.c: 411:         PWM_reg = 0x3F;
  1448   000780  0E3F               	movlw	63
  1449   000782  6E58               	movwf	_PWM_reg^0,c
  1450   000784                     
  1451                           ;main.c: 413:     INTCONbits.GIE=0;
  1452   000784  9EF2               	bcf	242,7,c	;volatile
  1453   000786                     
  1454                           ;main.c: 414:     ETemp = read_i2c(0x0030);
  1455   000786  0E30               	movlw	48
  1456   000788  6E46               	movwf	read_i2c@address^0,c
  1457   00078A  0E00               	movlw	0
  1458   00078C  6E47               	movwf	(read_i2c@address+1)^0,c
  1459   00078E  0E00               	movlw	0
  1460   000790  6E48               	movwf	(read_i2c@address+2)^0,c
  1461   000792  0E00               	movlw	0
  1462   000794  6E49               	movwf	(read_i2c@address+3)^0,c
  1463   000796  EC1E  F011         	call	_read_i2c	;wreg free
  1464   00079A  C046  F021         	movff	?_read_i2c,_ETemp
  1465   00079E  C047  F022         	movff	?_read_i2c+1,_ETemp+1
  1466   0007A2                     
  1467                           ;main.c: 415:     INTCONbits.GIE=1;
  1468   0007A2  8EF2               	bsf	242,7,c	;volatile
  1469   0007A4                     
  1470                           ;main.c: 417:     PWM_reg = ETemp & 0x00FF;
  1471   0007A4  C021  F058         	movff	_ETemp,_PWM_reg
  1472   0007A8                     
  1473                           ;main.c: 419:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1474   0007A8  5058               	movf	_PWM_reg^0,w,c
  1475   0007AA  B4D8               	btfsc	status,2,c
  1476   0007AC  EFDA  F003         	goto	u3771
  1477   0007B0  EFDC  F003         	goto	u3770
  1478   0007B4                     u3771:
  1479   0007B4  EFFF  F003         	goto	l5545
  1480   0007B8                     u3770:
  1481   0007B8  0E3F               	movlw	63
  1482   0007BA  1858               	xorwf	_PWM_reg^0,w,c
  1483   0007BC  B4D8               	btfsc	status,2,c
  1484   0007BE  EFE3  F003         	goto	u3781
  1485   0007C2  EFE5  F003         	goto	u3780
  1486   0007C6                     u3781:
  1487   0007C6  EFFF  F003         	goto	l5545
  1488   0007CA                     u3780:
  1489   0007CA  0E7F               	movlw	127
  1490   0007CC  1858               	xorwf	_PWM_reg^0,w,c
  1491   0007CE  B4D8               	btfsc	status,2,c
  1492   0007D0  EFEC  F003         	goto	u3791
  1493   0007D4  EFEE  F003         	goto	u3790
  1494   0007D8                     u3791:
  1495   0007D8  EFFF  F003         	goto	l5545
  1496   0007DC                     u3790:
  1497   0007DC                     
  1498                           ;main.c: 420:     {;main.c: 421:         PWM_reg=0x3F;
  1499   0007DC  0E3F               	movlw	63
  1500   0007DE  6E58               	movwf	_PWM_reg^0,c
  1501   0007E0                     
  1502                           ;main.c: 423:         INTCONbits.GIE=0;
  1503   0007E0  9EF2               	bcf	242,7,c	;volatile
  1504   0007E2                     
  1505                           ;main.c: 424:         write_i2c(0x0030,PWM_reg);
  1506   0007E2  0E30               	movlw	48
  1507   0007E4  6E46               	movwf	write_i2c@address^0,c
  1508   0007E6  0E00               	movlw	0
  1509   0007E8  6E47               	movwf	(write_i2c@address+1)^0,c
  1510   0007EA  0E00               	movlw	0
  1511   0007EC  6E48               	movwf	(write_i2c@address+2)^0,c
  1512   0007EE  0E00               	movlw	0
  1513   0007F0  6E49               	movwf	(write_i2c@address+3)^0,c
  1514   0007F2  C058  F04A         	movff	_PWM_reg,write_i2c@data
  1515   0007F6  6A4B               	clrf	(write_i2c@data+1)^0,c
  1516   0007F8  EC7F  F011         	call	_write_i2c	;wreg free
  1517   0007FC                     
  1518                           ;main.c: 425:         INTCONbits.GIE=1;
  1519   0007FC  8EF2               	bsf	242,7,c	;volatile
  1520   0007FE                     l5545:
  1521                           
  1522                           ;main.c: 428:     errorcounter = 30;
  1523   0007FE  0E1E               	movlw	30
  1524   000800  6E52               	movwf	_errorcounter^0,c	;volatile
  1525   000802  0E00               	movlw	0
  1526   000804  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1527   000806  0E00               	movlw	0
  1528   000808  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1529   00080A  0E00               	movlw	0
  1530   00080C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1531                           
  1532                           ;main.c: 429:     MotorPosition_Init();
  1533   00080E  EC7D  F00C         	call	_MotorPosition_Init	;wreg free
  1534   000812                     
  1535                           ;main.c: 430:     LATDbits.LATD1 = 0;
  1536   000812  928C               	bcf	140,1,c	;volatile
  1537   000814                     
  1538                           ;main.c: 435:     INTCONbits.GIE=0;
  1539   000814  9EF2               	bcf	242,7,c	;volatile
  1540                           
  1541                           ;main.c: 436:     ETemp = read_i2c(0x0070);
  1542   000816  0E70               	movlw	112
  1543   000818  6E46               	movwf	read_i2c@address^0,c
  1544   00081A  0E00               	movlw	0
  1545   00081C  6E47               	movwf	(read_i2c@address+1)^0,c
  1546   00081E  0E00               	movlw	0
  1547   000820  6E48               	movwf	(read_i2c@address+2)^0,c
  1548   000822  0E00               	movlw	0
  1549   000824  6E49               	movwf	(read_i2c@address+3)^0,c
  1550   000826  EC1E  F011         	call	_read_i2c	;wreg free
  1551   00082A  C046  F021         	movff	?_read_i2c,_ETemp
  1552   00082E  C047  F022         	movff	?_read_i2c+1,_ETemp+1
  1553   000832                     
  1554                           ;main.c: 438:     INTCONbits.GIE=1;
  1555   000832  8EF2               	bsf	242,7,c	;volatile
  1556   000834                     
  1557                           ;main.c: 440:     dutyCycle_reg = ETemp & 0xFF;
  1558   000834  5021               	movf	_ETemp^0,w,c
  1559   000836  6E0B               	movwf	_dutyCycle_reg^0,c
  1560   000838  6A0C               	clrf	(_dutyCycle_reg+1)^0,c
  1561   00083A                     
  1562                           ;main.c: 442:     if(dutyCycle_reg != 0x00 && dutyCycle_reg != 0x01 && dutyCycle_reg != 
      +                          0x02 && dutyCycle_reg != 0x03)
  1563   00083A  500B               	movf	_dutyCycle_reg^0,w,c
  1564   00083C  100C               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1565   00083E  B4D8               	btfsc	status,2,c
  1566   000840  EF24  F004         	goto	u3801
  1567   000844  EF26  F004         	goto	u3800
  1568   000848                     u3801:
  1569   000848  EF71  F004         	goto	l5583
  1570   00084C                     u3800:
  1571   00084C  040B               	decf	_dutyCycle_reg^0,w,c
  1572   00084E  100C               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1573   000850  B4D8               	btfsc	status,2,c
  1574   000852  EF2D  F004         	goto	u3811
  1575   000856  EF2F  F004         	goto	u3810
  1576   00085A                     u3811:
  1577   00085A  EF71  F004         	goto	l5583
  1578   00085E                     u3810:
  1579   00085E  0E02               	movlw	2
  1580   000860  180B               	xorwf	_dutyCycle_reg^0,w,c
  1581   000862  100C               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1582   000864  B4D8               	btfsc	status,2,c
  1583   000866  EF37  F004         	goto	u3821
  1584   00086A  EF39  F004         	goto	u3820
  1585   00086E                     u3821:
  1586   00086E  EF71  F004         	goto	l5583
  1587   000872                     u3820:
  1588   000872  0E03               	movlw	3
  1589   000874  180B               	xorwf	_dutyCycle_reg^0,w,c
  1590   000876  100C               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1591   000878  B4D8               	btfsc	status,2,c
  1592   00087A  EF41  F004         	goto	u3831
  1593   00087E  EF43  F004         	goto	u3830
  1594   000882                     u3831:
  1595   000882  EF71  F004         	goto	l5583
  1596   000886                     u3830:
  1597   000886                     
  1598                           ;main.c: 443:     {;main.c: 444:         dutyCycle_reg = 0x00;
  1599   000886  0E00               	movlw	0
  1600   000888  6E0C               	movwf	(_dutyCycle_reg+1)^0,c
  1601   00088A  0E00               	movlw	0
  1602   00088C  6E0B               	movwf	_dutyCycle_reg^0,c
  1603   00088E                     
  1604                           ;main.c: 445:         INTCONbits.GIE=0;
  1605   00088E  9EF2               	bcf	242,7,c	;volatile
  1606   000890                     
  1607                           ;main.c: 446:         write_i2c(0x0070,dutyCycle_reg);
  1608   000890  0E70               	movlw	112
  1609   000892  6E46               	movwf	write_i2c@address^0,c
  1610   000894  0E00               	movlw	0
  1611   000896  6E47               	movwf	(write_i2c@address+1)^0,c
  1612   000898  0E00               	movlw	0
  1613   00089A  6E48               	movwf	(write_i2c@address+2)^0,c
  1614   00089C  0E00               	movlw	0
  1615   00089E  6E49               	movwf	(write_i2c@address+3)^0,c
  1616   0008A0  C00B  F04A         	movff	_dutyCycle_reg,write_i2c@data
  1617   0008A4  C00C  F04B         	movff	_dutyCycle_reg+1,write_i2c@data+1
  1618   0008A8  EC7F  F011         	call	_write_i2c	;wreg free
  1619   0008AC                     
  1620                           ;main.c: 447:         INTCONbits.GIE=1;
  1621   0008AC  8EF2               	bsf	242,7,c	;volatile
  1622                           
  1623                           ;main.c: 448:     }
  1624   0008AE  EF90  F004         	goto	l5585
  1625   0008B2                     l5571:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 452:           duty_cycle = 0;
  1629   0008B2  0E00               	movlw	0
  1630   0008B4  6E0A               	movwf	(_duty_cycle+1)^0,c
  1631   0008B6  0E00               	movlw	0
  1632   0008B8  6E09               	movwf	_duty_cycle^0,c
  1633                           
  1634                           ;main.c: 453:           break;
  1635   0008BA  EF90  F004         	goto	l5585
  1636   0008BE                     l5573:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;main.c: 455:           duty_cycle = 7;
  1640   0008BE  0E00               	movlw	0
  1641   0008C0  6E0A               	movwf	(_duty_cycle+1)^0,c
  1642   0008C2  0E07               	movlw	7
  1643   0008C4  6E09               	movwf	_duty_cycle^0,c
  1644                           
  1645                           ;main.c: 456:           break;
  1646   0008C6  EF90  F004         	goto	l5585
  1647   0008CA                     l5575:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 458:           duty_cycle = 10;
  1651   0008CA  0E00               	movlw	0
  1652   0008CC  6E0A               	movwf	(_duty_cycle+1)^0,c
  1653   0008CE  0E0A               	movlw	10
  1654   0008D0  6E09               	movwf	_duty_cycle^0,c
  1655                           
  1656                           ;main.c: 459:           break;
  1657   0008D2  EF90  F004         	goto	l5585
  1658   0008D6                     l5577:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;main.c: 461:           duty_cycle = 20;
  1662   0008D6  0E00               	movlw	0
  1663   0008D8  6E0A               	movwf	(_duty_cycle+1)^0,c
  1664   0008DA  0E14               	movlw	20
  1665   0008DC  6E09               	movwf	_duty_cycle^0,c
  1666                           
  1667                           ;main.c: 462:           break;
  1668   0008DE  EF90  F004         	goto	l5585
  1669   0008E2                     l5583:
  1670   0008E2  C00B  F09E         	movff	_dutyCycle_reg,??_main
  1671   0008E6  C00C  F09F         	movff	_dutyCycle_reg+1,??_main+1
  1672                           
  1673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 1, Range of values is 0 to 0
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte            4     3 (average)
  1679                           ;	Chosen strategy is simple_byte
  1680   0008EA  0100               	movlb	0	; () banked
  1681   0008EC  519F               	movf	(??_main+1)& (0+255),w,b
  1682   0008EE  0A00               	xorlw	0	; case 0
  1683   0008F0  B4D8               	btfsc	status,2,c
  1684   0008F2  EF7D  F004         	goto	l6213
  1685   0008F6  EF59  F004         	goto	l5571
  1686   0008FA                     l6213:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 4, Range of values is 0 to 3
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte           13     7 (average)
  1694                           ;	Chosen strategy is simple_byte
  1695   0008FA  519E               	movf	??_main& (0+255),w,b
  1696   0008FC  0A00               	xorlw	0	; case 0
  1697   0008FE  B4D8               	btfsc	status,2,c
  1698   000900  EF59  F004         	goto	l5571
  1699   000904  0A01               	xorlw	1	; case 1
  1700   000906  B4D8               	btfsc	status,2,c
  1701   000908  EF5F  F004         	goto	l5573
  1702   00090C  0A03               	xorlw	3	; case 2
  1703   00090E  B4D8               	btfsc	status,2,c
  1704   000910  EF65  F004         	goto	l5575
  1705   000914  0A01               	xorlw	1	; case 3
  1706   000916  B4D8               	btfsc	status,2,c
  1707   000918  EF6B  F004         	goto	l5577
  1708   00091C  EF59  F004         	goto	l5571
  1709   000920                     l5585:
  1710                           
  1711                           ;main.c: 486:         pwm_set(duty_cycle);
  1712   000920  C009  F038         	movff	_duty_cycle,pwm_set@duty
  1713   000924  C00A  F039         	movff	_duty_cycle+1,pwm_set@duty+1
  1714   000928  EC75  F012         	call	_pwm_set	;wreg free
  1715   00092C  0004               	clrwdt		;# 
  1716   00092E                     
  1717                           ;main.c: 489:         errorcounter = 30;
  1718   00092E  0E1E               	movlw	30
  1719   000930  6E52               	movwf	_errorcounter^0,c	;volatile
  1720   000932  0E00               	movlw	0
  1721   000934  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1722   000936  0E00               	movlw	0
  1723   000938  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1724   00093A  0E00               	movlw	0
  1725   00093C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1726   00093E                     
  1727                           ;main.c: 490:         AD_capture_BattVoltage();
  1728   00093E  ECE6  F011         	call	_AD_capture_BattVoltage	;wreg free
  1729                           
  1730                           ;main.c: 492:         switch (OpMode) {
  1731   000942  EFBB  F008         	goto	l5875
  1732   000946                     l245:
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;main.c: 498:                 NUM = NUM_REC;
  1736   000946  C013  F017         	movff	_NUM_REC,_NUM
  1737   00094A  C014  F018         	movff	_NUM_REC+1,_NUM+1
  1738                           
  1739                           ;main.c: 499:                 if (PORTBbits.RB4 == 0) {
  1740   00094E  B881               	btfsc	129,4,c	;volatile
  1741   000950  EFAC  F004         	goto	u3841
  1742   000954  EFAE  F004         	goto	u3840
  1743   000958                     u3841:
  1744   000958  EFE4  F004         	goto	l5597
  1745   00095C                     u3840:
  1746   00095C                     
  1747                           ; BSR set to: 0
  1748                           ;main.c: 500:                     if (PORTBbits.RB4 == 0){
  1749   00095C  B881               	btfsc	129,4,c	;volatile
  1750   00095E  EFB3  F004         	goto	u3851
  1751   000962  EFB5  F004         	goto	u3850
  1752   000966                     u3851:
  1753   000966  EFE4  F004         	goto	l5597
  1754   00096A                     u3850:
  1755   00096A                     
  1756                           ; BSR set to: 0
  1757                           ;main.c: 501:                       duty_cycle = PWM_Selection(dutyCycle_reg);
  1758   00096A  C00B  F04C         	movff	_dutyCycle_reg,PWM_Selection@msg
  1759   00096E  C00C  F04D         	movff	_dutyCycle_reg+1,PWM_Selection@msg+1
  1760   000972  EC83  F00D         	call	_PWM_Selection	;wreg free
  1761   000976  C04C  F009         	movff	?_PWM_Selection,_duty_cycle
  1762   00097A  C04D  F00A         	movff	?_PWM_Selection+1,_duty_cycle+1
  1763                           
  1764                           ;main.c: 502:                       dutyCycle_reg = read_i2c(0x0070);
  1765   00097E  0E70               	movlw	112
  1766   000980  6E46               	movwf	read_i2c@address^0,c
  1767   000982  0E00               	movlw	0
  1768   000984  6E47               	movwf	(read_i2c@address+1)^0,c
  1769   000986  0E00               	movlw	0
  1770   000988  6E48               	movwf	(read_i2c@address+2)^0,c
  1771   00098A  0E00               	movlw	0
  1772   00098C  6E49               	movwf	(read_i2c@address+3)^0,c
  1773   00098E  EC1E  F011         	call	_read_i2c	;wreg free
  1774   000992  C046  F00B         	movff	?_read_i2c,_dutyCycle_reg
  1775   000996  C047  F00C         	movff	?_read_i2c+1,_dutyCycle_reg+1
  1776                           
  1777                           ;main.c: 503:                       ToggleVIB_Mode();
  1778   00099A  ECC7  F011         	call	_ToggleVIB_Mode	;wreg free
  1779                           
  1780                           ;main.c: 504:                       WriteSTLED316SVibMode(dutyCycle_reg, vibration_mode)
      +                          ;
  1781   00099E  C00B  F03E         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1782   0009A2  C00C  F03F         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1783   0009A6  C02C  F040         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1784   0009AA  EC01  F00E         	call	_WriteSTLED316SVibMode	;wreg free
  1785   0009AE                     
  1786                           ;main.c: 505:                       _delay((unsigned long)((500)*(8000000/4000.0)));
  1787   0009AE  0E06               	movlw	6
  1788   0009B0  0100               	movlb	0	; () banked
  1789   0009B2  6F9F               	movwf	(??_main+1)& (0+255),b
  1790   0009B4  0E13               	movlw	19
  1791   0009B6  6F9E               	movwf	??_main& (0+255),b
  1792   0009B8  0EAD               	movlw	173
  1793   0009BA                     u4217:
  1794   0009BA  2EE8               	decfsz	wreg,f,c
  1795   0009BC  D7FE               	bra	u4217
  1796   0009BE  2F9E               	decfsz	??_main& (0+255),f,b
  1797   0009C0  D7FC               	bra	u4217
  1798   0009C2  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  1799   0009C4  D7FA               	bra	u4217
  1800   0009C6  D000               	nop2	
  1801   0009C8                     l5597:
  1802                           
  1803                           ;main.c: 529:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1804   0009C8  B681               	btfsc	129,3,c	;volatile
  1805   0009CA  EFE9  F004         	goto	u3861
  1806   0009CE  EFEB  F004         	goto	u3860
  1807   0009D2                     u3861:
  1808   0009D2  EFA0  F005         	goto	l5639
  1809   0009D6                     u3860:
  1810   0009D6  0E63               	movlw	99
  1811   0009D8  1817               	xorwf	_NUM^0,w,c
  1812   0009DA  1018               	iorwf	(_NUM+1)^0,w,c
  1813   0009DC  B4D8               	btfsc	status,2,c
  1814   0009DE  EFF3  F004         	goto	u3871
  1815   0009E2  EFF5  F004         	goto	u3870
  1816   0009E6                     u3871:
  1817   0009E6  EFA0  F005         	goto	l5639
  1818   0009EA                     u3870:
  1819   0009EA                     
  1820                           ;main.c: 530:                     if(PORTBbits.RB3 == 0){
  1821   0009EA  B681               	btfsc	129,3,c	;volatile
  1822   0009EC  EFFA  F004         	goto	u3881
  1823   0009F0  EFFC  F004         	goto	u3880
  1824   0009F4                     u3881:
  1825   0009F4  EFA4  F005         	goto	l5641
  1826   0009F8                     u3880:
  1827   0009F8                     
  1828                           ;main.c: 532:                       if (holdTimeRight >= 1000 && NUM <= 89)
  1829   0009F8  BE06               	btfsc	(_holdTimeRight+1)^0,7,c
  1830   0009FA  EF08  F005         	goto	u3891
  1831   0009FE  0EE8               	movlw	232
  1832   000A00  5C05               	subwf	_holdTimeRight^0,w,c
  1833   000A02  0E03               	movlw	3
  1834   000A04  5806               	subwfb	(_holdTimeRight+1)^0,w,c
  1835   000A06  A0D8               	btfss	status,0,c
  1836   000A08  EF08  F005         	goto	u3891
  1837   000A0C  EF0A  F005         	goto	u3890
  1838   000A10                     u3891:
  1839   000A10  EF32  F005         	goto	l5613
  1840   000A14                     u3890:
  1841   000A14  5018               	movf	(_NUM+1)^0,w,c
  1842   000A16  E107               	bnz	u3901
  1843   000A18  0E5A               	movlw	90
  1844   000A1A  5C17               	subwf	_NUM^0,w,c
  1845   000A1C  B0D8               	btfsc	status,0,c
  1846   000A1E  EF13  F005         	goto	u3901
  1847   000A22  EF15  F005         	goto	u3900
  1848   000A26                     u3901:
  1849   000A26  EF32  F005         	goto	l5613
  1850   000A2A                     u3900:
  1851   000A2A                     
  1852                           ;main.c: 533:                       {;main.c: 534:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  1853   000A2A  0E06               	movlw	6
  1854   000A2C  0100               	movlb	0	; () banked
  1855   000A2E  6F9F               	movwf	(??_main+1)& (0+255),b
  1856   000A30  0E13               	movlw	19
  1857   000A32  6F9E               	movwf	??_main& (0+255),b
  1858   000A34  0EAD               	movlw	173
  1859   000A36                     u4227:
  1860   000A36  2EE8               	decfsz	wreg,f,c
  1861   000A38  D7FE               	bra	u4227
  1862   000A3A  2F9E               	decfsz	??_main& (0+255),f,b
  1863   000A3C  D7FC               	bra	u4227
  1864   000A3E  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  1865   000A40  D7FA               	bra	u4227
  1866   000A42  D000               	nop2	
  1867   000A44                     
  1868                           ;main.c: 535:                         NUM = NUM + 10;
  1869   000A44  0E0A               	movlw	10
  1870   000A46  2417               	addwf	_NUM^0,w,c
  1871   000A48  6E17               	movwf	_NUM^0,c
  1872   000A4A  0E00               	movlw	0
  1873   000A4C  2018               	addwfc	(_NUM+1)^0,w,c
  1874   000A4E  6E18               	movwf	(_NUM+1)^0,c
  1875   000A50                     
  1876                           ;main.c: 536:                         WriteSTLED316SData(NUM, vibration_mode);
  1877   000A50  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  1878   000A54  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1879   000A58  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1880   000A5C  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  1881                           
  1882                           ;main.c: 537:                       }
  1883   000A60  EF5E  F005         	goto	l5623
  1884   000A64                     l5613:
  1885   000A64  BE06               	btfsc	(_holdTimeRight+1)^0,7,c
  1886   000A66  EF40  F005         	goto	u3910
  1887   000A6A  0EE8               	movlw	232
  1888   000A6C  5C05               	subwf	_holdTimeRight^0,w,c
  1889   000A6E  0E03               	movlw	3
  1890   000A70  5806               	subwfb	(_holdTimeRight+1)^0,w,c
  1891   000A72  B0D8               	btfsc	status,0,c
  1892   000A74  EF3E  F005         	goto	u3911
  1893   000A78  EF40  F005         	goto	u3910
  1894   000A7C                     u3911:
  1895   000A7C  EF5E  F005         	goto	l5623
  1896   000A80                     u3910:
  1897   000A80                     
  1898                           ;main.c: 539:                       {;main.c: 540:                         NUM = NUM + 1
      +                          ;
  1899   000A80  0E01               	movlw	1
  1900   000A82  2417               	addwf	_NUM^0,w,c
  1901   000A84  6E17               	movwf	_NUM^0,c
  1902   000A86  0E00               	movlw	0
  1903   000A88  2018               	addwfc	(_NUM+1)^0,w,c
  1904   000A8A  6E18               	movwf	(_NUM+1)^0,c
  1905   000A8C                     
  1906                           ;main.c: 541:                         WriteSTLED316SData(NUM, vibration_mode);
  1907   000A8C  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  1908   000A90  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1909   000A94  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1910   000A98  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  1911   000A9C                     
  1912                           ;main.c: 543:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  1913   000A9C  0E02               	movlw	2
  1914   000A9E  0100               	movlb	0	; () banked
  1915   000AA0  6F9F               	movwf	(??_main+1)& (0+255),b
  1916   000AA2  0E86               	movlw	134
  1917   000AA4  6F9E               	movwf	??_main& (0+255),b
  1918   000AA6  0E99               	movlw	153
  1919   000AA8                     u4237:
  1920   000AA8  2EE8               	decfsz	wreg,f,c
  1921   000AAA  D7FE               	bra	u4237
  1922   000AAC  2F9E               	decfsz	??_main& (0+255),f,b
  1923   000AAE  D7FC               	bra	u4237
  1924   000AB0  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  1925   000AB2  D7FA               	bra	u4237
  1926   000AB4                     
  1927                           ;main.c: 544:                         holdTimeRight = 0;
  1928   000AB4  0E00               	movlw	0
  1929   000AB6  6E06               	movwf	(_holdTimeRight+1)^0,c
  1930   000AB8  0E00               	movlw	0
  1931   000ABA  6E05               	movwf	_holdTimeRight^0,c
  1932   000ABC                     l5623:
  1933                           
  1934                           ;main.c: 548:                       if(PORTBbits.RB3 == 0 && PORTAbits.RA5 == 0)
  1935   000ABC  B681               	btfsc	129,3,c	;volatile
  1936   000ABE  EF63  F005         	goto	u3921
  1937   000AC2  EF65  F005         	goto	u3920
  1938   000AC6                     u3921:
  1939   000AC6  EF87  F005         	goto	l5635
  1940   000ACA                     u3920:
  1941   000ACA  BA80               	btfsc	128,5,c	;volatile
  1942   000ACC  EF6A  F005         	goto	u3931
  1943   000AD0  EF6C  F005         	goto	u3930
  1944   000AD4                     u3931:
  1945   000AD4  EF87  F005         	goto	l5635
  1946   000AD8                     u3930:
  1947   000AD8                     
  1948                           ;main.c: 549:                       {;main.c: 550:                           NUM = 0;
  1949   000AD8  0E00               	movlw	0
  1950   000ADA  6E18               	movwf	(_NUM+1)^0,c
  1951   000ADC  0E00               	movlw	0
  1952   000ADE  6E17               	movwf	_NUM^0,c
  1953   000AE0                     
  1954                           ;main.c: 551:                           WriteSTLED316SData(NUM, vibration_mode);
  1955   000AE0  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  1956   000AE4  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  1957   000AE8  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1958   000AEC  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  1959   000AF0  EF87  F005         	goto	l5635
  1960   000AF4                     l5631:
  1961                           
  1962                           ;main.c: 555:                       {;main.c: 556:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  1963   000AF4  0E1A               	movlw	26
  1964   000AF6  0100               	movlb	0	; () banked
  1965   000AF8  6F9E               	movwf	??_main& (0+255),b
  1966   000AFA  0EF8               	movlw	248
  1967   000AFC                     u4247:
  1968   000AFC  2EE8               	decfsz	wreg,f,c
  1969   000AFE  D7FE               	bra	u4247
  1970   000B00  2F9E               	decfsz	??_main& (0+255),f,b
  1971   000B02  D7FC               	bra	u4247
  1972   000B04  F000               	nop	
  1973   000B06                     
  1974                           ;main.c: 557:                         holdTimeRight += 10;
  1975   000B06  0E0A               	movlw	10
  1976   000B08  2605               	addwf	_holdTimeRight^0,f,c
  1977   000B0A  0E00               	movlw	0
  1978   000B0C  2206               	addwfc	(_holdTimeRight+1)^0,f,c
  1979   000B0E                     l5635:
  1980                           
  1981                           ;main.c: 554:                       while(PORTBbits.RB3 == 0 && holdTimeRight < 1000)
  1982   000B0E  B681               	btfsc	129,3,c	;volatile
  1983   000B10  EF8C  F005         	goto	u3941
  1984   000B14  EF8E  F005         	goto	u3940
  1985   000B18                     u3941:
  1986   000B18  EF9E  F005         	goto	l249
  1987   000B1C                     u3940:
  1988   000B1C  BE06               	btfsc	(_holdTimeRight+1)^0,7,c
  1989   000B1E  EF9A  F005         	goto	u3951
  1990   000B22  0EE8               	movlw	232
  1991   000B24  5C05               	subwf	_holdTimeRight^0,w,c
  1992   000B26  0E03               	movlw	3
  1993   000B28  5806               	subwfb	(_holdTimeRight+1)^0,w,c
  1994   000B2A  A0D8               	btfss	status,0,c
  1995   000B2C  EF9A  F005         	goto	u3951
  1996   000B30  EF9C  F005         	goto	u3950
  1997   000B34                     u3951:
  1998   000B34  EF7A  F005         	goto	l5631
  1999   000B38                     u3950:
  2000   000B38  EFA4  F005         	goto	l5641
  2001   000B3C                     l249:
  2002                           
  2003                           ;main.c: 560:                 }
  2004   000B3C  EFA4  F005         	goto	l5641
  2005   000B40                     l5639:
  2006                           
  2007                           ;main.c: 562:                   holdTimeRight = 0;
  2008   000B40  0E00               	movlw	0
  2009   000B42  6E06               	movwf	(_holdTimeRight+1)^0,c
  2010   000B44  0E00               	movlw	0
  2011   000B46  6E05               	movwf	_holdTimeRight^0,c
  2012   000B48                     l5641:
  2013                           
  2014                           ;main.c: 565:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  2015   000B48  BA80               	btfsc	128,5,c	;volatile
  2016   000B4A  EFA9  F005         	goto	u3961
  2017   000B4E  EFAB  F005         	goto	u3960
  2018   000B52                     u3961:
  2019   000B52  EF5F  F006         	goto	l5683
  2020   000B56                     u3960:
  2021   000B56  5017               	movf	_NUM^0,w,c
  2022   000B58  1018               	iorwf	(_NUM+1)^0,w,c
  2023   000B5A  B4D8               	btfsc	status,2,c
  2024   000B5C  EFB2  F005         	goto	u3971
  2025   000B60  EFB4  F005         	goto	u3970
  2026   000B64                     u3971:
  2027   000B64  EF5F  F006         	goto	l5683
  2028   000B68                     u3970:
  2029   000B68                     
  2030                           ;main.c: 566:                     if(PORTAbits.RA5 == 0){
  2031   000B68  BA80               	btfsc	128,5,c	;volatile
  2032   000B6A  EFB9  F005         	goto	u3981
  2033   000B6E  EFBB  F005         	goto	u3980
  2034   000B72                     u3981:
  2035   000B72  EF63  F006         	goto	l5685
  2036   000B76                     u3980:
  2037   000B76                     
  2038                           ;main.c: 568:                       if (holdTimeLeft >= 1000 && NUM >= 10)
  2039   000B76  BE04               	btfsc	(_holdTimeLeft+1)^0,7,c
  2040   000B78  EFC7  F005         	goto	u3991
  2041   000B7C  0EE8               	movlw	232
  2042   000B7E  5C03               	subwf	_holdTimeLeft^0,w,c
  2043   000B80  0E03               	movlw	3
  2044   000B82  5804               	subwfb	(_holdTimeLeft+1)^0,w,c
  2045   000B84  A0D8               	btfss	status,0,c
  2046   000B86  EFC7  F005         	goto	u3991
  2047   000B8A  EFC9  F005         	goto	u3990
  2048   000B8E                     u3991:
  2049   000B8E  EFF1  F005         	goto	l5657
  2050   000B92                     u3990:
  2051   000B92  5018               	movf	(_NUM+1)^0,w,c
  2052   000B94  E109               	bnz	u4000
  2053   000B96  0E0A               	movlw	10
  2054   000B98  5C17               	subwf	_NUM^0,w,c
  2055   000B9A  A0D8               	btfss	status,0,c
  2056   000B9C  EFD2  F005         	goto	u4001
  2057   000BA0  EFD4  F005         	goto	u4000
  2058   000BA4                     u4001:
  2059   000BA4  EFF1  F005         	goto	l5657
  2060   000BA8                     u4000:
  2061   000BA8                     
  2062                           ;main.c: 569:                       {;main.c: 570:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  2063   000BA8  0E06               	movlw	6
  2064   000BAA  0100               	movlb	0	; () banked
  2065   000BAC  6F9F               	movwf	(??_main+1)& (0+255),b
  2066   000BAE  0E13               	movlw	19
  2067   000BB0  6F9E               	movwf	??_main& (0+255),b
  2068   000BB2  0EAD               	movlw	173
  2069   000BB4                     u4257:
  2070   000BB4  2EE8               	decfsz	wreg,f,c
  2071   000BB6  D7FE               	bra	u4257
  2072   000BB8  2F9E               	decfsz	??_main& (0+255),f,b
  2073   000BBA  D7FC               	bra	u4257
  2074   000BBC  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  2075   000BBE  D7FA               	bra	u4257
  2076   000BC0  D000               	nop2	
  2077   000BC2                     
  2078                           ;main.c: 571:                         NUM = NUM - 10;
  2079   000BC2  0EF6               	movlw	246
  2080   000BC4  2417               	addwf	_NUM^0,w,c
  2081   000BC6  6E17               	movwf	_NUM^0,c
  2082   000BC8  0EFF               	movlw	255
  2083   000BCA  2018               	addwfc	(_NUM+1)^0,w,c
  2084   000BCC  6E18               	movwf	(_NUM+1)^0,c
  2085   000BCE                     
  2086                           ;main.c: 572:                         WriteSTLED316SData(NUM, vibration_mode);
  2087   000BCE  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  2088   000BD2  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2089   000BD6  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2090   000BDA  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  2091                           
  2092                           ;main.c: 573:                       }
  2093   000BDE  EF1D  F006         	goto	l5667
  2094   000BE2                     l5657:
  2095   000BE2  BE04               	btfsc	(_holdTimeLeft+1)^0,7,c
  2096   000BE4  EFFF  F005         	goto	u4010
  2097   000BE8  0EE8               	movlw	232
  2098   000BEA  5C03               	subwf	_holdTimeLeft^0,w,c
  2099   000BEC  0E03               	movlw	3
  2100   000BEE  5804               	subwfb	(_holdTimeLeft+1)^0,w,c
  2101   000BF0  B0D8               	btfsc	status,0,c
  2102   000BF2  EFFD  F005         	goto	u4011
  2103   000BF6  EFFF  F005         	goto	u4010
  2104   000BFA                     u4011:
  2105   000BFA  EF1D  F006         	goto	l5667
  2106   000BFE                     u4010:
  2107   000BFE                     
  2108                           ;main.c: 575:                       {;main.c: 576:                         NUM = NUM - 1
      +                          ;
  2109   000BFE  0EFF               	movlw	255
  2110   000C00  2417               	addwf	_NUM^0,w,c
  2111   000C02  6E17               	movwf	_NUM^0,c
  2112   000C04  0EFF               	movlw	255
  2113   000C06  2018               	addwfc	(_NUM+1)^0,w,c
  2114   000C08  6E18               	movwf	(_NUM+1)^0,c
  2115   000C0A                     
  2116                           ;main.c: 577:                         WriteSTLED316SData(NUM, vibration_mode);
  2117   000C0A  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  2118   000C0E  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2119   000C12  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2120   000C16  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  2121   000C1A                     
  2122                           ;main.c: 579:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  2123   000C1A  0E02               	movlw	2
  2124   000C1C  0100               	movlb	0	; () banked
  2125   000C1E  6F9F               	movwf	(??_main+1)& (0+255),b
  2126   000C20  0E86               	movlw	134
  2127   000C22  6F9E               	movwf	??_main& (0+255),b
  2128   000C24  0E99               	movlw	153
  2129   000C26                     u4267:
  2130   000C26  2EE8               	decfsz	wreg,f,c
  2131   000C28  D7FE               	bra	u4267
  2132   000C2A  2F9E               	decfsz	??_main& (0+255),f,b
  2133   000C2C  D7FC               	bra	u4267
  2134   000C2E  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  2135   000C30  D7FA               	bra	u4267
  2136   000C32                     
  2137                           ;main.c: 580:                         holdTimeLeft = 0;
  2138   000C32  0E00               	movlw	0
  2139   000C34  6E04               	movwf	(_holdTimeLeft+1)^0,c
  2140   000C36  0E00               	movlw	0
  2141   000C38  6E03               	movwf	_holdTimeLeft^0,c
  2142   000C3A                     l5667:
  2143                           
  2144                           ;main.c: 584:                       if(PORTAbits.RA5 == 0 && PORTBbits.RB3 == 0)
  2145   000C3A  BA80               	btfsc	128,5,c	;volatile
  2146   000C3C  EF22  F006         	goto	u4021
  2147   000C40  EF24  F006         	goto	u4020
  2148   000C44                     u4021:
  2149   000C44  EF46  F006         	goto	l5679
  2150   000C48                     u4020:
  2151   000C48  B681               	btfsc	129,3,c	;volatile
  2152   000C4A  EF29  F006         	goto	u4031
  2153   000C4E  EF2B  F006         	goto	u4030
  2154   000C52                     u4031:
  2155   000C52  EF46  F006         	goto	l5679
  2156   000C56                     u4030:
  2157   000C56                     
  2158                           ;main.c: 585:                       {;main.c: 586:                           NUM = 0;
  2159   000C56  0E00               	movlw	0
  2160   000C58  6E18               	movwf	(_NUM+1)^0,c
  2161   000C5A  0E00               	movlw	0
  2162   000C5C  6E17               	movwf	_NUM^0,c
  2163   000C5E                     
  2164                           ;main.c: 587:                           WriteSTLED316SData(NUM, vibration_mode);
  2165   000C5E  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  2166   000C62  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2167   000C66  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2168   000C6A  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  2169   000C6E  EF46  F006         	goto	l5679
  2170   000C72                     l5675:
  2171                           
  2172                           ;main.c: 590:                       {;main.c: 591:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  2173   000C72  0E1A               	movlw	26
  2174   000C74  0100               	movlb	0	; () banked
  2175   000C76  6F9E               	movwf	??_main& (0+255),b
  2176   000C78  0EF8               	movlw	248
  2177   000C7A                     u4277:
  2178   000C7A  2EE8               	decfsz	wreg,f,c
  2179   000C7C  D7FE               	bra	u4277
  2180   000C7E  2F9E               	decfsz	??_main& (0+255),f,b
  2181   000C80  D7FC               	bra	u4277
  2182   000C82  F000               	nop	
  2183   000C84                     
  2184                           ;main.c: 592:                         holdTimeLeft += 10;
  2185   000C84  0E0A               	movlw	10
  2186   000C86  2603               	addwf	_holdTimeLeft^0,f,c
  2187   000C88  0E00               	movlw	0
  2188   000C8A  2204               	addwfc	(_holdTimeLeft+1)^0,f,c
  2189   000C8C                     l5679:
  2190                           
  2191                           ;main.c: 589:                       while(PORTAbits.RA5 == 0 && holdTimeLeft < 1000)
  2192   000C8C  BA80               	btfsc	128,5,c	;volatile
  2193   000C8E  EF4B  F006         	goto	u4041
  2194   000C92  EF4D  F006         	goto	u4040
  2195   000C96                     u4041:
  2196   000C96  EF5D  F006         	goto	l261
  2197   000C9A                     u4040:
  2198   000C9A  BE04               	btfsc	(_holdTimeLeft+1)^0,7,c
  2199   000C9C  EF59  F006         	goto	u4051
  2200   000CA0  0EE8               	movlw	232
  2201   000CA2  5C03               	subwf	_holdTimeLeft^0,w,c
  2202   000CA4  0E03               	movlw	3
  2203   000CA6  5804               	subwfb	(_holdTimeLeft+1)^0,w,c
  2204   000CA8  A0D8               	btfss	status,0,c
  2205   000CAA  EF59  F006         	goto	u4051
  2206   000CAE  EF5B  F006         	goto	u4050
  2207   000CB2                     u4051:
  2208   000CB2  EF39  F006         	goto	l5675
  2209   000CB6                     u4050:
  2210   000CB6  EF63  F006         	goto	l5685
  2211   000CBA                     l261:
  2212                           
  2213                           ;main.c: 595:                 }
  2214   000CBA  EF63  F006         	goto	l5685
  2215   000CBE                     l5683:
  2216                           
  2217                           ;main.c: 597:                   holdTimeLeft = 0;
  2218   000CBE  0E00               	movlw	0
  2219   000CC0  6E04               	movwf	(_holdTimeLeft+1)^0,c
  2220   000CC2  0E00               	movlw	0
  2221   000CC4  6E03               	movwf	_holdTimeLeft^0,c
  2222   000CC6                     l5685:
  2223                           
  2224                           ;main.c: 610:                 NUM_REC = NUM;
  2225   000CC6  C017  F013         	movff	_NUM,_NUM_REC
  2226   000CCA  C018  F014         	movff	_NUM+1,_NUM_REC+1
  2227   000CCE                     
  2228                           ;main.c: 611:                 WriteSTLED316SData(NUM, vibration_mode);
  2229   000CCE  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  2230   000CD2  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2231   000CD6  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2232   000CDA  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  2233   000CDE                     
  2234                           ;main.c: 614:                 if(dispense == 1)
  2235   000CDE  0407               	decf	_dispense^0,w,c
  2236   000CE0  1008               	iorwf	(_dispense+1)^0,w,c
  2237   000CE2  A4D8               	btfss	status,2,c
  2238   000CE4  EF76  F006         	goto	u4061
  2239   000CE8  EF78  F006         	goto	u4060
  2240   000CEC                     u4061:
  2241   000CEC  EF88  F006         	goto	l5699
  2242   000CF0                     u4060:
  2243   000CF0                     
  2244                           ;main.c: 615:                 {;main.c: 616:                     Busy = 1;
  2245   000CF0  0E01               	movlw	1
  2246   000CF2  6E2D               	movwf	_Busy^0,c
  2247                           
  2248                           ;main.c: 617:                     errorcounter = 30;
  2249   000CF4  0E1E               	movlw	30
  2250   000CF6  6E52               	movwf	_errorcounter^0,c	;volatile
  2251   000CF8  0E00               	movlw	0
  2252   000CFA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2253   000CFC  0E00               	movlw	0
  2254   000CFE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2255   000D00  0E00               	movlw	0
  2256   000D02  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2257   000D04                     
  2258                           ;main.c: 618:                     Homing_Again_Manual();
  2259   000D04  ECD3  F008         	call	_Homing_Again_Manual	;wreg free
  2260   000D08                     
  2261                           ;main.c: 619:                     Stop = 0;
  2262   000D08  0E00               	movlw	0
  2263   000D0A  6E2F               	movwf	_Stop^0,c
  2264   000D0C                     
  2265                           ;main.c: 620:                     Busy = 0;
  2266   000D0C  0E00               	movlw	0
  2267   000D0E  6E2D               	movwf	_Busy^0,c
  2268   000D10                     l5699:
  2269                           
  2270                           ;main.c: 634:                 if (Serial_Flag == 1) {
  2271   000D10  0431               	decf	_Serial_Flag^0,w,c
  2272   000D12  A4D8               	btfss	status,2,c
  2273   000D14  EF8E  F006         	goto	u4071
  2274   000D18  EF90  F006         	goto	u4070
  2275   000D1C                     u4071:
  2276   000D1C  EFB7  F008         	goto	l5873
  2277   000D20                     u4070:
  2278   000D20  EF8D  F008         	goto	l5869
  2279   000D24                     l5703:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;main.c: 639:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  2283   000D24  0EF1               	movlw	241
  2284   000D26  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2285   000D28  A4D8               	btfss	status,2,c
  2286   000D2A  EF99  F006         	goto	u4081
  2287   000D2E  EF9B  F006         	goto	u4080
  2288   000D32                     u4081:
  2289   000D32  EFB7  F006         	goto	l5713
  2290   000D36                     u4080:
  2291   000D36                     
  2292                           ; BSR set to: 0
  2293   000D36  502D               	movf	_Busy^0,w,c
  2294   000D38  A4D8               	btfss	status,2,c
  2295   000D3A  EFA1  F006         	goto	u4091
  2296   000D3E  EFA3  F006         	goto	u4090
  2297   000D42                     u4091:
  2298   000D42  EFB7  F006         	goto	l5713
  2299   000D46                     u4090:
  2300   000D46                     
  2301                           ; BSR set to: 0
  2302                           ;main.c: 640:                             {;main.c: 641:                                
      +                           Stop = 0;
  2303   000D46  0E00               	movlw	0
  2304   000D48  6E2F               	movwf	_Stop^0,c
  2305                           
  2306                           ;main.c: 642:                                 Busy = 1;
  2307   000D4A  0E01               	movlw	1
  2308   000D4C  6E2D               	movwf	_Busy^0,c
  2309   000D4E                     
  2310                           ; BSR set to: 0
  2311                           ;main.c: 643:                                 NUM = NUM_REC;
  2312   000D4E  C013  F017         	movff	_NUM_REC,_NUM
  2313   000D52  C014  F018         	movff	_NUM_REC+1,_NUM+1
  2314                           
  2315                           ;main.c: 645:                                 errorcounter = 30;
  2316   000D56  0E1E               	movlw	30
  2317   000D58  6E52               	movwf	_errorcounter^0,c	;volatile
  2318   000D5A  0E00               	movlw	0
  2319   000D5C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2320   000D5E  0E00               	movlw	0
  2321   000D60  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2322   000D62  0E00               	movlw	0
  2323   000D64  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2324   000D66                     
  2325                           ; BSR set to: 0
  2326                           ;main.c: 646:                                 Homing_Again_Auto();
  2327   000D66  ECE4  F00A         	call	_Homing_Again_Auto	;wreg free
  2328                           
  2329                           ;main.c: 648:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  2330   000D6A  EF15  F007         	goto	l5743
  2331   000D6E                     l5713:
  2332                           
  2333                           ; BSR set to: 0
  2334   000D6E  0EF2               	movlw	242
  2335   000D70  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2336   000D72  A4D8               	btfss	status,2,c
  2337   000D74  EFBE  F006         	goto	u4101
  2338   000D78  EFC0  F006         	goto	u4100
  2339   000D7C                     u4101:
  2340   000D7C  EF15  F007         	goto	l5743
  2341   000D80                     u4100:
  2342   000D80                     
  2343                           ; BSR set to: 0
  2344   000D80  502D               	movf	_Busy^0,w,c
  2345   000D82  A4D8               	btfss	status,2,c
  2346   000D84  EFC6  F006         	goto	u4111
  2347   000D88  EFC8  F006         	goto	u4110
  2348   000D8C                     u4111:
  2349   000D8C  EF15  F007         	goto	l5743
  2350   000D90                     u4110:
  2351   000D90                     
  2352                           ; BSR set to: 0
  2353                           ;main.c: 649:                             {;main.c: 650:                                
      +                           Stop = 0;
  2354   000D90  0E00               	movlw	0
  2355   000D92  6E2F               	movwf	_Stop^0,c
  2356                           
  2357                           ;main.c: 651:                                 Busy = 1;
  2358   000D94  0E01               	movlw	1
  2359   000D96  6E2D               	movwf	_Busy^0,c
  2360   000D98                     
  2361                           ; BSR set to: 0
  2362                           ;main.c: 652:                                 NUM = NUM_REC;
  2363   000D98  C013  F017         	movff	_NUM_REC,_NUM
  2364   000D9C  C014  F018         	movff	_NUM_REC+1,_NUM+1
  2365   000DA0                     
  2366                           ; BSR set to: 0
  2367                           ;main.c: 653:                                 WriteSTLED316SData(NUM, vibration_mode);
  2368   000DA0  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  2369   000DA4  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  2370   000DA8  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2371   000DAC  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  2372   000DB0                     
  2373                           ;main.c: 655:                                 errorcounter = 30;
  2374   000DB0  0E1E               	movlw	30
  2375   000DB2  6E52               	movwf	_errorcounter^0,c	;volatile
  2376   000DB4  0E00               	movlw	0
  2377   000DB6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  2378   000DB8  0E00               	movlw	0
  2379   000DBA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  2380   000DBC  0E00               	movlw	0
  2381   000DBE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  2382   000DC0                     
  2383                           ;main.c: 656:                                 Homing_Again_Manual();
  2384   000DC0  ECD3  F008         	call	_Homing_Again_Manual	;wreg free
  2385   000DC4                     
  2386                           ;main.c: 659:                                 if (Stop == 0) {
  2387   000DC4  502F               	movf	_Stop^0,w,c
  2388   000DC6  A4D8               	btfss	status,2,c
  2389   000DC8  EFE8  F006         	goto	u4121
  2390   000DCC  EFEA  F006         	goto	u4120
  2391   000DD0                     u4121:
  2392   000DD0  EF15  F007         	goto	l5743
  2393   000DD4                     u4120:
  2394   000DD4                     
  2395                           ;main.c: 660:                                     Serial_Buffer_Out[0] = 0xA5;
  2396   000DD4  0EA5               	movlw	165
  2397   000DD6  0100               	movlb	0	; () banked
  2398   000DD8  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2399                           
  2400                           ;main.c: 661:                                     Serial_Buffer_Out[1] = 0x44;
  2401   000DDA  0E44               	movlw	68
  2402   000DDC  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  2403                           
  2404                           ;main.c: 662:                                     Serial_Buffer_Out[2] = 0xF9;
  2405   000DDE  0EF9               	movlw	249
  2406   000DE0  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  2407                           
  2408                           ;main.c: 663:                                     Serial_Buffer_Out[3] = 0X3D;
  2409   000DE2  0E3D               	movlw	61
  2410   000DE4  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  2411                           
  2412                           ;main.c: 664:                                     Serial_Buffer_Out[4] = 0x5A;
  2413   000DE6  0E5A               	movlw	90
  2414   000DE8  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  2415   000DEA                     
  2416                           ; BSR set to: 0
  2417                           ;main.c: 666:                                     INTCONbits.GIE = 0;
  2418   000DEA  9EF2               	bcf	242,7,c	;volatile
  2419                           
  2420                           ;main.c: 667:                                     for (i = 0; i < 5; i++) {
  2421   000DEC  0E00               	movlw	0
  2422   000DEE  6E12               	movwf	(_i+1)^0,c
  2423   000DF0  0E00               	movlw	0
  2424   000DF2  6E11               	movwf	_i^0,c
  2425   000DF4                     l5733:
  2426   000DF4  5012               	movf	(_i+1)^0,w,c
  2427   000DF6  E109               	bnz	u4130
  2428   000DF8  0E05               	movlw	5
  2429   000DFA  5C11               	subwf	_i^0,w,c
  2430   000DFC  A0D8               	btfss	status,0,c
  2431   000DFE  EF03  F007         	goto	u4131
  2432   000E02  EF05  F007         	goto	u4130
  2433   000E06                     u4131:
  2434   000E06  EF07  F007         	goto	l5737
  2435   000E0A                     u4130:
  2436   000E0A  EF14  F007         	goto	l282
  2437   000E0E                     l5737:
  2438                           
  2439                           ;main.c: 668:                                         Write1USART(Serial_Buffer_Out[i]);
  2440   000E0E  0E60               	movlw	low _Serial_Buffer_Out
  2441   000E10  2411               	addwf	_i^0,w,c
  2442   000E12  6ED9               	movwf	fsr2l,c
  2443   000E14  0E00               	movlw	high _Serial_Buffer_Out
  2444   000E16  2012               	addwfc	(_i+1)^0,w,c
  2445   000E18  6EDA               	movwf	fsr2h,c
  2446   000E1A  50DF               	movf	indf2,w,c
  2447   000E1C  EC04  F013         	call	_Write1USART
  2448   000E20                     
  2449                           ;main.c: 669:                                     }
  2450   000E20  4A11               	infsnz	_i^0,f,c
  2451   000E22  2A12               	incf	(_i+1)^0,f,c
  2452   000E24  EFFA  F006         	goto	l5733
  2453   000E28                     l282:
  2454                           
  2455                           ;main.c: 670:                                     INTCONbits.GIE = 1;
  2456   000E28  8EF2               	bsf	242,7,c	;volatile
  2457   000E2A                     l5743:
  2458                           
  2459                           ;main.c: 674:                             flush();
  2460   000E2A  EC05  F012         	call	_flush	;wreg free
  2461                           
  2462                           ;main.c: 675:                             flushOut();
  2463   000E2E  EC22  F012         	call	_flushOut	;wreg free
  2464   000E32                     
  2465                           ;main.c: 676:                             Stop = 0;
  2466   000E32  0E00               	movlw	0
  2467   000E34  6E2F               	movwf	_Stop^0,c
  2468   000E36                     l5747:
  2469                           
  2470                           ;main.c: 677:                             Busy = 0;
  2471   000E36  0E00               	movlw	0
  2472   000E38  6E2D               	movwf	_Busy^0,c
  2473                           
  2474                           ;main.c: 678:                             break;
  2475   000E3A  EFAF  F008         	goto	l5871
  2476   000E3E                     l5749:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;main.c: 683:                             if (Busy == 0) {
  2480   000E3E  502D               	movf	_Busy^0,w,c
  2481   000E40  A4D8               	btfss	status,2,c
  2482   000E42  EF25  F007         	goto	u4141
  2483   000E46  EF27  F007         	goto	u4140
  2484   000E4A                     u4141:
  2485   000E4A  EFAF  F008         	goto	l5871
  2486   000E4E                     u4140:
  2487   000E4E                     
  2488                           ; BSR set to: 0
  2489                           ;main.c: 684:                                 Busy = 1;
  2490   000E4E  0E01               	movlw	1
  2491   000E50  6E2D               	movwf	_Busy^0,c
  2492   000E52                     
  2493                           ; BSR set to: 0
  2494                           ;main.c: 688:                                 pause_Time = Serial_Buffer[2];
  2495   000E52  C082  F029         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  2496                           
  2497                           ;main.c: 689:                                 switch (pause_Time) {
  2498   000E56  EF53  F007         	goto	l5769
  2499   000E5A                     l5755:
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;main.c: 692:                                         Motor_Pause_Time = 0;
  2503   000E5A  0E00               	movlw	0
  2504   000E5C  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  2505   000E5E  0E00               	movlw	0
  2506   000E60  6E19               	movwf	_Motor_Pause_Time^0,c
  2507                           
  2508                           ;main.c: 693:                                         pause_Time = 0x30;
  2509   000E62  0E30               	movlw	48
  2510   000E64  6E29               	movwf	_pause_Time^0,c	;volatile
  2511                           
  2512                           ;main.c: 694:                                         break;
  2513   000E66  EF78  F007         	goto	l289
  2514   000E6A                     l5757:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;main.c: 697:                                         Motor_Pause_Time = 1000;
  2518   000E6A  0E03               	movlw	3
  2519   000E6C  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  2520   000E6E  0EE8               	movlw	232
  2521   000E70  6E19               	movwf	_Motor_Pause_Time^0,c
  2522                           
  2523                           ;main.c: 698:                                         break;
  2524   000E72  EF78  F007         	goto	l289
  2525   000E76                     l5759:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 701:                                         Motor_Pause_Time = 2000;
  2529   000E76  0E07               	movlw	7
  2530   000E78  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  2531   000E7A  0ED0               	movlw	208
  2532   000E7C  6E19               	movwf	_Motor_Pause_Time^0,c
  2533                           
  2534                           ;main.c: 702:                                         break;
  2535   000E7E  EF78  F007         	goto	l289
  2536   000E82                     l5761:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;main.c: 705:                                         Motor_Pause_Time = 3000;
  2540   000E82  0E0B               	movlw	11
  2541   000E84  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  2542   000E86  0EB8               	movlw	184
  2543   000E88  6E19               	movwf	_Motor_Pause_Time^0,c
  2544                           
  2545                           ;main.c: 706:                                         break;
  2546   000E8A  EF78  F007         	goto	l289
  2547   000E8E                     l5763:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;main.c: 709:                                         Motor_Pause_Time = 4000;
  2551   000E8E  0E0F               	movlw	15
  2552   000E90  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  2553   000E92  0EA0               	movlw	160
  2554   000E94  6E19               	movwf	_Motor_Pause_Time^0,c
  2555                           
  2556                           ;main.c: 710:                                         break;
  2557   000E96  EF78  F007         	goto	l289
  2558   000E9A                     l5765:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;main.c: 713:                                         Motor_Pause_Time = 5000;
  2562   000E9A  0E13               	movlw	19
  2563   000E9C  6E1A               	movwf	(_Motor_Pause_Time+1)^0,c
  2564   000E9E  0E88               	movlw	136
  2565   000EA0  6E19               	movwf	_Motor_Pause_Time^0,c
  2566                           
  2567                           ;main.c: 714:                                         break;
  2568   000EA2  EF78  F007         	goto	l289
  2569   000EA6                     l5769:
  2570                           
  2571                           ; BSR set to: 0
  2572   000EA6  5029               	movf	_pause_Time^0,w,c	;volatile
  2573   000EA8  6F9E               	movwf	??_main& (0+255),b
  2574   000EAA  6B9F               	clrf	(??_main+1)& (0+255),b
  2575                           
  2576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2577                           ; Switch size 1, requested type "simple"
  2578                           ; Number of cases is 1, Range of values is 0 to 0
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; simple_byte            4     3 (average)
  2582                           ;	Chosen strategy is simple_byte
  2583   000EAC  519F               	movf	(??_main+1)& (0+255),w,b
  2584   000EAE  0A00               	xorlw	0	; case 0
  2585   000EB0  B4D8               	btfsc	status,2,c
  2586   000EB2  EF5D  F007         	goto	l6215
  2587   000EB6  EF2D  F007         	goto	l5755
  2588   000EBA                     l6215:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ; Switch size 1, requested type "simple"
  2592                           ; Number of cases is 6, Range of values is 48 to 53
  2593                           ; switch strategies available:
  2594                           ; Name         Instructions Cycles
  2595                           ; simple_byte           19    10 (average)
  2596                           ;	Chosen strategy is simple_byte
  2597   000EBA  519E               	movf	??_main& (0+255),w,b
  2598   000EBC  0A30               	xorlw	48	; case 48
  2599   000EBE  B4D8               	btfsc	status,2,c
  2600   000EC0  EF2D  F007         	goto	l5755
  2601   000EC4  0A01               	xorlw	1	; case 49
  2602   000EC6  B4D8               	btfsc	status,2,c
  2603   000EC8  EF35  F007         	goto	l5757
  2604   000ECC  0A03               	xorlw	3	; case 50
  2605   000ECE  B4D8               	btfsc	status,2,c
  2606   000ED0  EF3B  F007         	goto	l5759
  2607   000ED4  0A01               	xorlw	1	; case 51
  2608   000ED6  B4D8               	btfsc	status,2,c
  2609   000ED8  EF41  F007         	goto	l5761
  2610   000EDC  0A07               	xorlw	7	; case 52
  2611   000EDE  B4D8               	btfsc	status,2,c
  2612   000EE0  EF47  F007         	goto	l5763
  2613   000EE4  0A01               	xorlw	1	; case 53
  2614   000EE6  B4D8               	btfsc	status,2,c
  2615   000EE8  EF4D  F007         	goto	l5765
  2616   000EEC  EF2D  F007         	goto	l5755
  2617   000EF0                     l289:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;main.c: 719:                                 INTCONbits.GIE = 0;
  2621   000EF0  9EF2               	bcf	242,7,c	;volatile
  2622   000EF2                     
  2623                           ; BSR set to: 0
  2624                           ;main.c: 720:                                 write_i2c(0x0060, pause_Time);
  2625   000EF2  0E60               	movlw	96
  2626   000EF4  6E46               	movwf	write_i2c@address^0,c
  2627   000EF6  0E00               	movlw	0
  2628   000EF8  6E47               	movwf	(write_i2c@address+1)^0,c
  2629   000EFA  0E00               	movlw	0
  2630   000EFC  6E48               	movwf	(write_i2c@address+2)^0,c
  2631   000EFE  0E00               	movlw	0
  2632   000F00  6E49               	movwf	(write_i2c@address+3)^0,c
  2633   000F02  C029  F04A         	movff	_pause_Time,write_i2c@data	;volatile
  2634   000F06  6A4B               	clrf	(write_i2c@data+1)^0,c
  2635   000F08  EC7F  F011         	call	_write_i2c	;wreg free
  2636   000F0C                     
  2637                           ;main.c: 721:                                 INTCONbits.GIE = 1;
  2638   000F0C  8EF2               	bsf	242,7,c	;volatile
  2639   000F0E                     
  2640                           ;main.c: 723:                                 flush();
  2641   000F0E  EC05  F012         	call	_flush	;wreg free
  2642   000F12  EF1B  F007         	goto	l5747
  2643   000F16                     l5779:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;main.c: 731:                             if (Busy == 0) {
  2647   000F16  502D               	movf	_Busy^0,w,c
  2648   000F18  A4D8               	btfss	status,2,c
  2649   000F1A  EF91  F007         	goto	u4151
  2650   000F1E  EF93  F007         	goto	u4150
  2651   000F22                     u4151:
  2652   000F22  EFAF  F008         	goto	l5871
  2653   000F26                     u4150:
  2654   000F26                     
  2655                           ; BSR set to: 0
  2656                           ;main.c: 732:                                 if (Serial_Buffer[2] == 0x00) {
  2657   000F26  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  2658   000F28  A4D8               	btfss	status,2,c
  2659   000F2A  EF99  F007         	goto	u4161
  2660   000F2E  EF9B  F007         	goto	u4160
  2661   000F32                     u4161:
  2662   000F32  EF09  F008         	goto	l5821
  2663   000F36                     u4160:
  2664   000F36                     
  2665                           ; BSR set to: 0
  2666                           ;main.c: 733:                                     Busy = 1;
  2667   000F36  0E01               	movlw	1
  2668   000F38  6E2D               	movwf	_Busy^0,c
  2669   000F3A                     
  2670                           ; BSR set to: 0
  2671                           ;main.c: 735:                                     INTCONbits.GIE = 0;
  2672   000F3A  9EF2               	bcf	242,7,c	;volatile
  2673   000F3C                     
  2674                           ; BSR set to: 0
  2675                           ;main.c: 736:                                     pause_Time = read_i2c(0x0060);
  2676   000F3C  0E60               	movlw	96
  2677   000F3E  6E46               	movwf	read_i2c@address^0,c
  2678   000F40  0E00               	movlw	0
  2679   000F42  6E47               	movwf	(read_i2c@address+1)^0,c
  2680   000F44  0E00               	movlw	0
  2681   000F46  6E48               	movwf	(read_i2c@address+2)^0,c
  2682   000F48  0E00               	movlw	0
  2683   000F4A  6E49               	movwf	(read_i2c@address+3)^0,c
  2684   000F4C  EC1E  F011         	call	_read_i2c	;wreg free
  2685   000F50  5046               	movf	?_read_i2c^0,w,c
  2686   000F52  6E29               	movwf	_pause_Time^0,c	;volatile
  2687   000F54                     
  2688                           ;main.c: 737:                                     vib_Time = read_i2c(0x0040);
  2689   000F54  0E40               	movlw	64
  2690   000F56  6E46               	movwf	read_i2c@address^0,c
  2691   000F58  0E00               	movlw	0
  2692   000F5A  6E47               	movwf	(read_i2c@address+1)^0,c
  2693   000F5C  0E00               	movlw	0
  2694   000F5E  6E48               	movwf	(read_i2c@address+2)^0,c
  2695   000F60  0E00               	movlw	0
  2696   000F62  6E49               	movwf	(read_i2c@address+3)^0,c
  2697   000F64  EC1E  F011         	call	_read_i2c	;wreg free
  2698   000F68  5046               	movf	?_read_i2c^0,w,c
  2699   000F6A  6E28               	movwf	_vib_Time^0,c	;volatile
  2700   000F6C                     
  2701                           ;main.c: 738:                                     Motor_Speed = read_i2c(0x0030);
  2702   000F6C  0E30               	movlw	48
  2703   000F6E  6E46               	movwf	read_i2c@address^0,c
  2704   000F70  0E00               	movlw	0
  2705   000F72  6E47               	movwf	(read_i2c@address+1)^0,c
  2706   000F74  0E00               	movlw	0
  2707   000F76  6E48               	movwf	(read_i2c@address+2)^0,c
  2708   000F78  0E00               	movlw	0
  2709   000F7A  6E49               	movwf	(read_i2c@address+3)^0,c
  2710   000F7C  EC1E  F011         	call	_read_i2c	;wreg free
  2711   000F80  C046  F01F         	movff	?_read_i2c,_Motor_Speed
  2712   000F84  C047  F020         	movff	?_read_i2c+1,_Motor_Speed+1
  2713   000F88                     
  2714                           ;main.c: 739:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2715   000F88  0E50               	movlw	80
  2716   000F8A  6E46               	movwf	read_i2c@address^0,c
  2717   000F8C  0E00               	movlw	0
  2718   000F8E  6E47               	movwf	(read_i2c@address+1)^0,c
  2719   000F90  0E00               	movlw	0
  2720   000F92  6E48               	movwf	(read_i2c@address+2)^0,c
  2721   000F94  0E00               	movlw	0
  2722   000F96  6E49               	movwf	(read_i2c@address+3)^0,c
  2723   000F98  EC1E  F011         	call	_read_i2c	;wreg free
  2724   000F9C  5046               	movf	?_read_i2c^0,w,c
  2725   000F9E  6E27               	movwf	_delay_motor_stop_time^0,c	;volatile
  2726   000FA0                     
  2727                           ;main.c: 740:                                     INTCONbits.GIE = 1;
  2728   000FA0  8EF2               	bsf	242,7,c	;volatile
  2729                           
  2730                           ;main.c: 742:                                     Serial_Buffer_Out[0] = 0x51;
  2731   000FA2  0E51               	movlw	81
  2732   000FA4  0100               	movlb	0	; () banked
  2733   000FA6  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2734   000FA8                     
  2735                           ; BSR set to: 0
  2736                           ;main.c: 743:                                     Serial_Buffer_Out[1] = pause_Time;
  2737   000FA8  C029  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2738   000FAC                     
  2739                           ; BSR set to: 0
  2740                           ;main.c: 744:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2741   000FAC  C01F  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2742   000FB0                     
  2743                           ; BSR set to: 0
  2744                           ;main.c: 745:                                     Serial_Buffer_Out[3] = vib_Time;
  2745   000FB0  C028  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2746   000FB4                     
  2747                           ; BSR set to: 0
  2748                           ;main.c: 746:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2749   000FB4  C027  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2750   000FB8                     
  2751                           ; BSR set to: 0
  2752                           ;main.c: 748:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2753   000FB8  0E02               	movlw	2
  2754   000FBA  0100               	movlb	0	; () banked
  2755   000FBC  6F9F               	movwf	(??_main+1)& (0+255),b
  2756   000FBE  0E04               	movlw	4
  2757   000FC0  6F9E               	movwf	??_main& (0+255),b
  2758   000FC2  0EBA               	movlw	186
  2759   000FC4                     u4287:
  2760   000FC4  2EE8               	decfsz	wreg,f,c
  2761   000FC6  D7FE               	bra	u4287
  2762   000FC8  2F9E               	decfsz	??_main& (0+255),f,b
  2763   000FCA  D7FC               	bra	u4287
  2764   000FCC  2F9F               	decfsz	(??_main+1)& (0+255),f,b
  2765   000FCE  D7FA               	bra	u4287
  2766   000FD0  F000               	nop	
  2767   000FD2                     
  2768                           ;main.c: 750:                                     INTCONbits.GIE = 0;
  2769   000FD2  9EF2               	bcf	242,7,c	;volatile
  2770   000FD4                     
  2771                           ;main.c: 751:                                     for (i = 0; i < 5; i++) {
  2772   000FD4  0E00               	movlw	0
  2773   000FD6  6E12               	movwf	(_i+1)^0,c
  2774   000FD8  0E00               	movlw	0
  2775   000FDA  6E11               	movwf	_i^0,c
  2776   000FDC                     l5811:
  2777   000FDC  5012               	movf	(_i+1)^0,w,c
  2778   000FDE  E109               	bnz	u4170
  2779   000FE0  0E05               	movlw	5
  2780   000FE2  5C11               	subwf	_i^0,w,c
  2781   000FE4  A0D8               	btfss	status,0,c
  2782   000FE6  EFF7  F007         	goto	u4171
  2783   000FEA  EFF9  F007         	goto	u4170
  2784   000FEE                     u4171:
  2785   000FEE  EFFB  F007         	goto	l5815
  2786   000FF2                     u4170:
  2787   000FF2  EF08  F008         	goto	l299
  2788   000FF6                     l5815:
  2789                           
  2790                           ;main.c: 752:                                         Write1USART(Serial_Buffer_Out[i]);
  2791   000FF6  0E60               	movlw	low _Serial_Buffer_Out
  2792   000FF8  2411               	addwf	_i^0,w,c
  2793   000FFA  6ED9               	movwf	fsr2l,c
  2794   000FFC  0E00               	movlw	high _Serial_Buffer_Out
  2795   000FFE  2012               	addwfc	(_i+1)^0,w,c
  2796   001000  6EDA               	movwf	fsr2h,c
  2797   001002  50DF               	movf	indf2,w,c
  2798   001004  EC04  F013         	call	_Write1USART
  2799   001008                     
  2800                           ;main.c: 753:                                     }
  2801   001008  4A11               	infsnz	_i^0,f,c
  2802   00100A  2A12               	incf	(_i+1)^0,f,c
  2803   00100C  EFEE  F007         	goto	l5811
  2804   001010                     l299:
  2805                           
  2806                           ;main.c: 754:                                     INTCONbits.GIE = 1;
  2807   001010  8EF2               	bsf	242,7,c	;volatile
  2808   001012                     l5821:
  2809                           
  2810                           ;main.c: 756:                                 flushOut();
  2811   001012  EC22  F012         	call	_flushOut	;wreg free
  2812   001016  EF1B  F007         	goto	l5747
  2813   00101A                     l5825:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;main.c: 793:                             if (Busy == 0) {
  2817   00101A  502D               	movf	_Busy^0,w,c
  2818   00101C  A4D8               	btfss	status,2,c
  2819   00101E  EF13  F008         	goto	u4181
  2820   001022  EF15  F008         	goto	u4180
  2821   001026                     u4181:
  2822   001026  EF6D  F008         	goto	l5851
  2823   00102A                     u4180:
  2824   00102A                     
  2825                           ; BSR set to: 0
  2826                           ;main.c: 794:                                 Busy = 1;
  2827   00102A  0E01               	movlw	1
  2828   00102C  6E2D               	movwf	_Busy^0,c
  2829   00102E                     
  2830                           ; BSR set to: 0
  2831                           ;main.c: 795:                                 vib_Time = Serial_Buffer[2];
  2832   00102E  C082  F028         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2833                           
  2834                           ;main.c: 797:                                 switch (vib_Time) {
  2835   001032  EF3B  F008         	goto	l5843
  2836   001036                     l5831:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;main.c: 799:                                         Vmotor_Time = 1000;
  2840   001036  0E03               	movlw	3
  2841   001038  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2842   00103A  0EE8               	movlw	232
  2843   00103C  6E56               	movwf	_Vmotor_Time^0,c
  2844                           
  2845                           ;main.c: 800:                                         break;
  2846   00103E  EF5C  F008         	goto	l304
  2847   001042                     l5833:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;main.c: 804:                                         Vmotor_Time = 2000;
  2851   001042  0E07               	movlw	7
  2852   001044  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2853   001046  0ED0               	movlw	208
  2854   001048  6E56               	movwf	_Vmotor_Time^0,c
  2855                           
  2856                           ;main.c: 805:                                         vib_Time = 0x82;
  2857   00104A  0E82               	movlw	130
  2858   00104C  6E28               	movwf	_vib_Time^0,c	;volatile
  2859                           
  2860                           ;main.c: 806:                                         break;
  2861   00104E  EF5C  F008         	goto	l304
  2862   001052                     l5835:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;main.c: 809:                                         Vmotor_Time = 3000;
  2866   001052  0E0B               	movlw	11
  2867   001054  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2868   001056  0EB8               	movlw	184
  2869   001058  6E56               	movwf	_Vmotor_Time^0,c
  2870                           
  2871                           ;main.c: 810:                                         break;
  2872   00105A  EF5C  F008         	goto	l304
  2873   00105E                     l5837:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;main.c: 813:                                         Vmotor_Time = 4000;
  2877   00105E  0E0F               	movlw	15
  2878   001060  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2879   001062  0EA0               	movlw	160
  2880   001064  6E56               	movwf	_Vmotor_Time^0,c
  2881                           
  2882                           ;main.c: 814:                                         break;
  2883   001066  EF5C  F008         	goto	l304
  2884   00106A                     l5839:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;main.c: 817:                                         Vmotor_Time = 5000;
  2888   00106A  0E13               	movlw	19
  2889   00106C  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2890   00106E  0E88               	movlw	136
  2891   001070  6E56               	movwf	_Vmotor_Time^0,c
  2892                           
  2893                           ;main.c: 818:                                         break;
  2894   001072  EF5C  F008         	goto	l304
  2895   001076                     l5843:
  2896                           
  2897                           ; BSR set to: 0
  2898   001076  5028               	movf	_vib_Time^0,w,c	;volatile
  2899   001078  6F9E               	movwf	??_main& (0+255),b
  2900   00107A  6B9F               	clrf	(??_main+1)& (0+255),b
  2901                           
  2902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2903                           ; Switch size 1, requested type "simple"
  2904                           ; Number of cases is 1, Range of values is 0 to 0
  2905                           ; switch strategies available:
  2906                           ; Name         Instructions Cycles
  2907                           ; simple_byte            4     3 (average)
  2908                           ;	Chosen strategy is simple_byte
  2909   00107C  519F               	movf	(??_main+1)& (0+255),w,b
  2910   00107E  0A00               	xorlw	0	; case 0
  2911   001080  B4D8               	btfsc	status,2,c
  2912   001082  EF45  F008         	goto	l6217
  2913   001086  EF21  F008         	goto	l5833
  2914   00108A                     l6217:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ; Switch size 1, requested type "simple"
  2918                           ; Number of cases is 5, Range of values is 129 to 133
  2919                           ; switch strategies available:
  2920                           ; Name         Instructions Cycles
  2921                           ; simple_byte           16     9 (average)
  2922                           ;	Chosen strategy is simple_byte
  2923   00108A  519E               	movf	??_main& (0+255),w,b
  2924   00108C  0A81               	xorlw	129	; case 129
  2925   00108E  B4D8               	btfsc	status,2,c
  2926   001090  EF1B  F008         	goto	l5831
  2927   001094  0A03               	xorlw	3	; case 130
  2928   001096  B4D8               	btfsc	status,2,c
  2929   001098  EF21  F008         	goto	l5833
  2930   00109C  0A01               	xorlw	1	; case 131
  2931   00109E  B4D8               	btfsc	status,2,c
  2932   0010A0  EF29  F008         	goto	l5835
  2933   0010A4  0A07               	xorlw	7	; case 132
  2934   0010A6  B4D8               	btfsc	status,2,c
  2935   0010A8  EF2F  F008         	goto	l5837
  2936   0010AC  0A01               	xorlw	1	; case 133
  2937   0010AE  B4D8               	btfsc	status,2,c
  2938   0010B0  EF35  F008         	goto	l5839
  2939   0010B4  EF21  F008         	goto	l5833
  2940   0010B8                     l304:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;main.c: 820:                                 INTCONbits.GIE = 0;
  2944   0010B8  9EF2               	bcf	242,7,c	;volatile
  2945   0010BA                     
  2946                           ; BSR set to: 0
  2947                           ;main.c: 821:                                 write_i2c(0x0040, vib_Time);
  2948   0010BA  0E40               	movlw	64
  2949   0010BC  6E46               	movwf	write_i2c@address^0,c
  2950   0010BE  0E00               	movlw	0
  2951   0010C0  6E47               	movwf	(write_i2c@address+1)^0,c
  2952   0010C2  0E00               	movlw	0
  2953   0010C4  6E48               	movwf	(write_i2c@address+2)^0,c
  2954   0010C6  0E00               	movlw	0
  2955   0010C8  6E49               	movwf	(write_i2c@address+3)^0,c
  2956   0010CA  C028  F04A         	movff	_vib_Time,write_i2c@data	;volatile
  2957   0010CE  6A4B               	clrf	(write_i2c@data+1)^0,c
  2958   0010D0  EC7F  F011         	call	_write_i2c	;wreg free
  2959   0010D4                     
  2960                           ;main.c: 822:                                 INTCONbits.GIE = 1;
  2961   0010D4  8EF2               	bsf	242,7,c	;volatile
  2962   0010D6                     
  2963                           ;main.c: 824:                                 Busy = 0;
  2964   0010D6  0E00               	movlw	0
  2965   0010D8  6E2D               	movwf	_Busy^0,c
  2966   0010DA                     l5851:
  2967                           
  2968                           ;main.c: 829:                             if (Busy == 0) {
  2969   0010DA  502D               	movf	_Busy^0,w,c
  2970   0010DC  A4D8               	btfss	status,2,c
  2971   0010DE  EF73  F008         	goto	u4191
  2972   0010E2  EF75  F008         	goto	u4190
  2973   0010E6                     u4191:
  2974   0010E6  EFAF  F008         	goto	l5871
  2975   0010EA                     u4190:
  2976   0010EA                     
  2977                           ;main.c: 830:                                 Busy = 1;
  2978   0010EA  0E01               	movlw	1
  2979   0010EC  6E2D               	movwf	_Busy^0,c
  2980   0010EE                     
  2981                           ;main.c: 831:                                 delay_motor_stop_time = Serial_Buffer[2];
  2982   0010EE  C082  F027         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2983   0010F2                     
  2984                           ;main.c: 832:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2985   0010F2  C027  F01D         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2986   0010F6  6A1E               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2987   0010F8                     
  2988                           ;main.c: 834:                                 INTCONbits.GIE = 0;
  2989   0010F8  9EF2               	bcf	242,7,c	;volatile
  2990   0010FA                     
  2991                           ;main.c: 835:                                 write_i2c(0x0050, delay_motor_stop_time);
  2992   0010FA  0E50               	movlw	80
  2993   0010FC  6E46               	movwf	write_i2c@address^0,c
  2994   0010FE  0E00               	movlw	0
  2995   001100  6E47               	movwf	(write_i2c@address+1)^0,c
  2996   001102  0E00               	movlw	0
  2997   001104  6E48               	movwf	(write_i2c@address+2)^0,c
  2998   001106  0E00               	movlw	0
  2999   001108  6E49               	movwf	(write_i2c@address+3)^0,c
  3000   00110A  C027  F04A         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  3001   00110E  6A4B               	clrf	(write_i2c@data+1)^0,c
  3002   001110  EC7F  F011         	call	_write_i2c	;wreg free
  3003   001114                     
  3004                           ;main.c: 836:                                 INTCONbits.GIE = 1;
  3005   001114  8EF2               	bsf	242,7,c	;volatile
  3006   001116  EF1B  F007         	goto	l5747
  3007   00111A                     l5869:
  3008   00111A  0100               	movlb	0	; () banked
  3009   00111C  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  3010   00111E  6F9E               	movwf	??_main& (0+255),b
  3011   001120  6B9F               	clrf	(??_main+1)& (0+255),b
  3012                           
  3013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3014                           ; Switch size 1, requested type "simple"
  3015                           ; Number of cases is 1, Range of values is 0 to 0
  3016                           ; switch strategies available:
  3017                           ; Name         Instructions Cycles
  3018                           ; simple_byte            4     3 (average)
  3019                           ;	Chosen strategy is simple_byte
  3020   001122  519F               	movf	(??_main+1)& (0+255),w,b
  3021   001124  0A00               	xorlw	0	; case 0
  3022   001126  B4D8               	btfsc	status,2,c
  3023   001128  EF98  F008         	goto	l6219
  3024   00112C  EFAF  F008         	goto	l5871
  3025   001130                     l6219:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ; Switch size 1, requested type "simple"
  3029                           ; Number of cases is 5, Range of values is 35 to 102
  3030                           ; switch strategies available:
  3031                           ; Name         Instructions Cycles
  3032                           ; simple_byte           16     9 (average)
  3033                           ;	Chosen strategy is simple_byte
  3034   001130  519E               	movf	??_main& (0+255),w,b
  3035   001132  0A23               	xorlw	35	; case 35
  3036   001134  B4D8               	btfsc	status,2,c
  3037   001136  EF1F  F007         	goto	l5749
  3038   00113A  0A67               	xorlw	103	; case 68
  3039   00113C  B4D8               	btfsc	status,2,c
  3040   00113E  EF92  F006         	goto	l5703
  3041   001142  0A15               	xorlw	21	; case 81
  3042   001144  B4D8               	btfsc	status,2,c
  3043   001146  EF8B  F007         	goto	l5779
  3044   00114A  0A34               	xorlw	52	; case 101
  3045   00114C  B4D8               	btfsc	status,2,c
  3046   00114E  EF0D  F008         	goto	l5825
  3047   001152  0A03               	xorlw	3	; case 102
  3048   001154  B4D8               	btfsc	status,2,c
  3049   001156  EF6D  F008         	goto	l5851
  3050   00115A  EFAF  F008         	goto	l5871
  3051   00115E                     l5871:
  3052                           
  3053                           ;main.c: 845:                     Serial_Flag = 0;
  3054   00115E  0E00               	movlw	0
  3055   001160  6E31               	movwf	_Serial_Flag^0,c
  3056                           
  3057                           ;main.c: 846:                     Serial_GData = 0;
  3058   001162  0E00               	movlw	0
  3059   001164  6E30               	movwf	_Serial_GData^0,c
  3060                           
  3061                           ;main.c: 847:                     OpMode = MANUAL_MODE;
  3062   001166  0E00               	movlw	0
  3063   001168  6E2A               	movwf	_OpMode^0,c	;volatile
  3064                           
  3065                           ;main.c: 848:                 } else {
  3066   00116A  EF90  F004         	goto	l5585
  3067   00116E                     l5873:
  3068                           
  3069                           ;main.c: 849:                     OpMode = MANUAL_MODE;
  3070   00116E  0E00               	movlw	0
  3071   001170  6E2A               	movwf	_OpMode^0,c	;volatile
  3072   001172  EF90  F004         	goto	l5585
  3073   001176                     l5875:
  3074   001176  502A               	movf	_OpMode^0,w,c	;volatile
  3075   001178  0100               	movlb	0	; () banked
  3076   00117A  6F9E               	movwf	??_main& (0+255),b
  3077   00117C  6B9F               	clrf	(??_main+1)& (0+255),b
  3078                           
  3079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3080                           ; Switch size 1, requested type "simple"
  3081                           ; Number of cases is 1, Range of values is 0 to 0
  3082                           ; switch strategies available:
  3083                           ; Name         Instructions Cycles
  3084                           ; simple_byte            4     3 (average)
  3085                           ;	Chosen strategy is simple_byte
  3086   00117E  519F               	movf	(??_main+1)& (0+255),w,b
  3087   001180  0A00               	xorlw	0	; case 0
  3088   001182  B4D8               	btfsc	status,2,c
  3089   001184  EFC6  F008         	goto	l6221
  3090   001188  EF90  F004         	goto	l5585
  3091   00118C                     l6221:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ; Switch size 1, requested type "simple"
  3095                           ; Number of cases is 2, Range of values is 0 to 2
  3096                           ; switch strategies available:
  3097                           ; Name         Instructions Cycles
  3098                           ; simple_byte            7     4 (average)
  3099                           ;	Chosen strategy is simple_byte
  3100   00118C  519E               	movf	??_main& (0+255),w,b
  3101   00118E  0A00               	xorlw	0	; case 0
  3102   001190  B4D8               	btfsc	status,2,c
  3103   001192  EFA3  F004         	goto	l245
  3104   001196  0A02               	xorlw	2	; case 2
  3105   001198  B4D8               	btfsc	status,2,c
  3106   00119A  EF88  F006         	goto	l5699
  3107   00119E  EF90  F004         	goto	l5585
  3108   0011A2  EF81  F001         	goto	start
  3109   0011A6                     __end_of_main:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _read_i2c *****************
  3113 ;; Defined at:
  3114 ;;		line 120 in file "i2c.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  address         4   20[COMRAM] long 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  read_byte       2   24[COMRAM] int 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  2   20[COMRAM] int 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;Total ram usage:        6 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 4
  3135 ;; This function calls:
  3136 ;;		___aldiv
  3137 ;;		_i2c_Address
  3138 ;;		_i2c_Read
  3139 ;;		_i2c_Restart
  3140 ;;		_i2c_Start
  3141 ;;		_i2c_Stop
  3142 ;;		_i2c_Write
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text1
  3149   00223C                     __ptext1:
  3150                           	callstack 0
  3151   00223C                     _read_i2c:
  3152                           	callstack 26
  3153   00223C                     
  3154                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  3155   00223C  EC49  F013         	call	_i2c_Start	;wreg free
  3156                           
  3157                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  3158   002240  0E00               	movlw	0
  3159   002242  6E39               	movwf	i2c_Address@mode^0,c
  3160   002244  0EA0               	movlw	160
  3161   002246  EC1A  F013         	call	_i2c_Address
  3162                           
  3163                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  3164   00224A  C046  F038         	movff	read_i2c@address,___aldiv@dividend
  3165   00224E  C047  F039         	movff	read_i2c@address+1,___aldiv@dividend+1
  3166   002252  C048  F03A         	movff	read_i2c@address+2,___aldiv@dividend+2
  3167   002256  C049  F03B         	movff	read_i2c@address+3,___aldiv@dividend+3
  3168   00225A  0E00               	movlw	0
  3169   00225C  6E3C               	movwf	___aldiv@divisor^0,c
  3170   00225E  0E01               	movlw	1
  3171   002260  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  3172   002262  0E00               	movlw	0
  3173   002264  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  3174   002266  0E00               	movlw	0
  3175   002268  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  3176   00226A  ECF7  F00B         	call	___aldiv	;wreg free
  3177   00226E  5038               	movf	?___aldiv^0,w,c
  3178   002270  EC2B  F013         	call	_i2c_Write
  3179                           
  3180                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  3181   002274  5046               	movf	read_i2c@address^0,w,c
  3182   002276  EC2B  F013         	call	_i2c_Write
  3183                           
  3184                           ;i2c.c: 128:     i2c_Restart();
  3185   00227A  EC41  F013         	call	_i2c_Restart	;wreg free
  3186                           
  3187                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  3188   00227E  0E01               	movlw	1
  3189   002280  6E39               	movwf	i2c_Address@mode^0,c
  3190   002282  0EA0               	movlw	160
  3191   002284  EC1A  F013         	call	_i2c_Address
  3192                           
  3193                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  3194   002288  0E00               	movlw	0
  3195   00228A  EC3F  F012         	call	_i2c_Read
  3196   00228E  C039  F04A         	movff	?_i2c_Read,read_i2c@read_byte
  3197   002292  C03A  F04B         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  3198                           
  3199                           ;i2c.c: 134:     i2c_Stop();
  3200   002296  EC45  F013         	call	_i2c_Stop	;wreg free
  3201   00229A                     
  3202                           ;i2c.c: 135:     return (read_byte);
  3203   00229A  C04A  F046         	movff	read_i2c@read_byte,?_read_i2c
  3204   00229E  C04B  F047         	movff	read_i2c@read_byte+1,?_read_i2c+1
  3205   0022A2  0012               	return		;funcret
  3206   0022A4                     __end_of_read_i2c:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _i2c_Restart *****************
  3210 ;; Defined at:
  3211 ;;		line 56 in file "i2c.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 3
  3232 ;; This function calls:
  3233 ;;		_i2c_Wait
  3234 ;; This function is called by:
  3235 ;;		_read_i2c
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text2
  3240   002682                     __ptext2:
  3241                           	callstack 0
  3242   002682                     _i2c_Restart:
  3243                           	callstack 26
  3244   002682                     
  3245                           ;i2c.c: 57:     i2c_Wait();
  3246   002682  ECB5  F012         	call	_i2c_Wait	;wreg free
  3247   002686                     
  3248                           ;i2c.c: 58:     RSEN2 = 1;
  3249   002686  826B               	bsf	3947,1,c	;volatile
  3250   002688  0012               	return		;funcret
  3251   00268A                     __end_of_i2c_Restart:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _i2c_Read *****************
  3255 ;; Defined at:
  3256 ;;		line 89 in file "i2c.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  ack             1    wreg     unsigned char 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  ack             1    9[COMRAM] unsigned char 
  3261 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  2    7[COMRAM] int 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        4 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 3
  3278 ;; This function calls:
  3279 ;;		_i2c_Wait
  3280 ;; This function is called by:
  3281 ;;		_read_i2c
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text3
  3286   00247E                     __ptext3:
  3287                           	callstack 0
  3288   00247E                     _i2c_Read:
  3289                           	callstack 26
  3290                           
  3291                           ;incstack = 0
  3292                           ;i2c_Read@ack stored from wreg
  3293   00247E  6E3B               	movwf	i2c_Read@ack^0,c
  3294   002480                     
  3295                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  3296   002480  ECB5  F012         	call	_i2c_Wait	;wreg free
  3297   002484                     
  3298                           ;i2c.c: 96:     RCEN2 = 1;
  3299   002484  866B               	bsf	3947,3,c	;volatile
  3300                           
  3301                           ;i2c.c: 97:     i2c_Wait();
  3302   002486  ECB5  F012         	call	_i2c_Wait	;wreg free
  3303   00248A                     
  3304                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  3305   00248A  CF6F F03C          	movff	3951,i2c_Read@i2cReadData	;volatile
  3306                           
  3307                           ;i2c.c: 99:     i2c_Wait();
  3308   00248E  ECB5  F012         	call	_i2c_Wait	;wreg free
  3309   002492                     
  3310                           ;i2c.c: 100:     if (ack)
  3311   002492  503B               	movf	i2c_Read@ack^0,w,c
  3312   002494  B4D8               	btfsc	status,2,c
  3313   002496  EF4F  F012         	goto	u3621
  3314   00249A  EF51  F012         	goto	u3620
  3315   00249E                     u3621:
  3316   00249E  EF54  F012         	goto	l618
  3317   0024A2                     u3620:
  3318   0024A2                     
  3319                           ;i2c.c: 101:         ACKDT2 = 0;
  3320   0024A2  9A6B               	bcf	3947,5,c	;volatile
  3321   0024A4  EF55  F012         	goto	l619
  3322   0024A8                     l618:
  3323                           
  3324                           ;i2c.c: 103:         ACKDT2 = 1;
  3325   0024A8  8A6B               	bsf	3947,5,c	;volatile
  3326   0024AA                     l619:
  3327                           
  3328                           ;i2c.c: 104:     ACKEN2 = 1;
  3329   0024AA  886B               	bsf	3947,4,c	;volatile
  3330                           
  3331                           ;i2c.c: 106:     return ( i2cReadData);
  3332   0024AC  C03C  F039         	movff	i2c_Read@i2cReadData,?_i2c_Read
  3333   0024B0  6A3A               	clrf	(?_i2c_Read+1)^0,c
  3334   0024B2  0012               	return		;funcret
  3335   0024B4                     __end_of_i2c_Read:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _pwm_set *****************
  3339 ;; Defined at:
  3340 ;;		line 177 in file "main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  duty            2    6[COMRAM] unsigned short 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:        4 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 2
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text4
  3369   0024EA                     __ptext4:
  3370                           	callstack 0
  3371   0024EA                     _pwm_set:
  3372                           	callstack 28
  3373   0024EA                     
  3374                           ;main.c: 178:     CCP1CONbits.DC1B = (uint8_t)(duty & 0x0003);
  3375   0024EA  C038  F03A         	movff	pwm_set@duty,??_pwm_set
  3376   0024EE  0E03               	movlw	3
  3377   0024F0  163A               	andwf	??_pwm_set^0,f,c
  3378   0024F2  3A3A               	swapf	??_pwm_set^0,f,c
  3379   0024F4  50BB               	movf	187,w,c	;volatile
  3380   0024F6  183A               	xorwf	??_pwm_set^0,w,c
  3381   0024F8  0BCF               	andlw	-49
  3382   0024FA  183A               	xorwf	??_pwm_set^0,w,c
  3383   0024FC  6EBB               	movwf	187,c	;volatile
  3384                           
  3385                           ;main.c: 179:     CCPR1L = (uint8_t)(duty >> 2);
  3386   0024FE  C038  F03A         	movff	pwm_set@duty,??_pwm_set
  3387   002502  C039  F03B         	movff	pwm_set@duty+1,??_pwm_set+1
  3388   002506  90D8               	bcf	status,0,c
  3389   002508  323B               	rrcf	(??_pwm_set+1)^0,f,c
  3390   00250A  323A               	rrcf	??_pwm_set^0,f,c
  3391   00250C  90D8               	bcf	status,0,c
  3392   00250E  323B               	rrcf	(??_pwm_set+1)^0,f,c
  3393   002510  323A               	rrcf	??_pwm_set^0,f,c
  3394   002512  503A               	movf	??_pwm_set^0,w,c
  3395   002514  6EBC               	movwf	188,c	;volatile
  3396   002516  0012               	return		;funcret
  3397   002518                     __end_of_pwm_set:
  3398                           	callstack 0
  3399                           
  3400 ;; *************** function _initUSART *****************
  3401 ;; Defined at:
  3402 ;;		line 20 in file "usart.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, status,2
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 2
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text5
  3431   002544                     __ptext5:
  3432                           	callstack 0
  3433   002544                     _initUSART:
  3434                           	callstack 28
  3435   002544                     
  3436                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  3437   002544  9C94               	bcf	148,6,c	;volatile
  3438                           
  3439                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  3440   002546  8E94               	bsf	148,7,c	;volatile
  3441                           
  3442                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  3443   002548  98AD               	bcf	173,4,c	;volatile
  3444                           
  3445                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  3446   00254A  9CAD               	bcf	173,6,c	;volatile
  3447                           
  3448                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  3449   00254C  8AAD               	bsf	173,5,c	;volatile
  3450                           
  3451                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  3452   00254E  9CAC               	bcf	172,6,c	;volatile
  3453                           
  3454                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  3455   002550  88AC               	bsf	172,4,c	;volatile
  3456                           
  3457                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  3458   002552  9EAD               	bcf	173,7,c	;volatile
  3459                           
  3460                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  3461   002554  86AC               	bsf	172,3,c	;volatile
  3462                           
  3463                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  3464   002556  8EAC               	bsf	172,7,c	;volatile
  3465                           
  3466                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  3467   002558  967E               	bcf	126,3,c	;volatile
  3468                           
  3469                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  3470   00255A  84AD               	bsf	173,2,c	;volatile
  3471                           
  3472                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  3473   00255C  8A9D               	bsf	157,5,c	;volatile
  3474                           
  3475                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  3476   00255E  989D               	bcf	157,4,c	;volatile
  3477   002560                     
  3478                           ;usart.c: 39:     SPBRG1 = 25;
  3479   002560  0E19               	movlw	25
  3480   002562  6EB0               	movwf	176,c	;volatile
  3481                           
  3482                           ;usart.c: 40:     SPBRGH1 = 0;
  3483   002564  0E00               	movlw	0
  3484   002566  6E7F               	movwf	127,c	;volatile
  3485   002568  0012               	return		;funcret
  3486   00256A                     __end_of_initUSART:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _initMotor *****************
  3490 ;; Defined at:
  3491 ;;		line 21 in file "MotorDriver.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 2
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_main
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text6
  3520   002648                     __ptext6:
  3521                           	callstack 0
  3522   002648                     _initMotor:
  3523                           	callstack 28
  3524   002648                     
  3525                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  3526   002648  0EC7               	movlw	199
  3527   00264A  6E77               	movwf	119,c	;volatile
  3528   00264C                     
  3529                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  3530   00264C  9679               	bcf	121,3,c	;volatile
  3531   00264E                     
  3532                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  3533   00264E  8C79               	bsf	121,6,c	;volatile
  3534                           
  3535                           ;MotorDriver.c: 25:     T4CON = 0x00;
  3536   002650  0E00               	movlw	0
  3537   002652  6E76               	movwf	118,c	;volatile
  3538   002654  0012               	return		;funcret
  3539   002656                     __end_of_initMotor:
  3540                           	callstack 0
  3541                           
  3542 ;; *************** function _init *****************
  3543 ;; Defined at:
  3544 ;;		line 18 in file "IO.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 2
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text7
  3573   0021CA                     __ptext7:
  3574                           	callstack 0
  3575   0021CA                     _init:
  3576                           	callstack 28
  3577   0021CA                     
  3578                           ;IO.c: 19:     TRISA = 0xFB;
  3579   0021CA  0EFB               	movlw	251
  3580   0021CC  6E92               	movwf	146,c	;volatile
  3581   0021CE                     
  3582                           ;IO.c: 20:     TRISB = 0XFF;
  3583   0021CE  6893               	setf	147,c	;volatile
  3584                           
  3585                           ;IO.c: 21:     TRISC = 0X84;
  3586   0021D0  0E84               	movlw	132
  3587   0021D2  6E94               	movwf	148,c	;volatile
  3588                           
  3589                           ;IO.c: 22:     TRISD = 0XC0;
  3590   0021D4  0EC0               	movlw	192
  3591   0021D6  6E95               	movwf	149,c	;volatile
  3592                           
  3593                           ;IO.c: 23:     TRISE = 0X00;
  3594   0021D8  0E00               	movlw	0
  3595   0021DA  6E96               	movwf	150,c	;volatile
  3596                           
  3597                           ;IO.c: 24:     TRISF = 0X00;
  3598   0021DC  0E00               	movlw	0
  3599   0021DE  6E97               	movwf	151,c	;volatile
  3600                           
  3601                           ;IO.c: 25:     TRISG = 0X05;
  3602   0021E0  0E05               	movlw	5
  3603   0021E2  6E98               	movwf	152,c	;volatile
  3604   0021E4                     
  3605                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3606   0021E4  9EC2               	bcf	194,7,c	;volatile
  3607   0021E6                     
  3608                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3609   0021E6  9CC2               	bcf	194,6,c	;volatile
  3610   0021E8                     
  3611                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3612   0021E8  90C2               	bcf	194,0,c	;volatile
  3613   0021EA                     
  3614                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3615   0021EA  8EC1               	bsf	193,7,c	;volatile
  3616   0021EC                     
  3617                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3618   0021EC  9CC1               	bcf	193,6,c	;volatile
  3619   0021EE                     
  3620                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3621   0021EE  9AC1               	bcf	193,5,c	;volatile
  3622   0021F0                     
  3623                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3624   0021F0  88C1               	bsf	193,4,c	;volatile
  3625   0021F2                     
  3626                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3627   0021F2  96C1               	bcf	193,3,c	;volatile
  3628   0021F4                     
  3629                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3630   0021F4  84C1               	bsf	193,2,c	;volatile
  3631   0021F6                     
  3632                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3633   0021F6  92C1               	bcf	193,1,c	;volatile
  3634   0021F8                     
  3635                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3636   0021F8  90C1               	bcf	193,0,c	;volatile
  3637   0021FA                     
  3638                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3639   0021FA  88C0               	bsf	192,4,c	;volatile
  3640   0021FC                     
  3641                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3642   0021FC  90C1               	bcf	193,0,c	;volatile
  3643   0021FE                     
  3644                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3645   0021FE  82C1               	bsf	193,1,c	;volatile
  3646   002200                     
  3647                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3648   002200  84C1               	bsf	193,2,c	;volatile
  3649   002202                     
  3650                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3651   002202  86C1               	bsf	193,3,c	;volatile
  3652   002204                     
  3653                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3654   002204  88C1               	bsf	193,4,c	;volatile
  3655   002206                     
  3656                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3657   002206  8EC1               	bsf	193,7,c	;volatile
  3658   002208                     
  3659                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3660   002208  98C0               	bcf	192,4,c	;volatile
  3661   00220A                     
  3662                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3663   00220A  8EF2               	bsf	242,7,c	;volatile
  3664                           
  3665                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3666   00220C  0E03               	movlw	3
  3667   00220E  12D3               	iorwf	211,f,c	;volatile
  3668                           
  3669                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3670   002210  0E70               	movlw	112
  3671   002212  12D3               	iorwf	211,f,c	;volatile
  3672                           
  3673                           ;IO.c: 68:     ADRES = 0;
  3674   002214  0E00               	movlw	0
  3675   002216  6EC4               	movwf	196,c	;volatile
  3676   002218  0E00               	movlw	0
  3677   00221A  6EC3               	movwf	195,c	;volatile
  3678   00221C                     
  3679                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3680   00221C  94C2               	bcf	194,2,c	;volatile
  3681   00221E                     
  3682                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3683   00221E  96C2               	bcf	194,3,c	;volatile
  3684   002220                     
  3685                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3686   002220  98C2               	bcf	194,4,c	;volatile
  3687   002222                     
  3688                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3689   002222  9AC2               	bcf	194,5,c	;volatile
  3690   002224                     
  3691                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3692   002224  8CC1               	bsf	193,6,c	;volatile
  3693   002226                     
  3694                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3695   002226  80C2               	bsf	194,0,c	;volatile
  3696   002228                     
  3697                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3698   002228  82C2               	bsf	194,1,c	;volatile
  3699   00222A                     l689:
  3700                           
  3701                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3702   00222A  B2C2               	btfsc	194,1,c	;volatile
  3703   00222C  EF1A  F011         	goto	u2121
  3704   002230  EF1C  F011         	goto	u2120
  3705   002234                     u2121:
  3706   002234  EF15  F011         	goto	l689
  3707   002238                     u2120:
  3708   002238                     
  3709                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3710   002238  9CC1               	bcf	193,6,c	;volatile
  3711   00223A  0012               	return		;funcret
  3712   00223C                     __end_of_init:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _i2c_Init *****************
  3716 ;; Defined at:
  3717 ;;		line 25 in file "i2c.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 2
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text8
  3746   0025F2                     __ptext8:
  3747                           	callstack 0
  3748   0025F2                     _i2c_Init:
  3749                           	callstack 28
  3750   0025F2                     
  3751                           ;i2c.c: 29:     TRISD5 = 1;
  3752   0025F2  8A95               	bsf	3989,5,c	;volatile
  3753                           
  3754                           ;i2c.c: 30:     TRISD6 = 1;
  3755   0025F4  8C95               	bsf	3989,6,c	;volatile
  3756   0025F6                     
  3757                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3758   0025F6  0E28               	movlw	40
  3759   0025F8  6E6C               	movwf	108,c	;volatile
  3760                           
  3761                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3762   0025FA  0E00               	movlw	0
  3763   0025FC  6E6B               	movwf	107,c	;volatile
  3764                           
  3765                           ;i2c.c: 35:     SSP2ADD = 39;
  3766   0025FE  0E27               	movlw	39
  3767   002600  6E6E               	movwf	110,c	;volatile
  3768                           
  3769                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3770   002602  0EC0               	movlw	192
  3771   002604  6E6D               	movwf	109,c	;volatile
  3772   002606  0012               	return		;funcret
  3773   002608                     __end_of_i2c_Init:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _flush *****************
  3777 ;; Defined at:
  3778 ;;		line 1299 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  i               2    6[COMRAM] int 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        2 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 2
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text9
  3807   00240A                     __ptext9:
  3808                           	callstack 0
  3809   00240A                     _flush:
  3810                           	callstack 28
  3811   00240A                     
  3812                           ;main.c: 1300:     int i;;main.c: 1302:     for (i = 0; i < 16; i++) {
  3813   00240A  0E00               	movlw	0
  3814   00240C  6E39               	movwf	(flush@i+1)^0,c
  3815   00240E  0E00               	movlw	0
  3816   002410  6E38               	movwf	flush@i^0,c
  3817   002412                     l4027:
  3818                           
  3819                           ;main.c: 1303:         Serial_Buffer[i] = 0x00;
  3820   002412  0E80               	movlw	low _Serial_Buffer
  3821   002414  2438               	addwf	flush@i^0,w,c
  3822   002416  6ED9               	movwf	fsr2l,c
  3823   002418  0E00               	movlw	high _Serial_Buffer
  3824   00241A  2039               	addwfc	(flush@i+1)^0,w,c
  3825   00241C  6EDA               	movwf	fsr2h,c
  3826   00241E  0E00               	movlw	0
  3827   002420  6EDF               	movwf	indf2,c
  3828   002422                     
  3829                           ;main.c: 1304:     }
  3830   002422  4A38               	infsnz	flush@i^0,f,c
  3831   002424  2A39               	incf	(flush@i+1)^0,f,c
  3832   002426  BE39               	btfsc	(flush@i+1)^0,7,c
  3833   002428  EF1F  F012         	goto	u2681
  3834   00242C  5039               	movf	(flush@i+1)^0,w,c
  3835   00242E  E109               	bnz	u2680
  3836   002430  0E10               	movlw	16
  3837   002432  5C38               	subwf	flush@i^0,w,c
  3838   002434  A0D8               	btfss	status,0,c
  3839   002436  EF1F  F012         	goto	u2681
  3840   00243A  EF21  F012         	goto	u2680
  3841   00243E                     u2681:
  3842   00243E  EF09  F012         	goto	l4027
  3843   002442                     u2680:
  3844   002442  0012               	return		;funcret
  3845   002444                     __end_of_flush:
  3846                           	callstack 0
  3847                           
  3848 ;; *************** function _WriteSTLED316SVibMode *****************
  3849 ;; Defined at:
  3850 ;;		line 244 in file "Display.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  dc_reg          2   12[COMRAM] unsigned int 
  3853 ;;  v_mode          1   14[COMRAM] unsigned char 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3865 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;Total ram usage:        3 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 3
  3872 ;; This function calls:
  3873 ;;		_STLED316s_SPI_SendData
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text10
  3880   001C02                     __ptext10:
  3881                           	callstack 0
  3882   001C02                     _WriteSTLED316SVibMode:
  3883                           	callstack 27
  3884   001C02                     
  3885                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  3886   001C02  988B               	bcf	139,4,c	;volatile
  3887   001C04                     
  3888                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  3889   001C04  0E00               	movlw	0
  3890   001C06  ECA5  F010         	call	_STLED316s_SPI_SendData
  3891   001C0A                     
  3892                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  3893   001C0A  888B               	bsf	139,4,c	;volatile
  3894   001C0C                     
  3895                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  3896   001C0C  988B               	bcf	139,4,c	;volatile
  3897                           
  3898                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  3899   001C0E  0E00               	movlw	0
  3900   001C10  ECA5  F010         	call	_STLED316s_SPI_SendData
  3901   001C14                     
  3902                           ;Display.c: 261:     if (v_mode == 1 && dc_reg == 0x01) {
  3903   001C14  0440               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3904   001C16  A4D8               	btfss	status,2,c
  3905   001C18  EF10  F00E         	goto	u2191
  3906   001C1C  EF12  F00E         	goto	u2190
  3907   001C20                     u2191:
  3908   001C20  EF23  F00E         	goto	l3747
  3909   001C24                     u2190:
  3910   001C24  043E               	decf	WriteSTLED316SVibMode@dc_reg^0,w,c
  3911   001C26  103F               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  3912   001C28  A4D8               	btfss	status,2,c
  3913   001C2A  EF19  F00E         	goto	u2201
  3914   001C2E  EF1B  F00E         	goto	u2200
  3915   001C32                     u2201:
  3916   001C32  EF23  F00E         	goto	l3747
  3917   001C36                     u2200:
  3918   001C36                     
  3919                           ;Display.c: 262:         STLED316s_SPI_SendData(0x3E);
  3920   001C36  0E3E               	movlw	62
  3921   001C38  ECA5  F010         	call	_STLED316s_SPI_SendData
  3922                           
  3923                           ;Display.c: 263:         STLED316s_SPI_SendData(0x86);
  3924   001C3C  0E86               	movlw	134
  3925   001C3E  ECA5  F010         	call	_STLED316s_SPI_SendData
  3926                           
  3927                           ;Display.c: 264:     }
  3928   001C42  EF70  F00E         	goto	l3765
  3929   001C46                     l3747:
  3930   001C46  0440               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3931   001C48  A4D8               	btfss	status,2,c
  3932   001C4A  EF29  F00E         	goto	u2211
  3933   001C4E  EF2B  F00E         	goto	u2210
  3934   001C52                     u2211:
  3935   001C52  EF3D  F00E         	goto	l3753
  3936   001C56                     u2210:
  3937   001C56  0E02               	movlw	2
  3938   001C58  183E               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  3939   001C5A  103F               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  3940   001C5C  A4D8               	btfss	status,2,c
  3941   001C5E  EF33  F00E         	goto	u2221
  3942   001C62  EF35  F00E         	goto	u2220
  3943   001C66                     u2221:
  3944   001C66  EF3D  F00E         	goto	l3753
  3945   001C6A                     u2220:
  3946   001C6A                     
  3947                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  3948   001C6A  0E3E               	movlw	62
  3949   001C6C  ECA5  F010         	call	_STLED316s_SPI_SendData
  3950                           
  3951                           ;Display.c: 267:         STLED316s_SPI_SendData(0xDB);
  3952   001C70  0EDB               	movlw	219
  3953   001C72  ECA5  F010         	call	_STLED316s_SPI_SendData
  3954                           
  3955                           ;Display.c: 268:     }
  3956   001C76  EF70  F00E         	goto	l3765
  3957   001C7A                     l3753:
  3958   001C7A  0440               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3959   001C7C  A4D8               	btfss	status,2,c
  3960   001C7E  EF43  F00E         	goto	u2231
  3961   001C82  EF45  F00E         	goto	u2230
  3962   001C86                     u2231:
  3963   001C86  EF57  F00E         	goto	l3759
  3964   001C8A                     u2230:
  3965   001C8A  0E03               	movlw	3
  3966   001C8C  183E               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  3967   001C8E  103F               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  3968   001C90  A4D8               	btfss	status,2,c
  3969   001C92  EF4D  F00E         	goto	u2241
  3970   001C96  EF4F  F00E         	goto	u2240
  3971   001C9A                     u2241:
  3972   001C9A  EF57  F00E         	goto	l3759
  3973   001C9E                     u2240:
  3974   001C9E                     
  3975                           ;Display.c: 270:         STLED316s_SPI_SendData(0x3E);
  3976   001C9E  0E3E               	movlw	62
  3977   001CA0  ECA5  F010         	call	_STLED316s_SPI_SendData
  3978                           
  3979                           ;Display.c: 271:         STLED316s_SPI_SendData(0xCF);
  3980   001CA4  0ECF               	movlw	207
  3981   001CA6  ECA5  F010         	call	_STLED316s_SPI_SendData
  3982                           
  3983                           ;Display.c: 272:     }
  3984   001CAA  EF70  F00E         	goto	l3765
  3985   001CAE                     l3759:
  3986   001CAE  5040               	movf	WriteSTLED316SVibMode@v_mode^0,w,c
  3987   001CB0  A4D8               	btfss	status,2,c
  3988   001CB2  EF5D  F00E         	goto	u2251
  3989   001CB6  EF5F  F00E         	goto	u2250
  3990   001CBA                     u2251:
  3991   001CBA  EF70  F00E         	goto	l548
  3992   001CBE                     u2250:
  3993   001CBE  503E               	movf	WriteSTLED316SVibMode@dc_reg^0,w,c
  3994   001CC0  103F               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  3995   001CC2  A4D8               	btfss	status,2,c
  3996   001CC4  EF66  F00E         	goto	u2261
  3997   001CC8  EF68  F00E         	goto	u2260
  3998   001CCC                     u2261:
  3999   001CCC  EF70  F00E         	goto	l548
  4000   001CD0                     u2260:
  4001   001CD0                     
  4002                           ;Display.c: 274:         STLED316s_SPI_SendData(0x3E);
  4003   001CD0  0E3E               	movlw	62
  4004   001CD2  ECA5  F010         	call	_STLED316s_SPI_SendData
  4005                           
  4006                           ;Display.c: 275:         STLED316s_SPI_SendData(0xBF);
  4007   001CD6  0EBF               	movlw	191
  4008   001CD8  ECA5  F010         	call	_STLED316s_SPI_SendData
  4009   001CDC  EF70  F00E         	goto	l3765
  4010   001CE0                     l548:
  4011   001CE0                     l3765:
  4012                           
  4013                           ;Display.c: 278:     LATCbits.LATC4 = 1;
  4014   001CE0  888B               	bsf	139,4,c	;volatile
  4015   001CE2                     
  4016                           ;Display.c: 280:     LATCbits.LATC4 = 0;
  4017   001CE2  988B               	bcf	139,4,c	;volatile
  4018                           
  4019                           ;Display.c: 282:     STLED316s_SPI_SendData(0x0D);
  4020   001CE4  0E0D               	movlw	13
  4021   001CE6  ECA5  F010         	call	_STLED316s_SPI_SendData
  4022   001CEA                     
  4023                           ;Display.c: 284:     LATCbits.LATC4 = 1;
  4024   001CEA  888B               	bsf	139,4,c	;volatile
  4025   001CEC  0012               	return		;funcret
  4026   001CEE                     __end_of_WriteSTLED316SVibMode:
  4027                           	callstack 0
  4028                           
  4029 ;; *************** function _ToggleVIB_Mode *****************
  4030 ;; Defined at:
  4031 ;;		line 1043 in file "main.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 5
  4052 ;; This function calls:
  4053 ;;		_write_i2c
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text11
  4060   00238E                     __ptext11:
  4061                           	callstack 0
  4062   00238E                     _ToggleVIB_Mode:
  4063                           	callstack 25
  4064   00238E                     
  4065                           ;main.c: 1045:     if (dutyCycle_reg == 0x00)
  4066   00238E  500B               	movf	_dutyCycle_reg^0,w,c
  4067   002390  100C               	iorwf	(_dutyCycle_reg+1)^0,w,c
  4068   002392  A4D8               	btfss	status,2,c
  4069   002394  EFCE  F011         	goto	u3631
  4070   002398  EFD0  F011         	goto	u3630
  4071   00239C                     u3631:
  4072   00239C  EFD4  F011         	goto	l5299
  4073   0023A0                     u3630:
  4074   0023A0                     
  4075                           ;main.c: 1046:         vibration_mode = 0;
  4076   0023A0  0E00               	movlw	0
  4077   0023A2  6E2C               	movwf	_vibration_mode^0,c
  4078   0023A4  EFD6  F011         	goto	l5301
  4079   0023A8                     l5299:
  4080                           
  4081                           ;main.c: 1048:         vibration_mode = 1;
  4082   0023A8  0E01               	movlw	1
  4083   0023AA  6E2C               	movwf	_vibration_mode^0,c
  4084   0023AC                     l5301:
  4085                           
  4086                           ;main.c: 1055:     INTCONbits.GIE = 0;
  4087   0023AC  9EF2               	bcf	242,7,c	;volatile
  4088   0023AE                     
  4089                           ;main.c: 1056:     write_i2c(0x0010, vibration_mode);
  4090   0023AE  0E10               	movlw	16
  4091   0023B0  6E46               	movwf	write_i2c@address^0,c
  4092   0023B2  0E00               	movlw	0
  4093   0023B4  6E47               	movwf	(write_i2c@address+1)^0,c
  4094   0023B6  0E00               	movlw	0
  4095   0023B8  6E48               	movwf	(write_i2c@address+2)^0,c
  4096   0023BA  0E00               	movlw	0
  4097   0023BC  6E49               	movwf	(write_i2c@address+3)^0,c
  4098   0023BE  C02C  F04A         	movff	_vibration_mode,write_i2c@data
  4099   0023C2  6A4B               	clrf	(write_i2c@data+1)^0,c
  4100   0023C4  EC7F  F011         	call	_write_i2c	;wreg free
  4101   0023C8                     
  4102                           ;main.c: 1057:     INTCONbits.GIE = 1;
  4103   0023C8  8EF2               	bsf	242,7,c	;volatile
  4104   0023CA  0012               	return		;funcret
  4105   0023CC                     __end_of_ToggleVIB_Mode:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function _PWM_Selection *****************
  4109 ;; Defined at:
  4110 ;;		line 1387 in file "main.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  msg             2   26[COMRAM] unsigned int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  dcSelected      2    2[BANK0 ] int 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2   26[COMRAM] unsigned int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;Total ram usage:        6 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 5
  4131 ;; This function calls:
  4132 ;;		_write_i2c
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text12
  4139   001B06                     __ptext12:
  4140                           	callstack 0
  4141   001B06                     _PWM_Selection:
  4142                           	callstack 25
  4143   001B06                     
  4144                           ;main.c: 1388:     int dcSelected;;main.c: 1389:     switch(msg){
  4145   001B06  EFDD  F00D         	goto	l5289
  4146   001B0A                     l5255:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 1391:             dcSelected = 7;
  4150   001B0A  0E00               	movlw	0
  4151   001B0C  6F9D               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4152   001B0E  0E07               	movlw	7
  4153   001B10  6F9C               	movwf	PWM_Selection@dcSelected& (0+255),b
  4154   001B12                     
  4155                           ; BSR set to: 0
  4156                           ;main.c: 1392:             INTCONbits.GIE = 0;
  4157   001B12  9EF2               	bcf	242,7,c	;volatile
  4158   001B14                     
  4159                           ; BSR set to: 0
  4160                           ;main.c: 1393:             write_i2c(0x0070, 0x01);
  4161   001B14  0E70               	movlw	112
  4162   001B16  6E46               	movwf	write_i2c@address^0,c
  4163   001B18  0E00               	movlw	0
  4164   001B1A  6E47               	movwf	(write_i2c@address+1)^0,c
  4165   001B1C  0E00               	movlw	0
  4166   001B1E  6E48               	movwf	(write_i2c@address+2)^0,c
  4167   001B20  0E00               	movlw	0
  4168   001B22  6E49               	movwf	(write_i2c@address+3)^0,c
  4169   001B24  0E00               	movlw	0
  4170   001B26  6E4B               	movwf	(write_i2c@data+1)^0,c
  4171   001B28  0E01               	movlw	1
  4172   001B2A  6E4A               	movwf	write_i2c@data^0,c
  4173   001B2C  EC7F  F011         	call	_write_i2c	;wreg free
  4174   001B30                     
  4175                           ;main.c: 1394:             INTCONbits.GIE = 1;
  4176   001B30  8EF2               	bsf	242,7,c	;volatile
  4177                           
  4178                           ;main.c: 1395:             break;
  4179   001B32  EFFC  F00D         	goto	l475
  4180   001B36                     l5263:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;main.c: 1397:             dcSelected = 10;
  4184   001B36  0E00               	movlw	0
  4185   001B38  6F9D               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4186   001B3A  0E0A               	movlw	10
  4187   001B3C  6F9C               	movwf	PWM_Selection@dcSelected& (0+255),b
  4188   001B3E                     
  4189                           ; BSR set to: 0
  4190                           ;main.c: 1398:             INTCONbits.GIE = 0;
  4191   001B3E  9EF2               	bcf	242,7,c	;volatile
  4192   001B40                     
  4193                           ; BSR set to: 0
  4194                           ;main.c: 1399:             write_i2c(0x0070, 0x02);
  4195   001B40  0E70               	movlw	112
  4196   001B42  6E46               	movwf	write_i2c@address^0,c
  4197   001B44  0E00               	movlw	0
  4198   001B46  6E47               	movwf	(write_i2c@address+1)^0,c
  4199   001B48  0E00               	movlw	0
  4200   001B4A  6E48               	movwf	(write_i2c@address+2)^0,c
  4201   001B4C  0E00               	movlw	0
  4202   001B4E  6E49               	movwf	(write_i2c@address+3)^0,c
  4203   001B50  0E00               	movlw	0
  4204   001B52  6E4B               	movwf	(write_i2c@data+1)^0,c
  4205   001B54  0E02               	movlw	2
  4206   001B56  6E4A               	movwf	write_i2c@data^0,c
  4207   001B58  EC7F  F011         	call	_write_i2c	;wreg free
  4208   001B5C                     
  4209                           ;main.c: 1400:             INTCONbits.GIE = 1;
  4210   001B5C  8EF2               	bsf	242,7,c	;volatile
  4211                           
  4212                           ;main.c: 1401:             break;
  4213   001B5E  EFFC  F00D         	goto	l475
  4214   001B62                     l5271:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;main.c: 1403:             dcSelected = 20;
  4218   001B62  0E00               	movlw	0
  4219   001B64  6F9D               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4220   001B66  0E14               	movlw	20
  4221   001B68  6F9C               	movwf	PWM_Selection@dcSelected& (0+255),b
  4222   001B6A                     
  4223                           ; BSR set to: 0
  4224                           ;main.c: 1404:             INTCONbits.GIE = 0;
  4225   001B6A  9EF2               	bcf	242,7,c	;volatile
  4226   001B6C                     
  4227                           ; BSR set to: 0
  4228                           ;main.c: 1405:             write_i2c(0x0070, 0x03);
  4229   001B6C  0E70               	movlw	112
  4230   001B6E  6E46               	movwf	write_i2c@address^0,c
  4231   001B70  0E00               	movlw	0
  4232   001B72  6E47               	movwf	(write_i2c@address+1)^0,c
  4233   001B74  0E00               	movlw	0
  4234   001B76  6E48               	movwf	(write_i2c@address+2)^0,c
  4235   001B78  0E00               	movlw	0
  4236   001B7A  6E49               	movwf	(write_i2c@address+3)^0,c
  4237   001B7C  0E00               	movlw	0
  4238   001B7E  6E4B               	movwf	(write_i2c@data+1)^0,c
  4239   001B80  0E03               	movlw	3
  4240   001B82  6E4A               	movwf	write_i2c@data^0,c
  4241   001B84  EC7F  F011         	call	_write_i2c	;wreg free
  4242   001B88                     
  4243                           ;main.c: 1406:             INTCONbits.GIE = 1;
  4244   001B88  8EF2               	bsf	242,7,c	;volatile
  4245                           
  4246                           ;main.c: 1407:             break;
  4247   001B8A  EFFC  F00D         	goto	l475
  4248   001B8E                     l5279:
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;main.c: 1409:             dcSelected = 0;
  4252   001B8E  0E00               	movlw	0
  4253   001B90  6F9D               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4254   001B92  0E00               	movlw	0
  4255   001B94  6F9C               	movwf	PWM_Selection@dcSelected& (0+255),b
  4256   001B96                     
  4257                           ; BSR set to: 0
  4258                           ;main.c: 1410:             INTCONbits.GIE = 0;
  4259   001B96  9EF2               	bcf	242,7,c	;volatile
  4260   001B98                     
  4261                           ; BSR set to: 0
  4262                           ;main.c: 1411:             write_i2c(0x0070, 0x00);
  4263   001B98  0E70               	movlw	112
  4264   001B9A  6E46               	movwf	write_i2c@address^0,c
  4265   001B9C  0E00               	movlw	0
  4266   001B9E  6E47               	movwf	(write_i2c@address+1)^0,c
  4267   001BA0  0E00               	movlw	0
  4268   001BA2  6E48               	movwf	(write_i2c@address+2)^0,c
  4269   001BA4  0E00               	movlw	0
  4270   001BA6  6E49               	movwf	(write_i2c@address+3)^0,c
  4271   001BA8  0E00               	movlw	0
  4272   001BAA  6E4B               	movwf	(write_i2c@data+1)^0,c
  4273   001BAC  0E00               	movlw	0
  4274   001BAE  6E4A               	movwf	write_i2c@data^0,c
  4275   001BB0  EC7F  F011         	call	_write_i2c	;wreg free
  4276   001BB4                     
  4277                           ;main.c: 1412:             INTCONbits.GIE = 1;
  4278   001BB4  8EF2               	bsf	242,7,c	;volatile
  4279                           
  4280                           ;main.c: 1413:             break;
  4281   001BB6  EFFC  F00D         	goto	l475
  4282   001BBA                     l5289:
  4283   001BBA  C04C  F09A         	movff	PWM_Selection@msg,??_PWM_Selection
  4284   001BBE  C04D  F09B         	movff	PWM_Selection@msg+1,??_PWM_Selection+1
  4285                           
  4286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4287                           ; Switch size 1, requested type "simple"
  4288                           ; Number of cases is 1, Range of values is 0 to 0
  4289                           ; switch strategies available:
  4290                           ; Name         Instructions Cycles
  4291                           ; simple_byte            4     3 (average)
  4292                           ;	Chosen strategy is simple_byte
  4293   001BC2  0100               	movlb	0	; () banked
  4294   001BC4  519B               	movf	(??_PWM_Selection+1)& (0+255),w,b
  4295   001BC6  0A00               	xorlw	0	; case 0
  4296   001BC8  B4D8               	btfsc	status,2,c
  4297   001BCA  EFE9  F00D         	goto	l6223
  4298   001BCE  EFFC  F00D         	goto	l475
  4299   001BD2                     l6223:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ; Switch size 1, requested type "simple"
  4303                           ; Number of cases is 4, Range of values is 0 to 3
  4304                           ; switch strategies available:
  4305                           ; Name         Instructions Cycles
  4306                           ; simple_byte           13     7 (average)
  4307                           ;	Chosen strategy is simple_byte
  4308   001BD2  519A               	movf	??_PWM_Selection& (0+255),w,b
  4309   001BD4  0A00               	xorlw	0	; case 0
  4310   001BD6  B4D8               	btfsc	status,2,c
  4311   001BD8  EF85  F00D         	goto	l5255
  4312   001BDC  0A01               	xorlw	1	; case 1
  4313   001BDE  B4D8               	btfsc	status,2,c
  4314   001BE0  EF9B  F00D         	goto	l5263
  4315   001BE4  0A03               	xorlw	3	; case 2
  4316   001BE6  B4D8               	btfsc	status,2,c
  4317   001BE8  EFB1  F00D         	goto	l5271
  4318   001BEC  0A01               	xorlw	1	; case 3
  4319   001BEE  B4D8               	btfsc	status,2,c
  4320   001BF0  EFC7  F00D         	goto	l5279
  4321   001BF4  EFFC  F00D         	goto	l475
  4322   001BF8                     l475:
  4323                           
  4324                           ;main.c: 1417:     return(dcSelected);
  4325   001BF8  C09C  F04C         	movff	PWM_Selection@dcSelected,?_PWM_Selection
  4326   001BFC  C09D  F04D         	movff	PWM_Selection@dcSelected+1,?_PWM_Selection+1
  4327   001C00  0012               	return		;funcret
  4328   001C02                     __end_of_PWM_Selection:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _write_i2c *****************
  4332 ;; Defined at:
  4333 ;;		line 109 in file "i2c.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  address         4   20[COMRAM] long 
  4336 ;;  data            2   24[COMRAM] int 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;Total ram usage:        6 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 4
  4355 ;; This function calls:
  4356 ;;		___aldiv
  4357 ;;		_i2c_Address
  4358 ;;		_i2c_Start
  4359 ;;		_i2c_Stop
  4360 ;;		_i2c_Write
  4361 ;; This function is called by:
  4362 ;;		_main
  4363 ;;		_ToggleVIB_Mode
  4364 ;;		_PWM_Selection
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text13
  4369   0022FE                     __ptext13:
  4370                           	callstack 0
  4371   0022FE                     _write_i2c:
  4372                           	callstack 26
  4373   0022FE                     
  4374                           ;i2c.c: 110:     i2c_Start();
  4375   0022FE  EC49  F013         	call	_i2c_Start	;wreg free
  4376                           
  4377                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  4378   002302  0E00               	movlw	0
  4379   002304  6E39               	movwf	i2c_Address@mode^0,c
  4380   002306  0EA0               	movlw	160
  4381   002308  EC1A  F013         	call	_i2c_Address
  4382                           
  4383                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  4384   00230C  C046  F038         	movff	write_i2c@address,___aldiv@dividend
  4385   002310  C047  F039         	movff	write_i2c@address+1,___aldiv@dividend+1
  4386   002314  C048  F03A         	movff	write_i2c@address+2,___aldiv@dividend+2
  4387   002318  C049  F03B         	movff	write_i2c@address+3,___aldiv@dividend+3
  4388   00231C  0E00               	movlw	0
  4389   00231E  6E3C               	movwf	___aldiv@divisor^0,c
  4390   002320  0E01               	movlw	1
  4391   002322  6E3D               	movwf	(___aldiv@divisor+1)^0,c
  4392   002324  0E00               	movlw	0
  4393   002326  6E3E               	movwf	(___aldiv@divisor+2)^0,c
  4394   002328  0E00               	movlw	0
  4395   00232A  6E3F               	movwf	(___aldiv@divisor+3)^0,c
  4396   00232C  ECF7  F00B         	call	___aldiv	;wreg free
  4397   002330  5038               	movf	?___aldiv^0,w,c
  4398   002332  EC2B  F013         	call	_i2c_Write
  4399                           
  4400                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  4401   002336  5046               	movf	write_i2c@address^0,w,c
  4402   002338  EC2B  F013         	call	_i2c_Write
  4403                           
  4404                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  4405   00233C  504A               	movf	write_i2c@data^0,w,c
  4406   00233E  EC2B  F013         	call	_i2c_Write
  4407                           
  4408                           ;i2c.c: 115:     i2c_Stop();
  4409   002342  EC45  F013         	call	_i2c_Stop	;wreg free
  4410   002346  0012               	return		;funcret
  4411   002348                     __end_of_write_i2c:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _i2c_Write *****************
  4415 ;; Defined at:
  4416 ;;		line 70 in file "i2c.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  data            1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  data            1    7[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;Total ram usage:        1 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 3
  4437 ;; This function calls:
  4438 ;;		_i2c_Wait
  4439 ;; This function is called by:
  4440 ;;		_write_i2c
  4441 ;;		_read_i2c
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text14
  4446   002656                     __ptext14:
  4447                           	callstack 0
  4448   002656                     _i2c_Write:
  4449                           	callstack 26
  4450                           
  4451                           ;incstack = 0
  4452                           ;i2c_Write@data stored from wreg
  4453   002656  6E39               	movwf	i2c_Write@data^0,c
  4454   002658                     
  4455                           ;i2c.c: 71:     i2c_Wait();
  4456   002658  ECB5  F012         	call	_i2c_Wait	;wreg free
  4457   00265C                     
  4458                           ;i2c.c: 72:     SSP2BUF = data;
  4459   00265C  C039  FF6F         	movff	i2c_Write@data,3951	;volatile
  4460   002660  0012               	return		;funcret
  4461   002662                     __end_of_i2c_Write:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _i2c_Stop *****************
  4465 ;; Defined at:
  4466 ;;		line 63 in file "i2c.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 3
  4487 ;; This function calls:
  4488 ;;		_i2c_Wait
  4489 ;; This function is called by:
  4490 ;;		_write_i2c
  4491 ;;		_read_i2c
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text15
  4496   00268A                     __ptext15:
  4497                           	callstack 0
  4498   00268A                     _i2c_Stop:
  4499                           	callstack 26
  4500   00268A                     
  4501                           ;i2c.c: 64:     i2c_Wait();
  4502   00268A  ECB5  F012         	call	_i2c_Wait	;wreg free
  4503   00268E                     
  4504                           ;i2c.c: 65:     PEN2 = 1;
  4505   00268E  846B               	bsf	3947,2,c	;volatile
  4506   002690  0012               	return		;funcret
  4507   002692                     __end_of_i2c_Stop:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _i2c_Start *****************
  4511 ;; Defined at:
  4512 ;;		line 49 in file "i2c.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; Hardware stack levels required when called: 3
  4533 ;; This function calls:
  4534 ;;		_i2c_Wait
  4535 ;; This function is called by:
  4536 ;;		_write_i2c
  4537 ;;		_read_i2c
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text16
  4542   002692                     __ptext16:
  4543                           	callstack 0
  4544   002692                     _i2c_Start:
  4545                           	callstack 26
  4546   002692                     
  4547                           ;i2c.c: 50:     i2c_Wait();
  4548   002692  ECB5  F012         	call	_i2c_Wait	;wreg free
  4549   002696                     
  4550                           ;i2c.c: 51:     SEN2 = 1;
  4551   002696  806B               	bsf	3947,0,c	;volatile
  4552   002698  0012               	return		;funcret
  4553   00269A                     __end_of_i2c_Start:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _i2c_Address *****************
  4557 ;; Defined at:
  4558 ;;		line 78 in file "i2c.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  address         1    wreg     unsigned char 
  4561 ;;  mode            1    7[COMRAM] unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  address         1    8[COMRAM] unsigned char 
  4564 ;;  l_address       1    9[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4574 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        3 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 3
  4581 ;; This function calls:
  4582 ;;		_i2c_Wait
  4583 ;; This function is called by:
  4584 ;;		_write_i2c
  4585 ;;		_read_i2c
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text17
  4590   002634                     __ptext17:
  4591                           	callstack 0
  4592   002634                     _i2c_Address:
  4593                           	callstack 26
  4594                           
  4595                           ;incstack = 0
  4596                           ;i2c_Address@address stored from wreg
  4597   002634  6E3A               	movwf	i2c_Address@address^0,c
  4598   002636                     
  4599                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  4600   002636  C03A  F03B         	movff	i2c_Address@address,i2c_Address@l_address
  4601   00263A                     
  4602                           ;i2c.c: 82:     l_address += mode;
  4603   00263A  5039               	movf	i2c_Address@mode^0,w,c
  4604   00263C  263B               	addwf	i2c_Address@l_address^0,f,c
  4605   00263E                     
  4606                           ;i2c.c: 83:     i2c_Wait();
  4607   00263E  ECB5  F012         	call	_i2c_Wait	;wreg free
  4608   002642                     
  4609                           ;i2c.c: 84:     SSP2BUF = l_address;
  4610   002642  C03B  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  4611   002646  0012               	return		;funcret
  4612   002648                     __end_of_i2c_Address:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _i2c_Wait *****************
  4616 ;; Defined at:
  4617 ;;		line 43 in file "i2c.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;Total ram usage:        1 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 2
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_i2c_Start
  4642 ;;		_i2c_Restart
  4643 ;;		_i2c_Stop
  4644 ;;		_i2c_Write
  4645 ;;		_i2c_Address
  4646 ;;		_i2c_Read
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text18
  4651   00256A                     __ptext18:
  4652                           	callstack 0
  4653   00256A                     _i2c_Wait:
  4654                           	callstack 26
  4655   00256A                     l5163:
  4656   00256A  CF6B F038          	movff	3947,??_i2c_Wait	;volatile
  4657   00256E  0E1F               	movlw	31
  4658   002570  1638               	andwf	??_i2c_Wait^0,f,c
  4659   002572  A4D8               	btfss	status,2,c
  4660   002574  EFBE  F012         	goto	u3541
  4661   002578  EFC0  F012         	goto	u3540
  4662   00257C                     u3541:
  4663   00257C  EFB5  F012         	goto	l5163
  4664   002580                     u3540:
  4665   002580  B46D               	btfsc	109,2,c	;volatile
  4666   002582  EFC5  F012         	goto	u3551
  4667   002586  EFC7  F012         	goto	u3550
  4668   00258A                     u3551:
  4669   00258A  EFB5  F012         	goto	l5163
  4670   00258E                     u3550:
  4671   00258E  0012               	return		;funcret
  4672   002590                     __end_of_i2c_Wait:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function ___aldiv *****************
  4676 ;; Defined at:
  4677 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  dividend        4    6[COMRAM] long 
  4680 ;;  divisor         4   10[COMRAM] long 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  quotient        4   16[COMRAM] long 
  4683 ;;  sign            1   15[COMRAM] unsigned char 
  4684 ;;  counter         1   14[COMRAM] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  4    6[COMRAM] long 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4694 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;Total ram usage:       14 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 2
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_write_i2c
  4705 ;;		_read_i2c
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text19
  4710   0017EE                     __ptext19:
  4711                           	callstack 0
  4712   0017EE                     ___aldiv:
  4713                           	callstack 27
  4714   0017EE  0E00               	movlw	0
  4715   0017F0  6E41               	movwf	___aldiv@sign^0,c
  4716   0017F2  BE3F               	btfsc	(___aldiv@divisor+3)^0,7,c
  4717   0017F4  EF00  F00C         	goto	u3560
  4718   0017F8  EFFE  F00B         	goto	u3561
  4719   0017FC                     u3561:
  4720   0017FC  EF0A  F00C         	goto	l5195
  4721   001800                     u3560:
  4722   001800  1E3F               	comf	(___aldiv@divisor+3)^0,f,c
  4723   001802  1E3E               	comf	(___aldiv@divisor+2)^0,f,c
  4724   001804  1E3D               	comf	(___aldiv@divisor+1)^0,f,c
  4725   001806  6C3C               	negf	___aldiv@divisor^0,c
  4726   001808  0E00               	movlw	0
  4727   00180A  223D               	addwfc	(___aldiv@divisor+1)^0,f,c
  4728   00180C  223E               	addwfc	(___aldiv@divisor+2)^0,f,c
  4729   00180E  223F               	addwfc	(___aldiv@divisor+3)^0,f,c
  4730   001810  0E01               	movlw	1
  4731   001812  6E41               	movwf	___aldiv@sign^0,c
  4732   001814                     l5195:
  4733   001814  BE3B               	btfsc	(___aldiv@dividend+3)^0,7,c
  4734   001816  EF11  F00C         	goto	u3570
  4735   00181A  EF0F  F00C         	goto	u3571
  4736   00181E                     u3571:
  4737   00181E  EF1B  F00C         	goto	l5201
  4738   001822                     u3570:
  4739   001822  1E3B               	comf	(___aldiv@dividend+3)^0,f,c
  4740   001824  1E3A               	comf	(___aldiv@dividend+2)^0,f,c
  4741   001826  1E39               	comf	(___aldiv@dividend+1)^0,f,c
  4742   001828  6C38               	negf	___aldiv@dividend^0,c
  4743   00182A  0E00               	movlw	0
  4744   00182C  2239               	addwfc	(___aldiv@dividend+1)^0,f,c
  4745   00182E  223A               	addwfc	(___aldiv@dividend+2)^0,f,c
  4746   001830  223B               	addwfc	(___aldiv@dividend+3)^0,f,c
  4747   001832  0E01               	movlw	1
  4748   001834  1A41               	xorwf	___aldiv@sign^0,f,c
  4749   001836                     l5201:
  4750   001836  0E00               	movlw	0
  4751   001838  6E42               	movwf	___aldiv@quotient^0,c
  4752   00183A  0E00               	movlw	0
  4753   00183C  6E43               	movwf	(___aldiv@quotient+1)^0,c
  4754   00183E  0E00               	movlw	0
  4755   001840  6E44               	movwf	(___aldiv@quotient+2)^0,c
  4756   001842  0E00               	movlw	0
  4757   001844  6E45               	movwf	(___aldiv@quotient+3)^0,c
  4758   001846  503C               	movf	___aldiv@divisor^0,w,c
  4759   001848  103D               	iorwf	(___aldiv@divisor+1)^0,w,c
  4760   00184A  103E               	iorwf	(___aldiv@divisor+2)^0,w,c
  4761   00184C  103F               	iorwf	(___aldiv@divisor+3)^0,w,c
  4762   00184E  B4D8               	btfsc	status,2,c
  4763   001850  EF2C  F00C         	goto	u3581
  4764   001854  EF2E  F00C         	goto	u3580
  4765   001858                     u3581:
  4766   001858  EF64  F00C         	goto	l5223
  4767   00185C                     u3580:
  4768   00185C  0E01               	movlw	1
  4769   00185E  6E40               	movwf	___aldiv@counter^0,c
  4770   001860  EF38  F00C         	goto	l5209
  4771   001864                     l5207:
  4772   001864  90D8               	bcf	status,0,c
  4773   001866  363C               	rlcf	___aldiv@divisor^0,f,c
  4774   001868  363D               	rlcf	(___aldiv@divisor+1)^0,f,c
  4775   00186A  363E               	rlcf	(___aldiv@divisor+2)^0,f,c
  4776   00186C  363F               	rlcf	(___aldiv@divisor+3)^0,f,c
  4777   00186E  2A40               	incf	___aldiv@counter^0,f,c
  4778   001870                     l5209:
  4779   001870  AE3F               	btfss	(___aldiv@divisor+3)^0,7,c
  4780   001872  EF3D  F00C         	goto	u3591
  4781   001876  EF3F  F00C         	goto	u3590
  4782   00187A                     u3591:
  4783   00187A  EF32  F00C         	goto	l5207
  4784   00187E                     u3590:
  4785   00187E                     l5211:
  4786   00187E  90D8               	bcf	status,0,c
  4787   001880  3642               	rlcf	___aldiv@quotient^0,f,c
  4788   001882  3643               	rlcf	(___aldiv@quotient+1)^0,f,c
  4789   001884  3644               	rlcf	(___aldiv@quotient+2)^0,f,c
  4790   001886  3645               	rlcf	(___aldiv@quotient+3)^0,f,c
  4791   001888  503C               	movf	___aldiv@divisor^0,w,c
  4792   00188A  5C38               	subwf	___aldiv@dividend^0,w,c
  4793   00188C  503D               	movf	(___aldiv@divisor+1)^0,w,c
  4794   00188E  5839               	subwfb	(___aldiv@dividend+1)^0,w,c
  4795   001890  503E               	movf	(___aldiv@divisor+2)^0,w,c
  4796   001892  583A               	subwfb	(___aldiv@dividend+2)^0,w,c
  4797   001894  503F               	movf	(___aldiv@divisor+3)^0,w,c
  4798   001896  583B               	subwfb	(___aldiv@dividend+3)^0,w,c
  4799   001898  A0D8               	btfss	status,0,c
  4800   00189A  EF51  F00C         	goto	u3601
  4801   00189E  EF53  F00C         	goto	u3600
  4802   0018A2                     u3601:
  4803   0018A2  EF5C  F00C         	goto	l5219
  4804   0018A6                     u3600:
  4805   0018A6  503C               	movf	___aldiv@divisor^0,w,c
  4806   0018A8  5E38               	subwf	___aldiv@dividend^0,f,c
  4807   0018AA  503D               	movf	(___aldiv@divisor+1)^0,w,c
  4808   0018AC  5A39               	subwfb	(___aldiv@dividend+1)^0,f,c
  4809   0018AE  503E               	movf	(___aldiv@divisor+2)^0,w,c
  4810   0018B0  5A3A               	subwfb	(___aldiv@dividend+2)^0,f,c
  4811   0018B2  503F               	movf	(___aldiv@divisor+3)^0,w,c
  4812   0018B4  5A3B               	subwfb	(___aldiv@dividend+3)^0,f,c
  4813   0018B6  8042               	bsf	___aldiv@quotient^0,0,c
  4814   0018B8                     l5219:
  4815   0018B8  90D8               	bcf	status,0,c
  4816   0018BA  323F               	rrcf	(___aldiv@divisor+3)^0,f,c
  4817   0018BC  323E               	rrcf	(___aldiv@divisor+2)^0,f,c
  4818   0018BE  323D               	rrcf	(___aldiv@divisor+1)^0,f,c
  4819   0018C0  323C               	rrcf	___aldiv@divisor^0,f,c
  4820   0018C2  2E40               	decfsz	___aldiv@counter^0,f,c
  4821   0018C4  EF3F  F00C         	goto	l5211
  4822   0018C8                     l5223:
  4823   0018C8  5041               	movf	___aldiv@sign^0,w,c
  4824   0018CA  B4D8               	btfsc	status,2,c
  4825   0018CC  EF6A  F00C         	goto	u3611
  4826   0018D0  EF6C  F00C         	goto	u3610
  4827   0018D4                     u3611:
  4828   0018D4  EF74  F00C         	goto	l5227
  4829   0018D8                     u3610:
  4830   0018D8  1E45               	comf	(___aldiv@quotient+3)^0,f,c
  4831   0018DA  1E44               	comf	(___aldiv@quotient+2)^0,f,c
  4832   0018DC  1E43               	comf	(___aldiv@quotient+1)^0,f,c
  4833   0018DE  6C42               	negf	___aldiv@quotient^0,c
  4834   0018E0  0E00               	movlw	0
  4835   0018E2  2243               	addwfc	(___aldiv@quotient+1)^0,f,c
  4836   0018E4  2244               	addwfc	(___aldiv@quotient+2)^0,f,c
  4837   0018E6  2245               	addwfc	(___aldiv@quotient+3)^0,f,c
  4838   0018E8                     l5227:
  4839   0018E8  C042  F038         	movff	___aldiv@quotient,?___aldiv
  4840   0018EC  C043  F039         	movff	___aldiv@quotient+1,?___aldiv+1
  4841   0018F0  C044  F03A         	movff	___aldiv@quotient+2,?___aldiv+2
  4842   0018F4  C045  F03B         	movff	___aldiv@quotient+3,?___aldiv+3
  4843   0018F8  0012               	return		;funcret
  4844   0018FA                     __end_of___aldiv:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _MotorPosition_Init *****************
  4848 ;; Defined at:
  4849 ;;		line 1003 in file "main.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;Total ram usage:        2 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 4
  4870 ;; This function calls:
  4871 ;;		_MotorBREAK
  4872 ;;		_MotorON
  4873 ;;		_Read_IR
  4874 ;;		_WriteSTLED316SErr
  4875 ;;		_delay_1ms
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text20
  4882   0018FA                     __ptext20:
  4883                           	callstack 0
  4884   0018FA                     _MotorPosition_Init:
  4885                           	callstack 26
  4886   0018FA                     
  4887                           ;main.c: 1004:     LATAbits.LATA2 = 1;
  4888   0018FA  8489               	bsf	137,2,c	;volatile
  4889   0018FC                     
  4890                           ;main.c: 1005:     MotorON();
  4891   0018FC  EC37  F013         	call	_MotorON	;wreg free
  4892   001900                     
  4893                           ;main.c: 1006:     _delay((unsigned long)((350)*(8000000/4000.0)));
  4894   001900  0E04               	movlw	4
  4895   001902  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  4896   001904  0E8E               	movlw	142
  4897   001906  6E41               	movwf	??_MotorPosition_Init^0,c
  4898   001908  0E12               	movlw	18
  4899   00190A                     u4297:
  4900   00190A  2EE8               	decfsz	wreg,f,c
  4901   00190C  D7FE               	bra	u4297
  4902   00190E  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4903   001910  D7FC               	bra	u4297
  4904   001912  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  4905   001914  D7FA               	bra	u4297
  4906   001916  D000               	nop2	
  4907   001918                     
  4908                           ;main.c: 1007:     errorcounter = 30;
  4909   001918  0E1E               	movlw	30
  4910   00191A  6E52               	movwf	_errorcounter^0,c	;volatile
  4911   00191C  0E00               	movlw	0
  4912   00191E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4913   001920  0E00               	movlw	0
  4914   001922  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4915   001924  0E00               	movlw	0
  4916   001926  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4917   001928                     l3643:
  4918                           
  4919                           ;main.c: 1010:         IR_SENSORF = Read_IR();
  4920   001928  ECDB  F012         	call	_Read_IR	;wreg free
  4921   00192C  C038  F00F         	movff	?_Read_IR,_IR_SENSORF
  4922   001930  C039  F010         	movff	?_Read_IR+1,_IR_SENSORF+1
  4923   001934                     
  4924                           ;main.c: 1011:         if (errorcounter == 0) {
  4925   001934  5052               	movf	_errorcounter^0,w,c	;volatile
  4926   001936  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4927   001938  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4928   00193A  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4929   00193C  A4D8               	btfss	status,2,c
  4930   00193E  EFA3  F00C         	goto	u2141
  4931   001942  EFA5  F00C         	goto	u2140
  4932   001946                     u2141:
  4933   001946  EFAA  F00C         	goto	l3651
  4934   00194A                     u2140:
  4935   00194A                     
  4936                           ;main.c: 1012:             WriteSTLED316SErr('1');
  4937   00194A  0E31               	movlw	49
  4938   00194C  EC77  F00E         	call	_WriteSTLED316SErr
  4939   001950                     
  4940                           ;main.c: 1013:             MotorBREAK();
  4941   001950  EC3C  F013         	call	_MotorBREAK	;wreg free
  4942   001954                     l3651:
  4943                           
  4944                           ;main.c: 1016:     } while (IR_SENSORF != 0);
  4945   001954  500F               	movf	_IR_SENSORF^0,w,c
  4946   001956  1010               	iorwf	(_IR_SENSORF+1)^0,w,c
  4947   001958  A4D8               	btfss	status,2,c
  4948   00195A  EFB1  F00C         	goto	u2151
  4949   00195E  EFB3  F00C         	goto	u2150
  4950   001962                     u2151:
  4951   001962  EF94  F00C         	goto	l3643
  4952   001966                     u2150:
  4953   001966                     
  4954                           ;main.c: 1018:     _delay((unsigned long)((30)*(8000000/4000.0)));
  4955   001966  0E4E               	movlw	78
  4956   001968  6E41               	movwf	??_MotorPosition_Init^0,c
  4957   00196A  0EEB               	movlw	235
  4958   00196C                     u4307:
  4959   00196C  2EE8               	decfsz	wreg,f,c
  4960   00196E  D7FE               	bra	u4307
  4961   001970  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  4962   001972  D7FC               	bra	u4307
  4963   001974  F000               	nop	
  4964   001976                     
  4965                           ;main.c: 1019:     errorcounter = 30;
  4966   001976  0E1E               	movlw	30
  4967   001978  6E52               	movwf	_errorcounter^0,c	;volatile
  4968   00197A  0E00               	movlw	0
  4969   00197C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4970   00197E  0E00               	movlw	0
  4971   001980  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4972   001982  0E00               	movlw	0
  4973   001984  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4974   001986                     l3657:
  4975                           
  4976                           ;main.c: 1021:         IR_SENSORF = Read_IR();
  4977   001986  ECDB  F012         	call	_Read_IR	;wreg free
  4978   00198A  C038  F00F         	movff	?_Read_IR,_IR_SENSORF
  4979   00198E  C039  F010         	movff	?_Read_IR+1,_IR_SENSORF+1
  4980   001992                     
  4981                           ;main.c: 1022:         if (errorcounter == 0) {
  4982   001992  5052               	movf	_errorcounter^0,w,c	;volatile
  4983   001994  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4984   001996  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4985   001998  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4986   00199A  A4D8               	btfss	status,2,c
  4987   00199C  EFD2  F00C         	goto	u2161
  4988   0019A0  EFD4  F00C         	goto	u2160
  4989   0019A4                     u2161:
  4990   0019A4  EFD9  F00C         	goto	l3665
  4991   0019A8                     u2160:
  4992   0019A8                     
  4993                           ;main.c: 1023:             WriteSTLED316SErr('2');
  4994   0019A8  0E32               	movlw	50
  4995   0019AA  EC77  F00E         	call	_WriteSTLED316SErr
  4996   0019AE                     
  4997                           ;main.c: 1024:             MotorBREAK();
  4998   0019AE  EC3C  F013         	call	_MotorBREAK	;wreg free
  4999   0019B2                     l3665:
  5000                           
  5001                           ;main.c: 1027:     } while (IR_SENSORF != 1);
  5002   0019B2  040F               	decf	_IR_SENSORF^0,w,c
  5003   0019B4  1010               	iorwf	(_IR_SENSORF+1)^0,w,c
  5004   0019B6  A4D8               	btfss	status,2,c
  5005   0019B8  EFE0  F00C         	goto	u2171
  5006   0019BC  EFE2  F00C         	goto	u2170
  5007   0019C0                     u2171:
  5008   0019C0  EFC3  F00C         	goto	l3657
  5009   0019C4                     u2170:
  5010   0019C4                     
  5011                           ;main.c: 1029:     errorcounter = 30;
  5012   0019C4  0E1E               	movlw	30
  5013   0019C6  6E52               	movwf	_errorcounter^0,c	;volatile
  5014   0019C8  0E00               	movlw	0
  5015   0019CA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5016   0019CC  0E00               	movlw	0
  5017   0019CE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5018   0019D0  0E00               	movlw	0
  5019   0019D2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5020   0019D4                     
  5021                           ;main.c: 1031:     delay_1ms(Motor_Stop_Delay_Time);
  5022   0019D4  C01D  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5023   0019D8  C01E  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5024   0019DC  EC8C  F012         	call	_delay_1ms	;wreg free
  5025   0019E0                     
  5026                           ;main.c: 1032:     MotorBREAK();
  5027   0019E0  EC3C  F013         	call	_MotorBREAK	;wreg free
  5028   0019E4                     
  5029                           ;main.c: 1033:     _delay((unsigned long)((500)*(8000000/4000.0)));
  5030   0019E4  0E06               	movlw	6
  5031   0019E6  6E42               	movwf	(??_MotorPosition_Init+1)^0,c
  5032   0019E8  0E13               	movlw	19
  5033   0019EA  6E41               	movwf	??_MotorPosition_Init^0,c
  5034   0019EC  0EAE               	movlw	174
  5035   0019EE                     u4317:
  5036   0019EE  2EE8               	decfsz	wreg,f,c
  5037   0019F0  D7FE               	bra	u4317
  5038   0019F2  2E41               	decfsz	??_MotorPosition_Init^0,f,c
  5039   0019F4  D7FC               	bra	u4317
  5040   0019F6  2E42               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  5041   0019F8  D7FA               	bra	u4317
  5042   0019FA                     
  5043                           ;main.c: 1034:     IR_SENSORF = 0;
  5044   0019FA  0E00               	movlw	0
  5045   0019FC  6E10               	movwf	(_IR_SENSORF+1)^0,c
  5046   0019FE  0E00               	movlw	0
  5047   001A00  6E0F               	movwf	_IR_SENSORF^0,c
  5048   001A02                     
  5049                           ;main.c: 1036:     LATAbits.LATA2 = 0;
  5050   001A02  9489               	bcf	137,2,c	;volatile
  5051   001A04  0012               	return		;funcret
  5052   001A06                     __end_of_MotorPosition_Init:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _InitTimer1 *****************
  5056 ;; Defined at:
  5057 ;;		line 1339 in file "main.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used: 1
  5077 ;; Hardware stack levels required when called: 2
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_main
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text21
  5086   0025DA                     __ptext21:
  5087                           	callstack 0
  5088   0025DA                     _InitTimer1:
  5089                           	callstack 28
  5090   0025DA                     
  5091                           ;main.c: 1340:     T1CON = 0b00110001;
  5092   0025DA  0E31               	movlw	49
  5093   0025DC  6ECD               	movwf	205,c	;volatile
  5094                           
  5095                           ;main.c: 1343:     TMR1 = 0x9E57;
  5096   0025DE  0E9E               	movlw	158
  5097   0025E0  6ECF               	movwf	207,c	;volatile
  5098   0025E2  0E57               	movlw	87
  5099   0025E4  6ECE               	movwf	206,c	;volatile
  5100   0025E6                     
  5101                           ;main.c: 1344:     TMR1IF = 0;
  5102   0025E6  909E               	bcf	3998,0,c	;volatile
  5103   0025E8                     
  5104                           ;main.c: 1345:     TMR1IE = 1;
  5105   0025E8  809D               	bsf	3997,0,c	;volatile
  5106   0025EA                     
  5107                           ;main.c: 1346:     IPR1bits.TMR1IP = 1;
  5108   0025EA  809F               	bsf	159,0,c	;volatile
  5109                           
  5110                           ;main.c: 1348:     TMR1IF_triggered = 0;
  5111   0025EC  0E00               	movlw	0
  5112   0025EE  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  5113   0025F0  0012               	return		;funcret
  5114   0025F2                     __end_of_InitTimer1:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function _InitSTLED316 *****************
  5118 ;; Defined at:
  5119 ;;		line 14 in file "Display.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  Brightness      1    wreg     unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  Brightness      1   14[COMRAM] unsigned char 
  5124 ;;  i               2    0        int 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        3 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 3
  5141 ;; This function calls:
  5142 ;;		_STLED316s_SPI_SendData
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text22
  5149   0020BE                     __ptext22:
  5150                           	callstack 0
  5151   0020BE                     _InitSTLED316:
  5152                           	callstack 27
  5153                           
  5154                           ;incstack = 0
  5155                           ;InitSTLED316@Brightness stored from wreg
  5156   0020BE  6E40               	movwf	InitSTLED316@Brightness^0,c
  5157   0020C0                     
  5158                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  5159   0020C0  888B               	bsf	139,4,c	;volatile
  5160                           
  5161                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  5162   0020C2  988B               	bcf	139,4,c	;volatile
  5163   0020C4                     
  5164                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  5165   0020C4  0E30               	movlw	48
  5166   0020C6  ECA5  F010         	call	_STLED316s_SPI_SendData
  5167   0020CA                     
  5168                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  5169   0020CA  888B               	bsf	139,4,c	;volatile
  5170   0020CC                     
  5171                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  5172   0020CC  988B               	bcf	139,4,c	;volatile
  5173                           
  5174                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  5175   0020CE  0E30               	movlw	48
  5176   0020D0  ECA5  F010         	call	_STLED316s_SPI_SendData
  5177                           
  5178                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  5179   0020D4  C040  F03E         	movff	InitSTLED316@Brightness,??_InitSTLED316
  5180   0020D8  3A3E               	swapf	??_InitSTLED316^0,f,c
  5181   0020DA  0E0F               	movlw	15
  5182   0020DC  163E               	andwf	??_InitSTLED316^0,f,c
  5183   0020DE  0E05               	movlw	5
  5184   0020E0  6E3F               	movwf	(??_InitSTLED316+1)^0,c
  5185   0020E2                     u2135:
  5186   0020E2  90D8               	bcf	status,0,c
  5187   0020E4  363E               	rlcf	??_InitSTLED316^0,f,c
  5188   0020E6  2E3F               	decfsz	(??_InitSTLED316+1)^0,f,c
  5189   0020E8  EF71  F010         	goto	u2135
  5190   0020EC  503E               	movf	??_InitSTLED316^0,w,c
  5191   0020EE  0905               	iorlw	5
  5192   0020F0  ECA5  F010         	call	_STLED316s_SPI_SendData
  5193   0020F4                     
  5194                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  5195   0020F4  888B               	bsf	139,4,c	;volatile
  5196   0020F6                     
  5197                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  5198   0020F6  988B               	bcf	139,4,c	;volatile
  5199                           
  5200                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  5201   0020F8  0E11               	movlw	17
  5202   0020FA  ECA5  F010         	call	_STLED316s_SPI_SendData
  5203   0020FE                     
  5204                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  5205   0020FE  888B               	bsf	139,4,c	;volatile
  5206   002100                     
  5207                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  5208   002100  988B               	bcf	139,4,c	;volatile
  5209                           
  5210                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  5211   002102  0E11               	movlw	17
  5212   002104  ECA5  F010         	call	_STLED316s_SPI_SendData
  5213                           
  5214                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  5215   002108  5040               	movf	InitSTLED316@Brightness^0,w,c
  5216   00210A  ECA5  F010         	call	_STLED316s_SPI_SendData
  5217                           
  5218                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  5219   00210E  5040               	movf	InitSTLED316@Brightness^0,w,c
  5220   002110  ECA5  F010         	call	_STLED316s_SPI_SendData
  5221                           
  5222                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  5223   002114  5040               	movf	InitSTLED316@Brightness^0,w,c
  5224   002116  ECA5  F010         	call	_STLED316s_SPI_SendData
  5225   00211A                     
  5226                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  5227   00211A  888B               	bsf	139,4,c	;volatile
  5228   00211C                     
  5229                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  5230   00211C  988B               	bcf	139,4,c	;volatile
  5231                           
  5232                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5233   00211E  0E18               	movlw	24
  5234   002120  ECA5  F010         	call	_STLED316s_SPI_SendData
  5235   002124                     
  5236                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  5237   002124  888B               	bsf	139,4,c	;volatile
  5238   002126                     
  5239                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  5240   002126  988B               	bcf	139,4,c	;volatile
  5241                           
  5242                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5243   002128  0E18               	movlw	24
  5244   00212A  ECA5  F010         	call	_STLED316s_SPI_SendData
  5245                           
  5246                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  5247   00212E  5040               	movf	InitSTLED316@Brightness^0,w,c
  5248   002130  ECA5  F010         	call	_STLED316s_SPI_SendData
  5249                           
  5250                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  5251   002134  5040               	movf	InitSTLED316@Brightness^0,w,c
  5252   002136  ECA5  F010         	call	_STLED316s_SPI_SendData
  5253                           
  5254                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  5255   00213A  5040               	movf	InitSTLED316@Brightness^0,w,c
  5256   00213C  ECA5  F010         	call	_STLED316s_SPI_SendData
  5257                           
  5258                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  5259   002140  5040               	movf	InitSTLED316@Brightness^0,w,c
  5260   002142  ECA5  F010         	call	_STLED316s_SPI_SendData
  5261   002146                     
  5262                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  5263   002146  888B               	bsf	139,4,c	;volatile
  5264   002148  0012               	return		;funcret
  5265   00214A                     __end_of_InitSTLED316:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function _Homing_Again_Manual *****************
  5269 ;; Defined at:
  5270 ;;		line 1065 in file "main.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  NUMInit         2    0        int 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;Total ram usage:        2 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; Hardware stack levels required when called: 4
  5291 ;; This function calls:
  5292 ;;		_AD_capture_BattVoltage
  5293 ;;		_MotorBREAK
  5294 ;;		_MotorON
  5295 ;;		_Read_IR
  5296 ;;		_WriteSTLED316SData
  5297 ;;		_WriteSTLED316SErr
  5298 ;;		_delay_1ms
  5299 ;;		_readWeighingData
  5300 ;; This function is called by:
  5301 ;;		_main
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text23
  5306   0011A6                     __ptext23:
  5307                           	callstack 0
  5308   0011A6                     _Homing_Again_Manual:
  5309                           	callstack 26
  5310   0011A6                     
  5311                           ;main.c: 1068:     if (vibration_mode == 1) {
  5312   0011A6  042C               	decf	_vibration_mode^0,w,c
  5313   0011A8  A4D8               	btfss	status,2,c
  5314   0011AA  EFD9  F008         	goto	u2271
  5315   0011AE  EFDB  F008         	goto	u2270
  5316   0011B2                     u2271:
  5317   0011B2  EFF0  F008         	goto	l383
  5318   0011B6                     u2270:
  5319   0011B6                     
  5320                           ;main.c: 1069:         LATCbits.LATC1 = 1;
  5321   0011B6  828B               	bsf	139,1,c	;volatile
  5322   0011B8                     
  5323                           ;main.c: 1070:         delay_1ms(Vmotor_Time);
  5324   0011B8  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5325   0011BC  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5326   0011C0  EC8C  F012         	call	_delay_1ms	;wreg free
  5327   0011C4                     
  5328                           ;main.c: 1071:         LATCbits.LATC1 = 0;
  5329   0011C4  928B               	bcf	139,1,c	;volatile
  5330   0011C6                     l3779:
  5331                           
  5332                           ;main.c: 1072:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5333   0011C6  0E04               	movlw	4
  5334   0011C8  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5335   0011CA  0E0C               	movlw	12
  5336   0011CC  6E49               	movwf	??_Homing_Again_Manual^0,c
  5337   0011CE  0E34               	movlw	52
  5338   0011D0                     u4327:
  5339   0011D0  2EE8               	decfsz	wreg,f,c
  5340   0011D2  D7FE               	bra	u4327
  5341   0011D4  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5342   0011D6  D7FC               	bra	u4327
  5343   0011D8  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5344   0011DA  D7FA               	bra	u4327
  5345                           
  5346                           ;main.c: 1073:     } else {
  5347   0011DC  EFF3  F008         	goto	l3783
  5348   0011E0                     l383:
  5349                           
  5350                           ;main.c: 1074:         LATCbits.LATC1 = 0;
  5351   0011E0  928B               	bcf	139,1,c	;volatile
  5352   0011E2  EFE3  F008         	goto	l3779
  5353   0011E6                     l3783:
  5354                           
  5355                           ;main.c: 1078:     LATAbits.LATA2 = 1;
  5356   0011E6  8489               	bsf	137,2,c	;volatile
  5357   0011E8                     
  5358                           ;main.c: 1081:     if (NUM == 0) {
  5359   0011E8  5017               	movf	_NUM^0,w,c
  5360   0011EA  1018               	iorwf	(_NUM+1)^0,w,c
  5361   0011EC  A4D8               	btfss	status,2,c
  5362   0011EE  EFFB  F008         	goto	u2281
  5363   0011F2  EFFD  F008         	goto	u2280
  5364   0011F6                     u2281:
  5365   0011F6  EF03  F009         	goto	l3791
  5366   0011FA                     u2280:
  5367   0011FA                     
  5368                           ;main.c: 1082:         i_RUN_ZERO = 1;
  5369   0011FA  0E00               	movlw	0
  5370   0011FC  6E16               	movwf	(_i_RUN_ZERO+1)^0,c
  5371   0011FE  0E01               	movlw	1
  5372   001200  6E15               	movwf	_i_RUN_ZERO^0,c
  5373                           
  5374                           ;main.c: 1083:     }
  5375   001202  EF8D  F00A         	goto	l3899
  5376   001206                     l3791:
  5377                           
  5378                           ;main.c: 1085:     {;main.c: 1086:         i_RUN_ZERO = 0;
  5379   001206  0E00               	movlw	0
  5380   001208  6E16               	movwf	(_i_RUN_ZERO+1)^0,c
  5381   00120A  0E00               	movlw	0
  5382   00120C  6E15               	movwf	_i_RUN_ZERO^0,c
  5383   00120E  EF8D  F00A         	goto	l3899
  5384   001212                     l388:
  5385   001212  0004               	clrwdt		;# 
  5386   001214                     
  5387                           ;main.c: 1092:         readWeighingData();
  5388   001214  EC52  F011         	call	_readWeighingData	;wreg free
  5389   001218                     
  5390                           ;main.c: 1093:         AD_capture_BattVoltage();
  5391   001218  ECE6  F011         	call	_AD_capture_BattVoltage	;wreg free
  5392   00121C                     
  5393                           ;main.c: 1094:         delay_1ms(Motor_Pause_Time);
  5394   00121C  C019  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  5395   001220  C01A  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5396   001224  EC8C  F012         	call	_delay_1ms	;wreg free
  5397   001228                     
  5398                           ;main.c: 1095:         MotorON();
  5399   001228  EC37  F013         	call	_MotorON	;wreg free
  5400   00122C                     
  5401                           ;main.c: 1096:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5402   00122C  0E04               	movlw	4
  5403   00122E  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5404   001230  0E8E               	movlw	142
  5405   001232  6E49               	movwf	??_Homing_Again_Manual^0,c
  5406   001234  0E12               	movlw	18
  5407   001236                     u4337:
  5408   001236  2EE8               	decfsz	wreg,f,c
  5409   001238  D7FE               	bra	u4337
  5410   00123A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5411   00123C  D7FC               	bra	u4337
  5412   00123E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5413   001240  D7FA               	bra	u4337
  5414   001242  D000               	nop2	
  5415   001244                     
  5416                           ;main.c: 1097:         errorcounter = 30;
  5417   001244  0E1E               	movlw	30
  5418   001246  6E52               	movwf	_errorcounter^0,c	;volatile
  5419   001248  0E00               	movlw	0
  5420   00124A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5421   00124C  0E00               	movlw	0
  5422   00124E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5423   001250  0E00               	movlw	0
  5424   001252  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5425   001254                     l3805:
  5426                           
  5427                           ;main.c: 1101:             IR_SENSORF = Read_IR();
  5428   001254  ECDB  F012         	call	_Read_IR	;wreg free
  5429   001258  C038  F00F         	movff	?_Read_IR,_IR_SENSORF
  5430   00125C  C039  F010         	movff	?_Read_IR+1,_IR_SENSORF+1
  5431   001260                     
  5432                           ;main.c: 1102:             if (errorcounter == 0) {
  5433   001260  5052               	movf	_errorcounter^0,w,c	;volatile
  5434   001262  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5435   001264  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5436   001266  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5437   001268  A4D8               	btfss	status,2,c
  5438   00126A  EF39  F009         	goto	u2291
  5439   00126E  EF3B  F009         	goto	u2290
  5440   001272                     u2291:
  5441   001272  EF40  F009         	goto	l3813
  5442   001276                     u2290:
  5443   001276                     
  5444                           ;main.c: 1103:                 WriteSTLED316SErr('1');
  5445   001276  0E31               	movlw	49
  5446   001278  EC77  F00E         	call	_WriteSTLED316SErr
  5447   00127C                     
  5448                           ;main.c: 1104:                 MotorBREAK();
  5449   00127C  EC3C  F013         	call	_MotorBREAK	;wreg free
  5450   001280                     l3813:
  5451                           
  5452                           ;main.c: 1107:         } while (IR_SENSORF != 0);
  5453   001280  500F               	movf	_IR_SENSORF^0,w,c
  5454   001282  1010               	iorwf	(_IR_SENSORF+1)^0,w,c
  5455   001284  A4D8               	btfss	status,2,c
  5456   001286  EF47  F009         	goto	u2301
  5457   00128A  EF49  F009         	goto	u2300
  5458   00128E                     u2301:
  5459   00128E  EF2A  F009         	goto	l3805
  5460   001292                     u2300:
  5461   001292                     
  5462                           ;main.c: 1109:         _delay((unsigned long)((30)*(8000000/4000.0)));
  5463   001292  0E4E               	movlw	78
  5464   001294  6E49               	movwf	??_Homing_Again_Manual^0,c
  5465   001296  0EEB               	movlw	235
  5466   001298                     u4347:
  5467   001298  2EE8               	decfsz	wreg,f,c
  5468   00129A  D7FE               	bra	u4347
  5469   00129C  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5470   00129E  D7FC               	bra	u4347
  5471   0012A0  F000               	nop	
  5472   0012A2                     
  5473                           ;main.c: 1111:         errorcounter = 30;
  5474   0012A2  0E1E               	movlw	30
  5475   0012A4  6E52               	movwf	_errorcounter^0,c	;volatile
  5476   0012A6  0E00               	movlw	0
  5477   0012A8  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5478   0012AA  0E00               	movlw	0
  5479   0012AC  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5480   0012AE  0E00               	movlw	0
  5481   0012B0  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5482   0012B2                     l3819:
  5483                           
  5484                           ;main.c: 1114:             IR_SENSORF = Read_IR();
  5485   0012B2  ECDB  F012         	call	_Read_IR	;wreg free
  5486   0012B6  C038  F00F         	movff	?_Read_IR,_IR_SENSORF
  5487   0012BA  C039  F010         	movff	?_Read_IR+1,_IR_SENSORF+1
  5488   0012BE                     
  5489                           ;main.c: 1115:             if (errorcounter == 0) {
  5490   0012BE  5052               	movf	_errorcounter^0,w,c	;volatile
  5491   0012C0  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5492   0012C2  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5493   0012C4  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5494   0012C6  A4D8               	btfss	status,2,c
  5495   0012C8  EF68  F009         	goto	u2311
  5496   0012CC  EF6A  F009         	goto	u2310
  5497   0012D0                     u2311:
  5498   0012D0  EF6F  F009         	goto	l3827
  5499   0012D4                     u2310:
  5500   0012D4                     
  5501                           ;main.c: 1116:                 WriteSTLED316SErr('2');
  5502   0012D4  0E32               	movlw	50
  5503   0012D6  EC77  F00E         	call	_WriteSTLED316SErr
  5504   0012DA                     
  5505                           ;main.c: 1117:                 MotorBREAK();
  5506   0012DA  EC3C  F013         	call	_MotorBREAK	;wreg free
  5507   0012DE                     l3827:
  5508                           
  5509                           ;main.c: 1119:         } while (IR_SENSORF != 1);
  5510   0012DE  040F               	decf	_IR_SENSORF^0,w,c
  5511   0012E0  1010               	iorwf	(_IR_SENSORF+1)^0,w,c
  5512   0012E2  A4D8               	btfss	status,2,c
  5513   0012E4  EF76  F009         	goto	u2321
  5514   0012E8  EF78  F009         	goto	u2320
  5515   0012EC                     u2321:
  5516   0012EC  EF59  F009         	goto	l3819
  5517   0012F0                     u2320:
  5518   0012F0                     
  5519                           ;main.c: 1122:         errorcounter = 30;
  5520   0012F0  0E1E               	movlw	30
  5521   0012F2  6E52               	movwf	_errorcounter^0,c	;volatile
  5522   0012F4  0E00               	movlw	0
  5523   0012F6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5524   0012F8  0E00               	movlw	0
  5525   0012FA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5526   0012FC  0E00               	movlw	0
  5527   0012FE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5528   001300                     
  5529                           ;main.c: 1123:         delay_1ms(Motor_Stop_Delay_Time);
  5530   001300  C01D  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5531   001304  C01E  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5532   001308  EC8C  F012         	call	_delay_1ms	;wreg free
  5533   00130C                     
  5534                           ;main.c: 1124:         MotorBREAK();
  5535   00130C  EC3C  F013         	call	_MotorBREAK	;wreg free
  5536                           
  5537                           ;main.c: 1127:         if (NUM > 0 && i_RUN_ZERO != 1) {
  5538   001310  5017               	movf	_NUM^0,w,c
  5539   001312  1018               	iorwf	(_NUM+1)^0,w,c
  5540   001314  B4D8               	btfsc	status,2,c
  5541   001316  EF8F  F009         	goto	u2331
  5542   00131A  EF91  F009         	goto	u2330
  5543   00131E                     u2331:
  5544   00131E  EF9D  F009         	goto	l3839
  5545   001322                     u2330:
  5546   001322  0415               	decf	_i_RUN_ZERO^0,w,c
  5547   001324  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5548   001326  B4D8               	btfsc	status,2,c
  5549   001328  EF98  F009         	goto	u2341
  5550   00132C  EF9A  F009         	goto	u2340
  5551   001330                     u2341:
  5552   001330  EF9D  F009         	goto	l3839
  5553   001334                     u2340:
  5554   001334                     
  5555                           ;main.c: 1128:             NUM--;
  5556   001334  0617               	decf	_NUM^0,f,c
  5557   001336  A0D8               	btfss	status,0,c
  5558   001338  0618               	decf	(_NUM+1)^0,f,c
  5559   00133A                     l3839:
  5560                           
  5561                           ;main.c: 1131:         WriteSTLED316SData(NUM, vibration_mode);
  5562   00133A  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  5563   00133E  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5564   001342  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5565   001346  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  5566   00134A                     
  5567                           ;main.c: 1132:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  5568   00134A  042C               	decf	_vibration_mode^0,w,c
  5569   00134C  A4D8               	btfss	status,2,c
  5570   00134E  EFAB  F009         	goto	u2351
  5571   001352  EFAD  F009         	goto	u2350
  5572   001356                     u2351:
  5573   001356  EFD4  F009         	goto	l3853
  5574   00135A                     u2350:
  5575   00135A  5017               	movf	_NUM^0,w,c
  5576   00135C  1018               	iorwf	(_NUM+1)^0,w,c
  5577   00135E  A4D8               	btfss	status,2,c
  5578   001360  EFB4  F009         	goto	u2361
  5579   001364  EFB6  F009         	goto	u2360
  5580   001368                     u2361:
  5581   001368  EFBF  F009         	goto	l398
  5582   00136C                     u2360:
  5583   00136C  0415               	decf	_i_RUN_ZERO^0,w,c
  5584   00136E  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5585   001370  A4D8               	btfss	status,2,c
  5586   001372  EFBD  F009         	goto	u2371
  5587   001376  EFBF  F009         	goto	u2370
  5588   00137A                     u2371:
  5589   00137A  EFD4  F009         	goto	l3853
  5590   00137E                     u2370:
  5591   00137E                     l398:
  5592                           
  5593                           ;main.c: 1133:             LATCbits.LATC1 = 1;
  5594   00137E  828B               	bsf	139,1,c	;volatile
  5595   001380                     
  5596                           ;main.c: 1134:             delay_1ms(Vmotor_Time);
  5597   001380  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5598   001384  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5599   001388  EC8C  F012         	call	_delay_1ms	;wreg free
  5600   00138C                     
  5601                           ;main.c: 1135:             LATCbits.LATC1 = 0;
  5602   00138C  928B               	bcf	139,1,c	;volatile
  5603   00138E                     
  5604                           ;main.c: 1136:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5605   00138E  0E04               	movlw	4
  5606   001390  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5607   001392  0E0C               	movlw	12
  5608   001394  6E49               	movwf	??_Homing_Again_Manual^0,c
  5609   001396  0E34               	movlw	52
  5610   001398                     u4357:
  5611   001398  2EE8               	decfsz	wreg,f,c
  5612   00139A  D7FE               	bra	u4357
  5613   00139C  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5614   00139E  D7FC               	bra	u4357
  5615   0013A0  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5616   0013A2  D7FA               	bra	u4357
  5617                           
  5618                           ;main.c: 1138:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) 
      +                          {
  5619   0013A4  EF14  F00A         	goto	l3867
  5620   0013A8                     l3853:
  5621   0013A8  502C               	movf	_vibration_mode^0,w,c
  5622   0013AA  A4D8               	btfss	status,2,c
  5623   0013AC  EFDA  F009         	goto	u2381
  5624   0013B0  EFDC  F009         	goto	u2380
  5625   0013B4                     u2381:
  5626   0013B4  EF14  F00A         	goto	l3867
  5627   0013B8                     u2380:
  5628   0013B8  5017               	movf	_NUM^0,w,c
  5629   0013BA  1018               	iorwf	(_NUM+1)^0,w,c
  5630   0013BC  A4D8               	btfss	status,2,c
  5631   0013BE  EFE3  F009         	goto	u2391
  5632   0013C2  EFE5  F009         	goto	u2390
  5633   0013C6                     u2391:
  5634   0013C6  EFEE  F009         	goto	l402
  5635   0013CA                     u2390:
  5636   0013CA  0415               	decf	_i_RUN_ZERO^0,w,c
  5637   0013CC  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5638   0013CE  A4D8               	btfss	status,2,c
  5639   0013D0  EFEC  F009         	goto	u2401
  5640   0013D4  EFEE  F009         	goto	u2400
  5641   0013D8                     u2401:
  5642   0013D8  EF14  F00A         	goto	l3867
  5643   0013DC                     u2400:
  5644   0013DC                     l402:
  5645                           
  5646                           ;main.c: 1139:             LATCbits.LATC1 = 0;
  5647   0013DC  928B               	bcf	139,1,c	;volatile
  5648   0013DE                     
  5649                           ;main.c: 1140:             if (NUM != 0 || i_RUN_ZERO == 1) {
  5650   0013DE  5017               	movf	_NUM^0,w,c
  5651   0013E0  1018               	iorwf	(_NUM+1)^0,w,c
  5652   0013E2  A4D8               	btfss	status,2,c
  5653   0013E4  EFF6  F009         	goto	u2411
  5654   0013E8  EFF8  F009         	goto	u2410
  5655   0013EC                     u2411:
  5656   0013EC  EF01  F00A         	goto	l3863
  5657   0013F0                     u2410:
  5658   0013F0  0415               	decf	_i_RUN_ZERO^0,w,c
  5659   0013F2  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5660   0013F4  A4D8               	btfss	status,2,c
  5661   0013F6  EFFF  F009         	goto	u2421
  5662   0013FA  EF01  F00A         	goto	u2420
  5663   0013FE                     u2421:
  5664   0013FE  EF09  F00A         	goto	l3865
  5665   001402                     u2420:
  5666   001402                     l3863:
  5667                           
  5668                           ;main.c: 1141:                 delay_1ms(Vmotor_Time);
  5669   001402  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5670   001406  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5671   00140A  EC8C  F012         	call	_delay_1ms	;wreg free
  5672                           
  5673                           ;main.c: 1142:             } else {
  5674   00140E  EF14  F00A         	goto	l3867
  5675   001412                     l3865:
  5676                           
  5677                           ;main.c: 1143:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  5678   001412  0E06               	movlw	6
  5679   001414  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5680   001416  0E13               	movlw	19
  5681   001418  6E49               	movwf	??_Homing_Again_Manual^0,c
  5682   00141A  0EAE               	movlw	174
  5683   00141C                     u4367:
  5684   00141C  2EE8               	decfsz	wreg,f,c
  5685   00141E  D7FE               	bra	u4367
  5686   001420  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5687   001422  D7FC               	bra	u4367
  5688   001424  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5689   001426  D7FA               	bra	u4367
  5690   001428                     l3867:
  5691                           
  5692                           ;main.c: 1149:         if (Stop == 1)
  5693   001428  042F               	decf	_Stop^0,w,c
  5694   00142A  A4D8               	btfss	status,2,c
  5695   00142C  EF1A  F00A         	goto	u2431
  5696   001430  EF1C  F00A         	goto	u2430
  5697   001434                     u2431:
  5698   001434  EF49  F00A         	goto	l3881
  5699   001438                     u2430:
  5700   001438  EF9F  F00A         	goto	l408
  5701   00143C                     l3871:
  5702                           
  5703                           ;main.c: 1164:             i_RUN_ZERO = 2;
  5704   00143C  0E00               	movlw	0
  5705   00143E  6E16               	movwf	(_i_RUN_ZERO+1)^0,c
  5706   001440  0E02               	movlw	2
  5707   001442  6E15               	movwf	_i_RUN_ZERO^0,c
  5708   001444                     
  5709                           ;main.c: 1165:             WriteSTLED316SData(NUM, !vibration_mode);
  5710   001444  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  5711   001448  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5712   00144C  502C               	movf	_vibration_mode^0,w,c
  5713   00144E  B4D8               	btfsc	status,2,c
  5714   001450  EF2C  F00A         	goto	u2441
  5715   001454  EF2F  F00A         	goto	u2440
  5716   001458                     u2441:
  5717   001458  0E01               	movlw	1
  5718   00145A  EF30  F00A         	goto	u2450
  5719   00145E                     u2440:
  5720   00145E  0E00               	movlw	0
  5721   001460                     u2450:
  5722   001460  6E42               	movwf	WriteSTLED316SData@v_mode^0,c
  5723   001462  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  5724   001466                     
  5725                           ;main.c: 1166:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5726   001466  0E82               	movlw	130
  5727   001468  6E49               	movwf	??_Homing_Again_Manual^0,c
  5728   00146A  0EDE               	movlw	222
  5729   00146C                     u4377:
  5730   00146C  2EE8               	decfsz	wreg,f,c
  5731   00146E  D7FE               	bra	u4377
  5732   001470  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5733   001472  D7FC               	bra	u4377
  5734   001474                     
  5735                           ;main.c: 1167:             WriteSTLED316SData(NUM, vibration_mode);
  5736   001474  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  5737   001478  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5738   00147C  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5739   001480  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  5740   001484                     
  5741                           ;main.c: 1168:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5742   001484  0E82               	movlw	130
  5743   001486  6E49               	movwf	??_Homing_Again_Manual^0,c
  5744   001488  0EDE               	movlw	222
  5745   00148A                     u4387:
  5746   00148A  2EE8               	decfsz	wreg,f,c
  5747   00148C  D7FE               	bra	u4387
  5748   00148E  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5749   001490  D7FC               	bra	u4387
  5750   001492                     l3881:
  5751                           
  5752                           ;main.c: 1163:         while (dispense == 0 && (i_RUN_ZERO == 1 || i_RUN_ZERO == 0)) {
  5753   001492  5007               	movf	_dispense^0,w,c
  5754   001494  1008               	iorwf	(_dispense+1)^0,w,c
  5755   001496  A4D8               	btfss	status,2,c
  5756   001498  EF50  F00A         	goto	u2461
  5757   00149C  EF52  F00A         	goto	u2460
  5758   0014A0                     u2461:
  5759   0014A0  EF64  F00A         	goto	l3887
  5760   0014A4                     u2460:
  5761   0014A4  0415               	decf	_i_RUN_ZERO^0,w,c
  5762   0014A6  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5763   0014A8  B4D8               	btfsc	status,2,c
  5764   0014AA  EF59  F00A         	goto	u2471
  5765   0014AE  EF5B  F00A         	goto	u2470
  5766   0014B2                     u2471:
  5767   0014B2  EF1E  F00A         	goto	l3871
  5768   0014B6                     u2470:
  5769   0014B6  5015               	movf	_i_RUN_ZERO^0,w,c
  5770   0014B8  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5771   0014BA  B4D8               	btfsc	status,2,c
  5772   0014BC  EF62  F00A         	goto	u2481
  5773   0014C0  EF64  F00A         	goto	u2480
  5774   0014C4                     u2481:
  5775   0014C4  EF1E  F00A         	goto	l3871
  5776   0014C8                     u2480:
  5777   0014C8                     l3887:
  5778                           
  5779                           ;main.c: 1175:         WriteSTLED316SData(NUM, vibration_mode);
  5780   0014C8  C017  F040         	movff	_NUM,WriteSTLED316SData@number
  5781   0014CC  C018  F041         	movff	_NUM+1,WriteSTLED316SData@number+1
  5782   0014D0  C02C  F042         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5783   0014D4  EC0B  F010         	call	_WriteSTLED316SData	;wreg free
  5784   0014D8                     
  5785                           ;main.c: 1177:         if(dispense == 0 && NUM != 0)
  5786   0014D8  5007               	movf	_dispense^0,w,c
  5787   0014DA  1008               	iorwf	(_dispense+1)^0,w,c
  5788   0014DC  A4D8               	btfss	status,2,c
  5789   0014DE  EF73  F00A         	goto	u2491
  5790   0014E2  EF75  F00A         	goto	u2490
  5791   0014E6                     u2491:
  5792   0014E6  EF86  F00A         	goto	l3897
  5793   0014EA                     u2490:
  5794   0014EA  5017               	movf	_NUM^0,w,c
  5795   0014EC  1018               	iorwf	(_NUM+1)^0,w,c
  5796   0014EE  B4D8               	btfsc	status,2,c
  5797   0014F0  EF7C  F00A         	goto	u2501
  5798   0014F4  EF7E  F00A         	goto	u2500
  5799   0014F8                     u2501:
  5800   0014F8  EF86  F00A         	goto	l3897
  5801   0014FC                     u2500:
  5802   0014FC                     
  5803                           ;main.c: 1178:         {;main.c: 1179:             NUM_REC = NUM;
  5804   0014FC  C017  F013         	movff	_NUM,_NUM_REC
  5805   001500  C018  F014         	movff	_NUM+1,_NUM_REC+1
  5806   001504                     
  5807                           ;main.c: 1180:             NUM = 0;
  5808   001504  0E00               	movlw	0
  5809   001506  6E18               	movwf	(_NUM+1)^0,c
  5810   001508  0E00               	movlw	0
  5811   00150A  6E17               	movwf	_NUM^0,c
  5812   00150C                     l3897:
  5813                           
  5814                           ;main.c: 1182:         _delay((unsigned long)((50)*(8000000/4000.0)));
  5815   00150C  0E82               	movlw	130
  5816   00150E  6E49               	movwf	??_Homing_Again_Manual^0,c
  5817   001510  0EDE               	movlw	222
  5818   001512                     u4397:
  5819   001512  2EE8               	decfsz	wreg,f,c
  5820   001514  D7FE               	bra	u4397
  5821   001516  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5822   001518  D7FC               	bra	u4397
  5823   00151A                     l3899:
  5824                           
  5825                           ;main.c: 1090:     while (NUM > 0 || i_RUN_ZERO == 1) {
  5826   00151A  5017               	movf	_NUM^0,w,c
  5827   00151C  1018               	iorwf	(_NUM+1)^0,w,c
  5828   00151E  A4D8               	btfss	status,2,c
  5829   001520  EF94  F00A         	goto	u2511
  5830   001524  EF96  F00A         	goto	u2510
  5831   001528                     u2511:
  5832   001528  EF09  F009         	goto	l388
  5833   00152C                     u2510:
  5834   00152C  0415               	decf	_i_RUN_ZERO^0,w,c
  5835   00152E  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5836   001530  B4D8               	btfsc	status,2,c
  5837   001532  EF9D  F00A         	goto	u2521
  5838   001536  EF9F  F00A         	goto	u2520
  5839   00153A                     u2521:
  5840   00153A  EF09  F009         	goto	l388
  5841   00153E                     u2520:
  5842   00153E                     l408:
  5843                           
  5844                           ;main.c: 1186:     LATAbits.LATA2 = 0;
  5845   00153E  9489               	bcf	137,2,c	;volatile
  5846   001540                     
  5847                           ;main.c: 1188:     if ((NUM == 0 || Stop == 1) && i_RUN_ZERO == 0) {
  5848   001540  5017               	movf	_NUM^0,w,c
  5849   001542  1018               	iorwf	(_NUM+1)^0,w,c
  5850   001544  B4D8               	btfsc	status,2,c
  5851   001546  EFA7  F00A         	goto	u2531
  5852   00154A  EFA9  F00A         	goto	u2530
  5853   00154E                     u2531:
  5854   00154E  EFB1  F00A         	goto	l3907
  5855   001552                     u2530:
  5856   001552  042F               	decf	_Stop^0,w,c
  5857   001554  A4D8               	btfss	status,2,c
  5858   001556  EFAF  F00A         	goto	u2541
  5859   00155A  EFB1  F00A         	goto	u2540
  5860   00155E                     u2541:
  5861   00155E  EFD5  F00A         	goto	l3919
  5862   001562                     u2540:
  5863   001562                     l3907:
  5864   001562  5015               	movf	_i_RUN_ZERO^0,w,c
  5865   001564  1016               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5866   001566  A4D8               	btfss	status,2,c
  5867   001568  EFB8  F00A         	goto	u2551
  5868   00156C  EFBA  F00A         	goto	u2550
  5869   001570                     u2551:
  5870   001570  EFD5  F00A         	goto	l3919
  5871   001574                     u2550:
  5872   001574                     
  5873                           ;main.c: 1190:         if (vibration_mode == 1) {
  5874   001574  042C               	decf	_vibration_mode^0,w,c
  5875   001576  A4D8               	btfss	status,2,c
  5876   001578  EFC0  F00A         	goto	u2561
  5877   00157C  EFC2  F00A         	goto	u2560
  5878   001580                     u2561:
  5879   001580  EFD5  F00A         	goto	l3919
  5880   001584                     u2560:
  5881   001584                     
  5882                           ;main.c: 1191:             LATCbits.LATC1 = 1;
  5883   001584  828B               	bsf	139,1,c	;volatile
  5884   001586                     
  5885                           ;main.c: 1192:             delay_1ms(Vmotor_Time);
  5886   001586  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  5887   00158A  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5888   00158E  EC8C  F012         	call	_delay_1ms	;wreg free
  5889   001592                     
  5890                           ;main.c: 1194:             LATCbits.LATC1 = 0;
  5891   001592  928B               	bcf	139,1,c	;volatile
  5892   001594                     
  5893                           ;main.c: 1195:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5894   001594  0E04               	movlw	4
  5895   001596  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  5896   001598  0E0C               	movlw	12
  5897   00159A  6E49               	movwf	??_Homing_Again_Manual^0,c
  5898   00159C  0E34               	movlw	52
  5899   00159E                     u4407:
  5900   00159E  2EE8               	decfsz	wreg,f,c
  5901   0015A0  D7FE               	bra	u4407
  5902   0015A2  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  5903   0015A4  D7FC               	bra	u4407
  5904   0015A6  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5905   0015A8  D7FA               	bra	u4407
  5906   0015AA                     l3919:
  5907                           
  5908                           ;main.c: 1199:     i_RUN_ZERO = 0;
  5909   0015AA  0E00               	movlw	0
  5910   0015AC  6E16               	movwf	(_i_RUN_ZERO+1)^0,c
  5911   0015AE  0E00               	movlw	0
  5912   0015B0  6E15               	movwf	_i_RUN_ZERO^0,c
  5913   0015B2                     
  5914                           ;main.c: 1200:     NUM = 0;
  5915   0015B2  0E00               	movlw	0
  5916   0015B4  6E18               	movwf	(_NUM+1)^0,c
  5917   0015B6  0E00               	movlw	0
  5918   0015B8  6E17               	movwf	_NUM^0,c
  5919   0015BA                     
  5920                           ;main.c: 1202:     dispense = 0;
  5921   0015BA  0E00               	movlw	0
  5922   0015BC  6E08               	movwf	(_dispense+1)^0,c
  5923   0015BE  0E00               	movlw	0
  5924   0015C0  6E07               	movwf	_dispense^0,c
  5925   0015C2                     
  5926                           ;main.c: 1203:     OpMode = MANUAL_MODE;
  5927   0015C2  0E00               	movlw	0
  5928   0015C4  6E2A               	movwf	_OpMode^0,c	;volatile
  5929   0015C6  0012               	return		;funcret
  5930   0015C8                     __end_of_Homing_Again_Manual:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _WriteSTLED316SData *****************
  5934 ;; Defined at:
  5935 ;;		line 145 in file "Display.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  number          2   14[COMRAM] int 
  5938 ;;  v_mode          1   16[COMRAM] unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  NUM_DIG1        2   19[COMRAM] int 
  5941 ;;  NUM_DIG0        2   17[COMRAM] int 
  5942 ;;  data4           1   22[COMRAM] unsigned char 
  5943 ;;  data3           1   21[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5953 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;Total ram usage:        9 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 3
  5960 ;; This function calls:
  5961 ;;		_Get7Seg
  5962 ;;		_STLED316s_SPI_SendData
  5963 ;;		___awdiv
  5964 ;;		___awmod
  5965 ;; This function is called by:
  5966 ;;		_main
  5967 ;;		_Homing_Again_Manual
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text24
  5972   002016                     __ptext24:
  5973                           	callstack 0
  5974   002016                     _WriteSTLED316SData:
  5975                           	callstack 27
  5976   002016                     
  5977                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  5978   002016  C040  F038         	movff	WriteSTLED316SData@number,___awmod@dividend
  5979   00201A  C041  F039         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  5980   00201E  0E00               	movlw	0
  5981   002020  6E3B               	movwf	(___awmod@divisor+1)^0,c
  5982   002022  0E0A               	movlw	10
  5983   002024  6E3A               	movwf	___awmod@divisor^0,c
  5984   002026  ECB3  F00F         	call	___awmod	;wreg free
  5985   00202A  C038  F043         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  5986   00202E  C039  F044         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  5987                           
  5988                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  5989   002032  C040  F038         	movff	WriteSTLED316SData@number,___awdiv@dividend
  5990   002036  C041  F039         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  5991   00203A  0E00               	movlw	0
  5992   00203C  6E3B               	movwf	(___awdiv@divisor+1)^0,c
  5993   00203E  0E0A               	movlw	10
  5994   002040  6E3A               	movwf	___awdiv@divisor^0,c
  5995   002042  EC51  F00F         	call	___awdiv	;wreg free
  5996   002046  C038  F045         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  5997   00204A  C039  F046         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  5998   00204E                     
  5999                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  6000   00204E  988B               	bcf	139,4,c	;volatile
  6001                           
  6002                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  6003   002050  0E00               	movlw	0
  6004   002052  ECA5  F010         	call	_STLED316s_SPI_SendData
  6005   002056                     
  6006                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  6007   002056  888B               	bsf	139,4,c	;volatile
  6008   002058                     
  6009                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  6010   002058  988B               	bcf	139,4,c	;volatile
  6011                           
  6012                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  6013   00205A  0E00               	movlw	0
  6014   00205C  ECA5  F010         	call	_STLED316s_SPI_SendData
  6015                           
  6016                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  6017   002060  C045  F038         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  6018   002064  C046  F039         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  6019   002068  ECEB  F00E         	call	_Get7Seg	;wreg free
  6020   00206C  6E48               	movwf	WriteSTLED316SData@data4^0,c
  6021                           
  6022                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  6023   00206E  C043  F038         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  6024   002072  C044  F039         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  6025   002076  ECEB  F00E         	call	_Get7Seg	;wreg free
  6026   00207A  6E47               	movwf	WriteSTLED316SData@data3^0,c
  6027   00207C                     
  6028                           ;Display.c: 165:     if (v_mode) {
  6029   00207C  5042               	movf	WriteSTLED316SData@v_mode^0,w,c
  6030   00207E  B4D8               	btfsc	status,2,c
  6031   002080  EF44  F010         	goto	u2061
  6032   002084  EF46  F010         	goto	u2060
  6033   002088                     u2061:
  6034   002088  EF52  F010         	goto	l3377
  6035   00208C                     u2060:
  6036   00208C                     
  6037                           ;Display.c: 166:         if (v_mode == 0xFF)
  6038   00208C  2842               	incf	WriteSTLED316SData@v_mode^0,w,c
  6039   00208E  A4D8               	btfss	status,2,c
  6040   002090  EF4C  F010         	goto	u2071
  6041   002094  EF4E  F010         	goto	u2070
  6042   002098                     u2071:
  6043   002098  EF51  F010         	goto	l3375
  6044   00209C                     u2070:
  6045   00209C                     
  6046                           ;Display.c: 167:             data4 |= 0x80;
  6047   00209C  8E48               	bsf	WriteSTLED316SData@data4^0,7,c
  6048   00209E  EF52  F010         	goto	l3377
  6049   0020A2                     l3375:
  6050                           
  6051                           ;Display.c: 169:             data3 |= 0x80;
  6052   0020A2  8E47               	bsf	WriteSTLED316SData@data3^0,7,c
  6053   0020A4                     l3377:
  6054                           
  6055                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  6056   0020A4  5048               	movf	WriteSTLED316SData@data4^0,w,c
  6057   0020A6  ECA5  F010         	call	_STLED316s_SPI_SendData
  6058   0020AA                     
  6059                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  6060   0020AA  5047               	movf	WriteSTLED316SData@data3^0,w,c
  6061   0020AC  ECA5  F010         	call	_STLED316s_SPI_SendData
  6062   0020B0                     
  6063                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  6064   0020B0  888B               	bsf	139,4,c	;volatile
  6065   0020B2                     
  6066                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  6067   0020B2  988B               	bcf	139,4,c	;volatile
  6068   0020B4                     
  6069                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  6070   0020B4  0E0D               	movlw	13
  6071   0020B6  ECA5  F010         	call	_STLED316s_SPI_SendData
  6072   0020BA                     
  6073                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  6074   0020BA  888B               	bsf	139,4,c	;volatile
  6075   0020BC  0012               	return		;funcret
  6076   0020BE                     __end_of_WriteSTLED316SData:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function ___awmod *****************
  6080 ;; Defined at:
  6081 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  dividend        2    6[COMRAM] int 
  6084 ;;  divisor         2    8[COMRAM] int 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  sign            1   11[COMRAM] unsigned char 
  6087 ;;  counter         1   10[COMRAM] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  2    6[COMRAM] int 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;Total ram usage:        6 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 2
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_WriteSTLED316SData
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text25
  6112   001F66                     __ptext25:
  6113                           	callstack 0
  6114   001F66                     ___awmod:
  6115                           	callstack 27
  6116   001F66  0E00               	movlw	0
  6117   001F68  6E3D               	movwf	___awmod@sign^0,c
  6118   001F6A  BE39               	btfsc	(___awmod@dividend+1)^0,7,c
  6119   001F6C  EFBC  F00F         	goto	u2000
  6120   001F70  EFBA  F00F         	goto	u2001
  6121   001F74                     u2001:
  6122   001F74  EFC2  F00F         	goto	l3333
  6123   001F78                     u2000:
  6124   001F78  6C38               	negf	___awmod@dividend^0,c
  6125   001F7A  1E39               	comf	(___awmod@dividend+1)^0,f,c
  6126   001F7C  B0D8               	btfsc	status,0,c
  6127   001F7E  2A39               	incf	(___awmod@dividend+1)^0,f,c
  6128   001F80  0E01               	movlw	1
  6129   001F82  6E3D               	movwf	___awmod@sign^0,c
  6130   001F84                     l3333:
  6131   001F84  BE3B               	btfsc	(___awmod@divisor+1)^0,7,c
  6132   001F86  EFC9  F00F         	goto	u2010
  6133   001F8A  EFC7  F00F         	goto	u2011
  6134   001F8E                     u2011:
  6135   001F8E  EFCD  F00F         	goto	l3337
  6136   001F92                     u2010:
  6137   001F92  6C3A               	negf	___awmod@divisor^0,c
  6138   001F94  1E3B               	comf	(___awmod@divisor+1)^0,f,c
  6139   001F96  B0D8               	btfsc	status,0,c
  6140   001F98  2A3B               	incf	(___awmod@divisor+1)^0,f,c
  6141   001F9A                     l3337:
  6142   001F9A  503A               	movf	___awmod@divisor^0,w,c
  6143   001F9C  103B               	iorwf	(___awmod@divisor+1)^0,w,c
  6144   001F9E  B4D8               	btfsc	status,2,c
  6145   001FA0  EFD4  F00F         	goto	u2021
  6146   001FA4  EFD6  F00F         	goto	u2020
  6147   001FA8                     u2021:
  6148   001FA8  EFFA  F00F         	goto	l3353
  6149   001FAC                     u2020:
  6150   001FAC  0E01               	movlw	1
  6151   001FAE  6E3C               	movwf	___awmod@counter^0,c
  6152   001FB0  EFDE  F00F         	goto	l3343
  6153   001FB4                     l3341:
  6154   001FB4  90D8               	bcf	status,0,c
  6155   001FB6  363A               	rlcf	___awmod@divisor^0,f,c
  6156   001FB8  363B               	rlcf	(___awmod@divisor+1)^0,f,c
  6157   001FBA  2A3C               	incf	___awmod@counter^0,f,c
  6158   001FBC                     l3343:
  6159   001FBC  AE3B               	btfss	(___awmod@divisor+1)^0,7,c
  6160   001FBE  EFE3  F00F         	goto	u2031
  6161   001FC2  EFE5  F00F         	goto	u2030
  6162   001FC6                     u2031:
  6163   001FC6  EFDA  F00F         	goto	l3341
  6164   001FCA                     u2030:
  6165   001FCA                     l3345:
  6166   001FCA  503A               	movf	___awmod@divisor^0,w,c
  6167   001FCC  5C38               	subwf	___awmod@dividend^0,w,c
  6168   001FCE  503B               	movf	(___awmod@divisor+1)^0,w,c
  6169   001FD0  5839               	subwfb	(___awmod@dividend+1)^0,w,c
  6170   001FD2  A0D8               	btfss	status,0,c
  6171   001FD4  EFEE  F00F         	goto	u2041
  6172   001FD8  EFF0  F00F         	goto	u2040
  6173   001FDC                     u2041:
  6174   001FDC  EFF4  F00F         	goto	l3349
  6175   001FE0                     u2040:
  6176   001FE0  503A               	movf	___awmod@divisor^0,w,c
  6177   001FE2  5E38               	subwf	___awmod@dividend^0,f,c
  6178   001FE4  503B               	movf	(___awmod@divisor+1)^0,w,c
  6179   001FE6  5A39               	subwfb	(___awmod@dividend+1)^0,f,c
  6180   001FE8                     l3349:
  6181   001FE8  90D8               	bcf	status,0,c
  6182   001FEA  323B               	rrcf	(___awmod@divisor+1)^0,f,c
  6183   001FEC  323A               	rrcf	___awmod@divisor^0,f,c
  6184   001FEE  2E3C               	decfsz	___awmod@counter^0,f,c
  6185   001FF0  EFE5  F00F         	goto	l3345
  6186   001FF4                     l3353:
  6187   001FF4  503D               	movf	___awmod@sign^0,w,c
  6188   001FF6  B4D8               	btfsc	status,2,c
  6189   001FF8  EF00  F010         	goto	u2051
  6190   001FFC  EF02  F010         	goto	u2050
  6191   002000                     u2051:
  6192   002000  EF06  F010         	goto	l3357
  6193   002004                     u2050:
  6194   002004  6C38               	negf	___awmod@dividend^0,c
  6195   002006  1E39               	comf	(___awmod@dividend+1)^0,f,c
  6196   002008  B0D8               	btfsc	status,0,c
  6197   00200A  2A39               	incf	(___awmod@dividend+1)^0,f,c
  6198   00200C                     l3357:
  6199   00200C  C038  F038         	movff	___awmod@dividend,?___awmod
  6200   002010  C039  F039         	movff	___awmod@dividend+1,?___awmod+1
  6201   002014  0012               	return		;funcret
  6202   002016                     __end_of___awmod:
  6203                           	callstack 0
  6204                           
  6205 ;; *************** function ___awdiv *****************
  6206 ;; Defined at:
  6207 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  dividend        2    6[COMRAM] int 
  6210 ;;  divisor         2    8[COMRAM] int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  quotient        2   12[COMRAM] int 
  6213 ;;  sign            1   11[COMRAM] unsigned char 
  6214 ;;  counter         1   10[COMRAM] unsigned char 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2    6[COMRAM] int 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;Total ram usage:        8 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 2
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_WriteSTLED316SData
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text26
  6239   001EA2                     __ptext26:
  6240                           	callstack 0
  6241   001EA2                     ___awdiv:
  6242                           	callstack 27
  6243   001EA2  0E00               	movlw	0
  6244   001EA4  6E3D               	movwf	___awdiv@sign^0,c
  6245   001EA6  BE3B               	btfsc	(___awdiv@divisor+1)^0,7,c
  6246   001EA8  EF5A  F00F         	goto	u1940
  6247   001EAC  EF58  F00F         	goto	u1941
  6248   001EB0                     u1941:
  6249   001EB0  EF60  F00F         	goto	l3289
  6250   001EB4                     u1940:
  6251   001EB4  6C3A               	negf	___awdiv@divisor^0,c
  6252   001EB6  1E3B               	comf	(___awdiv@divisor+1)^0,f,c
  6253   001EB8  B0D8               	btfsc	status,0,c
  6254   001EBA  2A3B               	incf	(___awdiv@divisor+1)^0,f,c
  6255   001EBC  0E01               	movlw	1
  6256   001EBE  6E3D               	movwf	___awdiv@sign^0,c
  6257   001EC0                     l3289:
  6258   001EC0  BE39               	btfsc	(___awdiv@dividend+1)^0,7,c
  6259   001EC2  EF67  F00F         	goto	u1950
  6260   001EC6  EF65  F00F         	goto	u1951
  6261   001ECA                     u1951:
  6262   001ECA  EF6D  F00F         	goto	l3295
  6263   001ECE                     u1950:
  6264   001ECE  6C38               	negf	___awdiv@dividend^0,c
  6265   001ED0  1E39               	comf	(___awdiv@dividend+1)^0,f,c
  6266   001ED2  B0D8               	btfsc	status,0,c
  6267   001ED4  2A39               	incf	(___awdiv@dividend+1)^0,f,c
  6268   001ED6  0E01               	movlw	1
  6269   001ED8  1A3D               	xorwf	___awdiv@sign^0,f,c
  6270   001EDA                     l3295:
  6271   001EDA  0E00               	movlw	0
  6272   001EDC  6E3F               	movwf	(___awdiv@quotient+1)^0,c
  6273   001EDE  0E00               	movlw	0
  6274   001EE0  6E3E               	movwf	___awdiv@quotient^0,c
  6275   001EE2  503A               	movf	___awdiv@divisor^0,w,c
  6276   001EE4  103B               	iorwf	(___awdiv@divisor+1)^0,w,c
  6277   001EE6  B4D8               	btfsc	status,2,c
  6278   001EE8  EF78  F00F         	goto	u1961
  6279   001EEC  EF7A  F00F         	goto	u1960
  6280   001EF0                     u1961:
  6281   001EF0  EFA2  F00F         	goto	l3317
  6282   001EF4                     u1960:
  6283   001EF4  0E01               	movlw	1
  6284   001EF6  6E3C               	movwf	___awdiv@counter^0,c
  6285   001EF8  EF82  F00F         	goto	l3303
  6286   001EFC                     l3301:
  6287   001EFC  90D8               	bcf	status,0,c
  6288   001EFE  363A               	rlcf	___awdiv@divisor^0,f,c
  6289   001F00  363B               	rlcf	(___awdiv@divisor+1)^0,f,c
  6290   001F02  2A3C               	incf	___awdiv@counter^0,f,c
  6291   001F04                     l3303:
  6292   001F04  AE3B               	btfss	(___awdiv@divisor+1)^0,7,c
  6293   001F06  EF87  F00F         	goto	u1971
  6294   001F0A  EF89  F00F         	goto	u1970
  6295   001F0E                     u1971:
  6296   001F0E  EF7E  F00F         	goto	l3301
  6297   001F12                     u1970:
  6298   001F12                     l3305:
  6299   001F12  90D8               	bcf	status,0,c
  6300   001F14  363E               	rlcf	___awdiv@quotient^0,f,c
  6301   001F16  363F               	rlcf	(___awdiv@quotient+1)^0,f,c
  6302   001F18  503A               	movf	___awdiv@divisor^0,w,c
  6303   001F1A  5C38               	subwf	___awdiv@dividend^0,w,c
  6304   001F1C  503B               	movf	(___awdiv@divisor+1)^0,w,c
  6305   001F1E  5839               	subwfb	(___awdiv@dividend+1)^0,w,c
  6306   001F20  A0D8               	btfss	status,0,c
  6307   001F22  EF95  F00F         	goto	u1981
  6308   001F26  EF97  F00F         	goto	u1980
  6309   001F2A                     u1981:
  6310   001F2A  EF9C  F00F         	goto	l3313
  6311   001F2E                     u1980:
  6312   001F2E  503A               	movf	___awdiv@divisor^0,w,c
  6313   001F30  5E38               	subwf	___awdiv@dividend^0,f,c
  6314   001F32  503B               	movf	(___awdiv@divisor+1)^0,w,c
  6315   001F34  5A39               	subwfb	(___awdiv@dividend+1)^0,f,c
  6316   001F36  803E               	bsf	___awdiv@quotient^0,0,c
  6317   001F38                     l3313:
  6318   001F38  90D8               	bcf	status,0,c
  6319   001F3A  323B               	rrcf	(___awdiv@divisor+1)^0,f,c
  6320   001F3C  323A               	rrcf	___awdiv@divisor^0,f,c
  6321   001F3E  2E3C               	decfsz	___awdiv@counter^0,f,c
  6322   001F40  EF89  F00F         	goto	l3305
  6323   001F44                     l3317:
  6324   001F44  503D               	movf	___awdiv@sign^0,w,c
  6325   001F46  B4D8               	btfsc	status,2,c
  6326   001F48  EFA8  F00F         	goto	u1991
  6327   001F4C  EFAA  F00F         	goto	u1990
  6328   001F50                     u1991:
  6329   001F50  EFAE  F00F         	goto	l3321
  6330   001F54                     u1990:
  6331   001F54  6C3E               	negf	___awdiv@quotient^0,c
  6332   001F56  1E3F               	comf	(___awdiv@quotient+1)^0,f,c
  6333   001F58  B0D8               	btfsc	status,0,c
  6334   001F5A  2A3F               	incf	(___awdiv@quotient+1)^0,f,c
  6335   001F5C                     l3321:
  6336   001F5C  C03E  F038         	movff	___awdiv@quotient,?___awdiv
  6337   001F60  C03F  F039         	movff	___awdiv@quotient+1,?___awdiv+1
  6338   001F64  0012               	return		;funcret
  6339   001F66                     __end_of___awdiv:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function _Get7Seg *****************
  6343 ;; Defined at:
  6344 ;;		line 104 in file "Display.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  Digit           2    6[COMRAM] int 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  Data            1   10[COMRAM] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      unsigned char 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;Total ram usage:        5 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 2
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_WriteSTLED316SData
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text27
  6373   001DD6                     __ptext27:
  6374                           	callstack 0
  6375   001DD6                     _Get7Seg:
  6376                           	callstack 27
  6377   001DD6                     
  6378                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  6379   001DD6  EF19  F00F         	goto	l3199
  6380   001DDA                     l3175:
  6381                           
  6382                           ;Display.c: 109:             Data = 0x3F;
  6383   001DDA  0E3F               	movlw	63
  6384   001DDC  6E3C               	movwf	Get7Seg@Data^0,c
  6385                           
  6386                           ;Display.c: 110:             break;
  6387   001DDE  EF4F  F00F         	goto	l3201
  6388   001DE2                     l3177:
  6389                           
  6390                           ;Display.c: 112:             Data = 0x06;
  6391   001DE2  0E06               	movlw	6
  6392   001DE4  6E3C               	movwf	Get7Seg@Data^0,c
  6393                           
  6394                           ;Display.c: 113:             break;
  6395   001DE6  EF4F  F00F         	goto	l3201
  6396   001DEA                     l3179:
  6397                           
  6398                           ;Display.c: 115:             Data = 0x5B;
  6399   001DEA  0E5B               	movlw	91
  6400   001DEC  6E3C               	movwf	Get7Seg@Data^0,c
  6401                           
  6402                           ;Display.c: 116:             break;
  6403   001DEE  EF4F  F00F         	goto	l3201
  6404   001DF2                     l3181:
  6405                           
  6406                           ;Display.c: 118:             Data = 0x4F;
  6407   001DF2  0E4F               	movlw	79
  6408   001DF4  6E3C               	movwf	Get7Seg@Data^0,c
  6409                           
  6410                           ;Display.c: 119:             break;
  6411   001DF6  EF4F  F00F         	goto	l3201
  6412   001DFA                     l3183:
  6413                           
  6414                           ;Display.c: 121:             Data = 0x66;
  6415   001DFA  0E66               	movlw	102
  6416   001DFC  6E3C               	movwf	Get7Seg@Data^0,c
  6417                           
  6418                           ;Display.c: 122:             break;
  6419   001DFE  EF4F  F00F         	goto	l3201
  6420   001E02                     l3185:
  6421                           
  6422                           ;Display.c: 124:             Data = 0x6D;
  6423   001E02  0E6D               	movlw	109
  6424   001E04  6E3C               	movwf	Get7Seg@Data^0,c
  6425                           
  6426                           ;Display.c: 125:             break;
  6427   001E06  EF4F  F00F         	goto	l3201
  6428   001E0A                     l3187:
  6429                           
  6430                           ;Display.c: 127:             Data = 0x7D;
  6431   001E0A  0E7D               	movlw	125
  6432   001E0C  6E3C               	movwf	Get7Seg@Data^0,c
  6433                           
  6434                           ;Display.c: 128:             break;
  6435   001E0E  EF4F  F00F         	goto	l3201
  6436   001E12                     l3189:
  6437                           
  6438                           ;Display.c: 130:             Data = 0x07;
  6439   001E12  0E07               	movlw	7
  6440   001E14  6E3C               	movwf	Get7Seg@Data^0,c
  6441                           
  6442                           ;Display.c: 131:             break;
  6443   001E16  EF4F  F00F         	goto	l3201
  6444   001E1A                     l3191:
  6445                           
  6446                           ;Display.c: 133:             Data = 0x7F;
  6447   001E1A  0E7F               	movlw	127
  6448   001E1C  6E3C               	movwf	Get7Seg@Data^0,c
  6449                           
  6450                           ;Display.c: 134:             break;
  6451   001E1E  EF4F  F00F         	goto	l3201
  6452   001E22                     l3193:
  6453                           
  6454                           ;Display.c: 136:             Data = 0x6F;
  6455   001E22  0E6F               	movlw	111
  6456   001E24  6E3C               	movwf	Get7Seg@Data^0,c
  6457                           
  6458                           ;Display.c: 137:             break;
  6459   001E26  EF4F  F00F         	goto	l3201
  6460   001E2A                     l3195:
  6461                           
  6462                           ;Display.c: 139:             Data = 0x00;
  6463   001E2A  0E00               	movlw	0
  6464   001E2C  6E3C               	movwf	Get7Seg@Data^0,c
  6465                           
  6466                           ;Display.c: 140:             break;
  6467   001E2E  EF4F  F00F         	goto	l3201
  6468   001E32                     l3199:
  6469   001E32  C038  F03A         	movff	Get7Seg@Digit,??_Get7Seg
  6470   001E36  C039  F03B         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  6471                           
  6472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6473                           ; Switch size 1, requested type "simple"
  6474                           ; Number of cases is 1, Range of values is 0 to 0
  6475                           ; switch strategies available:
  6476                           ; Name         Instructions Cycles
  6477                           ; simple_byte            4     3 (average)
  6478                           ;	Chosen strategy is simple_byte
  6479   001E3A  503B               	movf	(??_Get7Seg+1)^0,w,c
  6480   001E3C  0A00               	xorlw	0	; case 0
  6481   001E3E  B4D8               	btfsc	status,2,c
  6482   001E40  EF24  F00F         	goto	l6225
  6483   001E44  EF15  F00F         	goto	l3195
  6484   001E48                     l6225:
  6485                           
  6486                           ; Switch size 1, requested type "simple"
  6487                           ; Number of cases is 10, Range of values is 0 to 9
  6488                           ; switch strategies available:
  6489                           ; Name         Instructions Cycles
  6490                           ; simple_byte           31    16 (average)
  6491                           ;	Chosen strategy is simple_byte
  6492   001E48  503A               	movf	??_Get7Seg^0,w,c
  6493   001E4A  0A00               	xorlw	0	; case 0
  6494   001E4C  B4D8               	btfsc	status,2,c
  6495   001E4E  EFED  F00E         	goto	l3175
  6496   001E52  0A01               	xorlw	1	; case 1
  6497   001E54  B4D8               	btfsc	status,2,c
  6498   001E56  EFF1  F00E         	goto	l3177
  6499   001E5A  0A03               	xorlw	3	; case 2
  6500   001E5C  B4D8               	btfsc	status,2,c
  6501   001E5E  EFF5  F00E         	goto	l3179
  6502   001E62  0A01               	xorlw	1	; case 3
  6503   001E64  B4D8               	btfsc	status,2,c
  6504   001E66  EFF9  F00E         	goto	l3181
  6505   001E6A  0A07               	xorlw	7	; case 4
  6506   001E6C  B4D8               	btfsc	status,2,c
  6507   001E6E  EFFD  F00E         	goto	l3183
  6508   001E72  0A01               	xorlw	1	; case 5
  6509   001E74  B4D8               	btfsc	status,2,c
  6510   001E76  EF01  F00F         	goto	l3185
  6511   001E7A  0A03               	xorlw	3	; case 6
  6512   001E7C  B4D8               	btfsc	status,2,c
  6513   001E7E  EF05  F00F         	goto	l3187
  6514   001E82  0A01               	xorlw	1	; case 7
  6515   001E84  B4D8               	btfsc	status,2,c
  6516   001E86  EF09  F00F         	goto	l3189
  6517   001E8A  0A0F               	xorlw	15	; case 8
  6518   001E8C  B4D8               	btfsc	status,2,c
  6519   001E8E  EF0D  F00F         	goto	l3191
  6520   001E92  0A01               	xorlw	1	; case 9
  6521   001E94  B4D8               	btfsc	status,2,c
  6522   001E96  EF11  F00F         	goto	l3193
  6523   001E9A  EF15  F00F         	goto	l3195
  6524   001E9E                     l3201:
  6525                           
  6526                           ;Display.c: 142:     return (Data);
  6527   001E9E  503C               	movf	Get7Seg@Data^0,w,c
  6528   001EA0  0012               	return		;funcret
  6529   001EA2                     __end_of_Get7Seg:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _Homing_Again_Auto *****************
  6533 ;; Defined at:
  6534 ;;		line 1210 in file "main.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;Total ram usage:        2 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 4
  6555 ;; This function calls:
  6556 ;;		_AD_capture_BattVoltage
  6557 ;;		_MotorBREAK
  6558 ;;		_MotorON
  6559 ;;		_Read_IR
  6560 ;;		_WriteSTLED316SErr
  6561 ;;		_WriteSTLED316SMode
  6562 ;;		_delay_1ms
  6563 ;;		_readWeighingData
  6564 ;; This function is called by:
  6565 ;;		_main
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text28
  6570   0015C8                     __ptext28:
  6571                           	callstack 0
  6572   0015C8                     _Homing_Again_Auto:
  6573                           	callstack 26
  6574   0015C8                     
  6575                           ;main.c: 1212:     IR_SENSORF = 0;
  6576   0015C8  0E00               	movlw	0
  6577   0015CA  6E10               	movwf	(_IR_SENSORF+1)^0,c
  6578   0015CC  0E00               	movlw	0
  6579   0015CE  6E0F               	movwf	_IR_SENSORF^0,c
  6580   0015D0                     
  6581                           ;main.c: 1213:     WriteSTLED316SMode('A');
  6582   0015D0  0E41               	movlw	65
  6583   0015D2  EC03  F00D         	call	_WriteSTLED316SMode
  6584   0015D6                     
  6585                           ;main.c: 1215:     if (vibration_mode == 1) {
  6586   0015D6  042C               	decf	_vibration_mode^0,w,c
  6587   0015D8  A4D8               	btfss	status,2,c
  6588   0015DA  EFF1  F00A         	goto	u2571
  6589   0015DE  EFF3  F00A         	goto	u2570
  6590   0015E2                     u2571:
  6591   0015E2  EF08  F00B         	goto	l422
  6592   0015E6                     u2570:
  6593   0015E6                     
  6594                           ;main.c: 1216:         LATCbits.LATC1 = 1;
  6595   0015E6  828B               	bsf	139,1,c	;volatile
  6596   0015E8                     
  6597                           ;main.c: 1217:         delay_1ms(Vmotor_Time);
  6598   0015E8  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6599   0015EC  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6600   0015F0  EC8C  F012         	call	_delay_1ms	;wreg free
  6601   0015F4                     
  6602                           ;main.c: 1218:         LATCbits.LATC1 = 0;
  6603   0015F4  928B               	bcf	139,1,c	;volatile
  6604   0015F6                     l3939:
  6605                           
  6606                           ;main.c: 1219:         _delay((unsigned long)((300)*(8000000/4000.0)));
  6607   0015F6  0E04               	movlw	4
  6608   0015F8  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6609   0015FA  0E0C               	movlw	12
  6610   0015FC  6E41               	movwf	??_Homing_Again_Auto^0,c
  6611   0015FE  0E34               	movlw	52
  6612   001600                     u4417:
  6613   001600  2EE8               	decfsz	wreg,f,c
  6614   001602  D7FE               	bra	u4417
  6615   001604  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6616   001606  D7FC               	bra	u4417
  6617   001608  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6618   00160A  D7FA               	bra	u4417
  6619                           
  6620                           ;main.c: 1220:     } else {
  6621   00160C  EF0B  F00B         	goto	l3943
  6622   001610                     l422:
  6623                           
  6624                           ;main.c: 1221:         LATCbits.LATC1 = 0;
  6625   001610  928B               	bcf	139,1,c	;volatile
  6626   001612  EFFB  F00A         	goto	l3939
  6627   001616                     l3943:
  6628                           
  6629                           ;main.c: 1225:     LATAbits.LATA2 = 1;
  6630   001616  8489               	bsf	137,2,c	;volatile
  6631                           
  6632                           ;main.c: 1227:     while (Stop == 0) {
  6633   001618  EFBB  F00B         	goto	l4001
  6634   00161C                     l425:
  6635   00161C  0004               	clrwdt		;# 
  6636   00161E                     
  6637                           ;main.c: 1229:         readWeighingData();
  6638   00161E  EC52  F011         	call	_readWeighingData	;wreg free
  6639   001622                     
  6640                           ;main.c: 1230:         AD_capture_BattVoltage();
  6641   001622  ECE6  F011         	call	_AD_capture_BattVoltage	;wreg free
  6642   001626                     
  6643                           ;main.c: 1231:         delay_1ms(Motor_Pause_Time);
  6644   001626  C019  F038         	movff	_Motor_Pause_Time,delay_1ms@time
  6645   00162A  C01A  F039         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  6646   00162E  EC8C  F012         	call	_delay_1ms	;wreg free
  6647   001632                     
  6648                           ;main.c: 1232:         MotorON();
  6649   001632  EC37  F013         	call	_MotorON	;wreg free
  6650   001636                     
  6651                           ;main.c: 1233:         _delay((unsigned long)((350)*(8000000/4000.0)));
  6652   001636  0E04               	movlw	4
  6653   001638  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6654   00163A  0E8E               	movlw	142
  6655   00163C  6E41               	movwf	??_Homing_Again_Auto^0,c
  6656   00163E  0E12               	movlw	18
  6657   001640                     u4427:
  6658   001640  2EE8               	decfsz	wreg,f,c
  6659   001642  D7FE               	bra	u4427
  6660   001644  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6661   001646  D7FC               	bra	u4427
  6662   001648  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6663   00164A  D7FA               	bra	u4427
  6664   00164C  D000               	nop2	
  6665   00164E                     
  6666                           ;main.c: 1235:         errorcounter = 30;
  6667   00164E  0E1E               	movlw	30
  6668   001650  6E52               	movwf	_errorcounter^0,c	;volatile
  6669   001652  0E00               	movlw	0
  6670   001654  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6671   001656  0E00               	movlw	0
  6672   001658  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6673   00165A  0E00               	movlw	0
  6674   00165C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6675   00165E                     l3957:
  6676                           
  6677                           ;main.c: 1238:             IR_SENSORF = Read_IR();
  6678   00165E  ECDB  F012         	call	_Read_IR	;wreg free
  6679   001662  C038  F00F         	movff	?_Read_IR,_IR_SENSORF
  6680   001666  C039  F010         	movff	?_Read_IR+1,_IR_SENSORF+1
  6681   00166A                     
  6682                           ;main.c: 1239:             if (errorcounter == 0) {
  6683   00166A  5052               	movf	_errorcounter^0,w,c	;volatile
  6684   00166C  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6685   00166E  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6686   001670  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6687   001672  A4D8               	btfss	status,2,c
  6688   001674  EF3E  F00B         	goto	u2581
  6689   001678  EF40  F00B         	goto	u2580
  6690   00167C                     u2581:
  6691   00167C  EF45  F00B         	goto	l3965
  6692   001680                     u2580:
  6693   001680                     
  6694                           ;main.c: 1240:                 WriteSTLED316SErr('1');
  6695   001680  0E31               	movlw	49
  6696   001682  EC77  F00E         	call	_WriteSTLED316SErr
  6697   001686                     
  6698                           ;main.c: 1241:                 MotorBREAK();
  6699   001686  EC3C  F013         	call	_MotorBREAK	;wreg free
  6700   00168A                     l3965:
  6701                           
  6702                           ;main.c: 1243:         } while (IR_SENSORF != 0);
  6703   00168A  500F               	movf	_IR_SENSORF^0,w,c
  6704   00168C  1010               	iorwf	(_IR_SENSORF+1)^0,w,c
  6705   00168E  A4D8               	btfss	status,2,c
  6706   001690  EF4C  F00B         	goto	u2591
  6707   001694  EF4E  F00B         	goto	u2590
  6708   001698                     u2591:
  6709   001698  EF2F  F00B         	goto	l3957
  6710   00169C                     u2590:
  6711   00169C                     
  6712                           ;main.c: 1245:         _delay((unsigned long)((30)*(8000000/4000.0)));
  6713   00169C  0E4E               	movlw	78
  6714   00169E  6E41               	movwf	??_Homing_Again_Auto^0,c
  6715   0016A0  0EEB               	movlw	235
  6716   0016A2                     u4437:
  6717   0016A2  2EE8               	decfsz	wreg,f,c
  6718   0016A4  D7FE               	bra	u4437
  6719   0016A6  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6720   0016A8  D7FC               	bra	u4437
  6721   0016AA  F000               	nop	
  6722   0016AC                     
  6723                           ;main.c: 1246:         errorcounter = 30;
  6724   0016AC  0E1E               	movlw	30
  6725   0016AE  6E52               	movwf	_errorcounter^0,c	;volatile
  6726   0016B0  0E00               	movlw	0
  6727   0016B2  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6728   0016B4  0E00               	movlw	0
  6729   0016B6  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6730   0016B8  0E00               	movlw	0
  6731   0016BA  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6732   0016BC                     l3971:
  6733                           
  6734                           ;main.c: 1249:             IR_SENSORF = Read_IR();
  6735   0016BC  ECDB  F012         	call	_Read_IR	;wreg free
  6736   0016C0  C038  F00F         	movff	?_Read_IR,_IR_SENSORF
  6737   0016C4  C039  F010         	movff	?_Read_IR+1,_IR_SENSORF+1
  6738   0016C8                     
  6739                           ;main.c: 1250:             if (errorcounter == 0) {
  6740   0016C8  5052               	movf	_errorcounter^0,w,c	;volatile
  6741   0016CA  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6742   0016CC  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6743   0016CE  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6744   0016D0  A4D8               	btfss	status,2,c
  6745   0016D2  EF6D  F00B         	goto	u2601
  6746   0016D6  EF6F  F00B         	goto	u2600
  6747   0016DA                     u2601:
  6748   0016DA  EF74  F00B         	goto	l3979
  6749   0016DE                     u2600:
  6750   0016DE                     
  6751                           ;main.c: 1251:                 WriteSTLED316SErr('2');
  6752   0016DE  0E32               	movlw	50
  6753   0016E0  EC77  F00E         	call	_WriteSTLED316SErr
  6754   0016E4                     
  6755                           ;main.c: 1252:                 MotorBREAK();
  6756   0016E4  EC3C  F013         	call	_MotorBREAK	;wreg free
  6757   0016E8                     l3979:
  6758                           
  6759                           ;main.c: 1254:         } while (IR_SENSORF != 1);
  6760   0016E8  040F               	decf	_IR_SENSORF^0,w,c
  6761   0016EA  1010               	iorwf	(_IR_SENSORF+1)^0,w,c
  6762   0016EC  A4D8               	btfss	status,2,c
  6763   0016EE  EF7B  F00B         	goto	u2611
  6764   0016F2  EF7D  F00B         	goto	u2610
  6765   0016F6                     u2611:
  6766   0016F6  EF5E  F00B         	goto	l3971
  6767   0016FA                     u2610:
  6768   0016FA                     
  6769                           ;main.c: 1256:         errorcounter = 30;
  6770   0016FA  0E1E               	movlw	30
  6771   0016FC  6E52               	movwf	_errorcounter^0,c	;volatile
  6772   0016FE  0E00               	movlw	0
  6773   001700  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  6774   001702  0E00               	movlw	0
  6775   001704  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  6776   001706  0E00               	movlw	0
  6777   001708  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  6778   00170A                     
  6779                           ;main.c: 1258:         delay_1ms(Motor_Stop_Delay_Time);
  6780   00170A  C01D  F038         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  6781   00170E  C01E  F039         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  6782   001712  EC8C  F012         	call	_delay_1ms	;wreg free
  6783   001716                     
  6784                           ;main.c: 1259:         MotorBREAK();
  6785   001716  EC3C  F013         	call	_MotorBREAK	;wreg free
  6786                           
  6787                           ;main.c: 1261:         if (vibration_mode == 1) {
  6788   00171A  042C               	decf	_vibration_mode^0,w,c
  6789   00171C  A4D8               	btfss	status,2,c
  6790   00171E  EF93  F00B         	goto	u2621
  6791   001722  EF95  F00B         	goto	u2620
  6792   001726                     u2621:
  6793   001726  EFAA  F00B         	goto	l432
  6794   00172A                     u2620:
  6795   00172A                     
  6796                           ;main.c: 1262:             LATCbits.LATC1 = 1;
  6797   00172A  828B               	bsf	139,1,c	;volatile
  6798   00172C                     
  6799                           ;main.c: 1263:             delay_1ms(Vmotor_Time);
  6800   00172C  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6801   001730  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6802   001734  EC8C  F012         	call	_delay_1ms	;wreg free
  6803   001738                     
  6804                           ;main.c: 1265:             LATCbits.LATC1 = 0;
  6805   001738  928B               	bcf	139,1,c	;volatile
  6806   00173A                     
  6807                           ;main.c: 1266:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6808   00173A  0E04               	movlw	4
  6809   00173C  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6810   00173E  0E0C               	movlw	12
  6811   001740  6E41               	movwf	??_Homing_Again_Auto^0,c
  6812   001742  0E34               	movlw	52
  6813   001744                     u4447:
  6814   001744  2EE8               	decfsz	wreg,f,c
  6815   001746  D7FE               	bra	u4447
  6816   001748  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6817   00174A  D7FC               	bra	u4447
  6818   00174C  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6819   00174E  D7FA               	bra	u4447
  6820                           
  6821                           ;main.c: 1267:         } else {
  6822   001750  EFB1  F00B         	goto	l3997
  6823   001754                     l432:
  6824                           
  6825                           ;main.c: 1268:             LATCbits.LATC1 = 0;
  6826   001754  928B               	bcf	139,1,c	;volatile
  6827   001756                     
  6828                           ;main.c: 1269:             delay_1ms(Vmotor_Time);
  6829   001756  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6830   00175A  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6831   00175E  EC8C  F012         	call	_delay_1ms	;wreg free
  6832   001762                     l3997:
  6833                           
  6834                           ;main.c: 1272:         if (Stop == 1)
  6835   001762  042F               	decf	_Stop^0,w,c
  6836   001764  A4D8               	btfss	status,2,c
  6837   001766  EFB7  F00B         	goto	u2631
  6838   00176A  EFB9  F00B         	goto	u2630
  6839   00176E                     u2631:
  6840   00176E  EFBB  F00B         	goto	l4001
  6841   001772                     u2630:
  6842   001772  EFC3  F00B         	goto	l435
  6843   001776                     l4001:
  6844                           
  6845                           ;main.c: 1227:     while (Stop == 0) {
  6846   001776  502F               	movf	_Stop^0,w,c
  6847   001778  B4D8               	btfsc	status,2,c
  6848   00177A  EFC1  F00B         	goto	u2641
  6849   00177E  EFC3  F00B         	goto	u2640
  6850   001782                     u2641:
  6851   001782  EF0E  F00B         	goto	l425
  6852   001786                     u2640:
  6853   001786                     l435:
  6854                           
  6855                           ;main.c: 1277:     LATAbits.LATA2 = 0;
  6856   001786  9489               	bcf	137,2,c	;volatile
  6857   001788                     
  6858                           ;main.c: 1279:     if (NUM == 0 || Stop == 1) {
  6859   001788  5017               	movf	_NUM^0,w,c
  6860   00178A  1018               	iorwf	(_NUM+1)^0,w,c
  6861   00178C  B4D8               	btfsc	status,2,c
  6862   00178E  EFCB  F00B         	goto	u2651
  6863   001792  EFCD  F00B         	goto	u2650
  6864   001796                     u2651:
  6865   001796  EFD5  F00B         	goto	l4007
  6866   00179A                     u2650:
  6867   00179A  042F               	decf	_Stop^0,w,c
  6868   00179C  A4D8               	btfss	status,2,c
  6869   00179E  EFD3  F00B         	goto	u2661
  6870   0017A2  EFD5  F00B         	goto	u2660
  6871   0017A6                     u2661:
  6872   0017A6  EFF0  F00B         	goto	l4017
  6873   0017AA                     u2660:
  6874   0017AA                     l4007:
  6875                           
  6876                           ;main.c: 1281:         if (vibration_mode == 1) {
  6877   0017AA  042C               	decf	_vibration_mode^0,w,c
  6878   0017AC  A4D8               	btfss	status,2,c
  6879   0017AE  EFDB  F00B         	goto	u2671
  6880   0017B2  EFDD  F00B         	goto	u2670
  6881   0017B6                     u2671:
  6882   0017B6  EFF0  F00B         	goto	l4017
  6883   0017BA                     u2670:
  6884   0017BA                     
  6885                           ;main.c: 1282:             LATCbits.LATC1 = 1;
  6886   0017BA  828B               	bsf	139,1,c	;volatile
  6887   0017BC                     
  6888                           ;main.c: 1283:             delay_1ms(Vmotor_Time);
  6889   0017BC  C056  F038         	movff	_Vmotor_Time,delay_1ms@time
  6890   0017C0  C057  F039         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6891   0017C4  EC8C  F012         	call	_delay_1ms	;wreg free
  6892   0017C8                     
  6893                           ;main.c: 1285:             LATCbits.LATC1 = 0;
  6894   0017C8  928B               	bcf	139,1,c	;volatile
  6895   0017CA                     
  6896                           ;main.c: 1286:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6897   0017CA  0E04               	movlw	4
  6898   0017CC  6E42               	movwf	(??_Homing_Again_Auto+1)^0,c
  6899   0017CE  0E0C               	movlw	12
  6900   0017D0  6E41               	movwf	??_Homing_Again_Auto^0,c
  6901   0017D2  0E34               	movlw	52
  6902   0017D4                     u4457:
  6903   0017D4  2EE8               	decfsz	wreg,f,c
  6904   0017D6  D7FE               	bra	u4457
  6905   0017D8  2E41               	decfsz	??_Homing_Again_Auto^0,f,c
  6906   0017DA  D7FC               	bra	u4457
  6907   0017DC  2E42               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6908   0017DE  D7FA               	bra	u4457
  6909   0017E0                     l4017:
  6910                           
  6911                           ;main.c: 1291:     NUM = 0;
  6912   0017E0  0E00               	movlw	0
  6913   0017E2  6E18               	movwf	(_NUM+1)^0,c
  6914   0017E4  0E00               	movlw	0
  6915   0017E6  6E17               	movwf	_NUM^0,c
  6916   0017E8                     
  6917                           ;main.c: 1292:     OpMode = AUTO_MODE;
  6918   0017E8  0E02               	movlw	2
  6919   0017EA  6E2A               	movwf	_OpMode^0,c	;volatile
  6920   0017EC  0012               	return		;funcret
  6921   0017EE                     __end_of_Homing_Again_Auto:
  6922                           	callstack 0
  6923                           
  6924 ;; *************** function _readWeighingData *****************
  6925 ;; Defined at:
  6926 ;;		line 1321 in file "main.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  i               2    8[COMRAM] int 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;Total ram usage:        2 bytes
  6945 ;; Hardware stack levels used: 1
  6946 ;; Hardware stack levels required when called: 3
  6947 ;; This function calls:
  6948 ;;		_Write1USART
  6949 ;;		_flushOut
  6950 ;; This function is called by:
  6951 ;;		_Homing_Again_Manual
  6952 ;;		_Homing_Again_Auto
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text29
  6957   0022A4                     __ptext29:
  6958                           	callstack 0
  6959   0022A4                     _readWeighingData:
  6960                           	callstack 26
  6961   0022A4                     
  6962                           ;main.c: 1322:     int i;;main.c: 1324:     Serial_Buffer_Out[0] = 0xA5;
  6963   0022A4  0EA5               	movlw	165
  6964   0022A6  0100               	movlb	0	; () banked
  6965   0022A8  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  6966                           
  6967                           ;main.c: 1325:     Serial_Buffer_Out[1] = 0x45;
  6968   0022AA  0E45               	movlw	69
  6969   0022AC  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  6970                           
  6971                           ;main.c: 1326:     Serial_Buffer_Out[2] = 0x00;
  6972   0022AE  0E00               	movlw	0
  6973   0022B0  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  6974                           
  6975                           ;main.c: 1327:     Serial_Buffer_Out[3] = 0x45;
  6976   0022B2  0E45               	movlw	69
  6977   0022B4  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  6978                           
  6979                           ;main.c: 1328:     Serial_Buffer_Out[4] = 0x5A;
  6980   0022B6  0E5A               	movlw	90
  6981   0022B8  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  6982   0022BA                     
  6983                           ; BSR set to: 0
  6984                           ;main.c: 1330:     INTCONbits.GIE = 0;
  6985   0022BA  9EF2               	bcf	242,7,c	;volatile
  6986                           
  6987                           ;main.c: 1331:     for (i = 0; i < 5; i++) {
  6988   0022BC  0E00               	movlw	0
  6989   0022BE  6E3B               	movwf	(readWeighingData@i+1)^0,c
  6990   0022C0  0E00               	movlw	0
  6991   0022C2  6E3A               	movwf	readWeighingData@i^0,c
  6992   0022C4                     l3463:
  6993                           
  6994                           ;main.c: 1332:         Write1USART(Serial_Buffer_Out[i]);
  6995   0022C4  0E60               	movlw	low _Serial_Buffer_Out
  6996   0022C6  243A               	addwf	readWeighingData@i^0,w,c
  6997   0022C8  6ED9               	movwf	fsr2l,c
  6998   0022CA  0E00               	movlw	high _Serial_Buffer_Out
  6999   0022CC  203B               	addwfc	(readWeighingData@i+1)^0,w,c
  7000   0022CE  6EDA               	movwf	fsr2h,c
  7001   0022D0  50DF               	movf	indf2,w,c
  7002   0022D2  EC04  F013         	call	_Write1USART
  7003   0022D6                     
  7004                           ;main.c: 1333:     }
  7005   0022D6  4A3A               	infsnz	readWeighingData@i^0,f,c
  7006   0022D8  2A3B               	incf	(readWeighingData@i+1)^0,f,c
  7007   0022DA  BE3B               	btfsc	(readWeighingData@i+1)^0,7,c
  7008   0022DC  EF79  F011         	goto	u2101
  7009   0022E0  503B               	movf	(readWeighingData@i+1)^0,w,c
  7010   0022E2  E109               	bnz	u2100
  7011   0022E4  0E05               	movlw	5
  7012   0022E6  5C3A               	subwf	readWeighingData@i^0,w,c
  7013   0022E8  A0D8               	btfss	status,0,c
  7014   0022EA  EF79  F011         	goto	u2101
  7015   0022EE  EF7B  F011         	goto	u2100
  7016   0022F2                     u2101:
  7017   0022F2  EF62  F011         	goto	l3463
  7018   0022F6                     u2100:
  7019   0022F6                     
  7020                           ;main.c: 1334:     INTCONbits.GIE = 1;
  7021   0022F6  8EF2               	bsf	242,7,c	;volatile
  7022   0022F8                     
  7023                           ;main.c: 1336:     flushOut();
  7024   0022F8  EC22  F012         	call	_flushOut	;wreg free
  7025   0022FC  0012               	return		;funcret
  7026   0022FE                     __end_of_readWeighingData:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function _flushOut *****************
  7030 ;; Defined at:
  7031 ;;		line 1310 in file "main.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  i               2    6[COMRAM] int 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;Total ram usage:        2 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 2
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_main
  7056 ;;		_readWeighingData
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text30
  7061   002444                     __ptext30:
  7062                           	callstack 0
  7063   002444                     _flushOut:
  7064                           	callstack 28
  7065   002444                     
  7066                           ;main.c: 1311:     int i;;main.c: 1313:     for (i = 0; i < 16; i++) {
  7067   002444  0E00               	movlw	0
  7068   002446  6E39               	movwf	(flushOut@i+1)^0,c
  7069   002448  0E00               	movlw	0
  7070   00244A  6E38               	movwf	flushOut@i^0,c
  7071   00244C                     l3125:
  7072                           
  7073                           ;main.c: 1314:         Serial_Buffer_Out[i] = 0x00;
  7074   00244C  0E60               	movlw	low _Serial_Buffer_Out
  7075   00244E  2438               	addwf	flushOut@i^0,w,c
  7076   002450  6ED9               	movwf	fsr2l,c
  7077   002452  0E00               	movlw	high _Serial_Buffer_Out
  7078   002454  2039               	addwfc	(flushOut@i+1)^0,w,c
  7079   002456  6EDA               	movwf	fsr2h,c
  7080   002458  0E00               	movlw	0
  7081   00245A  6EDF               	movwf	indf2,c
  7082   00245C                     
  7083                           ;main.c: 1315:     }
  7084   00245C  4A38               	infsnz	flushOut@i^0,f,c
  7085   00245E  2A39               	incf	(flushOut@i+1)^0,f,c
  7086   002460  BE39               	btfsc	(flushOut@i+1)^0,7,c
  7087   002462  EF3C  F012         	goto	u1811
  7088   002466  5039               	movf	(flushOut@i+1)^0,w,c
  7089   002468  E109               	bnz	u1810
  7090   00246A  0E10               	movlw	16
  7091   00246C  5C38               	subwf	flushOut@i^0,w,c
  7092   00246E  A0D8               	btfss	status,0,c
  7093   002470  EF3C  F012         	goto	u1811
  7094   002474  EF3E  F012         	goto	u1810
  7095   002478                     u1811:
  7096   002478  EF26  F012         	goto	l3125
  7097   00247C                     u1810:
  7098   00247C  0012               	return		;funcret
  7099   00247E                     __end_of_flushOut:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function _Write1USART *****************
  7103 ;; Defined at:
  7104 ;;		line 47 in file "usart.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  data            1    wreg     unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  data            1    6[COMRAM] unsigned char 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;Total ram usage:        1 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 2
  7125 ;; This function calls:
  7126 ;;		Nothing
  7127 ;; This function is called by:
  7128 ;;		_main
  7129 ;;		_readWeighingData
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text31
  7134   002608                     __ptext31:
  7135                           	callstack 0
  7136   002608                     _Write1USART:
  7137                           	callstack 28
  7138                           
  7139                           ;incstack = 0
  7140                           ;Write1USART@data stored from wreg
  7141   002608  6E38               	movwf	Write1USART@data^0,c
  7142   00260A                     
  7143                           ;usart.c: 48:     TXREG1 = data;
  7144   00260A  C038  FFAE         	movff	Write1USART@data,4014	;volatile
  7145   00260E                     l650:
  7146   00260E  A2AD               	btfss	173,1,c	;volatile
  7147   002610  EF0C  F013         	goto	u1801
  7148   002614  EF0E  F013         	goto	u1800
  7149   002618                     u1801:
  7150   002618  EF07  F013         	goto	l650
  7151   00261C                     u1800:
  7152   00261C  0012               	return		;funcret
  7153   00261E                     __end_of_Write1USART:
  7154                           	callstack 0
  7155                           
  7156 ;; *************** function _WriteSTLED316SMode *****************
  7157 ;; Defined at:
  7158 ;;		line 184 in file "Display.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  msg             1    wreg     unsigned char 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  msg             1   14[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      void 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;Total ram usage:        3 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 3
  7179 ;; This function calls:
  7180 ;;		_STLED316s_SPI_SendData
  7181 ;; This function is called by:
  7182 ;;		_Homing_Again_Auto
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text32
  7187   001A06                     __ptext32:
  7188                           	callstack 0
  7189   001A06                     _WriteSTLED316SMode:
  7190                           	callstack 26
  7191                           
  7192                           ;incstack = 0
  7193                           ;WriteSTLED316SMode@msg stored from wreg
  7194   001A06  6E40               	movwf	WriteSTLED316SMode@msg^0,c
  7195   001A08                     
  7196                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  7197   001A08  988B               	bcf	139,4,c	;volatile
  7198   001A0A                     
  7199                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  7200   001A0A  0E00               	movlw	0
  7201   001A0C  ECA5  F010         	call	_STLED316s_SPI_SendData
  7202   001A10                     
  7203                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  7204   001A10  888B               	bsf	139,4,c	;volatile
  7205   001A12                     
  7206                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  7207   001A12  988B               	bcf	139,4,c	;volatile
  7208                           
  7209                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  7210   001A14  0E00               	movlw	0
  7211   001A16  ECA5  F010         	call	_STLED316s_SPI_SendData
  7212                           
  7213                           ;Display.c: 196:     switch (msg) {
  7214   001A1A  EF4F  F00D         	goto	l3497
  7215   001A1E                     l3479:
  7216                           
  7217                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  7218   001A1E  0E79               	movlw	121
  7219   001A20  ECA5  F010         	call	_STLED316s_SPI_SendData
  7220                           
  7221                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  7222   001A24  0E3F               	movlw	63
  7223   001A26  ECA5  F010         	call	_STLED316s_SPI_SendData
  7224                           
  7225                           ;Display.c: 200:             break;
  7226   001A2A  EF7C  F00D         	goto	l533
  7227   001A2E                     l3481:
  7228                           
  7229                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  7230   001A2E  0E3F               	movlw	63
  7231   001A30  ECA5  F010         	call	_STLED316s_SPI_SendData
  7232                           
  7233                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  7234   001A34  0E73               	movlw	115
  7235   001A36  ECA5  F010         	call	_STLED316s_SPI_SendData
  7236                           
  7237                           ;Display.c: 204:             break;
  7238   001A3A  EF7C  F00D         	goto	l533
  7239   001A3E                     l3483:
  7240                           
  7241                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  7242   001A3E  0E39               	movlw	57
  7243   001A40  ECA5  F010         	call	_STLED316s_SPI_SendData
  7244                           
  7245                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  7246   001A44  0E77               	movlw	119
  7247   001A46  ECA5  F010         	call	_STLED316s_SPI_SendData
  7248                           
  7249                           ;Display.c: 208:             break;
  7250   001A4A  EF7C  F00D         	goto	l533
  7251   001A4E                     l3485:
  7252                           
  7253                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  7254   001A4E  0E00               	movlw	0
  7255   001A50  ECA5  F010         	call	_STLED316s_SPI_SendData
  7256                           
  7257                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  7258   001A54  0E00               	movlw	0
  7259   001A56  ECA5  F010         	call	_STLED316s_SPI_SendData
  7260                           
  7261                           ;Display.c: 212:             break;
  7262   001A5A  EF7C  F00D         	goto	l533
  7263   001A5E                     l3487:
  7264                           
  7265                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  7266   001A5E  0E00               	movlw	0
  7267   001A60  ECA5  F010         	call	_STLED316s_SPI_SendData
  7268                           
  7269                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  7270   001A64  0E3F               	movlw	63
  7271   001A66  ECA5  F010         	call	_STLED316s_SPI_SendData
  7272                           
  7273                           ;Display.c: 216:             break;
  7274   001A6A  EF7C  F00D         	goto	l533
  7275   001A6E                     l3489:
  7276                           
  7277                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  7278   001A6E  0E79               	movlw	121
  7279   001A70  ECA5  F010         	call	_STLED316s_SPI_SendData
  7280                           
  7281                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  7282   001A74  0E06               	movlw	6
  7283   001A76  ECA5  F010         	call	_STLED316s_SPI_SendData
  7284                           
  7285                           ;Display.c: 220:             break;
  7286   001A7A  EF7C  F00D         	goto	l533
  7287   001A7E                     l3491:
  7288                           
  7289                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  7290   001A7E  0E77               	movlw	119
  7291   001A80  ECA5  F010         	call	_STLED316s_SPI_SendData
  7292                           
  7293                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  7294   001A84  0E3E               	movlw	62
  7295   001A86  ECA5  F010         	call	_STLED316s_SPI_SendData
  7296                           
  7297                           ;Display.c: 224:             break;
  7298   001A8A  EF7C  F00D         	goto	l533
  7299   001A8E                     l3493:
  7300                           
  7301                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  7302   001A8E  0E00               	movlw	0
  7303   001A90  ECA5  F010         	call	_STLED316s_SPI_SendData
  7304                           
  7305                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  7306   001A94  0E3E               	movlw	62
  7307   001A96  ECA5  F010         	call	_STLED316s_SPI_SendData
  7308                           
  7309                           ;Display.c: 228:             break;
  7310   001A9A  EF7C  F00D         	goto	l533
  7311   001A9E                     l3497:
  7312   001A9E  5040               	movf	WriteSTLED316SMode@msg^0,w,c
  7313   001AA0  6E3E               	movwf	??_WriteSTLED316SMode^0,c
  7314   001AA2  6A3F               	clrf	(??_WriteSTLED316SMode+1)^0,c
  7315                           
  7316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7317                           ; Switch size 1, requested type "simple"
  7318                           ; Number of cases is 1, Range of values is 0 to 0
  7319                           ; switch strategies available:
  7320                           ; Name         Instructions Cycles
  7321                           ; simple_byte            4     3 (average)
  7322                           ;	Chosen strategy is simple_byte
  7323   001AA4  503F               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  7324   001AA6  0A00               	xorlw	0	; case 0
  7325   001AA8  B4D8               	btfsc	status,2,c
  7326   001AAA  EF59  F00D         	goto	l6227
  7327   001AAE  EF7C  F00D         	goto	l533
  7328   001AB2                     l6227:
  7329                           
  7330                           ; Switch size 1, requested type "simple"
  7331                           ; Number of cases is 8, Range of values is 65 to 88
  7332                           ; switch strategies available:
  7333                           ; Name         Instructions Cycles
  7334                           ; simple_byte           25    13 (average)
  7335                           ;	Chosen strategy is simple_byte
  7336   001AB2  503E               	movf	??_WriteSTLED316SMode^0,w,c
  7337   001AB4  0A41               	xorlw	65	; case 65
  7338   001AB6  B4D8               	btfsc	status,2,c
  7339   001AB8  EF3F  F00D         	goto	l3491
  7340   001ABC  0A02               	xorlw	2	; case 67
  7341   001ABE  B4D8               	btfsc	status,2,c
  7342   001AC0  EF1F  F00D         	goto	l3483
  7343   001AC4  0A06               	xorlw	6	; case 69
  7344   001AC6  B4D8               	btfsc	status,2,c
  7345   001AC8  EF0F  F00D         	goto	l3479
  7346   001ACC  0A02               	xorlw	2	; case 71
  7347   001ACE  B4D8               	btfsc	status,2,c
  7348   001AD0  EF2F  F00D         	goto	l3487
  7349   001AD4  0A08               	xorlw	8	; case 79
  7350   001AD6  B4D8               	btfsc	status,2,c
  7351   001AD8  EF17  F00D         	goto	l3481
  7352   001ADC  0A1C               	xorlw	28	; case 83
  7353   001ADE  B4D8               	btfsc	status,2,c
  7354   001AE0  EF37  F00D         	goto	l3489
  7355   001AE4  0A05               	xorlw	5	; case 86
  7356   001AE6  B4D8               	btfsc	status,2,c
  7357   001AE8  EF47  F00D         	goto	l3493
  7358   001AEC  0A0E               	xorlw	14	; case 88
  7359   001AEE  B4D8               	btfsc	status,2,c
  7360   001AF0  EF27  F00D         	goto	l3485
  7361   001AF4  EF7C  F00D         	goto	l533
  7362   001AF8                     l533:
  7363                           
  7364                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  7365   001AF8  888B               	bsf	139,4,c	;volatile
  7366                           
  7367                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  7368   001AFA  988B               	bcf	139,4,c	;volatile
  7369   001AFC                     
  7370                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  7371   001AFC  0E0D               	movlw	13
  7372   001AFE  ECA5  F010         	call	_STLED316s_SPI_SendData
  7373   001B02                     
  7374                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  7375   001B02  888B               	bsf	139,4,c	;volatile
  7376   001B04  0012               	return		;funcret
  7377   001B06                     __end_of_WriteSTLED316SMode:
  7378                           	callstack 0
  7379                           
  7380 ;; *************** function _WriteSTLED316SErr *****************
  7381 ;; Defined at:
  7382 ;;		line 287 in file "Display.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  msg             1    wreg     unsigned char 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  msg             1   14[COMRAM] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      void 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;Total ram usage:        3 bytes
  7401 ;; Hardware stack levels used: 1
  7402 ;; Hardware stack levels required when called: 3
  7403 ;; This function calls:
  7404 ;;		_STLED316s_SPI_SendData
  7405 ;; This function is called by:
  7406 ;;		_MotorPosition_Init
  7407 ;;		_Homing_Again_Manual
  7408 ;;		_Homing_Again_Auto
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text33
  7413   001CEE                     __ptext33:
  7414                           	callstack 0
  7415   001CEE                     _WriteSTLED316SErr:
  7416                           	callstack 26
  7417                           
  7418                           ;incstack = 0
  7419                           ;WriteSTLED316SErr@msg stored from wreg
  7420   001CEE  6E40               	movwf	WriteSTLED316SErr@msg^0,c
  7421   001CF0                     
  7422                           ;Display.c: 288:     LATCbits.LATC4 = 0;
  7423   001CF0  988B               	bcf	139,4,c	;volatile
  7424   001CF2                     
  7425                           ;Display.c: 290:     STLED316s_SPI_SendData(0x00);
  7426   001CF2  0E00               	movlw	0
  7427   001CF4  ECA5  F010         	call	_STLED316s_SPI_SendData
  7428   001CF8                     
  7429                           ;Display.c: 293:     LATCbits.LATC4 = 1;
  7430   001CF8  888B               	bsf	139,4,c	;volatile
  7431   001CFA                     
  7432                           ;Display.c: 295:     LATCbits.LATC4 = 0;
  7433   001CFA  988B               	bcf	139,4,c	;volatile
  7434                           
  7435                           ;Display.c: 297:     STLED316s_SPI_SendData(0x00);
  7436   001CFC  0E00               	movlw	0
  7437   001CFE  ECA5  F010         	call	_STLED316s_SPI_SendData
  7438                           
  7439                           ;Display.c: 299:     switch (msg) {
  7440   001D02  EFBB  F00E         	goto	l3439
  7441   001D06                     l3423:
  7442                           
  7443                           ;Display.c: 301:             STLED316s_SPI_SendData(0x79);
  7444   001D06  0E79               	movlw	121
  7445   001D08  ECA5  F010         	call	_STLED316s_SPI_SendData
  7446                           
  7447                           ;Display.c: 302:             STLED316s_SPI_SendData(0x77);
  7448   001D0C  0E77               	movlw	119
  7449   001D0E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7450                           
  7451                           ;Display.c: 303:             break;
  7452   001D12  EFE4  F00E         	goto	l557
  7453   001D16                     l3425:
  7454                           
  7455                           ;Display.c: 305:             STLED316s_SPI_SendData(0x79);
  7456   001D16  0E79               	movlw	121
  7457   001D18  ECA5  F010         	call	_STLED316s_SPI_SendData
  7458                           
  7459                           ;Display.c: 306:             STLED316s_SPI_SendData(0x3F);
  7460   001D1C  0E3F               	movlw	63
  7461   001D1E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7462                           
  7463                           ;Display.c: 307:             break;
  7464   001D22  EFE4  F00E         	goto	l557
  7465   001D26                     l3427:
  7466                           
  7467                           ;Display.c: 309:             STLED316s_SPI_SendData(0x79);
  7468   001D26  0E79               	movlw	121
  7469   001D28  ECA5  F010         	call	_STLED316s_SPI_SendData
  7470                           
  7471                           ;Display.c: 310:             STLED316s_SPI_SendData(0x06);
  7472   001D2C  0E06               	movlw	6
  7473   001D2E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7474                           
  7475                           ;Display.c: 311:             break;
  7476   001D32  EFE4  F00E         	goto	l557
  7477   001D36                     l3429:
  7478                           
  7479                           ;Display.c: 313:             STLED316s_SPI_SendData(0x79);
  7480   001D36  0E79               	movlw	121
  7481   001D38  ECA5  F010         	call	_STLED316s_SPI_SendData
  7482                           
  7483                           ;Display.c: 314:             STLED316s_SPI_SendData(0x5B);
  7484   001D3C  0E5B               	movlw	91
  7485   001D3E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7486                           
  7487                           ;Display.c: 315:             break;
  7488   001D42  EFE4  F00E         	goto	l557
  7489   001D46                     l3431:
  7490                           
  7491                           ;Display.c: 317:             STLED316s_SPI_SendData(0x00);
  7492   001D46  0E00               	movlw	0
  7493   001D48  ECA5  F010         	call	_STLED316s_SPI_SendData
  7494                           
  7495                           ;Display.c: 318:             STLED316s_SPI_SendData(0x3F);
  7496   001D4C  0E3F               	movlw	63
  7497   001D4E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7498                           
  7499                           ;Display.c: 319:             break;
  7500   001D52  EFE4  F00E         	goto	l557
  7501   001D56                     l3433:
  7502                           
  7503                           ;Display.c: 321:             STLED316s_SPI_SendData(0x79);
  7504   001D56  0E79               	movlw	121
  7505   001D58  ECA5  F010         	call	_STLED316s_SPI_SendData
  7506                           
  7507                           ;Display.c: 322:             STLED316s_SPI_SendData(0x06);
  7508   001D5C  0E06               	movlw	6
  7509   001D5E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7510                           
  7511                           ;Display.c: 323:             break;
  7512   001D62  EFE4  F00E         	goto	l557
  7513   001D66                     l3435:
  7514                           
  7515                           ;Display.c: 325:             STLED316s_SPI_SendData(0x77);
  7516   001D66  0E77               	movlw	119
  7517   001D68  ECA5  F010         	call	_STLED316s_SPI_SendData
  7518                           
  7519                           ;Display.c: 326:             STLED316s_SPI_SendData(0x3E);
  7520   001D6C  0E3E               	movlw	62
  7521   001D6E  ECA5  F010         	call	_STLED316s_SPI_SendData
  7522                           
  7523                           ;Display.c: 327:             break;
  7524   001D72  EFE4  F00E         	goto	l557
  7525   001D76                     l3439:
  7526   001D76  5040               	movf	WriteSTLED316SErr@msg^0,w,c
  7527   001D78  6E3E               	movwf	??_WriteSTLED316SErr^0,c
  7528   001D7A  6A3F               	clrf	(??_WriteSTLED316SErr+1)^0,c
  7529                           
  7530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7531                           ; Switch size 1, requested type "simple"
  7532                           ; Number of cases is 1, Range of values is 0 to 0
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte            4     3 (average)
  7536                           ;	Chosen strategy is simple_byte
  7537   001D7C  503F               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  7538   001D7E  0A00               	xorlw	0	; case 0
  7539   001D80  B4D8               	btfsc	status,2,c
  7540   001D82  EFC5  F00E         	goto	l6229
  7541   001D86  EFE4  F00E         	goto	l557
  7542   001D8A                     l6229:
  7543                           
  7544                           ; Switch size 1, requested type "simple"
  7545                           ; Number of cases is 7, Range of values is 48 to 83
  7546                           ; switch strategies available:
  7547                           ; Name         Instructions Cycles
  7548                           ; simple_byte           22    12 (average)
  7549                           ;	Chosen strategy is simple_byte
  7550   001D8A  503E               	movf	??_WriteSTLED316SErr^0,w,c
  7551   001D8C  0A30               	xorlw	48	; case 48
  7552   001D8E  B4D8               	btfsc	status,2,c
  7553   001D90  EF8B  F00E         	goto	l3425
  7554   001D94  0A01               	xorlw	1	; case 49
  7555   001D96  B4D8               	btfsc	status,2,c
  7556   001D98  EF93  F00E         	goto	l3427
  7557   001D9C  0A03               	xorlw	3	; case 50
  7558   001D9E  B4D8               	btfsc	status,2,c
  7559   001DA0  EF9B  F00E         	goto	l3429
  7560   001DA4  0A73               	xorlw	115	; case 65
  7561   001DA6  B4D8               	btfsc	status,2,c
  7562   001DA8  EFB3  F00E         	goto	l3435
  7563   001DAC  0A04               	xorlw	4	; case 69
  7564   001DAE  B4D8               	btfsc	status,2,c
  7565   001DB0  EF83  F00E         	goto	l3423
  7566   001DB4  0A02               	xorlw	2	; case 71
  7567   001DB6  B4D8               	btfsc	status,2,c
  7568   001DB8  EFA3  F00E         	goto	l3431
  7569   001DBC  0A14               	xorlw	20	; case 83
  7570   001DBE  B4D8               	btfsc	status,2,c
  7571   001DC0  EFAB  F00E         	goto	l3433
  7572   001DC4  EFE4  F00E         	goto	l557
  7573   001DC8                     l557:
  7574                           
  7575                           ;Display.c: 332:     LATCbits.LATC4 = 1;
  7576   001DC8  888B               	bsf	139,4,c	;volatile
  7577                           
  7578                           ;Display.c: 334:     LATCbits.LATC4 = 0;
  7579   001DCA  988B               	bcf	139,4,c	;volatile
  7580   001DCC                     
  7581                           ;Display.c: 336:     STLED316s_SPI_SendData(0x0D);
  7582   001DCC  0E0D               	movlw	13
  7583   001DCE  ECA5  F010         	call	_STLED316s_SPI_SendData
  7584   001DD2                     
  7585                           ;Display.c: 338:     LATCbits.LATC4 = 1;
  7586   001DD2  888B               	bsf	139,4,c	;volatile
  7587   001DD4  0012               	return		;funcret
  7588   001DD6                     __end_of_WriteSTLED316SErr:
  7589                           	callstack 0
  7590                           
  7591 ;; *************** function _STLED316s_SPI_SendData *****************
  7592 ;; Defined at:
  7593 ;;		line 88 in file "Display.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  Data            1    wreg     unsigned char 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;  Data            1    8[COMRAM] unsigned char 
  7598 ;;  t               1   11[COMRAM] unsigned char 
  7599 ;;  i               1   10[COMRAM] unsigned char 
  7600 ;;  temp            1    9[COMRAM] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7613 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7614 ;;Total ram usage:        6 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; Hardware stack levels required when called: 2
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_InitSTLED316
  7621 ;;		_WriteSTLED316SData
  7622 ;;		_WriteSTLED316SMode
  7623 ;;		_WriteSTLED316SVibMode
  7624 ;;		_WriteSTLED316SErr
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text34
  7629   00214A                     __ptext34:
  7630                           	callstack 0
  7631   00214A                     _STLED316s_SPI_SendData:
  7632                           	callstack 27
  7633                           
  7634                           ;incstack = 0
  7635                           ;STLED316s_SPI_SendData@Data stored from wreg
  7636   00214A  6E3A               	movwf	STLED316s_SPI_SendData@Data^0,c
  7637   00214C                     
  7638                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  7639   00214C  0E00               	movlw	0
  7640   00214E  6E3C               	movwf	STLED316s_SPI_SendData@i^0,c
  7641   002150                     l498:
  7642                           
  7643                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  7644   002150  968B               	bcf	139,3,c	;volatile
  7645   002152                     
  7646                           ;Display.c: 93:         temp = Data & (0x1 << i);
  7647   002152  C03C  F038         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  7648   002156  0E01               	movlw	1
  7649   002158  6E39               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  7650   00215A  2A38               	incf	??_STLED316s_SPI_SendData^0,f,c
  7651   00215C  EFB2  F010         	goto	u1834
  7652   002160                     u1835:
  7653   002160  90D8               	bcf	status,0,c
  7654   002162  3639               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  7655   002164                     u1834:
  7656   002164  2E38               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  7657   002166  EFB0  F010         	goto	u1835
  7658   00216A  5039               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  7659   00216C  143A               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  7660   00216E  6E3B               	movwf	STLED316s_SPI_SendData@temp^0,c
  7661   002170                     
  7662                           ;Display.c: 94:         if (temp)
  7663   002170  503B               	movf	STLED316s_SPI_SendData@temp^0,w,c
  7664   002172  B4D8               	btfsc	status,2,c
  7665   002174  EFBE  F010         	goto	u1841
  7666   002178  EFC0  F010         	goto	u1840
  7667   00217C                     u1841:
  7668   00217C  EFC3  F010         	goto	l500
  7669   002180                     u1840:
  7670   002180                     
  7671                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  7672   002180  8A8B               	bsf	139,5,c	;volatile
  7673   002182  EFC4  F010         	goto	l3149
  7674   002186                     l500:
  7675                           
  7676                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  7677   002186  9A8B               	bcf	139,5,c	;volatile
  7678   002188                     l3149:
  7679                           
  7680                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  7681   002188  0E00               	movlw	0
  7682   00218A  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  7683   00218C                     l3155:
  7684   00218C  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  7685   00218E  0E04               	movlw	4
  7686   002190  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7687   002192  EFCD  F010         	goto	u1851
  7688   002196  EFCF  F010         	goto	u1850
  7689   00219A                     u1851:
  7690   00219A  EFC6  F010         	goto	l3155
  7691   00219E                     u1850:
  7692   00219E                     
  7693                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  7694   00219E  868B               	bsf	139,3,c	;volatile
  7695   0021A0                     
  7696                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  7697   0021A0  0E00               	movlw	0
  7698   0021A2  6E3D               	movwf	STLED316s_SPI_SendData@t^0,c
  7699   0021A4                     l3165:
  7700   0021A4  2A3D               	incf	STLED316s_SPI_SendData@t^0,f,c
  7701   0021A6  0E04               	movlw	4
  7702   0021A8  643D               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7703   0021AA  EFD9  F010         	goto	u1861
  7704   0021AE  EFDB  F010         	goto	u1860
  7705   0021B2                     u1861:
  7706   0021B2  EFD2  F010         	goto	l3165
  7707   0021B6                     u1860:
  7708   0021B6                     
  7709                           ;Display.c: 101:     }
  7710   0021B6  2A3C               	incf	STLED316s_SPI_SendData@i^0,f,c
  7711   0021B8  0E07               	movlw	7
  7712   0021BA  643C               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  7713   0021BC  EFE2  F010         	goto	u1871
  7714   0021C0  EFE4  F010         	goto	u1870
  7715   0021C4                     u1871:
  7716   0021C4  EFA8  F010         	goto	l498
  7717   0021C8                     u1870:
  7718   0021C8  0012               	return		;funcret
  7719   0021CA                     __end_of_STLED316s_SPI_SendData:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function _Read_IR *****************
  7723 ;; Defined at:
  7724 ;;		line 988 in file "main.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  2    6[COMRAM] unsigned int 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;Total ram usage:        2 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 2
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_MotorPosition_Init
  7749 ;;		_Homing_Again_Manual
  7750 ;;		_Homing_Again_Auto
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text35
  7755   0025B6                     __ptext35:
  7756                           	callstack 0
  7757   0025B6                     _Read_IR:
  7758                           	callstack 27
  7759   0025B6                     
  7760                           ;main.c: 990:     if (PORTAbits.RA1 == 1)
  7761   0025B6  A280               	btfss	128,1,c	;volatile
  7762   0025B8  EFE0  F012         	goto	u2091
  7763   0025BC  EFE2  F012         	goto	u2090
  7764   0025C0                     u2091:
  7765   0025C0  EFE8  F012         	goto	l3407
  7766   0025C4                     u2090:
  7767   0025C4                     
  7768                           ;main.c: 991:     {;main.c: 992:         return 0;
  7769   0025C4  0E00               	movlw	0
  7770   0025C6  6E39               	movwf	(?_Read_IR+1)^0,c
  7771   0025C8  0E00               	movlw	0
  7772   0025CA  6E38               	movwf	?_Read_IR^0,c
  7773   0025CC  EFEC  F012         	goto	l365
  7774   0025D0                     l3407:
  7775                           
  7776                           ;main.c: 994:     {;main.c: 995:         return 1;
  7777   0025D0  0E00               	movlw	0
  7778   0025D2  6E39               	movwf	(?_Read_IR+1)^0,c
  7779   0025D4  0E01               	movlw	1
  7780   0025D6  6E38               	movwf	?_Read_IR^0,c
  7781   0025D8                     l365:
  7782   0025D8  0012               	return		;funcret
  7783   0025DA                     __end_of_Read_IR:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function _MotorON *****************
  7787 ;; Defined at:
  7788 ;;		line 40 in file "MotorDriver.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;Total ram usage:        0 bytes
  7807 ;; Hardware stack levels used: 1
  7808 ;; Hardware stack levels required when called: 3
  7809 ;; This function calls:
  7810 ;;		_Set_RG3
  7811 ;; This function is called by:
  7812 ;;		_MotorPosition_Init
  7813 ;;		_Homing_Again_Manual
  7814 ;;		_Homing_Again_Auto
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text36
  7819   00266E                     __ptext36:
  7820                           	callstack 0
  7821   00266E                     _MotorON:
  7822                           	callstack 26
  7823   00266E                     
  7824                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
  7825   00266E  868F               	bsf	143,3,c	;volatile
  7826                           
  7827                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
  7828   002670  888F               	bsf	143,4,c	;volatile
  7829   002672                     
  7830                           ;MotorDriver.c: 44:     Set_RG3();
  7831   002672  EC4D  F013         	call	_Set_RG3	;wreg free
  7832   002676  0012               	return		;funcret
  7833   002678                     __end_of_MotorON:
  7834                           	callstack 0
  7835                           
  7836 ;; *************** function _Set_RG3 *****************
  7837 ;; Defined at:
  7838 ;;		line 28 in file "MotorDriver.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used: 1
  7858 ;; Hardware stack levels required when called: 2
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_MotorON
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text37
  7867   00269A                     __ptext37:
  7868                           	callstack 0
  7869   00269A                     _Set_RG3:
  7870                           	callstack 26
  7871   00269A                     
  7872                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
  7873   00269A  0E08               	movlw	8
  7874   00269C  6E73               	movwf	115,c	;volatile
  7875   00269E                     
  7876                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
  7877   00269E  8476               	bsf	118,2,c	;volatile
  7878   0026A0  0012               	return		;funcret
  7879   0026A2                     __end_of_Set_RG3:
  7880                           	callstack 0
  7881                           
  7882 ;; *************** function _MotorBREAK *****************
  7883 ;; Defined at:
  7884 ;;		line 47 in file "MotorDriver.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;		None
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;		None
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;Total ram usage:        0 bytes
  7903 ;; Hardware stack levels used: 1
  7904 ;; Hardware stack levels required when called: 3
  7905 ;; This function calls:
  7906 ;;		_Clr_RG3
  7907 ;; This function is called by:
  7908 ;;		_MotorPosition_Init
  7909 ;;		_Homing_Again_Manual
  7910 ;;		_Homing_Again_Auto
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text38
  7915   002678                     __ptext38:
  7916                           	callstack 0
  7917   002678                     _MotorBREAK:
  7918                           	callstack 26
  7919   002678                     
  7920                           ;MotorDriver.c: 49:     Clr_RG3();
  7921   002678  EC51  F013         	call	_Clr_RG3	;wreg free
  7922   00267C                     
  7923                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
  7924   00267C  868F               	bsf	143,3,c	;volatile
  7925   00267E                     
  7926                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
  7927   00267E  888F               	bsf	143,4,c	;volatile
  7928   002680  0012               	return		;funcret
  7929   002682                     __end_of_MotorBREAK:
  7930                           	callstack 0
  7931                           
  7932 ;; *************** function _Clr_RG3 *****************
  7933 ;; Defined at:
  7934 ;;		line 35 in file "MotorDriver.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;Total ram usage:        0 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; Hardware stack levels required when called: 2
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_MotorBREAK
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text39
  7963   0026A2                     __ptext39:
  7964                           	callstack 0
  7965   0026A2                     _Clr_RG3:
  7966                           	callstack 26
  7967   0026A2                     
  7968                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
  7969   0026A2  0E00               	movlw	0
  7970   0026A4  6E73               	movwf	115,c	;volatile
  7971   0026A6                     
  7972                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
  7973   0026A6  9476               	bcf	118,2,c	;volatile
  7974   0026A8  0012               	return		;funcret
  7975   0026AA                     __end_of_Clr_RG3:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _AD_capture_BattVoltage *****************
  7979 ;; Defined at:
  7980 ;;		line 1353 in file "main.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0, cstack
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;Total ram usage:        2 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; Hardware stack levels required when called: 3
  8001 ;; This function calls:
  8002 ;;		_delay_1ms
  8003 ;; This function is called by:
  8004 ;;		_main
  8005 ;;		_Homing_Again_Manual
  8006 ;;		_Homing_Again_Auto
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text40
  8011   0023CC                     __ptext40:
  8012                           	callstack 0
  8013   0023CC                     _AD_capture_BattVoltage:
  8014                           	callstack 26
  8015   0023CC                     
  8016                           ;main.c: 1355:     ADCON0bits.CHS0 = 0;
  8017   0023CC  94C2               	bcf	194,2,c	;volatile
  8018                           
  8019                           ;main.c: 1356:     ADCON0bits.CHS1 = 0;
  8020   0023CE  96C2               	bcf	194,3,c	;volatile
  8021                           
  8022                           ;main.c: 1357:     ADCON0bits.CHS2 = 0;
  8023   0023D0  98C2               	bcf	194,4,c	;volatile
  8024                           
  8025                           ;main.c: 1358:     ADCON0bits.CHS3 = 0;
  8026   0023D2  9AC2               	bcf	194,5,c	;volatile
  8027                           
  8028                           ;main.c: 1360:     ADCON0bits.ADON = 1;
  8029   0023D4  80C2               	bsf	194,0,c	;volatile
  8030   0023D6                     
  8031                           ;main.c: 1361:     delay_1ms(5);
  8032   0023D6  0E00               	movlw	0
  8033   0023D8  6E39               	movwf	(delay_1ms@time+1)^0,c
  8034   0023DA  0E05               	movlw	5
  8035   0023DC  6E38               	movwf	delay_1ms@time^0,c
  8036   0023DE  EC8C  F012         	call	_delay_1ms	;wreg free
  8037   0023E2                     
  8038                           ;main.c: 1362:     ADCON0bits.GO = 1;
  8039   0023E2  82C2               	bsf	194,1,c	;volatile
  8040   0023E4                     l461:
  8041                           
  8042                           ;main.c: 1364:     while (ADCON0bits.GO == 1) {
  8043   0023E4  B2C2               	btfsc	194,1,c	;volatile
  8044   0023E6  EFF7  F011         	goto	u2081
  8045   0023EA  EFF9  F011         	goto	u2080
  8046   0023EE                     u2081:
  8047   0023EE  EFF2  F011         	goto	l461
  8048   0023F2                     u2080:
  8049   0023F2                     
  8050                           ;main.c: 1368:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  8051   0023F2  50C3               	movf	195,w,c	;volatile
  8052   0023F4  CFC4 F03B          	movff	4036,??_AD_capture_BattVoltage	;volatile
  8053   0023F8  6A3C               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  8054   0023FA  C03B  F03C         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  8055   0023FE  6A3B               	clrf	??_AD_capture_BattVoltage^0,c
  8056   002400  103B               	iorwf	??_AD_capture_BattVoltage^0,w,c
  8057   002402  6E0D               	movwf	_VOLTAGE^0,c
  8058   002404  503C               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  8059   002406  6E0E               	movwf	(_VOLTAGE+1)^0,c
  8060   002408  0012               	return		;funcret
  8061   00240A                     __end_of_AD_capture_BattVoltage:
  8062                           	callstack 0
  8063                           
  8064 ;; *************** function _delay_1ms *****************
  8065 ;; Defined at:
  8066 ;;		line 978 in file "main.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  time            2    6[COMRAM] unsigned int 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;Total ram usage:        3 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 2
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_MotorPosition_Init
  8091 ;;		_Homing_Again_Manual
  8092 ;;		_Homing_Again_Auto
  8093 ;;		_AD_capture_BattVoltage
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text41
  8098   002518                     __ptext41:
  8099                           	callstack 0
  8100   002518                     _delay_1ms:
  8101                           	callstack 27
  8102   002518                     
  8103                           ;main.c: 979:     while (time > 0) {
  8104   002518  EF98  F012         	goto	l358
  8105   00251C                     l3133:
  8106                           
  8107                           ;main.c: 980:         _delay((unsigned long)((1)*(8000000/4000.0)));
  8108   00251C  0E03               	movlw	3
  8109   00251E  6E3A               	movwf	??_delay_1ms^0,c
  8110   002520  0E98               	movlw	152
  8111   002522                     u4467:
  8112   002522  2EE8               	decfsz	wreg,f,c
  8113   002524  D7FE               	bra	u4467
  8114   002526  2E3A               	decfsz	??_delay_1ms^0,f,c
  8115   002528  D7FC               	bra	u4467
  8116   00252A                     
  8117                           ;main.c: 981:         time--;
  8118   00252A  0638               	decf	delay_1ms@time^0,f,c
  8119   00252C  A0D8               	btfss	status,0,c
  8120   00252E  0639               	decf	(delay_1ms@time+1)^0,f,c
  8121   002530                     l358:
  8122                           
  8123                           ;main.c: 979:     while (time > 0) {
  8124   002530  5038               	movf	delay_1ms@time^0,w,c
  8125   002532  1039               	iorwf	(delay_1ms@time+1)^0,w,c
  8126   002534  A4D8               	btfss	status,2,c
  8127   002536  EF9F  F012         	goto	u1821
  8128   00253A  EFA1  F012         	goto	u1820
  8129   00253E                     u1821:
  8130   00253E  EF8E  F012         	goto	l3133
  8131   002542                     u1820:
  8132   002542  0012               	return		;funcret
  8133   002544                     __end_of_delay_1ms:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function _high_isr *****************
  8137 ;; Defined at:
  8138 ;;		line 863 in file "main.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  i               1    5[COMRAM] unsigned char 
  8143 ;;  c               1    4[COMRAM] unsigned char 
  8144 ;;  Temp            1    3[COMRAM] unsigned char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;Total ram usage:        5 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; Hardware stack levels required when called: 1
  8161 ;; This function calls:
  8162 ;;		_Low_Power_Indicator
  8163 ;;		_Read1USART
  8164 ;;		i2_Write1USART
  8165 ;; This function is called by:
  8166 ;;		Interrupt level 2
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	intcode
  8171   000008                     __pintcode:
  8172                           	callstack 0
  8173   000008                     _high_isr:
  8174                           	callstack 25
  8175                           
  8176                           ;incstack = 0
  8177   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8178   00000A  CFD9 F033          	movff	fsr2l,??_high_isr
  8179   00000E  CFDA F034          	movff	fsr2h,??_high_isr+1
  8180   000012                     
  8181                           ;main.c: 864:     unsigned char c, i;;main.c: 865:     unsigned char Temp;;main.c: 867: 
      +                              if ((PIR1bits.RC1IF))
  8182   000012  AA9E               	btfss	158,5,c	;volatile
  8183   000014  EF0E  F000         	goto	i2u329_41
  8184   000018  EF10  F000         	goto	i2u329_40
  8185   00001C                     i2u329_41:
  8186   00001C  EFE3  F000         	goto	i2l321
  8187   000020                     i2u329_40:
  8188   000020                     
  8189                           ;main.c: 868:     {;main.c: 870:         c = Read1USART();
  8190   000020  ECC8  F012         	call	_Read1USART	;wreg free
  8191   000024  6E36               	movwf	high_isr@c^0,c
  8192   000026                     
  8193                           ;main.c: 872:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  8194   000026  0EA5               	movlw	165
  8195   000028  1836               	xorwf	high_isr@c^0,w,c
  8196   00002A  A4D8               	btfss	status,2,c
  8197   00002C  EF1A  F000         	goto	i2u330_41
  8198   000030  EF1C  F000         	goto	i2u330_40
  8199   000034                     i2u330_41:
  8200   000034  EF3E  F000         	goto	i2l4693
  8201   000038                     i2u330_40:
  8202   000038  5031               	movf	_Serial_Flag^0,w,c
  8203   00003A  B4D8               	btfsc	status,2,c
  8204   00003C  EF22  F000         	goto	i2u331_41
  8205   000040  EF24  F000         	goto	i2u331_40
  8206   000044                     i2u331_41:
  8207   000044  EF2C  F000         	goto	i2l4687
  8208   000048                     i2u331_40:
  8209   000048  042D               	decf	_Busy^0,w,c
  8210   00004A  A4D8               	btfss	status,2,c
  8211   00004C  EF2A  F000         	goto	i2u332_41
  8212   000050  EF2C  F000         	goto	i2u332_40
  8213   000054                     i2u332_41:
  8214   000054  EF3E  F000         	goto	i2l4693
  8215   000058                     i2u332_40:
  8216   000058                     i2l4687:
  8217                           
  8218                           ;main.c: 873:             Serial_GData = 1;
  8219   000058  0E01               	movlw	1
  8220   00005A  6E30               	movwf	_Serial_GData^0,c
  8221                           
  8222                           ;main.c: 874:             Serial_Count = 0;
  8223   00005C  0E00               	movlw	0
  8224   00005E  6E24               	movwf	(_Serial_Count+1)^0,c
  8225   000060  0E00               	movlw	0
  8226   000062  6E23               	movwf	_Serial_Count^0,c
  8227   000064                     
  8228                           ;main.c: 875:             Serial_Buffer[Serial_Count] = c;
  8229   000064  0E80               	movlw	low _Serial_Buffer
  8230   000066  2423               	addwf	_Serial_Count^0,w,c
  8231   000068  6ED9               	movwf	fsr2l,c
  8232   00006A  0E00               	movlw	high _Serial_Buffer
  8233   00006C  2024               	addwfc	(_Serial_Count+1)^0,w,c
  8234   00006E  6EDA               	movwf	fsr2h,c
  8235   000070  C036  FFDF         	movff	high_isr@c,indf2
  8236   000074                     i2l4691:
  8237                           
  8238                           ;main.c: 876:             Serial_Count++;
  8239   000074  4A23               	infsnz	_Serial_Count^0,f,c
  8240   000076  2A24               	incf	(_Serial_Count+1)^0,f,c
  8241                           
  8242                           ;main.c: 877:         } else if (Serial_GData == 1) {
  8243   000078  EFED  F000         	goto	i2l4759
  8244   00007C                     i2l4693:
  8245   00007C  0430               	decf	_Serial_GData^0,w,c
  8246   00007E  A4D8               	btfss	status,2,c
  8247   000080  EF44  F000         	goto	i2u333_41
  8248   000084  EF46  F000         	goto	i2u333_40
  8249   000088                     i2u333_41:
  8250   000088  EFED  F000         	goto	i2l4759
  8251   00008C                     i2u333_40:
  8252   00008C                     
  8253                           ;main.c: 878:             Serial_Buffer[Serial_Count] = c;
  8254   00008C  0E80               	movlw	low _Serial_Buffer
  8255   00008E  2423               	addwf	_Serial_Count^0,w,c
  8256   000090  6ED9               	movwf	fsr2l,c
  8257   000092  0E00               	movlw	high _Serial_Buffer
  8258   000094  2024               	addwfc	(_Serial_Count+1)^0,w,c
  8259   000096  6EDA               	movwf	fsr2h,c
  8260   000098  C036  FFDF         	movff	high_isr@c,indf2
  8261   00009C                     
  8262                           ;main.c: 880:             if (Serial_Count < 5) {
  8263   00009C  5024               	movf	(_Serial_Count+1)^0,w,c
  8264   00009E  E107               	bnz	i2u334_41
  8265   0000A0  0E05               	movlw	5
  8266   0000A2  5C23               	subwf	_Serial_Count^0,w,c
  8267   0000A4  B0D8               	btfsc	status,0,c
  8268   0000A6  EF57  F000         	goto	i2u334_41
  8269   0000AA  EF59  F000         	goto	i2u334_40
  8270   0000AE                     i2u334_41:
  8271   0000AE  EFDF  F000         	goto	i2l4753
  8272   0000B2                     i2u334_40:
  8273   0000B2                     
  8274                           ;main.c: 881:                 if (c == 0x5A) {
  8275   0000B2  0E5A               	movlw	90
  8276   0000B4  1836               	xorwf	high_isr@c^0,w,c
  8277   0000B6  A4D8               	btfss	status,2,c
  8278   0000B8  EF60  F000         	goto	i2u335_41
  8279   0000BC  EF62  F000         	goto	i2u335_40
  8280   0000C0                     i2u335_41:
  8281   0000C0  EF3A  F000         	goto	i2l4691
  8282   0000C4                     i2u335_40:
  8283   0000C4                     
  8284                           ;main.c: 882:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  8285   0000C4  0100               	movlb	0	; () banked
  8286   0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  8287   0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  8288   0000CA  6E35               	movwf	high_isr@Temp^0,c
  8289                           
  8290                           ;main.c: 884:                     if (Temp == Serial_Buffer[3]) {
  8291   0000CC  5035               	movf	high_isr@Temp^0,w,c
  8292   0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  8293   0000D0  A4D8               	btfss	status,2,c
  8294   0000D2  EF6D  F000         	goto	i2u336_41
  8295   0000D6  EF6F  F000         	goto	i2u336_40
  8296   0000DA                     i2u336_41:
  8297   0000DA  EFB2  F000         	goto	i2l4733
  8298   0000DE                     i2u336_40:
  8299   0000DE                     
  8300                           ; BSR set to: 0
  8301                           ;main.c: 885:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  8302   0000DE  502D               	movf	_Busy^0,w,c
  8303   0000E0  B4D8               	btfsc	status,2,c
  8304   0000E2  EF75  F000         	goto	i2u337_41
  8305   0000E6  EF77  F000         	goto	i2u337_40
  8306   0000EA                     i2u337_41:
  8307   0000EA  EF80  F000         	goto	i2l332
  8308   0000EE                     i2u337_40:
  8309   0000EE                     
  8310                           ; BSR set to: 0
  8311   0000EE  0EF5               	movlw	245
  8312   0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8313   0000F2  A4D8               	btfss	status,2,c
  8314   0000F4  EF7E  F000         	goto	i2u338_41
  8315   0000F8  EF80  F000         	goto	i2u338_40
  8316   0000FC                     i2u338_41:
  8317   0000FC  EF98  F000         	goto	i2l330
  8318   000100                     i2u338_40:
  8319   000100                     i2l332:
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;main.c: 886:                             INTCONbits.GIE = 0;
  8323   000100  9EF2               	bcf	242,7,c	;volatile
  8324   000102                     
  8325                           ; BSR set to: 0
  8326                           ;main.c: 887:                             for (i = 0; i < 5; i++) {
  8327   000102  0E00               	movlw	0
  8328   000104  6E37               	movwf	high_isr@i^0,c
  8329   000106                     i2l4713:
  8330                           
  8331                           ;main.c: 888:                                 Write1USART(Serial_Buffer[i]);
  8332   000106  0E80               	movlw	low _Serial_Buffer
  8333   000108  2437               	addwf	high_isr@i^0,w,c
  8334   00010A  6ED9               	movwf	fsr2l,c
  8335   00010C  6ADA               	clrf	fsr2h,c
  8336   00010E  0E00               	movlw	high _Serial_Buffer
  8337   000110  22DA               	addwfc	fsr2h,f,c
  8338   000112  50DF               	movf	indf2,w,c
  8339   000114  EC0F  F013         	call	i2_Write1USART
  8340   000118                     
  8341                           ;main.c: 889:                             }
  8342   000118  2A37               	incf	high_isr@i^0,f,c
  8343   00011A  0E04               	movlw	4
  8344   00011C  6437               	cpfsgt	high_isr@i^0,c
  8345   00011E  EF93  F000         	goto	i2u339_41
  8346   000122  EF95  F000         	goto	i2u339_40
  8347   000126                     i2u339_41:
  8348   000126  EF83  F000         	goto	i2l4713
  8349   00012A                     i2u339_40:
  8350   00012A                     
  8351                           ;main.c: 890:                             INTCONbits.GIE = 1;
  8352   00012A  8EF2               	bsf	242,7,c	;volatile
  8353                           
  8354                           ;main.c: 891:                         } else {
  8355   00012C  EFA8  F000         	goto	i2l4731
  8356   000130                     i2l330:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;main.c: 892:                             INTCONbits.GIE = 0;
  8360   000130  9EF2               	bcf	242,7,c	;volatile
  8361   000132                     
  8362                           ; BSR set to: 0
  8363                           ;main.c: 893:                             for (i = 0; i < 5; i++) {
  8364   000132  0E00               	movlw	0
  8365   000134  6E37               	movwf	high_isr@i^0,c
  8366   000136                     i2l4725:
  8367                           
  8368                           ;main.c: 894:                                 Write1USART(0x16);
  8369   000136  0E16               	movlw	22
  8370   000138  EC0F  F013         	call	i2_Write1USART
  8371   00013C                     
  8372                           ;main.c: 895:                             }
  8373   00013C  2A37               	incf	high_isr@i^0,f,c
  8374   00013E  0E04               	movlw	4
  8375   000140  6437               	cpfsgt	high_isr@i^0,c
  8376   000142  EFA5  F000         	goto	i2u340_41
  8377   000146  EFA7  F000         	goto	i2u340_40
  8378   00014A                     i2u340_41:
  8379   00014A  EF9B  F000         	goto	i2l4725
  8380   00014E                     i2u340_40:
  8381   00014E                     
  8382                           ;main.c: 896:                             INTCONbits.GIE = 1;
  8383   00014E  8EF2               	bsf	242,7,c	;volatile
  8384   000150                     i2l4731:
  8385                           
  8386                           ;main.c: 899:                         Serial_Flag = 1;
  8387   000150  0E01               	movlw	1
  8388   000152  6E31               	movwf	_Serial_Flag^0,c
  8389                           
  8390                           ;main.c: 900:                         Serial_Count = 0;
  8391   000154  0E00               	movlw	0
  8392   000156  6E24               	movwf	(_Serial_Count+1)^0,c
  8393   000158  0E00               	movlw	0
  8394   00015A  6E23               	movwf	_Serial_Count^0,c
  8395                           
  8396                           ;main.c: 901:                         OpMode = AUTO_MODE;
  8397   00015C  0E02               	movlw	2
  8398   00015E  6E2A               	movwf	_OpMode^0,c	;volatile
  8399                           
  8400                           ;main.c: 903:                     } else {
  8401   000160  EFC8  F000         	goto	i2l4747
  8402   000164                     i2l4733:
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;main.c: 904:                         Serial_Flag = 0;
  8406   000164  0E00               	movlw	0
  8407   000166  6E31               	movwf	_Serial_Flag^0,c
  8408                           
  8409                           ;main.c: 905:                         Serial_Count = 0;
  8410   000168  0E00               	movlw	0
  8411   00016A  6E24               	movwf	(_Serial_Count+1)^0,c
  8412   00016C  0E00               	movlw	0
  8413   00016E  6E23               	movwf	_Serial_Count^0,c
  8414   000170                     
  8415                           ; BSR set to: 0
  8416                           ;main.c: 907:                         INTCONbits.GIE = 0;
  8417   000170  9EF2               	bcf	242,7,c	;volatile
  8418                           
  8419                           ;main.c: 908:                         for (i = 0; i < 5; i++) {
  8420   000172  0E00               	movlw	0
  8421   000174  6E37               	movwf	high_isr@i^0,c
  8422   000176                     i2l4741:
  8423                           
  8424                           ;main.c: 909:                             Write1USART(0x15);
  8425   000176  0E15               	movlw	21
  8426   000178  EC0F  F013         	call	i2_Write1USART
  8427   00017C                     
  8428                           ;main.c: 910:                         }
  8429   00017C  2A37               	incf	high_isr@i^0,f,c
  8430   00017E  0E04               	movlw	4
  8431   000180  6437               	cpfsgt	high_isr@i^0,c
  8432   000182  EFC5  F000         	goto	i2u341_41
  8433   000186  EFC7  F000         	goto	i2u341_40
  8434   00018A                     i2u341_41:
  8435   00018A  EFBB  F000         	goto	i2l4741
  8436   00018E                     i2u341_40:
  8437   00018E                     
  8438                           ;main.c: 911:                         INTCONbits.GIE = 1;
  8439   00018E  8EF2               	bsf	242,7,c	;volatile
  8440   000190                     i2l4747:
  8441                           
  8442                           ;main.c: 914:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  8443   000190  0EF5               	movlw	245
  8444   000192  0100               	movlb	0	; () banked
  8445   000194  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8446   000196  A4D8               	btfss	status,2,c
  8447   000198  EFD0  F000         	goto	i2u342_41
  8448   00019C  EFD2  F000         	goto	i2u342_40
  8449   0001A0                     i2u342_41:
  8450   0001A0  EF3A  F000         	goto	i2l4691
  8451   0001A4                     i2u342_40:
  8452   0001A4                     
  8453                           ; BSR set to: 0
  8454   0001A4  0E02               	movlw	2
  8455   0001A6  182A               	xorwf	_OpMode^0,w,c	;volatile
  8456   0001A8  A4D8               	btfss	status,2,c
  8457   0001AA  EFD9  F000         	goto	i2u343_41
  8458   0001AE  EFDB  F000         	goto	i2u343_40
  8459   0001B2                     i2u343_41:
  8460   0001B2  EF3A  F000         	goto	i2l4691
  8461   0001B6                     i2u343_40:
  8462   0001B6                     
  8463                           ; BSR set to: 0
  8464                           ;main.c: 915:                         Stop = 1;
  8465   0001B6  0E01               	movlw	1
  8466   0001B8  6E2F               	movwf	_Stop^0,c
  8467   0001BA  EF3A  F000         	goto	i2l4691
  8468   0001BE                     i2l4753:
  8469                           
  8470                           ;main.c: 919:                 Serial_GData = 0;
  8471   0001BE  0E00               	movlw	0
  8472   0001C0  6E30               	movwf	_Serial_GData^0,c
  8473   0001C2  EF3A  F000         	goto	i2l4691
  8474   0001C6                     i2l321:
  8475                           
  8476                           ;main.c: 925:         if (RCSTA1bits.OERR == 1) {
  8477   0001C6  A2AC               	btfss	172,1,c	;volatile
  8478   0001C8  EFE8  F000         	goto	i2u344_41
  8479   0001CC  EFEA  F000         	goto	i2u344_40
  8480   0001D0                     i2u344_41:
  8481   0001D0  EFED  F000         	goto	i2l4759
  8482   0001D4                     i2u344_40:
  8483   0001D4                     
  8484                           ;main.c: 926:             RCSTA1bits.OERR = 0;
  8485   0001D4  92AC               	bcf	172,1,c	;volatile
  8486                           
  8487                           ;main.c: 927:             RCSTA1bits.CREN = 0;
  8488   0001D6  98AC               	bcf	172,4,c	;volatile
  8489                           
  8490                           ;main.c: 928:             RCSTA1bits.CREN = 1;
  8491   0001D8  88AC               	bsf	172,4,c	;volatile
  8492   0001DA                     i2l4759:
  8493                           
  8494                           ;main.c: 932:     if (TMR1IF_triggered == 1) {
  8495   0001DA  0425               	decf	_TMR1IF_triggered^0,w,c	;volatile
  8496   0001DC  A4D8               	btfss	status,2,c
  8497   0001DE  EFF3  F000         	goto	i2u345_41
  8498   0001E2  EFF5  F000         	goto	i2u345_40
  8499   0001E6                     i2u345_41:
  8500   0001E6  EF3B  F001         	goto	i2l4777
  8501   0001EA                     i2u345_40:
  8502   0001EA                     
  8503                           ;main.c: 933:         if (errorcounter > 0) {
  8504   0001EA  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  8505   0001EC  EF02  F001         	goto	i2u346_41
  8506   0001F0  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  8507   0001F2  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  8508   0001F4  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  8509   0001F6  E108               	bnz	i2u346_40
  8510   0001F8  0452               	decf	_errorcounter^0,w,c	;volatile
  8511   0001FA  A0D8               	btfss	status,0,c
  8512   0001FC  EF02  F001         	goto	i2u346_41
  8513   000200  EF04  F001         	goto	i2u346_40
  8514   000204                     i2u346_41:
  8515   000204  EF0E  F001         	goto	i2l4765
  8516   000208                     i2u346_40:
  8517   000208                     
  8518                           ;main.c: 934:             errorcounter--;
  8519   000208  0EFF               	movlw	255
  8520   00020A  2652               	addwf	_errorcounter^0,f,c	;volatile
  8521   00020C  0EFF               	movlw	255
  8522   00020E  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  8523   000210  0EFF               	movlw	255
  8524   000212  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  8525   000214  0EFF               	movlw	255
  8526   000216  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  8527                           
  8528                           ;main.c: 935:         } else {
  8529   000218  EF16  F001         	goto	i2l4767
  8530   00021C                     i2l4765:
  8531                           
  8532                           ;main.c: 936:             errorcounter = 0;
  8533   00021C  0E00               	movlw	0
  8534   00021E  6E52               	movwf	_errorcounter^0,c	;volatile
  8535   000220  0E00               	movlw	0
  8536   000222  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  8537   000224  0E00               	movlw	0
  8538   000226  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  8539   000228  0E00               	movlw	0
  8540   00022A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  8541   00022C                     i2l4767:
  8542                           
  8543                           ;main.c: 939:         if (LowPowerCounter > 0) {
  8544   00022C  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  8545   00022E  EF23  F001         	goto	i2u347_41
  8546   000232  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  8547   000234  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  8548   000236  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  8549   000238  E108               	bnz	i2u347_40
  8550   00023A  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  8551   00023C  A0D8               	btfss	status,0,c
  8552   00023E  EF23  F001         	goto	i2u347_41
  8553   000242  EF25  F001         	goto	i2u347_40
  8554   000246                     i2u347_41:
  8555   000246  EF2F  F001         	goto	i2l4771
  8556   00024A                     i2u347_40:
  8557   00024A                     
  8558                           ;main.c: 940:             LowPowerCounter--;
  8559   00024A  0EFF               	movlw	255
  8560   00024C  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  8561   00024E  0EFF               	movlw	255
  8562   000250  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  8563   000252  0EFF               	movlw	255
  8564   000254  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  8565   000256  0EFF               	movlw	255
  8566   000258  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  8567                           
  8568                           ;main.c: 941:         } else {
  8569   00025A  EF39  F001         	goto	i2l4775
  8570   00025E                     i2l4771:
  8571                           
  8572                           ;main.c: 942:             LowPowerCounter = 20;
  8573   00025E  0E14               	movlw	20
  8574   000260  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  8575   000262  0E00               	movlw	0
  8576   000264  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  8577   000266  0E00               	movlw	0
  8578   000268  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  8579   00026A  0E00               	movlw	0
  8580   00026C  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  8581   00026E                     
  8582                           ;main.c: 943:             Low_Power_Indicator();
  8583   00026E  EC5A  F012         	call	_Low_Power_Indicator	;wreg free
  8584   000272                     i2l4775:
  8585                           
  8586                           ;main.c: 946:         TMR1IF_triggered = 0;
  8587   000272  0E00               	movlw	0
  8588   000274  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  8589   000276                     i2l4777:
  8590                           
  8591                           ;main.c: 949:     if (TMR1IF) {
  8592   000276  A09E               	btfss	3998,0,c	;volatile
  8593   000278  EF40  F001         	goto	i2u348_41
  8594   00027C  EF42  F001         	goto	i2u348_40
  8595   000280                     i2u348_41:
  8596   000280  EF49  F001         	goto	i2l4783
  8597   000284                     i2u348_40:
  8598   000284                     
  8599                           ;main.c: 950:         TMR1 = 0x9E57;
  8600   000284  0E9E               	movlw	158
  8601   000286  6ECF               	movwf	207,c	;volatile
  8602   000288  0E57               	movlw	87
  8603   00028A  6ECE               	movwf	206,c	;volatile
  8604   00028C                     
  8605                           ;main.c: 951:         TMR1IF = 0;
  8606   00028C  909E               	bcf	3998,0,c	;volatile
  8607                           
  8608                           ;main.c: 952:         TMR1IF_triggered = 1;
  8609   00028E  0E01               	movlw	1
  8610   000290  6E25               	movwf	_TMR1IF_triggered^0,c	;volatile
  8611   000292                     i2l4783:
  8612                           
  8613                           ;main.c: 957:     if(INTCON3bits.INT2F == 1) {
  8614   000292  A2F0               	btfss	240,1,c	;volatile
  8615   000294  EF4E  F001         	goto	i2u349_41
  8616   000298  EF50  F001         	goto	i2u349_40
  8617   00029C                     i2u349_41:
  8618   00029C  EF7B  F001         	goto	i2l355
  8619   0002A0                     i2u349_40:
  8620   0002A0                     
  8621                           ;main.c: 959:       if (dispense == 0 && PORTBbits.RB4 != 0)
  8622   0002A0  5007               	movf	_dispense^0,w,c
  8623   0002A2  1008               	iorwf	(_dispense+1)^0,w,c
  8624   0002A4  A4D8               	btfss	status,2,c
  8625   0002A6  EF57  F001         	goto	i2u350_41
  8626   0002AA  EF59  F001         	goto	i2u350_40
  8627   0002AE                     i2u350_41:
  8628   0002AE  EF66  F001         	goto	i2l4791
  8629   0002B2                     i2u350_40:
  8630   0002B2  A881               	btfss	129,4,c	;volatile
  8631   0002B4  EF5E  F001         	goto	i2u351_41
  8632   0002B8  EF60  F001         	goto	i2u351_40
  8633   0002BC                     i2u351_41:
  8634   0002BC  EF66  F001         	goto	i2l4791
  8635   0002C0                     i2u351_40:
  8636   0002C0                     
  8637                           ;main.c: 960:       {;main.c: 962:         dispense = 1;
  8638   0002C0  0E00               	movlw	0
  8639   0002C2  6E08               	movwf	(_dispense+1)^0,c
  8640   0002C4  0E01               	movlw	1
  8641   0002C6  6E07               	movwf	_dispense^0,c
  8642                           
  8643                           ;main.c: 963:       }
  8644   0002C8  EF7A  F001         	goto	i2l4797
  8645   0002CC                     i2l4791:
  8646   0002CC  0407               	decf	_dispense^0,w,c
  8647   0002CE  1008               	iorwf	(_dispense+1)^0,w,c
  8648   0002D0  A4D8               	btfss	status,2,c
  8649   0002D2  EF6D  F001         	goto	i2u352_41
  8650   0002D6  EF6F  F001         	goto	i2u352_40
  8651   0002DA                     i2u352_41:
  8652   0002DA  EF7A  F001         	goto	i2l4797
  8653   0002DE                     i2u352_40:
  8654   0002DE  A881               	btfss	129,4,c	;volatile
  8655   0002E0  EF74  F001         	goto	i2u353_41
  8656   0002E4  EF76  F001         	goto	i2u353_40
  8657   0002E8                     i2u353_41:
  8658   0002E8  EF7A  F001         	goto	i2l4797
  8659   0002EC                     i2u353_40:
  8660   0002EC                     
  8661                           ;main.c: 965:       {;main.c: 967:         dispense = 0;
  8662   0002EC  0E00               	movlw	0
  8663   0002EE  6E08               	movwf	(_dispense+1)^0,c
  8664   0002F0  0E00               	movlw	0
  8665   0002F2  6E07               	movwf	_dispense^0,c
  8666   0002F4                     i2l4797:
  8667                           
  8668                           ;main.c: 970:       INTCON3bits.INT2F = 0;
  8669   0002F4  92F0               	bcf	240,1,c	;volatile
  8670   0002F6                     i2l355:
  8671   0002F6  C034  FFDA         	movff	??_high_isr+1,fsr2h
  8672   0002FA  C033  FFD9         	movff	??_high_isr,fsr2l
  8673   0002FE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8674   000300  0011               	retfie		f
  8675   000302                     __end_of_high_isr:
  8676                           	callstack 0
  8677                           
  8678 ;; *************** function i2_Write1USART *****************
  8679 ;; Defined at:
  8680 ;;		line 47 in file "usart.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  data            1    wreg     unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  data            1    0[COMRAM] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8698 ;;Total ram usage:        1 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_high_isr
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text43
  8708   00261E                     __ptext43:
  8709                           	callstack 0
  8710   00261E                     i2_Write1USART:
  8711                           	callstack 25
  8712                           
  8713                           ;incstack = 0
  8714                           ;i2Write1USART@data stored from wreg
  8715   00261E  6E32               	movwf	i2Write1USART@data^0,c
  8716   002620                     
  8717                           ;usart.c: 48:     TXREG1 = data;
  8718   002620  C032  FFAE         	movff	i2Write1USART@data,4014	;volatile
  8719   002624                     i2l650:
  8720   002624  A2AD               	btfss	173,1,c	;volatile
  8721   002626  EF17  F013         	goto	i2u272_41
  8722   00262A  EF19  F013         	goto	i2u272_40
  8723   00262E                     i2u272_41:
  8724   00262E  EF12  F013         	goto	i2l650
  8725   002632                     i2u272_40:
  8726   002632  0012               	return		;funcret
  8727   002634                     __end_ofi2_Write1USART:
  8728                           	callstack 0
  8729                           
  8730 ;; *************** function _Read1USART *****************
  8731 ;; Defined at:
  8732 ;;		line 56 in file "usart.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;		None
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  result          1    0[COMRAM] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      unsigned char 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;Total ram usage:        1 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_high_isr
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text44
  8760   002590                     __ptext44:
  8761                           	callstack 0
  8762   002590                     _Read1USART:
  8763                           	callstack 25
  8764   002590                     
  8765                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  8766   002590  A2AC               	btfss	172,1,c	;volatile
  8767   002592  EFCD  F012         	goto	i2u269_41
  8768   002596  EFCF  F012         	goto	i2u269_40
  8769   00259A                     i2u269_41:
  8770   00259A  EFD7  F012         	goto	i2l656
  8771   00259E                     i2u269_40:
  8772   00259E                     
  8773                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  8774   00259E  98AC               	bcf	172,4,c	;volatile
  8775                           
  8776                           ;usart.c: 61:         result = RCREG1;
  8777   0025A0  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8778                           
  8779                           ;usart.c: 62:         result = RCREG1;
  8780   0025A4  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8781                           
  8782                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  8783   0025A8  88AC               	bsf	172,4,c	;volatile
  8784                           
  8785                           ;usart.c: 64:     } else {
  8786   0025AA  EFD9  F012         	goto	i2l4037
  8787   0025AE                     i2l656:
  8788                           
  8789                           ;usart.c: 65:         result = RCREG1;
  8790   0025AE  CFAF F032          	movff	4015,Read1USART@result	;volatile
  8791   0025B2                     i2l4037:
  8792                           
  8793                           ;usart.c: 68:     return result;
  8794   0025B2  5032               	movf	Read1USART@result^0,w,c
  8795   0025B4  0012               	return		;funcret
  8796   0025B6                     __end_of_Read1USART:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _Low_Power_Indicator *****************
  8800 ;; Defined at:
  8801 ;;		line 1371 in file "main.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used: 1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_high_isr
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text45
  8829   0024B4                     __ptext45:
  8830                           	callstack 0
  8831   0024B4                     _Low_Power_Indicator:
  8832                           	callstack 25
  8833   0024B4                     
  8834                           ;main.c: 1373:     if (VOLTAGE <= 0x0366)
  8835   0024B4  0E67               	movlw	103
  8836   0024B6  5C0D               	subwf	_VOLTAGE^0,w,c
  8837   0024B8  0E03               	movlw	3
  8838   0024BA  580E               	subwfb	(_VOLTAGE+1)^0,w,c
  8839   0024BC  B0D8               	btfsc	status,0,c
  8840   0024BE  EF63  F012         	goto	i2u270_41
  8841   0024C2  EF65  F012         	goto	i2u270_40
  8842   0024C6                     i2u270_41:
  8843   0024C6  EF68  F012         	goto	i2l4045
  8844   0024CA                     i2u270_40:
  8845   0024CA                     
  8846                           ;main.c: 1374:     {;main.c: 1376:         LATDbits.LATD1 = 1;
  8847   0024CA  828C               	bsf	140,1,c	;volatile
  8848                           
  8849                           ;main.c: 1378:     } else if (VOLTAGE >= 0x03C0)
  8850   0024CC  EF74  F012         	goto	i2l470
  8851   0024D0                     i2l4045:
  8852   0024D0  0EC0               	movlw	192
  8853   0024D2  5C0D               	subwf	_VOLTAGE^0,w,c
  8854   0024D4  0E03               	movlw	3
  8855   0024D6  580E               	subwfb	(_VOLTAGE+1)^0,w,c
  8856   0024D8  A0D8               	btfss	status,0,c
  8857   0024DA  EF71  F012         	goto	i2u271_41
  8858   0024DE  EF73  F012         	goto	i2u271_40
  8859   0024E2                     i2u271_41:
  8860   0024E2  EF74  F012         	goto	i2l470
  8861   0024E6                     i2u271_40:
  8862   0024E6                     
  8863                           ;main.c: 1379:     {;main.c: 1380:         LATDbits.LATD1 = 0;
  8864   0024E6  928C               	bcf	140,1,c	;volatile
  8865   0024E8                     i2l470:
  8866   0024E8  0012               	return		;funcret
  8867   0024EA                     __end_of_Low_Power_Indicator:
  8868                           	callstack 0
  8869   000000                     
  8870                           	psect	rparam
  8871   000000                     
  8872                           	psect	temp
  8873   000059                     btemp:
  8874                           	callstack 0
  8875   000059                     	ds	1
  8876   000000                     int$flags	set	btemp
  8877   000000                     wtemp8	set	btemp+1
  8878   000000                     ttemp5	set	btemp+1
  8879   000000                     ttemp6	set	btemp+4
  8880   000000                     ttemp7	set	btemp+8
  8881                           
  8882                           	psect	config
  8883                           
  8884                           ;Config register CONFIG1L @ 0x7FF8
  8885                           ;	Watchdog Timer Enable bit
  8886                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  8887                           ;	PLL Prescaler Selection bits
  8888                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8889                           ;	Stack Overflow/Underflow Reset Enable bit
  8890                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  8891                           ;	Extended Instruction Set Enable bit
  8892                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8893                           ;	Background Debugger Enable bit
  8894                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  8895   007FF8                     	org	32760
  8896   007FF8  AE                 	db	174
  8897                           
  8898                           ;Config register CONFIG1H @ 0x7FF9
  8899                           ;	CPU System Clock Postscaler
  8900                           ;	CPUDIV = OSC1, No CPU system clock divide
  8901                           ;	Code Protection bit
  8902                           ;	CP0 = OFF, Program memory is not code-protected
  8903   007FF9                     	org	32761
  8904   007FF9  F7                 	db	247
  8905                           
  8906                           ;Config register CONFIG2L @ 0x7FFA
  8907                           ;	Oscillator Selection bits
  8908                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  8909                           ;	Fail-Safe Clock Monitor Enable bit
  8910                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8911                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  8912                           ;	IESO = OFF, Two-Speed Start-up disabled
  8913   007FFA                     	org	32762
  8914   007FFA  03                 	db	3
  8915                           
  8916                           ;Config register CONFIG2H @ 0x7FFB
  8917                           ;	Watchdog Timer Postscaler Select bits
  8918                           ;	WDTPS = 2048, 1:2048
  8919   007FFB                     	org	32763
  8920   007FFB  FB                 	db	251
  8921                           
  8922                           ;Config register CONFIG3L @ 0x7FFC
  8923                           ;	unspecified, using default values
  8924   007FFC                     	org	32764
  8925   007FFC  F8                 	db	248
  8926                           
  8927                           ;Config register CONFIG3H @ 0x7FFD
  8928                           ;	ECCP2 MUX bit
  8929                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  8930                           ;	MSSP Address Masking Mode Select bit
  8931                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  8932   007FFD                     	org	32765
  8933   007FFD  F1                 	db	241
  8934                           tosu	equ	0xFFF
  8935                           tosh	equ	0xFFE
  8936                           tosl	equ	0xFFD
  8937                           stkptr	equ	0xFFC
  8938                           pclatu	equ	0xFFB
  8939                           pclath	equ	0xFFA
  8940                           pcl	equ	0xFF9
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           indf0	equ	0xFEF
  8948                           postinc0	equ	0xFEE
  8949                           postdec0	equ	0xFED
  8950                           preinc0	equ	0xFEC
  8951                           plusw0	equ	0xFEB
  8952                           fsr0h	equ	0xFEA
  8953                           fsr0l	equ	0xFE9
  8954                           wreg	equ	0xFE8
  8955                           indf1	equ	0xFE7
  8956                           postinc1	equ	0xFE6
  8957                           postdec1	equ	0xFE5
  8958                           preinc1	equ	0xFE4
  8959                           plusw1	equ	0xFE3
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           bsr	equ	0xFE0
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           preinc2	equ	0xFDC
  8967                           plusw2	equ	0xFDB
  8968                           fsr2h	equ	0xFDA
  8969                           fsr2l	equ	0xFD9
  8970                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      88
    BANK0           160      6      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM_Selection
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _PWM_Selection->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_PWM_Selection

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30787
                                              4 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                      _PWM_Selection
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                            _pwm_set
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    2446
                                             20 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      65
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              4     2      2     120
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                3     0      3     533
                                             12 COMRAM     3     0      3
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    3998
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _PWM_Selection                                        6     4      2    4162
                                             26 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    3998
                                             20 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      31
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     369
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  4     4      0    6182
                                             23 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    3622
                                             14 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2786
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     319
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
     _delay_1ms
     _readWeighingData
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SErr
     _delay_1ms
   _PWM_Selection
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _ToggleVIB_Mode
     _write_i2c
   _Write1USART
   _WriteSTLED316SData
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _pwm_set
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      56        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      40       5       40.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      58       1       93.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRllllll     2B      0       0      55        0.0%
BITBIGSFRhlhl       1C      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhl        C      0       0      45        0.0%
BITBIGSFRlhhhh       A      0       0      44        0.0%
BITBIGSFRllllh       7      0       0      50        0.0%
BITBIGSFRhlllhh      5      0       0      42        0.0%
BITBIGSFRlllllh      4      0       0      51        0.0%
BITBIGSFRlhl         4      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRhllll       3      0       0      43        0.0%
BITBIGSFRllhh        2      0       0      47        0.0%
BITBIGSFRlllllh      2      0       0      53        0.0%
BITBIGSFRhllhh       2      0       0      40        0.0%
BITBIGSFRllhl        2      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      52        0.0%
BITBIGSFRhlhh        1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      49        0.0%
BITBIGSFRhllhl       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      30        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 08 11:24:20 2023

                             _i 0011                   ??_i2c_Address 003A                    ___awdiv@sign 003D  
                 ?_InitSTLED316 0032                     i2c_Read@ack 003B                             l220 0604  
                           l304 10B8                             l209 059C                             l402 13DC  
                           l219 05FE                             l500 2186                             l261 0CBA  
                           l245 0946                             l422 1610                             l503 219E  
                           l440 17EC                             l432 1754                             l408 153E  
                           l600 258E                             l361 2542                             l425 161C  
                           l249 0B3C                             l506 21C8                             l450 247C  
                           l522 1EA0                             l282 0E28                             l435 1786  
                           l419 15C6                             l603 2698                             l612 2660  
                           l380 23CA                             l620 24B2                             l461 23E4  
                           l365 25D8                             l533 1AF8                             l445 2442  
                           l197 2516                             l358 2530                             l542 1B04  
                           l454 22F6                             l606 2688                             l455 22FC  
                           l383 11E0                             l375 1A04                             l615 2646  
                           l623 2346                             l464 2408                             l712 26A0  
                           l528 20BC                             l480 1C00                             l552 1CEC  
                           l721 2680                             l609 2690                             l289 0EF0  
                           l650 260E                             l458 25F0                             l618 24A8  
                           l626 22A2                             l715 26A8                             l803 18F8  
                           l475 1BF8                             l619 24AA                             l299 1010  
                           l388 1212                             l492 2148                             l548 1CE0  
                           l565 1DD4                             l557 1DC8                             l653 261C  
                           l709 2654                             l718 2676                             l398 137E  
                           l647 2568                             l498 2150                             l594 2606  
                           l691 2238                             l692 223A                             l689 222A  
                           l955 1F64                             l968 2014                             _GIE 007F97  
                           _PR2 000FCB                             _PR4 000F77                             _NUM 0017  
                  ___awmod@sign 003D                             wreg 000FE8                      _TXSTA1bits 000FAD  
                 ??_i2c_Restart 0039                            l4001 1776                            l3201 1E9E  
                          l3131 2518                            l4011 17BC                            l4003 1788  
                          l3133 251C                            l3117 260A                            l3125 244C  
                          l4013 17C8                            l4005 179A                            l3301 1EFC  
                          l4021 240A                            l3135 252A                            l3231 269E  
                          l3143 2152                            l3127 245C                            l3119 2444  
                          l4015 17CA                            l4007 17AA                            l3311 1F36  
                          l3303 1F04                            l4031 2426                            l3233 26A2  
                          l3401 25C4                            l3145 2170                            l3137 214C  
                          l3129 2460                            l4009 17BA                            l4017 17E0  
                          l3321 1F5C                            l3313 1F38                            l3305 1F12  
                          l3235 26A6                            l3411 266E                            l3171 21B8  
                          l3155 218C                            l3147 2180                            l4019 17E8  
                          l3315 1F3E                            l3307 1F18                            l3331 1F80  
                          l4027 2412                            l3229 269A                            l3413 2672  
                          l3165 21A4                            l3157 218E                            l3149 2188  
                          l3421 1CFA                            l3501 1B02                            l3181 1DF2  
                          l3173 1DD6                            l3309 1F2E                            l3317 1F44  
                          l3341 1FB4                            l3333 1F84                            l3325 1F66  
                          l4029 2422                            l3407 25D0                            l3167 21A6  
                          l3159 21A0                            l3431 1D46                            l3423 1D06  
                          l3415 1CF0                            l3191 1E1A                            l3183 1DFA  
                          l3175 1DDA                            l3319 1F54                            l3351 1FEE  
                          l3343 1FBC                            l3335 1F92                            l3327 1F6A  
                          l3169 21B6                            l3441 1DCC                            l3433 1D56  
                          l3425 1D16                            l3417 1CF2                            l3193 1E22  
                          l3185 1E02                            l3177 1DE2                            l3281 1EA2  
                          l3345 1FCA                            l3353 1FF4                            l3337 1F9A  
                          l3329 1F78                            l3361 2016                            l3601 2124  
                          l5201 1836                            l3521 24EA                            l3451 267C  
                          l3443 1DD2                            l3435 1D66                            l3427 1D26  
                          l3419 1CF8                            l3195 1E2A                            l3187 1E0A  
                          l3179 1DEA                            l3291 1ECE                            l3283 1EA6  
                          l3355 2004                            l3347 1FE0                            l3339 1FAC  
                          l3371 208C                            l3363 204E                            l3603 2126  
                          l5211 187E                            l5203 1846                            l3531 21E8  
                          l3523 21CA                            l3611 264E                            l3453 267E  
                          l3429 1D36                            l3189 1E12                            l3293 1ED6  
                          l3285 1EB4                            l3357 200C                            l3349 1FE8  
                          l3381 20B0                            l3373 209C                            l3365 2056  
                          l3605 2146                            l3621 25DA                            l5221 18C2  
                          l5213 1888                            l5205 185C                            l5301 23AC  
                          l3613 25F2                            l3541 21F2                            l3533 21EA  
                          l3525 21CE                            l3391 23D6                            l3439 1D76  
                          l3471 1A08                            l3463 22C4                            l3455 22A4  
                          l3199 1E32                            l3295 1EDA                            l3287 1EBC  
                          l3383 20B2                            l3375 20A2                            l3367 2058  
                          l3623 25E6                            l5215 18A6                            l5207 1864  
                          l5223 18C8                            l5231 22FE                            l5303 23AE  
                          l3615 25F6                            l3551 21FC                            l3543 21F4  
                          l3535 21EC                            l3527 21E4                            l3607 2648  
                          l5311 030C                            l3393 23E2                            l3449 2678  
                          l3481 1A2E                            l3473 1A0A                            l3465 22D6  
                          l3457 22BA                            l3297 1EE2                            l3289 1EC0  
                          l3385 20B4                            l3377 20A4                            l3369 207C  
                          l3801 122C                            l3625 25E8                            l3641 1918  
                          l5225 18D8                            l5217 18B6                            l5209 1870  
                          l5161 256A                            l5305 23C8                            l3561 2206  
                          l3553 21FE                            l3545 21F6                            l3537 21EE  
                          l3529 21E6                            l3609 264C                            l3617 2544  
                          l5241 248A                            l5233 2682                            l5401 0410  
                          l5321 0322                            l5313 0312                            l3395 23F2  
                          l3491 1A7E                            l3483 1A3E                            l3475 1A10  
                          l3467 22DA                            l3299 1EF4                            l3387 20BA  
                          l3379 20AA                            l3811 127C                            l3803 1244  
                          l3627 25EA                            l3651 1954                            l3643 1928  
                          l3635 18FA                            l5227 18E8                            l5219 18B8  
                          l5163 256A                            l5171 268A                            l3571 2220  
                          l3563 2208                            l3555 2200                            l3547 21F8  
                          l3539 21F0                            l3619 2560                            l5243 2492  
                          l5235 2686                            l6211 0742                            l5411 0454  
                          l5403 0418                            l5331 032C                            l5323 0324  
                          l5315 0316                            l5307 0306                            l3389 23CC  
                          l3493 1A8E                            l3485 1A4E                            l3477 1A12  
                          l3469 22F8                            l3901 152C                            l3821 12BE  
                          l3813 1280                            l3805 1254                            l3581 20C0  
                          l3661 19A8                            l3653 1966                            l3645 1934  
                          l3637 18FC                            l5165 2580                            l5181 263A  
                          l5173 268E                            l5261 1B30                            l5253 1B06  
                          l3741 1C14                            l3733 1C02                            l3573 2222  
                          l3565 220A                            l3557 2202                            l3549 21FA  
                          l5245 24A2                            l5237 2480                            l6221 118C  
                          l6213 08FA                            l5501 06CE                            l5421 0492  
                          l5413 046A                            l5405 041A                            l5341 0336  
                          l5333 032E                            l5325 0326                            l5317 031A  
                          l5309 0308                            l3399 25B6                            l3487 1A5E  
                          l3479 1A1E                            l3911 1584                            l3903 1540  
                          l3831 1300                            l3823 12D4                            l3815 1292  
                          l3807 1260                            l3591 20F6                            l3583 20C4  
                          l3671 19E0                            l3663 19AE                            l3655 1976  
                          l3647 194A                            l3639 1900                            l5191 1800  
                          l5183 263E                            l5167 2692                            l5175 2658  
                          l6223 1BD2                            l5271 1B62                            l5263 1B36  
                          l5255 1B0A                            l3751 1C6A                            l3743 1C24  
                          l3735 1C04                            l3575 2224                            l3567 221C  
                          l3559 2204                            l5239 2484                            l5247 223C  
                          l6215 0EBA                            l5511 0708                            l5503 06D4  
                          l5431 04C6                            l5423 0494                            l5415 0472  
                          l5407 0436                            l5351 034C                            l5343 0338  
                          l5335 0330                            l5327 0328                            l5319 031E  
                          l3489 1A6E                            l3497 1A9E                            l6225 1E48  
                          l3921 15B2                            l3913 1586                            l3905 1552  
                          l3841 134A                            l3833 130C                            l3825 12DA  
                          l3817 12A2                            l3809 1276                            l3593 20FE  
                          l3585 20CA                            l3673 19E4                            l3665 19B2  
                          l3657 1986                            l3649 1950                            l5193 1810  
                          l5185 2642                            l5169 2696                            l5177 265C  
                          l5281 1B96                            l5273 1B6A                            l5265 1B3E  
                          l5257 1B12                            l3761 1CBE                            l3753 1C7A  
                          l3745 1C36                            l3737 1C0A                            l3577 2226  
                          l3569 221E                            l5249 229A                            l6217 108A  
                          l5601 09EA                            l5513 0714                            l5505 06E0  
                          l5521 0780                            l6209 0566                            l5441 0504  
                          l5433 04D6                            l5425 04B0                            l5417 0474  
                          l5409 043E                            l5361 0366                            l5353 0350  
                          l5345 033C                            l5337 0332                            l5329 032A  
                          l3499 1AFC                            l6227 1AB2                            l3931 15D6  
                          l3923 15BA                            l3915 1592                            l3907 1562  
                          l3851 138E                            l3843 135A                            l3835 1322  
                          l3827 12DE                            l3819 12B2                            l3771 11A6  
                          l3595 2100                            l3587 20CC                            l3675 19FA  
                          l3667 19C4                            l3659 1992                            l5195 1814  
                          l5187 17EE                            l5179 2636                            l5283 1B98  
                          l5275 1B6C                            l5267 1B40                            l5259 1B14  
                          l3763 1CD0                            l3755 1C8A                            l3747 1C46  
                          l3739 1C0C                            l3579 2228                            l6219 1130  
                          l5611 0A50                            l5603 09F8                            l5531 07A8  
                          l5523 0784                            l5515 0720                            l5507 06F0  
                          l5451 0544                            l5443 0514                            l5435 04E2  
                          l5427 04B2                            l5419 0490                            l5371 0370  
                          l5363 0368                            l5355 0352                            l5347 0340  
                          l5339 0334                            l6229 1D8A                            l3933 15E6  
                          l3925 15C2                            l3917 1594                            l3909 1574  
                          l3861 13F0                            l3845 136C                            l3853 13A8  
                          l3837 1334                            l3829 12F0                            l3773 11B6  
                          l3597 211A                            l3589 20F4                            l3677 1A02  
                          l3669 19D4                            l5197 1822                            l5189 17F2  
                          l5285 1BB4                            l5277 1B88                            l5269 1B5C  
                          l3757 1C9E                            l3749 1C56                            l3765 1CE0  
                          l5621 0AB4                            l5605 0A14                            l5613 0A64  
                          l5541 07E2                            l5533 07B8                            l5525 0786  
                          l5509 06FC                            l5461 05BC                            l5445 0520  
                          l5437 04E4                            l5429 04B6                            l5381 03A2  
                          l5373 0372                            l5365 036A                            l5357 0354  
                          l5349 0344                            l3951 1632                            l3943 1616  
                          l3935 15E8                            l3927 15C8                            l3919 15AA  
                          l3871 143C                            l3863 1402                            l3855 13B8  
                          l3847 1380                            l3839 133A                            l3791 1206  
                          l3783 11E6                            l3775 11B8                            l3599 211C  
                          l5199 1832                            l5279 1B8E                            l5295 238E  
                          l3767 1CE2                            l3759 1CAE                            l5711 0D66  
                          l5703 0D24                            l5631 0AF4                            l5615 0A80  
                          l5623 0ABC                            l5607 0A2A                            l5551 0832  
                          l5543 07FC                            l5535 07CA                            l5527 07A2  
                          l5519 072C                            l5471 05F0                            l5463 05C0  
                          l5447 052C                            l5439 04FE                            l5455 0550  
                          l5391 03D6                            l5383 03A4                            l5375 0374  
                          l5367 036C                            l5359 0356                            l3961 1680  
                          l3953 1636                            l3945 161E                            l3937 15F4  
                          l3929 15D0                            l3873 1444                            l3881 1492  
                          l3865 1412                            l3857 13CA                            l3849 138C  
                          l3793 1214                            l3785 11E8                            l3777 11C4  
                          l5289 1BBA                            l5297 23A0                            l3769 1CEA  
                          l5801 0FB0                            l5721 0DA0                            l5705 0D36  
                          l5713 0D6E                            l5633 0B06                            l5625 0ACA  
                          l5617 0A8C                            l5609 0A44                            l5641 0B48  
                          l5561 0872                            l5553 0834                            l5537 07DC  
                          l5545 07FE                            l5529 07A4                            l5481 0628  
                          l5473 05F2                            l5465 05D0                            l5457 059E  
                          l5449 0538                            l5393 03DA                            l5385 03C0  
                          l5377 0384                            l5369 036E                            l3971 16BC  
                          l3963 1686                            l3955 164E                            l3947 1622  
                          l3939 15F6                            l3891 14EA                            l3883 14A4  
                          l3875 1466                            l3859 13DE                            l3867 1428  
                          l3795 1218                            l3787 11E8                            l3779 11C6  
                          l5299 23A8                            l5811 0FDC                            l5803 0FB4  
                          l5731 0DEA                            l5723 0DB0                            l5715 0D80  
                          l5707 0D46                            l5651 0BA8                            l5643 0B56  
                          l5627 0AD8                            l5635 0B0E                            l5619 0A9C  
                          l5571 08B2                            l5563 0886                            l5555 083A  
                          l5547 0812                            l5539 07E0                            l5491 0682  
                          l5483 063A                            l5475 0606                            l5467 05D4  
                          l5459 05BA                            l5395 03DC                            l5387 03C2  
                          l5379 039E                            l3981 16FA                            l3973 16C8  
                          l3965 168A                            l3957 165E                            l3949 1626  
                          l3893 14FC                            l3885 14B6                            l3877 1474  
                          l3797 121C                            l3789 11FA                            l5805 0FB8  
                          l5821 1012                            l5733 0DF4                            l5725 0DC0  
                          l5717 0D90                            l5709 0D4E                            l5661 0C0A  
                          l5653 0BC2                            l5645 0B68                            l5637 0B1C  
                          l5629 0AE0                            l5573 08BE                            l5565 088E  
                          l5557 084C                            l5549 0814                            l5493 0694  
                          l5485 064C                            l5477 0622                            l5469 05D6  
                          l5397 03F6                            l5389 03C6                            l3991 1738  
                          l3983 170A                            l3975 16DE                            l3967 169C  
                          l3959 166A                            l3895 1504                            l3887 14C8  
                          l3879 1484                            l3799 1228                            l5831 1036  
                          l5815 0FF6                            l5807 0FD2                            l5751 0E4E  
                          l5727 0DC4                            l5719 0D98                            l5743 0E2A  
                          l5671 0C56                            l5663 0C1A                            l5655 0BCE  
                          l5647 0B76                            l5639 0B40                            l5591 095C  
                          l5575 08CA                            l5567 0890                            l5559 085E  
                          l5583 08E2                            l5495 06A6                            l5487 065E  
                          l5479 0624                            l5399 03F8                            l3993 173A  
                          l3985 1716                            l3977 16E4                            l3969 16AC  
                          l3897 150C                            l3889 14D8                            l5833 1042  
                          l5825 101A                            l5817 1008                            l5809 0FD4  
                          l5761 0E82                            l5753 0E52                            l5745 0E32  
                          l5737 0E0E                            l5729 0DD4                            l5681 0C9A  
                          l5673 0C5E                            l5665 0C32                            l5649 0B92  
                          l5657 0BE2                            l5593 096A                            l5577 08D6  
                          l5585 0920                            l5569 08AC                            l5497 06B2  
                          l5489 0670                            l3995 1756                            l3987 172A  
                          l3979 16E8                            l3899 151A                            l5835 1052  
                          l5843 1076                            l5827 102A                            l5851 10DA  
                          l5771 0EF2                            l5763 0E8E                            l5755 0E5A  
                          l5747 0E36                            l5739 0E20                            l5691 0CF0  
                          l5675 0C72                            l5659 0BFE                            l5667 0C3A  
                          l5683 0CBE                            l5595 09AE                            l5587 092E  
                          l5499 06B4                            l3997 1762                            l3989 172C  
                          l5861 10FA                            l5853 10EA                            l5845 10BA  
                          l5837 105E                            l5829 102E                            l5781 0F26  
                          l5773 0F0C                            l5765 0E9A                            l5757 0E6A  
                          l5749 0E3E                            l5693 0D04                            l5677 0C84  
                          l5669 0C48                            l5685 0CC6                            l5597 09C8  
                          l5589 093E                            l5863 1114                            l5855 10EE  
                          l5847 10D4                            l5839 106A                            l5791 0F6C  
                          l5783 0F36                            l5775 0F0E                            l5759 0E76  
                          l5871 115E                            l5695 0D08                            l5687 0CCE  
                          l5679 0C8C                            l5599 09D6                            l5857 10F2  
                          l5849 10D6                            l5793 0F88                            l5785 0F3A  
                          l5769 0EA6                            l5873 116E                            l5697 0D0C  
                          l5689 0CDE                            l5859 10F8                            l5795 0FA0  
                          l5787 0F3C                            l5779 0F16                            l5699 0D10  
                          l5875 1176                            l5797 0FA8                            l5789 0F54  
                          l5869 111A                            l5799 0FAC                            u2000 1F78  
                          u2001 1F74                            u2010 1F92                            u2011 1F8E  
                          u2100 22F6                            u2020 1FAC                            u2101 22F2  
                          u2021 1FA8                            u2030 1FCA                            u2031 1FC6  
                          u2040 1FE0                            u2200 1C36                            u2120 2238  
                          u2041 1FDC                            u2201 1C32                            u2121 2234  
                          u2050 2004                            u2210 1C56                            u2051 2000  
                          u2211 1C52                            u2060 208C                            u2300 1292  
                          u2140 194A                            u2220 1C6A                            u2061 2088  
                          u2301 128E                            u2141 1946                            u2221 1C66  
                          u2070 209C                            u2310 12D4                            u2150 1966  
                          u2230 1C8A                            u2071 2098                            u2311 12D0  
                          u2135 20E2                            u2151 1962                            u2231 1C86  
                          u2080 23F2                            u2400 13DC                            u2320 12F0  
                          u2160 19A8                            u2240 1C9E                            u4000 0BA8  
                          u2081 23EE                            u2401 13D8                            u2321 12EC  
                          u2161 19A4                            u2241 1C9A                            u4001 0BA4  
                          u2090 25C4                            u2410 13F0                            u2330 1322  
                          u2170 19C4                            u2250 1CBE                            u4010 0BFE  
                          u2091 25C0                            u2411 13EC                            u2331 131E  
                          u2171 19C0                            u2251 1CBA                            u4011 0BFA  
                          u2500 14FC                            u2420 1402                            u2340 1334  
                          u2260 1CD0                            u4100 0D80                            u4020 0C48  
                          u2501 14F8                            u2421 13FE                            u2341 1330  
                          u2261 1CCC                            u4101 0D7C                            u4021 0C44  
                          u2510 152C                            u2430 1438                            u2350 135A  
                          u2270 11B6                            u2190 1C24                            u4110 0D90  
                          u4030 0C56                            u2511 1528                            u2431 1434  
                          u2351 1356                            u2271 11B2                            u2191 1C20  
                          u4111 0D8C                            u4031 0C52                            u1800 261C  
                          u2600 16DE                            u2520 153E                            u2440 145E  
                          u2360 136C                            u2280 11FA                            u4120 0DD4  
                          u4040 0C9A                            u1801 2618                            u2601 16DA  
                          u2521 153A                            u2441 1458                            u2361 1368  
                          u2281 11F6                            u4121 0DD0                            u4041 0C96  
                          u1810 247C                            u2610 16FA                            u2530 1552  
                          u2450 1460                            u2370 137E                            u2290 1276  
                          u4130 0E0A                            u4050 0CB6                            u1811 2478  
                          u2611 16F6                            u2531 154E                            u2371 137A  
                          u2291 1272                            u4131 0E06                            u4051 0CB2  
                          u1820 2542                            u2620 172A                            u2540 1562  
                          u2460 14A4                            u2380 13B8                            u4140 0E4E  
                          u4060 0CF0                            u1821 253E                            u2621 1726  
                          u2541 155E                            u2461 14A0                            u2381 13B4  
                          u4141 0E4A                            u4061 0CEC                            u2630 1772  
                          u2550 1574                            u2470 14B6                            u2390 13CA  
                          u4150 0F26                            u4070 0D20                            u2631 176E  
                          u2551 1570                            u2471 14B2                            u2391 13C6  
                          u4151 0F22                            u4071 0D1C                            u4207 0390  
                          u1840 2180                            u2640 1786                            u2560 1584  
                          u2480 14C8                            u3600 18A6                            u4160 0F36  
                          u4080 0D36                            u1841 217C                            u2641 1782  
                          u2561 1580                            u2481 14C4                            u3601 18A2  
                          u4161 0F32                            u4081 0D32                            u4217 09BA  
                          u1850 219E                            u1834 2164                            u2650 179A  
                          u2570 15E6                            u2490 14EA                            u3610 18D8  
                          u4170 0FF2                            u4090 0D46                            _PEN2 007B5A  
                          u1851 219A                            u1835 2160                            u2651 1796  
                          u2571 15E2                            u2491 14E6                            u4307 196C  
                          u3611 18D4                            u4171 0FEE                            u4091 0D42  
                          u4227 0A36                            u1860 21B6                            u2660 17AA  
                          u2580 1680                            u1940 1EB4                            u3540 2580  
                          u3620 24A2                            u4180 102A                            u3700 063A  
                          u1861 21B2                            u2661 17A6                            u2581 167C  
                          u1941 1EB0                            u4317 19EE                            u3541 257C  
                          u3621 249E                            u4181 1026                            u4237 0AA8  
                          u3701 0636                            u1870 21C8                            u2670 17BA  
                          u2590 169C                            u1950 1ECE                            u3550 258E  
                          u3630 23A0                            u4190 10EA                            u3710 064C  
                          u1871 21C4                            u2671 17B6                            u2591 1698  
                          u1951 1ECA                            u4407 159E                            u4327 11D0  
                          u3551 258A                            u3631 239C                            u4191 10E6  
                          u4247 0AFC                            u3711 0648                            u1960 1EF4  
                          u3560 1800                            u2680 2442                            u3800 084C  
                          u3720 065E                            u3640 03D6                            u4417 1600  
                          u1961 1EF0                            u4337 1236                            u3561 17FC  
                          u2681 243E                            u4257 0BB4                            u3801 0848  
                          u3721 065A                            u3641 03D2                            u1970 1F12  
                          u3570 1822                            u3810 085E                            u3730 0670  
                          u3650 0454                            u4427 1640                            u1971 1F0E  
                          u4347 1298                            u3571 181E                            u4267 0C26  
                          u3811 085A                            u3731 066C                            u3651 0450  
                          u1980 1F2E                            u3580 185C                            u3900 0A2A  
                          u3820 0872                            u3740 0682                            u3660 046A  
                          u4437 16A2                            u1981 1F2A                            u4357 1398  
                          u3581 1858                            u4277 0C7A                            u3901 0A26  
                          u3821 086E                            u3741 067E                            u3661 0466  
                          u1990 1F54                            u3590 187E                            u3910 0A80  
                          u3830 0886                            u3750 0694                            u3670 04C6  
                          u4447 1744                            u1991 1F50                            u4367 141C  
                          u3591 187A                            u4287 0FC4                            u3911 0A7C  
                          u3831 0882                            u3751 0690                            u3671 04C2  
                          u3920 0ACA                            u3840 095C                            u3760 06A6  
                          u3680 04D6                            u4457 17D4                            u4377 146C  
                          u4297 190A                            u3921 0AC6                            u3841 0958  
                          u3761 06A2                            u3681 04D2                            u3930 0AD8  
                          u3850 096A                            u3770 07B8                            u3690 05D0  
                          u4467 2522                            u4387 148A                            u3931 0AD4  
                          u3851 0966                            u3771 07B4                            u3691 05CC  
                          u3940 0B1C                            u3860 09D6                            u3780 07CA  
                          u4397 1512                            u3941 0B18                            u3861 09D2  
                          u3781 07C6                            u3950 0B38                            u3870 09EA  
                          u3790 07DC                            u3951 0B34                            u3871 09E6  
                          u3791 07D8                            u3960 0B56                            u3880 09F8  
                          u3961 0B52                            u3881 09F4                            u3970 0B68  
                          u3890 0A14                            _SEN2 007B58                            u3971 0B64  
                          u3891 0A10                            u3980 0B76                            u3981 0B72  
                          u3990 0B92                            u3991 0B8E                            _TMR1 000FCE  
                          _Busy 002D                            _Stop 002F                            _data 002B  
__end_of_AD_capture_BattVoltage 240A                            _main 0306                            _init 21CA  
                          _temp 0090                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9              _MotorPosition_Init 18FA  
                          btemp 0059                            start 0302                 __end_of_Get7Seg 1EA2  
               __end_of_Clr_RG3 26AA     __end_of_Homing_Again_Manual 15C8                    ___param_bank 000000  
                  high_isr@Temp 0035             ?_MotorPosition_Init 0032                 __end_of_Read_IR 25DA  
               __end_of_Set_RG3 26A2                  ??_InitSTLED316 003E                 __end_of_MotorON 2678  
                  _BAUDCON1bits 000F7E                 __end_of___aldiv 18FA                           ?_main 0032  
                         ?_init 0032                 __end_of___awdiv 1F66                           _ADRES 000FC3  
               __end_of___awmod 2016                 ___awdiv@divisor 003A                           _T1CON 000FCD  
                         _T4CON 000F76                           _RCEN2 007B5B                           i2l321 01C6  
                         i2l330 0130                           i2l340 018E                           i2l332 0100  
                         i2l334 012A                           i2l337 014E                           i2l355 02F6  
                         i2l470 24E8                           i2l650 2624                           i2l653 2632  
                         i2l656 25AE                           i2l658 25B4                 ___awdiv@counter 003C  
                         _RSEN2 007B59                           _ETemp 0021                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TRISF 000F97                           _TRISG 000F98  
           __end_of_i2c_Address 2648            ??_MotorPosition_Init 0041                           _flush 240A  
                    _Read1USART 2590                _TMR1IF_triggered 0025                           tablat 000FF5  
      ??_STLED316s_SPI_SendData 0038                 __end_of_pwm_set 2518             __end_of_i2c_Restart 268A  
                         ttemp5 005A                           ttemp6 005D                           ttemp7 0061  
                         status 000FD8                           wtemp8 005A                   _PWM_Selection 1B06  
              PWM_Selection@msg 004C                   i2_Write1USART 261E           _WriteSTLED316SVibMode 1C02  
               __initialization 2348                   _holdTimeRight 0005                      _InitTimer1 25DA  
                  __end_of_main 11A6                    __end_of_init 223C                __end_of_i2c_Init 2608  
              __end_of_i2c_Read 24B4                __end_of_i2c_Wait 2590                __end_of_i2c_Stop 2692  
                        ??_main 009E                          ??_init 0038                   __activetblptr 000002  
                        _ACKEN2 007B5C                          _ACKDT2 007B5D                          ?_flush 0032  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _CCPR1L 000FBC  
              ___awdiv@dividend 0038                       ??_Get7Seg 003A                          i2l4041 24B4  
                        i2l4033 2590                          i2l4043 24CA                          i2l4035 259E  
                        i2l4045 24D0                          i2l4037 25B2                          i2l4047 24E6  
                        i2l4049 2620                          i2l4701 00C4                          i2l4703 00DE  
                        i2l4713 0106                          i2l4705 00EE                          i2l4731 0150  
                        i2l4715 0118                          i2l4707 0102                          i2l4741 0176  
                        i2l4725 0136                          i2l4717 011A                          i2l4733 0164  
                        i2l4751 01B6                          i2l4743 017C                          i2l4735 0170  
                        i2l4727 013C                          i2l4719 0132                          i2l4761 01EA  
                        i2l4745 017E                          i2l4729 013E                          i2l4753 01BE  
                        i2l4681 0026                          i2l4771 025E                          i2l4763 0208  
                        i2l4747 0190                          i2l4691 0074                          i2l4683 0038  
                        i2l4781 028C                          i2l4773 026E                          i2l4765 021C  
                        i2l4757 01D4                          i2l4749 01A4                          i2l4685 0048  
                        i2l4693 007C                          i2l4677 0012                          i2l4791 02CC  
                        i2l4783 0292                          i2l4775 0272                          i2l4767 022C  
                        i2l4695 008C                          i2l4759 01DA                          i2l4687 0058  
                        i2l4679 0020                          i2l4793 02DE                          i2l4785 02A0  
                        i2l4769 024A                          i2l4777 0276                          i2l4697 009C  
                        i2l4689 0064                          i2l4795 02EC                          i2l4787 02B2  
                        i2l4779 0284                          i2l4699 00B2                          i2l4797 02F4  
                        i2l4789 02C0                          _RCREG1 000FAF                       ??_Clr_RG3 0038  
                        _SPBRG1 000FB0                          _TMR1IE 007CE8                          _TMR1IF 007CF0  
                ?_PWM_Selection 004C                          _TRISD5 007CAD                          _TRISD6 007CAE  
                ?i2_Write1USART 0032                          _TXREG1 000FAE                      _MotorBREAK 2678  
                     ??_Read_IR 003A                       ??_Set_RG3 0038                 read_i2c@address 0046  
                        _OpMode 002A                       ??_MotorON 0038                __end_of_high_isr 0302  
                     ??___aldiv 0040                       ??___awdiv 003C                       ??___awmod 003C  
                _PWM_Duty_Cycle 0026                __end_of_flushOut 247E                __end_of_read_i2c 22A4  
                   _i2c_Address 2634                          clear_0 236E                          clear_1 237A  
              ___awdiv@quotient 003E                 ___awmod@divisor 003A                          isa$std 000001  
               ___awmod@counter 003C                Read1USART@result 0032      __end_of_WriteSTLED316SData 20BE  
    __end_of_WriteSTLED316SMode 1B06                          flush@i 0038                   i2c_Write@data 0039  
                  __pdataCOMRAM 004E                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     _i2c_Restart 2682                       ??_pwm_set 003A  
                   ?_Read1USART 0032            __end_of_InitSTLED316 214A                      __accesstop 0060  
                    _i_RUN_ZERO 0015         __end_of__initialization 2380             _Low_Power_Indicator 24B4  
             _WriteSTLED316SErr 1CEE                   ___rparam_used 000001          ?_WriteSTLED316SVibMode 003E  
            ?_WriteSTLED316SErr 0032                  __pcstackCOMRAM 0032                     ?_InitTimer1 0032  
                 __end_of_flush 2444               __end_of_i2c_Start 269A             ??_WriteSTLED316SErr 003E  
             __end_of_i2c_Write 2662            ?_Low_Power_Indicator 0032                         ??_flush 0038  
                     ?_i2c_Init 0032                       ?_i2c_Read 0039                 ??_PWM_Selection 009A  
                    __pbssBANK0 0060                       ?_i2c_Wait 0032                 ??i2_Write1USART 0032  
                     ?_i2c_Stop 0032       __end_of_WriteSTLED316SErr 1DD6                   ??_Write1USART 0038  
                   ?_MotorBREAK 0032                   _dutyCycle_reg 000B                         _CCP4CON 000F73  
         ??_Low_Power_Indicator 0032          _STLED316s_SPI_SendData 214A                _readWeighingData 22A4  
            i2c_Address@address 003A                         _SPBRGH1 000F7F     WriteSTLED316SVibMode@dc_reg 003E  
                       _SSP2ADD 000F6E                         _SSP2BUF 000F6F                         _NUM_REC 0013  
                       _VOLTAGE 000D                       ?_high_isr 0032                      ??_i2c_Init 0038  
                    ??_i2c_Read 003B                         _PWM_reg 0058                      ??_i2c_Wait 0038  
                       _Get7Seg 1DD6     WriteSTLED316SVibMode@v_mode 0040                      ??_i2c_Stop 0039  
                       _Clr_RG3 26A2               __end_of_delay_1ms 2544               i2Write1USART@data 0032  
                     ?_flushOut 0032                       ?_read_i2c 0046                     _Serial_Flag 0031  
                       _Read_IR 25B6           WriteSTLED316SMode@msg 0040                         _Set_RG3 269A  
                       __Hparam 0000                         __Lparam 0000                         _MotorON 266E  
           __end_of_Write1USART 261E      WriteSTLED316SData@NUM_DIG0 0043      WriteSTLED316SData@NUM_DIG1 0045  
                       ___aldiv 17EE                     _Motor_Speed 001F                         ___awdiv 1EA2  
                       ___awmod 1F66                    Get7Seg@Digit 0038                         __pcinit 2348  
                       __ramtop 1000               __end_of_initUSART 256A                         __ptext0 0306  
                       __ptext1 223C                         __ptext2 2682                         __ptext3 247E  
                       __ptext4 24EA                         __ptext5 2544                         __ptext6 2648  
                       __ptext7 21CA                         __ptext8 25F2                         __ptext9 240A  
             __end_of_initMotor 2656                       _T2CONbits 000FCA                       _T3CONbits 000F79  
              ___awmod@dividend 0038                      _duty_cycle 0009                ___aldiv@dividend 0038  
                     _T4CONbits 000F76                   delay_1ms@time 0038                         _pwm_set 24EA  
                    _pause_Time 0029                       _EAdd_High 0098                      ??_high_isr 0033  
          end_of_initialization 2380            i2c_Address@l_address 003B                      ??_flushOut 0038  
                    ??_read_i2c 004A                   __Lmediumconst 0000         WriteSTLED316SData@data3 0047  
       WriteSTLED316SData@data4 0048                ___aldiv@quotient 0042                         postdec1 000FE5  
                       postinc0 000FEE                    ?_i2c_Address 0039                    _InitSTLED316 20BE  
                     _PORTAbits 000F80                       _PORTBbits 000F81               __end_of_write_i2c 2348  
                     _TRISBbits 000F93                       _TRISCbits 000F94                    ?_i2c_Restart 0032  
      ??_AD_capture_BattVoltage 003B                    ??_Read1USART 0032              _WriteSTLED316SData 2016  
       ??_WriteSTLED316SVibMode 0041              _WriteSTLED316SMode 1A06                     _Write1USART 2608  
                   _CCP1CONbits 000FBB             ?_WriteSTLED316SData 0040             ?_WriteSTLED316SMode 0032  
                  ??_InitTimer1 0038                  _ToggleVIB_Mode 238E                       _Device_ID 001B  
                   _Vmotor_Time 0056                   __pidataCOMRAM 2662              __end_of_Read1USART 25B6  
                 _Serial_Buffer 0080                       _i2c_Start 2692                       _i2c_Write 2656  
          ??_WriteSTLED316SData 0043             start_initialization 2348            ??_WriteSTLED316SMode 003E  
                  _holdTimeLeft 0003              __end_of_InitTimer1 25F2                 _LowPowerCounter 004E  
      __end_of_readWeighingData 22FE                     pwm_set@duty 0038                    ??_MotorBREAK 0038  
        __end_of_ToggleVIB_Mode 23CC         ?_STLED316s_SPI_SendData 0032                      ?_i2c_Start 0032  
                    ?_i2c_Write 0032                     __pbssCOMRAM 0001              __end_of_MotorBREAK 2682  
                 __pcstackBANK0 009A                        ?_Get7Seg 0038             _Homing_Again_Manual 11A6  
                      ?_Clr_RG3 0032           __end_of_PWM_Selection 1C02           __end_ofi2_Write1USART 2634  
                      ?_Read_IR 0038                       _delay_1ms 2518               _Homing_Again_Auto 15C8  
                      ?_Set_RG3 0032                 ?_ToggleVIB_Mode 0032                        ?_MotorON 0032  
__end_of_STLED316s_SPI_SendData 21CA         PWM_Selection@dcSelected 009C     __end_of_Low_Power_Indicator 24EA  
            ?_Homing_Again_Auto 0032                       __pintcode 0008                        ?___aldiv 0038  
                      ?___awdiv 0038                        ?___awmod 0038            ?_Homing_Again_Manual 0032  
                  _errorcounter 0052             ??_Homing_Again_Auto 0041            WriteSTLED316SErr@msg 0040  
                     _initUSART 2544                       _initMotor 2648                     Get7Seg@Data 003C  
                      ?_pwm_set 0038                 Write1USART@data 0038                 ___aldiv@divisor 003C  
               ___aldiv@counter 0040       __end_of_Homing_Again_Auto 17EE                        _LATAbits 000F89  
                      _EAdd_Low 0096                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _LATGbits 000F8F                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                    ?_delay_1ms 0038               readWeighingData@i 003A                        i2u330_40 0038  
                      i2u330_41 0034                        i2u331_40 0048                        i2u331_41 0044  
                      i2u340_40 014E                        i2u332_40 0058                        i2u340_41 014A  
                      i2u332_41 0054                        i2u341_40 018E                        i2u333_40 008C  
                      i2u341_41 018A                        i2u333_41 0088                        i2u270_40 24CA  
                      i2u350_40 02B2                        i2u342_40 01A4                        i2u334_40 00B2  
                      i2u270_41 24C6                        i2u350_41 02AE                        i2u342_41 01A0  
                      i2u334_41 00AE                        i2u271_40 24E6                        i2u351_40 02C0  
                      i2u343_40 01B6                        i2u335_40 00C4                        i2u271_41 24E2  
                      i2u351_41 02BC                        i2u343_41 01B2                        i2u335_41 00C0  
                      i2u272_40 2632                        i2u352_40 02DE                        i2u344_40 01D4  
                      i2u336_40 00DE                        i2u272_41 262E                        i2u352_41 02DA  
                      i2u344_41 01D0                        i2u336_41 00DA                        i2u353_40 02EC  
                      i2u345_40 01EA                        i2u337_40 00EE                        i2u329_40 0020  
                      i2u353_41 02E8                        i2u345_41 01E6                        i2u337_41 00EA  
                      i2u329_41 001C                        _PIR1bits 000F9E                        i2u346_40 0208  
                      i2u338_40 0100                        i2u346_41 0204                        i2u338_41 00FC  
                      i2u347_40 024A                        i2u339_40 012A                        i2u347_41 0246  
                      i2u339_41 0126                        i2u348_40 0284                        i2u348_41 0280  
                      i2u269_40 259E                        i2u349_40 02A0                        i2u269_41 259A  
                      i2u349_41 029C                        _RCONbits 000FD0          _AD_capture_BattVoltage 23CC  
                      _SSP2CON1 000F6C                        _SSP2CON2 000F6B                        _SSP2STAT 000F6D  
         ??_Homing_Again_Manual 0049                       _pwm_count 0094                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                       high_isr@c 0036                       high_isr@i 0037  
                   ??_i2c_Start 0039                     ??_i2c_Write 0039      __end_of_MotorPosition_Init 1A06  
                    ?_initUSART 0032           _delay_motor_stop_time 0027                      ?_initMotor 0032  
                  _Serial_GData 0030                       _write_i2c 22FE                     _INTCON3bits 000FF0  
                     copy_data0 235C          InitSTLED316@Brightness 0040                    _Serial_Count 0023  
                      _i2c_Init 25F2                        _i2c_Read 247E                        _i2c_Wait 256A  
                      _i2c_Stop 268A                    ?_Write1USART 0032   __end_of_WriteSTLED316SVibMode 1CEE  
                     flushOut@i 0038                      _ANCON0bits 000FC1                        __Hrparam 0000  
                      __Lrparam 0000                  _vibration_mode 002C                        __ptext10 1C02  
                      __ptext11 238E                        __ptext20 18FA                        __ptext12 1B06  
                      __ptext21 25DA                        __ptext13 22FE                        __ptext30 2444  
                      __ptext22 20BE                        __ptext14 2656                        __ptext31 2608  
                      __ptext23 11A6                        __ptext15 268A                        __ptext40 23CC  
                      __ptext32 1A06                        __ptext24 2016                        __ptext16 2692  
                      __ptext41 2518                        __ptext33 1CEE                        __ptext25 1F66  
                      __ptext17 2634                        __ptext34 214A                        __ptext26 1EA2  
                      __ptext18 256A                        __ptext43 261E                        __ptext35 25B6  
                      __ptext27 1DD6                        __ptext19 17EE                        __ptext44 2590  
                      __ptext36 266E                        __ptext28 15C8                        __ptext45 24B4  
                      __ptext37 269A                        __ptext29 22A4                        __ptext38 2678  
                      __ptext39 26A2                      ?_write_i2c 0046                write_i2c@address 0046  
                      _high_isr 0008                        _dispense 0007               read_i2c@read_byte 004A  
                      _flushOut 2444                        _read_i2c 223C               ?_readWeighingData 0032  
                   ??_delay_1ms 003A              ??_readWeighingData 003A                        _vib_Time 0028  
         _Motor_Stop_Delay_Time 001D                        isa$xinst 000000                        int$flags 0059  
                      _pwm_mode 0092               _Serial_Buffer_Out 0060      STLED316s_SPI_SendData@Data 003A  
                    _INTCONbits 000FF2                     ??_initUSART 0038      STLED316s_SPI_SendData@temp 003B  
                   ??_initMotor 0038                        intlevel2 0000                    _motor_status 002E  
              ??_ToggleVIB_Mode 004C                 i2c_Address@mode 0039                      _RCSTA1bits 000FAC  
                    _OSCCONbits 000FD3        WriteSTLED316SData@v_mode 0042        WriteSTLED316SData@number 0040  
                    _IR_SENSORF 000F                _Motor_Pause_Time 0019              _Serial_Temp_Buffer 0070  
       STLED316s_SPI_SendData@i 003C         STLED316s_SPI_SendData@t 003D                    ___aldiv@sign 0041  
                    _WDTCONbits 000FC0                     ??_write_i2c 004C             i2c_Read@i2cReadData 003C  
                 write_i2c@data 004A                     _test_redled 0001         ?_AD_capture_BattVoltage 0032  
