

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 02 11:48:21 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F65J50 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  001EF8                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _LowPowerCounter
   100  001EF8  0014               	dw	20
   101  001EFA  0000               	dw	0
   102                           
   103                           ;initializer for _errorcounter
   104  001EFC  001E               	dw	30
   105  001EFE  0000               	dw	0
   106                           
   107                           ;initializer for _Vmotor_Time
   108  001F00  07D0               	dw	2000
   109                           
   110                           ;initializer for _PWM_reg
   111  001F02  3F                 	db	63
   112  0000                     _ADRES	set	4035
   113  0000                     _TMR1	set	4046
   114  0000                     _LATGbits	set	3983
   115  0000                     _T4CONbits	set	3958
   116  0000                     _CCP4CON	set	3955
   117  0000                     _T4CON	set	3958
   118  0000                     _T3CONbits	set	3961
   119  0000                     _PR4	set	3959
   120  0000                     _OSCCONbits	set	4051
   121  0000                     _ANCON0bits	set	4033
   122  0000                     _ADCON1bits	set	4033
   123  0000                     _TRISG	set	3992
   124  0000                     _TRISF	set	3991
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _RCREG1	set	4015
   131  0000                     _TXREG1	set	4014
   132  0000                     _SPBRGH1	set	3967
   133  0000                     _SPBRG1	set	4016
   134  0000                     _PIE1bits	set	3997
   135  0000                     _BAUDCON1bits	set	3966
   136  0000                     _TXSTA1bits	set	4013
   137  0000                     _TRISCbits	set	3988
   138  0000                     _SSP2BUF	set	3951
   139  0000                     _SSP2STAT	set	3949
   140  0000                     _SSP2ADD	set	3950
   141  0000                     _SSP2CON2	set	3947
   142  0000                     _SSP2CON1	set	3948
   143  0000                     _ADRESL	set	4035
   144  0000                     _ADRESH	set	4036
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _T1CON	set	4045
   147  0000                     _RCSTA1bits	set	4012
   148  0000                     _PIR1bits	set	3998
   149  0000                     _PORTAbits	set	3968
   150  0000                     _PORTBbits	set	3969
   151  0000                     _LATDbits	set	3980
   152  0000                     _WDTCONbits	set	4032
   153  0000                     _INTCONbits	set	4082
   154  0000                     _IPR1bits	set	3999
   155  0000                     _RCONbits	set	4048
   156  0000                     _LATAbits	set	3977
   157  0000                     _LATCbits	set	3979
   158  0000                     _ACKEN2	set	31580
   159  0000                     _ACKDT2	set	31581
   160  0000                     _RCEN2	set	31579
   161  0000                     _PEN2	set	31578
   162  0000                     _RSEN2	set	31577
   163  0000                     _SEN2	set	31576
   164  0000                     _TRISD6	set	31918
   165  0000                     _TRISD5	set	31917
   166  0000                     _TMR1IE	set	31976
   167  0000                     _TMR1IF	set	31984
   168  0000                     _GIE	set	32663
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  001C0C                     __pcinit:
   174                           	opt callstack 0
   175  001C0C                     start_initialization:
   176                           	opt callstack 0
   177  001C0C                     __initialization:
   178                           	opt callstack 0
   179                           
   180                           ; Initialize objects allocated to COMRAM (11 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  001C0C  0EF8               	movlw	low __pidataCOMRAM
   183  001C0E  6EF6               	movwf	tblptrl,c
   184  001C10  0E1E               	movlw	high __pidataCOMRAM
   185  001C12  6EF7               	movwf	tblptrh,c
   186  001C14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  001C16  6EF8               	movwf	tblptru,c
   188  001C18  EE00  F04E         	lfsr	0,__pdataCOMRAM
   189  001C1C  EE10 F00B          	lfsr	1,11
   190  001C20                     copy_data0:
   191  001C20  0009               	tblrd		*+
   192  001C22  CFF5 FFEE          	movff	tablat,postinc0
   193  001C26  50E5               	movf	postdec1,w,c
   194  001C28  50E1               	movf	fsr1l,w,c
   195  001C2A  E1FA               	bnz	copy_data0
   196                           
   197                           ; Clear objects allocated to BANK0 (32 bytes)
   198  001C2C  EE00  F060         	lfsr	0,__pbssBANK0
   199  001C30  0E20               	movlw	32
   200  001C32                     clear_0:
   201  001C32  6AEE               	clrf	postinc0,c
   202  001C34  06E8               	decf	wreg,f,c
   203  001C36  E1FD               	bnz	clear_0
   204                           
   205                           ; Clear objects allocated to COMRAM (55 bytes)
   206  001C38  EE00  F001         	lfsr	0,__pbssCOMRAM
   207  001C3C  0E37               	movlw	55
   208  001C3E                     clear_1:
   209  001C3E  6AEE               	clrf	postinc0,c
   210  001C40  06E8               	decf	wreg,f,c
   211  001C42  E1FD               	bnz	clear_1
   212  001C44                     end_of_initialization:
   213                           	opt callstack 0
   214  001C44                     __end_of__initialization:
   215                           	opt callstack 0
   216  001C44  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217  001C46  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218  001C48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219  001C4A  6EF8               	movwf	tblptru,c
   220  001C4C  0100               	movlb	0
   221  001C4E  EF4F  F001         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000001                     __pbssCOMRAM:
   225                           	opt callstack 0
   226  000001                     _Serial_Buffer:
   227                           	opt callstack 0
   228  000001                     	ds	16
   229  000011                     _VOLTAGE:
   230                           	opt callstack 0
   231  000011                     	ds	2
   232  000013                     _IR_SENSORF:
   233                           	opt callstack 0
   234  000013                     	ds	2
   235  000015                     _i:
   236                           	opt callstack 0
   237  000015                     	ds	2
   238  000017                     _NUM_REC:
   239                           	opt callstack 0
   240  000017                     	ds	2
   241  000019                     _NUM:
   242                           	opt callstack 0
   243  000019                     	ds	2
   244  00001B                     _Motor_Pause_Time:
   245                           	opt callstack 0
   246  00001B                     	ds	2
   247  00001D                     _Device_ID:
   248                           	opt callstack 0
   249  00001D                     	ds	2
   250  00001F                     _Motor_Stop_Delay_Time:
   251                           	opt callstack 0
   252  00001F                     	ds	2
   253  000021                     _Motor_Speed:
   254                           	opt callstack 0
   255  000021                     	ds	2
   256  000023                     _ETemp:
   257                           	opt callstack 0
   258  000023                     	ds	2
   259  000025                     _EAdd_Low:
   260                           	opt callstack 0
   261  000025                     	ds	2
   262  000027                     _EAdd_High:
   263                           	opt callstack 0
   264  000027                     	ds	2
   265  000029                     _Serial_Count:
   266                           	opt callstack 0
   267  000029                     	ds	2
   268  00002B                     _TMR1IF_triggered:
   269                           	opt callstack 0
   270  00002B                     	ds	1
   271  00002C                     _PWM_Duty_Cycle:
   272                           	opt callstack 0
   273  00002C                     	ds	1
   274  00002D                     _delay_motor_stop_time:
   275                           	opt callstack 0
   276  00002D                     	ds	1
   277  00002E                     _vib_Time:
   278                           	opt callstack 0
   279  00002E                     	ds	1
   280  00002F                     _pause_Time:
   281                           	opt callstack 0
   282  00002F                     	ds	1
   283  000030                     _OpMode:
   284                           	opt callstack 0
   285  000030                     	ds	1
   286  000031                     _data:
   287                           	opt callstack 0
   288  000031                     	ds	1
   289  000032                     _vibration_mode:
   290                           	opt callstack 0
   291  000032                     	ds	1
   292  000033                     _Busy:
   293                           	opt callstack 0
   294  000033                     	ds	1
   295  000034                     _motor_status:
   296                           	opt callstack 0
   297  000034                     	ds	1
   298  000035                     _Stop:
   299                           	opt callstack 0
   300  000035                     	ds	1
   301  000036                     _Serial_GData:
   302                           	opt callstack 0
   303  000036                     	ds	1
   304  000037                     _Serial_Flag:
   305                           	opt callstack 0
   306  000037                     	ds	1
   307                           
   308                           	psect	dataCOMRAM
   309  00004E                     __pdataCOMRAM:
   310                           	opt callstack 0
   311  00004E                     _LowPowerCounter:
   312                           	opt callstack 0
   313  00004E                     	ds	4
   314  000052                     _errorcounter:
   315                           	opt callstack 0
   316  000052                     	ds	4
   317  000056                     _Vmotor_Time:
   318                           	opt callstack 0
   319  000056                     	ds	2
   320  000058                     _PWM_reg:
   321                           	opt callstack 0
   322  000058                     	ds	1
   323                           
   324                           	psect	bssBANK0
   325  000060                     __pbssBANK0:
   326                           	opt callstack 0
   327  000060                     _Serial_Buffer_Out:
   328                           	opt callstack 0
   329  000060                     	ds	16
   330  000070                     _Serial_Temp_Buffer:
   331                           	opt callstack 0
   332  000070                     	ds	16
   333                           
   334                           	psect	cstackBANK0
   335  000080                     __pcstackBANK0:
   336                           	opt callstack 0
   337  000080                     ?_read_i2c:
   338                           	opt callstack 0
   339  000080                     WriteSTLED316SData@NUM_DIG0:
   340                           	opt callstack 0
   341  000080                     write_i2c@address:
   342                           	opt callstack 0
   343  000080                     read_i2c@address:
   344                           	opt callstack 0
   345                           
   346                           ; 4 bytes @ 0x0
   347  000080                     	ds	2
   348  000082                     WriteSTLED316SData@NUM_DIG1:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000082                     	ds	2
   353  000084                     WriteSTLED316SData@data3:
   354                           	opt callstack 0
   355  000084                     write_i2c@data:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x4
   359  000084                     	ds	1
   360  000085                     WriteSTLED316SData@data4:
   361                           	opt callstack 0
   362                           
   363                           ; 1 bytes @ 0x5
   364  000085                     	ds	1
   365  000086                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x6
   368  000086                     	ds	2
   369                           
   370                           	psect	cstackCOMRAM
   371  000038                     __pcstackCOMRAM:
   372                           	opt callstack 0
   373  000038                     Read1USART@result:
   374                           	opt callstack 0
   375  000038                     i2Write1USART@data:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x0
   379  000038                     	ds	1
   380  000039                     ??_high_isr:
   381                           
   382                           ; 1 bytes @ 0x1
   383  000039                     	ds	2
   384  00003B                     high_isr@Temp:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388  00003B                     	ds	1
   389  00003C                     high_isr@c:
   390                           	opt callstack 0
   391                           
   392                           ; 1 bytes @ 0x4
   393  00003C                     	ds	1
   394  00003D                     high_isr@i:
   395                           	opt callstack 0
   396                           
   397                           ; 1 bytes @ 0x5
   398  00003D                     	ds	1
   399  00003E                     ??_STLED316s_SPI_SendData:
   400  00003E                     ??_i2c_Wait:
   401  00003E                     ?_Read_IR:
   402                           	opt callstack 0
   403  00003E                     ?___awdiv:
   404                           	opt callstack 0
   405  00003E                     ?___awmod:
   406                           	opt callstack 0
   407  00003E                     ?___aldiv:
   408                           	opt callstack 0
   409  00003E                     Write1USART@data:
   410                           	opt callstack 0
   411  00003E                     delay_1ms@time:
   412                           	opt callstack 0
   413  00003E                     flush@i:
   414                           	opt callstack 0
   415  00003E                     flushOut@i:
   416                           	opt callstack 0
   417  00003E                     Get7Seg@Digit:
   418                           	opt callstack 0
   419  00003E                     ___awdiv@dividend:
   420                           	opt callstack 0
   421  00003E                     ___awmod@dividend:
   422                           	opt callstack 0
   423  00003E                     ___aldiv@dividend:
   424                           	opt callstack 0
   425                           
   426                           ; 4 bytes @ 0x6
   427  00003E                     	ds	1
   428  00003F                     ?_i2c_Read:
   429                           	opt callstack 0
   430  00003F                     i2c_Write@data:
   431                           	opt callstack 0
   432  00003F                     i2c_Address@mode:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436  00003F                     	ds	1
   437  000040                     ??_delay_1ms:
   438  000040                     ??_Get7Seg:
   439  000040                     STLED316s_SPI_SendData@Data:
   440                           	opt callstack 0
   441  000040                     i2c_Address@address:
   442                           	opt callstack 0
   443  000040                     readWeighingData@i:
   444                           	opt callstack 0
   445  000040                     ___awdiv@divisor:
   446                           	opt callstack 0
   447  000040                     ___awmod@divisor:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x8
   451  000040                     	ds	1
   452  000041                     ??_AD_capture_BattVoltage:
   453  000041                     STLED316s_SPI_SendData@temp:
   454                           	opt callstack 0
   455  000041                     i2c_Address@l_address:
   456                           	opt callstack 0
   457  000041                     i2c_Read@ack:
   458                           	opt callstack 0
   459                           
   460                           ; 1 bytes @ 0x9
   461  000041                     	ds	1
   462  000042                     STLED316s_SPI_SendData@i:
   463                           	opt callstack 0
   464  000042                     Get7Seg@Data:
   465                           	opt callstack 0
   466  000042                     i2c_Read@i2cReadData:
   467                           	opt callstack 0
   468  000042                     ___awdiv@counter:
   469                           	opt callstack 0
   470  000042                     ___awmod@counter:
   471                           	opt callstack 0
   472  000042                     ___aldiv@divisor:
   473                           	opt callstack 0
   474                           
   475                           ; 4 bytes @ 0xA
   476  000042                     	ds	1
   477  000043                     STLED316s_SPI_SendData@t:
   478                           	opt callstack 0
   479  000043                     ___awdiv@sign:
   480                           	opt callstack 0
   481  000043                     ___awmod@sign:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0xB
   485  000043                     	ds	1
   486  000044                     ??_InitSTLED316:
   487  000044                     ??_WriteSTLED316SErr:
   488  000044                     ??_WriteSTLED316SMode:
   489  000044                     WriteSTLED316SVibMode@v_mode:
   490                           	opt callstack 0
   491  000044                     ___awdiv@quotient:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0xC
   495  000044                     	ds	2
   496  000046                     InitSTLED316@Brightness:
   497                           	opt callstack 0
   498  000046                     WriteSTLED316SMode@msg:
   499                           	opt callstack 0
   500  000046                     WriteSTLED316SErr@msg:
   501                           	opt callstack 0
   502  000046                     ___aldiv@counter:
   503                           	opt callstack 0
   504  000046                     WriteSTLED316SData@number:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508  000046                     	ds	1
   509  000047                     ??_MotorPosition_Init:
   510  000047                     ??_Homing_Again_Auto:
   511  000047                     ___aldiv@sign:
   512                           	opt callstack 0
   513                           
   514                           ; 1 bytes @ 0xF
   515  000047                     	ds	1
   516  000048                     WriteSTLED316SData@v_mode:
   517                           	opt callstack 0
   518  000048                     ___aldiv@quotient:
   519                           	opt callstack 0
   520                           
   521                           ; 4 bytes @ 0x10
   522  000048                     	ds	1
   523  000049                     ??_Homing_Again_Manual:
   524                           
   525                           ; 1 bytes @ 0x11
   526  000049                     	ds	3
   527  00004C                     read_i2c@read_byte:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x14
   531  00004C                     	ds	2
   532                           
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 124 in file "main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;Total ram usage:        2 bytes
   557 ;; Hardware stack levels required when called:    6
   558 ;; This function calls:
   559 ;;		_AD_capture_BattVoltage
   560 ;;		_Homing_Again_Auto
   561 ;;		_Homing_Again_Manual
   562 ;;		_InitSTLED316
   563 ;;		_InitTimer1
   564 ;;		_MotorPosition_Init
   565 ;;		_ToggleVIB_Mode
   566 ;;		_Write1USART
   567 ;;		_WriteSTLED316SData
   568 ;;		_WriteSTLED316SVibMode
   569 ;;		_flush
   570 ;;		_flushOut
   571 ;;		_i2c_Init
   572 ;;		_init
   573 ;;		_initMotor
   574 ;;		_initUSART
   575 ;;		_read_i2c
   576 ;;		_write_i2c
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583  00029E                     __ptext0:
   584                           	opt callstack 0
   585  00029E                     _main:
   586                           	opt callstack 25
   587  00029E                     
   588                           ;main.c: 126:     GIE = 0;
   589  00029E  9EF2               	bcf	4082,7,c	;volatile
   590  0002A0                     
   591                           ;main.c: 127:     init();
   592  0002A0  EC1D  F00D         	call	_init	;wreg free
   593  0002A4                     
   594                           ;main.c: 128:     InitSTLED316(0x77);
   595  0002A4  0E77               	movlw	119
   596  0002A6  EC97  F00C         	call	_InitSTLED316
   597  0002AA                     
   598                           ;main.c: 129:     initMotor();
   599  0002AA  EC6F  F00F         	call	_initMotor	;wreg free
   600  0002AE                     
   601                           ;main.c: 130:     i2c_Init();
   602  0002AE  EC44  F00F         	call	_i2c_Init	;wreg free
   603  0002B2                     
   604                           ;main.c: 131:     initUSART();
   605  0002B2  ECED  F00E         	call	_initUSART	;wreg free
   606  0002B6                     
   607                           ;main.c: 132:     InitTimer1();
   608  0002B6  EC38  F00F         	call	_InitTimer1	;wreg free
   609  0002BA                     
   610                           ;main.c: 134:     LATCbits.LATC1 = 0;
   611  0002BA  928B               	bcf	139,1,c	;volatile
   612  0002BC                     
   613                           ;main.c: 135:     LATAbits.LATA2 = 0;
   614  0002BC  9489               	bcf	137,2,c	;volatile
   615  0002BE                     
   616                           ;main.c: 136:     errorcounter = 30;
   617  0002BE  0E1E               	movlw	30
   618  0002C0  6E52               	movwf	_errorcounter^0,c	;volatile
   619  0002C2  0E00               	movlw	0
   620  0002C4  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   621  0002C6  0E00               	movlw	0
   622  0002C8  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   623  0002CA  0E00               	movlw	0
   624  0002CC  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   625  0002CE                     
   626                           ;main.c: 140:    RCONbits.IPEN = 1;
   627  0002CE  8ED0               	bsf	208,7,c	;volatile
   628  0002D0                     
   629                           ;main.c: 143:    IPR1bits.RCIP = 1;
   630  0002D0  8A9F               	bsf	159,5,c	;volatile
   631  0002D2                     
   632                           ;main.c: 146:    INTCONbits.GIEH = 1;
   633  0002D2  8EF2               	bsf	242,7,c	;volatile
   634  0002D4                     
   635                           ;main.c: 147:     INTCONbits.GIE=1;
   636  0002D4  8EF2               	bsf	242,7,c	;volatile
   637  0002D6                     
   638                           ;main.c: 152:     WDTCONbits.SWDTEN = 0;
   639  0002D6  90C0               	bcf	192,0,c	;volatile
   640  0002D8                     
   641                           ;main.c: 154:     LATDbits.LATD0 = 1;
   642  0002D8  808C               	bsf	140,0,c	;volatile
   643  0002DA                     
   644                           ;main.c: 155:     LATDbits.LATD1 = 1;
   645  0002DA  828C               	bsf	140,1,c	;volatile
   646  0002DC                     
   647                           ;main.c: 157:     WriteSTLED316SData(34, 0xFF);
   648  0002DC  0E00               	movlw	0
   649  0002DE  6E47               	movwf	(WriteSTLED316SData@number+1)^0,c
   650  0002E0  0E22               	movlw	34
   651  0002E2  6E46               	movwf	WriteSTLED316SData@number^0,c
   652  0002E4  0EFF               	movlw	255
   653  0002E6  6E48               	movwf	WriteSTLED316SData@v_mode^0,c
   654  0002E8  EC40  F00C         	call	_WriteSTLED316SData	;wreg free
   655  0002EC                     
   656                           ;main.c: 158:     _delay((unsigned long)((500)*(8000000/4000.0)));
   657  0002EC  0E06               	movlw	6
   658  0002EE  0100               	movlb	0	; () banked
   659  0002F0  6F87               	movwf	(??_main+1)& (0+255),b
   660  0002F2  0E13               	movlw	19
   661  0002F4  6F86               	movwf	??_main& (0+255),b
   662  0002F6  0EAD               	movlw	173
   663  0002F8                     u3687:
   664  0002F8  2EE8               	decfsz	wreg,f,c
   665  0002FA  D7FE               	bra	u3687
   666  0002FC  2F86               	decfsz	??_main& (0+255),f,b
   667  0002FE  D7FC               	bra	u3687
   668  000300  2F87               	decfsz	(??_main+1)& (0+255),f,b
   669  000302  D7FA               	bra	u3687
   670  000304  D000               	nop2	
   671  000306                     
   672                           ;main.c: 159:     AD_capture_BattVoltage();
   673  000306  EC48  F00E         	call	_AD_capture_BattVoltage	;wreg free
   674  00030A                     
   675                           ;main.c: 167:     INTCONbits.GIE=0;
   676  00030A  9EF2               	bcf	242,7,c	;volatile
   677  00030C                     
   678                           ;main.c: 168:     ETemp = read_i2c(0x0010);
   679  00030C  0E10               	movlw	16
   680  00030E  0100               	movlb	0	; () banked
   681  000310  6F80               	movwf	read_i2c@address& (0+255),b
   682  000312  0E00               	movlw	0
   683  000314  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   684  000316  0E00               	movlw	0
   685  000318  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   686  00031A  0E00               	movlw	0
   687  00031C  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   688  00031E  EC56  F00D         	call	_read_i2c	;wreg free
   689  000322  C080  F023         	movff	?_read_i2c,_ETemp
   690  000326  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   691  00032A                     
   692                           ;main.c: 169:     INTCONbits.GIE=1;
   693  00032A  8EF2               	bsf	242,7,c	;volatile
   694  00032C                     
   695                           ;main.c: 171:     vibration_mode = ETemp & 0x00FF;
   696  00032C  C023  F032         	movff	_ETemp,_vibration_mode
   697  000330                     
   698                           ;main.c: 172:     if(vibration_mode>1)
   699  000330  0E01               	movlw	1
   700  000332  6432               	cpfsgt	_vibration_mode^0,c
   701  000334  EF9E  F001         	goto	u3281
   702  000338  EFA0  F001         	goto	u3280
   703  00033C                     u3281:
   704  00033C  EFB2  F001         	goto	l4877
   705  000340                     u3280:
   706  000340                     
   707                           ;main.c: 173:     {;main.c: 174:         vibration_mode = 1;
   708  000340  0E01               	movlw	1
   709  000342  6E32               	movwf	_vibration_mode^0,c
   710  000344                     
   711                           ;main.c: 176:         INTCONbits.GIE=0;
   712  000344  9EF2               	bcf	242,7,c	;volatile
   713  000346                     
   714                           ;main.c: 177:         write_i2c(0x0010, vibration_mode);
   715  000346  0E10               	movlw	16
   716  000348  0100               	movlb	0	; () banked
   717  00034A  6F80               	movwf	write_i2c@address& (0+255),b
   718  00034C  0E00               	movlw	0
   719  00034E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   720  000350  0E00               	movlw	0
   721  000352  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   722  000354  0E00               	movlw	0
   723  000356  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   724  000358  C032  F084         	movff	_vibration_mode,write_i2c@data
   725  00035C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   726  00035E  ECDF  F00D         	call	_write_i2c	;wreg free
   727  000362                     
   728                           ;main.c: 178:         INTCONbits.GIE=1;
   729  000362  8EF2               	bsf	242,7,c	;volatile
   730  000364                     l4877:
   731                           
   732                           ;main.c: 181:     NUM = 1;
   733  000364  0E00               	movlw	0
   734  000366  6E1A               	movwf	(_NUM+1)^0,c
   735  000368  0E01               	movlw	1
   736  00036A  6E19               	movwf	_NUM^0,c
   737                           
   738                           ;main.c: 182:     WriteSTLED316SData(NUM, vibration_mode);
   739  00036C  C019  F046         	movff	_NUM,WriteSTLED316SData@number
   740  000370  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
   741  000374  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   742  000378  EC40  F00C         	call	_WriteSTLED316SData	;wreg free
   743  00037C                     
   744                           ;main.c: 183:     NUM_REC = 1;
   745  00037C  0E00               	movlw	0
   746  00037E  6E18               	movwf	(_NUM_REC+1)^0,c
   747  000380  0E01               	movlw	1
   748  000382  6E17               	movwf	_NUM_REC^0,c
   749  000384                     
   750                           ;main.c: 188:     INTCONbits.GIE=0;
   751  000384  9EF2               	bcf	242,7,c	;volatile
   752  000386                     
   753                           ;main.c: 189:     ETemp = read_i2c(0x0020);
   754  000386  0E20               	movlw	32
   755  000388  0100               	movlb	0	; () banked
   756  00038A  6F80               	movwf	read_i2c@address& (0+255),b
   757  00038C  0E00               	movlw	0
   758  00038E  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   759  000390  0E00               	movlw	0
   760  000392  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   761  000394  0E00               	movlw	0
   762  000396  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   763  000398  EC56  F00D         	call	_read_i2c	;wreg free
   764  00039C  C080  F023         	movff	?_read_i2c,_ETemp
   765  0003A0  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   766  0003A4                     
   767                           ;main.c: 190:     INTCONbits.GIE=1;
   768  0003A4  8EF2               	bsf	242,7,c	;volatile
   769                           
   770                           ;main.c: 192:     Device_ID = ETemp & 0x00FF;
   771  0003A6  5023               	movf	_ETemp^0,w,c
   772  0003A8  6E1D               	movwf	_Device_ID^0,c
   773  0003AA  6A1E               	clrf	(_Device_ID+1)^0,c
   774  0003AC                     
   775                           ;main.c: 193:     if(Device_ID<0x31 || Device_ID>0x3A)
   776  0003AC  501E               	movf	(_Device_ID+1)^0,w,c
   777  0003AE  E109               	bnz	u3290
   778  0003B0  0E31               	movlw	49
   779  0003B2  5C1D               	subwf	_Device_ID^0,w,c
   780  0003B4  A0D8               	btfss	status,0,c
   781  0003B6  EFDF  F001         	goto	u3291
   782  0003BA  EFE1  F001         	goto	u3290
   783  0003BE                     u3291:
   784  0003BE  EFEC  F001         	goto	l4891
   785  0003C2                     u3290:
   786  0003C2  501E               	movf	(_Device_ID+1)^0,w,c
   787  0003C4  E109               	bnz	u3300
   788  0003C6  0E3B               	movlw	59
   789  0003C8  5C1D               	subwf	_Device_ID^0,w,c
   790  0003CA  A0D8               	btfss	status,0,c
   791  0003CC  EFEA  F001         	goto	u3301
   792  0003D0  EFEC  F001         	goto	u3300
   793  0003D4                     u3301:
   794  0003D4  EF01  F002         	goto	l4899
   795  0003D8                     u3300:
   796  0003D8                     l4891:
   797                           
   798                           ;main.c: 194:     {;main.c: 195:         Device_ID=0x31;
   799  0003D8  0E00               	movlw	0
   800  0003DA  6E1E               	movwf	(_Device_ID+1)^0,c
   801  0003DC  0E31               	movlw	49
   802  0003DE  6E1D               	movwf	_Device_ID^0,c
   803  0003E0                     
   804                           ;main.c: 197:         INTCONbits.GIE=0;
   805  0003E0  9EF2               	bcf	242,7,c	;volatile
   806  0003E2                     
   807                           ;main.c: 198:         write_i2c(0x0020, Device_ID);
   808  0003E2  0E20               	movlw	32
   809  0003E4  0100               	movlb	0	; () banked
   810  0003E6  6F80               	movwf	write_i2c@address& (0+255),b
   811  0003E8  0E00               	movlw	0
   812  0003EA  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   813  0003EC  0E00               	movlw	0
   814  0003EE  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   815  0003F0  0E00               	movlw	0
   816  0003F2  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   817  0003F4  C01D  F084         	movff	_Device_ID,write_i2c@data
   818  0003F8  C01E  F085         	movff	_Device_ID+1,write_i2c@data+1
   819  0003FC  ECDF  F00D         	call	_write_i2c	;wreg free
   820  000400                     
   821                           ;main.c: 199:         INTCONbits.GIE=1;
   822  000400  8EF2               	bsf	242,7,c	;volatile
   823  000402                     l4899:
   824                           
   825                           ;main.c: 205:     INTCONbits.GIE=0;
   826  000402  9EF2               	bcf	242,7,c	;volatile
   827  000404                     
   828                           ;main.c: 206:     ETemp = read_i2c(0x0060);
   829  000404  0E60               	movlw	96
   830  000406  0100               	movlb	0	; () banked
   831  000408  6F80               	movwf	read_i2c@address& (0+255),b
   832  00040A  0E00               	movlw	0
   833  00040C  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   834  00040E  0E00               	movlw	0
   835  000410  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   836  000412  0E00               	movlw	0
   837  000414  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   838  000416  EC56  F00D         	call	_read_i2c	;wreg free
   839  00041A  C080  F023         	movff	?_read_i2c,_ETemp
   840  00041E  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   841  000422                     
   842                           ;main.c: 207:     INTCONbits.GIE=1;
   843  000422  8EF2               	bsf	242,7,c	;volatile
   844  000424                     
   845                           ;main.c: 209:     pause_Time = ETemp & 0x00FF;
   846  000424  C023  F02F         	movff	_ETemp,_pause_Time	;volatile
   847  000428                     
   848                           ;main.c: 210:     if(pause_Time<0x30 || pause_Time>0x35)
   849  000428  0E2F               	movlw	47
   850  00042A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   851  00042C  EF1A  F002         	goto	u3311
   852  000430  EF1C  F002         	goto	u3310
   853  000434                     u3311:
   854  000434  EF24  F002         	goto	l4911
   855  000438                     u3310:
   856  000438  0E35               	movlw	53
   857  00043A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   858  00043C  EF22  F002         	goto	u3321
   859  000440  EF24  F002         	goto	u3320
   860  000444                     u3321:
   861  000444  EF62  F002         	goto	l4933
   862  000448                     u3320:
   863  000448                     l4911:
   864                           
   865                           ;main.c: 211:     {;main.c: 212:         pause_Time = 0x30;
   866  000448  0E30               	movlw	48
   867  00044A  6E2F               	movwf	_pause_Time^0,c	;volatile
   868                           
   869                           ;main.c: 213:         Motor_Pause_Time=0;
   870  00044C  0E00               	movlw	0
   871  00044E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   872  000450  0E00               	movlw	0
   873  000452  6E1B               	movwf	_Motor_Pause_Time^0,c
   874  000454                     
   875                           ;main.c: 215:         INTCONbits.GIE=0;
   876  000454  9EF2               	bcf	242,7,c	;volatile
   877  000456                     
   878                           ;main.c: 216:         write_i2c(0x0060, pause_Time);
   879  000456  0E60               	movlw	96
   880  000458  0100               	movlb	0	; () banked
   881  00045A  6F80               	movwf	write_i2c@address& (0+255),b
   882  00045C  0E00               	movlw	0
   883  00045E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   884  000460  0E00               	movlw	0
   885  000462  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   886  000464  0E00               	movlw	0
   887  000466  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   888  000468  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
   889  00046C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   890  00046E  ECDF  F00D         	call	_write_i2c	;wreg free
   891  000472                     
   892                           ;main.c: 217:         INTCONbits.GIE=1;
   893  000472  8EF2               	bsf	242,7,c	;volatile
   894                           
   895                           ;main.c: 218:     }
   896  000474  EF88  F002         	goto	l168
   897  000478                     l4919:
   898                           
   899                           ; BSR set to: 0
   900                           ;main.c: 225:                 Motor_Pause_Time = 0;
   901  000478  0E00               	movlw	0
   902  00047A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   903  00047C  0E00               	movlw	0
   904  00047E  6E1B               	movwf	_Motor_Pause_Time^0,c
   905                           
   906                           ;main.c: 226:                 pause_Time = 0x30;
   907  000480  0E30               	movlw	48
   908  000482  6E2F               	movwf	_pause_Time^0,c	;volatile
   909                           
   910                           ;main.c: 227:                 break;
   911  000484  EF88  F002         	goto	l168
   912  000488                     l4921:
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 230:                 Motor_Pause_Time = 1000;
   916  000488  0E03               	movlw	3
   917  00048A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   918  00048C  0EE8               	movlw	232
   919  00048E  6E1B               	movwf	_Motor_Pause_Time^0,c
   920                           
   921                           ;main.c: 231:                 break;
   922  000490  EF88  F002         	goto	l168
   923  000494                     l4923:
   924                           
   925                           ; BSR set to: 0
   926                           ;main.c: 234:                 Motor_Pause_Time = 2000;
   927  000494  0E07               	movlw	7
   928  000496  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   929  000498  0ED0               	movlw	208
   930  00049A  6E1B               	movwf	_Motor_Pause_Time^0,c
   931                           
   932                           ;main.c: 235:                 break;
   933  00049C  EF88  F002         	goto	l168
   934  0004A0                     l4925:
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 238:                  Motor_Pause_Time = 3000;
   938  0004A0  0E0B               	movlw	11
   939  0004A2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   940  0004A4  0EB8               	movlw	184
   941  0004A6  6E1B               	movwf	_Motor_Pause_Time^0,c
   942                           
   943                           ;main.c: 239:                 break;
   944  0004A8  EF88  F002         	goto	l168
   945  0004AC                     l4927:
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 242:                 Motor_Pause_Time = 4000;
   949  0004AC  0E0F               	movlw	15
   950  0004AE  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   951  0004B0  0EA0               	movlw	160
   952  0004B2  6E1B               	movwf	_Motor_Pause_Time^0,c
   953                           
   954                           ;main.c: 243:                 break;
   955  0004B4  EF88  F002         	goto	l168
   956  0004B8                     l4929:
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 246:                 Motor_Pause_Time = 5000;
   960  0004B8  0E13               	movlw	19
   961  0004BA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   962  0004BC  0E88               	movlw	136
   963  0004BE  6E1B               	movwf	_Motor_Pause_Time^0,c
   964                           
   965                           ;main.c: 247:                 break;
   966  0004C0  EF88  F002         	goto	l168
   967  0004C4                     l4933:
   968  0004C4  502F               	movf	_pause_Time^0,w,c	;volatile
   969  0004C6  0100               	movlb	0	; () banked
   970  0004C8  6F86               	movwf	??_main& (0+255),b
   971  0004CA  6B87               	clrf	(??_main+1)& (0+255),b
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ;	Chosen strategy is simple_byte
   980  0004CC  5187               	movf	(??_main+1)& (0+255),w,b
   981  0004CE  0A00               	xorlw	0	; case 0
   982  0004D0  B4D8               	btfsc	status,2,c
   983  0004D2  EF6D  F002         	goto	l5487
   984  0004D6  EF3C  F002         	goto	l4919
   985  0004DA                     l5487:
   986                           
   987                           ; BSR set to: 0
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 6, Range of values is 48 to 53
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte           19    10 (average)
   993                           ;	Chosen strategy is simple_byte
   994  0004DA  5186               	movf	??_main& (0+255),w,b
   995  0004DC  0A30               	xorlw	48	; case 48
   996  0004DE  B4D8               	btfsc	status,2,c
   997  0004E0  EF3C  F002         	goto	l4919
   998  0004E4  0A01               	xorlw	1	; case 49
   999  0004E6  B4D8               	btfsc	status,2,c
  1000  0004E8  EF44  F002         	goto	l4921
  1001  0004EC  0A03               	xorlw	3	; case 50
  1002  0004EE  B4D8               	btfsc	status,2,c
  1003  0004F0  EF4A  F002         	goto	l4923
  1004  0004F4  0A01               	xorlw	1	; case 51
  1005  0004F6  B4D8               	btfsc	status,2,c
  1006  0004F8  EF50  F002         	goto	l4925
  1007  0004FC  0A07               	xorlw	7	; case 52
  1008  0004FE  B4D8               	btfsc	status,2,c
  1009  000500  EF56  F002         	goto	l4927
  1010  000504  0A01               	xorlw	1	; case 53
  1011  000506  B4D8               	btfsc	status,2,c
  1012  000508  EF5C  F002         	goto	l4929
  1013  00050C  EF3C  F002         	goto	l4919
  1014  000510                     l168:
  1015                           
  1016                           ;main.c: 254:     INTCONbits.GIE=0;
  1017  000510  9EF2               	bcf	242,7,c	;volatile
  1018  000512                     
  1019                           ;main.c: 255:     ETemp = read_i2c(0x0050);
  1020  000512  0E50               	movlw	80
  1021  000514  0100               	movlb	0	; () banked
  1022  000516  6F80               	movwf	read_i2c@address& (0+255),b
  1023  000518  0E00               	movlw	0
  1024  00051A  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1025  00051C  0E00               	movlw	0
  1026  00051E  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1027  000520  0E00               	movlw	0
  1028  000522  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1029  000524  EC56  F00D         	call	_read_i2c	;wreg free
  1030  000528  C080  F023         	movff	?_read_i2c,_ETemp
  1031  00052C  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1032  000530                     
  1033                           ;main.c: 256:     INTCONbits.GIE=1;
  1034  000530  8EF2               	bsf	242,7,c	;volatile
  1035  000532                     
  1036                           ;main.c: 258:     delay_motor_stop_time = ETemp & 0x00FF;
  1037  000532  C023  F02D         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1038  000536                     
  1039                           ;main.c: 259:     if(delay_motor_stop_time>0x96)
  1040  000536  0E96               	movlw	150
  1041  000538  642D               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1042  00053A  EFA1  F002         	goto	u3331
  1043  00053E  EFA3  F002         	goto	u3330
  1044  000542                     u3331:
  1045  000542  EFBB  F002         	goto	l178
  1046  000546                     u3330:
  1047  000546                     
  1048                           ;main.c: 260:     {;main.c: 261:         delay_motor_stop_time=0x00;
  1049  000546  0E00               	movlw	0
  1050  000548  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  1051  00054A                     
  1052                           ;main.c: 263:         INTCONbits.GIE=0;
  1053  00054A  9EF2               	bcf	242,7,c	;volatile
  1054  00054C                     
  1055                           ;main.c: 264:         write_i2c(0x0050, delay_motor_stop_time);
  1056  00054C  0E50               	movlw	80
  1057  00054E  0100               	movlb	0	; () banked
  1058  000550  6F80               	movwf	write_i2c@address& (0+255),b
  1059  000552  0E00               	movlw	0
  1060  000554  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1061  000556  0E00               	movlw	0
  1062  000558  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1063  00055A  0E00               	movlw	0
  1064  00055C  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1065  00055E  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1066  000562  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1067  000564  ECDF  F00D         	call	_write_i2c	;wreg free
  1068  000568                     
  1069                           ;main.c: 265:         INTCONbits.GIE=1;
  1070  000568  8EF2               	bsf	242,7,c	;volatile
  1071  00056A                     
  1072                           ;main.c: 267:         Motor_Stop_Delay_Time=0;
  1073  00056A  0E00               	movlw	0
  1074  00056C  6E20               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1075  00056E  0E00               	movlw	0
  1076  000570  6E1F               	movwf	_Motor_Stop_Delay_Time^0,c
  1077                           
  1078                           ;main.c: 268:     }
  1079  000572  EFBE  F002         	goto	l179
  1080  000576                     l178:
  1081                           
  1082                           ;main.c: 270:     {;main.c: 271:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1083  000576  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1084  00057A  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1085  00057C                     l179:
  1086                           
  1087                           ;main.c: 277:     INTCONbits.GIE=0;
  1088  00057C  9EF2               	bcf	242,7,c	;volatile
  1089  00057E                     
  1090                           ;main.c: 278:     ETemp = read_i2c(0x0040);
  1091  00057E  0E40               	movlw	64
  1092  000580  0100               	movlb	0	; () banked
  1093  000582  6F80               	movwf	read_i2c@address& (0+255),b
  1094  000584  0E00               	movlw	0
  1095  000586  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1096  000588  0E00               	movlw	0
  1097  00058A  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1098  00058C  0E00               	movlw	0
  1099  00058E  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1100  000590  EC56  F00D         	call	_read_i2c	;wreg free
  1101  000594  C080  F023         	movff	?_read_i2c,_ETemp
  1102  000598  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1103  00059C                     
  1104                           ;main.c: 279:     INTCONbits.GIE=1
  1105  00059C  8EF2               	bsf	242,7,c	;volatile
  1106  00059E                     
  1107                           ;main.c: 281:     vib_Time = ETemp & 0x00FF;
  1108  00059E  C023  F02E         	movff	_ETemp,_vib_Time	;volatile
  1109  0005A2                     
  1110                           ;main.c: 282:     if( (vib_Time!=0x81 && vib_Time!=0x82 && vib_Time!=0x83 && vib_Time!=0
      +                          x84 && vib_Time!=0x85) )
  1111  0005A2  0E81               	movlw	129
  1112  0005A4  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1113  0005A6  B4D8               	btfsc	status,2,c
  1114  0005A8  EFD8  F002         	goto	u3341
  1115  0005AC  EFDA  F002         	goto	u3340
  1116  0005B0                     u3341:
  1117  0005B0  EF36  F003         	goto	l4989
  1118  0005B4                     u3340:
  1119  0005B4  0E82               	movlw	130
  1120  0005B6  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1121  0005B8  B4D8               	btfsc	status,2,c
  1122  0005BA  EFE1  F002         	goto	u3351
  1123  0005BE  EFE3  F002         	goto	u3350
  1124  0005C2                     u3351:
  1125  0005C2  EF36  F003         	goto	l4989
  1126  0005C6                     u3350:
  1127  0005C6  0E83               	movlw	131
  1128  0005C8  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1129  0005CA  B4D8               	btfsc	status,2,c
  1130  0005CC  EFEA  F002         	goto	u3361
  1131  0005D0  EFEC  F002         	goto	u3360
  1132  0005D4                     u3361:
  1133  0005D4  EF36  F003         	goto	l4989
  1134  0005D8                     u3360:
  1135  0005D8  0E84               	movlw	132
  1136  0005DA  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1137  0005DC  B4D8               	btfsc	status,2,c
  1138  0005DE  EFF3  F002         	goto	u3371
  1139  0005E2  EFF5  F002         	goto	u3370
  1140  0005E6                     u3371:
  1141  0005E6  EF36  F003         	goto	l4989
  1142  0005EA                     u3370:
  1143  0005EA  0E85               	movlw	133
  1144  0005EC  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1145  0005EE  B4D8               	btfsc	status,2,c
  1146  0005F0  EFFC  F002         	goto	u3381
  1147  0005F4  EFFE  F002         	goto	u3380
  1148  0005F8                     u3381:
  1149  0005F8  EF36  F003         	goto	l4989
  1150  0005FC                     u3380:
  1151  0005FC                     
  1152                           ;main.c: 283:     {;main.c: 284:         Vmotor_Time = 2000;
  1153  0005FC  0E07               	movlw	7
  1154  0005FE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1155  000600  0ED0               	movlw	208
  1156  000602  6E56               	movwf	_Vmotor_Time^0,c
  1157                           
  1158                           ;main.c: 285:         vib_Time = 0x82;
  1159  000604  0E82               	movlw	130
  1160  000606  6E2E               	movwf	_vib_Time^0,c	;volatile
  1161  000608                     
  1162                           ;main.c: 287:         INTCONbits.GIE=0;
  1163  000608  9EF2               	bcf	242,7,c	;volatile
  1164  00060A                     
  1165                           ;main.c: 288:         write_i2c(0x0040,vib_Time);
  1166  00060A  0E40               	movlw	64
  1167  00060C  0100               	movlb	0	; () banked
  1168  00060E  6F80               	movwf	write_i2c@address& (0+255),b
  1169  000610  0E00               	movlw	0
  1170  000612  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1171  000614  0E00               	movlw	0
  1172  000616  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1173  000618  0E00               	movlw	0
  1174  00061A  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1175  00061C  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  1176  000620  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1177  000622  ECDF  F00D         	call	_write_i2c	;wreg free
  1178  000626                     
  1179                           ;main.c: 289:         INTCONbits.GIE=1;
  1180  000626  8EF2               	bsf	242,7,c	;volatile
  1181                           
  1182                           ;main.c: 290:     }
  1183  000628  EF58  F003         	goto	l4991
  1184  00062C                     l4977:
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 296:                 Vmotor_Time=1000;
  1188  00062C  0E03               	movlw	3
  1189  00062E  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1190  000630  0EE8               	movlw	232
  1191  000632  6E56               	movwf	_Vmotor_Time^0,c
  1192                           
  1193                           ;main.c: 297:                 break;
  1194  000634  EF58  F003         	goto	l4991
  1195  000638                     l4979:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;main.c: 300:                 Vmotor_Time=2000;
  1199  000638  0E07               	movlw	7
  1200  00063A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1201  00063C  0ED0               	movlw	208
  1202  00063E  6E56               	movwf	_Vmotor_Time^0,c
  1203                           
  1204                           ;main.c: 301:                 vib_Time=0x82;
  1205  000640  0E82               	movlw	130
  1206  000642  6E2E               	movwf	_vib_Time^0,c	;volatile
  1207                           
  1208                           ;main.c: 302:                 break;
  1209  000644  EF58  F003         	goto	l4991
  1210  000648                     l4981:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;main.c: 304:                 Vmotor_Time=3000;
  1214  000648  0E0B               	movlw	11
  1215  00064A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1216  00064C  0EB8               	movlw	184
  1217  00064E  6E56               	movwf	_Vmotor_Time^0,c
  1218                           
  1219                           ;main.c: 305:                 break;
  1220  000650  EF58  F003         	goto	l4991
  1221  000654                     l4983:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 307:                 Vmotor_Time=4000;
  1225  000654  0E0F               	movlw	15
  1226  000656  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1227  000658  0EA0               	movlw	160
  1228  00065A  6E56               	movwf	_Vmotor_Time^0,c
  1229                           
  1230                           ;main.c: 308:                 break;
  1231  00065C  EF58  F003         	goto	l4991
  1232  000660                     l4985:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 310:                 Vmotor_Time=5000;
  1236  000660  0E13               	movlw	19
  1237  000662  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1238  000664  0E88               	movlw	136
  1239  000666  6E56               	movwf	_Vmotor_Time^0,c
  1240                           
  1241                           ;main.c: 311:                 break;
  1242  000668  EF58  F003         	goto	l4991
  1243  00066C                     l4989:
  1244  00066C  502E               	movf	_vib_Time^0,w,c	;volatile
  1245  00066E  0100               	movlb	0	; () banked
  1246  000670  6F86               	movwf	??_main& (0+255),b
  1247  000672  6B87               	clrf	(??_main+1)& (0+255),b
  1248                           
  1249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 1, Range of values is 0 to 0
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte            4     3 (average)
  1255                           ;	Chosen strategy is simple_byte
  1256  000674  5187               	movf	(??_main+1)& (0+255),w,b
  1257  000676  0A00               	xorlw	0	; case 0
  1258  000678  B4D8               	btfsc	status,2,c
  1259  00067A  EF41  F003         	goto	l5489
  1260  00067E  EF1C  F003         	goto	l4979
  1261  000682                     l5489:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 5, Range of values is 129 to 133
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte           16     9 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270  000682  5186               	movf	??_main& (0+255),w,b
  1271  000684  0A81               	xorlw	129	; case 129
  1272  000686  B4D8               	btfsc	status,2,c
  1273  000688  EF16  F003         	goto	l4977
  1274  00068C  0A03               	xorlw	3	; case 130
  1275  00068E  B4D8               	btfsc	status,2,c
  1276  000690  EF1C  F003         	goto	l4979
  1277  000694  0A01               	xorlw	1	; case 131
  1278  000696  B4D8               	btfsc	status,2,c
  1279  000698  EF24  F003         	goto	l4981
  1280  00069C  0A07               	xorlw	7	; case 132
  1281  00069E  B4D8               	btfsc	status,2,c
  1282  0006A0  EF2A  F003         	goto	l4983
  1283  0006A4  0A01               	xorlw	1	; case 133
  1284  0006A6  B4D8               	btfsc	status,2,c
  1285  0006A8  EF30  F003         	goto	l4985
  1286  0006AC  EF1C  F003         	goto	l4979
  1287  0006B0                     l4991:
  1288                           
  1289                           ;main.c: 335:     errorcounter = 30;
  1290  0006B0  0E1E               	movlw	30
  1291  0006B2  6E52               	movwf	_errorcounter^0,c	;volatile
  1292  0006B4  0E00               	movlw	0
  1293  0006B6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1294  0006B8  0E00               	movlw	0
  1295  0006BA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1296  0006BC  0E00               	movlw	0
  1297  0006BE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1298  0006C0                     
  1299                           ;main.c: 336:     MotorPosition_Init();
  1300  0006C0  ECA6  F009         	call	_MotorPosition_Init	;wreg free
  1301  0006C4                     
  1302                           ;main.c: 337:     LATDbits.LATD1 = 0;
  1303  0006C4  928C               	bcf	140,1,c	;volatile
  1304  0006C6                     l190:
  1305  0006C6  0004               	clrwdt		;# 
  1306  0006C8                     
  1307                           ;main.c: 345:         errorcounter = 30;
  1308  0006C8  0E1E               	movlw	30
  1309  0006CA  6E52               	movwf	_errorcounter^0,c	;volatile
  1310  0006CC  0E00               	movlw	0
  1311  0006CE  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1312  0006D0  0E00               	movlw	0
  1313  0006D2  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1314  0006D4  0E00               	movlw	0
  1315  0006D6  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1316                           
  1317                           ;main.c: 346:         AD_capture_BattVoltage();
  1318  0006D8  EC48  F00E         	call	_AD_capture_BattVoltage	;wreg free
  1319                           
  1320                           ;main.c: 348:         switch(OpMode)
  1321  0006DC  EF6E  F006         	goto	l5209
  1322  0006E0                     l192:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 355:                 NUM = NUM_REC;
  1326  0006E0  C017  F019         	movff	_NUM_REC,_NUM
  1327  0006E4  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1328                           
  1329                           ;main.c: 357:                 if (PORTBbits.RB4 == 0)
  1330  0006E8  B881               	btfsc	129,4,c	;volatile
  1331  0006EA  EF79  F003         	goto	u3391
  1332  0006EE  EF7B  F003         	goto	u3390
  1333  0006F2                     u3391:
  1334  0006F2  EF9B  F003         	goto	l193
  1335  0006F6                     u3390:
  1336  0006F6                     l194:
  1337                           
  1338                           ;main.c: 360:                     {;main.c: 361:                         if(PORTBbits.RB
      +                          2 == 0)
  1339  0006F6  B481               	btfsc	129,2,c	;volatile
  1340  0006F8  EF80  F003         	goto	u3401
  1341  0006FC  EF82  F003         	goto	u3400
  1342  000700                     u3401:
  1343  000700  EF84  F003         	goto	l195
  1344  000704                     u3400:
  1345  000704                     
  1346                           ;main.c: 362:                         {;main.c: 363:                             ToggleV
      +                          IB_Mode();
  1347  000704  EC29  F00E         	call	_ToggleVIB_Mode	;wreg free
  1348  000708                     l195:
  1349                           
  1350                           ;main.c: 366:                         WriteSTLED316SVibMode(vibration_mode);
  1351  000708  5032               	movf	_vibration_mode^0,w,c
  1352  00070A  ECB8  F00D         	call	_WriteSTLED316SVibMode
  1353  00070E                     
  1354                           ;main.c: 367:                          _delay((unsigned long)((100)*(8000000/4000.0)));
  1355  00070E  0E02               	movlw	2
  1356  000710  0100               	movlb	0	; () banked
  1357  000712  6F87               	movwf	(??_main+1)& (0+255),b
  1358  000714  0E04               	movlw	4
  1359  000716  6F86               	movwf	??_main& (0+255),b
  1360  000718  0EBA               	movlw	186
  1361  00071A                     u3697:
  1362  00071A  2EE8               	decfsz	wreg,f,c
  1363  00071C  D7FE               	bra	u3697
  1364  00071E  2F86               	decfsz	??_main& (0+255),f,b
  1365  000720  D7FC               	bra	u3697
  1366  000722  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1367  000724  D7FA               	bra	u3697
  1368  000726  F000               	nop	
  1369  000728                     
  1370                           ;main.c: 369:                     }while (PORTBbits.RB4 == 0);
  1371  000728  A881               	btfss	129,4,c	;volatile
  1372  00072A  EF99  F003         	goto	u3411
  1373  00072E  EF9B  F003         	goto	u3410
  1374  000732                     u3411:
  1375  000732  EF7B  F003         	goto	l194
  1376  000736                     u3410:
  1377  000736                     l193:
  1378                           
  1379                           ;main.c: 372:                 if ((PORTBbits.RB3 == 0) && NUM != 11)
  1380  000736  B681               	btfsc	129,3,c	;volatile
  1381  000738  EFA0  F003         	goto	u3421
  1382  00073C  EFA2  F003         	goto	u3420
  1383  000740                     u3421:
  1384  000740  EFB9  F003         	goto	l197
  1385  000744                     u3420:
  1386  000744  0E0B               	movlw	11
  1387  000746  1819               	xorwf	_NUM^0,w,c
  1388  000748  101A               	iorwf	(_NUM+1)^0,w,c
  1389  00074A  B4D8               	btfsc	status,2,c
  1390  00074C  EFAA  F003         	goto	u3431
  1391  000750  EFAC  F003         	goto	u3430
  1392  000754                     u3431:
  1393  000754  EFB9  F003         	goto	l197
  1394  000758                     u3430:
  1395  000758                     
  1396                           ;main.c: 373:                 {;main.c: 374:                     NUM = NUM + 1;
  1397  000758  0E01               	movlw	1
  1398  00075A  2419               	addwf	_NUM^0,w,c
  1399  00075C  6E19               	movwf	_NUM^0,c
  1400  00075E  0E00               	movlw	0
  1401  000760  201A               	addwfc	(_NUM+1)^0,w,c
  1402  000762  6E1A               	movwf	(_NUM+1)^0,c
  1403  000764                     l198:
  1404  000764  A681               	btfss	129,3,c	;volatile
  1405  000766  EFB7  F003         	goto	u3441
  1406  00076A  EFB9  F003         	goto	u3440
  1407  00076E                     u3441:
  1408  00076E  EFB2  F003         	goto	l198
  1409  000772                     u3440:
  1410  000772                     l197:
  1411                           
  1412                           ;main.c: 378:                 if (PORTAbits.RA5 == 0 && NUM != 0)
  1413  000772  BA80               	btfsc	128,5,c	;volatile
  1414  000774  EFBE  F003         	goto	u3451
  1415  000778  EFC0  F003         	goto	u3450
  1416  00077C                     u3451:
  1417  00077C  EFD6  F003         	goto	l201
  1418  000780                     u3450:
  1419  000780  5019               	movf	_NUM^0,w,c
  1420  000782  101A               	iorwf	(_NUM+1)^0,w,c
  1421  000784  B4D8               	btfsc	status,2,c
  1422  000786  EFC7  F003         	goto	u3461
  1423  00078A  EFC9  F003         	goto	u3460
  1424  00078E                     u3461:
  1425  00078E  EFD6  F003         	goto	l201
  1426  000792                     u3460:
  1427  000792                     
  1428                           ;main.c: 379:                 {;main.c: 380:                     NUM = NUM - 1;
  1429  000792  0EFF               	movlw	255
  1430  000794  2419               	addwf	_NUM^0,w,c
  1431  000796  6E19               	movwf	_NUM^0,c
  1432  000798  0EFF               	movlw	255
  1433  00079A  201A               	addwfc	(_NUM+1)^0,w,c
  1434  00079C  6E1A               	movwf	(_NUM+1)^0,c
  1435  00079E                     l202:
  1436  00079E  AA80               	btfss	128,5,c	;volatile
  1437  0007A0  EFD4  F003         	goto	u3471
  1438  0007A4  EFD6  F003         	goto	u3470
  1439  0007A8                     u3471:
  1440  0007A8  EFCF  F003         	goto	l202
  1441  0007AC                     u3470:
  1442  0007AC                     l201:
  1443                           
  1444                           ;main.c: 384:                 if (PORTAbits.RA4 == 0 && NUM <= 1)
  1445  0007AC  B880               	btfsc	128,4,c	;volatile
  1446  0007AE  EFDB  F003         	goto	u3481
  1447  0007B2  EFDD  F003         	goto	u3480
  1448  0007B6                     u3481:
  1449  0007B6  EFF5  F003         	goto	l205
  1450  0007BA                     u3480:
  1451  0007BA  501A               	movf	(_NUM+1)^0,w,c
  1452  0007BC  E107               	bnz	u3491
  1453  0007BE  0E02               	movlw	2
  1454  0007C0  5C19               	subwf	_NUM^0,w,c
  1455  0007C2  B0D8               	btfsc	status,0,c
  1456  0007C4  EFE6  F003         	goto	u3491
  1457  0007C8  EFE8  F003         	goto	u3490
  1458  0007CC                     u3491:
  1459  0007CC  EFF5  F003         	goto	l205
  1460  0007D0                     u3490:
  1461  0007D0                     
  1462                           ;main.c: 385:                 {;main.c: 386:                     NUM = NUM + 10;
  1463  0007D0  0E0A               	movlw	10
  1464  0007D2  2419               	addwf	_NUM^0,w,c
  1465  0007D4  6E19               	movwf	_NUM^0,c
  1466  0007D6  0E00               	movlw	0
  1467  0007D8  201A               	addwfc	(_NUM+1)^0,w,c
  1468  0007DA  6E1A               	movwf	(_NUM+1)^0,c
  1469  0007DC                     l206:
  1470  0007DC  A880               	btfss	128,4,c	;volatile
  1471  0007DE  EFF3  F003         	goto	u3501
  1472  0007E2  EFF5  F003         	goto	u3500
  1473  0007E6                     u3501:
  1474  0007E6  EFEE  F003         	goto	l206
  1475  0007EA                     u3500:
  1476  0007EA                     l205:
  1477                           
  1478                           ;main.c: 390:                 if (PORTAbits.RA3 == 0 && NUM >= 10)
  1479  0007EA  B680               	btfsc	128,3,c	;volatile
  1480  0007EC  EFFA  F003         	goto	u3511
  1481  0007F0  EFFC  F003         	goto	u3510
  1482  0007F4                     u3511:
  1483  0007F4  EF14  F004         	goto	l209
  1484  0007F8                     u3510:
  1485  0007F8  501A               	movf	(_NUM+1)^0,w,c
  1486  0007FA  E109               	bnz	u3520
  1487  0007FC  0E0A               	movlw	10
  1488  0007FE  5C19               	subwf	_NUM^0,w,c
  1489  000800  A0D8               	btfss	status,0,c
  1490  000802  EF05  F004         	goto	u3521
  1491  000806  EF07  F004         	goto	u3520
  1492  00080A                     u3521:
  1493  00080A  EF14  F004         	goto	l209
  1494  00080E                     u3520:
  1495  00080E                     
  1496                           ;main.c: 391:                 {;main.c: 392:                     NUM = NUM - 10;
  1497  00080E  0EF6               	movlw	246
  1498  000810  2419               	addwf	_NUM^0,w,c
  1499  000812  6E19               	movwf	_NUM^0,c
  1500  000814  0EFF               	movlw	255
  1501  000816  201A               	addwfc	(_NUM+1)^0,w,c
  1502  000818  6E1A               	movwf	(_NUM+1)^0,c
  1503  00081A                     l210:
  1504  00081A  A680               	btfss	128,3,c	;volatile
  1505  00081C  EF12  F004         	goto	u3531
  1506  000820  EF14  F004         	goto	u3530
  1507  000824                     u3531:
  1508  000824  EF0D  F004         	goto	l210
  1509  000828                     u3530:
  1510  000828                     l209:
  1511                           
  1512                           ;main.c: 396:                 NUM_REC = NUM;
  1513  000828  C019  F017         	movff	_NUM,_NUM_REC
  1514  00082C  C01A  F018         	movff	_NUM+1,_NUM_REC+1
  1515  000830                     
  1516                           ;main.c: 397:                 WriteSTLED316SData(NUM, vibration_mode);
  1517  000830  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1518  000834  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1519  000838  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1520  00083C  EC40  F00C         	call	_WriteSTLED316SData	;wreg free
  1521  000840                     
  1522                           ;main.c: 399:                 if (PORTBbits.RB2 == 0)
  1523  000840  B481               	btfsc	129,2,c	;volatile
  1524  000842  EF25  F004         	goto	u3541
  1525  000846  EF27  F004         	goto	u3540
  1526  00084A                     u3541:
  1527  00084A  EF37  F004         	goto	l5033
  1528  00084E                     u3540:
  1529  00084E                     
  1530                           ;main.c: 400:                 {;main.c: 401:                     Busy = 1;
  1531  00084E  0E01               	movlw	1
  1532  000850  6E33               	movwf	_Busy^0,c
  1533                           
  1534                           ;main.c: 402:                     errorcounter = 30;
  1535  000852  0E1E               	movlw	30
  1536  000854  6E52               	movwf	_errorcounter^0,c	;volatile
  1537  000856  0E00               	movlw	0
  1538  000858  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1539  00085A  0E00               	movlw	0
  1540  00085C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1541  00085E  0E00               	movlw	0
  1542  000860  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1543  000862                     
  1544                           ;main.c: 403:                     Homing_Again_Manual();
  1545  000862  EC86  F006         	call	_Homing_Again_Manual	;wreg free
  1546  000866                     
  1547                           ;main.c: 404:                     Stop = 0;
  1548  000866  0E00               	movlw	0
  1549  000868  6E35               	movwf	_Stop^0,c
  1550  00086A                     
  1551                           ;main.c: 405:                     Busy = 0;
  1552  00086A  0E00               	movlw	0
  1553  00086C  6E33               	movwf	_Busy^0,c
  1554  00086E                     l5033:
  1555                           
  1556                           ;main.c: 419:                 if(Serial_Flag==1)
  1557  00086E  0437               	decf	_Serial_Flag^0,w,c
  1558  000870  A4D8               	btfss	status,2,c
  1559  000872  EF3D  F004         	goto	u3551
  1560  000876  EF3F  F004         	goto	u3550
  1561  00087A                     u3551:
  1562  00087A  EF6A  F006         	goto	l5207
  1563  00087E                     u3550:
  1564  00087E  EF40  F006         	goto	l5203
  1565  000882                     l5037:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 426:                             if(Serial_Buffer[2] == 0xF1 && Busy == 0)
  1569  000882  0EF1               	movlw	241
  1570  000884  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1571  000886  A4D8               	btfss	status,2,c
  1572  000888  EF48  F004         	goto	u3561
  1573  00088C  EF4A  F004         	goto	u3560
  1574  000890                     u3561:
  1575  000890  EF66  F004         	goto	l5047
  1576  000894                     u3560:
  1577  000894                     
  1578                           ; BSR set to: 0
  1579  000894  5033               	movf	_Busy^0,w,c
  1580  000896  A4D8               	btfss	status,2,c
  1581  000898  EF50  F004         	goto	u3571
  1582  00089C  EF52  F004         	goto	u3570
  1583  0008A0                     u3571:
  1584  0008A0  EF66  F004         	goto	l5047
  1585  0008A4                     u3570:
  1586  0008A4                     
  1587                           ; BSR set to: 0
  1588                           ;main.c: 427:                             {;main.c: 428:                                
      +                           Stop = 0;
  1589  0008A4  0E00               	movlw	0
  1590  0008A6  6E35               	movwf	_Stop^0,c
  1591                           
  1592                           ;main.c: 429:                                 Busy = 1;
  1593  0008A8  0E01               	movlw	1
  1594  0008AA  6E33               	movwf	_Busy^0,c
  1595  0008AC                     
  1596                           ; BSR set to: 0
  1597                           ;main.c: 430:                                 NUM = NUM_REC;
  1598  0008AC  C017  F019         	movff	_NUM_REC,_NUM
  1599  0008B0  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1600                           
  1601                           ;main.c: 432:                                 errorcounter = 30;
  1602  0008B4  0E1E               	movlw	30
  1603  0008B6  6E52               	movwf	_errorcounter^0,c	;volatile
  1604  0008B8  0E00               	movlw	0
  1605  0008BA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1606  0008BC  0E00               	movlw	0
  1607  0008BE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1608  0008C0  0E00               	movlw	0
  1609  0008C2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1610  0008C4                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 433:                                 Homing_Again_Auto();
  1613  0008C4  EC0D  F008         	call	_Homing_Again_Auto	;wreg free
  1614                           
  1615                           ;main.c: 435:                             }
  1616  0008C8  EFC4  F004         	goto	l5077
  1617  0008CC                     l5047:
  1618                           
  1619                           ; BSR set to: 0
  1620  0008CC  0EF2               	movlw	242
  1621  0008CE  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1622  0008D0  A4D8               	btfss	status,2,c
  1623  0008D2  EF6D  F004         	goto	u3581
  1624  0008D6  EF6F  F004         	goto	u3580
  1625  0008DA                     u3581:
  1626  0008DA  EFC4  F004         	goto	l5077
  1627  0008DE                     u3580:
  1628  0008DE                     
  1629                           ; BSR set to: 0
  1630  0008DE  5033               	movf	_Busy^0,w,c
  1631  0008E0  A4D8               	btfss	status,2,c
  1632  0008E2  EF75  F004         	goto	u3591
  1633  0008E6  EF77  F004         	goto	u3590
  1634  0008EA                     u3591:
  1635  0008EA  EFC4  F004         	goto	l5077
  1636  0008EE                     u3590:
  1637  0008EE                     
  1638                           ; BSR set to: 0
  1639                           ;main.c: 437:                            {;main.c: 438:                                 
      +                          Stop = 0;
  1640  0008EE  0E00               	movlw	0
  1641  0008F0  6E35               	movwf	_Stop^0,c
  1642                           
  1643                           ;main.c: 439:                                 Busy = 1;
  1644  0008F2  0E01               	movlw	1
  1645  0008F4  6E33               	movwf	_Busy^0,c
  1646  0008F6                     
  1647                           ; BSR set to: 0
  1648                           ;main.c: 440:                                 NUM = NUM_REC;
  1649  0008F6  C017  F019         	movff	_NUM_REC,_NUM
  1650  0008FA  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1651  0008FE                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 441:                                 WriteSTLED316SData(NUM, vibration_mode);
  1654  0008FE  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1655  000902  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1656  000906  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1657  00090A  EC40  F00C         	call	_WriteSTLED316SData	;wreg free
  1658  00090E                     
  1659                           ;main.c: 443:                                 errorcounter = 30;
  1660  00090E  0E1E               	movlw	30
  1661  000910  6E52               	movwf	_errorcounter^0,c	;volatile
  1662  000912  0E00               	movlw	0
  1663  000914  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1664  000916  0E00               	movlw	0
  1665  000918  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1666  00091A  0E00               	movlw	0
  1667  00091C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1668  00091E                     
  1669                           ;main.c: 444:                                 Homing_Again_Manual();
  1670  00091E  EC86  F006         	call	_Homing_Again_Manual	;wreg free
  1671  000922                     
  1672                           ;main.c: 447:                                 if(Stop == 0)
  1673  000922  5035               	movf	_Stop^0,w,c
  1674  000924  A4D8               	btfss	status,2,c
  1675  000926  EF97  F004         	goto	u3601
  1676  00092A  EF99  F004         	goto	u3600
  1677  00092E                     u3601:
  1678  00092E  EFC4  F004         	goto	l5077
  1679  000932                     u3600:
  1680  000932                     
  1681                           ;main.c: 448:                                 {;main.c: 449:                            
      +                                   Serial_Buffer_Out[0] = 0xA5;
  1682  000932  0EA5               	movlw	165
  1683  000934  0100               	movlb	0	; () banked
  1684  000936  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1685                           
  1686                           ;main.c: 450:                                     Serial_Buffer_Out[1] = 0x44;
  1687  000938  0E44               	movlw	68
  1688  00093A  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  1689                           
  1690                           ;main.c: 451:                                     Serial_Buffer_Out[2] = 0xF9;
  1691  00093C  0EF9               	movlw	249
  1692  00093E  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  1693                           
  1694                           ;main.c: 452:                                     Serial_Buffer_Out[3] = 0X3D;
  1695  000940  0E3D               	movlw	61
  1696  000942  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  1697                           
  1698                           ;main.c: 453:                                     Serial_Buffer_Out[4] = 0x5A;
  1699  000944  0E5A               	movlw	90
  1700  000946  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  1701  000948                     
  1702                           ; BSR set to: 0
  1703                           ;main.c: 455:                                     INTCONbits.GIE=0;
  1704  000948  9EF2               	bcf	242,7,c	;volatile
  1705                           
  1706                           ;main.c: 456:                                     for (i=0; i<5;i++)
  1707  00094A  0E00               	movlw	0
  1708  00094C  6E16               	movwf	(_i+1)^0,c
  1709  00094E  0E00               	movlw	0
  1710  000950  6E15               	movwf	_i^0,c
  1711  000952                     l5067:
  1712  000952  5016               	movf	(_i+1)^0,w,c
  1713  000954  E109               	bnz	u3610
  1714  000956  0E05               	movlw	5
  1715  000958  5C15               	subwf	_i^0,w,c
  1716  00095A  A0D8               	btfss	status,0,c
  1717  00095C  EFB2  F004         	goto	u3611
  1718  000960  EFB4  F004         	goto	u3610
  1719  000964                     u3611:
  1720  000964  EFB6  F004         	goto	l5071
  1721  000968                     u3610:
  1722  000968  EFC3  F004         	goto	l223
  1723  00096C                     l5071:
  1724                           
  1725                           ;main.c: 457:                                     {;main.c: 458:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  1726  00096C  0E60               	movlw	low _Serial_Buffer_Out
  1727  00096E  2415               	addwf	_i^0,w,c
  1728  000970  6ED9               	movwf	fsr2l,c
  1729  000972  0E00               	movlw	high _Serial_Buffer_Out
  1730  000974  2016               	addwfc	(_i+1)^0,w,c
  1731  000976  6EDA               	movwf	fsr2h,c
  1732  000978  50DF               	movf	indf2,w,c
  1733  00097A  EC4F  F00F         	call	_Write1USART
  1734  00097E                     
  1735                           ;main.c: 459:                                     }
  1736  00097E  4A15               	infsnz	_i^0,f,c
  1737  000980  2A16               	incf	(_i+1)^0,f,c
  1738  000982  EFA9  F004         	goto	l5067
  1739  000986                     l223:
  1740                           
  1741                           ;main.c: 460:                                     INTCONbits.GIE=1;
  1742  000986  8EF2               	bsf	242,7,c	;volatile
  1743  000988                     l5077:
  1744                           
  1745                           ;main.c: 464:                                 flush();
  1746  000988  EC67  F00E         	call	_flush	;wreg free
  1747                           
  1748                           ;main.c: 465:                                 flushOut();
  1749  00098C  EC84  F00E         	call	_flushOut	;wreg free
  1750  000990                     
  1751                           ;main.c: 466:                                 Stop = 0;
  1752  000990  0E00               	movlw	0
  1753  000992  6E35               	movwf	_Stop^0,c
  1754  000994                     l5081:
  1755                           
  1756                           ;main.c: 467:                                 Busy = 0;
  1757  000994  0E00               	movlw	0
  1758  000996  6E33               	movwf	_Busy^0,c
  1759                           
  1760                           ;main.c: 468:                                 break;
  1761  000998  EF62  F006         	goto	l5205
  1762  00099C                     l5083:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;main.c: 473:                             if(Busy==0)
  1766  00099C  5033               	movf	_Busy^0,w,c
  1767  00099E  A4D8               	btfss	status,2,c
  1768  0009A0  EFD4  F004         	goto	u3621
  1769  0009A4  EFD6  F004         	goto	u3620
  1770  0009A8                     u3621:
  1771  0009A8  EF62  F006         	goto	l5205
  1772  0009AC                     u3620:
  1773  0009AC                     
  1774                           ; BSR set to: 0
  1775                           ;main.c: 474:                             {;main.c: 475:                                
      +                           Busy = 1;
  1776  0009AC  0E01               	movlw	1
  1777  0009AE  6E33               	movwf	_Busy^0,c
  1778  0009B0                     
  1779                           ; BSR set to: 0
  1780                           ;main.c: 479:                                     pause_Time = Serial_Buffer[2];
  1781  0009B0  C003  F02F         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  1782                           
  1783                           ;main.c: 480:                                     switch(pause_Time)
  1784  0009B4  EF02  F005         	goto	l5103
  1785  0009B8                     l5089:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 484:                                             Motor_Pause_Time = 0;
  1789  0009B8  0E00               	movlw	0
  1790  0009BA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1791  0009BC  0E00               	movlw	0
  1792  0009BE  6E1B               	movwf	_Motor_Pause_Time^0,c
  1793                           
  1794                           ;main.c: 485:                                             pause_Time = 0x30;
  1795  0009C0  0E30               	movlw	48
  1796  0009C2  6E2F               	movwf	_pause_Time^0,c	;volatile
  1797                           
  1798                           ;main.c: 486:                                             break;
  1799  0009C4  EF27  F005         	goto	l230
  1800  0009C8                     l5091:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;main.c: 489:                                             Motor_Pause_Time = 1000;
  1804  0009C8  0E03               	movlw	3
  1805  0009CA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1806  0009CC  0EE8               	movlw	232
  1807  0009CE  6E1B               	movwf	_Motor_Pause_Time^0,c
  1808                           
  1809                           ;main.c: 490:                                             break;
  1810  0009D0  EF27  F005         	goto	l230
  1811  0009D4                     l5093:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 493:                                             Motor_Pause_Time = 2000;
  1815  0009D4  0E07               	movlw	7
  1816  0009D6  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1817  0009D8  0ED0               	movlw	208
  1818  0009DA  6E1B               	movwf	_Motor_Pause_Time^0,c
  1819                           
  1820                           ;main.c: 494:                                             break;
  1821  0009DC  EF27  F005         	goto	l230
  1822  0009E0                     l5095:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 497:                                             Motor_Pause_Time = 3000;
  1826  0009E0  0E0B               	movlw	11
  1827  0009E2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1828  0009E4  0EB8               	movlw	184
  1829  0009E6  6E1B               	movwf	_Motor_Pause_Time^0,c
  1830                           
  1831                           ;main.c: 498:                                             break;
  1832  0009E8  EF27  F005         	goto	l230
  1833  0009EC                     l5097:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 501:                                             Motor_Pause_Time = 4000;
  1837  0009EC  0E0F               	movlw	15
  1838  0009EE  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1839  0009F0  0EA0               	movlw	160
  1840  0009F2  6E1B               	movwf	_Motor_Pause_Time^0,c
  1841                           
  1842                           ;main.c: 502:                                             break;
  1843  0009F4  EF27  F005         	goto	l230
  1844  0009F8                     l5099:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 505:                                             Motor_Pause_Time = 5000;
  1848  0009F8  0E13               	movlw	19
  1849  0009FA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1850  0009FC  0E88               	movlw	136
  1851  0009FE  6E1B               	movwf	_Motor_Pause_Time^0,c
  1852                           
  1853                           ;main.c: 506:                                             break;
  1854  000A00  EF27  F005         	goto	l230
  1855  000A04                     l5103:
  1856                           
  1857                           ; BSR set to: 0
  1858  000A04  502F               	movf	_pause_Time^0,w,c	;volatile
  1859  000A06  6F86               	movwf	??_main& (0+255),b
  1860  000A08  6B87               	clrf	(??_main+1)& (0+255),b
  1861                           
  1862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1863                           ; Switch size 1, requested type "simple"
  1864                           ; Number of cases is 1, Range of values is 0 to 0
  1865                           ; switch strategies available:
  1866                           ; Name         Instructions Cycles
  1867                           ; simple_byte            4     3 (average)
  1868                           ;	Chosen strategy is simple_byte
  1869  000A0A  5187               	movf	(??_main+1)& (0+255),w,b
  1870  000A0C  0A00               	xorlw	0	; case 0
  1871  000A0E  B4D8               	btfsc	status,2,c
  1872  000A10  EF0C  F005         	goto	l5491
  1873  000A14  EFDC  F004         	goto	l5089
  1874  000A18                     l5491:
  1875                           
  1876                           ; BSR set to: 0
  1877                           ; Switch size 1, requested type "simple"
  1878                           ; Number of cases is 6, Range of values is 48 to 53
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte           19    10 (average)
  1882                           ;	Chosen strategy is simple_byte
  1883  000A18  5186               	movf	??_main& (0+255),w,b
  1884  000A1A  0A30               	xorlw	48	; case 48
  1885  000A1C  B4D8               	btfsc	status,2,c
  1886  000A1E  EFDC  F004         	goto	l5089
  1887  000A22  0A01               	xorlw	1	; case 49
  1888  000A24  B4D8               	btfsc	status,2,c
  1889  000A26  EFE4  F004         	goto	l5091
  1890  000A2A  0A03               	xorlw	3	; case 50
  1891  000A2C  B4D8               	btfsc	status,2,c
  1892  000A2E  EFEA  F004         	goto	l5093
  1893  000A32  0A01               	xorlw	1	; case 51
  1894  000A34  B4D8               	btfsc	status,2,c
  1895  000A36  EFF0  F004         	goto	l5095
  1896  000A3A  0A07               	xorlw	7	; case 52
  1897  000A3C  B4D8               	btfsc	status,2,c
  1898  000A3E  EFF6  F004         	goto	l5097
  1899  000A42  0A01               	xorlw	1	; case 53
  1900  000A44  B4D8               	btfsc	status,2,c
  1901  000A46  EFFC  F004         	goto	l5099
  1902  000A4A  EFDC  F004         	goto	l5089
  1903  000A4E                     l230:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 511:                                 INTCONbits.GIE=0;
  1907  000A4E  9EF2               	bcf	242,7,c	;volatile
  1908  000A50                     
  1909                           ; BSR set to: 0
  1910                           ;main.c: 512:                                 write_i2c(0x0060, pause_Time);
  1911  000A50  0E60               	movlw	96
  1912  000A52  6F80               	movwf	write_i2c@address& (0+255),b
  1913  000A54  0E00               	movlw	0
  1914  000A56  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1915  000A58  0E00               	movlw	0
  1916  000A5A  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1917  000A5C  0E00               	movlw	0
  1918  000A5E  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1919  000A60  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
  1920  000A64  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1921  000A66  ECDF  F00D         	call	_write_i2c	;wreg free
  1922  000A6A                     
  1923                           ;main.c: 513:                                 INTCONbits.GIE=1;
  1924  000A6A  8EF2               	bsf	242,7,c	;volatile
  1925  000A6C                     
  1926                           ;main.c: 515:                                 flush();
  1927  000A6C  EC67  F00E         	call	_flush	;wreg free
  1928  000A70  EFCA  F004         	goto	l5081
  1929  000A74                     l5113:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 523:                             if(Busy==0)
  1933  000A74  5033               	movf	_Busy^0,w,c
  1934  000A76  A4D8               	btfss	status,2,c
  1935  000A78  EF40  F005         	goto	u3631
  1936  000A7C  EF42  F005         	goto	u3630
  1937  000A80                     u3631:
  1938  000A80  EF62  F006         	goto	l5205
  1939  000A84                     u3630:
  1940  000A84                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 524:                             {;main.c: 525:                                
      +                           if (Serial_Buffer[2] == 0x00)
  1943  000A84  5003               	movf	(_Serial_Buffer+2)^0,w,c
  1944  000A86  A4D8               	btfss	status,2,c
  1945  000A88  EF48  F005         	goto	u3641
  1946  000A8C  EF4A  F005         	goto	u3640
  1947  000A90                     u3641:
  1948  000A90  EFBB  F005         	goto	l5155
  1949  000A94                     u3640:
  1950  000A94                     
  1951                           ; BSR set to: 0
  1952                           ;main.c: 526:                                 {;main.c: 527:                            
      +                                   Busy = 1;
  1953  000A94  0E01               	movlw	1
  1954  000A96  6E33               	movwf	_Busy^0,c
  1955  000A98                     
  1956                           ; BSR set to: 0
  1957                           ;main.c: 529:                                     INTCONbits.GIE=0;
  1958  000A98  9EF2               	bcf	242,7,c	;volatile
  1959  000A9A                     
  1960                           ; BSR set to: 0
  1961                           ;main.c: 530:                                     pause_Time = read_i2c(0x0060);
  1962  000A9A  0E60               	movlw	96
  1963  000A9C  6F80               	movwf	read_i2c@address& (0+255),b
  1964  000A9E  0E00               	movlw	0
  1965  000AA0  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1966  000AA2  0E00               	movlw	0
  1967  000AA4  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1968  000AA6  0E00               	movlw	0
  1969  000AA8  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1970  000AAA  EC56  F00D         	call	_read_i2c	;wreg free
  1971  000AAE  0100               	movlb	0	; () banked
  1972  000AB0  5180               	movf	?_read_i2c& (0+255),w,b
  1973  000AB2  6E2F               	movwf	_pause_Time^0,c	;volatile
  1974  000AB4                     
  1975                           ; BSR set to: 0
  1976                           ;main.c: 531:                                     vib_Time = read_i2c(0x0040);
  1977  000AB4  0E40               	movlw	64
  1978  000AB6  6F80               	movwf	read_i2c@address& (0+255),b
  1979  000AB8  0E00               	movlw	0
  1980  000ABA  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1981  000ABC  0E00               	movlw	0
  1982  000ABE  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1983  000AC0  0E00               	movlw	0
  1984  000AC2  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1985  000AC4  EC56  F00D         	call	_read_i2c	;wreg free
  1986  000AC8  0100               	movlb	0	; () banked
  1987  000ACA  5180               	movf	?_read_i2c& (0+255),w,b
  1988  000ACC  6E2E               	movwf	_vib_Time^0,c	;volatile
  1989  000ACE                     
  1990                           ; BSR set to: 0
  1991                           ;main.c: 532:                                     Motor_Speed = read_i2c(0x0030);
  1992  000ACE  0E30               	movlw	48
  1993  000AD0  6F80               	movwf	read_i2c@address& (0+255),b
  1994  000AD2  0E00               	movlw	0
  1995  000AD4  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1996  000AD6  0E00               	movlw	0
  1997  000AD8  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1998  000ADA  0E00               	movlw	0
  1999  000ADC  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2000  000ADE  EC56  F00D         	call	_read_i2c	;wreg free
  2001  000AE2  C080  F021         	movff	?_read_i2c,_Motor_Speed
  2002  000AE6  C081  F022         	movff	?_read_i2c+1,_Motor_Speed+1
  2003  000AEA                     
  2004                           ;main.c: 533:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2005  000AEA  0E50               	movlw	80
  2006  000AEC  0100               	movlb	0	; () banked
  2007  000AEE  6F80               	movwf	read_i2c@address& (0+255),b
  2008  000AF0  0E00               	movlw	0
  2009  000AF2  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2010  000AF4  0E00               	movlw	0
  2011  000AF6  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2012  000AF8  0E00               	movlw	0
  2013  000AFA  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2014  000AFC  EC56  F00D         	call	_read_i2c	;wreg free
  2015  000B00  0100               	movlb	0	; () banked
  2016  000B02  5180               	movf	?_read_i2c& (0+255),w,b
  2017  000B04  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  2018  000B06                     
  2019                           ; BSR set to: 0
  2020                           ;main.c: 534:                                     INTCONbits.GIE=1;
  2021  000B06  8EF2               	bsf	242,7,c	;volatile
  2022                           
  2023                           ;main.c: 536:                                     Serial_Buffer_Out[0] = 0x51;
  2024  000B08  0E51               	movlw	81
  2025  000B0A  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2026  000B0C                     
  2027                           ; BSR set to: 0
  2028                           ;main.c: 537:                                     Serial_Buffer_Out[1] = pause_Time;
  2029  000B0C  C02F  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2030  000B10                     
  2031                           ; BSR set to: 0
  2032                           ;main.c: 538:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2033  000B10  C021  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2034  000B14                     
  2035                           ; BSR set to: 0
  2036                           ;main.c: 539:                                     Serial_Buffer_Out[3] = vib_Time;
  2037  000B14  C02E  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2038  000B18                     
  2039                           ; BSR set to: 0
  2040                           ;main.c: 540:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2041  000B18  C02D  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2042  000B1C                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 542:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2045  000B1C  0E02               	movlw	2
  2046  000B1E  0100               	movlb	0	; () banked
  2047  000B20  6F87               	movwf	(??_main+1)& (0+255),b
  2048  000B22  0E04               	movlw	4
  2049  000B24  6F86               	movwf	??_main& (0+255),b
  2050  000B26  0EBA               	movlw	186
  2051  000B28                     u3707:
  2052  000B28  2EE8               	decfsz	wreg,f,c
  2053  000B2A  D7FE               	bra	u3707
  2054  000B2C  2F86               	decfsz	??_main& (0+255),f,b
  2055  000B2E  D7FC               	bra	u3707
  2056  000B30  2F87               	decfsz	(??_main+1)& (0+255),f,b
  2057  000B32  D7FA               	bra	u3707
  2058  000B34  F000               	nop	
  2059  000B36                     
  2060                           ;main.c: 544:                                     INTCONbits.GIE=0;
  2061  000B36  9EF2               	bcf	242,7,c	;volatile
  2062  000B38                     
  2063                           ;main.c: 545:                                     for (i=0; i<5;i++)
  2064  000B38  0E00               	movlw	0
  2065  000B3A  6E16               	movwf	(_i+1)^0,c
  2066  000B3C  0E00               	movlw	0
  2067  000B3E  6E15               	movwf	_i^0,c
  2068  000B40                     l5145:
  2069  000B40  5016               	movf	(_i+1)^0,w,c
  2070  000B42  E109               	bnz	u3650
  2071  000B44  0E05               	movlw	5
  2072  000B46  5C15               	subwf	_i^0,w,c
  2073  000B48  A0D8               	btfss	status,0,c
  2074  000B4A  EFA9  F005         	goto	u3651
  2075  000B4E  EFAB  F005         	goto	u3650
  2076  000B52                     u3651:
  2077  000B52  EFAD  F005         	goto	l5149
  2078  000B56                     u3650:
  2079  000B56  EFBA  F005         	goto	l240
  2080  000B5A                     l5149:
  2081                           
  2082                           ;main.c: 546:                                     {;main.c: 547:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  2083  000B5A  0E60               	movlw	low _Serial_Buffer_Out
  2084  000B5C  2415               	addwf	_i^0,w,c
  2085  000B5E  6ED9               	movwf	fsr2l,c
  2086  000B60  0E00               	movlw	high _Serial_Buffer_Out
  2087  000B62  2016               	addwfc	(_i+1)^0,w,c
  2088  000B64  6EDA               	movwf	fsr2h,c
  2089  000B66  50DF               	movf	indf2,w,c
  2090  000B68  EC4F  F00F         	call	_Write1USART
  2091  000B6C                     
  2092                           ;main.c: 548:                                     }
  2093  000B6C  4A15               	infsnz	_i^0,f,c
  2094  000B6E  2A16               	incf	(_i+1)^0,f,c
  2095  000B70  EFA0  F005         	goto	l5145
  2096  000B74                     l240:
  2097                           
  2098                           ;main.c: 549:                                     INTCONbits.GIE=1;
  2099  000B74  8EF2               	bsf	242,7,c	;volatile
  2100  000B76                     l5155:
  2101                           
  2102                           ;main.c: 551:                                 flushOut();
  2103  000B76  EC84  F00E         	call	_flushOut	;wreg free
  2104  000B7A  EFCA  F004         	goto	l5081
  2105  000B7E                     l5159:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;main.c: 588:                             if(Busy == 0)
  2109  000B7E  5033               	movf	_Busy^0,w,c
  2110  000B80  A4D8               	btfss	status,2,c
  2111  000B82  EFC5  F005         	goto	u3661
  2112  000B86  EFC7  F005         	goto	u3660
  2113  000B8A                     u3661:
  2114  000B8A  EF1F  F006         	goto	l5185
  2115  000B8E                     u3660:
  2116  000B8E                     
  2117                           ; BSR set to: 0
  2118                           ;main.c: 589:                             {;main.c: 590:                                
      +                           Busy = 1;
  2119  000B8E  0E01               	movlw	1
  2120  000B90  6E33               	movwf	_Busy^0,c
  2121  000B92                     
  2122                           ; BSR set to: 0
  2123                           ;main.c: 591:                                 vib_Time = Serial_Buffer[2];
  2124  000B92  C003  F02E         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2125                           
  2126                           ;main.c: 593:                                 switch(vib_Time)
  2127  000B96  EFED  F005         	goto	l5177
  2128  000B9A                     l5165:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 596:                                         Vmotor_Time=1000;
  2132  000B9A  0E03               	movlw	3
  2133  000B9C  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2134  000B9E  0EE8               	movlw	232
  2135  000BA0  6E56               	movwf	_Vmotor_Time^0,c
  2136                           
  2137                           ;main.c: 597:                                         break;
  2138  000BA2  EF0E  F006         	goto	l245
  2139  000BA6                     l5167:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;main.c: 601:                                         Vmotor_Time=2000;
  2143  000BA6  0E07               	movlw	7
  2144  000BA8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2145  000BAA  0ED0               	movlw	208
  2146  000BAC  6E56               	movwf	_Vmotor_Time^0,c
  2147                           
  2148                           ;main.c: 602:                                         vib_Time=0x82;
  2149  000BAE  0E82               	movlw	130
  2150  000BB0  6E2E               	movwf	_vib_Time^0,c	;volatile
  2151                           
  2152                           ;main.c: 603:                                         break;
  2153  000BB2  EF0E  F006         	goto	l245
  2154  000BB6                     l5169:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;main.c: 606:                                         Vmotor_Time=3000;
  2158  000BB6  0E0B               	movlw	11
  2159  000BB8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2160  000BBA  0EB8               	movlw	184
  2161  000BBC  6E56               	movwf	_Vmotor_Time^0,c
  2162                           
  2163                           ;main.c: 607:                                         break;
  2164  000BBE  EF0E  F006         	goto	l245
  2165  000BC2                     l5171:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 610:                                         Vmotor_Time=4000;
  2169  000BC2  0E0F               	movlw	15
  2170  000BC4  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2171  000BC6  0EA0               	movlw	160
  2172  000BC8  6E56               	movwf	_Vmotor_Time^0,c
  2173                           
  2174                           ;main.c: 611:                                         break;
  2175  000BCA  EF0E  F006         	goto	l245
  2176  000BCE                     l5173:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;main.c: 614:                                         Vmotor_Time=5000;
  2180  000BCE  0E13               	movlw	19
  2181  000BD0  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2182  000BD2  0E88               	movlw	136
  2183  000BD4  6E56               	movwf	_Vmotor_Time^0,c
  2184                           
  2185                           ;main.c: 615:                                         break;
  2186  000BD6  EF0E  F006         	goto	l245
  2187  000BDA                     l5177:
  2188                           
  2189                           ; BSR set to: 0
  2190  000BDA  502E               	movf	_vib_Time^0,w,c	;volatile
  2191  000BDC  6F86               	movwf	??_main& (0+255),b
  2192  000BDE  6B87               	clrf	(??_main+1)& (0+255),b
  2193                           
  2194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2195                           ; Switch size 1, requested type "simple"
  2196                           ; Number of cases is 1, Range of values is 0 to 0
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte            4     3 (average)
  2200                           ;	Chosen strategy is simple_byte
  2201  000BE0  5187               	movf	(??_main+1)& (0+255),w,b
  2202  000BE2  0A00               	xorlw	0	; case 0
  2203  000BE4  B4D8               	btfsc	status,2,c
  2204  000BE6  EFF7  F005         	goto	l5493
  2205  000BEA  EFD3  F005         	goto	l5167
  2206  000BEE                     l5493:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ; Switch size 1, requested type "simple"
  2210                           ; Number of cases is 5, Range of values is 129 to 133
  2211                           ; switch strategies available:
  2212                           ; Name         Instructions Cycles
  2213                           ; simple_byte           16     9 (average)
  2214                           ;	Chosen strategy is simple_byte
  2215  000BEE  5186               	movf	??_main& (0+255),w,b
  2216  000BF0  0A81               	xorlw	129	; case 129
  2217  000BF2  B4D8               	btfsc	status,2,c
  2218  000BF4  EFCD  F005         	goto	l5165
  2219  000BF8  0A03               	xorlw	3	; case 130
  2220  000BFA  B4D8               	btfsc	status,2,c
  2221  000BFC  EFD3  F005         	goto	l5167
  2222  000C00  0A01               	xorlw	1	; case 131
  2223  000C02  B4D8               	btfsc	status,2,c
  2224  000C04  EFDB  F005         	goto	l5169
  2225  000C08  0A07               	xorlw	7	; case 132
  2226  000C0A  B4D8               	btfsc	status,2,c
  2227  000C0C  EFE1  F005         	goto	l5171
  2228  000C10  0A01               	xorlw	1	; case 133
  2229  000C12  B4D8               	btfsc	status,2,c
  2230  000C14  EFE7  F005         	goto	l5173
  2231  000C18  EFD3  F005         	goto	l5167
  2232  000C1C                     l245:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 617:                                     INTCONbits.GIE=0;
  2236  000C1C  9EF2               	bcf	242,7,c	;volatile
  2237  000C1E                     
  2238                           ; BSR set to: 0
  2239                           ;main.c: 618:                                     write_i2c(0x0040,vib_Time);
  2240  000C1E  0E40               	movlw	64
  2241  000C20  6F80               	movwf	write_i2c@address& (0+255),b
  2242  000C22  0E00               	movlw	0
  2243  000C24  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2244  000C26  0E00               	movlw	0
  2245  000C28  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2246  000C2A  0E00               	movlw	0
  2247  000C2C  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2248  000C2E  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  2249  000C32  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2250  000C34  ECDF  F00D         	call	_write_i2c	;wreg free
  2251  000C38                     
  2252                           ;main.c: 619:                                     INTCONbits.GIE=1;
  2253  000C38  8EF2               	bsf	242,7,c	;volatile
  2254  000C3A                     
  2255                           ;main.c: 621:                                     Busy = 0;
  2256  000C3A  0E00               	movlw	0
  2257  000C3C  6E33               	movwf	_Busy^0,c
  2258  000C3E                     l5185:
  2259                           
  2260                           ;main.c: 626:                             if(Busy == 0)
  2261  000C3E  5033               	movf	_Busy^0,w,c
  2262  000C40  A4D8               	btfss	status,2,c
  2263  000C42  EF25  F006         	goto	u3671
  2264  000C46  EF27  F006         	goto	u3670
  2265  000C4A                     u3671:
  2266  000C4A  EF62  F006         	goto	l5205
  2267  000C4E                     u3670:
  2268  000C4E                     
  2269                           ;main.c: 627:                             {;main.c: 628:                                
      +                           Busy = 1;
  2270  000C4E  0E01               	movlw	1
  2271  000C50  6E33               	movwf	_Busy^0,c
  2272  000C52                     
  2273                           ;main.c: 629:                                 delay_motor_stop_time = Serial_Buffer[2];
  2274  000C52  C003  F02D         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2275  000C56                     
  2276                           ;main.c: 630:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2277  000C56  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2278  000C5A  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2279  000C5C                     
  2280                           ;main.c: 632:                                 INTCONbits.GIE=0;
  2281  000C5C  9EF2               	bcf	242,7,c	;volatile
  2282  000C5E                     
  2283                           ;main.c: 633:                                 write_i2c(0x0050,delay_motor_stop_time);
  2284  000C5E  0E50               	movlw	80
  2285  000C60  0100               	movlb	0	; () banked
  2286  000C62  6F80               	movwf	write_i2c@address& (0+255),b
  2287  000C64  0E00               	movlw	0
  2288  000C66  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2289  000C68  0E00               	movlw	0
  2290  000C6A  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2291  000C6C  0E00               	movlw	0
  2292  000C6E  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2293  000C70  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2294  000C74  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2295  000C76  ECDF  F00D         	call	_write_i2c	;wreg free
  2296  000C7A                     
  2297                           ;main.c: 634:                                 INTCONbits.GIE=1;
  2298  000C7A  8EF2               	bsf	242,7,c	;volatile
  2299  000C7C  EFCA  F004         	goto	l5081
  2300  000C80                     l5203:
  2301  000C80  5002               	movf	(_Serial_Buffer+1)^0,w,c
  2302  000C82  0100               	movlb	0	; () banked
  2303  000C84  6F86               	movwf	??_main& (0+255),b
  2304  000C86  6B87               	clrf	(??_main+1)& (0+255),b
  2305                           
  2306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2307                           ; Switch size 1, requested type "simple"
  2308                           ; Number of cases is 1, Range of values is 0 to 0
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte            4     3 (average)
  2312                           ;	Chosen strategy is simple_byte
  2313  000C88  5187               	movf	(??_main+1)& (0+255),w,b
  2314  000C8A  0A00               	xorlw	0	; case 0
  2315  000C8C  B4D8               	btfsc	status,2,c
  2316  000C8E  EF4B  F006         	goto	l5495
  2317  000C92  EF62  F006         	goto	l5205
  2318  000C96                     l5495:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ; Switch size 1, requested type "simple"
  2322                           ; Number of cases is 5, Range of values is 35 to 102
  2323                           ; switch strategies available:
  2324                           ; Name         Instructions Cycles
  2325                           ; simple_byte           16     9 (average)
  2326                           ;	Chosen strategy is simple_byte
  2327  000C96  5186               	movf	??_main& (0+255),w,b
  2328  000C98  0A23               	xorlw	35	; case 35
  2329  000C9A  B4D8               	btfsc	status,2,c
  2330  000C9C  EFCE  F004         	goto	l5083
  2331  000CA0  0A67               	xorlw	103	; case 68
  2332  000CA2  B4D8               	btfsc	status,2,c
  2333  000CA4  EF41  F004         	goto	l5037
  2334  000CA8  0A15               	xorlw	21	; case 81
  2335  000CAA  B4D8               	btfsc	status,2,c
  2336  000CAC  EF3A  F005         	goto	l5113
  2337  000CB0  0A34               	xorlw	52	; case 101
  2338  000CB2  B4D8               	btfsc	status,2,c
  2339  000CB4  EFBF  F005         	goto	l5159
  2340  000CB8  0A03               	xorlw	3	; case 102
  2341  000CBA  B4D8               	btfsc	status,2,c
  2342  000CBC  EF1F  F006         	goto	l5185
  2343  000CC0  EF62  F006         	goto	l5205
  2344  000CC4                     l5205:
  2345                           
  2346                           ;main.c: 643:                     Serial_Flag = 0;
  2347  000CC4  0E00               	movlw	0
  2348  000CC6  6E37               	movwf	_Serial_Flag^0,c
  2349                           
  2350                           ;main.c: 644:                     Serial_GData = 0;
  2351  000CC8  0E00               	movlw	0
  2352  000CCA  6E36               	movwf	_Serial_GData^0,c
  2353                           
  2354                           ;main.c: 645:                     OpMode = MANUAL_MODE;
  2355  000CCC  0E00               	movlw	0
  2356  000CCE  6E30               	movwf	_OpMode^0,c	;volatile
  2357                           
  2358                           ;main.c: 646:                 }
  2359  000CD0  EF63  F003         	goto	l190
  2360  000CD4                     l5207:
  2361                           
  2362                           ;main.c: 648:                 {;main.c: 649:                     OpMode = MANUAL_MODE;
  2363  000CD4  0E00               	movlw	0
  2364  000CD6  6E30               	movwf	_OpMode^0,c	;volatile
  2365  000CD8  EF63  F003         	goto	l190
  2366  000CDC                     l5209:
  2367  000CDC  5030               	movf	_OpMode^0,w,c	;volatile
  2368  000CDE  0100               	movlb	0	; () banked
  2369  000CE0  6F86               	movwf	??_main& (0+255),b
  2370  000CE2  6B87               	clrf	(??_main+1)& (0+255),b
  2371                           
  2372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2373                           ; Switch size 1, requested type "simple"
  2374                           ; Number of cases is 1, Range of values is 0 to 0
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte            4     3 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379  000CE4  5187               	movf	(??_main+1)& (0+255),w,b
  2380  000CE6  0A00               	xorlw	0	; case 0
  2381  000CE8  B4D8               	btfsc	status,2,c
  2382  000CEA  EF79  F006         	goto	l5497
  2383  000CEE  EF63  F003         	goto	l190
  2384  000CF2                     l5497:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 2, Range of values is 0 to 2
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            7     4 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393  000CF2  5186               	movf	??_main& (0+255),w,b
  2394  000CF4  0A00               	xorlw	0	; case 0
  2395  000CF6  B4D8               	btfsc	status,2,c
  2396  000CF8  EF70  F003         	goto	l192
  2397  000CFC  0A02               	xorlw	2	; case 2
  2398  000CFE  B4D8               	btfsc	status,2,c
  2399  000D00  EF37  F004         	goto	l5033
  2400  000D04  EF63  F003         	goto	l190
  2401  000D08  EF4D  F001         	goto	start
  2402  000D0C                     __end_of_main:
  2403                           	opt callstack 0
  2404                           
  2405 ;; *************** function _read_i2c *****************
  2406 ;; Defined at:
  2407 ;;		line 118 in file "i2c.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  address         4    0[BANK0 ] long 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  read_byte       2   20[COMRAM] int 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    0[BANK0 ] int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        6 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    4
  2428 ;; This function calls:
  2429 ;;		___aldiv
  2430 ;;		_i2c_Address
  2431 ;;		_i2c_Read
  2432 ;;		_i2c_Restart
  2433 ;;		_i2c_Start
  2434 ;;		_i2c_Stop
  2435 ;;		_i2c_Write
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text1
  2442  001AAC                     __ptext1:
  2443                           	opt callstack 0
  2444  001AAC                     _read_i2c:
  2445                           	opt callstack 26
  2446  001AAC                     
  2447                           ;i2c.c: 118: int read_i2c(long address);i2c.c: 119: {;i2c.c: 120:  int read_byte;;i2c.c:
      +                           123:  i2c_Start();
  2448  001AAC  EC94  F00F         	call	_i2c_Start	;wreg free
  2449                           
  2450                           ;i2c.c: 124:  i2c_Address(0xA0, 0);
  2451  001AB0  0E00               	movlw	0
  2452  001AB2  6E3F               	movwf	i2c_Address@mode^0,c
  2453  001AB4  0EA0               	movlw	160
  2454  001AB6  EC65  F00F         	call	_i2c_Address
  2455                           
  2456                           ;i2c.c: 125:  i2c_Write((unsigned char)(address/0x100));
  2457  001ABA  C080  F03E         	movff	read_i2c@address,___aldiv@dividend
  2458  001ABE  C081  F03F         	movff	read_i2c@address+1,___aldiv@dividend+1
  2459  001AC2  C082  F040         	movff	read_i2c@address+2,___aldiv@dividend+2
  2460  001AC6  C083  F041         	movff	read_i2c@address+3,___aldiv@dividend+3
  2461  001ACA  0E00               	movlw	0
  2462  001ACC  6E42               	movwf	___aldiv@divisor^0,c
  2463  001ACE  0E01               	movlw	1
  2464  001AD0  6E43               	movwf	(___aldiv@divisor+1)^0,c
  2465  001AD2  0E00               	movlw	0
  2466  001AD4  6E44               	movwf	(___aldiv@divisor+2)^0,c
  2467  001AD6  0E00               	movlw	0
  2468  001AD8  6E45               	movwf	(___aldiv@divisor+3)^0,c
  2469  001ADA  EC20  F009         	call	___aldiv	;wreg free
  2470  001ADE  503E               	movf	?___aldiv^0,w,c
  2471  001AE0  EC76  F00F         	call	_i2c_Write
  2472                           
  2473                           ;i2c.c: 126:  i2c_Write((unsigned char)(address&0xFF));
  2474  001AE4  0100               	movlb	0	; () banked
  2475  001AE6  5180               	movf	read_i2c@address& (0+255),w,b
  2476  001AE8  EC76  F00F         	call	_i2c_Write
  2477                           
  2478                           ;i2c.c: 127:  i2c_Restart();
  2479  001AEC  EC8C  F00F         	call	_i2c_Restart	;wreg free
  2480                           
  2481                           ;i2c.c: 128:  i2c_Address(0xA0, 1);
  2482  001AF0  0E01               	movlw	1
  2483  001AF2  6E3F               	movwf	i2c_Address@mode^0,c
  2484  001AF4  0EA0               	movlw	160
  2485  001AF6  EC65  F00F         	call	_i2c_Address
  2486                           
  2487                           ;i2c.c: 129:  read_byte = i2c_Read(0);
  2488  001AFA  0E00               	movlw	0
  2489  001AFC  ECA1  F00E         	call	_i2c_Read
  2490  001B00  C03F  F04C         	movff	?_i2c_Read,read_i2c@read_byte
  2491  001B04  C040  F04D         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2492                           
  2493                           ;i2c.c: 133:     i2c_Stop();
  2494  001B08  EC90  F00F         	call	_i2c_Stop	;wreg free
  2495  001B0C                     
  2496                           ;i2c.c: 134:  return (read_byte);
  2497  001B0C  C04C  F080         	movff	read_i2c@read_byte,?_read_i2c
  2498  001B10  C04D  F081         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2499  001B14  0012               	return		;funcret
  2500  001B16                     __end_of_read_i2c:
  2501                           	opt callstack 0
  2502                           
  2503 ;; *************** function _i2c_Restart *****************
  2504 ;; Defined at:
  2505 ;;		line 53 in file "i2c.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		_i2c_Wait
  2528 ;; This function is called by:
  2529 ;;		_read_i2c
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text2
  2534  001F18                     __ptext2:
  2535                           	opt callstack 0
  2536  001F18                     _i2c_Restart:
  2537                           	opt callstack 26
  2538  001F18                     
  2539                           ;i2c.c: 54:   i2c_Wait();
  2540  001F18  EC00  F00F         	call	_i2c_Wait	;wreg free
  2541  001F1C                     
  2542                           ;i2c.c: 55:  RSEN2=1;
  2543  001F1C  826B               	bsf	3947,1,c	;volatile
  2544  001F1E  0012               	return		;funcret
  2545  001F20                     __end_of_i2c_Restart:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _i2c_Read *****************
  2549 ;; Defined at:
  2550 ;;		line 85 in file "i2c.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  ack             1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  ack             1    9[COMRAM] unsigned char 
  2555 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    7[COMRAM] int 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;Total ram usage:        4 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    3
  2572 ;; This function calls:
  2573 ;;		_i2c_Wait
  2574 ;; This function is called by:
  2575 ;;		_read_i2c
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text3
  2580  001D42                     __ptext3:
  2581                           	opt callstack 0
  2582  001D42                     _i2c_Read:
  2583                           	opt callstack 26
  2584                           
  2585                           ;incstack = 0
  2586                           ;i2c_Read@ack stored from wreg
  2587  001D42  6E41               	movwf	i2c_Read@ack^0,c
  2588  001D44                     
  2589                           ;i2c.c: 85: int i2c_Read(unsigned char ack);i2c.c: 86: {;i2c.c: 90:   unsigned char i2cR
      +                          eadData;;i2c.c: 92:   i2c_Wait();
  2590  001D44  EC00  F00F         	call	_i2c_Wait	;wreg free
  2591  001D48                     
  2592                           ;i2c.c: 93:  RCEN2=1;
  2593  001D48  866B               	bsf	3947,3,c	;volatile
  2594                           
  2595                           ;i2c.c: 94:   i2c_Wait();
  2596  001D4A  EC00  F00F         	call	_i2c_Wait	;wreg free
  2597  001D4E                     
  2598                           ;i2c.c: 95:   i2cReadData = SSP2BUF;
  2599  001D4E  CF6F F042          	movff	3951,i2c_Read@i2cReadData	;volatile
  2600                           
  2601                           ;i2c.c: 96:   i2c_Wait();
  2602  001D52  EC00  F00F         	call	_i2c_Wait	;wreg free
  2603  001D56                     
  2604                           ;i2c.c: 97:   if ( ack )
  2605  001D56  5041               	movf	i2c_Read@ack^0,w,c
  2606  001D58  B4D8               	btfsc	status,2,c
  2607  001D5A  EFB1  F00E         	goto	u1711
  2608  001D5E  EFB3  F00E         	goto	u1710
  2609  001D62                     u1711:
  2610  001D62  EFB6  F00E         	goto	l526
  2611  001D66                     u1710:
  2612  001D66                     
  2613                           ;i2c.c: 98:   ACKDT2=0;
  2614  001D66  9A6B               	bcf	3947,5,c	;volatile
  2615  001D68  EFB7  F00E         	goto	l527
  2616  001D6C                     l526:
  2617                           
  2618                           ;i2c.c: 100:   ACKDT2=1;
  2619  001D6C  8A6B               	bsf	3947,5,c	;volatile
  2620  001D6E                     l527:
  2621                           
  2622                           ;i2c.c: 101:  ACKEN2=1;
  2623  001D6E  886B               	bsf	3947,4,c	;volatile
  2624                           
  2625                           ;i2c.c: 103:  return( i2cReadData );
  2626  001D70  C042  F03F         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2627  001D74  6A40               	clrf	(?_i2c_Read+1)^0,c
  2628  001D76  0012               	return		;funcret
  2629  001D78                     __end_of_i2c_Read:
  2630                           	opt callstack 0
  2631                           
  2632 ;; *************** function _initUSART *****************
  2633 ;; Defined at:
  2634 ;;		line 20 in file "usart.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text4
  2663  001DDA                     __ptext4:
  2664                           	opt callstack 0
  2665  001DDA                     _initUSART:
  2666                           	opt callstack 28
  2667  001DDA                     
  2668                           ;usart.c: 23:     TRISCbits.TRISC6 = 0;
  2669  001DDA  9C94               	bcf	148,6,c	;volatile
  2670                           
  2671                           ;usart.c: 24:     TRISCbits.TRISC7 = 1;
  2672  001DDC  8E94               	bsf	148,7,c	;volatile
  2673                           
  2674                           ;usart.c: 25:     TXSTA1bits.SYNC = 0;
  2675  001DDE  98AD               	bcf	173,4,c	;volatile
  2676                           
  2677                           ;usart.c: 26:     TXSTA1bits.TX9 = 0;
  2678  001DE0  9CAD               	bcf	173,6,c	;volatile
  2679                           
  2680                           ;usart.c: 27:     TXSTA1bits.TXEN = 1;
  2681  001DE2  8AAD               	bsf	173,5,c	;volatile
  2682                           
  2683                           ;usart.c: 28:     RCSTA1bits.RX9 = 0;
  2684  001DE4  9CAC               	bcf	172,6,c	;volatile
  2685                           
  2686                           ;usart.c: 29:     RCSTA1bits.CREN = 1;
  2687  001DE6  88AC               	bsf	172,4,c	;volatile
  2688                           
  2689                           ;usart.c: 30:     TXSTA1bits.CSRC = 0;
  2690  001DE8  9EAD               	bcf	173,7,c	;volatile
  2691                           
  2692                           ;usart.c: 31:     RCSTA1bits.ADDEN = 1;
  2693  001DEA  86AC               	bsf	172,3,c	;volatile
  2694                           
  2695                           ;usart.c: 32:     RCSTA1bits.SPEN = 1;
  2696  001DEC  8EAC               	bsf	172,7,c	;volatile
  2697                           
  2698                           ;usart.c: 35:     BAUDCON1bits.BRG16 = 0;
  2699  001DEE  967E               	bcf	126,3,c	;volatile
  2700                           
  2701                           ;usart.c: 36:     TXSTA1bits.BRGH = 1;
  2702  001DF0  84AD               	bsf	173,2,c	;volatile
  2703                           
  2704                           ;usart.c: 37:     PIE1bits.RC1IE = 1;
  2705  001DF2  8A9D               	bsf	157,5,c	;volatile
  2706                           
  2707                           ;usart.c: 38:     PIE1bits.TX1IE = 0;
  2708  001DF4  989D               	bcf	157,4,c	;volatile
  2709  001DF6                     
  2710                           ;usart.c: 40:     SPBRG1 = 25;
  2711  001DF6  0E19               	movlw	25
  2712  001DF8  6EB0               	movwf	176,c	;volatile
  2713                           
  2714                           ;usart.c: 41:     SPBRGH1 = 0;
  2715  001DFA  0E00               	movlw	0
  2716  001DFC  6E7F               	movwf	127,c	;volatile
  2717  001DFE  0012               	return		;funcret
  2718  001E00                     __end_of_initUSART:
  2719                           	opt callstack 0
  2720                           
  2721 ;; *************** function _initMotor *****************
  2722 ;; Defined at:
  2723 ;;		line 21 in file "MotorDriver.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    2
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text5
  2752  001EDE                     __ptext5:
  2753                           	opt callstack 0
  2754  001EDE                     _initMotor:
  2755                           	opt callstack 28
  2756  001EDE                     
  2757                           ;MotorDriver.c: 23:     PR4 = 0xC7;
  2758  001EDE  0EC7               	movlw	199
  2759  001EE0  6E77               	movwf	119,c	;volatile
  2760  001EE2                     
  2761                           ;MotorDriver.c: 24:     T3CONbits.T3CCP1 = 0;
  2762  001EE2  9679               	bcf	121,3,c	;volatile
  2763  001EE4                     
  2764                           ;MotorDriver.c: 25:     T3CONbits.T3CCP2 = 1;
  2765  001EE4  8C79               	bsf	121,6,c	;volatile
  2766                           
  2767                           ;MotorDriver.c: 26:     T4CON = 0x00;
  2768  001EE6  0E00               	movlw	0
  2769  001EE8  6E76               	movwf	118,c	;volatile
  2770  001EEA  0012               	return		;funcret
  2771  001EEC                     __end_of_initMotor:
  2772                           	opt callstack 0
  2773                           
  2774 ;; *************** function _init *****************
  2775 ;; Defined at:
  2776 ;;		line 18 in file "IO.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text6
  2805  001A3A                     __ptext6:
  2806                           	opt callstack 0
  2807  001A3A                     _init:
  2808                           	opt callstack 28
  2809  001A3A                     
  2810                           ;IO.c: 20:     TRISA = 0xFB;
  2811  001A3A  0EFB               	movlw	251
  2812  001A3C  6E92               	movwf	146,c	;volatile
  2813  001A3E                     
  2814                           ;IO.c: 21:     TRISB = 0XFF;
  2815  001A3E  6893               	setf	147,c	;volatile
  2816                           
  2817                           ;IO.c: 22:     TRISC = 0X84;
  2818  001A40  0E84               	movlw	132
  2819  001A42  6E94               	movwf	148,c	;volatile
  2820                           
  2821                           ;IO.c: 23:     TRISD = 0XC0;
  2822  001A44  0EC0               	movlw	192
  2823  001A46  6E95               	movwf	149,c	;volatile
  2824                           
  2825                           ;IO.c: 24:     TRISE = 0X00;
  2826  001A48  0E00               	movlw	0
  2827  001A4A  6E96               	movwf	150,c	;volatile
  2828                           
  2829                           ;IO.c: 25:     TRISF = 0X00;
  2830  001A4C  0E00               	movlw	0
  2831  001A4E  6E97               	movwf	151,c	;volatile
  2832                           
  2833                           ;IO.c: 26:     TRISG = 0X05;
  2834  001A50  0E05               	movlw	5
  2835  001A52  6E98               	movwf	152,c	;volatile
  2836  001A54                     
  2837                           ;IO.c: 29:     ADCON0bits.VCFG1 = 0;
  2838  001A54  9EC2               	bcf	194,7,c	;volatile
  2839  001A56                     
  2840                           ;IO.c: 30:  ADCON0bits.VCFG0 = 0;
  2841  001A56  9CC2               	bcf	194,6,c	;volatile
  2842  001A58                     
  2843                           ;IO.c: 31:     ADCON0bits.ADON=0;
  2844  001A58  90C2               	bcf	194,0,c	;volatile
  2845  001A5A                     
  2846                           ;IO.c: 34:  ADCON1bits.ADFM = 1;
  2847  001A5A  8EC1               	bsf	193,7,c	;volatile
  2848  001A5C                     
  2849                           ;IO.c: 35:  ADCON1bits.ADCAL = 0;
  2850  001A5C  9CC1               	bcf	193,6,c	;volatile
  2851  001A5E                     
  2852                           ;IO.c: 36:  ADCON1bits.ACQT2 = 0;
  2853  001A5E  9AC1               	bcf	193,5,c	;volatile
  2854  001A60                     
  2855                           ;IO.c: 37:  ADCON1bits.ACQT1 = 1;
  2856  001A60  88C1               	bsf	193,4,c	;volatile
  2857  001A62                     
  2858                           ;IO.c: 38:  ADCON1bits.ACQT0 = 0;
  2859  001A62  96C1               	bcf	193,3,c	;volatile
  2860  001A64                     
  2861                           ;IO.c: 39:  ADCON1bits.ADCS2 = 1;
  2862  001A64  84C1               	bsf	193,2,c	;volatile
  2863  001A66                     
  2864                           ;IO.c: 40:  ADCON1bits.ADCS1 = 0;
  2865  001A66  92C1               	bcf	193,1,c	;volatile
  2866  001A68                     
  2867                           ;IO.c: 41:  ADCON1bits.ADCS0 = 0;
  2868  001A68  90C1               	bcf	193,0,c	;volatile
  2869  001A6A                     
  2870                           ;IO.c: 46:  WDTCONbits.ADSHR = 1;
  2871  001A6A  88C0               	bsf	192,4,c	;volatile
  2872  001A6C                     
  2873                           ;IO.c: 52:  ANCON0bits.PCFG0 = 0;
  2874  001A6C  90C1               	bcf	193,0,c	;volatile
  2875  001A6E                     
  2876                           ;IO.c: 53:  ANCON0bits.PCFG1 = 1;
  2877  001A6E  82C1               	bsf	193,1,c	;volatile
  2878  001A70                     
  2879                           ;IO.c: 54:  ANCON0bits.PCFG2 = 1;
  2880  001A70  84C1               	bsf	193,2,c	;volatile
  2881  001A72                     
  2882                           ;IO.c: 55:  ANCON0bits.PCFG3 = 1;
  2883  001A72  86C1               	bsf	193,3,c	;volatile
  2884  001A74                     
  2885                           ;IO.c: 56:  ANCON0bits.PCFG4 = 1;
  2886  001A74  88C1               	bsf	193,4,c	;volatile
  2887  001A76                     
  2888                           ;IO.c: 57:     ANCON0bits.PCFG7 = 1;
  2889  001A76  8EC1               	bsf	193,7,c	;volatile
  2890  001A78                     
  2891                           ;IO.c: 59:     WDTCONbits.ADSHR = 0;
  2892  001A78  98C0               	bcf	192,4,c	;volatile
  2893  001A7A                     
  2894                           ;IO.c: 61:     INTCONbits.GIE = 1;
  2895  001A7A  8EF2               	bsf	242,7,c	;volatile
  2896                           
  2897                           ;IO.c: 66:     OSCCONbits.SCS = 0b11;
  2898  001A7C  0E03               	movlw	3
  2899  001A7E  12D3               	iorwf	211,f,c	;volatile
  2900                           
  2901                           ;IO.c: 67:     OSCCONbits.IRCF = 0b111;
  2902  001A80  0E70               	movlw	112
  2903  001A82  12D3               	iorwf	211,f,c	;volatile
  2904                           
  2905                           ;IO.c: 69:     ADRES = 0;
  2906  001A84  0E00               	movlw	0
  2907  001A86  6EC4               	movwf	196,c	;volatile
  2908  001A88  0E00               	movlw	0
  2909  001A8A  6EC3               	movwf	195,c	;volatile
  2910  001A8C                     
  2911                           ;IO.c: 72:  ADCON0bits.CHS0 = 0;
  2912  001A8C  94C2               	bcf	194,2,c	;volatile
  2913  001A8E                     
  2914                           ;IO.c: 73:  ADCON0bits.CHS1 = 0;
  2915  001A8E  96C2               	bcf	194,3,c	;volatile
  2916  001A90                     
  2917                           ;IO.c: 74:  ADCON0bits.CHS2 = 0;
  2918  001A90  98C2               	bcf	194,4,c	;volatile
  2919  001A92                     
  2920                           ;IO.c: 75:  ADCON0bits.CHS3 = 0;
  2921  001A92  9AC2               	bcf	194,5,c	;volatile
  2922  001A94                     
  2923                           ;IO.c: 76:  ADCON1bits.ADCAL = 1;
  2924  001A94  8CC1               	bsf	193,6,c	;volatile
  2925  001A96                     
  2926                           ;IO.c: 77:  ADCON0bits.ADON=1;
  2927  001A96  80C2               	bsf	194,0,c	;volatile
  2928  001A98                     
  2929                           ;IO.c: 79:  ADCON0bits.GO=1;
  2930  001A98  82C2               	bsf	194,1,c	;volatile
  2931  001A9A                     l597:
  2932  001A9A  B2C2               	btfsc	194,1,c	;volatile
  2933  001A9C  EF52  F00D         	goto	u1721
  2934  001AA0  EF54  F00D         	goto	u1720
  2935  001AA4                     u1721:
  2936  001AA4  EF4D  F00D         	goto	l597
  2937  001AA8                     u1720:
  2938  001AA8                     
  2939                           ;IO.c: 81:  ADCON1bits.ADCAL = 0;
  2940  001AA8  9CC1               	bcf	193,6,c	;volatile
  2941  001AAA  0012               	return		;funcret
  2942  001AAC                     __end_of_init:
  2943                           	opt callstack 0
  2944                           
  2945 ;; *************** function _i2c_Init *****************
  2946 ;; Defined at:
  2947 ;;		line 24 in file "i2c.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    2
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text7
  2976  001E88                     __ptext7:
  2977                           	opt callstack 0
  2978  001E88                     _i2c_Init:
  2979                           	opt callstack 28
  2980  001E88                     
  2981                           ;i2c.c: 28:  TRISD5=1;
  2982  001E88  8A95               	bsf	3989,5,c	;volatile
  2983                           
  2984                           ;i2c.c: 29:  TRISD6=1;
  2985  001E8A  8C95               	bsf	3989,6,c	;volatile
  2986  001E8C                     
  2987                           ;i2c.c: 31:  SSP2CON1 = 0b00101000;
  2988  001E8C  0E28               	movlw	40
  2989  001E8E  6E6C               	movwf	108,c	;volatile
  2990                           
  2991                           ;i2c.c: 32:  SSP2CON2 = 0x00;
  2992  001E90  0E00               	movlw	0
  2993  001E92  6E6B               	movwf	107,c	;volatile
  2994                           
  2995                           ;i2c.c: 34:     SSP2ADD = 39;
  2996  001E94  0E27               	movlw	39
  2997  001E96  6E6E               	movwf	110,c	;volatile
  2998                           
  2999                           ;i2c.c: 36:  SSP2STAT = 0b11000000;
  3000  001E98  0EC0               	movlw	192
  3001  001E9A  6E6D               	movwf	109,c	;volatile
  3002  001E9C  0012               	return		;funcret
  3003  001E9E                     __end_of_i2c_Init:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function _flush *****************
  3007 ;; Defined at:
  3008 ;;		line 1109 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  i               2    6[COMRAM] int 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    2
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text8
  3037  001CCE                     __ptext8:
  3038                           	opt callstack 0
  3039  001CCE                     _flush:
  3040                           	opt callstack 28
  3041  001CCE                     
  3042                           ;main.c: 1111:     int i;;main.c: 1113:     for(i=0; i<16; i++)
  3043  001CCE  0E00               	movlw	0
  3044  001CD0  6E3F               	movwf	(flush@i+1)^0,c
  3045  001CD2  0E00               	movlw	0
  3046  001CD4  6E3E               	movwf	flush@i^0,c
  3047  001CD6                     l3531:
  3048                           
  3049                           ;main.c: 1114:     {;main.c: 1115:         Serial_Buffer[i]=0x00;
  3050  001CD6  0E01               	movlw	low _Serial_Buffer
  3051  001CD8  243E               	addwf	flush@i^0,w,c
  3052  001CDA  6ED9               	movwf	fsr2l,c
  3053  001CDC  0E00               	movlw	high _Serial_Buffer
  3054  001CDE  203F               	addwfc	(flush@i+1)^0,w,c
  3055  001CE0  6EDA               	movwf	fsr2h,c
  3056  001CE2  0E00               	movlw	0
  3057  001CE4  6EDF               	movwf	indf2,c
  3058  001CE6                     
  3059                           ;main.c: 1116:     }
  3060  001CE6  4A3E               	infsnz	flush@i^0,f,c
  3061  001CE8  2A3F               	incf	(flush@i+1)^0,f,c
  3062  001CEA  BE3F               	btfsc	(flush@i+1)^0,7,c
  3063  001CEC  EF81  F00E         	goto	u2101
  3064  001CF0  503F               	movf	(flush@i+1)^0,w,c
  3065  001CF2  E109               	bnz	u2100
  3066  001CF4  0E10               	movlw	16
  3067  001CF6  5C3E               	subwf	flush@i^0,w,c
  3068  001CF8  A0D8               	btfss	status,0,c
  3069  001CFA  EF81  F00E         	goto	u2101
  3070  001CFE  EF83  F00E         	goto	u2100
  3071  001D02                     u2101:
  3072  001D02  EF6B  F00E         	goto	l3531
  3073  001D06                     u2100:
  3074  001D06  0012               	return		;funcret
  3075  001D08                     __end_of_flush:
  3076                           	opt callstack 0
  3077                           
  3078 ;; *************** function _WriteSTLED316SVibMode *****************
  3079 ;; Defined at:
  3080 ;;		line 253 in file "Display.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  v_mode          1    wreg     unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  v_mode          1   12[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        1 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    3
  3101 ;; This function calls:
  3102 ;;		_STLED316s_SPI_SendData
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text9
  3109  001B70                     __ptext9:
  3110                           	opt callstack 0
  3111  001B70                     _WriteSTLED316SVibMode:
  3112                           	opt callstack 27
  3113                           
  3114                           ;incstack = 0
  3115                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3116  001B70  6E44               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3117  001B72                     
  3118                           ;Display.c: 253: void WriteSTLED316SVibMode( char v_mode);Display.c: 254: {;Display.c: 2
      +                          56:  LATCbits.LATC4 = 0;
  3119  001B72  988B               	bcf	139,4,c	;volatile
  3120  001B74                     
  3121                           ;Display.c: 258:  STLED316s_SPI_SendData (0x00 );
  3122  001B74  0E00               	movlw	0
  3123  001B76  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3124  001B7A                     
  3125                           ;Display.c: 261:  LATCbits.LATC4 = 1;
  3126  001B7A  888B               	bsf	139,4,c	;volatile
  3127  001B7C                     
  3128                           ;Display.c: 263:  LATCbits.LATC4 = 0;
  3129  001B7C  988B               	bcf	139,4,c	;volatile
  3130                           
  3131                           ;Display.c: 265:  STLED316s_SPI_SendData (0x00);
  3132  001B7E  0E00               	movlw	0
  3133  001B80  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3134  001B84                     
  3135                           ;Display.c: 271:     if (v_mode == 1)
  3136  001B84  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3137  001B86  A4D8               	btfss	status,2,c
  3138  001B88  EFC8  F00D         	goto	u2971
  3139  001B8C  EFCA  F00D         	goto	u2970
  3140  001B90                     u2971:
  3141  001B90  EFD2  F00D         	goto	l4593
  3142  001B94                     u2970:
  3143  001B94                     
  3144                           ;Display.c: 272:     {;Display.c: 273:   STLED316s_SPI_SendData (0x00);
  3145  001B94  0E00               	movlw	0
  3146  001B96  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3147                           
  3148                           ;Display.c: 274:         STLED316s_SPI_SendData (0xBE);
  3149  001B9A  0EBE               	movlw	190
  3150  001B9C  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3151                           
  3152                           ;Display.c: 275:     }
  3153  001BA0  EFD8  F00D         	goto	l4595
  3154  001BA4                     l4593:
  3155                           
  3156                           ;Display.c: 277:     {;Display.c: 278:         STLED316s_SPI_SendData (0x00);
  3157  001BA4  0E00               	movlw	0
  3158  001BA6  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3159                           
  3160                           ;Display.c: 279:         STLED316s_SPI_SendData (0x3E);
  3161  001BAA  0E3E               	movlw	62
  3162  001BAC  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3163  001BB0                     l4595:
  3164                           
  3165                           ;Display.c: 282:  LATCbits.LATC4 = 1;
  3166  001BB0  888B               	bsf	139,4,c	;volatile
  3167  001BB2                     
  3168                           ;Display.c: 284:  LATCbits.LATC4 = 0;
  3169  001BB2  988B               	bcf	139,4,c	;volatile
  3170                           
  3171                           ;Display.c: 286:  STLED316s_SPI_SendData ( 0x0D );
  3172  001BB4  0E0D               	movlw	13
  3173  001BB6  ECDD  F00C         	call	_STLED316s_SPI_SendData
  3174  001BBA                     
  3175                           ;Display.c: 288:  LATCbits.LATC4 = 1;
  3176  001BBA  888B               	bsf	139,4,c	;volatile
  3177  001BBC  0012               	return		;funcret
  3178  001BBE                     __end_of_WriteSTLED316SVibMode:
  3179                           	opt callstack 0
  3180                           
  3181 ;; *************** function _ToggleVIB_Mode *****************
  3182 ;; Defined at:
  3183 ;;		line 863 in file "main.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    5
  3204 ;; This function calls:
  3205 ;;		_write_i2c
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text10
  3212  001C52                     __ptext10:
  3213                           	opt callstack 0
  3214  001C52                     _ToggleVIB_Mode:
  3215                           	opt callstack 25
  3216  001C52                     
  3217                           ;main.c: 865:     if (vibration_mode)
  3218  001C52  5032               	movf	_vibration_mode^0,w,c
  3219  001C54  B4D8               	btfsc	status,2,c
  3220  001C56  EF2F  F00E         	goto	u2961
  3221  001C5A  EF31  F00E         	goto	u2960
  3222  001C5E                     u2961:
  3223  001C5E  EF35  F00E         	goto	l4573
  3224  001C62                     u2960:
  3225  001C62                     
  3226                           ;main.c: 866:         vibration_mode = 0;
  3227  001C62  0E00               	movlw	0
  3228  001C64  6E32               	movwf	_vibration_mode^0,c
  3229  001C66  EF37  F00E         	goto	l4575
  3230  001C6A                     l4573:
  3231                           
  3232                           ;main.c: 868:         vibration_mode = 1;
  3233  001C6A  0E01               	movlw	1
  3234  001C6C  6E32               	movwf	_vibration_mode^0,c
  3235  001C6E                     l4575:
  3236                           
  3237                           ;main.c: 875:     INTCONbits.GIE=0;
  3238  001C6E  9EF2               	bcf	242,7,c	;volatile
  3239  001C70                     
  3240                           ;main.c: 876:     write_i2c(0x0010, vibration_mode);
  3241  001C70  0E10               	movlw	16
  3242  001C72  0100               	movlb	0	; () banked
  3243  001C74  6F80               	movwf	write_i2c@address& (0+255),b
  3244  001C76  0E00               	movlw	0
  3245  001C78  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  3246  001C7A  0E00               	movlw	0
  3247  001C7C  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  3248  001C7E  0E00               	movlw	0
  3249  001C80  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  3250  001C82  C032  F084         	movff	_vibration_mode,write_i2c@data
  3251  001C86  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  3252  001C88  ECDF  F00D         	call	_write_i2c	;wreg free
  3253  001C8C                     
  3254                           ;main.c: 877:     INTCONbits.GIE=1;
  3255  001C8C  8EF2               	bsf	242,7,c	;volatile
  3256  001C8E  0012               	return		;funcret
  3257  001C90                     __end_of_ToggleVIB_Mode:
  3258                           	opt callstack 0
  3259                           
  3260 ;; *************** function _write_i2c *****************
  3261 ;; Defined at:
  3262 ;;		line 107 in file "i2c.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  address         4    0[BANK0 ] long 
  3265 ;;  data            2    4[BANK0 ] int 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3277 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;Total ram usage:        6 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    4
  3284 ;; This function calls:
  3285 ;;		___aldiv
  3286 ;;		_i2c_Address
  3287 ;;		_i2c_Start
  3288 ;;		_i2c_Stop
  3289 ;;		_i2c_Write
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;;		_ToggleVIB_Mode
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text11
  3297  001BBE                     __ptext11:
  3298                           	opt callstack 0
  3299  001BBE                     _write_i2c:
  3300                           	opt callstack 26
  3301  001BBE                     
  3302                           ;i2c.c: 107: void write_i2c(long address, int data);i2c.c: 108: {;i2c.c: 109:  i2c_Start
      +                          ();
  3303  001BBE  EC94  F00F         	call	_i2c_Start	;wreg free
  3304                           
  3305                           ;i2c.c: 110:  i2c_Address(0xA0, 0);
  3306  001BC2  0E00               	movlw	0
  3307  001BC4  6E3F               	movwf	i2c_Address@mode^0,c
  3308  001BC6  0EA0               	movlw	160
  3309  001BC8  EC65  F00F         	call	_i2c_Address
  3310                           
  3311                           ;i2c.c: 111:  i2c_Write((unsigned char)(address/0x100));
  3312  001BCC  C080  F03E         	movff	write_i2c@address,___aldiv@dividend
  3313  001BD0  C081  F03F         	movff	write_i2c@address+1,___aldiv@dividend+1
  3314  001BD4  C082  F040         	movff	write_i2c@address+2,___aldiv@dividend+2
  3315  001BD8  C083  F041         	movff	write_i2c@address+3,___aldiv@dividend+3
  3316  001BDC  0E00               	movlw	0
  3317  001BDE  6E42               	movwf	___aldiv@divisor^0,c
  3318  001BE0  0E01               	movlw	1
  3319  001BE2  6E43               	movwf	(___aldiv@divisor+1)^0,c
  3320  001BE4  0E00               	movlw	0
  3321  001BE6  6E44               	movwf	(___aldiv@divisor+2)^0,c
  3322  001BE8  0E00               	movlw	0
  3323  001BEA  6E45               	movwf	(___aldiv@divisor+3)^0,c
  3324  001BEC  EC20  F009         	call	___aldiv	;wreg free
  3325  001BF0  503E               	movf	?___aldiv^0,w,c
  3326  001BF2  EC76  F00F         	call	_i2c_Write
  3327                           
  3328                           ;i2c.c: 112:  i2c_Write((unsigned char)(address&0xFF));
  3329  001BF6  0100               	movlb	0	; () banked
  3330  001BF8  5180               	movf	write_i2c@address& (0+255),w,b
  3331  001BFA  EC76  F00F         	call	_i2c_Write
  3332                           
  3333                           ;i2c.c: 113:  i2c_Write((unsigned char)data);
  3334  001BFE  0100               	movlb	0	; () banked
  3335  001C00  5184               	movf	write_i2c@data& (0+255),w,b
  3336  001C02  EC76  F00F         	call	_i2c_Write
  3337                           
  3338                           ;i2c.c: 114:   i2c_Stop();
  3339  001C06  EC90  F00F         	call	_i2c_Stop	;wreg free
  3340  001C0A  0012               	return		;funcret
  3341  001C0C                     __end_of_write_i2c:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _i2c_Write *****************
  3345 ;; Defined at:
  3346 ;;		line 66 in file "i2c.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  data            1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  data            1    7[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    3
  3367 ;; This function calls:
  3368 ;;		_i2c_Wait
  3369 ;; This function is called by:
  3370 ;;		_write_i2c
  3371 ;;		_read_i2c
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text12
  3376  001EEC                     __ptext12:
  3377                           	opt callstack 0
  3378  001EEC                     _i2c_Write:
  3379                           	opt callstack 26
  3380                           
  3381                           ;incstack = 0
  3382                           ;i2c_Write@data stored from wreg
  3383  001EEC  6E3F               	movwf	i2c_Write@data^0,c
  3384  001EEE                     
  3385                           ;i2c.c: 66: void i2c_Write(unsigned char data);i2c.c: 67: {;i2c.c: 68:   i2c_Wait();
  3386  001EEE  EC00  F00F         	call	_i2c_Wait	;wreg free
  3387  001EF2                     
  3388                           ;i2c.c: 69:   SSP2BUF = data;
  3389  001EF2  C03F  FF6F         	movff	i2c_Write@data,3951	;volatile
  3390  001EF6  0012               	return		;funcret
  3391  001EF8                     __end_of_i2c_Write:
  3392                           	opt callstack 0
  3393                           
  3394 ;; *************** function _i2c_Stop *****************
  3395 ;; Defined at:
  3396 ;;		line 59 in file "i2c.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    3
  3417 ;; This function calls:
  3418 ;;		_i2c_Wait
  3419 ;; This function is called by:
  3420 ;;		_write_i2c
  3421 ;;		_read_i2c
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text13
  3426  001F20                     __ptext13:
  3427                           	opt callstack 0
  3428  001F20                     _i2c_Stop:
  3429                           	opt callstack 26
  3430  001F20                     
  3431                           ;i2c.c: 61:   i2c_Wait();
  3432  001F20  EC00  F00F         	call	_i2c_Wait	;wreg free
  3433  001F24                     
  3434                           ;i2c.c: 62:   PEN2=1;
  3435  001F24  846B               	bsf	3947,2,c	;volatile
  3436  001F26  0012               	return		;funcret
  3437  001F28                     __end_of_i2c_Stop:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function _i2c_Start *****************
  3441 ;; Defined at:
  3442 ;;		line 46 in file "i2c.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		_i2c_Wait
  3465 ;; This function is called by:
  3466 ;;		_write_i2c
  3467 ;;		_read_i2c
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text14
  3472  001F28                     __ptext14:
  3473                           	opt callstack 0
  3474  001F28                     _i2c_Start:
  3475                           	opt callstack 26
  3476  001F28                     
  3477                           ;i2c.c: 48:   i2c_Wait();
  3478  001F28  EC00  F00F         	call	_i2c_Wait	;wreg free
  3479  001F2C                     
  3480                           ;i2c.c: 49:  SEN2=1;
  3481  001F2C  806B               	bsf	3947,0,c	;volatile
  3482  001F2E  0012               	return		;funcret
  3483  001F30                     __end_of_i2c_Start:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _i2c_Address *****************
  3487 ;; Defined at:
  3488 ;;		line 74 in file "i2c.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  address         1    wreg     unsigned char 
  3491 ;;  mode            1    7[COMRAM] unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  address         1    8[COMRAM] unsigned char 
  3494 ;;  l_address       1    9[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:        3 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    3
  3511 ;; This function calls:
  3512 ;;		_i2c_Wait
  3513 ;; This function is called by:
  3514 ;;		_write_i2c
  3515 ;;		_read_i2c
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text15
  3520  001ECA                     __ptext15:
  3521                           	opt callstack 0
  3522  001ECA                     _i2c_Address:
  3523                           	opt callstack 26
  3524                           
  3525                           ;incstack = 0
  3526                           ;i2c_Address@address stored from wreg
  3527  001ECA  6E40               	movwf	i2c_Address@address^0,c
  3528  001ECC                     
  3529                           ;i2c.c: 74: void i2c_Address(unsigned char address, unsigned char mode);i2c.c: 75: {;i2c
      +                          .c: 76:  unsigned char l_address;;i2c.c: 78:  l_address=address;
  3530  001ECC  C040  F041         	movff	i2c_Address@address,i2c_Address@l_address
  3531  001ED0                     
  3532                           ;i2c.c: 79:  l_address += mode;
  3533  001ED0  503F               	movf	i2c_Address@mode^0,w,c
  3534  001ED2  2641               	addwf	i2c_Address@l_address^0,f,c
  3535  001ED4                     
  3536                           ;i2c.c: 80:   i2c_Wait();
  3537  001ED4  EC00  F00F         	call	_i2c_Wait	;wreg free
  3538  001ED8                     
  3539                           ;i2c.c: 81:   SSP2BUF = l_address;
  3540  001ED8  C041  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3541  001EDC  0012               	return		;funcret
  3542  001EDE                     __end_of_i2c_Address:
  3543                           	opt callstack 0
  3544                           
  3545 ;; *************** function _i2c_Wait *****************
  3546 ;; Defined at:
  3547 ;;		line 41 in file "i2c.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        1 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_i2c_Start
  3572 ;;		_i2c_Restart
  3573 ;;		_i2c_Stop
  3574 ;;		_i2c_Write
  3575 ;;		_i2c_Address
  3576 ;;		_i2c_Read
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text16
  3581  001E00                     __ptext16:
  3582                           	opt callstack 0
  3583  001E00                     _i2c_Wait:
  3584                           	opt callstack 26
  3585  001E00                     l2711:
  3586  001E00  CF6B F03E          	movff	3947,??_i2c_Wait	;volatile
  3587  001E04  0E1F               	movlw	31
  3588  001E06  163E               	andwf	??_i2c_Wait^0,f,c
  3589  001E08  A4D8               	btfss	status,2,c
  3590  001E0A  EF09  F00F         	goto	u1381
  3591  001E0E  EF0B  F00F         	goto	u1380
  3592  001E12                     u1381:
  3593  001E12  EF00  F00F         	goto	l2711
  3594  001E16                     u1380:
  3595  001E16  B46D               	btfsc	109,2,c	;volatile
  3596  001E18  EF10  F00F         	goto	u1391
  3597  001E1C  EF12  F00F         	goto	u1390
  3598  001E20                     u1391:
  3599  001E20  EF00  F00F         	goto	l2711
  3600  001E24                     u1390:
  3601  001E24  0012               	return		;funcret
  3602  001E26                     __end_of_i2c_Wait:
  3603                           	opt callstack 0
  3604                           
  3605 ;; *************** function ___aldiv *****************
  3606 ;; Defined at:
  3607 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  dividend        4    6[COMRAM] long 
  3610 ;;  divisor         4   10[COMRAM] long 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  quotient        4   16[COMRAM] long 
  3613 ;;  sign            1   15[COMRAM] unsigned char 
  3614 ;;  counter         1   14[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  4    6[COMRAM] long 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3624 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;Total ram usage:       14 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_write_i2c
  3635 ;;		_read_i2c
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text17
  3640  001240                     __ptext17:
  3641                           	opt callstack 0
  3642  001240                     ___aldiv:
  3643                           	opt callstack 27
  3644  001240  0E00               	movlw	0
  3645  001242  6E47               	movwf	___aldiv@sign^0,c
  3646  001244  BE45               	btfsc	(___aldiv@divisor+3)^0,7,c
  3647  001246  EF29  F009         	goto	u1480
  3648  00124A  EF27  F009         	goto	u1481
  3649  00124E                     u1481:
  3650  00124E  EF33  F009         	goto	l2843
  3651  001252                     u1480:
  3652  001252  1E45               	comf	(___aldiv@divisor+3)^0,f,c
  3653  001254  1E44               	comf	(___aldiv@divisor+2)^0,f,c
  3654  001256  1E43               	comf	(___aldiv@divisor+1)^0,f,c
  3655  001258  6C42               	negf	___aldiv@divisor^0,c
  3656  00125A  0E00               	movlw	0
  3657  00125C  2243               	addwfc	(___aldiv@divisor+1)^0,f,c
  3658  00125E  2244               	addwfc	(___aldiv@divisor+2)^0,f,c
  3659  001260  2245               	addwfc	(___aldiv@divisor+3)^0,f,c
  3660  001262  0E01               	movlw	1
  3661  001264  6E47               	movwf	___aldiv@sign^0,c
  3662  001266                     l2843:
  3663  001266  BE41               	btfsc	(___aldiv@dividend+3)^0,7,c
  3664  001268  EF3A  F009         	goto	u1490
  3665  00126C  EF38  F009         	goto	u1491
  3666  001270                     u1491:
  3667  001270  EF44  F009         	goto	l2849
  3668  001274                     u1490:
  3669  001274  1E41               	comf	(___aldiv@dividend+3)^0,f,c
  3670  001276  1E40               	comf	(___aldiv@dividend+2)^0,f,c
  3671  001278  1E3F               	comf	(___aldiv@dividend+1)^0,f,c
  3672  00127A  6C3E               	negf	___aldiv@dividend^0,c
  3673  00127C  0E00               	movlw	0
  3674  00127E  223F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3675  001280  2240               	addwfc	(___aldiv@dividend+2)^0,f,c
  3676  001282  2241               	addwfc	(___aldiv@dividend+3)^0,f,c
  3677  001284  0E01               	movlw	1
  3678  001286  1A47               	xorwf	___aldiv@sign^0,f,c
  3679  001288                     l2849:
  3680  001288  0E00               	movlw	0
  3681  00128A  6E48               	movwf	___aldiv@quotient^0,c
  3682  00128C  0E00               	movlw	0
  3683  00128E  6E49               	movwf	(___aldiv@quotient+1)^0,c
  3684  001290  0E00               	movlw	0
  3685  001292  6E4A               	movwf	(___aldiv@quotient+2)^0,c
  3686  001294  0E00               	movlw	0
  3687  001296  6E4B               	movwf	(___aldiv@quotient+3)^0,c
  3688  001298  5042               	movf	___aldiv@divisor^0,w,c
  3689  00129A  1043               	iorwf	(___aldiv@divisor+1)^0,w,c
  3690  00129C  1044               	iorwf	(___aldiv@divisor+2)^0,w,c
  3691  00129E  1045               	iorwf	(___aldiv@divisor+3)^0,w,c
  3692  0012A0  B4D8               	btfsc	status,2,c
  3693  0012A2  EF55  F009         	goto	u1501
  3694  0012A6  EF57  F009         	goto	u1500
  3695  0012AA                     u1501:
  3696  0012AA  EF8D  F009         	goto	l2871
  3697  0012AE                     u1500:
  3698  0012AE  0E01               	movlw	1
  3699  0012B0  6E46               	movwf	___aldiv@counter^0,c
  3700  0012B2  EF61  F009         	goto	l2857
  3701  0012B6                     l2855:
  3702  0012B6  90D8               	bcf	status,0,c
  3703  0012B8  3642               	rlcf	___aldiv@divisor^0,f,c
  3704  0012BA  3643               	rlcf	(___aldiv@divisor+1)^0,f,c
  3705  0012BC  3644               	rlcf	(___aldiv@divisor+2)^0,f,c
  3706  0012BE  3645               	rlcf	(___aldiv@divisor+3)^0,f,c
  3707  0012C0  2A46               	incf	___aldiv@counter^0,f,c
  3708  0012C2                     l2857:
  3709  0012C2  AE45               	btfss	(___aldiv@divisor+3)^0,7,c
  3710  0012C4  EF66  F009         	goto	u1511
  3711  0012C8  EF68  F009         	goto	u1510
  3712  0012CC                     u1511:
  3713  0012CC  EF5B  F009         	goto	l2855
  3714  0012D0                     u1510:
  3715  0012D0                     l2859:
  3716  0012D0  90D8               	bcf	status,0,c
  3717  0012D2  3648               	rlcf	___aldiv@quotient^0,f,c
  3718  0012D4  3649               	rlcf	(___aldiv@quotient+1)^0,f,c
  3719  0012D6  364A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3720  0012D8  364B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3721  0012DA  5042               	movf	___aldiv@divisor^0,w,c
  3722  0012DC  5C3E               	subwf	___aldiv@dividend^0,w,c
  3723  0012DE  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3724  0012E0  583F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3725  0012E2  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3726  0012E4  5840               	subwfb	(___aldiv@dividend+2)^0,w,c
  3727  0012E6  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3728  0012E8  5841               	subwfb	(___aldiv@dividend+3)^0,w,c
  3729  0012EA  A0D8               	btfss	status,0,c
  3730  0012EC  EF7A  F009         	goto	u1521
  3731  0012F0  EF7C  F009         	goto	u1520
  3732  0012F4                     u1521:
  3733  0012F4  EF85  F009         	goto	l2867
  3734  0012F8                     u1520:
  3735  0012F8  5042               	movf	___aldiv@divisor^0,w,c
  3736  0012FA  5E3E               	subwf	___aldiv@dividend^0,f,c
  3737  0012FC  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3738  0012FE  5A3F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3739  001300  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3740  001302  5A40               	subwfb	(___aldiv@dividend+2)^0,f,c
  3741  001304  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3742  001306  5A41               	subwfb	(___aldiv@dividend+3)^0,f,c
  3743  001308  8048               	bsf	___aldiv@quotient^0,0,c
  3744  00130A                     l2867:
  3745  00130A  90D8               	bcf	status,0,c
  3746  00130C  3245               	rrcf	(___aldiv@divisor+3)^0,f,c
  3747  00130E  3244               	rrcf	(___aldiv@divisor+2)^0,f,c
  3748  001310  3243               	rrcf	(___aldiv@divisor+1)^0,f,c
  3749  001312  3242               	rrcf	___aldiv@divisor^0,f,c
  3750  001314  2E46               	decfsz	___aldiv@counter^0,f,c
  3751  001316  EF68  F009         	goto	l2859
  3752  00131A                     l2871:
  3753  00131A  5047               	movf	___aldiv@sign^0,w,c
  3754  00131C  B4D8               	btfsc	status,2,c
  3755  00131E  EF93  F009         	goto	u1531
  3756  001322  EF95  F009         	goto	u1530
  3757  001326                     u1531:
  3758  001326  EF9D  F009         	goto	l2875
  3759  00132A                     u1530:
  3760  00132A  1E4B               	comf	(___aldiv@quotient+3)^0,f,c
  3761  00132C  1E4A               	comf	(___aldiv@quotient+2)^0,f,c
  3762  00132E  1E49               	comf	(___aldiv@quotient+1)^0,f,c
  3763  001330  6C48               	negf	___aldiv@quotient^0,c
  3764  001332  0E00               	movlw	0
  3765  001334  2249               	addwfc	(___aldiv@quotient+1)^0,f,c
  3766  001336  224A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3767  001338  224B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3768  00133A                     l2875:
  3769  00133A  C048  F03E         	movff	___aldiv@quotient,?___aldiv
  3770  00133E  C049  F03F         	movff	___aldiv@quotient+1,?___aldiv+1
  3771  001342  C04A  F040         	movff	___aldiv@quotient+2,?___aldiv+2
  3772  001346  C04B  F041         	movff	___aldiv@quotient+3,?___aldiv+3
  3773  00134A  0012               	return		;funcret
  3774  00134C                     __end_of___aldiv:
  3775                           	opt callstack 0
  3776                           
  3777 ;; *************** function _MotorPosition_Init *****************
  3778 ;; Defined at:
  3779 ;;		line 818 in file "main.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    4
  3800 ;; This function calls:
  3801 ;;		_MotorBREAK
  3802 ;;		_MotorON
  3803 ;;		_Read_IR
  3804 ;;		_WriteSTLED316SErr
  3805 ;;		_delay_1ms
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text18
  3812  00134C                     __ptext18:
  3813                           	opt callstack 0
  3814  00134C                     _MotorPosition_Init:
  3815                           	opt callstack 26
  3816  00134C                     
  3817                           ;main.c: 820:     LATAbits.LATA2 = 1;
  3818  00134C  8489               	bsf	137,2,c	;volatile
  3819  00134E                     
  3820                           ;main.c: 821:     MotorON();
  3821  00134E  EC82  F00F         	call	_MotorON	;wreg free
  3822  001352                     
  3823                           ;main.c: 822:     _delay((unsigned long)((350)*(8000000/4000.0)));
  3824  001352  0E04               	movlw	4
  3825  001354  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  3826  001356  0E8E               	movlw	142
  3827  001358  6E47               	movwf	??_MotorPosition_Init^0,c
  3828  00135A  0E12               	movlw	18
  3829  00135C                     u3717:
  3830  00135C  2EE8               	decfsz	wreg,f,c
  3831  00135E  D7FE               	bra	u3717
  3832  001360  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  3833  001362  D7FC               	bra	u3717
  3834  001364  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  3835  001366  D7FA               	bra	u3717
  3836  001368  D000               	nop2	
  3837  00136A                     
  3838                           ;main.c: 823:     errorcounter = 30;
  3839  00136A  0E1E               	movlw	30
  3840  00136C  6E52               	movwf	_errorcounter^0,c	;volatile
  3841  00136E  0E00               	movlw	0
  3842  001370  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  3843  001372  0E00               	movlw	0
  3844  001374  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  3845  001376  0E00               	movlw	0
  3846  001378  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  3847  00137A                     l4533:
  3848                           
  3849                           ;main.c: 826:     {;main.c: 827:       IR_SENSORF = Read_IR();
  3850  00137A  EC26  F00F         	call	_Read_IR	;wreg free
  3851  00137E  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  3852  001382  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  3853  001386                     
  3854                           ;main.c: 828:       if(errorcounter == 0)
  3855  001386  5052               	movf	_errorcounter^0,w,c	;volatile
  3856  001388  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  3857  00138A  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  3858  00138C  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  3859  00138E  A4D8               	btfss	status,2,c
  3860  001390  EFCC  F009         	goto	u2921
  3861  001394  EFCE  F009         	goto	u2920
  3862  001398                     u2921:
  3863  001398  EFD3  F009         	goto	l4541
  3864  00139C                     u2920:
  3865  00139C                     
  3866                           ;main.c: 829:       {;main.c: 830:           WriteSTLED316SErr('1');
  3867  00139C  0E31               	movlw	49
  3868  00139E  ECAC  F00A         	call	_WriteSTLED316SErr
  3869  0013A2                     
  3870                           ;main.c: 831:           MotorBREAK();
  3871  0013A2  EC87  F00F         	call	_MotorBREAK	;wreg free
  3872  0013A6                     l4541:
  3873                           
  3874                           ;main.c: 834:     }while(IR_SENSORF != 0);
  3875  0013A6  5013               	movf	_IR_SENSORF^0,w,c
  3876  0013A8  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  3877  0013AA  A4D8               	btfss	status,2,c
  3878  0013AC  EFDA  F009         	goto	u2931
  3879  0013B0  EFDC  F009         	goto	u2930
  3880  0013B4                     u2931:
  3881  0013B4  EFBD  F009         	goto	l4533
  3882  0013B8                     u2930:
  3883  0013B8                     
  3884                           ;main.c: 836:      _delay((unsigned long)((30)*(8000000/4000.0)));
  3885  0013B8  0E4E               	movlw	78
  3886  0013BA  6E47               	movwf	??_MotorPosition_Init^0,c
  3887  0013BC  0EEB               	movlw	235
  3888  0013BE                     u3727:
  3889  0013BE  2EE8               	decfsz	wreg,f,c
  3890  0013C0  D7FE               	bra	u3727
  3891  0013C2  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  3892  0013C4  D7FC               	bra	u3727
  3893  0013C6  F000               	nop	
  3894  0013C8                     
  3895                           ;main.c: 837:     errorcounter = 30;
  3896  0013C8  0E1E               	movlw	30
  3897  0013CA  6E52               	movwf	_errorcounter^0,c	;volatile
  3898  0013CC  0E00               	movlw	0
  3899  0013CE  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  3900  0013D0  0E00               	movlw	0
  3901  0013D2  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  3902  0013D4  0E00               	movlw	0
  3903  0013D6  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  3904  0013D8                     l4547:
  3905                           
  3906                           ;main.c: 839:     {;main.c: 840:        IR_SENSORF = Read_IR();
  3907  0013D8  EC26  F00F         	call	_Read_IR	;wreg free
  3908  0013DC  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  3909  0013E0  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  3910  0013E4                     
  3911                           ;main.c: 841:        if(errorcounter == 0)
  3912  0013E4  5052               	movf	_errorcounter^0,w,c	;volatile
  3913  0013E6  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  3914  0013E8  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  3915  0013EA  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  3916  0013EC  A4D8               	btfss	status,2,c
  3917  0013EE  EFFB  F009         	goto	u2941
  3918  0013F2  EFFD  F009         	goto	u2940
  3919  0013F6                     u2941:
  3920  0013F6  EF02  F00A         	goto	l4555
  3921  0013FA                     u2940:
  3922  0013FA                     
  3923                           ;main.c: 842:        {;main.c: 843:             WriteSTLED316SErr('2');
  3924  0013FA  0E32               	movlw	50
  3925  0013FC  ECAC  F00A         	call	_WriteSTLED316SErr
  3926  001400                     
  3927                           ;main.c: 844:            MotorBREAK();
  3928  001400  EC87  F00F         	call	_MotorBREAK	;wreg free
  3929  001404                     l4555:
  3930                           
  3931                           ;main.c: 847:     }while(IR_SENSORF != 1);
  3932  001404  0413               	decf	_IR_SENSORF^0,w,c
  3933  001406  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  3934  001408  A4D8               	btfss	status,2,c
  3935  00140A  EF09  F00A         	goto	u2951
  3936  00140E  EF0B  F00A         	goto	u2950
  3937  001412                     u2951:
  3938  001412  EFEC  F009         	goto	l4547
  3939  001416                     u2950:
  3940  001416                     
  3941                           ;main.c: 849:     errorcounter = 30;
  3942  001416  0E1E               	movlw	30
  3943  001418  6E52               	movwf	_errorcounter^0,c	;volatile
  3944  00141A  0E00               	movlw	0
  3945  00141C  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  3946  00141E  0E00               	movlw	0
  3947  001420  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  3948  001422  0E00               	movlw	0
  3949  001424  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  3950  001426                     
  3951                           ;main.c: 851:     delay_1ms(Motor_Stop_Delay_Time);
  3952  001426  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  3953  00142A  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  3954  00142E  ECD7  F00E         	call	_delay_1ms	;wreg free
  3955  001432                     
  3956                           ;main.c: 852:     MotorBREAK();
  3957  001432  EC87  F00F         	call	_MotorBREAK	;wreg free
  3958  001436                     
  3959                           ;main.c: 853:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3960  001436  0E06               	movlw	6
  3961  001438  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  3962  00143A  0E13               	movlw	19
  3963  00143C  6E47               	movwf	??_MotorPosition_Init^0,c
  3964  00143E  0EAE               	movlw	174
  3965  001440                     u3737:
  3966  001440  2EE8               	decfsz	wreg,f,c
  3967  001442  D7FE               	bra	u3737
  3968  001444  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  3969  001446  D7FC               	bra	u3737
  3970  001448  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  3971  00144A  D7FA               	bra	u3737
  3972  00144C                     
  3973                           ;main.c: 854:     IR_SENSORF=0;
  3974  00144C  0E00               	movlw	0
  3975  00144E  6E14               	movwf	(_IR_SENSORF+1)^0,c
  3976  001450  0E00               	movlw	0
  3977  001452  6E13               	movwf	_IR_SENSORF^0,c
  3978  001454                     
  3979                           ;main.c: 856:     LATAbits.LATA2 = 0;
  3980  001454  9489               	bcf	137,2,c	;volatile
  3981  001456  0012               	return		;funcret
  3982  001458                     __end_of_MotorPosition_Init:
  3983                           	opt callstack 0
  3984                           
  3985 ;; *************** function _InitTimer1 *****************
  3986 ;; Defined at:
  3987 ;;		line 1155 in file "main.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    2
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text19
  4016  001E70                     __ptext19:
  4017                           	opt callstack 0
  4018  001E70                     _InitTimer1:
  4019                           	opt callstack 28
  4020  001E70                     
  4021                           ;main.c: 1157:  T1CON = 0b00110001;
  4022  001E70  0E31               	movlw	49
  4023  001E72  6ECD               	movwf	205,c	;volatile
  4024                           
  4025                           ;main.c: 1160:     TMR1 = 0x9E57;
  4026  001E74  0E9E               	movlw	158
  4027  001E76  6ECF               	movwf	207,c	;volatile
  4028  001E78  0E57               	movlw	87
  4029  001E7A  6ECE               	movwf	206,c	;volatile
  4030  001E7C                     
  4031                           ;main.c: 1161:  TMR1IF = 0;
  4032  001E7C  909E               	bcf	3998,0,c	;volatile
  4033  001E7E                     
  4034                           ;main.c: 1162:  TMR1IE = 1;
  4035  001E7E  809D               	bsf	3997,0,c	;volatile
  4036  001E80                     
  4037                           ;main.c: 1163:     IPR1bits.TMR1IP=1;
  4038  001E80  809F               	bsf	159,0,c	;volatile
  4039                           
  4040                           ;main.c: 1165:     TMR1IF_triggered = 0;
  4041  001E82  0E00               	movlw	0
  4042  001E84  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  4043  001E86  0012               	return		;funcret
  4044  001E88                     __end_of_InitTimer1:
  4045                           	opt callstack 0
  4046                           
  4047 ;; *************** function _InitSTLED316 *****************
  4048 ;; Defined at:
  4049 ;;		line 14 in file "Display.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  Brightness      1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  Brightness      1   14[COMRAM] unsigned char 
  4054 ;;  i               2    0        int 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;Total ram usage:        3 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		_STLED316s_SPI_SendData
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text20
  4079  00192E                     __ptext20:
  4080                           	opt callstack 0
  4081  00192E                     _InitSTLED316:
  4082                           	opt callstack 27
  4083                           
  4084                           ;incstack = 0
  4085                           ;InitSTLED316@Brightness stored from wreg
  4086  00192E  6E46               	movwf	InitSTLED316@Brightness^0,c
  4087  001930                     
  4088                           ;Display.c: 14: void InitSTLED316( unsigned char Brightness );Display.c: 15: {;Display.c
      +                          : 16:  int i;;Display.c: 18:  LATCbits.LATC4 = 1;
  4089  001930  888B               	bsf	139,4,c	;volatile
  4090                           
  4091                           ;Display.c: 20:  LATCbits.LATC4 = 0;
  4092  001932  988B               	bcf	139,4,c	;volatile
  4093  001934                     
  4094                           ;Display.c: 22:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4095  001934  0E30               	movlw	48
  4096  001936  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4097  00193A                     
  4098                           ;Display.c: 25:  LATCbits.LATC4 = 1;
  4099  00193A  888B               	bsf	139,4,c	;volatile
  4100  00193C                     
  4101                           ;Display.c: 27:  LATCbits.LATC4 = 0;
  4102  00193C  988B               	bcf	139,4,c	;volatile
  4103                           
  4104                           ;Display.c: 30:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4105  00193E  0E30               	movlw	48
  4106  001940  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4107                           
  4108                           ;Display.c: 32:  STLED316s_SPI_SendData ( ( ( Brightness>>4 )<<5 ) | 0x00 | 0x5 );
  4109  001944  C046  F044         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4110  001948  3A44               	swapf	??_InitSTLED316^0,f,c
  4111  00194A  0E0F               	movlw	15
  4112  00194C  1644               	andwf	??_InitSTLED316^0,f,c
  4113  00194E  0E05               	movlw	5
  4114  001950  6E45               	movwf	(??_InitSTLED316+1)^0,c
  4115  001952                     u2915:
  4116  001952  90D8               	bcf	status,0,c
  4117  001954  3644               	rlcf	??_InitSTLED316^0,f,c
  4118  001956  2E45               	decfsz	(??_InitSTLED316+1)^0,f,c
  4119  001958  EFA9  F00C         	goto	u2915
  4120  00195C  5044               	movf	??_InitSTLED316^0,w,c
  4121  00195E  0905               	iorlw	5
  4122  001960  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4123  001964                     
  4124                           ;Display.c: 34:  LATCbits.LATC4 = 1;
  4125  001964  888B               	bsf	139,4,c	;volatile
  4126  001966                     
  4127                           ;Display.c: 36:  LATCbits.LATC4 = 0;
  4128  001966  988B               	bcf	139,4,c	;volatile
  4129                           
  4130                           ;Display.c: 39:  STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4131  001968  0E11               	movlw	17
  4132  00196A  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4133  00196E                     
  4134                           ;Display.c: 45:  LATCbits.LATC4 = 1;
  4135  00196E  888B               	bsf	139,4,c	;volatile
  4136  001970                     
  4137                           ;Display.c: 47:  LATCbits.LATC4 = 0;
  4138  001970  988B               	bcf	139,4,c	;volatile
  4139                           
  4140                           ;Display.c: 50:     STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4141  001972  0E11               	movlw	17
  4142  001974  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4143                           
  4144                           ;Display.c: 52:  STLED316s_SPI_SendData ( Brightness );
  4145  001978  5046               	movf	InitSTLED316@Brightness^0,w,c
  4146  00197A  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4147                           
  4148                           ;Display.c: 53:  STLED316s_SPI_SendData ( Brightness );
  4149  00197E  5046               	movf	InitSTLED316@Brightness^0,w,c
  4150  001980  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4151                           
  4152                           ;Display.c: 54:  STLED316s_SPI_SendData ( Brightness );
  4153  001984  5046               	movf	InitSTLED316@Brightness^0,w,c
  4154  001986  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4155  00198A                     
  4156                           ;Display.c: 58:  LATCbits.LATC4 = 1;
  4157  00198A  888B               	bsf	139,4,c	;volatile
  4158  00198C                     
  4159                           ;Display.c: 60:  LATCbits.LATC4 = 0;
  4160  00198C  988B               	bcf	139,4,c	;volatile
  4161                           
  4162                           ;Display.c: 63:  STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4163  00198E  0E18               	movlw	24
  4164  001990  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4165  001994                     
  4166                           ;Display.c: 66:  LATCbits.LATC4 = 1;
  4167  001994  888B               	bsf	139,4,c	;volatile
  4168  001996                     
  4169                           ;Display.c: 68:  LATCbits.LATC4 = 0;
  4170  001996  988B               	bcf	139,4,c	;volatile
  4171                           
  4172                           ;Display.c: 70:     STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4173  001998  0E18               	movlw	24
  4174  00199A  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4175                           
  4176                           ;Display.c: 72:  STLED316s_SPI_SendData ( Brightness );
  4177  00199E  5046               	movf	InitSTLED316@Brightness^0,w,c
  4178  0019A0  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4179                           
  4180                           ;Display.c: 73:  STLED316s_SPI_SendData ( Brightness );
  4181  0019A4  5046               	movf	InitSTLED316@Brightness^0,w,c
  4182  0019A6  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4183                           
  4184                           ;Display.c: 74:  STLED316s_SPI_SendData ( Brightness );
  4185  0019AA  5046               	movf	InitSTLED316@Brightness^0,w,c
  4186  0019AC  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4187                           
  4188                           ;Display.c: 75:  STLED316s_SPI_SendData ( Brightness );
  4189  0019B0  5046               	movf	InitSTLED316@Brightness^0,w,c
  4190  0019B2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4191  0019B6                     
  4192                           ;Display.c: 79:  LATCbits.LATC4 = 1;
  4193  0019B6  888B               	bsf	139,4,c	;volatile
  4194  0019B8  0012               	return		;funcret
  4195  0019BA                     __end_of_InitSTLED316:
  4196                           	opt callstack 0
  4197                           
  4198 ;; *************** function _Homing_Again_Manual *****************
  4199 ;; Defined at:
  4200 ;;		line 885 in file "main.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;Total ram usage:        2 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    4
  4221 ;; This function calls:
  4222 ;;		_AD_capture_BattVoltage
  4223 ;;		_MotorBREAK
  4224 ;;		_MotorON
  4225 ;;		_Read_IR
  4226 ;;		_WriteSTLED316SData
  4227 ;;		_WriteSTLED316SErr
  4228 ;;		_delay_1ms
  4229 ;;		_readWeighingData
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text21
  4236  000D0C                     __ptext21:
  4237                           	opt callstack 0
  4238  000D0C                     _Homing_Again_Manual:
  4239                           	opt callstack 26
  4240  000D0C                     
  4241                           ;main.c: 888:     if (vibration_mode == 1)
  4242  000D0C  0432               	decf	_vibration_mode^0,w,c
  4243  000D0E  A4D8               	btfss	status,2,c
  4244  000D10  EF8C  F006         	goto	u2981
  4245  000D14  EF8E  F006         	goto	u2980
  4246  000D18                     u2981:
  4247  000D18  EFA3  F006         	goto	l320
  4248  000D1C                     u2980:
  4249  000D1C                     
  4250                           ;main.c: 889:     {;main.c: 890:         LATCbits.LATC1 = 1;
  4251  000D1C  828B               	bsf	139,1,c	;volatile
  4252  000D1E                     
  4253                           ;main.c: 891:         delay_1ms(Vmotor_Time);
  4254  000D1E  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4255  000D22  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4256  000D26  ECD7  F00E         	call	_delay_1ms	;wreg free
  4257  000D2A                     
  4258                           ;main.c: 892:         LATCbits.LATC1 = 0;
  4259  000D2A  928B               	bcf	139,1,c	;volatile
  4260  000D2C                     l4609:
  4261                           
  4262                           ;main.c: 893:         _delay((unsigned long)((300)*(8000000/4000.0)));
  4263  000D2C  0E04               	movlw	4
  4264  000D2E  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4265  000D30  0E0C               	movlw	12
  4266  000D32  6E49               	movwf	??_Homing_Again_Manual^0,c
  4267  000D34  0E34               	movlw	52
  4268  000D36                     u3747:
  4269  000D36  2EE8               	decfsz	wreg,f,c
  4270  000D38  D7FE               	bra	u3747
  4271  000D3A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4272  000D3C  D7FC               	bra	u3747
  4273  000D3E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4274  000D40  D7FA               	bra	u3747
  4275                           
  4276                           ;main.c: 894:     }
  4277  000D42  EFA6  F006         	goto	l4613
  4278  000D46                     l320:
  4279                           
  4280                           ;main.c: 896:     {;main.c: 897:         LATCbits.LATC1 = 0;
  4281  000D46  928B               	bcf	139,1,c	;volatile
  4282  000D48  EF96  F006         	goto	l4609
  4283  000D4C                     l4613:
  4284                           
  4285                           ;main.c: 901:     LATAbits.LATA2 = 1;
  4286  000D4C  8489               	bsf	137,2,c	;volatile
  4287                           
  4288                           ;main.c: 903:     while (NUM>0)
  4289  000D4E  EFD0  F007         	goto	l4705
  4290  000D52                     l323:
  4291  000D52  0004               	clrwdt		;# 
  4292  000D54                     
  4293                           ;main.c: 906:         readWeighingData();
  4294  000D54  EC8B  F00D         	call	_readWeighingData	;wreg free
  4295  000D58                     
  4296                           ;main.c: 907:         AD_capture_BattVoltage();
  4297  000D58  EC48  F00E         	call	_AD_capture_BattVoltage	;wreg free
  4298  000D5C                     
  4299                           ;main.c: 908:         delay_1ms(Motor_Pause_Time);
  4300  000D5C  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  4301  000D60  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4302  000D64  ECD7  F00E         	call	_delay_1ms	;wreg free
  4303  000D68                     
  4304                           ;main.c: 909:         MotorON();
  4305  000D68  EC82  F00F         	call	_MotorON	;wreg free
  4306  000D6C                     
  4307                           ;main.c: 910:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4308  000D6C  0E04               	movlw	4
  4309  000D6E  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4310  000D70  0E8E               	movlw	142
  4311  000D72  6E49               	movwf	??_Homing_Again_Manual^0,c
  4312  000D74  0E12               	movlw	18
  4313  000D76                     u3757:
  4314  000D76  2EE8               	decfsz	wreg,f,c
  4315  000D78  D7FE               	bra	u3757
  4316  000D7A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4317  000D7C  D7FC               	bra	u3757
  4318  000D7E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4319  000D80  D7FA               	bra	u3757
  4320  000D82  D000               	nop2	
  4321  000D84                     
  4322                           ;main.c: 911:         errorcounter = 30;
  4323  000D84  0E1E               	movlw	30
  4324  000D86  6E52               	movwf	_errorcounter^0,c	;volatile
  4325  000D88  0E00               	movlw	0
  4326  000D8A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4327  000D8C  0E00               	movlw	0
  4328  000D8E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4329  000D90  0E00               	movlw	0
  4330  000D92  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4331  000D94                     l4627:
  4332                           
  4333                           ;main.c: 914:         {;main.c: 915:             IR_SENSORF = Read_IR();
  4334  000D94  EC26  F00F         	call	_Read_IR	;wreg free
  4335  000D98  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4336  000D9C  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4337  000DA0                     
  4338                           ;main.c: 916:             if(errorcounter == 0)
  4339  000DA0  5052               	movf	_errorcounter^0,w,c	;volatile
  4340  000DA2  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4341  000DA4  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4342  000DA6  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4343  000DA8  A4D8               	btfss	status,2,c
  4344  000DAA  EFD9  F006         	goto	u2991
  4345  000DAE  EFDB  F006         	goto	u2990
  4346  000DB2                     u2991:
  4347  000DB2  EFE0  F006         	goto	l4635
  4348  000DB6                     u2990:
  4349  000DB6                     
  4350                           ;main.c: 917:             {;main.c: 918:                 WriteSTLED316SErr('1');
  4351  000DB6  0E31               	movlw	49
  4352  000DB8  ECAC  F00A         	call	_WriteSTLED316SErr
  4353  000DBC                     
  4354                           ;main.c: 919:                 MotorBREAK();
  4355  000DBC  EC87  F00F         	call	_MotorBREAK	;wreg free
  4356  000DC0                     l4635:
  4357                           
  4358                           ;main.c: 922:         }while(IR_SENSORF != 0);
  4359  000DC0  5013               	movf	_IR_SENSORF^0,w,c
  4360  000DC2  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4361  000DC4  A4D8               	btfss	status,2,c
  4362  000DC6  EFE7  F006         	goto	u3001
  4363  000DCA  EFE9  F006         	goto	u3000
  4364  000DCE                     u3001:
  4365  000DCE  EFCA  F006         	goto	l4627
  4366  000DD2                     u3000:
  4367  000DD2                     
  4368                           ;main.c: 924:          _delay((unsigned long)((30)*(8000000/4000.0)));
  4369  000DD2  0E4E               	movlw	78
  4370  000DD4  6E49               	movwf	??_Homing_Again_Manual^0,c
  4371  000DD6  0EEB               	movlw	235
  4372  000DD8                     u3767:
  4373  000DD8  2EE8               	decfsz	wreg,f,c
  4374  000DDA  D7FE               	bra	u3767
  4375  000DDC  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4376  000DDE  D7FC               	bra	u3767
  4377  000DE0  F000               	nop	
  4378  000DE2                     
  4379                           ;main.c: 926:          errorcounter = 30;
  4380  000DE2  0E1E               	movlw	30
  4381  000DE4  6E52               	movwf	_errorcounter^0,c	;volatile
  4382  000DE6  0E00               	movlw	0
  4383  000DE8  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4384  000DEA  0E00               	movlw	0
  4385  000DEC  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4386  000DEE  0E00               	movlw	0
  4387  000DF0  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4388  000DF2                     l4641:
  4389                           
  4390                           ;main.c: 929:         {;main.c: 930:             IR_SENSORF = Read_IR();
  4391  000DF2  EC26  F00F         	call	_Read_IR	;wreg free
  4392  000DF6  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4393  000DFA  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4394  000DFE                     
  4395                           ;main.c: 931:             if(errorcounter == 0)
  4396  000DFE  5052               	movf	_errorcounter^0,w,c	;volatile
  4397  000E00  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4398  000E02  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4399  000E04  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4400  000E06  A4D8               	btfss	status,2,c
  4401  000E08  EF08  F007         	goto	u3011
  4402  000E0C  EF0A  F007         	goto	u3010
  4403  000E10                     u3011:
  4404  000E10  EF0F  F007         	goto	l4649
  4405  000E14                     u3010:
  4406  000E14                     
  4407                           ;main.c: 932:             {;main.c: 933:                 WriteSTLED316SErr('2');
  4408  000E14  0E32               	movlw	50
  4409  000E16  ECAC  F00A         	call	_WriteSTLED316SErr
  4410  000E1A                     
  4411                           ;main.c: 934:                 MotorBREAK();
  4412  000E1A  EC87  F00F         	call	_MotorBREAK	;wreg free
  4413  000E1E                     l4649:
  4414                           
  4415                           ;main.c: 936:         }while(IR_SENSORF != 1);
  4416  000E1E  0413               	decf	_IR_SENSORF^0,w,c
  4417  000E20  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4418  000E22  A4D8               	btfss	status,2,c
  4419  000E24  EF16  F007         	goto	u3021
  4420  000E28  EF18  F007         	goto	u3020
  4421  000E2C                     u3021:
  4422  000E2C  EFF9  F006         	goto	l4641
  4423  000E30                     u3020:
  4424  000E30                     
  4425                           ;main.c: 938:         errorcounter = 30;
  4426  000E30  0E1E               	movlw	30
  4427  000E32  6E52               	movwf	_errorcounter^0,c	;volatile
  4428  000E34  0E00               	movlw	0
  4429  000E36  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4430  000E38  0E00               	movlw	0
  4431  000E3A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4432  000E3C  0E00               	movlw	0
  4433  000E3E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4434  000E40                     
  4435                           ;main.c: 939:         delay_1ms(Motor_Stop_Delay_Time);
  4436  000E40  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4437  000E44  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4438  000E48  ECD7  F00E         	call	_delay_1ms	;wreg free
  4439  000E4C                     
  4440                           ;main.c: 940:         MotorBREAK();
  4441  000E4C  EC87  F00F         	call	_MotorBREAK	;wreg free
  4442                           
  4443                           ;main.c: 942:         while(PORTBbits.RB2 == 0){
  4444  000E50  EF55  F007         	goto	l4669
  4445  000E54                     l4657:
  4446                           
  4447                           ;main.c: 943:             for(i=0; i<3; i++){
  4448  000E54  0E00               	movlw	0
  4449  000E56  6E16               	movwf	(_i+1)^0,c
  4450  000E58  0E00               	movlw	0
  4451  000E5A  6E15               	movwf	_i^0,c
  4452  000E5C  5016               	movf	(_i+1)^0,w,c
  4453  000E5E  E109               	bnz	u3030
  4454  000E60  0E03               	movlw	3
  4455  000E62  5C15               	subwf	_i^0,w,c
  4456  000E64  A0D8               	btfss	status,0,c
  4457  000E66  EF37  F007         	goto	u3031
  4458  000E6A  EF39  F007         	goto	u3030
  4459  000E6E                     u3031:
  4460  000E6E  EF3B  F007         	goto	l4663
  4461  000E72                     u3030:
  4462  000E72  EF53  F007         	goto	l4667
  4463  000E76                     l4663:
  4464                           
  4465                           ;main.c: 944:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  4466  000E76  0E0B               	movlw	11
  4467  000E78  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4468  000E7A  0E26               	movlw	38
  4469  000E7C  6E49               	movwf	??_Homing_Again_Manual^0,c
  4470  000E7E  0E5E               	movlw	94
  4471  000E80                     u3777:
  4472  000E80  2EE8               	decfsz	wreg,f,c
  4473  000E82  D7FE               	bra	u3777
  4474  000E84  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4475  000E86  D7FC               	bra	u3777
  4476  000E88  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4477  000E8A  D7FA               	bra	u3777
  4478  000E8C                     
  4479                           ;main.c: 945:             }
  4480  000E8C  4A15               	infsnz	_i^0,f,c
  4481  000E8E  2A16               	incf	(_i+1)^0,f,c
  4482  000E90  5016               	movf	(_i+1)^0,w,c
  4483  000E92  E109               	bnz	u3040
  4484  000E94  0E03               	movlw	3
  4485  000E96  5C15               	subwf	_i^0,w,c
  4486  000E98  A0D8               	btfss	status,0,c
  4487  000E9A  EF51  F007         	goto	u3041
  4488  000E9E  EF53  F007         	goto	u3040
  4489  000EA2                     u3041:
  4490  000EA2  EF3B  F007         	goto	l4663
  4491  000EA6                     u3040:
  4492  000EA6                     l4667:
  4493                           
  4494                           ;main.c: 946:             Stop = 1;
  4495  000EA6  0E01               	movlw	1
  4496  000EA8  6E35               	movwf	_Stop^0,c
  4497  000EAA                     l4669:
  4498                           
  4499                           ;main.c: 942:         while(PORTBbits.RB2 == 0){
  4500  000EAA  A481               	btfss	129,2,c	;volatile
  4501  000EAC  EF5A  F007         	goto	u3051
  4502  000EB0  EF5C  F007         	goto	u3050
  4503  000EB4                     u3051:
  4504  000EB4  EF2A  F007         	goto	l4657
  4505  000EB8                     u3050:
  4506  000EB8                     
  4507                           ;main.c: 949:         if (NUM < 11)
  4508  000EB8  501A               	movf	(_NUM+1)^0,w,c
  4509  000EBA  E107               	bnz	u3061
  4510  000EBC  0E0B               	movlw	11
  4511  000EBE  5C19               	subwf	_NUM^0,w,c
  4512  000EC0  B0D8               	btfsc	status,0,c
  4513  000EC2  EF65  F007         	goto	u3061
  4514  000EC6  EF67  F007         	goto	u3060
  4515  000ECA                     u3061:
  4516  000ECA  EF6A  F007         	goto	l4675
  4517  000ECE                     u3060:
  4518  000ECE                     
  4519                           ;main.c: 950:         {;main.c: 951:             NUM--;
  4520  000ECE  0619               	decf	_NUM^0,f,c
  4521  000ED0  A0D8               	btfss	status,0,c
  4522  000ED2  061A               	decf	(_NUM+1)^0,f,c
  4523  000ED4                     l4675:
  4524                           
  4525                           ;main.c: 954:         WriteSTLED316SData(NUM, vibration_mode);
  4526  000ED4  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  4527  000ED8  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  4528  000EDC  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4529  000EE0  EC40  F00C         	call	_WriteSTLED316SData	;wreg free
  4530  000EE4                     
  4531                           ;main.c: 956:         if (vibration_mode == 1 && NUM != 0)
  4532  000EE4  0432               	decf	_vibration_mode^0,w,c
  4533  000EE6  A4D8               	btfss	status,2,c
  4534  000EE8  EF78  F007         	goto	u3071
  4535  000EEC  EF7A  F007         	goto	u3070
  4536  000EF0                     u3071:
  4537  000EF0  EF98  F007         	goto	l4689
  4538  000EF4                     u3070:
  4539  000EF4  5019               	movf	_NUM^0,w,c
  4540  000EF6  101A               	iorwf	(_NUM+1)^0,w,c
  4541  000EF8  B4D8               	btfsc	status,2,c
  4542  000EFA  EF81  F007         	goto	u3081
  4543  000EFE  EF83  F007         	goto	u3080
  4544  000F02                     u3081:
  4545  000F02  EF98  F007         	goto	l4689
  4546  000F06                     u3080:
  4547  000F06                     
  4548                           ;main.c: 957:         {;main.c: 958:             LATCbits.LATC1 = 1;
  4549  000F06  828B               	bsf	139,1,c	;volatile
  4550  000F08                     
  4551                           ;main.c: 959:             delay_1ms(Vmotor_Time);
  4552  000F08  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4553  000F0C  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4554  000F10  ECD7  F00E         	call	_delay_1ms	;wreg free
  4555  000F14                     
  4556                           ;main.c: 961:             LATCbits.LATC1 = 0;
  4557  000F14  928B               	bcf	139,1,c	;volatile
  4558  000F16                     
  4559                           ;main.c: 962:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4560  000F16  0E04               	movlw	4
  4561  000F18  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4562  000F1A  0E0C               	movlw	12
  4563  000F1C  6E49               	movwf	??_Homing_Again_Manual^0,c
  4564  000F1E  0E34               	movlw	52
  4565  000F20                     u3787:
  4566  000F20  2EE8               	decfsz	wreg,f,c
  4567  000F22  D7FE               	bra	u3787
  4568  000F24  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4569  000F26  D7FC               	bra	u3787
  4570  000F28  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4571  000F2A  D7FA               	bra	u3787
  4572                           
  4573                           ;main.c: 963:         }
  4574  000F2C  EFC6  F007         	goto	l4701
  4575  000F30                     l4689:
  4576  000F30  5032               	movf	_vibration_mode^0,w,c
  4577  000F32  A4D8               	btfss	status,2,c
  4578  000F34  EF9E  F007         	goto	u3091
  4579  000F38  EFA0  F007         	goto	u3090
  4580  000F3C                     u3091:
  4581  000F3C  EFC6  F007         	goto	l4701
  4582  000F40                     u3090:
  4583  000F40  5019               	movf	_NUM^0,w,c
  4584  000F42  101A               	iorwf	(_NUM+1)^0,w,c
  4585  000F44  B4D8               	btfsc	status,2,c
  4586  000F46  EFA7  F007         	goto	u3101
  4587  000F4A  EFA9  F007         	goto	u3100
  4588  000F4E                     u3101:
  4589  000F4E  EFC6  F007         	goto	l4701
  4590  000F52                     u3100:
  4591  000F52                     
  4592                           ;main.c: 965:         {;main.c: 966:             LATCbits.LATC1 = 0;
  4593  000F52  928B               	bcf	139,1,c	;volatile
  4594  000F54                     
  4595                           ;main.c: 967:             if (NUM != 0)
  4596  000F54  5019               	movf	_NUM^0,w,c
  4597  000F56  101A               	iorwf	(_NUM+1)^0,w,c
  4598  000F58  B4D8               	btfsc	status,2,c
  4599  000F5A  EFB1  F007         	goto	u3111
  4600  000F5E  EFB3  F007         	goto	u3110
  4601  000F62                     u3111:
  4602  000F62  EFBB  F007         	goto	l4699
  4603  000F66                     u3110:
  4604  000F66                     
  4605                           ;main.c: 968:             {;main.c: 969:                 delay_1ms(Vmotor_Time);
  4606  000F66  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4607  000F6A  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4608  000F6E  ECD7  F00E         	call	_delay_1ms	;wreg free
  4609                           
  4610                           ;main.c: 970:             }
  4611  000F72  EFC6  F007         	goto	l4701
  4612  000F76                     l4699:
  4613                           
  4614                           ;main.c: 972:             {;main.c: 973:                 _delay((unsigned long)((500)*(8
      +                          000000/4000.0)));
  4615  000F76  0E06               	movlw	6
  4616  000F78  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4617  000F7A  0E13               	movlw	19
  4618  000F7C  6E49               	movwf	??_Homing_Again_Manual^0,c
  4619  000F7E  0EAE               	movlw	174
  4620  000F80                     u3797:
  4621  000F80  2EE8               	decfsz	wreg,f,c
  4622  000F82  D7FE               	bra	u3797
  4623  000F84  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4624  000F86  D7FC               	bra	u3797
  4625  000F88  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4626  000F8A  D7FA               	bra	u3797
  4627  000F8C                     l4701:
  4628                           
  4629                           ;main.c: 977:         if(Stop==1)
  4630  000F8C  0435               	decf	_Stop^0,w,c
  4631  000F8E  A4D8               	btfss	status,2,c
  4632  000F90  EFCC  F007         	goto	u3121
  4633  000F94  EFCE  F007         	goto	u3120
  4634  000F98                     u3121:
  4635  000F98  EFD0  F007         	goto	l4705
  4636  000F9C                     u3120:
  4637  000F9C  EFD9  F007         	goto	l342
  4638  000FA0                     l4705:
  4639                           
  4640                           ;main.c: 903:     while (NUM>0)
  4641  000FA0  5019               	movf	_NUM^0,w,c
  4642  000FA2  101A               	iorwf	(_NUM+1)^0,w,c
  4643  000FA4  A4D8               	btfss	status,2,c
  4644  000FA6  EFD7  F007         	goto	u3131
  4645  000FAA  EFD9  F007         	goto	u3130
  4646  000FAE                     u3131:
  4647  000FAE  EFA9  F006         	goto	l323
  4648  000FB2                     u3130:
  4649  000FB2                     l342:
  4650                           
  4651                           ;main.c: 982:     LATAbits.LATA2 = 0;
  4652  000FB2  9489               	bcf	137,2,c	;volatile
  4653  000FB4                     
  4654                           ;main.c: 984:     if (NUM == 0 || Stop==1)
  4655  000FB4  5019               	movf	_NUM^0,w,c
  4656  000FB6  101A               	iorwf	(_NUM+1)^0,w,c
  4657  000FB8  B4D8               	btfsc	status,2,c
  4658  000FBA  EFE1  F007         	goto	u3141
  4659  000FBE  EFE3  F007         	goto	u3140
  4660  000FC2                     u3141:
  4661  000FC2  EFEB  F007         	goto	l4711
  4662  000FC6                     u3140:
  4663  000FC6  0435               	decf	_Stop^0,w,c
  4664  000FC8  A4D8               	btfss	status,2,c
  4665  000FCA  EFE9  F007         	goto	u3151
  4666  000FCE  EFEB  F007         	goto	u3150
  4667  000FD2                     u3151:
  4668  000FD2  EF06  F008         	goto	l4721
  4669  000FD6                     u3150:
  4670  000FD6                     l4711:
  4671                           
  4672                           ;main.c: 985:     {;main.c: 987:         if (vibration_mode == 1)
  4673  000FD6  0432               	decf	_vibration_mode^0,w,c
  4674  000FD8  A4D8               	btfss	status,2,c
  4675  000FDA  EFF1  F007         	goto	u3161
  4676  000FDE  EFF3  F007         	goto	u3160
  4677  000FE2                     u3161:
  4678  000FE2  EF06  F008         	goto	l4721
  4679  000FE6                     u3160:
  4680  000FE6                     
  4681                           ;main.c: 988:         {;main.c: 989:             LATCbits.LATC1 = 1;
  4682  000FE6  828B               	bsf	139,1,c	;volatile
  4683  000FE8                     
  4684                           ;main.c: 990:             delay_1ms(Vmotor_Time);
  4685  000FE8  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4686  000FEC  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4687  000FF0  ECD7  F00E         	call	_delay_1ms	;wreg free
  4688  000FF4                     
  4689                           ;main.c: 992:             LATCbits.LATC1 = 0;
  4690  000FF4  928B               	bcf	139,1,c	;volatile
  4691  000FF6                     
  4692                           ;main.c: 993:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4693  000FF6  0E04               	movlw	4
  4694  000FF8  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4695  000FFA  0E0C               	movlw	12
  4696  000FFC  6E49               	movwf	??_Homing_Again_Manual^0,c
  4697  000FFE  0E34               	movlw	52
  4698  001000                     u3807:
  4699  001000  2EE8               	decfsz	wreg,f,c
  4700  001002  D7FE               	bra	u3807
  4701  001004  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4702  001006  D7FC               	bra	u3807
  4703  001008  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4704  00100A  D7FA               	bra	u3807
  4705  00100C                     l4721:
  4706                           
  4707                           ;main.c: 998:     NUM = 0;
  4708  00100C  0E00               	movlw	0
  4709  00100E  6E1A               	movwf	(_NUM+1)^0,c
  4710  001010  0E00               	movlw	0
  4711  001012  6E19               	movwf	_NUM^0,c
  4712  001014                     
  4713                           ;main.c: 999:     OpMode = MANUAL_MODE;
  4714  001014  0E00               	movlw	0
  4715  001016  6E30               	movwf	_OpMode^0,c	;volatile
  4716  001018  0012               	return		;funcret
  4717  00101A                     __end_of_Homing_Again_Manual:
  4718                           	opt callstack 0
  4719                           
  4720 ;; *************** function _WriteSTLED316SData *****************
  4721 ;; Defined at:
  4722 ;;		line 150 in file "Display.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  number          2   14[COMRAM] int 
  4725 ;;  v_mode          1   16[COMRAM] unsigned char 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  NUM_DIG1        2    2[BANK0 ] int 
  4728 ;;  NUM_DIG0        2    0[BANK0 ] int 
  4729 ;;  data4           1    5[BANK0 ] unsigned char 
  4730 ;;  data3           1    4[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4740 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;Total ram usage:        9 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    3
  4747 ;; This function calls:
  4748 ;;		_Get7Seg
  4749 ;;		_STLED316s_SPI_SendData
  4750 ;;		___awdiv
  4751 ;;		___awmod
  4752 ;; This function is called by:
  4753 ;;		_main
  4754 ;;		_Homing_Again_Manual
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text22
  4759  001880                     __ptext22:
  4760                           	opt callstack 0
  4761  001880                     _WriteSTLED316SData:
  4762                           	opt callstack 27
  4763  001880                     
  4764                           ;Display.c: 150: void WriteSTLED316SData( int number, char v_mode);Display.c: 151: {;Dis
      +                          play.c: 152:  unsigned char data3, data4;;Display.c: 153:  int NUM_DIG0, NUM_DIG1;;Displ
      +                          ay.c: 155:  NUM_DIG0=(int) number%10;
  4765  001880  C046  F03E         	movff	WriteSTLED316SData@number,___awmod@dividend
  4766  001884  C047  F03F         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  4767  001888  0E00               	movlw	0
  4768  00188A  6E41               	movwf	(___awmod@divisor+1)^0,c
  4769  00188C  0E0A               	movlw	10
  4770  00188E  6E40               	movwf	___awmod@divisor^0,c
  4771  001890  ECE8  F00B         	call	___awmod	;wreg free
  4772  001894  C03E  F080         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  4773  001898  C03F  F081         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  4774                           
  4775                           ;Display.c: 156:  NUM_DIG1=(int) number/10;
  4776  00189C  C046  F03E         	movff	WriteSTLED316SData@number,___awdiv@dividend
  4777  0018A0  C047  F03F         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  4778  0018A4  0E00               	movlw	0
  4779  0018A6  6E41               	movwf	(___awdiv@divisor+1)^0,c
  4780  0018A8  0E0A               	movlw	10
  4781  0018AA  6E40               	movwf	___awdiv@divisor^0,c
  4782  0018AC  EC86  F00B         	call	___awdiv	;wreg free
  4783  0018B0  C03E  F082         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  4784  0018B4  C03F  F083         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  4785  0018B8                     
  4786                           ;Display.c: 158:  LATCbits.LATC4 = 0;
  4787  0018B8  988B               	bcf	139,4,c	;volatile
  4788                           
  4789                           ;Display.c: 160:  STLED316s_SPI_SendData (0x00 );
  4790  0018BA  0E00               	movlw	0
  4791  0018BC  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4792  0018C0                     
  4793                           ;Display.c: 162:  LATCbits.LATC4 = 1;
  4794  0018C0  888B               	bsf	139,4,c	;volatile
  4795  0018C2                     
  4796                           ;Display.c: 164:  LATCbits.LATC4 = 0;
  4797  0018C2  988B               	bcf	139,4,c	;volatile
  4798                           
  4799                           ;Display.c: 166:  STLED316s_SPI_SendData (0x00);
  4800  0018C4  0E00               	movlw	0
  4801  0018C6  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4802                           
  4803                           ;Display.c: 168:  data4 = Get7Seg(NUM_DIG1);
  4804  0018CA  C082  F03E         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  4805  0018CE  C083  F03F         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  4806  0018D2  EC20  F00B         	call	_Get7Seg	;wreg free
  4807  0018D6  0100               	movlb	0	; () banked
  4808  0018D8  6F85               	movwf	WriteSTLED316SData@data4& (0+255),b
  4809                           
  4810                           ;Display.c: 169:  data3 = Get7Seg(NUM_DIG0);
  4811  0018DA  C080  F03E         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  4812  0018DE  C081  F03F         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  4813  0018E2  EC20  F00B         	call	_Get7Seg	;wreg free
  4814  0018E6  0100               	movlb	0	; () banked
  4815  0018E8  6F84               	movwf	WriteSTLED316SData@data3& (0+255),b
  4816  0018EA                     
  4817                           ; BSR set to: 0
  4818                           ;Display.c: 171:  if (v_mode)
  4819  0018EA  5048               	movf	WriteSTLED316SData@v_mode^0,w,c
  4820  0018EC  B4D8               	btfsc	status,2,c
  4821  0018EE  EF7B  F00C         	goto	u2891
  4822  0018F2  EF7D  F00C         	goto	u2890
  4823  0018F6                     u2891:
  4824  0018F6  EF89  F00C         	goto	l4409
  4825  0018FA                     u2890:
  4826  0018FA                     
  4827                           ; BSR set to: 0
  4828                           ;Display.c: 172:  {;Display.c: 173:   if (v_mode == 0xFF)
  4829  0018FA  2848               	incf	WriteSTLED316SData@v_mode^0,w,c
  4830  0018FC  A4D8               	btfss	status,2,c
  4831  0018FE  EF83  F00C         	goto	u2901
  4832  001902  EF85  F00C         	goto	u2900
  4833  001906                     u2901:
  4834  001906  EF88  F00C         	goto	l4407
  4835  00190A                     u2900:
  4836  00190A                     
  4837                           ; BSR set to: 0
  4838                           ;Display.c: 174:    data4 |= 0x80;
  4839  00190A  8F85               	bsf	WriteSTLED316SData@data4& (0+255),7,b
  4840  00190C  EF89  F00C         	goto	l4409
  4841  001910                     l4407:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;Display.c: 176:    data3 |= 0x80;
  4845  001910  8F84               	bsf	WriteSTLED316SData@data3& (0+255),7,b
  4846  001912                     l4409:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;Display.c: 179:     STLED316s_SPI_SendData (data4);
  4850  001912  5185               	movf	WriteSTLED316SData@data4& (0+255),w,b
  4851  001914  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4852  001918                     
  4853                           ;Display.c: 180:     STLED316s_SPI_SendData (data3);
  4854  001918  0100               	movlb	0	; () banked
  4855  00191A  5184               	movf	WriteSTLED316SData@data3& (0+255),w,b
  4856  00191C  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4857  001920                     
  4858                           ;Display.c: 182:  LATCbits.LATC4 = 1;
  4859  001920  888B               	bsf	139,4,c	;volatile
  4860  001922                     
  4861                           ;Display.c: 184:  LATCbits.LATC4 = 0;
  4862  001922  988B               	bcf	139,4,c	;volatile
  4863  001924                     
  4864                           ;Display.c: 186:  STLED316s_SPI_SendData ( 0x0D );
  4865  001924  0E0D               	movlw	13
  4866  001926  ECDD  F00C         	call	_STLED316s_SPI_SendData
  4867  00192A                     
  4868                           ;Display.c: 188:  LATCbits.LATC4 = 1;
  4869  00192A  888B               	bsf	139,4,c	;volatile
  4870  00192C  0012               	return		;funcret
  4871  00192E                     __end_of_WriteSTLED316SData:
  4872                           	opt callstack 0
  4873                           
  4874 ;; *************** function ___awmod *****************
  4875 ;; Defined at:
  4876 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  dividend        2    6[COMRAM] int 
  4879 ;;  divisor         2    8[COMRAM] int 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  sign            1   11[COMRAM] unsigned char 
  4882 ;;  counter         1   10[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  2    6[COMRAM] int 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;Total ram usage:        6 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    2
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_WriteSTLED316SData
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text23
  4907  0017D0                     __ptext23:
  4908                           	opt callstack 0
  4909  0017D0                     ___awmod:
  4910                           	opt callstack 27
  4911  0017D0  0E00               	movlw	0
  4912  0017D2  6E43               	movwf	___awmod@sign^0,c
  4913  0017D4  BE3F               	btfsc	(___awmod@dividend+1)^0,7,c
  4914  0017D6  EFF1  F00B         	goto	u2830
  4915  0017DA  EFEF  F00B         	goto	u2831
  4916  0017DE                     u2831:
  4917  0017DE  EFF7  F00B         	goto	l4365
  4918  0017E2                     u2830:
  4919  0017E2  6C3E               	negf	___awmod@dividend^0,c
  4920  0017E4  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  4921  0017E6  B0D8               	btfsc	status,0,c
  4922  0017E8  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  4923  0017EA  0E01               	movlw	1
  4924  0017EC  6E43               	movwf	___awmod@sign^0,c
  4925  0017EE                     l4365:
  4926  0017EE  BE41               	btfsc	(___awmod@divisor+1)^0,7,c
  4927  0017F0  EFFE  F00B         	goto	u2840
  4928  0017F4  EFFC  F00B         	goto	u2841
  4929  0017F8                     u2841:
  4930  0017F8  EF02  F00C         	goto	l4369
  4931  0017FC                     u2840:
  4932  0017FC  6C40               	negf	___awmod@divisor^0,c
  4933  0017FE  1E41               	comf	(___awmod@divisor+1)^0,f,c
  4934  001800  B0D8               	btfsc	status,0,c
  4935  001802  2A41               	incf	(___awmod@divisor+1)^0,f,c
  4936  001804                     l4369:
  4937  001804  5040               	movf	___awmod@divisor^0,w,c
  4938  001806  1041               	iorwf	(___awmod@divisor+1)^0,w,c
  4939  001808  B4D8               	btfsc	status,2,c
  4940  00180A  EF09  F00C         	goto	u2851
  4941  00180E  EF0B  F00C         	goto	u2850
  4942  001812                     u2851:
  4943  001812  EF2F  F00C         	goto	l4385
  4944  001816                     u2850:
  4945  001816  0E01               	movlw	1
  4946  001818  6E42               	movwf	___awmod@counter^0,c
  4947  00181A  EF13  F00C         	goto	l4375
  4948  00181E                     l4373:
  4949  00181E  90D8               	bcf	status,0,c
  4950  001820  3640               	rlcf	___awmod@divisor^0,f,c
  4951  001822  3641               	rlcf	(___awmod@divisor+1)^0,f,c
  4952  001824  2A42               	incf	___awmod@counter^0,f,c
  4953  001826                     l4375:
  4954  001826  AE41               	btfss	(___awmod@divisor+1)^0,7,c
  4955  001828  EF18  F00C         	goto	u2861
  4956  00182C  EF1A  F00C         	goto	u2860
  4957  001830                     u2861:
  4958  001830  EF0F  F00C         	goto	l4373
  4959  001834                     u2860:
  4960  001834                     l4377:
  4961  001834  5040               	movf	___awmod@divisor^0,w,c
  4962  001836  5C3E               	subwf	___awmod@dividend^0,w,c
  4963  001838  5041               	movf	(___awmod@divisor+1)^0,w,c
  4964  00183A  583F               	subwfb	(___awmod@dividend+1)^0,w,c
  4965  00183C  A0D8               	btfss	status,0,c
  4966  00183E  EF23  F00C         	goto	u2871
  4967  001842  EF25  F00C         	goto	u2870
  4968  001846                     u2871:
  4969  001846  EF29  F00C         	goto	l4381
  4970  00184A                     u2870:
  4971  00184A  5040               	movf	___awmod@divisor^0,w,c
  4972  00184C  5E3E               	subwf	___awmod@dividend^0,f,c
  4973  00184E  5041               	movf	(___awmod@divisor+1)^0,w,c
  4974  001850  5A3F               	subwfb	(___awmod@dividend+1)^0,f,c
  4975  001852                     l4381:
  4976  001852  90D8               	bcf	status,0,c
  4977  001854  3241               	rrcf	(___awmod@divisor+1)^0,f,c
  4978  001856  3240               	rrcf	___awmod@divisor^0,f,c
  4979  001858  2E42               	decfsz	___awmod@counter^0,f,c
  4980  00185A  EF1A  F00C         	goto	l4377
  4981  00185E                     l4385:
  4982  00185E  5043               	movf	___awmod@sign^0,w,c
  4983  001860  B4D8               	btfsc	status,2,c
  4984  001862  EF35  F00C         	goto	u2881
  4985  001866  EF37  F00C         	goto	u2880
  4986  00186A                     u2881:
  4987  00186A  EF3B  F00C         	goto	l4389
  4988  00186E                     u2880:
  4989  00186E  6C3E               	negf	___awmod@dividend^0,c
  4990  001870  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  4991  001872  B0D8               	btfsc	status,0,c
  4992  001874  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  4993  001876                     l4389:
  4994  001876  C03E  F03E         	movff	___awmod@dividend,?___awmod
  4995  00187A  C03F  F03F         	movff	___awmod@dividend+1,?___awmod+1
  4996  00187E  0012               	return		;funcret
  4997  001880                     __end_of___awmod:
  4998                           	opt callstack 0
  4999                           
  5000 ;; *************** function ___awdiv *****************
  5001 ;; Defined at:
  5002 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  dividend        2    6[COMRAM] int 
  5005 ;;  divisor         2    8[COMRAM] int 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  quotient        2   12[COMRAM] int 
  5008 ;;  sign            1   11[COMRAM] unsigned char 
  5009 ;;  counter         1   10[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  2    6[COMRAM] int 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;Total ram usage:        8 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    2
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_WriteSTLED316SData
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text24
  5034  00170C                     __ptext24:
  5035                           	opt callstack 0
  5036  00170C                     ___awdiv:
  5037                           	opt callstack 27
  5038  00170C  0E00               	movlw	0
  5039  00170E  6E43               	movwf	___awdiv@sign^0,c
  5040  001710  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  5041  001712  EF8F  F00B         	goto	u2770
  5042  001716  EF8D  F00B         	goto	u2771
  5043  00171A                     u2771:
  5044  00171A  EF95  F00B         	goto	l4321
  5045  00171E                     u2770:
  5046  00171E  6C40               	negf	___awdiv@divisor^0,c
  5047  001720  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  5048  001722  B0D8               	btfsc	status,0,c
  5049  001724  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  5050  001726  0E01               	movlw	1
  5051  001728  6E43               	movwf	___awdiv@sign^0,c
  5052  00172A                     l4321:
  5053  00172A  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  5054  00172C  EF9C  F00B         	goto	u2780
  5055  001730  EF9A  F00B         	goto	u2781
  5056  001734                     u2781:
  5057  001734  EFA2  F00B         	goto	l4327
  5058  001738                     u2780:
  5059  001738  6C3E               	negf	___awdiv@dividend^0,c
  5060  00173A  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  5061  00173C  B0D8               	btfsc	status,0,c
  5062  00173E  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  5063  001740  0E01               	movlw	1
  5064  001742  1A43               	xorwf	___awdiv@sign^0,f,c
  5065  001744                     l4327:
  5066  001744  0E00               	movlw	0
  5067  001746  6E45               	movwf	(___awdiv@quotient+1)^0,c
  5068  001748  0E00               	movlw	0
  5069  00174A  6E44               	movwf	___awdiv@quotient^0,c
  5070  00174C  5040               	movf	___awdiv@divisor^0,w,c
  5071  00174E  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  5072  001750  B4D8               	btfsc	status,2,c
  5073  001752  EFAD  F00B         	goto	u2791
  5074  001756  EFAF  F00B         	goto	u2790
  5075  00175A                     u2791:
  5076  00175A  EFD7  F00B         	goto	l4349
  5077  00175E                     u2790:
  5078  00175E  0E01               	movlw	1
  5079  001760  6E42               	movwf	___awdiv@counter^0,c
  5080  001762  EFB7  F00B         	goto	l4335
  5081  001766                     l4333:
  5082  001766  90D8               	bcf	status,0,c
  5083  001768  3640               	rlcf	___awdiv@divisor^0,f,c
  5084  00176A  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  5085  00176C  2A42               	incf	___awdiv@counter^0,f,c
  5086  00176E                     l4335:
  5087  00176E  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  5088  001770  EFBC  F00B         	goto	u2801
  5089  001774  EFBE  F00B         	goto	u2800
  5090  001778                     u2801:
  5091  001778  EFB3  F00B         	goto	l4333
  5092  00177C                     u2800:
  5093  00177C                     l4337:
  5094  00177C  90D8               	bcf	status,0,c
  5095  00177E  3644               	rlcf	___awdiv@quotient^0,f,c
  5096  001780  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  5097  001782  5040               	movf	___awdiv@divisor^0,w,c
  5098  001784  5C3E               	subwf	___awdiv@dividend^0,w,c
  5099  001786  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5100  001788  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  5101  00178A  A0D8               	btfss	status,0,c
  5102  00178C  EFCA  F00B         	goto	u2811
  5103  001790  EFCC  F00B         	goto	u2810
  5104  001794                     u2811:
  5105  001794  EFD1  F00B         	goto	l4345
  5106  001798                     u2810:
  5107  001798  5040               	movf	___awdiv@divisor^0,w,c
  5108  00179A  5E3E               	subwf	___awdiv@dividend^0,f,c
  5109  00179C  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5110  00179E  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  5111  0017A0  8044               	bsf	___awdiv@quotient^0,0,c
  5112  0017A2                     l4345:
  5113  0017A2  90D8               	bcf	status,0,c
  5114  0017A4  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  5115  0017A6  3240               	rrcf	___awdiv@divisor^0,f,c
  5116  0017A8  2E42               	decfsz	___awdiv@counter^0,f,c
  5117  0017AA  EFBE  F00B         	goto	l4337
  5118  0017AE                     l4349:
  5119  0017AE  5043               	movf	___awdiv@sign^0,w,c
  5120  0017B0  B4D8               	btfsc	status,2,c
  5121  0017B2  EFDD  F00B         	goto	u2821
  5122  0017B6  EFDF  F00B         	goto	u2820
  5123  0017BA                     u2821:
  5124  0017BA  EFE3  F00B         	goto	l4353
  5125  0017BE                     u2820:
  5126  0017BE  6C44               	negf	___awdiv@quotient^0,c
  5127  0017C0  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  5128  0017C2  B0D8               	btfsc	status,0,c
  5129  0017C4  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  5130  0017C6                     l4353:
  5131  0017C6  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  5132  0017CA  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  5133  0017CE  0012               	return		;funcret
  5134  0017D0                     __end_of___awdiv:
  5135                           	opt callstack 0
  5136                           
  5137 ;; *************** function _Get7Seg *****************
  5138 ;; Defined at:
  5139 ;;		line 107 in file "Display.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  Digit           2    6[COMRAM] int 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  Data            1   10[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      unsigned char 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;Total ram usage:        5 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    2
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_WriteSTLED316SData
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text25
  5168  001640                     __ptext25:
  5169                           	opt callstack 0
  5170  001640                     _Get7Seg:
  5171                           	opt callstack 27
  5172  001640                     
  5173                           ;Display.c: 107: unsigned char Get7Seg (int Digit);Display.c: 108: {;Display.c: 109:  un
      +                          signed char Data;;Display.c: 111:  switch (Digit)
  5174  001640  EF4E  F00B         	goto	l4303
  5175  001644                     l4279:
  5176                           
  5177                           ;Display.c: 114:    Data = 0x3F;
  5178  001644  0E3F               	movlw	63
  5179  001646  6E42               	movwf	Get7Seg@Data^0,c
  5180                           
  5181                           ;Display.c: 115:    break;
  5182  001648  EF84  F00B         	goto	l4305
  5183  00164C                     l4281:
  5184                           
  5185                           ;Display.c: 117:    Data = 0x06;
  5186  00164C  0E06               	movlw	6
  5187  00164E  6E42               	movwf	Get7Seg@Data^0,c
  5188                           
  5189                           ;Display.c: 118:    break;
  5190  001650  EF84  F00B         	goto	l4305
  5191  001654                     l4283:
  5192                           
  5193                           ;Display.c: 120:    Data = 0x5B;
  5194  001654  0E5B               	movlw	91
  5195  001656  6E42               	movwf	Get7Seg@Data^0,c
  5196                           
  5197                           ;Display.c: 121:    break;
  5198  001658  EF84  F00B         	goto	l4305
  5199  00165C                     l4285:
  5200                           
  5201                           ;Display.c: 123:    Data = 0x4F;
  5202  00165C  0E4F               	movlw	79
  5203  00165E  6E42               	movwf	Get7Seg@Data^0,c
  5204                           
  5205                           ;Display.c: 124:    break;
  5206  001660  EF84  F00B         	goto	l4305
  5207  001664                     l4287:
  5208                           
  5209                           ;Display.c: 126:    Data = 0x66;
  5210  001664  0E66               	movlw	102
  5211  001666  6E42               	movwf	Get7Seg@Data^0,c
  5212                           
  5213                           ;Display.c: 127:    break;
  5214  001668  EF84  F00B         	goto	l4305
  5215  00166C                     l4289:
  5216                           
  5217                           ;Display.c: 129:    Data = 0x6D;
  5218  00166C  0E6D               	movlw	109
  5219  00166E  6E42               	movwf	Get7Seg@Data^0,c
  5220                           
  5221                           ;Display.c: 130:    break;
  5222  001670  EF84  F00B         	goto	l4305
  5223  001674                     l4291:
  5224                           
  5225                           ;Display.c: 132:    Data = 0x7D;
  5226  001674  0E7D               	movlw	125
  5227  001676  6E42               	movwf	Get7Seg@Data^0,c
  5228                           
  5229                           ;Display.c: 133:    break;
  5230  001678  EF84  F00B         	goto	l4305
  5231  00167C                     l4293:
  5232                           
  5233                           ;Display.c: 135:    Data = 0x07;
  5234  00167C  0E07               	movlw	7
  5235  00167E  6E42               	movwf	Get7Seg@Data^0,c
  5236                           
  5237                           ;Display.c: 136:    break;
  5238  001680  EF84  F00B         	goto	l4305
  5239  001684                     l4295:
  5240                           
  5241                           ;Display.c: 138:    Data = 0x7F;
  5242  001684  0E7F               	movlw	127
  5243  001686  6E42               	movwf	Get7Seg@Data^0,c
  5244                           
  5245                           ;Display.c: 139:    break;
  5246  001688  EF84  F00B         	goto	l4305
  5247  00168C                     l4297:
  5248                           
  5249                           ;Display.c: 141:    Data = 0x6F;
  5250  00168C  0E6F               	movlw	111
  5251  00168E  6E42               	movwf	Get7Seg@Data^0,c
  5252                           
  5253                           ;Display.c: 142:    break;
  5254  001690  EF84  F00B         	goto	l4305
  5255  001694                     l4299:
  5256                           
  5257                           ;Display.c: 144:    Data = 0x00;
  5258  001694  0E00               	movlw	0
  5259  001696  6E42               	movwf	Get7Seg@Data^0,c
  5260                           
  5261                           ;Display.c: 145:    break;
  5262  001698  EF84  F00B         	goto	l4305
  5263  00169C                     l4303:
  5264  00169C  C03E  F040         	movff	Get7Seg@Digit,??_Get7Seg
  5265  0016A0  C03F  F041         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5266                           
  5267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5268                           ; Switch size 1, requested type "simple"
  5269                           ; Number of cases is 1, Range of values is 0 to 0
  5270                           ; switch strategies available:
  5271                           ; Name         Instructions Cycles
  5272                           ; simple_byte            4     3 (average)
  5273                           ;	Chosen strategy is simple_byte
  5274  0016A4  5041               	movf	(??_Get7Seg+1)^0,w,c
  5275  0016A6  0A00               	xorlw	0	; case 0
  5276  0016A8  B4D8               	btfsc	status,2,c
  5277  0016AA  EF59  F00B         	goto	l5499
  5278  0016AE  EF4A  F00B         	goto	l4299
  5279  0016B2                     l5499:
  5280                           
  5281                           ; Switch size 1, requested type "simple"
  5282                           ; Number of cases is 10, Range of values is 0 to 9
  5283                           ; switch strategies available:
  5284                           ; Name         Instructions Cycles
  5285                           ; simple_byte           31    16 (average)
  5286                           ;	Chosen strategy is simple_byte
  5287  0016B2  5040               	movf	??_Get7Seg^0,w,c
  5288  0016B4  0A00               	xorlw	0	; case 0
  5289  0016B6  B4D8               	btfsc	status,2,c
  5290  0016B8  EF22  F00B         	goto	l4279
  5291  0016BC  0A01               	xorlw	1	; case 1
  5292  0016BE  B4D8               	btfsc	status,2,c
  5293  0016C0  EF26  F00B         	goto	l4281
  5294  0016C4  0A03               	xorlw	3	; case 2
  5295  0016C6  B4D8               	btfsc	status,2,c
  5296  0016C8  EF2A  F00B         	goto	l4283
  5297  0016CC  0A01               	xorlw	1	; case 3
  5298  0016CE  B4D8               	btfsc	status,2,c
  5299  0016D0  EF2E  F00B         	goto	l4285
  5300  0016D4  0A07               	xorlw	7	; case 4
  5301  0016D6  B4D8               	btfsc	status,2,c
  5302  0016D8  EF32  F00B         	goto	l4287
  5303  0016DC  0A01               	xorlw	1	; case 5
  5304  0016DE  B4D8               	btfsc	status,2,c
  5305  0016E0  EF36  F00B         	goto	l4289
  5306  0016E4  0A03               	xorlw	3	; case 6
  5307  0016E6  B4D8               	btfsc	status,2,c
  5308  0016E8  EF3A  F00B         	goto	l4291
  5309  0016EC  0A01               	xorlw	1	; case 7
  5310  0016EE  B4D8               	btfsc	status,2,c
  5311  0016F0  EF3E  F00B         	goto	l4293
  5312  0016F4  0A0F               	xorlw	15	; case 8
  5313  0016F6  B4D8               	btfsc	status,2,c
  5314  0016F8  EF42  F00B         	goto	l4295
  5315  0016FC  0A01               	xorlw	1	; case 9
  5316  0016FE  B4D8               	btfsc	status,2,c
  5317  001700  EF46  F00B         	goto	l4297
  5318  001704  EF4A  F00B         	goto	l4299
  5319  001708                     l4305:
  5320                           
  5321                           ;Display.c: 147:  return (Data);
  5322  001708  5042               	movf	Get7Seg@Data^0,w,c
  5323  00170A  0012               	return		;funcret
  5324  00170C                     __end_of_Get7Seg:
  5325                           	opt callstack 0
  5326                           
  5327 ;; *************** function _Homing_Again_Auto *****************
  5328 ;; Defined at:
  5329 ;;		line 1006 in file "main.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        2 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    4
  5350 ;; This function calls:
  5351 ;;		_AD_capture_BattVoltage
  5352 ;;		_MotorBREAK
  5353 ;;		_MotorON
  5354 ;;		_Read_IR
  5355 ;;		_WriteSTLED316SErr
  5356 ;;		_WriteSTLED316SMode
  5357 ;;		_delay_1ms
  5358 ;;		_readWeighingData
  5359 ;; This function is called by:
  5360 ;;		_main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text26
  5365  00101A                     __ptext26:
  5366                           	opt callstack 0
  5367  00101A                     _Homing_Again_Auto:
  5368                           	opt callstack 26
  5369  00101A                     
  5370                           ;main.c: 1009:     IR_SENSORF = 0;
  5371  00101A  0E00               	movlw	0
  5372  00101C  6E14               	movwf	(_IR_SENSORF+1)^0,c
  5373  00101E  0E00               	movlw	0
  5374  001020  6E13               	movwf	_IR_SENSORF^0,c
  5375  001022                     
  5376                           ;main.c: 1010:     WriteSTLED316SMode('A');
  5377  001022  0E41               	movlw	65
  5378  001024  EC2C  F00A         	call	_WriteSTLED316SMode
  5379  001028                     
  5380                           ;main.c: 1012:     if (vibration_mode == 1)
  5381  001028  0432               	decf	_vibration_mode^0,w,c
  5382  00102A  A4D8               	btfss	status,2,c
  5383  00102C  EF1A  F008         	goto	u3171
  5384  001030  EF1C  F008         	goto	u3170
  5385  001034                     u3171:
  5386  001034  EF31  F008         	goto	l350
  5387  001038                     u3170:
  5388  001038                     
  5389                           ;main.c: 1013:     {;main.c: 1014:         LATCbits.LATC1 = 1;
  5390  001038  828B               	bsf	139,1,c	;volatile
  5391  00103A                     
  5392                           ;main.c: 1015:         delay_1ms(Vmotor_Time);
  5393  00103A  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5394  00103E  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5395  001042  ECD7  F00E         	call	_delay_1ms	;wreg free
  5396  001046                     
  5397                           ;main.c: 1016:         LATCbits.LATC1 = 0;
  5398  001046  928B               	bcf	139,1,c	;volatile
  5399  001048                     l4737:
  5400                           
  5401                           ;main.c: 1017:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5402  001048  0E04               	movlw	4
  5403  00104A  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5404  00104C  0E0C               	movlw	12
  5405  00104E  6E47               	movwf	??_Homing_Again_Auto^0,c
  5406  001050  0E34               	movlw	52
  5407  001052                     u3817:
  5408  001052  2EE8               	decfsz	wreg,f,c
  5409  001054  D7FE               	bra	u3817
  5410  001056  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5411  001058  D7FC               	bra	u3817
  5412  00105A  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5413  00105C  D7FA               	bra	u3817
  5414                           
  5415                           ;main.c: 1018:     }
  5416  00105E  EF34  F008         	goto	l4741
  5417  001062                     l350:
  5418                           
  5419                           ;main.c: 1020:     {;main.c: 1021:         LATCbits.LATC1 = 0;
  5420  001062  928B               	bcf	139,1,c	;volatile
  5421  001064  EF24  F008         	goto	l4737
  5422  001068                     l4741:
  5423                           
  5424                           ;main.c: 1025:     LATAbits.LATA2 = 1;
  5425  001068  8489               	bsf	137,2,c	;volatile
  5426                           
  5427                           ;main.c: 1027:     while ( Stop==0)
  5428  00106A  EFE4  F008         	goto	l4799
  5429  00106E                     l353:
  5430  00106E  0004               	clrwdt		;# 
  5431  001070                     
  5432                           ;main.c: 1030:         readWeighingData();
  5433  001070  EC8B  F00D         	call	_readWeighingData	;wreg free
  5434  001074                     
  5435                           ;main.c: 1031:         AD_capture_BattVoltage();
  5436  001074  EC48  F00E         	call	_AD_capture_BattVoltage	;wreg free
  5437  001078                     
  5438                           ;main.c: 1032:         delay_1ms(Motor_Pause_Time);
  5439  001078  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  5440  00107C  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5441  001080  ECD7  F00E         	call	_delay_1ms	;wreg free
  5442  001084                     
  5443                           ;main.c: 1033:         MotorON();
  5444  001084  EC82  F00F         	call	_MotorON	;wreg free
  5445  001088                     
  5446                           ;main.c: 1034:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5447  001088  0E04               	movlw	4
  5448  00108A  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5449  00108C  0E8E               	movlw	142
  5450  00108E  6E47               	movwf	??_Homing_Again_Auto^0,c
  5451  001090  0E12               	movlw	18
  5452  001092                     u3827:
  5453  001092  2EE8               	decfsz	wreg,f,c
  5454  001094  D7FE               	bra	u3827
  5455  001096  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5456  001098  D7FC               	bra	u3827
  5457  00109A  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5458  00109C  D7FA               	bra	u3827
  5459  00109E  D000               	nop2	
  5460  0010A0                     
  5461                           ;main.c: 1036:         errorcounter = 30;
  5462  0010A0  0E1E               	movlw	30
  5463  0010A2  6E52               	movwf	_errorcounter^0,c	;volatile
  5464  0010A4  0E00               	movlw	0
  5465  0010A6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5466  0010A8  0E00               	movlw	0
  5467  0010AA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5468  0010AC  0E00               	movlw	0
  5469  0010AE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5470  0010B0                     l4755:
  5471                           
  5472                           ;main.c: 1039:         {;main.c: 1040:           IR_SENSORF = Read_IR();
  5473  0010B0  EC26  F00F         	call	_Read_IR	;wreg free
  5474  0010B4  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5475  0010B8  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5476  0010BC                     
  5477                           ;main.c: 1041:           if(errorcounter == 0)
  5478  0010BC  5052               	movf	_errorcounter^0,w,c	;volatile
  5479  0010BE  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5480  0010C0  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5481  0010C2  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5482  0010C4  A4D8               	btfss	status,2,c
  5483  0010C6  EF67  F008         	goto	u3181
  5484  0010CA  EF69  F008         	goto	u3180
  5485  0010CE                     u3181:
  5486  0010CE  EF6E  F008         	goto	l4763
  5487  0010D2                     u3180:
  5488  0010D2                     
  5489                           ;main.c: 1042:           {;main.c: 1043:               WriteSTLED316SErr('1');
  5490  0010D2  0E31               	movlw	49
  5491  0010D4  ECAC  F00A         	call	_WriteSTLED316SErr
  5492  0010D8                     
  5493                           ;main.c: 1044:               MotorBREAK();
  5494  0010D8  EC87  F00F         	call	_MotorBREAK	;wreg free
  5495  0010DC                     l4763:
  5496                           
  5497                           ;main.c: 1046:         }while(IR_SENSORF != 0);
  5498  0010DC  5013               	movf	_IR_SENSORF^0,w,c
  5499  0010DE  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5500  0010E0  A4D8               	btfss	status,2,c
  5501  0010E2  EF75  F008         	goto	u3191
  5502  0010E6  EF77  F008         	goto	u3190
  5503  0010EA                     u3191:
  5504  0010EA  EF58  F008         	goto	l4755
  5505  0010EE                     u3190:
  5506  0010EE                     
  5507                           ;main.c: 1048:          _delay((unsigned long)((30)*(8000000/4000.0)));
  5508  0010EE  0E4E               	movlw	78
  5509  0010F0  6E47               	movwf	??_Homing_Again_Auto^0,c
  5510  0010F2  0EEB               	movlw	235
  5511  0010F4                     u3837:
  5512  0010F4  2EE8               	decfsz	wreg,f,c
  5513  0010F6  D7FE               	bra	u3837
  5514  0010F8  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5515  0010FA  D7FC               	bra	u3837
  5516  0010FC  F000               	nop	
  5517  0010FE                     
  5518                           ;main.c: 1049:          errorcounter = 30;
  5519  0010FE  0E1E               	movlw	30
  5520  001100  6E52               	movwf	_errorcounter^0,c	;volatile
  5521  001102  0E00               	movlw	0
  5522  001104  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5523  001106  0E00               	movlw	0
  5524  001108  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5525  00110A  0E00               	movlw	0
  5526  00110C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5527  00110E                     l4769:
  5528                           
  5529                           ;main.c: 1052:         {;main.c: 1053:           IR_SENSORF = Read_IR();
  5530  00110E  EC26  F00F         	call	_Read_IR	;wreg free
  5531  001112  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5532  001116  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5533  00111A                     
  5534                           ;main.c: 1054:           if(errorcounter == 0)
  5535  00111A  5052               	movf	_errorcounter^0,w,c	;volatile
  5536  00111C  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5537  00111E  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5538  001120  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5539  001122  A4D8               	btfss	status,2,c
  5540  001124  EF96  F008         	goto	u3201
  5541  001128  EF98  F008         	goto	u3200
  5542  00112C                     u3201:
  5543  00112C  EF9D  F008         	goto	l4777
  5544  001130                     u3200:
  5545  001130                     
  5546                           ;main.c: 1055:           {;main.c: 1056:               WriteSTLED316SErr('2');
  5547  001130  0E32               	movlw	50
  5548  001132  ECAC  F00A         	call	_WriteSTLED316SErr
  5549  001136                     
  5550                           ;main.c: 1057:               MotorBREAK();
  5551  001136  EC87  F00F         	call	_MotorBREAK	;wreg free
  5552  00113A                     l4777:
  5553                           
  5554                           ;main.c: 1059:         }while(IR_SENSORF != 1);
  5555  00113A  0413               	decf	_IR_SENSORF^0,w,c
  5556  00113C  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5557  00113E  A4D8               	btfss	status,2,c
  5558  001140  EFA4  F008         	goto	u3211
  5559  001144  EFA6  F008         	goto	u3210
  5560  001148                     u3211:
  5561  001148  EF87  F008         	goto	l4769
  5562  00114C                     u3210:
  5563  00114C                     
  5564                           ;main.c: 1061:         errorcounter = 30;
  5565  00114C  0E1E               	movlw	30
  5566  00114E  6E52               	movwf	_errorcounter^0,c	;volatile
  5567  001150  0E00               	movlw	0
  5568  001152  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5569  001154  0E00               	movlw	0
  5570  001156  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5571  001158  0E00               	movlw	0
  5572  00115A  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5573  00115C                     
  5574                           ;main.c: 1063:         delay_1ms(Motor_Stop_Delay_Time);
  5575  00115C  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5576  001160  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5577  001164  ECD7  F00E         	call	_delay_1ms	;wreg free
  5578  001168                     
  5579                           ;main.c: 1064:         MotorBREAK();
  5580  001168  EC87  F00F         	call	_MotorBREAK	;wreg free
  5581                           
  5582                           ;main.c: 1066:         if (vibration_mode == 1)
  5583  00116C  0432               	decf	_vibration_mode^0,w,c
  5584  00116E  A4D8               	btfss	status,2,c
  5585  001170  EFBC  F008         	goto	u3221
  5586  001174  EFBE  F008         	goto	u3220
  5587  001178                     u3221:
  5588  001178  EFD3  F008         	goto	l360
  5589  00117C                     u3220:
  5590  00117C                     
  5591                           ;main.c: 1067:         {;main.c: 1068:             LATCbits.LATC1 = 1;
  5592  00117C  828B               	bsf	139,1,c	;volatile
  5593  00117E                     
  5594                           ;main.c: 1069:             delay_1ms(Vmotor_Time);
  5595  00117E  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5596  001182  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5597  001186  ECD7  F00E         	call	_delay_1ms	;wreg free
  5598  00118A                     
  5599                           ;main.c: 1071:             LATCbits.LATC1 = 0;
  5600  00118A  928B               	bcf	139,1,c	;volatile
  5601  00118C                     
  5602                           ;main.c: 1072:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5603  00118C  0E04               	movlw	4
  5604  00118E  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5605  001190  0E0C               	movlw	12
  5606  001192  6E47               	movwf	??_Homing_Again_Auto^0,c
  5607  001194  0E34               	movlw	52
  5608  001196                     u3847:
  5609  001196  2EE8               	decfsz	wreg,f,c
  5610  001198  D7FE               	bra	u3847
  5611  00119A  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5612  00119C  D7FC               	bra	u3847
  5613  00119E  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5614  0011A0  D7FA               	bra	u3847
  5615                           
  5616                           ;main.c: 1073:         }
  5617  0011A2  EFDA  F008         	goto	l4795
  5618  0011A6                     l360:
  5619                           
  5620                           ;main.c: 1075:         {;main.c: 1076:             LATCbits.LATC1 = 0;
  5621  0011A6  928B               	bcf	139,1,c	;volatile
  5622  0011A8                     
  5623                           ;main.c: 1077:              delay_1ms(Vmotor_Time);
  5624  0011A8  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5625  0011AC  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5626  0011B0  ECD7  F00E         	call	_delay_1ms	;wreg free
  5627  0011B4                     l4795:
  5628                           
  5629                           ;main.c: 1080:         if(Stop==1)
  5630  0011B4  0435               	decf	_Stop^0,w,c
  5631  0011B6  A4D8               	btfss	status,2,c
  5632  0011B8  EFE0  F008         	goto	u3231
  5633  0011BC  EFE2  F008         	goto	u3230
  5634  0011C0                     u3231:
  5635  0011C0  EFE4  F008         	goto	l4799
  5636  0011C4                     u3230:
  5637  0011C4  EFEC  F008         	goto	l363
  5638  0011C8                     l4799:
  5639                           
  5640                           ;main.c: 1027:     while ( Stop==0)
  5641  0011C8  5035               	movf	_Stop^0,w,c
  5642  0011CA  B4D8               	btfsc	status,2,c
  5643  0011CC  EFEA  F008         	goto	u3241
  5644  0011D0  EFEC  F008         	goto	u3240
  5645  0011D4                     u3241:
  5646  0011D4  EF37  F008         	goto	l353
  5647  0011D8                     u3240:
  5648  0011D8                     l363:
  5649                           
  5650                           ;main.c: 1085:     LATAbits.LATA2 = 0;
  5651  0011D8  9489               	bcf	137,2,c	;volatile
  5652  0011DA                     
  5653                           ;main.c: 1087:     if (NUM == 0 || Stop==1)
  5654  0011DA  5019               	movf	_NUM^0,w,c
  5655  0011DC  101A               	iorwf	(_NUM+1)^0,w,c
  5656  0011DE  B4D8               	btfsc	status,2,c
  5657  0011E0  EFF4  F008         	goto	u3251
  5658  0011E4  EFF6  F008         	goto	u3250
  5659  0011E8                     u3251:
  5660  0011E8  EFFE  F008         	goto	l4805
  5661  0011EC                     u3250:
  5662  0011EC  0435               	decf	_Stop^0,w,c
  5663  0011EE  A4D8               	btfss	status,2,c
  5664  0011F0  EFFC  F008         	goto	u3261
  5665  0011F4  EFFE  F008         	goto	u3260
  5666  0011F8                     u3261:
  5667  0011F8  EF19  F009         	goto	l4815
  5668  0011FC                     u3260:
  5669  0011FC                     l4805:
  5670                           
  5671                           ;main.c: 1088:     {;main.c: 1090:         if (vibration_mode == 1)
  5672  0011FC  0432               	decf	_vibration_mode^0,w,c
  5673  0011FE  A4D8               	btfss	status,2,c
  5674  001200  EF04  F009         	goto	u3271
  5675  001204  EF06  F009         	goto	u3270
  5676  001208                     u3271:
  5677  001208  EF19  F009         	goto	l4815
  5678  00120C                     u3270:
  5679  00120C                     
  5680                           ;main.c: 1091:         {;main.c: 1092:             LATCbits.LATC1 = 1;
  5681  00120C  828B               	bsf	139,1,c	;volatile
  5682  00120E                     
  5683                           ;main.c: 1093:             delay_1ms(Vmotor_Time);
  5684  00120E  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5685  001212  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5686  001216  ECD7  F00E         	call	_delay_1ms	;wreg free
  5687  00121A                     
  5688                           ;main.c: 1095:             LATCbits.LATC1 = 0;
  5689  00121A  928B               	bcf	139,1,c	;volatile
  5690  00121C                     
  5691                           ;main.c: 1096:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5692  00121C  0E04               	movlw	4
  5693  00121E  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5694  001220  0E0C               	movlw	12
  5695  001222  6E47               	movwf	??_Homing_Again_Auto^0,c
  5696  001224  0E34               	movlw	52
  5697  001226                     u3857:
  5698  001226  2EE8               	decfsz	wreg,f,c
  5699  001228  D7FE               	bra	u3857
  5700  00122A  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5701  00122C  D7FC               	bra	u3857
  5702  00122E  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5703  001230  D7FA               	bra	u3857
  5704  001232                     l4815:
  5705                           
  5706                           ;main.c: 1101:     NUM = 0;
  5707  001232  0E00               	movlw	0
  5708  001234  6E1A               	movwf	(_NUM+1)^0,c
  5709  001236  0E00               	movlw	0
  5710  001238  6E19               	movwf	_NUM^0,c
  5711  00123A                     
  5712                           ;main.c: 1102:     OpMode = AUTO_MODE;
  5713  00123A  0E02               	movlw	2
  5714  00123C  6E30               	movwf	_OpMode^0,c	;volatile
  5715  00123E  0012               	return		;funcret
  5716  001240                     __end_of_Homing_Again_Auto:
  5717                           	opt callstack 0
  5718                           
  5719 ;; *************** function _readWeighingData *****************
  5720 ;; Defined at:
  5721 ;;		line 1135 in file "main.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  i               2    8[COMRAM] int 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;Total ram usage:        2 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    3
  5742 ;; This function calls:
  5743 ;;		_Write1USART
  5744 ;;		_flushOut
  5745 ;; This function is called by:
  5746 ;;		_Homing_Again_Manual
  5747 ;;		_Homing_Again_Auto
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text27
  5752  001B16                     __ptext27:
  5753                           	opt callstack 0
  5754  001B16                     _readWeighingData:
  5755                           	opt callstack 26
  5756  001B16                     
  5757                           ;main.c: 1137:     int i;;main.c: 1139:     Serial_Buffer_Out[0] = 0xA5;
  5758  001B16  0EA5               	movlw	165
  5759  001B18  0100               	movlb	0	; () banked
  5760  001B1A  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  5761                           
  5762                           ;main.c: 1140:     Serial_Buffer_Out[1] = 0x45;
  5763  001B1C  0E45               	movlw	69
  5764  001B1E  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  5765                           
  5766                           ;main.c: 1141:     Serial_Buffer_Out[2] = 0x00;
  5767  001B20  0E00               	movlw	0
  5768  001B22  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  5769                           
  5770                           ;main.c: 1142:     Serial_Buffer_Out[3] = 0x45;
  5771  001B24  0E45               	movlw	69
  5772  001B26  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  5773                           
  5774                           ;main.c: 1143:     Serial_Buffer_Out[4] = 0x5A;
  5775  001B28  0E5A               	movlw	90
  5776  001B2A  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  5777  001B2C                     
  5778                           ; BSR set to: 0
  5779                           ;main.c: 1145:     INTCONbits.GIE=0;
  5780  001B2C  9EF2               	bcf	242,7,c	;volatile
  5781                           
  5782                           ;main.c: 1146:     for (i=0; i<5;i++)
  5783  001B2E  0E00               	movlw	0
  5784  001B30  6E41               	movwf	(readWeighingData@i+1)^0,c
  5785  001B32  0E00               	movlw	0
  5786  001B34  6E40               	movwf	readWeighingData@i^0,c
  5787  001B36                     l3061:
  5788                           
  5789                           ;main.c: 1147:     {;main.c: 1148:         Write1USART(Serial_Buffer_Out[i]);
  5790  001B36  0E60               	movlw	low _Serial_Buffer_Out
  5791  001B38  2440               	addwf	readWeighingData@i^0,w,c
  5792  001B3A  6ED9               	movwf	fsr2l,c
  5793  001B3C  0E00               	movlw	high _Serial_Buffer_Out
  5794  001B3E  2041               	addwfc	(readWeighingData@i+1)^0,w,c
  5795  001B40  6EDA               	movwf	fsr2h,c
  5796  001B42  50DF               	movf	indf2,w,c
  5797  001B44  EC4F  F00F         	call	_Write1USART
  5798  001B48                     
  5799                           ;main.c: 1149:     }
  5800  001B48  4A40               	infsnz	readWeighingData@i^0,f,c
  5801  001B4A  2A41               	incf	(readWeighingData@i+1)^0,f,c
  5802  001B4C  BE41               	btfsc	(readWeighingData@i+1)^0,7,c
  5803  001B4E  EFB2  F00D         	goto	u1701
  5804  001B52  5041               	movf	(readWeighingData@i+1)^0,w,c
  5805  001B54  E109               	bnz	u1700
  5806  001B56  0E05               	movlw	5
  5807  001B58  5C40               	subwf	readWeighingData@i^0,w,c
  5808  001B5A  A0D8               	btfss	status,0,c
  5809  001B5C  EFB2  F00D         	goto	u1701
  5810  001B60  EFB4  F00D         	goto	u1700
  5811  001B64                     u1701:
  5812  001B64  EF9B  F00D         	goto	l3061
  5813  001B68                     u1700:
  5814  001B68                     
  5815                           ;main.c: 1150:     INTCONbits.GIE=1;
  5816  001B68  8EF2               	bsf	242,7,c	;volatile
  5817  001B6A                     
  5818                           ;main.c: 1152:     flushOut();
  5819  001B6A  EC84  F00E         	call	_flushOut	;wreg free
  5820  001B6E  0012               	return		;funcret
  5821  001B70                     __end_of_readWeighingData:
  5822                           	opt callstack 0
  5823                           
  5824 ;; *************** function _flushOut *****************
  5825 ;; Defined at:
  5826 ;;		line 1122 in file "main.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  i               2    6[COMRAM] int 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;Total ram usage:        2 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    2
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_main
  5851 ;;		_readWeighingData
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text28
  5856  001D08                     __ptext28:
  5857                           	opt callstack 0
  5858  001D08                     _flushOut:
  5859                           	opt callstack 28
  5860  001D08                     
  5861                           ;main.c: 1124:     int i;;main.c: 1126:     for(i=0; i<16; i++)
  5862  001D08  0E00               	movlw	0
  5863  001D0A  6E3F               	movwf	(flushOut@i+1)^0,c
  5864  001D0C  0E00               	movlw	0
  5865  001D0E  6E3E               	movwf	flushOut@i^0,c
  5866  001D10                     l2723:
  5867                           
  5868                           ;main.c: 1127:     {;main.c: 1128:         Serial_Buffer_Out[i]=0x00;
  5869  001D10  0E60               	movlw	low _Serial_Buffer_Out
  5870  001D12  243E               	addwf	flushOut@i^0,w,c
  5871  001D14  6ED9               	movwf	fsr2l,c
  5872  001D16  0E00               	movlw	high _Serial_Buffer_Out
  5873  001D18  203F               	addwfc	(flushOut@i+1)^0,w,c
  5874  001D1A  6EDA               	movwf	fsr2h,c
  5875  001D1C  0E00               	movlw	0
  5876  001D1E  6EDF               	movwf	indf2,c
  5877  001D20                     
  5878                           ;main.c: 1129:     }
  5879  001D20  4A3E               	infsnz	flushOut@i^0,f,c
  5880  001D22  2A3F               	incf	(flushOut@i+1)^0,f,c
  5881  001D24  BE3F               	btfsc	(flushOut@i+1)^0,7,c
  5882  001D26  EF9E  F00E         	goto	u1411
  5883  001D2A  503F               	movf	(flushOut@i+1)^0,w,c
  5884  001D2C  E109               	bnz	u1410
  5885  001D2E  0E10               	movlw	16
  5886  001D30  5C3E               	subwf	flushOut@i^0,w,c
  5887  001D32  A0D8               	btfss	status,0,c
  5888  001D34  EF9E  F00E         	goto	u1411
  5889  001D38  EFA0  F00E         	goto	u1410
  5890  001D3C                     u1411:
  5891  001D3C  EF88  F00E         	goto	l2723
  5892  001D40                     u1410:
  5893  001D40  0012               	return		;funcret
  5894  001D42                     __end_of_flushOut:
  5895                           	opt callstack 0
  5896                           
  5897 ;; *************** function _Write1USART *****************
  5898 ;; Defined at:
  5899 ;;		line 48 in file "usart.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  data            1    wreg     unsigned char 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  data            1    6[COMRAM] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      void 
  5906 ;; Registers used:
  5907 ;;		wreg
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;Total ram usage:        1 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    2
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_main
  5924 ;;		_readWeighingData
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text29
  5929  001E9E                     __ptext29:
  5930                           	opt callstack 0
  5931  001E9E                     _Write1USART:
  5932                           	opt callstack 28
  5933                           
  5934                           ;incstack = 0
  5935                           ;Write1USART@data stored from wreg
  5936  001E9E  6E3E               	movwf	Write1USART@data^0,c
  5937  001EA0                     
  5938                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  5939  001EA0  C03E  FFAE         	movff	Write1USART@data,4014	;volatile
  5940  001EA4                     l558:
  5941  001EA4  A2AD               	btfss	173,1,c	;volatile
  5942  001EA6  EF57  F00F         	goto	u1401
  5943  001EAA  EF59  F00F         	goto	u1400
  5944  001EAE                     u1401:
  5945  001EAE  EF52  F00F         	goto	l558
  5946  001EB2                     u1400:
  5947  001EB2  0012               	return		;funcret
  5948  001EB4                     __end_of_Write1USART:
  5949                           	opt callstack 0
  5950                           
  5951 ;; *************** function _WriteSTLED316SMode *****************
  5952 ;; Defined at:
  5953 ;;		line 191 in file "Display.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  msg             1    wreg     unsigned char 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  msg             1   14[COMRAM] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;Total ram usage:        3 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    3
  5974 ;; This function calls:
  5975 ;;		_STLED316s_SPI_SendData
  5976 ;; This function is called by:
  5977 ;;		_Homing_Again_Auto
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text30
  5982  001458                     __ptext30:
  5983                           	opt callstack 0
  5984  001458                     _WriteSTLED316SMode:
  5985                           	opt callstack 26
  5986                           
  5987                           ;incstack = 0
  5988                           ;WriteSTLED316SMode@msg stored from wreg
  5989  001458  6E46               	movwf	WriteSTLED316SMode@msg^0,c
  5990  00145A                     
  5991                           ;Display.c: 191: void WriteSTLED316SMode( char msg);Display.c: 192: {;Display.c: 193:  L
      +                          ATCbits.LATC4 = 0;
  5992  00145A  988B               	bcf	139,4,c	;volatile
  5993  00145C                     
  5994                           ;Display.c: 195:  STLED316s_SPI_SendData (0x00 );
  5995  00145C  0E00               	movlw	0
  5996  00145E  ECDD  F00C         	call	_STLED316s_SPI_SendData
  5997  001462                     
  5998                           ;Display.c: 198:  LATCbits.LATC4 = 1;
  5999  001462  888B               	bsf	139,4,c	;volatile
  6000  001464                     
  6001                           ;Display.c: 200:  LATCbits.LATC4 = 0;
  6002  001464  988B               	bcf	139,4,c	;volatile
  6003                           
  6004                           ;Display.c: 202:  STLED316s_SPI_SendData (0x00);
  6005  001466  0E00               	movlw	0
  6006  001468  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6007                           
  6008                           ;Display.c: 204:  switch(msg)
  6009  00146C  EF78  F00A         	goto	l4483
  6010  001470                     l4465:
  6011                           
  6012                           ;Display.c: 207:      STLED316s_SPI_SendData (0x79);
  6013  001470  0E79               	movlw	121
  6014  001472  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6015                           
  6016                           ;Display.c: 208:         STLED316s_SPI_SendData (0x3F);
  6017  001476  0E3F               	movlw	63
  6018  001478  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6019                           
  6020                           ;Display.c: 209:        break;
  6021  00147C  EFA5  F00A         	goto	l446
  6022  001480                     l4467:
  6023                           
  6024                           ;Display.c: 211:      STLED316s_SPI_SendData (0x3F);
  6025  001480  0E3F               	movlw	63
  6026  001482  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6027                           
  6028                           ;Display.c: 212:         STLED316s_SPI_SendData (0x73);
  6029  001486  0E73               	movlw	115
  6030  001488  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6031                           
  6032                           ;Display.c: 213:       break;
  6033  00148C  EFA5  F00A         	goto	l446
  6034  001490                     l4469:
  6035                           
  6036                           ;Display.c: 215:      STLED316s_SPI_SendData (0x39);
  6037  001490  0E39               	movlw	57
  6038  001492  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6039                           
  6040                           ;Display.c: 216:         STLED316s_SPI_SendData (0x77);
  6041  001496  0E77               	movlw	119
  6042  001498  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6043                           
  6044                           ;Display.c: 217:        break;
  6045  00149C  EFA5  F00A         	goto	l446
  6046  0014A0                     l4471:
  6047                           
  6048                           ;Display.c: 219:      STLED316s_SPI_SendData (0x00);
  6049  0014A0  0E00               	movlw	0
  6050  0014A2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6051                           
  6052                           ;Display.c: 220:         STLED316s_SPI_SendData (0x00);
  6053  0014A6  0E00               	movlw	0
  6054  0014A8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6055                           
  6056                           ;Display.c: 221:        break;
  6057  0014AC  EFA5  F00A         	goto	l446
  6058  0014B0                     l4473:
  6059                           
  6060                           ;Display.c: 223:      STLED316s_SPI_SendData (0x00);
  6061  0014B0  0E00               	movlw	0
  6062  0014B2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6063                           
  6064                           ;Display.c: 224:         STLED316s_SPI_SendData (0x3F);
  6065  0014B6  0E3F               	movlw	63
  6066  0014B8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6067                           
  6068                           ;Display.c: 225:         break;
  6069  0014BC  EFA5  F00A         	goto	l446
  6070  0014C0                     l4475:
  6071                           
  6072                           ;Display.c: 227:      STLED316s_SPI_SendData (0x79);
  6073  0014C0  0E79               	movlw	121
  6074  0014C2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6075                           
  6076                           ;Display.c: 228:         STLED316s_SPI_SendData (0x06);
  6077  0014C6  0E06               	movlw	6
  6078  0014C8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6079                           
  6080                           ;Display.c: 229:         break;
  6081  0014CC  EFA5  F00A         	goto	l446
  6082  0014D0                     l4477:
  6083                           
  6084                           ;Display.c: 231:      STLED316s_SPI_SendData (0x77);
  6085  0014D0  0E77               	movlw	119
  6086  0014D2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6087                           
  6088                           ;Display.c: 232:         STLED316s_SPI_SendData (0x3E);
  6089  0014D6  0E3E               	movlw	62
  6090  0014D8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6091                           
  6092                           ;Display.c: 233:         break;
  6093  0014DC  EFA5  F00A         	goto	l446
  6094  0014E0                     l4479:
  6095                           
  6096                           ;Display.c: 235:      STLED316s_SPI_SendData (0x00);
  6097  0014E0  0E00               	movlw	0
  6098  0014E2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6099                           
  6100                           ;Display.c: 236:         STLED316s_SPI_SendData (0x3E);
  6101  0014E6  0E3E               	movlw	62
  6102  0014E8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6103                           
  6104                           ;Display.c: 237:         break;
  6105  0014EC  EFA5  F00A         	goto	l446
  6106  0014F0                     l4483:
  6107  0014F0  5046               	movf	WriteSTLED316SMode@msg^0,w,c
  6108  0014F2  6E44               	movwf	??_WriteSTLED316SMode^0,c
  6109  0014F4  6A45               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6110                           
  6111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6112                           ; Switch size 1, requested type "simple"
  6113                           ; Number of cases is 1, Range of values is 0 to 0
  6114                           ; switch strategies available:
  6115                           ; Name         Instructions Cycles
  6116                           ; simple_byte            4     3 (average)
  6117                           ;	Chosen strategy is simple_byte
  6118  0014F6  5045               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6119  0014F8  0A00               	xorlw	0	; case 0
  6120  0014FA  B4D8               	btfsc	status,2,c
  6121  0014FC  EF82  F00A         	goto	l5501
  6122  001500  EFA5  F00A         	goto	l446
  6123  001504                     l5501:
  6124                           
  6125                           ; Switch size 1, requested type "simple"
  6126                           ; Number of cases is 8, Range of values is 65 to 88
  6127                           ; switch strategies available:
  6128                           ; Name         Instructions Cycles
  6129                           ; simple_byte           25    13 (average)
  6130                           ;	Chosen strategy is simple_byte
  6131  001504  5044               	movf	??_WriteSTLED316SMode^0,w,c
  6132  001506  0A41               	xorlw	65	; case 65
  6133  001508  B4D8               	btfsc	status,2,c
  6134  00150A  EF68  F00A         	goto	l4477
  6135  00150E  0A02               	xorlw	2	; case 67
  6136  001510  B4D8               	btfsc	status,2,c
  6137  001512  EF48  F00A         	goto	l4469
  6138  001516  0A06               	xorlw	6	; case 69
  6139  001518  B4D8               	btfsc	status,2,c
  6140  00151A  EF38  F00A         	goto	l4465
  6141  00151E  0A02               	xorlw	2	; case 71
  6142  001520  B4D8               	btfsc	status,2,c
  6143  001522  EF58  F00A         	goto	l4473
  6144  001526  0A08               	xorlw	8	; case 79
  6145  001528  B4D8               	btfsc	status,2,c
  6146  00152A  EF40  F00A         	goto	l4467
  6147  00152E  0A1C               	xorlw	28	; case 83
  6148  001530  B4D8               	btfsc	status,2,c
  6149  001532  EF60  F00A         	goto	l4475
  6150  001536  0A05               	xorlw	5	; case 86
  6151  001538  B4D8               	btfsc	status,2,c
  6152  00153A  EF70  F00A         	goto	l4479
  6153  00153E  0A0E               	xorlw	14	; case 88
  6154  001540  B4D8               	btfsc	status,2,c
  6155  001542  EF50  F00A         	goto	l4471
  6156  001546  EFA5  F00A         	goto	l446
  6157  00154A                     l446:
  6158                           
  6159                           ;Display.c: 244:  LATCbits.LATC4 = 1;
  6160  00154A  888B               	bsf	139,4,c	;volatile
  6161                           
  6162                           ;Display.c: 246:  LATCbits.LATC4 = 0;
  6163  00154C  988B               	bcf	139,4,c	;volatile
  6164  00154E                     
  6165                           ;Display.c: 248:  STLED316s_SPI_SendData ( 0x0D );
  6166  00154E  0E0D               	movlw	13
  6167  001550  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6168  001554                     
  6169                           ;Display.c: 250:  LATCbits.LATC4 = 1;
  6170  001554  888B               	bsf	139,4,c	;volatile
  6171  001556  0012               	return		;funcret
  6172  001558                     __end_of_WriteSTLED316SMode:
  6173                           	opt callstack 0
  6174                           
  6175 ;; *************** function _WriteSTLED316SErr *****************
  6176 ;; Defined at:
  6177 ;;		line 291 in file "Display.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  msg             1    wreg     unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  msg             1   14[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;Total ram usage:        3 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    3
  6198 ;; This function calls:
  6199 ;;		_STLED316s_SPI_SendData
  6200 ;; This function is called by:
  6201 ;;		_MotorPosition_Init
  6202 ;;		_Homing_Again_Manual
  6203 ;;		_Homing_Again_Auto
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text31
  6208  001558                     __ptext31:
  6209                           	opt callstack 0
  6210  001558                     _WriteSTLED316SErr:
  6211                           	opt callstack 26
  6212                           
  6213                           ;incstack = 0
  6214                           ;WriteSTLED316SErr@msg stored from wreg
  6215  001558  6E46               	movwf	WriteSTLED316SErr@msg^0,c
  6216  00155A                     
  6217                           ;Display.c: 291: void WriteSTLED316SErr( char msg);Display.c: 292: {;Display.c: 293:  LA
      +                          TCbits.LATC4 = 0;
  6218  00155A  988B               	bcf	139,4,c	;volatile
  6219  00155C                     
  6220                           ;Display.c: 295:  STLED316s_SPI_SendData (0x00 );
  6221  00155C  0E00               	movlw	0
  6222  00155E  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6223  001562                     
  6224                           ;Display.c: 298:  LATCbits.LATC4 = 1;
  6225  001562  888B               	bsf	139,4,c	;volatile
  6226  001564                     
  6227                           ;Display.c: 300:  LATCbits.LATC4 = 0;
  6228  001564  988B               	bcf	139,4,c	;volatile
  6229                           
  6230                           ;Display.c: 302:  STLED316s_SPI_SendData (0x00);
  6231  001566  0E00               	movlw	0
  6232  001568  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6233                           
  6234                           ;Display.c: 304:  switch(msg)
  6235  00156C  EFF0  F00A         	goto	l4447
  6236  001570                     l4431:
  6237                           
  6238                           ;Display.c: 307:      STLED316s_SPI_SendData (0x79);
  6239  001570  0E79               	movlw	121
  6240  001572  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6241                           
  6242                           ;Display.c: 308:         STLED316s_SPI_SendData (0x77);
  6243  001576  0E77               	movlw	119
  6244  001578  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6245                           
  6246                           ;Display.c: 309:        break;
  6247  00157C  EF19  F00B         	goto	l465
  6248  001580                     l4433:
  6249                           
  6250                           ;Display.c: 311:      STLED316s_SPI_SendData (0x79);
  6251  001580  0E79               	movlw	121
  6252  001582  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6253                           
  6254                           ;Display.c: 312:         STLED316s_SPI_SendData (0x3F);
  6255  001586  0E3F               	movlw	63
  6256  001588  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6257                           
  6258                           ;Display.c: 313:       break;
  6259  00158C  EF19  F00B         	goto	l465
  6260  001590                     l4435:
  6261                           
  6262                           ;Display.c: 315:      STLED316s_SPI_SendData (0x79);
  6263  001590  0E79               	movlw	121
  6264  001592  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6265                           
  6266                           ;Display.c: 316:         STLED316s_SPI_SendData (0x06);
  6267  001596  0E06               	movlw	6
  6268  001598  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6269                           
  6270                           ;Display.c: 317:        break;
  6271  00159C  EF19  F00B         	goto	l465
  6272  0015A0                     l4437:
  6273                           
  6274                           ;Display.c: 319:      STLED316s_SPI_SendData (0x79);
  6275  0015A0  0E79               	movlw	121
  6276  0015A2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6277                           
  6278                           ;Display.c: 320:         STLED316s_SPI_SendData (0x5B);
  6279  0015A6  0E5B               	movlw	91
  6280  0015A8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6281                           
  6282                           ;Display.c: 321:        break;
  6283  0015AC  EF19  F00B         	goto	l465
  6284  0015B0                     l4439:
  6285                           
  6286                           ;Display.c: 323:      STLED316s_SPI_SendData (0x00);
  6287  0015B0  0E00               	movlw	0
  6288  0015B2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6289                           
  6290                           ;Display.c: 324:         STLED316s_SPI_SendData (0x3F);
  6291  0015B6  0E3F               	movlw	63
  6292  0015B8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6293                           
  6294                           ;Display.c: 325:         break;
  6295  0015BC  EF19  F00B         	goto	l465
  6296  0015C0                     l4441:
  6297                           
  6298                           ;Display.c: 327:      STLED316s_SPI_SendData (0x79);
  6299  0015C0  0E79               	movlw	121
  6300  0015C2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6301                           
  6302                           ;Display.c: 328:         STLED316s_SPI_SendData (0x06);
  6303  0015C6  0E06               	movlw	6
  6304  0015C8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6305                           
  6306                           ;Display.c: 329:         break;
  6307  0015CC  EF19  F00B         	goto	l465
  6308  0015D0                     l4443:
  6309                           
  6310                           ;Display.c: 331:      STLED316s_SPI_SendData (0x77);
  6311  0015D0  0E77               	movlw	119
  6312  0015D2  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6313                           
  6314                           ;Display.c: 332:         STLED316s_SPI_SendData (0x3E);
  6315  0015D6  0E3E               	movlw	62
  6316  0015D8  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6317                           
  6318                           ;Display.c: 333:         break;
  6319  0015DC  EF19  F00B         	goto	l465
  6320  0015E0                     l4447:
  6321  0015E0  5046               	movf	WriteSTLED316SErr@msg^0,w,c
  6322  0015E2  6E44               	movwf	??_WriteSTLED316SErr^0,c
  6323  0015E4  6A45               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6324                           
  6325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6326                           ; Switch size 1, requested type "simple"
  6327                           ; Number of cases is 1, Range of values is 0 to 0
  6328                           ; switch strategies available:
  6329                           ; Name         Instructions Cycles
  6330                           ; simple_byte            4     3 (average)
  6331                           ;	Chosen strategy is simple_byte
  6332  0015E6  5045               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6333  0015E8  0A00               	xorlw	0	; case 0
  6334  0015EA  B4D8               	btfsc	status,2,c
  6335  0015EC  EFFA  F00A         	goto	l5503
  6336  0015F0  EF19  F00B         	goto	l465
  6337  0015F4                     l5503:
  6338                           
  6339                           ; Switch size 1, requested type "simple"
  6340                           ; Number of cases is 7, Range of values is 48 to 83
  6341                           ; switch strategies available:
  6342                           ; Name         Instructions Cycles
  6343                           ; simple_byte           22    12 (average)
  6344                           ;	Chosen strategy is simple_byte
  6345  0015F4  5044               	movf	??_WriteSTLED316SErr^0,w,c
  6346  0015F6  0A30               	xorlw	48	; case 48
  6347  0015F8  B4D8               	btfsc	status,2,c
  6348  0015FA  EFC0  F00A         	goto	l4433
  6349  0015FE  0A01               	xorlw	1	; case 49
  6350  001600  B4D8               	btfsc	status,2,c
  6351  001602  EFC8  F00A         	goto	l4435
  6352  001606  0A03               	xorlw	3	; case 50
  6353  001608  B4D8               	btfsc	status,2,c
  6354  00160A  EFD0  F00A         	goto	l4437
  6355  00160E  0A73               	xorlw	115	; case 65
  6356  001610  B4D8               	btfsc	status,2,c
  6357  001612  EFE8  F00A         	goto	l4443
  6358  001616  0A04               	xorlw	4	; case 69
  6359  001618  B4D8               	btfsc	status,2,c
  6360  00161A  EFB8  F00A         	goto	l4431
  6361  00161E  0A02               	xorlw	2	; case 71
  6362  001620  B4D8               	btfsc	status,2,c
  6363  001622  EFD8  F00A         	goto	l4439
  6364  001626  0A14               	xorlw	20	; case 83
  6365  001628  B4D8               	btfsc	status,2,c
  6366  00162A  EFE0  F00A         	goto	l4441
  6367  00162E  EF19  F00B         	goto	l465
  6368  001632                     l465:
  6369                           
  6370                           ;Display.c: 338:  LATCbits.LATC4 = 1;
  6371  001632  888B               	bsf	139,4,c	;volatile
  6372                           
  6373                           ;Display.c: 340:  LATCbits.LATC4 = 0;
  6374  001634  988B               	bcf	139,4,c	;volatile
  6375  001636                     
  6376                           ;Display.c: 342:  STLED316s_SPI_SendData ( 0x0D );
  6377  001636  0E0D               	movlw	13
  6378  001638  ECDD  F00C         	call	_STLED316s_SPI_SendData
  6379  00163C                     
  6380                           ;Display.c: 344:  LATCbits.LATC4 = 1;
  6381  00163C  888B               	bsf	139,4,c	;volatile
  6382  00163E  0012               	return		;funcret
  6383  001640                     __end_of_WriteSTLED316SErr:
  6384                           	opt callstack 0
  6385                           
  6386 ;; *************** function _STLED316s_SPI_SendData *****************
  6387 ;; Defined at:
  6388 ;;		line 89 in file "Display.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  Data            1    wreg     unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  Data            1    8[COMRAM] unsigned char 
  6393 ;;  t               1   11[COMRAM] unsigned char 
  6394 ;;  i               1   10[COMRAM] unsigned char 
  6395 ;;  temp            1    9[COMRAM] unsigned char 
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;Total ram usage:        6 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    2
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_InitSTLED316
  6416 ;;		_WriteSTLED316SData
  6417 ;;		_WriteSTLED316SMode
  6418 ;;		_WriteSTLED316SVibMode
  6419 ;;		_WriteSTLED316SErr
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text32
  6424  0019BA                     __ptext32:
  6425                           	opt callstack 0
  6426  0019BA                     _STLED316s_SPI_SendData:
  6427                           	opt callstack 27
  6428                           
  6429                           ;incstack = 0
  6430                           ;STLED316s_SPI_SendData@Data stored from wreg
  6431  0019BA  6E40               	movwf	STLED316s_SPI_SendData@Data^0,c
  6432  0019BC                     
  6433                           ;Display.c: 89: void STLED316s_SPI_SendData( unsigned char Data );Display.c: 90: {;Displ
      +                          ay.c: 91:  char i,temp,t;;Display.c: 93:  for(i = 0; i < 8 ;i ++)
  6434  0019BC  0E00               	movlw	0
  6435  0019BE  6E42               	movwf	STLED316s_SPI_SendData@i^0,c
  6436  0019C0                     l411:
  6437                           
  6438                           ;Display.c: 94:  {;Display.c: 95:   LATCbits.LATC3 = 0;
  6439  0019C0  968B               	bcf	139,3,c	;volatile
  6440  0019C2                     
  6441                           ;Display.c: 96:   temp = Data & (0x1 << i);
  6442  0019C2  C042  F03E         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6443  0019C6  0E01               	movlw	1
  6444  0019C8  6E3F               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6445  0019CA  2A3E               	incf	??_STLED316s_SPI_SendData^0,f,c
  6446  0019CC  EFEA  F00C         	goto	u2724
  6447  0019D0                     u2725:
  6448  0019D0  90D8               	bcf	status,0,c
  6449  0019D2  363F               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6450  0019D4                     u2724:
  6451  0019D4  2E3E               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6452  0019D6  EFE8  F00C         	goto	u2725
  6453  0019DA  503F               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6454  0019DC  1440               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6455  0019DE  6E41               	movwf	STLED316s_SPI_SendData@temp^0,c
  6456  0019E0                     
  6457                           ;Display.c: 97:   if(temp)
  6458  0019E0  5041               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6459  0019E2  B4D8               	btfsc	status,2,c
  6460  0019E4  EFF6  F00C         	goto	u2731
  6461  0019E8  EFF8  F00C         	goto	u2730
  6462  0019EC                     u2731:
  6463  0019EC  EFFB  F00C         	goto	l413
  6464  0019F0                     u2730:
  6465  0019F0                     
  6466                           ;Display.c: 98:    LATCbits.LATC5 = 1;
  6467  0019F0  8A8B               	bsf	139,5,c	;volatile
  6468  0019F2  EFFC  F00C         	goto	l4253
  6469  0019F6                     l413:
  6470                           
  6471                           ;Display.c: 100:    LATCbits.LATC5 = 0;
  6472  0019F6  9A8B               	bcf	139,5,c	;volatile
  6473  0019F8                     l4253:
  6474                           
  6475                           ;Display.c: 101:   for( t = 0 ; t < 5; t++);
  6476  0019F8  0E00               	movlw	0
  6477  0019FA  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6478  0019FC                     l4259:
  6479  0019FC  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6480  0019FE  0E04               	movlw	4
  6481  001A00  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6482  001A02  EF05  F00D         	goto	u2741
  6483  001A06  EF07  F00D         	goto	u2740
  6484  001A0A                     u2741:
  6485  001A0A  EFFE  F00C         	goto	l4259
  6486  001A0E                     u2740:
  6487  001A0E                     
  6488                           ;Display.c: 102:   LATCbits.LATC3 = 1;
  6489  001A0E  868B               	bsf	139,3,c	;volatile
  6490  001A10                     
  6491                           ;Display.c: 103:   for( t = 0 ; t < 5 ; t++);
  6492  001A10  0E00               	movlw	0
  6493  001A12  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6494  001A14                     l4269:
  6495  001A14  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6496  001A16  0E04               	movlw	4
  6497  001A18  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6498  001A1A  EF11  F00D         	goto	u2751
  6499  001A1E  EF13  F00D         	goto	u2750
  6500  001A22                     u2751:
  6501  001A22  EF0A  F00D         	goto	l4269
  6502  001A26                     u2750:
  6503  001A26                     
  6504                           ;Display.c: 104:  }
  6505  001A26  2A42               	incf	STLED316s_SPI_SendData@i^0,f,c
  6506  001A28  0E07               	movlw	7
  6507  001A2A  6442               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  6508  001A2C  EF1A  F00D         	goto	u2761
  6509  001A30  EF1C  F00D         	goto	u2760
  6510  001A34                     u2761:
  6511  001A34  EFE0  F00C         	goto	l411
  6512  001A38                     u2760:
  6513  001A38  0012               	return		;funcret
  6514  001A3A                     __end_of_STLED316s_SPI_SendData:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function _Read_IR *****************
  6518 ;; Defined at:
  6519 ;;		line 801 in file "main.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  2    6[COMRAM] unsigned int 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        2 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    2
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_MotorPosition_Init
  6544 ;;		_Homing_Again_Manual
  6545 ;;		_Homing_Again_Auto
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text33
  6550  001E4C                     __ptext33:
  6551                           	opt callstack 0
  6552  001E4C                     _Read_IR:
  6553                           	opt callstack 27
  6554  001E4C                     
  6555                           ;main.c: 804:     if(PORTAbits.RA1 == 1)
  6556  001E4C  A280               	btfss	128,1,c	;volatile
  6557  001E4E  EF2B  F00F         	goto	u1691
  6558  001E52  EF2D  F00F         	goto	u1690
  6559  001E56                     u1691:
  6560  001E56  EF33  F00F         	goto	l3005
  6561  001E5A                     u1690:
  6562  001E5A                     
  6563                           ;main.c: 805:     {;main.c: 806:         return 0;
  6564  001E5A  0E00               	movlw	0
  6565  001E5C  6E3F               	movwf	(?_Read_IR+1)^0,c
  6566  001E5E  0E00               	movlw	0
  6567  001E60  6E3E               	movwf	?_Read_IR^0,c
  6568  001E62  EF37  F00F         	goto	l302
  6569  001E66                     l3005:
  6570                           
  6571                           ;main.c: 809:     {;main.c: 810:         return 1;
  6572  001E66  0E00               	movlw	0
  6573  001E68  6E3F               	movwf	(?_Read_IR+1)^0,c
  6574  001E6A  0E01               	movlw	1
  6575  001E6C  6E3E               	movwf	?_Read_IR^0,c
  6576  001E6E                     l302:
  6577  001E6E  0012               	return		;funcret
  6578  001E70                     __end_of_Read_IR:
  6579                           	opt callstack 0
  6580                           
  6581 ;; *************** function _MotorON *****************
  6582 ;; Defined at:
  6583 ;;		line 43 in file "MotorDriver.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    3
  6604 ;; This function calls:
  6605 ;;		_Set_RG3
  6606 ;; This function is called by:
  6607 ;;		_MotorPosition_Init
  6608 ;;		_Homing_Again_Manual
  6609 ;;		_Homing_Again_Auto
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text34
  6614  001F04                     __ptext34:
  6615                           	opt callstack 0
  6616  001F04                     _MotorON:
  6617                           	opt callstack 26
  6618  001F04                     
  6619                           ;MotorDriver.c: 45:  LATGbits.LATG3 = 1;
  6620  001F04  868F               	bsf	143,3,c	;volatile
  6621                           
  6622                           ;MotorDriver.c: 46:  LATGbits.LATG4 = 1;
  6623  001F06  888F               	bsf	143,4,c	;volatile
  6624  001F08                     
  6625                           ;MotorDriver.c: 48:  Set_RG3();
  6626  001F08  EC98  F00F         	call	_Set_RG3	;wreg free
  6627  001F0C  0012               	return		;funcret
  6628  001F0E                     __end_of_MotorON:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _Set_RG3 *****************
  6632 ;; Defined at:
  6633 ;;		line 29 in file "MotorDriver.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_MotorON
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text35
  6662  001F30                     __ptext35:
  6663                           	opt callstack 0
  6664  001F30                     _Set_RG3:
  6665                           	opt callstack 26
  6666  001F30                     
  6667                           ;MotorDriver.c: 33:     CCP4CON = 0x08;
  6668  001F30  0E08               	movlw	8
  6669  001F32  6E73               	movwf	115,c	;volatile
  6670  001F34                     
  6671                           ;MotorDriver.c: 34:   T4CONbits.TMR4ON = 1;
  6672  001F34  8476               	bsf	118,2,c	;volatile
  6673  001F36  0012               	return		;funcret
  6674  001F38                     __end_of_Set_RG3:
  6675                           	opt callstack 0
  6676                           
  6677 ;; *************** function _MotorBREAK *****************
  6678 ;; Defined at:
  6679 ;;		line 51 in file "MotorDriver.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;		None
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;		None
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      void 
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;Total ram usage:        0 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    3
  6700 ;; This function calls:
  6701 ;;		_Clr_RG3
  6702 ;; This function is called by:
  6703 ;;		_MotorPosition_Init
  6704 ;;		_Homing_Again_Manual
  6705 ;;		_Homing_Again_Auto
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text36
  6710  001F0E                     __ptext36:
  6711                           	opt callstack 0
  6712  001F0E                     _MotorBREAK:
  6713                           	opt callstack 26
  6714  001F0E                     
  6715                           ;MotorDriver.c: 54:  Clr_RG3();
  6716  001F0E  EC9C  F00F         	call	_Clr_RG3	;wreg free
  6717  001F12                     
  6718                           ;MotorDriver.c: 56:  LATGbits.LATG3 = 1;
  6719  001F12  868F               	bsf	143,3,c	;volatile
  6720  001F14                     
  6721                           ;MotorDriver.c: 57:  LATGbits.LATG4 = 1;
  6722  001F14  888F               	bsf	143,4,c	;volatile
  6723  001F16  0012               	return		;funcret
  6724  001F18                     __end_of_MotorBREAK:
  6725                           	opt callstack 0
  6726                           
  6727 ;; *************** function _Clr_RG3 *****************
  6728 ;; Defined at:
  6729 ;;		line 37 in file "MotorDriver.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;Total ram usage:        0 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    2
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_MotorBREAK
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text37
  6758  001F38                     __ptext37:
  6759                           	opt callstack 0
  6760  001F38                     _Clr_RG3:
  6761                           	opt callstack 26
  6762  001F38                     
  6763                           ;MotorDriver.c: 39:  CCP4CON = 0x00;
  6764  001F38  0E00               	movlw	0
  6765  001F3A  6E73               	movwf	115,c	;volatile
  6766  001F3C                     
  6767                           ;MotorDriver.c: 40:     T4CONbits.TMR4ON = 0;
  6768  001F3C  9476               	bcf	118,2,c	;volatile
  6769  001F3E  0012               	return		;funcret
  6770  001F40                     __end_of_Clr_RG3:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function _AD_capture_BattVoltage *****************
  6774 ;; Defined at:
  6775 ;;		line 1169 in file "main.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;Total ram usage:        2 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    3
  6796 ;; This function calls:
  6797 ;;		_delay_1ms
  6798 ;; This function is called by:
  6799 ;;		_main
  6800 ;;		_Homing_Again_Manual
  6801 ;;		_Homing_Again_Auto
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text38
  6806  001C90                     __ptext38:
  6807                           	opt callstack 0
  6808  001C90                     _AD_capture_BattVoltage:
  6809                           	opt callstack 26
  6810  001C90                     
  6811                           ;main.c: 1172:     ADCON0bits.CHS0=0;
  6812  001C90  94C2               	bcf	194,2,c	;volatile
  6813                           
  6814                           ;main.c: 1173:     ADCON0bits.CHS1=0;
  6815  001C92  96C2               	bcf	194,3,c	;volatile
  6816                           
  6817                           ;main.c: 1174:     ADCON0bits.CHS2=0;
  6818  001C94  98C2               	bcf	194,4,c	;volatile
  6819                           
  6820                           ;main.c: 1175:     ADCON0bits.CHS3=0;
  6821  001C96  9AC2               	bcf	194,5,c	;volatile
  6822                           
  6823                           ;main.c: 1177:  ADCON0bits.ADON=1;
  6824  001C98  80C2               	bsf	194,0,c	;volatile
  6825  001C9A                     
  6826                           ;main.c: 1178:  delay_1ms(5);
  6827  001C9A  0E00               	movlw	0
  6828  001C9C  6E3F               	movwf	(delay_1ms@time+1)^0,c
  6829  001C9E  0E05               	movlw	5
  6830  001CA0  6E3E               	movwf	delay_1ms@time^0,c
  6831  001CA2  ECD7  F00E         	call	_delay_1ms	;wreg free
  6832  001CA6                     
  6833                           ;main.c: 1179:  ADCON0bits.GO=1;
  6834  001CA6  82C2               	bsf	194,1,c	;volatile
  6835  001CA8                     l389:
  6836  001CA8  B2C2               	btfsc	194,1,c	;volatile
  6837  001CAA  EF59  F00E         	goto	u1681
  6838  001CAE  EF5B  F00E         	goto	u1680
  6839  001CB2                     u1681:
  6840  001CB2  EF54  F00E         	goto	l389
  6841  001CB6                     u1680:
  6842  001CB6                     
  6843                           ;main.c: 1183:     VOLTAGE = (ADRESH*256) | (ADRESL);
  6844  001CB6  50C3               	movf	195,w,c	;volatile
  6845  001CB8  CFC4 F041          	movff	4036,??_AD_capture_BattVoltage	;volatile
  6846  001CBC  6A42               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  6847  001CBE  C041  F042         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  6848  001CC2  6A41               	clrf	??_AD_capture_BattVoltage^0,c
  6849  001CC4  1041               	iorwf	??_AD_capture_BattVoltage^0,w,c
  6850  001CC6  6E11               	movwf	_VOLTAGE^0,c
  6851  001CC8  5042               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  6852  001CCA  6E12               	movwf	(_VOLTAGE+1)^0,c
  6853  001CCC  0012               	return		;funcret
  6854  001CCE                     __end_of_AD_capture_BattVoltage:
  6855                           	opt callstack 0
  6856                           
  6857 ;; *************** function _delay_1ms *****************
  6858 ;; Defined at:
  6859 ;;		line 789 in file "main.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  time            2    6[COMRAM] unsigned int 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;Total ram usage:        3 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:    2
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		_MotorPosition_Init
  6884 ;;		_Homing_Again_Manual
  6885 ;;		_Homing_Again_Auto
  6886 ;;		_AD_capture_BattVoltage
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text39
  6891  001DAE                     __ptext39:
  6892                           	opt callstack 0
  6893  001DAE                     _delay_1ms:
  6894                           	opt callstack 27
  6895  001DAE                     
  6896                           ;main.c: 789: void delay_1ms(unsigned int time);main.c: 790:  {;main.c: 791:    while(ti
      +                          me > 0)
  6897  001DAE  EFE3  F00E         	goto	l295
  6898  001DB2                     l2731:
  6899                           
  6900                           ;main.c: 792:    {;main.c: 793:        _delay((unsigned long)((1)*(8000000/4000.0)));
  6901  001DB2  0E03               	movlw	3
  6902  001DB4  6E40               	movwf	??_delay_1ms^0,c
  6903  001DB6  0E98               	movlw	152
  6904  001DB8                     u3867:
  6905  001DB8  2EE8               	decfsz	wreg,f,c
  6906  001DBA  D7FE               	bra	u3867
  6907  001DBC  2E40               	decfsz	??_delay_1ms^0,f,c
  6908  001DBE  D7FC               	bra	u3867
  6909  001DC0                     
  6910                           ;main.c: 794:       time--;
  6911  001DC0  063E               	decf	delay_1ms@time^0,f,c
  6912  001DC2  A0D8               	btfss	status,0,c
  6913  001DC4  063F               	decf	(delay_1ms@time+1)^0,f,c
  6914  001DC6                     l295:
  6915                           
  6916                           ;main.c: 791:    while(time > 0)
  6917  001DC6  503E               	movf	delay_1ms@time^0,w,c
  6918  001DC8  103F               	iorwf	(delay_1ms@time+1)^0,w,c
  6919  001DCA  A4D8               	btfss	status,2,c
  6920  001DCC  EFEA  F00E         	goto	u1421
  6921  001DD0  EFEC  F00E         	goto	u1420
  6922  001DD4                     u1421:
  6923  001DD4  EFD9  F00E         	goto	l2731
  6924  001DD8                     u1420:
  6925  001DD8  0012               	return		;funcret
  6926  001DDA                     __end_of_delay_1ms:
  6927                           	opt callstack 0
  6928                           
  6929 ;; *************** function _high_isr *****************
  6930 ;; Defined at:
  6931 ;;		line 663 in file "main.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  i               1    5[COMRAM] unsigned char 
  6936 ;;  c               1    4[COMRAM] unsigned char 
  6937 ;;  Temp            1    3[COMRAM] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;Total ram usage:        5 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    1
  6954 ;; This function calls:
  6955 ;;		_Low_Power_Indicator
  6956 ;;		_Read1USART
  6957 ;;		i2_Write1USART
  6958 ;; This function is called by:
  6959 ;;		Interrupt level 2
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	intcode
  6964  000008                     __pintcode:
  6965                           	opt callstack 0
  6966  000008                     _high_isr:
  6967                           	opt callstack 25
  6968                           
  6969                           ;incstack = 0
  6970  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6971  00000A  CFD9 F039          	movff	fsr2l,??_high_isr
  6972  00000E  CFDA F03A          	movff	fsr2h,??_high_isr+1
  6973  000012                     
  6974                           ;main.c: 665:     unsigned char c, i;;main.c: 666:  unsigned char Temp;;main.c: 668:    
      +                           if ((PIR1bits.RC1IF))
  6975  000012  AA9E               	btfss	158,5,c	;volatile
  6976  000014  EF0E  F000         	goto	i2u252_41
  6977  000018  EF10  F000         	goto	i2u252_40
  6978  00001C                     i2u252_41:
  6979  00001C  EFE1  F000         	goto	i2l262
  6980  000020                     i2u252_40:
  6981  000020                     
  6982                           ;main.c: 669:  {;main.c: 671:   c=Read1USART();
  6983  000020  EC13  F00F         	call	_Read1USART	;wreg free
  6984  000024  6E3C               	movwf	high_isr@c^0,c
  6985  000026                     
  6986                           ;main.c: 673:   if ((c == 0xA5) && ((Serial_Flag == 0)||(Busy == 1)))
  6987  000026  0EA5               	movlw	165
  6988  000028  183C               	xorwf	high_isr@c^0,w,c
  6989  00002A  A4D8               	btfss	status,2,c
  6990  00002C  EF1A  F000         	goto	i2u253_41
  6991  000030  EF1C  F000         	goto	i2u253_40
  6992  000034                     i2u253_41:
  6993  000034  EF3E  F000         	goto	i2l3971
  6994  000038                     i2u253_40:
  6995  000038  5037               	movf	_Serial_Flag^0,w,c
  6996  00003A  B4D8               	btfsc	status,2,c
  6997  00003C  EF22  F000         	goto	i2u254_41
  6998  000040  EF24  F000         	goto	i2u254_40
  6999  000044                     i2u254_41:
  7000  000044  EF2C  F000         	goto	i2l3965
  7001  000048                     i2u254_40:
  7002  000048  0433               	decf	_Busy^0,w,c
  7003  00004A  A4D8               	btfss	status,2,c
  7004  00004C  EF2A  F000         	goto	i2u255_41
  7005  000050  EF2C  F000         	goto	i2u255_40
  7006  000054                     i2u255_41:
  7007  000054  EF3E  F000         	goto	i2l3971
  7008  000058                     i2u255_40:
  7009  000058                     i2l3965:
  7010                           
  7011                           ;main.c: 674:   {;main.c: 675:    Serial_GData = 1;
  7012  000058  0E01               	movlw	1
  7013  00005A  6E36               	movwf	_Serial_GData^0,c
  7014                           
  7015                           ;main.c: 676:    Serial_Count = 0;
  7016  00005C  0E00               	movlw	0
  7017  00005E  6E2A               	movwf	(_Serial_Count+1)^0,c
  7018  000060  0E00               	movlw	0
  7019  000062  6E29               	movwf	_Serial_Count^0,c
  7020  000064                     
  7021                           ;main.c: 677:    Serial_Buffer[Serial_Count] = c;
  7022  000064  0E01               	movlw	low _Serial_Buffer
  7023  000066  2429               	addwf	_Serial_Count^0,w,c
  7024  000068  6ED9               	movwf	fsr2l,c
  7025  00006A  0E00               	movlw	high _Serial_Buffer
  7026  00006C  202A               	addwfc	(_Serial_Count+1)^0,w,c
  7027  00006E  6EDA               	movwf	fsr2h,c
  7028  000070  C03C  FFDF         	movff	high_isr@c,indf2
  7029  000074                     i2l3969:
  7030                           
  7031                           ;main.c: 678:             Serial_Count++;
  7032  000074  4A29               	infsnz	_Serial_Count^0,f,c
  7033  000076  2A2A               	incf	(_Serial_Count+1)^0,f,c
  7034                           
  7035                           ;main.c: 679:   }
  7036  000078  EFEB  F000         	goto	i2l4037
  7037  00007C                     i2l3971:
  7038  00007C  0436               	decf	_Serial_GData^0,w,c
  7039  00007E  A4D8               	btfss	status,2,c
  7040  000080  EF44  F000         	goto	i2u256_41
  7041  000084  EF46  F000         	goto	i2u256_40
  7042  000088                     i2u256_41:
  7043  000088  EFEB  F000         	goto	i2l4037
  7044  00008C                     i2u256_40:
  7045  00008C                     
  7046                           ;main.c: 681:   {;main.c: 682:    Serial_Buffer[Serial_Count] = c;
  7047  00008C  0E01               	movlw	low _Serial_Buffer
  7048  00008E  2429               	addwf	_Serial_Count^0,w,c
  7049  000090  6ED9               	movwf	fsr2l,c
  7050  000092  0E00               	movlw	high _Serial_Buffer
  7051  000094  202A               	addwfc	(_Serial_Count+1)^0,w,c
  7052  000096  6EDA               	movwf	fsr2h,c
  7053  000098  C03C  FFDF         	movff	high_isr@c,indf2
  7054  00009C                     
  7055                           ;main.c: 684:    if(Serial_Count<5)
  7056  00009C  502A               	movf	(_Serial_Count+1)^0,w,c
  7057  00009E  E107               	bnz	i2u257_41
  7058  0000A0  0E05               	movlw	5
  7059  0000A2  5C29               	subwf	_Serial_Count^0,w,c
  7060  0000A4  B0D8               	btfsc	status,0,c
  7061  0000A6  EF57  F000         	goto	i2u257_41
  7062  0000AA  EF59  F000         	goto	i2u257_40
  7063  0000AE                     i2u257_41:
  7064  0000AE  EFDD  F000         	goto	i2l4031
  7065  0000B2                     i2u257_40:
  7066  0000B2                     
  7067                           ;main.c: 685:             {;main.c: 686:                 if (c == 0x5A)
  7068  0000B2  0E5A               	movlw	90
  7069  0000B4  183C               	xorwf	high_isr@c^0,w,c
  7070  0000B6  A4D8               	btfss	status,2,c
  7071  0000B8  EF60  F000         	goto	i2u258_41
  7072  0000BC  EF62  F000         	goto	i2u258_40
  7073  0000C0                     i2u258_41:
  7074  0000C0  EF3A  F000         	goto	i2l3969
  7075  0000C4                     i2u258_40:
  7076  0000C4                     
  7077                           ;main.c: 687:                 {;main.c: 688:                     Temp = Serial_Buffer[1]
      +                           + Serial_Buffer[2];
  7078  0000C4  5002               	movf	(_Serial_Buffer+1)^0,w,c
  7079  0000C6  2403               	addwf	(_Serial_Buffer+2)^0,w,c
  7080  0000C8  6E3B               	movwf	high_isr@Temp^0,c
  7081                           
  7082                           ;main.c: 690:                     if (Temp == Serial_Buffer[3])
  7083  0000CA  503B               	movf	high_isr@Temp^0,w,c
  7084  0000CC  1804               	xorwf	(_Serial_Buffer+3)^0,w,c
  7085  0000CE  A4D8               	btfss	status,2,c
  7086  0000D0  EF6C  F000         	goto	i2u259_41
  7087  0000D4  EF6E  F000         	goto	i2u259_40
  7088  0000D8                     i2u259_41:
  7089  0000D8  EFB1  F000         	goto	i2l4011
  7090  0000DC                     i2u259_40:
  7091  0000DC                     
  7092                           ;main.c: 691:                     {;main.c: 692:                         if(Busy==0 || S
      +                          erial_Buffer[2]==0xF5)
  7093  0000DC  5033               	movf	_Busy^0,w,c
  7094  0000DE  B4D8               	btfsc	status,2,c
  7095  0000E0  EF74  F000         	goto	i2u260_41
  7096  0000E4  EF76  F000         	goto	i2u260_40
  7097  0000E8                     i2u260_41:
  7098  0000E8  EF7F  F000         	goto	i2l273
  7099  0000EC                     i2u260_40:
  7100  0000EC  0EF5               	movlw	245
  7101  0000EE  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7102  0000F0  A4D8               	btfss	status,2,c
  7103  0000F2  EF7D  F000         	goto	i2u261_41
  7104  0000F6  EF7F  F000         	goto	i2u261_40
  7105  0000FA                     i2u261_41:
  7106  0000FA  EF97  F000         	goto	i2l271
  7107  0000FE                     i2u261_40:
  7108  0000FE                     i2l273:
  7109                           
  7110                           ;main.c: 693:                         {;main.c: 694:                             INTCONb
      +                          its.GIE=0;
  7111  0000FE  9EF2               	bcf	242,7,c	;volatile
  7112  000100                     
  7113                           ;main.c: 695:                             for (i=0; i<5; i++)
  7114  000100  0E00               	movlw	0
  7115  000102  6E3D               	movwf	high_isr@i^0,c
  7116  000104                     i2l3991:
  7117                           
  7118                           ;main.c: 696:                             {;main.c: 697:                                
      +                           Write1USART(Serial_Buffer[i]);
  7119  000104  0E01               	movlw	low _Serial_Buffer
  7120  000106  243D               	addwf	high_isr@i^0,w,c
  7121  000108  6ED9               	movwf	fsr2l,c
  7122  00010A  6ADA               	clrf	fsr2h,c
  7123  00010C  0E00               	movlw	high _Serial_Buffer
  7124  00010E  22DA               	addwfc	fsr2h,f,c
  7125  000110  50DF               	movf	indf2,w,c
  7126  000112  EC5A  F00F         	call	i2_Write1USART
  7127  000116                     
  7128                           ;main.c: 698:                             }
  7129  000116  2A3D               	incf	high_isr@i^0,f,c
  7130  000118  0E04               	movlw	4
  7131  00011A  643D               	cpfsgt	high_isr@i^0,c
  7132  00011C  EF92  F000         	goto	i2u262_41
  7133  000120  EF94  F000         	goto	i2u262_40
  7134  000124                     i2u262_41:
  7135  000124  EF82  F000         	goto	i2l3991
  7136  000128                     i2u262_40:
  7137  000128                     
  7138                           ;main.c: 699:                             INTCONbits.GIE=1;
  7139  000128  8EF2               	bsf	242,7,c	;volatile
  7140                           
  7141                           ;main.c: 700:                         }
  7142  00012A  EFA7  F000         	goto	i2l4009
  7143  00012E                     i2l271:
  7144                           
  7145                           ;main.c: 702:                         {;main.c: 703:                             INTCONb
      +                          its.GIE=0;
  7146  00012E  9EF2               	bcf	242,7,c	;volatile
  7147  000130                     
  7148                           ;main.c: 704:                             for (i=0; i<5; i++)
  7149  000130  0E00               	movlw	0
  7150  000132  6E3D               	movwf	high_isr@i^0,c
  7151  000134                     i2l4003:
  7152                           
  7153                           ;main.c: 705:                             {;main.c: 706:                                
      +                           Write1USART(0x16);
  7154  000134  0E16               	movlw	22
  7155  000136  EC5A  F00F         	call	i2_Write1USART
  7156  00013A                     
  7157                           ;main.c: 707:                             }
  7158  00013A  2A3D               	incf	high_isr@i^0,f,c
  7159  00013C  0E04               	movlw	4
  7160  00013E  643D               	cpfsgt	high_isr@i^0,c
  7161  000140  EFA4  F000         	goto	i2u263_41
  7162  000144  EFA6  F000         	goto	i2u263_40
  7163  000148                     i2u263_41:
  7164  000148  EF9A  F000         	goto	i2l4003
  7165  00014C                     i2u263_40:
  7166  00014C                     
  7167                           ;main.c: 708:                             INTCONbits.GIE=1;
  7168  00014C  8EF2               	bsf	242,7,c	;volatile
  7169  00014E                     i2l4009:
  7170                           
  7171                           ;main.c: 711:                         Serial_Flag = 1;
  7172  00014E  0E01               	movlw	1
  7173  000150  6E37               	movwf	_Serial_Flag^0,c
  7174                           
  7175                           ;main.c: 712:                         Serial_Count = 0;
  7176  000152  0E00               	movlw	0
  7177  000154  6E2A               	movwf	(_Serial_Count+1)^0,c
  7178  000156  0E00               	movlw	0
  7179  000158  6E29               	movwf	_Serial_Count^0,c
  7180                           
  7181                           ;main.c: 713:                         OpMode = AUTO_MODE;
  7182  00015A  0E02               	movlw	2
  7183  00015C  6E30               	movwf	_OpMode^0,c	;volatile
  7184                           
  7185                           ;main.c: 715:                     }
  7186  00015E  EFC7  F000         	goto	i2l4025
  7187  000162                     i2l4011:
  7188                           
  7189                           ;main.c: 717:                     {;main.c: 718:                         Serial_Flag = 0
      +                          ;
  7190  000162  0E00               	movlw	0
  7191  000164  6E37               	movwf	_Serial_Flag^0,c
  7192                           
  7193                           ;main.c: 719:                         Serial_Count = 0;
  7194  000166  0E00               	movlw	0
  7195  000168  6E2A               	movwf	(_Serial_Count+1)^0,c
  7196  00016A  0E00               	movlw	0
  7197  00016C  6E29               	movwf	_Serial_Count^0,c
  7198  00016E                     
  7199                           ;main.c: 721:                         INTCONbits.GIE=0;
  7200  00016E  9EF2               	bcf	242,7,c	;volatile
  7201                           
  7202                           ;main.c: 722:                         for (i=0; i<5; i++)
  7203  000170  0E00               	movlw	0
  7204  000172  6E3D               	movwf	high_isr@i^0,c
  7205  000174                     i2l4019:
  7206                           
  7207                           ;main.c: 723:                         {;main.c: 724:                             Write1U
      +                          SART(0x15);
  7208  000174  0E15               	movlw	21
  7209  000176  EC5A  F00F         	call	i2_Write1USART
  7210  00017A                     
  7211                           ;main.c: 725:                         }
  7212  00017A  2A3D               	incf	high_isr@i^0,f,c
  7213  00017C  0E04               	movlw	4
  7214  00017E  643D               	cpfsgt	high_isr@i^0,c
  7215  000180  EFC4  F000         	goto	i2u264_41
  7216  000184  EFC6  F000         	goto	i2u264_40
  7217  000188                     i2u264_41:
  7218  000188  EFBA  F000         	goto	i2l4019
  7219  00018C                     i2u264_40:
  7220  00018C                     
  7221                           ;main.c: 726:                         INTCONbits.GIE=1;
  7222  00018C  8EF2               	bsf	242,7,c	;volatile
  7223  00018E                     i2l4025:
  7224                           
  7225                           ;main.c: 729:                     if(Serial_Buffer[2]==0xF5 && OpMode == AUTO_MODE)
  7226  00018E  0EF5               	movlw	245
  7227  000190  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7228  000192  A4D8               	btfss	status,2,c
  7229  000194  EFCE  F000         	goto	i2u265_41
  7230  000198  EFD0  F000         	goto	i2u265_40
  7231  00019C                     i2u265_41:
  7232  00019C  EF3A  F000         	goto	i2l3969
  7233  0001A0                     i2u265_40:
  7234  0001A0  0E02               	movlw	2
  7235  0001A2  1830               	xorwf	_OpMode^0,w,c	;volatile
  7236  0001A4  A4D8               	btfss	status,2,c
  7237  0001A6  EFD7  F000         	goto	i2u266_41
  7238  0001AA  EFD9  F000         	goto	i2u266_40
  7239  0001AE                     i2u266_41:
  7240  0001AE  EF3A  F000         	goto	i2l3969
  7241  0001B2                     i2u266_40:
  7242  0001B2                     
  7243                           ;main.c: 730:                     {;main.c: 731:                         Stop = 1;
  7244  0001B2  0E01               	movlw	1
  7245  0001B4  6E35               	movwf	_Stop^0,c
  7246  0001B6  EF3A  F000         	goto	i2l3969
  7247  0001BA                     i2l4031:
  7248                           
  7249                           ;main.c: 736:             {;main.c: 737:                 Serial_GData = 0;
  7250  0001BA  0E00               	movlw	0
  7251  0001BC  6E36               	movwf	_Serial_GData^0,c
  7252  0001BE  EF3A  F000         	goto	i2l3969
  7253  0001C2                     i2l262:
  7254                           
  7255                           ;main.c: 744:     {;main.c: 745:         if (RCSTA1bits.OERR == 1)
  7256  0001C2  A2AC               	btfss	172,1,c	;volatile
  7257  0001C4  EFE6  F000         	goto	i2u267_41
  7258  0001C8  EFE8  F000         	goto	i2u267_40
  7259  0001CC                     i2u267_41:
  7260  0001CC  EFEB  F000         	goto	i2l4037
  7261  0001D0                     i2u267_40:
  7262  0001D0                     
  7263                           ;main.c: 746:         {;main.c: 747:             RCSTA1bits.OERR = 0;
  7264  0001D0  92AC               	bcf	172,1,c	;volatile
  7265                           
  7266                           ;main.c: 748:             RCSTA1bits.CREN = 0;
  7267  0001D2  98AC               	bcf	172,4,c	;volatile
  7268                           
  7269                           ;main.c: 749:             RCSTA1bits.CREN = 1;
  7270  0001D4  88AC               	bsf	172,4,c	;volatile
  7271  0001D6                     i2l4037:
  7272                           
  7273                           ;main.c: 753:     if (TMR1IF_triggered == 1)
  7274  0001D6  042B               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7275  0001D8  A4D8               	btfss	status,2,c
  7276  0001DA  EFF1  F000         	goto	i2u268_41
  7277  0001DE  EFF3  F000         	goto	i2u268_40
  7278  0001E2                     i2u268_41:
  7279  0001E2  EF39  F001         	goto	i2l4055
  7280  0001E6                     i2u268_40:
  7281  0001E6                     
  7282                           ;main.c: 754:     {;main.c: 755:         if(errorcounter >0)
  7283  0001E6  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7284  0001E8  EF00  F001         	goto	i2u269_41
  7285  0001EC  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  7286  0001EE  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7287  0001F0  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7288  0001F2  E108               	bnz	i2u269_40
  7289  0001F4  0452               	decf	_errorcounter^0,w,c	;volatile
  7290  0001F6  A0D8               	btfss	status,0,c
  7291  0001F8  EF00  F001         	goto	i2u269_41
  7292  0001FC  EF02  F001         	goto	i2u269_40
  7293  000200                     i2u269_41:
  7294  000200  EF0C  F001         	goto	i2l4043
  7295  000204                     i2u269_40:
  7296  000204                     
  7297                           ;main.c: 756:         {;main.c: 757:             errorcounter--;
  7298  000204  0EFF               	movlw	255
  7299  000206  2652               	addwf	_errorcounter^0,f,c	;volatile
  7300  000208  0EFF               	movlw	255
  7301  00020A  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7302  00020C  0EFF               	movlw	255
  7303  00020E  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7304  000210  0EFF               	movlw	255
  7305  000212  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7306                           
  7307                           ;main.c: 758:         }
  7308  000214  EF14  F001         	goto	i2l4045
  7309  000218                     i2l4043:
  7310                           
  7311                           ;main.c: 760:         {;main.c: 761:             errorcounter = 0;
  7312  000218  0E00               	movlw	0
  7313  00021A  6E52               	movwf	_errorcounter^0,c	;volatile
  7314  00021C  0E00               	movlw	0
  7315  00021E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  7316  000220  0E00               	movlw	0
  7317  000222  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  7318  000224  0E00               	movlw	0
  7319  000226  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  7320  000228                     i2l4045:
  7321                           
  7322                           ;main.c: 764:         if(LowPowerCounter >0)
  7323  000228  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7324  00022A  EF21  F001         	goto	i2u270_41
  7325  00022E  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7326  000230  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7327  000232  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7328  000234  E108               	bnz	i2u270_40
  7329  000236  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  7330  000238  A0D8               	btfss	status,0,c
  7331  00023A  EF21  F001         	goto	i2u270_41
  7332  00023E  EF23  F001         	goto	i2u270_40
  7333  000242                     i2u270_41:
  7334  000242  EF2D  F001         	goto	i2l4049
  7335  000246                     i2u270_40:
  7336  000246                     
  7337                           ;main.c: 765:         {;main.c: 766:             LowPowerCounter--;
  7338  000246  0EFF               	movlw	255
  7339  000248  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  7340  00024A  0EFF               	movlw	255
  7341  00024C  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7342  00024E  0EFF               	movlw	255
  7343  000250  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7344  000252  0EFF               	movlw	255
  7345  000254  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7346                           
  7347                           ;main.c: 767:         }
  7348  000256  EF37  F001         	goto	i2l4053
  7349  00025A                     i2l4049:
  7350                           
  7351                           ;main.c: 769:         {;main.c: 770:             LowPowerCounter = 20;
  7352  00025A  0E14               	movlw	20
  7353  00025C  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  7354  00025E  0E00               	movlw	0
  7355  000260  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7356  000262  0E00               	movlw	0
  7357  000264  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7358  000266  0E00               	movlw	0
  7359  000268  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7360  00026A                     
  7361                           ;main.c: 771:             Low_Power_Indicator();
  7362  00026A  ECBC  F00E         	call	_Low_Power_Indicator	;wreg free
  7363  00026E                     i2l4053:
  7364                           
  7365                           ;main.c: 774:         TMR1IF_triggered = 0;
  7366  00026E  0E00               	movlw	0
  7367  000270  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7368  000272                     i2l4055:
  7369                           
  7370                           ;main.c: 777:     if(TMR1IF)
  7371  000272  A09E               	btfss	3998,0,c	;volatile
  7372  000274  EF3E  F001         	goto	i2u271_41
  7373  000278  EF40  F001         	goto	i2u271_40
  7374  00027C                     i2u271_41:
  7375  00027C  EF47  F001         	goto	i2l292
  7376  000280                     i2u271_40:
  7377  000280                     
  7378                           ;main.c: 778:     {;main.c: 779:         TMR1 = 0x9E57;
  7379  000280  0E9E               	movlw	158
  7380  000282  6ECF               	movwf	207,c	;volatile
  7381  000284  0E57               	movlw	87
  7382  000286  6ECE               	movwf	206,c	;volatile
  7383  000288                     
  7384                           ;main.c: 780:         TMR1IF = 0;
  7385  000288  909E               	bcf	3998,0,c	;volatile
  7386                           
  7387                           ;main.c: 781:         TMR1IF_triggered = 1;
  7388  00028A  0E01               	movlw	1
  7389  00028C  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7390  00028E                     i2l292:
  7391  00028E  C03A  FFDA         	movff	??_high_isr+1,fsr2h
  7392  000292  C039  FFD9         	movff	??_high_isr,fsr2l
  7393  000296  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7394  000298  0011               	retfie		f
  7395  00029A                     __end_of_high_isr:
  7396                           	opt callstack 0
  7397                           
  7398 ;; *************** function i2_Write1USART *****************
  7399 ;; Defined at:
  7400 ;;		line 48 in file "usart.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  data            1    wreg     unsigned char 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  data            1    0[COMRAM] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;Total ram usage:        1 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_high_isr
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text41
  7428  001EB4                     __ptext41:
  7429                           	opt callstack 0
  7430  001EB4                     i2_Write1USART:
  7431                           	opt callstack 25
  7432                           
  7433                           ;incstack = 0
  7434                           ;i2Write1USART@data stored from wreg
  7435  001EB4  6E38               	movwf	i2Write1USART@data^0,c
  7436  001EB6                     
  7437                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  7438  001EB6  C038  FFAE         	movff	i2Write1USART@data,4014	;volatile
  7439  001EBA                     i2l558:
  7440  001EBA  A2AD               	btfss	173,1,c	;volatile
  7441  001EBC  EF62  F00F         	goto	i2u211_41
  7442  001EC0  EF64  F00F         	goto	i2u211_40
  7443  001EC4                     i2u211_41:
  7444  001EC4  EF5D  F00F         	goto	i2l558
  7445  001EC8                     i2u211_40:
  7446  001EC8  0012               	return		;funcret
  7447  001ECA                     __end_ofi2_Write1USART:
  7448                           	opt callstack 0
  7449                           
  7450 ;; *************** function _Read1USART *****************
  7451 ;; Defined at:
  7452 ;;		line 58 in file "usart.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;		None
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  result          1    0[COMRAM] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1    wreg      unsigned char 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;Total ram usage:        1 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_high_isr
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text42
  7480  001E26                     __ptext42:
  7481                           	opt callstack 0
  7482  001E26                     _Read1USART:
  7483                           	opt callstack 25
  7484  001E26                     
  7485                           ;usart.c: 60:     char result;;usart.c: 62:     if (RCSTA1bits.OERR)
  7486  001E26  A2AC               	btfss	172,1,c	;volatile
  7487  001E28  EF18  F00F         	goto	i2u74_41
  7488  001E2C  EF1A  F00F         	goto	i2u74_40
  7489  001E30                     i2u74_41:
  7490  001E30  EF22  F00F         	goto	i2l564
  7491  001E34                     i2u74_40:
  7492  001E34                     
  7493                           ;usart.c: 63:     {;usart.c: 64:         RCSTA1bits.CREN = 0;
  7494  001E34  98AC               	bcf	172,4,c	;volatile
  7495                           
  7496                           ;usart.c: 65:         result = RCREG1;
  7497  001E36  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7498                           
  7499                           ;usart.c: 66:         result = RCREG1;
  7500  001E3A  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7501                           
  7502                           ;usart.c: 67:         RCSTA1bits.CREN = 1;
  7503  001E3E  88AC               	bsf	172,4,c	;volatile
  7504                           
  7505                           ;usart.c: 68:     }
  7506  001E40  EF24  F00F         	goto	i2l2137
  7507  001E44                     i2l564:
  7508                           
  7509                           ;usart.c: 70:     {;usart.c: 71:         result = RCREG1;
  7510  001E44  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7511  001E48                     i2l2137:
  7512                           
  7513                           ;usart.c: 74:     return result;
  7514  001E48  5038               	movf	Read1USART@result^0,w,c
  7515  001E4A  0012               	return		;funcret
  7516  001E4C                     __end_of_Read1USART:
  7517                           	opt callstack 0
  7518                           
  7519 ;; *************** function _Low_Power_Indicator *****************
  7520 ;; Defined at:
  7521 ;;		line 1186 in file "main.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; This function calls:
  7542 ;;		Nothing
  7543 ;; This function is called by:
  7544 ;;		_high_isr
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text43
  7549  001D78                     __ptext43:
  7550                           	opt callstack 0
  7551  001D78                     _Low_Power_Indicator:
  7552                           	opt callstack 25
  7553  001D78                     
  7554                           ;main.c: 1189:     if(VOLTAGE <= 0x0366)
  7555  001D78  0E67               	movlw	103
  7556  001D7A  5C11               	subwf	_VOLTAGE^0,w,c
  7557  001D7C  0E03               	movlw	3
  7558  001D7E  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7559  001D80  B0D8               	btfsc	status,0,c
  7560  001D82  EFC5  F00E         	goto	i2u75_41
  7561  001D86  EFC7  F00E         	goto	i2u75_40
  7562  001D8A                     i2u75_41:
  7563  001D8A  EFCA  F00E         	goto	i2l2145
  7564  001D8E                     i2u75_40:
  7565  001D8E                     
  7566                           ;main.c: 1190:     {;main.c: 1192:         LATDbits.LATD1=1;
  7567  001D8E  828C               	bsf	140,1,c	;volatile
  7568                           
  7569                           ;main.c: 1194:     }
  7570  001D90  EFD6  F00E         	goto	i2l398
  7571  001D94                     i2l2145:
  7572  001D94  0EC0               	movlw	192
  7573  001D96  5C11               	subwf	_VOLTAGE^0,w,c
  7574  001D98  0E03               	movlw	3
  7575  001D9A  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7576  001D9C  A0D8               	btfss	status,0,c
  7577  001D9E  EFD3  F00E         	goto	i2u76_41
  7578  001DA2  EFD5  F00E         	goto	i2u76_40
  7579  001DA6                     i2u76_41:
  7580  001DA6  EFD6  F00E         	goto	i2l398
  7581  001DAA                     i2u76_40:
  7582  001DAA                     
  7583                           ;main.c: 1196:     {;main.c: 1197:      LATDbits.LATD1=0;
  7584  001DAA  928C               	bcf	140,1,c	;volatile
  7585  001DAC                     i2l398:
  7586  001DAC  0012               	return		;funcret
  7587  001DAE                     __end_of_Low_Power_Indicator:
  7588                           	opt callstack 0
  7589  0000                     
  7590                           	psect	rparam
  7591  0000                     
  7592                           	psect	temp
  7593  000059                     btemp:
  7594                           	opt callstack 0
  7595  000059                     	ds	1
  7596  0000                     int$flags	set	btemp
  7597  0000                     wtemp8	set	btemp+1
  7598  0000                     ttemp5	set	btemp+1
  7599  0000                     ttemp6	set	btemp+4
  7600  0000                     ttemp7	set	btemp+8
  7601                           tosu	equ	0xFFF
  7602                           tosh	equ	0xFFE
  7603                           tosl	equ	0xFFD
  7604                           stkptr	equ	0xFFC
  7605                           pclatu	equ	0xFFB
  7606                           pclath	equ	0xFFA
  7607                           pcl	equ	0xFF9
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           indf0	equ	0xFEF
  7615                           postinc0	equ	0xFEE
  7616                           postdec0	equ	0xFED
  7617                           preinc0	equ	0xFEC
  7618                           plusw0	equ	0xFEB
  7619                           fsr0h	equ	0xFEA
  7620                           fsr0l	equ	0xFE9
  7621                           wreg	equ	0xFE8
  7622                           indf1	equ	0xFE7
  7623                           postinc1	equ	0xFE6
  7624                           postdec1	equ	0xFE5
  7625                           preinc1	equ	0xFE4
  7626                           plusw1	equ	0xFE3
  7627                           fsr1h	equ	0xFE2
  7628                           fsr1l	equ	0xFE1
  7629                           bsr	equ	0xFE0
  7630                           indf2	equ	0xFDF
  7631                           postinc2	equ	0xFDE
  7632                           postdec2	equ	0xFDD
  7633                           preinc2	equ	0xFDC
  7634                           plusw2	equ	0xFDB
  7635                           fsr2h	equ	0xFDA
  7636                           fsr2l	equ	0xFD9
  7637                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      88
    BANK0           160      8      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_WriteSTLED316SData
    _main->_write_i2c
    _ToggleVIB_Mode->_write_i2c
    _Homing_Again_Manual->_WriteSTLED316SData

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22300
                                              6 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1873
                                             20 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     331
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2635
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2635
                                              0 BANK0      6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1418
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     548
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  2     2      0    5642
                                             17 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    2979
                                             14 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     275
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2994
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     300
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     309
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
     _Get7Seg
     _STLED316s_SPI_SendData
     ___awdiv
     ___awmod
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _write_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      28       5       25.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      58       1       93.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 02 11:48:21 2021

                              _i 0015                    ??_i2c_Address 0040  
                   ___awdiv@sign 0043                    ?_InitSTLED316 0038  
                   __CFG_CP0$OFF 000000     __size_of_Low_Power_Indicator 0036  
                    i2c_Read@ack 0041                              l201 07AC  
                            l210 081A                              l202 079E  
                            l205 07EA                              l302 1E6E  
                            l230 0A4E                              l206 07DC  
                            l223 0986                              l320 0D46  
                            l312 1456                              l240 0B74  
                            l209 0828                              l411 19C0  
                            l323 0D52                              l413 19F6  
                            l405 19B8                              l317 1C8E  
                            l245 0C1C                              l350 1062  
                            l342 0FB2                              l502 1E9C  
                            l190 06C6                              l511 1F2E  
                            l416 1A0E                              l360 11A6  
                            l520 1EF6                              l600 1AAA  
                            l192 06E0                              l168 0510  
                            l353 106E                              l441 192C  
                            l193 0736                              l514 1F1E  
                            l194 06F6                              l178 0576  
                            l419 1A38                              l363 11D8  
                            l435 170A                              l347 1018  
                            l523 1EDC                              l531 1C0A  
                            l195 0708                              l179 057C  
                            l620 1F36                              l508 1E24  
                            l460 1BBC                              l517 1F26  
                            l373 1D06                              l197 0772  
                            l446 154A                              l382 1B68  
                            l526 1D6C                              l534 1B14  
                            l198 0764                              l295 1DC6  
                            l623 1F3E                              l455 1556  
                            l383 1B6E                              l711 134A  
                            l527 1D6E                              l392 1CCC  
                            l368 123E                              l528 1D76  
                            l473 163E                              l465 1632  
                            l561 1EB2                              l617 1EEA  
                            l298 1DD8                              l626 1F0C  
                            l378 1D40                              l386 1E86  
                            l555 1DFE                              l389 1CA8  
                            l629 1F16                              l558 1EA4  
                            l597 1A9A                              l863 17CE  
                            l599 1AA8                              l876 187E  
                            _GIE 007F97                              _PR4 000F77  
                            _NUM 0019           __size_ofi2_Write1USART 0016  
                   ___awmod@sign 0043                              wreg 000FE8  
                     _TXSTA1bits 000FAD                    ??_i2c_Restart 003F  
                           l3011 1F08                             l3005 1E66  
                           l3111 1D48                             l3009 1F04  
                           l3121 1A3E                             l3113 1D4E  
                           l3105 1F18                             l3051 1F14  
                           l3211 1E8C                             l3131 1A5C  
                           l3123 1A54                             l3203 1EDE  
                           l3115 1D56                             l3107 1F1C  
                           l3061 1B36                             l3053 1B16  
                           l3221 1E7E                             l3141 1A66  
                           l3133 1A5E                             l3125 1A56  
                           l3205 1EE2                             l3213 1DDA  
                           l3117 1D66                             l3109 1D44  
                           l3047 1F0E                             l3063 1B48  
                           l3055 1B2C                             l3223 1E80  
                           l3151 1A70                             l3143 1A68  
                           l3135 1A60                             l3127 1A58  
                           l3119 1A3A                             l3207 1EE4  
                           l3215 1DF6                             l3049 1F12  
                           l3065 1B4C                             l3217 1E70  
                           l3209 1E88                             l3161 1A7A  
                           l3153 1A72                             l3145 1A6A  
                           l3137 1A62                             l3129 1A5A  
                           l5001 070E                             l3067 1B6A  
                           l3219 1E7C                             l3171 1A94  
                           l3163 1A8C                             l3155 1A74  
                           l3147 1A6C                             l3139 1A64  
                           l5011 0792                             l5003 0728  
                           l3173 1A96                             l3165 1A8E  
                           l3157 1A76                             l3149 1A6E  
                           l5021 0830                             l5013 07BA  
                           l5005 0744                             l4303 169C  
                           l2711 1E00                             l3175 1A98  
                           l3167 1A90                             l3159 1A78  
                           l5103 0A04                             l5031 086A  
                           l5023 0840                             l5015 07D0  
                           l5007 0758                             l4241 19BC  
                           l4305 1708                             l4321 172A  
                           l4313 170C                             l4401 18EA  
                           l2713 1E16                             l3169 1A92  
                           l5121 0A9A                             l5113 0A74  
                           l5105 0A50                             l5041 08A4  
                           l5025 084E                             l5033 086E  
                           l5017 07F8                             l5009 0780  
                           l2731 1DB2                             l4251 19F0  
                           l2715 1EA0                             l2723 1D10  
                           l4331 175E                             l4323 1738  
                           l4315 1710                             l4411 1918  
                           l4403 18FA                             l2811 1F20  
                           l3531 1CD6                             l5131 0B0C  
                           l5123 0AB4                             l5115 0A84  
                           l5107 0A6A                             l5051 08EE  
                           l5043 08AC                             l5203 0C80  
                           l5027 0862                             l5019 080E  
                           l2733 1DC0                             l4261 19FE  
                           l4253 19F8                             l2725 1D20  
                           l2717 1D08                             l4341 1798  
                           l4333 1766                             l4325 1740  
                           l4317 171E                             l4413 1920  
                           l4405 190A                             l4501 1964  
                           l2709 1E00                             l2821 1ED0  
                           l2813 1F24                             l4421 1BBE  
                           l3533 1CE6                             l3525 1CCE  
                           l5141 0B36                             l5133 0B10  
                           l5125 0ACE                             l5117 0A94  
                           l5109 0A6C                             l5205 0CC4  
                           l5061 0922                             l5053 08F6  
                           l5045 08C4                             l5037 0882  
                           l5029 0866                             l2831 1F38  
                           l4271 1A16                             l4263 1A10  
                           l4247 19C2                             l4431 1570  
                           l4423 155A                             l2727 1D24  
                           l4351 17BE                             l4343 17A0  
                           l4335 176E                             l4327 1744  
                           l4319 1726                             l4415 1922  
                           l4407 1910                             l4511 198C  
                           l4503 1966                             l2823 1ED4  
                           l2807 1F28                             l2815 1EEE  
                           l3535 1CEA                             l5151 0B6C  
                           l5143 0B38                             l5135 0B14  
                           l5127 0AEA                             l5119 0A98  
                           l5071 096C                             l5063 0932  
                           l5055 08FE                             l5039 0894  
                           l5047 08CC                             l5207 0CD4  
                           l2729 1DAE                             l2833 1F3C  
                           l4273 1A26                             l4249 19E0  
                           l4441 15C0                             l4433 1580  
                           l4425 155C                             l4281 164C  
                           l4353 17C6                             l4345 17A2  
                           l4337 177C                             l4329 174C  
                           l4361 17E2                             l4417 1924  
                           l4409 1912                             l4601 0D0C  
                           l4513 1994                             l4505 196E  
                           l2841 1262                             l2825 1ED8  
                           l2809 1F2C                             l2817 1EF2  
                           l4521 1B0C                             l5161 0B8E  
                           l5145 0B40                             l5137 0B18  
                           l5129 0B06                             l5081 0994  
                           l5073 097E                             l5065 0948  
                           l5057 090E                             l5049 08DE  
                           l5209 0CDC                             l2827 1F30  
                           l4275 1A28                             l4259 19FC  
                           l4451 163C                             l4443 15D0  
                           l4435 1590                             l4427 1562  
                           l4291 1674                             l4283 1654  
                           l4347 17A8                             l4339 1782  
                           l4371 1816                             l4363 17EA  
                           l4419 192A                             l4603 0D1C  
                           l4515 1996                             l4507 1970  
                           l4531 136A                             l2851 1298  
                           l2843 1266                             l2835 1240  
                           l2819 1ECC                             l5171 0BC2  
                           l5163 0B92                             l5139 0B1C  
                           l5155 0B76                             l5091 09C8  
                           l5083 099C                             l5067 0952  
                           l5059 091E                             l2829 1F34  
                           l4269 1A14                             l4437 15A0  
                           l4429 1564                             l5501 1504  
                           l4461 1462                             l4293 167C  
                           l4285 165C                             l4277 1640  
                           l4349 17AE                             l4381 1852  
                           l4373 181E                             l4365 17EE  
                           l4357 17D0                             l4701 0F8C  
                           l4621 0D68                             l4613 0D4C  
                           l4605 0D1E                             l4517 19B6  
                           l4509 198A                             l4541 13A6  
                           l4533 137A                             l4525 134C  
                           l2861 12DA                             l2853 12AE  
                           l2845 1274                             l2837 1244  
                           l5181 0C38                             l5173 0BCE  
                           l5165 0B9A                             l5149 0B5A  
                           l5093 09D4                             l5085 09AC  
                           l5077 0988                             l5503 15F4  
                           l4439 15B0                             l4447 15E0  
                           l4471 14A0                             l4463 1464  
                           l4295 1684                             l4287 1664  
                           l4279 1644                             l4383 1858  
                           l4375 1826                             l4367 17FC  
                           l4359 17D4                             l4711 0FD6  
                           l4631 0DB6                             l4623 0D6C  
                           l4615 0D54                             l4607 0D2A  
                           l4551 13FA                             l4543 13B8  
                           l4535 1386                             l4527 134E  
                           l2863 12F8                             l2855 12B6  
                           l2871 131A                             l2847 1284  
                           l2839 1252                             l4519 1AAC  
                           l5191 0C56                             l5183 0C3A  
                           l5167 0BA6                             l5159 0B7E  
                           l5095 09E0                             l5087 09B0  
                           l5079 0990                             l4449 1636  
                           l4473 14B0                             l4465 1470  
                           l4457 145A                             l4801 11DA  
                           l4297 168C                             l4289 166C  
                           l4377 1834                             l4385 185E  
                           l4369 1804                             l4393 1880  
                           l4713 0FE6                             l4721 100C  
                           l4641 0DF2                             l4633 0DBC  
                           l4625 0D84                             l4617 0D58  
                           l4705 0FA0                             l4609 0D2C  
                           l4561 1432                             l4553 1400  
                           l4545 13C8                             l4537 139C  
                           l4529 1352                             l2873 132A  
                           l2865 1308                             l2857 12C2  
                           l2849 1288                             l5193 0C5C  
                           l5169 0BB6                             l5177 0BDA  
                           l5185 0C3E                             l5097 09EC  
                           l5089 09B8                             l4475 14C0  
                           l4467 1480                             l4483 14F0  
                           l4459 145C                             l4811 121A  
                           l4803 11EC                             l4731 1038  
                           l4299 1694                             l4387 186E  
                           l4379 184A                             l4395 18B8  
                           l4723 1014                             l4715 0FE8  
                           l4707 0FB4                             l4651 0E30  
                           l4643 0DFE                             l4635 0DC0  
                           l4627 0D94                             l4619 0D5C  
                           l4563 1436                             l4555 1404  
                           l4547 13D8                             l4539 13A2  
                           l2875 133A                             l2867 130A  
                           l2859 12D0                             l4571 1C62  
                           l5195 0C5E                             l5187 0C4E  
                           l5179 0C1E                             l5099 09F8  
                           l4485 154E                             l4477 14D0  
                           l4469 1490                             l4813 121C  
                           l4805 11FC                             l4741 1068  
                           l4733 103A                             l4725 101A  
                           l4389 1876                             l4397 18C0  
                           l4717 0FF4                             l4709 0FC6  
                           l4653 0E40                             l4645 0E14  
                           l4637 0DD2                             l4629 0DA0  
                           l4493 1930                             l4565 144C  
                           l4557 1416                             l4549 13E4  
                           l2869 1314                             l4573 1C6A  
                           l4581 1B72                             l5197 0C7A  
                           l5189 0C52                             l4901 0404  
                           l4821 02A0                             l2991 1CA6  
                           l4487 1554                             l4479 14E0  
                           l4807 120C                             l4815 1232  
                           l4751 1088                             l4743 1070  
                           l4735 1046                             l4727 1022  
                           l4399 18C2                             l4719 0FF6  
                           l4671 0EB8                             l4663 0E76  
                           l4655 0E4C                             l4647 0E1A  
                           l4639 0DE2                             l4495 1934  
                           l4567 1454                             l4559 1426  
                           l4575 1C6E                             l4591 1B94  
                           l4583 1B74                             l4911 0448  
                           l4903 0422                             l4831 02B6  
                           l4823 02A4                             l2993 1CB6  
                           l4817 123A                             l4809 120E  
                           l4761 10D8                             l4753 10A0  
                           l4745 1074                             l4737 1048  
                           l4729 1028                             l4681 0F06  
                           l4673 0ECE                             l4665 0E8C  
                           l4657 0E54                             l4649 0E1E  
                           l4497 193A                             l4577 1C70  
                           l4569 1C52                             l4593 1BA4  
                           l4585 1B7A                             l4921 0488  
                           l4913 0454                             l4905 0424  
                           l4841 02D0                             l4833 02BA  
                           l4825 02AA                             l2987 1C90  
                           l4771 111A                             l4763 10DC  
                           l4755 10B0                             l4747 1078  
                           l4691 0F40                             l4683 0F08  
                           l4675 0ED4                             l4667 0EA6  
                           l4659 0E5C                             l4499 193C  
                           l4579 1C8C                             l4595 1BB0  
                           l4587 1B7C                             l5491 0A18  
                           l4923 0494                             l4915 0456  
                           l4907 0428                             l4851 02DA  
                           l4843 02D2                             l4835 02BC  
                           l4827 02AE                             l4819 029E  
                           l2989 1C9A                             l2997 1E4C  
                           l4781 115C                             l4773 1130  
                           l4765 10EE                             l4757 10BC  
                           l4749 1084                             l4693 0F52  
                           l4685 0F14                             l4677 0EE4  
                           l4669 0EAA                             l4597 1BB2  
                           l4589 1B84                             l5493 0BEE  
                           l4941 0536                             l4925 04A0  
                           l4917 0472                             l4933 04C4  
                           l4909 0438                             l4861 030C  
                           l4853 02DC                             l4845 02D4  
                           l4837 02BE                             l4829 02B2  
                           l2999 1E5A                             l4791 118C  
                           l4783 1168                             l4775 1136  
                           l4767 10FE                             l4759 10D2  
                           l4695 0F54                             l4687 0F16  
                           l4679 0EF4                             l4599 1BBA  
                           l5495 0C96                             l4951 056A  
                           l4943 0546                             l4935 0512  
                           l5487 04DA                             l4927 04AC  
                           l4919 0478                             l4871 0344  
                           l4863 032A                             l4855 02EC  
                           l4847 02D6                             l4839 02CE  
                           l4793 11A8                             l4785 117C  
                           l4777 113A                             l4769 110E  
                           l4697 0F66                             l4689 0F30  
                           l5497 0CF2                             l5489 0682  
                           l4961 05B4                             l4953 057E  
                           l4945 054A                             l4937 0530  
                           l4929 04B8                             l4881 0384  
                           l4873 0346                             l4865 032C  
                           l4857 0306                             l4849 02D8  
                           l4795 11B4                             l4787 117E  
                           l4779 114C                             l5499 16B2  
                           l4699 0F76                             l4971 0608  
                           l4963 05C6                             l4955 059C  
                           l4947 054C                             l4939 0532  
                           l4891 03D8                             l4883 0386  
                           l4875 0362                             l4867 0330  
                           l4859 030A                             l4789 118A  
                           l4981 0648                             l4973 060A  
                           l4965 05D8                             l4957 059E  
                           l4949 0568                             l4893 03E0  
                           l4885 03A4                             l4869 0340  
                           l4877 0364                             l4799 11C8  
                           l4983 0654                             l4991 06B0  
                           l4975 0626                             l4967 05EA  
                           l4959 05A2                             l4895 03E2  
                           l4887 03AC                             l4879 037C  
                           l4993 06C0                             l4985 0660  
                           l4977 062C                             l4969 05FC  
                           l4897 0400                             l4889 03C2  
                           l4995 06C4                             l4979 0638  
                           l4899 0402                             l4997 06C8  
                           l4989 066C                             l4999 0704  
                           u2100 1D06                             u2101 1D02  
                           u1400 1EB2                             u3000 0DD2  
                           u1401 1EAE                             u3001 0DCE  
                           u1410 1D40                             u3010 0E14  
                           u1411 1D3C                             u3011 0E10  
                           u1420 1DD8                             u3100 0F52  
                           u3020 0E30                             u1500 12AE  
                           u1421 1DD4                             u3101 0F4E  
                           u3021 0E2C                             u1501 12AA  
                           u3110 0F66                             u3030 0E72  
                           u1510 12D0                             u3111 0F62  
                           u3031 0E6E                             u1511 12CC  
                           u3200 1130                             u3120 0F9C  
                           u3040 0EA6                             u1520 12F8  
                           u3201 112C                             u3121 0F98  
                           u3041 0EA2                             u1521 12F4  
                           u3210 114C                             u3130 0FB2  
                           u3050 0EB8                             u1530 132A  
                           u3211 1148                             u3131 0FAE  
                           u3051 0EB4                             u1531 1326  
                           u1700 1B68                             u3220 117C  
                           u3140 0FC6                             u3060 0ECE  
                           u1380 1E16                             u3300 03D8  
                           u1701 1B64                             u3221 1178  
                           u3141 0FC2                             u3061 0ECA  
                           u1381 1E12                             u3301 03D4  
                           u3230 11C4                             u3150 0FD6  
                           u3070 0EF4                             u1390 1E24  
                           u1710 1D66                             u3310 0438  
                           u3231 11C0                             u3151 0FD2  
                           u3071 0EF0                             u1391 1E20  
                           u1711 1D62                             u3311 0434  
                           u3240 11D8                             u3160 0FE6  
                           u3080 0F06                             u1480 1252  
                           u1720 1AA8                             u3400 0704  
                           u3320 0448                             u3241 11D4  
                           u3161 0FE2                             u3081 0F02  
                           u1481 124E                             u1721 1AA4  
                           u3401 0700                             u3321 0444  
                           u3250 11EC                             u3170 1038  
                           u3090 0F40                             u1490 1274  
                           u3410 0736                             u3330 0546  
                           u3251 11E8                             u3171 1034  
                           u3091 0F3C                             u1491 1270  
                           u3411 0732                             u3331 0542  
                           u3260 11FC                             u3180 10D2  
                           u3500 07EA                             u3420 0744  
                           u3340 05B4                             u3261 11F8  
                           u3181 10CE                             u3501 07E6  
                           u3421 0740                             u3341 05B0  
                           u3270 120C                             u3190 10EE  
                           u3510 07F8                             u3430 0758  
                           u3350 05C6                             u3271 1208  
                           u3191 10EA                             u3511 07F4  
                           u3431 0754                             u3351 05C2  
                           u1680 1CB6                             u2800 177C  
                           u3600 0932                             u3520 080E  
                           u3440 0772                             u3360 05D8  
                           u3280 0340                             u1681 1CB2  
                           u2801 1778                             u3601 092E  
                           u3521 080A                             u3441 076E  
                           u3361 05D4                             u3281 033C  
                           u1690 1E5A                             u2730 19F0  
                           u2810 1798                             u3610 0968  
                           u3530 0828                             u3450 0780  
                           u3370 05EA                             u3290 03C2  
                           _PEN2 007B5A                             u1691 1E56  
                           u2731 19EC                             u2811 1794  
                           u3611 0964                             u3531 0824  
                           u3451 077C                             u3371 05E6  
                           u3291 03BE                             u2740 1A0E  
                           u2724 19D4                             u2820 17BE  
                           u2900 190A                             u3620 09AC  
                           u3540 084E                             u3460 0792  
                           u3380 05FC                             u2741 1A0A  
                           u2725 19D0                             u2821 17BA  
                           u2901 1906                             u3621 09A8  
                           u3541 084A                             u3461 078E  
                           u3381 05F8                             u2750 1A26  
                           u2830 17E2                             u3630 0A84  
                           u3550 087E                             u3470 07AC  
                           u3390 06F6                             u2751 1A22  
                           u2831 17DE                             u3631 0A80  
                           u3551 087A                             u3471 07A8  
                           u3391 06F2                             u2760 1A38  
                           u2840 17FC                             u2920 139C  
                           u3640 0A94                             u3560 0894  
                           u3480 07BA                             u2761 1A34  
                           u2841 17F8                             u2921 1398  
                           u3641 0A90                             u3561 0890  
                           u3481 07B6                             u2770 171E  
                           u2850 1816                             u2930 13B8  
                           u3650 0B56                             u3570 08A4  
                           u3490 07D0                             u2771 171A  
                           u2851 1812                             u2915 1952  
                           u2931 13B4                             u3651 0B52  
                           u3707 0B28                             u3571 08A0  
                           u3491 07CC                             u2780 1738  
                           u2860 1834                             u2940 13FA  
                           u3660 0B8E                             u3580 08DE  
                           u2781 1734                             u2861 1830  
                           u2941 13F6                             u3717 135C  
                           u3661 0B8A                             u3581 08DA  
                           u2790 175E                             u2870 184A  
                           u2950 1416                             u3670 0C4E  
                           u3590 08EE                             u2791 175A  
                           u2871 1846                             u3807 1000  
                           u2951 1412                             u3727 13BE  
                           u3671 0C4A                             u3591 08EA  
                           u2880 186E                             u2960 1C62  
                           u3817 1052                             u2881 186A  
                           u3737 1440                             u2961 1C5E  
                           u2890 18FA                             u2970 1B94  
                           u3827 1092                             u2891 18F6  
                           u3747 0D36                             u2971 1B90  
                           u2980 0D1C                             u3837 10F4  
                           u3757 0D76                             u2981 0D18  
                           u2990 0DB6                             u3847 1196  
                           u3767 0DD8                             u2991 0DB2  
                           u3687 02F8                             u3857 1226  
                           u3777 0E80                             u3697 071A  
                           _SEN2 007B58                             u3867 1DB8  
                           u3787 0F20                             u3797 0F80  
                           _TMR1 000FCE                             _Busy 0033  
                           _Stop 0035                             _data 0031  
 __end_of_AD_capture_BattVoltage 1CCE                             _main 029E  
                           _init 1A3A                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9               _MotorPosition_Init 134C  
                           btemp 0059                             start 029A  
                __end_of_Get7Seg 170C                    __CFG_IESO$OFF 000000  
                __end_of_Clr_RG3 1F40      __end_of_Homing_Again_Manual 101A  
                   ___param_bank 000000                     high_isr@Temp 003B  
            ?_MotorPosition_Init 0038                  __end_of_Read_IR 1E70  
                __end_of_Set_RG3 1F38                   ??_InitSTLED316 0044  
                __end_of_MotorON 1F0E                    __CFG_PLLDIV$1 000000  
                   _BAUDCON1bits 000F7E                  __end_of___aldiv 134C  
                          ?_main 0038                            ?_init 0038  
                __end_of___awdiv 17D0                            _ADRES 000FC3  
                __end_of___awmod 1880                  ___awdiv@divisor 0040  
                          _T1CON 000FCD                            _T4CON 000F76  
                 __CFG_DEBUG$OFF 000000                            _RCEN2 007B5B  
                          i2l262 01C2                            i2l271 012E  
                          i2l281 018C                            i2l273 00FE  
                          i2l275 0128                            i2l292 028E  
                          i2l278 014C                            i2l561 1EC8  
                          i2l564 1E44                            i2l398 1DAC  
                          i2l566 1E4A                            i2l558 1EBA  
                ___awdiv@counter 0042                            _RSEN2 007B59  
                          _ETemp 0023                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TRISF 000F97                            _TRISG 000F98  
            __end_of_i2c_Address 1EDE                   __CFG_FCMEN$OFF 000000  
           ??_MotorPosition_Init 0047                            _flush 1CCE  
                     _Read1USART 1E26                 _TMR1IF_triggered 002B  
                          tablat 000FF5         ??_STLED316s_SPI_SendData 003E  
            __end_of_i2c_Restart 1F20                            ttemp5 005A  
                          ttemp6 005D                            ttemp7 0061  
                          status 000FD8                            wtemp8 005A  
                  i2_Write1USART 1EB4            _WriteSTLED316SVibMode 1B70  
                __initialization 1C0C                       _InitTimer1 1E70  
                   __end_of_main 0D0C                     __end_of_init 1AAC  
               __end_of_i2c_Init 1E9E                 __end_of_i2c_Read 1D78  
               __end_of_i2c_Wait 1E26                 __end_of_i2c_Stop 1F28  
      __size_of_readWeighingData 005A                           ??_main 0086  
                         ??_init 003E                    __activetblptr 000002  
                         _ACKEN2 007B5C                           _ACKDT2 007B5D  
                         ?_flush 0038                           _ADRESH 000FC4  
                         _ADRESL 000FC3                 ___awdiv@dividend 003E  
             __size_of_i2c_Start 0008                        ??_Get7Seg 0040  
                         i2l2141 1D78                           i2l2133 1E26  
                         i2l2143 1D8E                           i2l2135 1E34  
                         i2l2145 1D94                           i2l2137 1E48  
             __size_of_i2c_Write 000C                           i2l2147 1DAA  
                         i2l4003 0134                           i2l4011 0162  
                         i2l4021 017A                           i2l4013 016E  
                         i2l4005 013A                           i2l4023 017C  
                         i2l4007 013C                           i2l4031 01BA  
                         i2l4041 0204                           i2l4025 018E  
                         i2l4009 014E                           i2l4051 026A  
                         i2l4043 0218                           i2l4035 01D0  
                         i2l4027 01A0                           i2l4019 0174  
                         i2l4053 026E                           i2l4045 0228  
                         i2l4029 01B2                           i2l4037 01D6  
                 __CFG_WDTEN$OFF 000000                           i2l4047 0246  
                         i2l4039 01E6                           i2l4055 0272  
                         i2l4057 0280                           i2l4049 025A  
                         i2l4059 0288                           i2l3537 1EB6  
                         i2l3961 0038                           i2l3963 0048  
                         i2l3971 007C                           i2l3955 0012  
                         i2l3981 00DC                           i2l3973 008C  
                         i2l3965 0058                           i2l3957 0020  
                         i2l3991 0104                           i2l3983 00EC  
                         i2l3975 009C                           i2l3967 0064  
                         i2l3959 0026                           i2l3993 0116  
                         i2l3985 0100                           i2l3977 00B2  
                         i2l3969 0074                           i2l3995 0118  
                         i2l3979 00C4                           i2l3997 0130  
                         _RCREG1 000FAF                        ??_Clr_RG3 003E  
                         _SPBRG1 000FB0                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                           _TRISD5 007CAD  
                         _TRISD6 007CAE                   ?i2_Write1USART 0038  
                         _TXREG1 000FAE                       _MotorBREAK 1F0E  
                      ??_Read_IR 0040                        ??_Set_RG3 003E  
                read_i2c@address 0080                           _OpMode 0030  
                 __CFG_XINST$OFF 000000                        ??_MotorON 003E  
               __end_of_high_isr 029A                        ??___aldiv 0046  
                      ??___awdiv 0042                   __CFG_STVREN$ON 000000  
                      ??___awmod 0042                   _PWM_Duty_Cycle 002C  
               __end_of_flushOut 1D42                 __end_of_read_i2c 1B16  
                    _i2c_Address 1ECA                           clear_0 1C32  
                         clear_1 1C3E                 ___awdiv@quotient 0044  
                ___awmod@divisor 0040                  ___awmod@counter 0042  
               Read1USART@result 0038       __end_of_WriteSTLED316SData 192E  
     __end_of_WriteSTLED316SMode 1558                           flush@i 003E  
                  i2c_Write@data 003F                     __pdataCOMRAM 004E  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      _i2c_Restart 1F18  
                    ?_Read1USART 0038             __end_of_InitSTLED316 19BA  
                     __accesstop 0060          __end_of__initialization 1C44  
__size_of_STLED316s_SPI_SendData 0080              _Low_Power_Indicator 1D78  
              _WriteSTLED316SErr 1558                    ___rparam_used 000001  
         ?_WriteSTLED316SVibMode 0038               ?_WriteSTLED316SErr 0038  
                 __pcstackCOMRAM 0038                      ?_InitTimer1 0038  
                  __end_of_flush 1D08               __size_of_delay_1ms 002C  
              __end_of_i2c_Start 1F30              ??_WriteSTLED316SErr 0044  
              __end_of_i2c_Write 1EF8             ?_Low_Power_Indicator 0038  
                        ??_flush 003E                        ?_i2c_Init 0038  
                      ?_i2c_Read 003F                       __pbssBANK0 0060  
                      ?_i2c_Wait 0038                  ??i2_Write1USART 0038  
                      ?_i2c_Stop 0038               __size_of_initUSART 0026  
      __end_of_WriteSTLED316SErr 1640                    ??_Write1USART 003E  
             __size_of_initMotor 000E                      ?_MotorBREAK 0038  
        __size_of_ToggleVIB_Mode 003E                          _CCP4CON 000F73  
            __size_of_Read1USART 0026            ??_Low_Power_Indicator 0038  
         _STLED316s_SPI_SendData 19BA                 _readWeighingData 1B16  
             i2c_Address@address 0040                  __CFG_WDTPS$2048 000000  
                        i2u74_40 1E34                          i2u74_41 1E30  
                        i2u75_40 1D8E                          i2u75_41 1D8A  
                        _SPBRGH1 000F7F                          i2u76_40 1DAA  
                        i2u76_41 1DA6                          _SSP2ADD 000F6E  
                        _SSP2BUF 000F6F                          _NUM_REC 0017  
            __size_of_InitTimer1 0018                          _VOLTAGE 0011  
                      ?_high_isr 0038                       ??_i2c_Init 003E  
                     ??_i2c_Read 0041                          _PWM_reg 0058  
                     ??_i2c_Wait 003E                          _Get7Seg 1640  
    WriteSTLED316SVibMode@v_mode 0044                       ??_i2c_Stop 003F  
                        _Clr_RG3 1F38                __end_of_delay_1ms 1DDA  
              i2Write1USART@data 0038                        ?_flushOut 0038  
                      ?_read_i2c 0080                      _Serial_Flag 0037  
             __size_of_write_i2c 004E                          _Read_IR 1E4C  
          WriteSTLED316SMode@msg 0046                          _Set_RG3 1F30  
                        __Hparam 0000                          __Lparam 0000  
                        _MotorON 1F04              __end_of_Write1USART 1EB4  
     WriteSTLED316SData@NUM_DIG0 0080       WriteSTLED316SData@NUM_DIG1 0082  
                        ___aldiv 1240                      _Motor_Speed 0021  
                        ___awdiv 170C                          ___awmod 17D0  
                   Get7Seg@Digit 003E     __size_of_Homing_Again_Manual 030E  
                        __pcinit 1C0C                          __ramtop 1000  
              __end_of_initUSART 1E00                          __ptext0 029E  
                        __ptext1 1AAC                          __ptext2 1F18  
                        __ptext3 1D42                          __ptext4 1DDA  
                        __ptext5 1EDE                          __ptext6 1A3A  
                        __ptext7 1E88                          __ptext8 1CCE  
                        __ptext9 1B70                __end_of_initMotor 1EEC  
                      _T3CONbits 000F79              __size_of_MotorBREAK 000A  
               ___awmod@dividend 003E                 ___aldiv@dividend 003E  
                      _T4CONbits 000F76                    delay_1ms@time 003E  
              __CFG_MSSPMSK$MSK5 000000            __size_of_InitSTLED316 008C  
    __size_of_MotorPosition_Init 010C                       _pause_Time 002F  
                      _EAdd_High 0027                       ??_high_isr 0039  
           end_of_initialization 1C44       __size_of_WriteSTLED316SErr 00E8  
           i2c_Address@l_address 0041                       ??_flushOut 003E  
                     ??_read_i2c 004C                    __Lmediumconst 0000  
        WriteSTLED316SData@data3 0084          WriteSTLED316SData@data4 0085  
               ___aldiv@quotient 0048                          postdec1 000FE5  
                        postinc0 000FEE                     ?_i2c_Address 003F  
                   _InitSTLED316 192E                        _PORTAbits 000F80  
                      _PORTBbits 000F81                __end_of_write_i2c 1C0C  
               __CFG_CPUDIV$OSC1 000000                        _TRISCbits 000F94  
                   ?_i2c_Restart 0038         ??_AD_capture_BattVoltage 0041  
                   ??_Read1USART 0038               _WriteSTLED316SData 1880  
        ??_WriteSTLED316SVibMode 0044               _WriteSTLED316SMode 1458  
                    _Write1USART 1E9E              ?_WriteSTLED316SData 0046  
            ?_WriteSTLED316SMode 0038                     ??_InitTimer1 003E  
                 _ToggleVIB_Mode 1C52                        _Device_ID 001D  
                    _Vmotor_Time 0056                    __pidataCOMRAM 1EF8  
             __end_of_Read1USART 1E4C                    _Serial_Buffer 0001  
                      _i2c_Start 1F28                        _i2c_Write 1EEC  
           ??_WriteSTLED316SData 0049              start_initialization 1C0C  
           ??_WriteSTLED316SMode 0044               __end_of_InitTimer1 1E88  
                _LowPowerCounter 004E         __end_of_readWeighingData 1B70  
              __size_of_i2c_Init 0016                __size_of_i2c_Read 0036  
              __size_of_i2c_Wait 0026                     ??_MotorBREAK 003E  
              __size_of_i2c_Stop 0008           __end_of_ToggleVIB_Mode 1C90  
        ?_STLED316s_SPI_SendData 0038                       ?_i2c_Start 0038  
                     ?_i2c_Write 0038                      __pbssCOMRAM 0001  
             __end_of_MotorBREAK 1F18                    __pcstackBANK0 0080  
__size_of_AD_capture_BattVoltage 003E              __CFG_CCP2MX$DEFAULT 000000  
                       ?_Get7Seg 003E              _Homing_Again_Manual 0D0C  
                       ?_Clr_RG3 0038                __size_of_high_isr 0292  
          __end_ofi2_Write1USART 1ECA                         ?_Read_IR 003E  
              __size_of_flushOut 003A                        _delay_1ms 1DAE  
              __size_of_read_i2c 006A                _Homing_Again_Auto 101A  
                       ?_Set_RG3 0038                  ?_ToggleVIB_Mode 0038  
                       ?_MotorON 0038   __end_of_STLED316s_SPI_SendData 1A3A  
    __end_of_Low_Power_Indicator 1DAE               ?_Homing_Again_Auto 0038  
                      __pintcode 0008                         ?___aldiv 003E  
                       ?___awdiv 003E                         ?___awmod 003E  
           ?_Homing_Again_Manual 0038                     _errorcounter 0052  
            ??_Homing_Again_Auto 0047             __size_of_i2c_Address 0014  
           WriteSTLED316SErr@msg 0046                        _initUSART 1DDA  
                      _initMotor 1EDE                      Get7Seg@Data 0042  
                 __size_of_flush 003A                  Write1USART@data 003E  
           __size_of_i2c_Restart 0008                  ___aldiv@divisor 0042  
                ___aldiv@counter 0046        __end_of_Homing_Again_Auto 1240  
                       _LATAbits 000F89                         _EAdd_Low 0025  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATGbits 000F8F                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                       ?_delay_1ms 003E  
              readWeighingData@i 0040                         i2u211_40 1EC8  
                       i2u211_41 1EC4                         i2u260_40 00EC  
                       i2u252_40 0020                         i2u260_41 00E8  
                       i2u252_41 001C                         i2u261_40 00FE  
                       i2u253_40 0038                         i2u261_41 00FA  
                       i2u253_41 0034                         i2u270_40 0246  
                       i2u262_40 0128                         i2u254_40 0048  
                       i2u270_41 0242                         i2u262_41 0124  
                       i2u254_41 0044                         i2u271_40 0280  
                       i2u263_40 014C                         i2u255_40 0058  
                       i2u271_41 027C                         i2u263_41 0148  
                       i2u255_41 0054                         i2u264_40 018C  
                       i2u256_40 008C                         i2u264_41 0188  
                       i2u256_41 0088                         i2u265_40 01A0  
                       i2u257_40 00B2                         i2u265_41 019C  
                       i2u257_41 00AE                         _PIR1bits 000F9E  
                       i2u266_40 01B2                         i2u258_40 00C4  
                       i2u266_41 01AE                         i2u258_41 00C0  
                       i2u267_40 01D0                         i2u259_40 00DC  
                       i2u267_41 01CC                         i2u259_41 00D8  
                       i2u268_40 01E6                         i2u268_41 01E2  
                       i2u269_40 0204                         i2u269_41 0200  
                       _RCONbits 000FD0           _AD_capture_BattVoltage 1C90  
                       _SSP2CON1 000F6C                         _SSP2CON2 000F6B  
                       _SSP2STAT 000F6D            ??_Homing_Again_Manual 0049  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                      high_isr@c 003C                        high_isr@i 003D  
                    ??_i2c_Start 003F                      ??_i2c_Write 003F  
     __end_of_MotorPosition_Init 1458                       ?_initUSART 0038  
          _delay_motor_stop_time 002D                       ?_initMotor 0038  
                   _Serial_GData 0036                        _write_i2c 1BBE  
                      copy_data0 1C20           InitSTLED316@Brightness 0046  
                   _Serial_Count 0029                         _i2c_Init 1E88  
                       _i2c_Read 1D42                         _i2c_Wait 1E00  
                       _i2c_Stop 1F20                 __size_of_Get7Seg 00CC  
                   ?_Write1USART 0038                 __size_of_Clr_RG3 0008  
 __size_of_WriteSTLED316SVibMode 004E    __end_of_WriteSTLED316SVibMode 1BBE  
                      flushOut@i 003E                       _ANCON0bits 000FC1  
                       __Hrparam 0000                 __size_of_Read_IR 0024  
                       __Lrparam 0000                 __size_of_Set_RG3 0008  
               __size_of_MotorON 000A                 __size_of___aldiv 010C  
               __size_of___awdiv 00C4                 __size_of___awmod 00B0  
                 _vibration_mode 0032                         __ptext10 1C52  
                       __ptext11 1BBE                         __ptext20 192E  
                       __ptext12 1EEC                         __ptext21 0D0C  
                       __ptext13 1F20                         __ptext30 1458  
                       __ptext22 1880                         __ptext14 1F28  
                       __ptext31 1558                         __ptext23 17D0  
                       __ptext15 1ECA                         __ptext32 19BA  
                       __ptext24 170C                         __ptext16 1E00  
                       __ptext41 1EB4                         __ptext33 1E4C  
                       __ptext25 1640                         __ptext17 1240  
                       __ptext42 1E26                         __ptext34 1F04  
                       __ptext26 101A                         __ptext18 134C  
                       __ptext43 1D78                         __ptext35 1F30  
                       __ptext27 1B16                         __ptext19 1E70  
                       __ptext36 1F0E                         __ptext28 1D08  
                       __ptext37 1F38                         __ptext29 1E9E  
                       __ptext38 1C90                         __ptext39 1DAE  
                     ?_write_i2c 0080                 write_i2c@address 0080  
                       _high_isr 0008                read_i2c@read_byte 004C  
                       _flushOut 1D08                         _read_i2c 1AAC  
                  __size_of_main 0A6E       __size_of_Homing_Again_Auto 0226  
                  __size_of_init 0072                ?_readWeighingData 0038  
                    ??_delay_1ms 0040               ??_readWeighingData 0040  
                       _vib_Time 002E            _Motor_Stop_Delay_Time 001F  
                       int$flags 0059                _Serial_Buffer_Out 0060  
     STLED316s_SPI_SendData@Data 0040                       _INTCONbits 000FF2  
                    ??_initUSART 003E      __size_of_WriteSTLED316SData 00AE  
     STLED316s_SPI_SendData@temp 0041      __size_of_WriteSTLED316SMode 0100  
                    ??_initMotor 003E             __CFG_FOSC$INTOSCPLLO 000000  
                       intlevel2 0000                     _motor_status 0034  
               ??_ToggleVIB_Mode 004C                  i2c_Address@mode 003F  
                     _RCSTA1bits 000FAC                       _OSCCONbits 000FD3  
       WriteSTLED316SData@v_mode 0048         WriteSTLED316SData@number 0046  
                     _IR_SENSORF 0013                 _Motor_Pause_Time 001B  
             _Serial_Temp_Buffer 0070          STLED316s_SPI_SendData@i 0042  
        STLED316s_SPI_SendData@t 0043                     ___aldiv@sign 0047  
                     _WDTCONbits 000FC0                      ??_write_i2c 004C  
            i2c_Read@i2cReadData 0042                    write_i2c@data 0084  
        ?_AD_capture_BattVoltage 0038             __size_of_Write1USART 0016  
