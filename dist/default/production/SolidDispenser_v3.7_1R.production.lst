

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Oct 04 15:40:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85   000000                     
    86                           ; Version 2.40
    87                           ; Generated 17/11/2021 GMT
    88                           ; 
    89                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F65J50 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122                           	psect	idataBANK0
   123   00484C                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _LowPowerCounter
   127   00484C  0014               	dw	20
   128   00484E  0000               	dw	0
   129                           
   130                           ;initializer for _errorcounter
   131   004850  001E               	dw	30
   132   004852  0000               	dw	0
   133                           
   134                           ;initializer for _idx
   135   004854  0001               	dw	1
   136                           
   137                           ;initializer for _Vmotor_Time
   138   004856  07D0               	dw	2000
   139                           
   140                           ;initializer for _PWM_reg
   141   004858  3F                 	db	63
   142   000000                     _TMR1	set	4046
   143   000000                     _ADCON1bits	set	4033
   144   000000                     _TRISF	set	3991
   145   000000                     _TRISE	set	3990
   146   000000                     _RCREG2	set	4010
   147   000000                     _TXREG2	set	4009
   148   000000                     _RCREG1	set	4015
   149   000000                     _TXREG1	set	4014
   150   000000                     _SPBRGH2	set	3965
   151   000000                     _SPBRG2	set	4011
   152   000000                     _SPBRGH1	set	3967
   153   000000                     _SPBRG1	set	4016
   154   000000                     _TRISGbits	set	3992
   155   000000                     _SSP2STAT	set	3949
   156   000000                     _SSP2ADD	set	3950
   157   000000                     _ADRESL	set	4035
   158   000000                     _ADRESH	set	4036
   159   000000                     _ADCON0bits	set	4034
   160   000000                     _IPR1bits	set	3999
   161   000000                     _TRISD5	set	31917
   162   000000                     _TMR1IE	set	31976
   163   000000                     _TMR1IF	set	31984
   164   000000                     _ADRES	set	4035
   165   000000                     _T4CONbits	set	3958
   166   000000                     _ANCON0bits	set	4033
   167   000000                     _TRISG	set	3992
   168   000000                     _TRISD	set	3989
   169   000000                     _TRISC	set	3988
   170   000000                     _TRISB	set	3987
   171   000000                     _PIR1bits	set	3998
   172   000000                     _PIE1bits	set	3997
   173   000000                     _T2CON	set	4042
   174   000000                     _CCP1CON	set	4027
   175   000000                     _INTCONbits	set	4082
   176   000000                     _TX2IF	set	32036
   177   000000                     _TX1IF	set	31988
   178   000000                     _ACKEN2	set	31580
   179   000000                     _ACKDT2	set	31581
   180   000000                     _RCEN2	set	31579
   181   000000                     _PEN2	set	31578
   182   000000                     _RSEN2	set	31577
   183   000000                     _SEN2	set	31576
   184   000000                     _TRISD6	set	31918
   185   000000                     _TRISC2	set	31906
   186   000000                     _SSP2CON2	set	3947
   187   000000                     _SSP2CON1	set	3948
   188   000000                     _PORTAbits	set	3968
   189   000000                     _LATAbits	set	3977
   190   000000                     _LATCbits	set	3979
   191   000000                     _TRISBbits	set	3987
   192   000000                     _TRISCbits	set	3988
   193   000000                     _CCP1CONbits	set	4027
   194   000000                     _WDTCONbits	set	4032
   195   000000                     _T2CONbits	set	4042
   196   000000                     _OSCCONbits	set	4051
   197   000000                     _CCPR1L	set	4028
   198   000000                     _GIE	set	32663
   199   000000                     _T1CON	set	4045
   200   000000                     _RCONbits	set	4048
   201   000000                     _PR2	set	4043
   202   000000                     _LATGbits	set	3983
   203   000000                     _TRISA	set	3986
   204   000000                     _LATDbits	set	3980
   205   000000                     _PIE3bits	set	4003
   206   000000                     _TXSTA2bits	set	4008
   207   000000                     _RCSTA1bits	set	4012
   208   000000                     _TXSTA1bits	set	4013
   209   000000                     _CCP4CON	set	3955
   210   000000                     _T4CON	set	3958
   211   000000                     _PR4	set	3959
   212   000000                     _BAUDCON2bits	set	3964
   213   000000                     _BAUDCON1bits	set	3966
   214   000000                     _SSP2BUF	set	3951
   215   000000                     _RCSTA2bits	set	3996
   216   000000                     _PIR3bits	set	4004
   217   000000                     _T3CONbits	set	3961
   218                           
   219                           	psect	smallconst
   220   001000                     __psmallconst:
   221                           	callstack 0
   222   001000  00                 	db	0
   223   001001                     STR_11:
   224                           
   225                           ; BSR set to: 0
   226   001001  45                 	db	69	;'E'
   227   001002  72                 	db	114	;'r'
   228   001003  72                 	db	114	;'r'
   229   001004  6F                 	db	111	;'o'
   230   001005  72                 	db	114	;'r'
   231   001006  3A                 	db	58	;':'
   232   001007  20                 	db	32
   233   001008  49                 	db	73	;'I'
   234   001009  6E                 	db	110	;'n'
   235   00100A  76                 	db	118	;'v'
   236   00100B  61                 	db	97	;'a'
   237   00100C  6C                 	db	108	;'l'
   238   00100D  69                 	db	105	;'i'
   239   00100E  64                 	db	100	;'d'
   240   00100F  20                 	db	32
   241   001010  55                 	db	85	;'U'
   242   001011  41                 	db	65	;'A'
   243   001012  52                 	db	82	;'R'
   244   001013  54                 	db	84	;'T'
   245   001014  20                 	db	32
   246   001015  6E                 	db	110	;'n'
   247   001016  75                 	db	117	;'u'
   248   001017  6D                 	db	109	;'m'
   249   001018  62                 	db	98	;'b'
   250   001019  65                 	db	101	;'e'
   251   00101A  72                 	db	114	;'r'
   252   00101B  2E                 	db	46
   253   00101C  0A                 	db	10
   254   00101D  00                 	db	0
   255   00101E                     STR_8:
   256                           
   257                           ; BSR set to: 0
   258   00101E  53                 	db	83	;'S'
   259   00101F  65                 	db	101	;'e'
   260   001020  6E                 	db	110	;'n'
   261   001021  74                 	db	116	;'t'
   262   001022  20                 	db	32
   263   001023  72                 	db	114	;'r'
   264   001024  65                 	db	101	;'e'
   265   001025  73                 	db	115	;'s'
   266   001026  70                 	db	112	;'p'
   267   001027  6F                 	db	111	;'o'
   268   001028  6E                 	db	110	;'n'
   269   001029  73                 	db	115	;'s'
   270   00102A  65                 	db	101	;'e'
   271   00102B  20                 	db	32
   272   00102C  28                 	db	40
   273   00102D  55                 	db	85	;'U'
   274   00102E  41                 	db	65	;'A'
   275   00102F  52                 	db	82	;'R'
   276   001030  54                 	db	84	;'T'
   277   001031  31                 	db	49	;'1'
   278   001032  29                 	db	41
   279   001033  3A                 	db	58	;':'
   280   001034  20                 	db	32
   281   001035  00                 	db	0
   282   001036                     
   283                           ; BSR set to: 0
   284   001036  52                 	db	82	;'R'
   285   001037  65                 	db	101	;'e'
   286   001038  63                 	db	99	;'c'
   287   001039  65                 	db	101	;'e'
   288   00103A  69                 	db	105	;'i'
   289   00103B  76                 	db	118	;'v'
   290   00103C  65                 	db	101	;'e'
   291   00103D  64                 	db	100	;'d'
   292   00103E  20                 	db	32
   293   00103F  64                 	db	100	;'d'
   294   001040  61                 	db	97	;'a'
   295   001041  74                 	db	116	;'t'
   296   001042  61                 	db	97	;'a'
   297   001043  20                 	db	32
   298   001044  28                 	db	40
   299   001045  55                 	db	85	;'U'
   300   001046  41                 	db	65	;'A'
   301   001047  52                 	db	82	;'R'
   302   001048  54                 	db	84	;'T'
   303   001049  00                 	db	0
   304   00104A                     STR_3:
   305                           
   306                           ; BSR set to: 0
   307   00104A  30                 	db	48	;'0'
   308   00104B  78                 	db	120	;'x'
   309   00104C  25                 	db	37
   310   00104D  30                 	db	48	;'0'
   311   00104E  32                 	db	50	;'2'
   312   00104F  58                 	db	88	;'X'
   313   001050  00                 	db	0
   314   001051                     STR_2:
   315                           
   316                           ; BSR set to: 0
   317   001051  0D                 	db	13
   318   001052  0A                 	db	10
   319   001053  00                 	db	0
   320   001054                     STR_6:
   321                           
   322                           ; BSR set to: 0
   323   001054  2C                 	db	44
   324   001055  20                 	db	32
   325   001056  00                 	db	0
   326   001057                     
   327                           ; BSR set to: 0
   328   001057  25                 	db	37
   329   001058  64                 	db	100	;'d'
   330   001059  00                 	db	0
   331   00105A  00                 	db	0	; dummy byte at the end
   332   000000                     
   333                           ; #config settings
   334                           
   335                           	psect	cinit
   336   0044C8                     __pcinit:
   337                           	callstack 0
   338   0044C8                     start_initialization:
   339                           	callstack 0
   340   0044C8                     __initialization:
   341                           	callstack 0
   342                           
   343                           ; Initialize objects allocated to BANK0 (13 bytes)
   344                           ; load TBLPTR registers with __pidataBANK0
   345   0044C8  0E4C               	movlw	low __pidataBANK0
   346   0044CA  6EF6               	movwf	tblptrl,c
   347   0044CC  0E48               	movlw	high __pidataBANK0
   348   0044CE  6EF7               	movwf	tblptrh,c
   349   0044D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   350   0044D2  6EF8               	movwf	tblptru,c
   351   0044D4  EE00  F0E5         	lfsr	0,__pdataBANK0
   352   0044D8  EE10 F00D          	lfsr	1,13
   353   0044DC                     copy_data0:
   354   0044DC  0009               	tblrd		*+
   355   0044DE  CFF5 FFEE          	movff	tablat,postinc0
   356   0044E2  50E5               	movf	postdec1,w,c
   357   0044E4  50E1               	movf	fsr1l,w,c
   358   0044E6  E1FA               	bnz	copy_data0
   359                           
   360                           ; Clear objects allocated to BANK1 (80 bytes)
   361   0044E8  EE01  F000         	lfsr	0,__pbssBANK1
   362   0044EC  0E50               	movlw	80
   363   0044EE                     clear_0:
   364   0044EE  6AEE               	clrf	postinc0,c
   365   0044F0  06E8               	decf	wreg,f,c
   366   0044F2  E1FD               	bnz	clear_0
   367                           
   368                           ; Clear objects allocated to BANK0 (68 bytes)
   369   0044F4  EE00  F060         	lfsr	0,__pbssBANK0
   370   0044F8  0E44               	movlw	68
   371   0044FA                     clear_1:
   372   0044FA  6AEE               	clrf	postinc0,c
   373   0044FC  06E8               	decf	wreg,f,c
   374   0044FE  E1FD               	bnz	clear_1
   375   004500                     end_of_initialization:
   376                           	callstack 0
   377   004500                     __end_of__initialization:
   378                           	callstack 0
   379   004500  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   380   004502  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   381   004504  0100               	movlb	0
   382   004506  EF2E  F008         	goto	_main	;jump to C main() function
   383                           
   384                           	psect	bssBANK0
   385   000060                     __pbssBANK0:
   386                           	callstack 0
   387   000060                     	ds	5
   388   000065                     _width:
   389                           	callstack 0
   390   000065                     	ds	2
   391   000067                     _prec:
   392                           	callstack 0
   393   000067                     	ds	2
   394   000069                     _holdTimeLeft:
   395                           	callstack 0
   396   000069                     	ds	2
   397   00006B                     _holdTimeRight:
   398                           	callstack 0
   399   00006B                     	ds	2
   400   00006D                     _temp:
   401                           	callstack 0
   402   00006D                     	ds	2
   403   00006F                     _dispense:
   404                           	callstack 0
   405   00006F                     	ds	2
   406   000071                     _pwm_mode:
   407                           	callstack 0
   408   000071                     	ds	2
   409   000073                     _pwm_count:
   410                           	callstack 0
   411   000073                     	ds	2
   412   000075                     _dutyCycle_reg:
   413                           	callstack 0
   414   000075                     	ds	2
   415   000077                     _VOLTAGE:
   416                           	callstack 0
   417   000077                     	ds	2
   418   000079                     _IR_SENSORF:
   419                           	callstack 0
   420   000079                     	ds	2
   421   00007B                     _i:
   422                           	callstack 0
   423   00007B                     	ds	2
   424   00007D                     _NUM_REC:
   425                           	callstack 0
   426   00007D                     	ds	2
   427   00007F                     _i_RUN_ZERO:
   428                           	callstack 0
   429   00007F                     	ds	2
   430   000081                     _NUM:
   431                           	callstack 0
   432   000081                     	ds	2
   433   000083                     _Motor_Pause_Time:
   434                           	callstack 0
   435   000083                     	ds	2
   436   000085                     _Device_ID:
   437                           	callstack 0
   438   000085                     	ds	2
   439   000087                     _Motor_Stop_Delay_Time:
   440                           	callstack 0
   441   000087                     	ds	2
   442   000089                     _Motor_Speed:
   443                           	callstack 0
   444   000089                     	ds	2
   445   00008B                     _ETemp:
   446                           	callstack 0
   447   00008B                     	ds	2
   448   00008D                     _EAdd_Low:
   449                           	callstack 0
   450   00008D                     	ds	2
   451   00008F                     _EAdd_High:
   452                           	callstack 0
   453   00008F                     	ds	2
   454   000091                     _Serial_Count:
   455                           	callstack 0
   456   000091                     	ds	2
   457   000093                     _duty_cycle:
   458                           	callstack 0
   459   000093                     	ds	2
   460   000095                     _flags:
   461                           	callstack 0
   462   000095                     	ds	1
   463   000096                     _charUART2:
   464                           	callstack 0
   465   000096                     	ds	1
   466   000097                     _TMR1IF_triggered:
   467                           	callstack 0
   468   000097                     	ds	1
   469   000098                     _delay_motor_stop_time:
   470                           	callstack 0
   471   000098                     	ds	1
   472   000099                     _vib_Time:
   473                           	callstack 0
   474   000099                     	ds	1
   475   00009A                     _pause_Time:
   476                           	callstack 0
   477   00009A                     	ds	1
   478   00009B                     _OpMode:
   479                           	callstack 0
   480   00009B                     	ds	1
   481   00009C                     _data:
   482                           	callstack 0
   483   00009C                     	ds	1
   484   00009D                     _vibration_mode:
   485                           	callstack 0
   486   00009D                     	ds	1
   487   00009E                     _Busy:
   488                           	callstack 0
   489   00009E                     	ds	1
   490   00009F                     _motor_status:
   491                           	callstack 0
   492   00009F                     	ds	1
   493   0000A0                     _Stop:
   494                           	callstack 0
   495   0000A0                     	ds	1
   496   0000A1                     _Serial_GData:
   497                           	callstack 0
   498   0000A1                     	ds	1
   499   0000A2                     _Serial_Flag:
   500                           	callstack 0
   501   0000A2                     	ds	1
   502   0000A3                     _PWM_Duty_Cycle:
   503                           	callstack 0
   504   0000A3                     	ds	1
   505                           
   506                           	psect	dataBANK0
   507   0000E5                     __pdataBANK0:
   508                           	callstack 0
   509   0000E5                     _LowPowerCounter:
   510                           	callstack 0
   511   0000E5                     	ds	4
   512   0000E9                     _errorcounter:
   513                           	callstack 0
   514   0000E9                     	ds	4
   515   0000ED                     _idx:
   516                           	callstack 0
   517   0000ED                     	ds	2
   518   0000EF                     _Vmotor_Time:
   519                           	callstack 0
   520   0000EF                     	ds	2
   521   0000F1                     _PWM_reg:
   522                           	callstack 0
   523   0000F1                     	ds	1
   524                           
   525                           	psect	bssBANK1
   526   000100                     __pbssBANK1:
   527                           	callstack 0
   528   000100                     _Serial_Buffer_Out:
   529                           	callstack 0
   530   000100                     	ds	16
   531   000110                     _Serial_Temp_Buffer:
   532                           	callstack 0
   533   000110                     	ds	16
   534   000120                     _Serial_Buffer:
   535                           	callstack 0
   536   000120                     	ds	16
   537   000130                     _dbuf:
   538                           	callstack 0
   539   000130                     	ds	32
   540                           
   541                           	psect	cstackBANK0
   542   0000A4                     __pcstackBANK0:
   543                           	callstack 0
   544   0000A4                     ?_sprintf:
   545                           	callstack 0
   546   0000A4                     vibrationMotorControl@pwm_msg:
   547                           	callstack 0
   548   0000A4                     sprintf@s:
   549                           	callstack 0
   550   0000A4                     printf@ap:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x0
   554   0000A4                     	ds	2
   555   0000A6                     vibrationMotorControl@dc:
   556                           	callstack 0
   557   0000A6                     uart_config@uart_num:
   558                           	callstack 0
   559   0000A6                     sprintf@fmt:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2
   563   0000A6                     	ds	2
   564   0000A8                     vibrationMotorControl@powerState:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x4
   568   0000A8                     	ds	2
   569   0000AA                     sprintf@ap:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573   0000AA                     	ds	2
   574   0000AC                     sprintf@f:
   575                           	callstack 0
   576                           
   577                           ; 11 bytes @ 0x8
   578   0000AC                     	ds	11
   579   0000B7                     uart_print_hex@buf:
   580                           	callstack 0
   581                           
   582                           ; 5 bytes @ 0x13
   583   0000B7                     	ds	5
   584   0000BC                     uart_print_hex@num:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x18
   588   0000BC                     	ds	1
   589   0000BD                     sendData@data:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x19
   593   0000BD                     	ds	2
   594   0000BF                     sendData@length:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598   0000BF                     	ds	2
   599   0000C1                     sendData@uart_channel:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1D
   603   0000C1                     	ds	1
   604   0000C2                     ??_sendData:
   605                           
   606                           ; 1 bytes @ 0x1E
   607   0000C2                     	ds	3
   608   0000C5                     sendResponse@response:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x21
   612   0000C5                     	ds	1
   613   0000C6                     sendResponse@data1:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x22
   617   0000C6                     	ds	1
   618   0000C7                     sendResponse@data2:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x23
   622   0000C7                     	ds	1
   623   0000C8                     sendResponse@eot:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x24
   627   0000C8                     	ds	1
   628   0000C9                     sendResponse@sot:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x25
   632   0000C9                     	ds	1
   633   0000CA                     sendResponse@responseData:
   634                           	callstack 0
   635                           
   636                           ; 5 bytes @ 0x26
   637   0000CA                     	ds	5
   638   0000CF                     handle_uart_communication@Motor_Stop_Delay_Time:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x2B
   642   0000CF                     	ds	2
   643   0000D1                     handle_uart_communication@errorcounter:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x2D
   647   0000D1                     	ds	4
   648   0000D5                     ??_handle_uart_communication:
   649                           
   650                           ; 1 bytes @ 0x31
   651   0000D5                     	ds	2
   652   0000D7                     handle_uart_communication@data2:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x33
   656   0000D7                     	ds	1
   657   0000D8                     handle_uart_communication@receivedBytes:
   658                           	callstack 0
   659                           
   660                           ; 5 bytes @ 0x34
   661   0000D8                     	ds	5
   662   0000DD                     handle_uart_communication@command:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x39
   666   0000DD                     	ds	1
   667   0000DE                     handle_uart_communication@eot:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x3A
   671   0000DE                     	ds	1
   672   0000DF                     handle_uart_communication@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x3B
   676   0000DF                     	ds	2
   677   0000E1                     handle_uart_communication@IR_SENSORF:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x3D
   681   0000E1                     	ds	2
   682   0000E3                     ??_main:
   683                           
   684                           ; 1 bytes @ 0x3F
   685   0000E3                     	ds	2
   686                           
   687                           	psect	cstackCOMRAM
   688   000001                     __pcstackCOMRAM:
   689                           	callstack 0
   690   000001                     ??_STLED316s_SPI_SendData:
   691   000001                     ??_i2c_Wait:
   692   000001                     ?_isdigit:
   693                           	callstack 0
   694   000001                     ?_isspace:
   695                           	callstack 0
   696   000001                     ?_Read_IR:
   697                           	callstack 0
   698   000001                     ?___wmul:
   699                           	callstack 0
   700   000001                     ?___awdiv:
   701                           	callstack 0
   702   000001                     ?___awmod:
   703                           	callstack 0
   704   000001                     ?___aldiv:
   705                           	callstack 0
   706   000001                     ?___xxtofl:
   707                           	callstack 0
   708   000001                     ?___aodiv:
   709                           	callstack 0
   710   000001                     ?___aomod:
   711                           	callstack 0
   712   000001                     receiveData@receivedData:
   713                           	callstack 0
   714   000001                     pwm_set@duty:
   715                           	callstack 0
   716   000001                     delay_1ms@time:
   717                           	callstack 0
   718   000001                     Get7Seg@Digit:
   719                           	callstack 0
   720   000001                     delay2_1ms@time:
   721                           	callstack 0
   722   000001                     ___wmul@multiplier:
   723                           	callstack 0
   724   000001                     ___awdiv@dividend:
   725                           	callstack 0
   726   000001                     ___awmod@dividend:
   727                           	callstack 0
   728   000001                     isdigit@c:
   729                           	callstack 0
   730   000001                     isspace@c:
   731                           	callstack 0
   732   000001                     fputc@c:
   733                           	callstack 0
   734   000001                     uart_print@str:
   735                           	callstack 0
   736   000001                     ___aldiv@dividend:
   737                           	callstack 0
   738   000001                     ___xxtofl@val:
   739                           	callstack 0
   740   000001                     ___aodiv@dividend:
   741                           	callstack 0
   742   000001                     ___aomod@dividend:
   743                           	callstack 0
   744                           
   745                           ; 8 bytes @ 0x0
   746   000001                     	ds	1
   747   000002                     ?_i2c_Read:
   748                           	callstack 0
   749   000002                     i2c_Write@data:
   750                           	callstack 0
   751   000002                     i2c_Address@mode:
   752                           	callstack 0
   753   000002                     receiveData@uart_channel:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x1
   757   000002                     	ds	1
   758   000003                     ??_isdigit:
   759   000003                     ??_isspace:
   760   000003                     ??_pwm_set:
   761   000003                     ??_delay_1ms:
   762   000003                     ??_Get7Seg:
   763   000003                     ??_delay2_1ms:
   764   000003                     STLED316s_SPI_SendData@Data:
   765                           	callstack 0
   766   000003                     i2c_Address@address:
   767                           	callstack 0
   768   000003                     ___wmul@multiplicand:
   769                           	callstack 0
   770   000003                     ___awdiv@divisor:
   771                           	callstack 0
   772   000003                     ___awmod@divisor:
   773                           	callstack 0
   774   000003                     fputc@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2
   778   000003                     	ds	1
   779   000004                     ??_AD_capture_BattVoltage:
   780   000004                     STLED316s_SPI_SendData@temp:
   781                           	callstack 0
   782   000004                     i2c_Address@l_address:
   783                           	callstack 0
   784   000004                     i2c_Read@ack:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x3
   788   000004                     	ds	1
   789   000005                     ??_fputc:
   790   000005                     ??___xxtofl:
   791   000005                     STLED316s_SPI_SendData@i:
   792                           	callstack 0
   793   000005                     Get7Seg@Data:
   794                           	callstack 0
   795   000005                     i2c_Read@i2cReadData:
   796                           	callstack 0
   797   000005                     ___awdiv@counter:
   798                           	callstack 0
   799   000005                     ___awmod@counter:
   800                           	callstack 0
   801   000005                     _isspace$2973:
   802                           	callstack 0
   803   000005                     ___wmul@product:
   804                           	callstack 0
   805   000005                     ___aldiv@divisor:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x4
   809   000005                     	ds	1
   810   000006                     STLED316s_SPI_SendData@t:
   811                           	callstack 0
   812   000006                     ___awdiv@sign:
   813                           	callstack 0
   814   000006                     ___awmod@sign:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x5
   818   000006                     	ds	1
   819   000007                     ??_InitSTLED316:
   820   000007                     ??_WriteSTLED316SErr:
   821   000007                     ?_atoi:
   822                           	callstack 0
   823   000007                     ___awdiv@quotient:
   824                           	callstack 0
   825   000007                     atoi@s:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x6
   829   000007                     	ds	2
   830   000009                     ??_atoi:
   831   000009                     InitSTLED316@Brightness:
   832                           	callstack 0
   833   000009                     WriteSTLED316SErr@msg:
   834                           	callstack 0
   835   000009                     ___aldiv@counter:
   836                           	callstack 0
   837   000009                     ___xxtofl@sign:
   838                           	callstack 0
   839   000009                     WriteSTLED316SData@number:
   840                           	callstack 0
   841   000009                     ___aodiv@divisor:
   842                           	callstack 0
   843   000009                     ___aomod@divisor:
   844                           	callstack 0
   845                           
   846                           ; 8 bytes @ 0x8
   847   000009                     	ds	1
   848   00000A                     ??_MotorPosition_Init:
   849   00000A                     ___aldiv@sign:
   850                           	callstack 0
   851   00000A                     ___xxtofl@exp:
   852                           	callstack 0
   853   00000A                     fputs@s:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x9
   857   00000A                     	ds	1
   858   00000B                     WriteSTLED316SData@v_mode:
   859                           	callstack 0
   860   00000B                     ___aldiv@quotient:
   861                           	callstack 0
   862   00000B                     ___xxtofl@arg:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0xA
   866   00000B                     	ds	1
   867   00000C                     WriteSTLED316SData@NUM_DIG0:
   868                           	callstack 0
   869   00000C                     atoi@neg:
   870                           	callstack 0
   871   00000C                     fputs@fp:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0xB
   875   00000C                     	ds	2
   876   00000E                     fputs@c:
   877                           	callstack 0
   878   00000E                     WriteSTLED316SData@NUM_DIG1:
   879                           	callstack 0
   880   00000E                     atoi@n:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0xD
   884   00000E                     	ds	1
   885   00000F                     ?_read_i2c:
   886                           	callstack 0
   887   00000F                     ?___fldiv:
   888                           	callstack 0
   889   00000F                     fputs@i:
   890                           	callstack 0
   891   00000F                     PWM1_Init@desiredFrequency:
   892                           	callstack 0
   893   00000F                     write_i2c@address:
   894                           	callstack 0
   895   00000F                     read_i2c@address:
   896                           	callstack 0
   897   00000F                     ___fldiv@b:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0xE
   901   00000F                     	ds	1
   902   000010                     WriteSTLED316SData@data3:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0xF
   906   000010                     	ds	1
   907   000011                     WriteSTLED316SData@data4:
   908                           	callstack 0
   909   000011                     ___aodiv@counter:
   910                           	callstack 0
   911   000011                     ___aomod@counter:
   912                           	callstack 0
   913   000011                     pad@fp:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x10
   917   000011                     	ds	1
   918   000012                     ___aodiv@sign:
   919                           	callstack 0
   920   000012                     ___aomod@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x11
   924   000012                     	ds	1
   925   000013                     ??_PWM1_Init:
   926   000013                     ?_abs:
   927                           	callstack 0
   928   000013                     write_i2c@data:
   929                           	callstack 0
   930   000013                     read_i2c@read_byte:
   931                           	callstack 0
   932   000013                     pad@buf:
   933                           	callstack 0
   934   000013                     abs@a:
   935                           	callstack 0
   936   000013                     ___fldiv@a:
   937                           	callstack 0
   938   000013                     ___aodiv@quotient:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x12
   942   000013                     	ds	2
   943   000015                     ??_abs:
   944   000015                     ?_PWM_Selection:
   945                           	callstack 0
   946   000015                     PWM_Selection@msg:
   947                           	callstack 0
   948   000015                     pad@p:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x14
   952   000015                     	ds	2
   953   000017                     ??___fldiv:
   954   000017                     ??_PWM_Selection:
   955   000017                     ??_pad:
   956                           
   957                           ; 1 bytes @ 0x16
   958   000017                     	ds	1
   959   000018                     pad@i:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x17
   963   000018                     	ds	1
   964   000019                     PWM_Selection@dcSelected:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x18
   968   000019                     	ds	1
   969   00001A                     pad@w:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x19
   973   00001A                     	ds	1
   974   00001B                     ___fldiv@rem:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x1A
   978   00001B                     	ds	1
   979   00001C                     dtoa@fp:
   980                           	callstack 0
   981   00001C                     xtoa@fp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x1B
   985   00001C                     	ds	2
   986   00001E                     dtoa@d:
   987                           	callstack 0
   988   00001E                     xtoa@d:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0x1D
   992   00001E                     	ds	1
   993   00001F                     ___fldiv@sign:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x1E
   997   00001F                     	ds	1
   998   000020                     ___fldiv@new_exp:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x1F
  1002   000020                     	ds	2
  1003   000022                     ___fldiv@grs:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x21
  1007   000022                     	ds	4
  1008   000026                     ??_dtoa:
  1009   000026                     ??_xtoa:
  1010   000026                     ___fldiv@bexp:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x25
  1014   000026                     	ds	1
  1015   000027                     ___fldiv@aexp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x26
  1019   000027                     	ds	1
  1020   000028                     ?___flmul:
  1021                           	callstack 0
  1022   000028                     ___flmul@b:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x27
  1026   000028                     	ds	4
  1027   00002C                     ___flmul@a:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x2B
  1031   00002C                     	ds	2
  1032   00002E                     _dtoa$2914:
  1033                           	callstack 0
  1034   00002E                     _xtoa$2924:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x2D
  1038   00002E                     	ds	2
  1039   000030                     ??___flmul:
  1040   000030                     dtoa@p:
  1041                           	callstack 0
  1042   000030                     xtoa@p:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x2F
  1046   000030                     	ds	2
  1047   000032                     dtoa@w:
  1048                           	callstack 0
  1049   000032                     xtoa@w:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x31
  1053   000032                     	ds	2
  1054   000034                     ___flmul@sign:
  1055                           	callstack 0
  1056   000034                     dtoa@n:
  1057                           	callstack 0
  1058   000034                     xtoa@n:
  1059                           	callstack 0
  1060                           
  1061                           ; 8 bytes @ 0x33
  1062   000034                     	ds	1
  1063   000035                     ___flmul@grs:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x34
  1067   000035                     	ds	4
  1068   000039                     ___flmul@aexp:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x38
  1072   000039                     	ds	1
  1073   00003A                     ___flmul@bexp:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x39
  1077   00003A                     	ds	1
  1078   00003B                     ___flmul@prod:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x3A
  1082   00003B                     	ds	1
  1083   00003C                     dtoa@i:
  1084                           	callstack 0
  1085   00003C                     xtoa@i:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x3B
  1089   00003C                     	ds	2
  1090   00003E                     dtoa@s:
  1091                           	callstack 0
  1092   00003E                     xtoa@c:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x3D
  1096   00003E                     	ds	1
  1097   00003F                     ___flmul@temp:
  1098                           	callstack 0
  1099   00003F                     vfpfcnvrt@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x3E
  1103   00003F                     	ds	2
  1104   000041                     ?___fladd:
  1105                           	callstack 0
  1106   000041                     vfpfcnvrt@fmt:
  1107                           	callstack 0
  1108   000041                     ___fladd@b:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x40
  1112   000041                     	ds	2
  1113   000043                     vfpfcnvrt@ap:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x42
  1117   000043                     	ds	2
  1118   000045                     ??_vfpfcnvrt:
  1119   000045                     ___fladd@a:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x44
  1123   000045                     	ds	4
  1124   000049                     ??___fladd:
  1125   000049                     vfpfcnvrt@done:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x48
  1129   000049                     	ds	2
  1130   00004B                     vfpfcnvrt@convarg:
  1131                           	callstack 0
  1132                           
  1133                           ; 8 bytes @ 0x4A
  1134   00004B                     	ds	2
  1135   00004D                     ___fladd@signs:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x4C
  1139   00004D                     	ds	1
  1140   00004E                     ___fladd@aexp:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x4D
  1144   00004E                     	ds	1
  1145   00004F                     ___fladd@bexp:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x4E
  1149   00004F                     	ds	1
  1150   000050                     ___fladd@grs:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x4F
  1154   000050                     	ds	1
  1155   000051                     ?___fltol:
  1156                           	callstack 0
  1157   000051                     ___fltol@f1:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x50
  1161   000051                     	ds	2
  1162   000053                     vfpfcnvrt@cp:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x52
  1166   000053                     	ds	2
  1167   000055                     ??___fltol:
  1168   000055                     ?_vfprintf:
  1169                           	callstack 0
  1170   000055                     vfprintf@fp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x54
  1174   000055                     	ds	2
  1175   000057                     vfprintf@fmt:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x56
  1179   000057                     	ds	2
  1180   000059                     ___fltol@sign1:
  1181                           	callstack 0
  1182   000059                     vfprintf@ap:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x58
  1186   000059                     	ds	1
  1187   00005A                     ___fltol@exp1:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x59
  1191   00005A                     	ds	1
  1192   00005B                     PWM1_SetDutyCycle@dutyCycle:
  1193                           	callstack 0
  1194   00005B                     vfprintf@cfmt:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x5A
  1198   00005B                     	ds	2
  1199   00005D                     ??_PWM1_SetDutyCycle:
  1200   00005D                     ?_printf:
  1201                           	callstack 0
  1202   00005D                     sendData@i:
  1203                           	callstack 0
  1204   00005D                     printf@fmt:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x5C
  1208   00005D                     	ds	2
  1209   00005F                     
  1210                           ; 1 bytes @ 0x5E
  1211 ;;
  1212 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1213 ;;
  1214 ;; *************** function _main *****************
  1215 ;; Defined at:
  1216 ;;		line 203 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  duty_cycle      2    0        int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels required when called: 14
  1236 ;; This function calls:
  1237 ;;		_AD_capture_BattVoltage
  1238 ;;		_InitSTLED316
  1239 ;;		_InitTimer1
  1240 ;;		_MotorPosition_Init
  1241 ;;		_PWM1_Init
  1242 ;;		_WriteSTLED316SData
  1243 ;;		_handle_uart_communication
  1244 ;;		_i2c_Init
  1245 ;;		_init
  1246 ;;		_initMotor
  1247 ;;		_initUSART
  1248 ;;		_pwm_set
  1249 ;;		_read_i2c
  1250 ;;		_uart_config
  1251 ;;		_write_i2c
  1252 ;; This function is called by:
  1253 ;;		Startup code after reset
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text0
  1258   00105C                     __ptext0:
  1259                           	callstack 0
  1260   00105C                     _main:
  1261                           	callstack 17
  1262   00105C                     
  1263                           ;main.c: 204:     GIE = 0;
  1264   00105C  9EF2               	bcf	4082,7,c	;volatile
  1265   00105E                     
  1266                           ;main.c: 205:     init();
  1267   00105E  EC84  F020         	call	_init	;wreg free
  1268   001062                     
  1269                           ;main.c: 206:     InitSTLED316(0x77);
  1270   001062  0E77               	movlw	119
  1271   001064  ECFE  F01F         	call	_InitSTLED316
  1272   001068                     
  1273                           ;main.c: 207:     initMotor();
  1274   001068  EC1F  F024         	call	_initMotor	;wreg free
  1275   00106C                     
  1276                           ;main.c: 208:     i2c_Init();
  1277   00106C  EC0A  F024         	call	_i2c_Init	;wreg free
  1278   001070                     
  1279                           ;main.c: 209:     initUSART();
  1280   001070  ECD5  F021         	call	_initUSART	;wreg free
  1281   001074                     
  1282                           ;main.c: 210:     InitTimer1();
  1283   001074  ECFD  F023         	call	_InitTimer1	;wreg free
  1284   001078                     
  1285                           ;main.c: 211:     PWM1_Init(5000);
  1286   001078  0E88               	movlw	136
  1287   00107A  6E0F               	movwf	PWM1_Init@desiredFrequency^0,c
  1288   00107C  0E13               	movlw	19
  1289   00107E  6E10               	movwf	(PWM1_Init@desiredFrequency+1)^0,c
  1290   001080  0E00               	movlw	0
  1291   001082  6E11               	movwf	(PWM1_Init@desiredFrequency+2)^0,c
  1292   001084  0E00               	movlw	0
  1293   001086  6E12               	movwf	(PWM1_Init@desiredFrequency+3)^0,c
  1294   001088  EC2A  F021         	call	_PWM1_Init	;wreg free
  1295   00108C                     
  1296                           ;main.c: 212:     pwm_set(duty_cycle);
  1297   00108C  0E00               	movlw	0
  1298   00108E  6E02               	movwf	(pwm_set@duty+1)^0,c
  1299   001090  0E00               	movlw	0
  1300   001092  6E01               	movwf	pwm_set@duty^0,c
  1301   001094  EC58  F023         	call	_pwm_set	;wreg free
  1302   001098                     
  1303                           ;main.c: 217:     uart_config(1);
  1304   001098  0E00               	movlw	0
  1305   00109A  0100               	movlb	0	; () banked
  1306   00109C  6FA7               	movwf	(uart_config@uart_num+1)& (0+255),b
  1307   00109E  0E01               	movlw	1
  1308   0010A0  6FA6               	movwf	uart_config@uart_num& (0+255),b
  1309   0010A2  ECB5  F01F         	call	_uart_config	;wreg free
  1310   0010A6                     
  1311                           ;main.c: 218:     uart_config(2);
  1312   0010A6  0E00               	movlw	0
  1313   0010A8  0100               	movlb	0	; () banked
  1314   0010AA  6FA7               	movwf	(uart_config@uart_num+1)& (0+255),b
  1315   0010AC  0E02               	movlw	2
  1316   0010AE  6FA6               	movwf	uart_config@uart_num& (0+255),b
  1317   0010B0  ECB5  F01F         	call	_uart_config	;wreg free
  1318   0010B4                     
  1319                           ;main.c: 219:     INTCONbits.GIE = 1;
  1320   0010B4  8EF2               	bsf	242,7,c	;volatile
  1321   0010B6                     
  1322                           ;main.c: 223:     handle_uart_communication(Motor_Stop_Delay_Time, errorcounter);
  1323   0010B6  C087  F0CF         	movff	_Motor_Stop_Delay_Time,handle_uart_communication@Motor_Stop_Delay_Time
  1324   0010BA  C088  F0D0         	movff	_Motor_Stop_Delay_Time+1,handle_uart_communication@Motor_Stop_Delay_Time+1
  1325   0010BE  C0E9  F0D1         	movff	_errorcounter,handle_uart_communication@errorcounter	;volatile
  1326   0010C2  C0EA  F0D2         	movff	_errorcounter+1,handle_uart_communication@errorcounter+1	;volatile
  1327   0010C6  C0EB  F0D3         	movff	_errorcounter+2,handle_uart_communication@errorcounter+2	;volatile
  1328   0010CA  C0EC  F0D4         	movff	_errorcounter+3,handle_uart_communication@errorcounter+3	;volatile
  1329   0010CE  EC00  F013         	call	_handle_uart_communication	;wreg free
  1330   0010D2                     
  1331                           ;main.c: 231:     OSCCONbits.IRCF0 = 0;
  1332   0010D2  98D3               	bcf	211,4,c	;volatile
  1333   0010D4                     
  1334                           ;main.c: 232:     OSCCONbits.IRCF1 = 0;
  1335   0010D4  9AD3               	bcf	211,5,c	;volatile
  1336   0010D6                     
  1337                           ;main.c: 233:     OSCCONbits.IRCF2 = 0;
  1338   0010D6  9CD3               	bcf	211,6,c	;volatile
  1339   0010D8                     
  1340                           ;main.c: 234:     OSCCONbits.SCS0 = 0;
  1341   0010D8  90D3               	bcf	211,0,c	;volatile
  1342   0010DA                     
  1343                           ;main.c: 235:     OSCCONbits.SCS1 = 0;
  1344   0010DA  92D3               	bcf	211,1,c	;volatile
  1345   0010DC                     
  1346                           ;main.c: 239:     TRISCbits.TRISC2 = 0;
  1347   0010DC  9494               	bcf	148,2,c	;volatile
  1348   0010DE                     
  1349                           ;main.c: 243:     TRISBbits.TRISB4 = 1;
  1350   0010DE  8893               	bsf	147,4,c	;volatile
  1351   0010E0                     
  1352                           ;main.c: 246:     T2CONbits.T2OUTPS0 = 0;
  1353   0010E0  96CA               	bcf	202,3,c	;volatile
  1354   0010E2                     
  1355                           ;main.c: 247:     T2CONbits.T2OUTPS1 = 0;
  1356   0010E2  98CA               	bcf	202,4,c	;volatile
  1357   0010E4                     
  1358                           ;main.c: 248:     T2CONbits.T2OUTPS2 = 0;
  1359   0010E4  9ACA               	bcf	202,5,c	;volatile
  1360   0010E6                     
  1361                           ;main.c: 249:     T2CONbits.T2OUTPS3 = 0;
  1362   0010E6  9CCA               	bcf	202,6,c	;volatile
  1363   0010E8                     
  1364                           ;main.c: 251:     T2CONbits.T2CKPS = 0x00;
  1365   0010E8  0EFC               	movlw	-4
  1366   0010EA  16CA               	andwf	202,f,c	;volatile
  1367   0010EC                     
  1368                           ;main.c: 257:     PR2 = 4;
  1369   0010EC  0E04               	movlw	4
  1370   0010EE  6ECB               	movwf	203,c	;volatile
  1371   0010F0                     
  1372                           ;main.c: 259:     CCP1CONbits.DC1B = 0;
  1373   0010F0  0ECF               	movlw	-49
  1374   0010F2  16BB               	andwf	187,f,c	;volatile
  1375   0010F4                     
  1376                           ;main.c: 260:     CCP1CONbits.CCP1M = 0x0C;
  1377   0010F4  50BB               	movf	187,w,c	;volatile
  1378   0010F6  0BF0               	andlw	-16
  1379   0010F8  090C               	iorlw	12
  1380   0010FA  6EBB               	movwf	187,c	;volatile
  1381   0010FC                     
  1382                           ;main.c: 261:     CCPR1L = 0;
  1383   0010FC  0E00               	movlw	0
  1384   0010FE  6EBC               	movwf	188,c	;volatile
  1385   001100                     
  1386                           ;main.c: 263:     T2CONbits.TMR2ON = 1;
  1387   001100  84CA               	bsf	202,2,c	;volatile
  1388   001102                     
  1389                           ;main.c: 265:     LATCbits.LATC1 = 0;
  1390   001102  928B               	bcf	139,1,c	;volatile
  1391   001104                     
  1392                           ;main.c: 266:     LATAbits.LATA2 = 0;
  1393   001104  9489               	bcf	137,2,c	;volatile
  1394   001106                     
  1395                           ;main.c: 267:     errorcounter = 30;
  1396   001106  0E1E               	movlw	30
  1397   001108  0100               	movlb	0	; () banked
  1398   00110A  6FE9               	movwf	_errorcounter& (0+255),b	;volatile
  1399   00110C  0E00               	movlw	0
  1400   00110E  6FEA               	movwf	(_errorcounter+1)& (0+255),b	;volatile
  1401   001110  0E00               	movlw	0
  1402   001112  6FEB               	movwf	(_errorcounter+2)& (0+255),b	;volatile
  1403   001114  0E00               	movlw	0
  1404   001116  6FEC               	movwf	(_errorcounter+3)& (0+255),b	;volatile
  1405   001118                     
  1406                           ; BSR set to: 0
  1407                           ;main.c: 270:     RCONbits.IPEN = 1;
  1408   001118  8ED0               	bsf	208,7,c	;volatile
  1409   00111A                     
  1410                           ; BSR set to: 0
  1411                           ;main.c: 273:     IPR1bits.RCIP = 1;
  1412   00111A  8A9F               	bsf	159,5,c	;volatile
  1413   00111C                     
  1414                           ; BSR set to: 0
  1415                           ;main.c: 276:     INTCONbits.GIEH = 1;
  1416   00111C  8EF2               	bsf	242,7,c	;volatile
  1417   00111E                     
  1418                           ; BSR set to: 0
  1419                           ;main.c: 277:     INTCONbits.GIE = 1;
  1420   00111E  8EF2               	bsf	242,7,c	;volatile
  1421   001120                     
  1422                           ; BSR set to: 0
  1423                           ;main.c: 282:     WDTCONbits.SWDTEN = 0;
  1424   001120  90C0               	bcf	192,0,c	;volatile
  1425   001122                     
  1426                           ; BSR set to: 0
  1427                           ;main.c: 283:     LATDbits.LATD0 = 1;
  1428   001122  808C               	bsf	140,0,c	;volatile
  1429   001124                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 284:     LATDbits.LATD1 = 1;
  1432   001124  828C               	bsf	140,1,c	;volatile
  1433   001126                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 286:     WriteSTLED316SData(37, 0xFF);
  1436   001126  0E00               	movlw	0
  1437   001128  6E0A               	movwf	(WriteSTLED316SData@number+1)^0,c
  1438   00112A  0E25               	movlw	37
  1439   00112C  6E09               	movwf	WriteSTLED316SData@number^0,c
  1440   00112E  0EFF               	movlw	255
  1441   001130  6E0B               	movwf	WriteSTLED316SData@v_mode^0,c
  1442   001132  EC61  F01F         	call	_WriteSTLED316SData	;wreg free
  1443   001136                     
  1444                           ;main.c: 287:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1445   001136  0E06               	movlw	6
  1446   001138  0100               	movlb	0	; () banked
  1447   00113A  6FE4               	movwf	(??_main+1)& (0+255),b
  1448   00113C  0E13               	movlw	19
  1449   00113E  6FE3               	movwf	??_main& (0+255),b
  1450   001140  0EAD               	movlw	173
  1451   001142                     u6647:
  1452   001142  2EE8               	decfsz	wreg,f,c
  1453   001144  D7FE               	bra	u6647
  1454   001146  2FE3               	decfsz	??_main& (0+255),f,b
  1455   001148  D7FC               	bra	u6647
  1456   00114A  2FE4               	decfsz	(??_main+1)& (0+255),f,b
  1457   00114C  D7FA               	bra	u6647
  1458   00114E  D000               	nop2	
  1459   001150                     
  1460                           ;main.c: 288:     AD_capture_BattVoltage();
  1461   001150  ECE5  F022         	call	_AD_capture_BattVoltage	;wreg free
  1462   001154                     
  1463                           ;main.c: 297:     INTCONbits.GIE = 0;
  1464   001154  9EF2               	bcf	242,7,c	;volatile
  1465   001156                     
  1466                           ;main.c: 299:     INTCONbits.GIE = 1;
  1467   001156  8EF2               	bsf	242,7,c	;volatile
  1468   001158                     
  1469                           ;main.c: 301:     vibration_mode = ETemp & 0x00FF;
  1470   001158  C08B  F09D         	movff	_ETemp,_vibration_mode
  1471   00115C                     
  1472                           ;main.c: 302:     if (vibration_mode > 1) {
  1473   00115C  0E01               	movlw	1
  1474   00115E  0100               	movlb	0	; () banked
  1475   001160  659D               	cpfsgt	_vibration_mode& (0+255),b
  1476   001162  EFB5  F008         	goto	u5761
  1477   001166  EFB7  F008         	goto	u5760
  1478   00116A                     u5761:
  1479   00116A  EFBB  F008         	goto	l194
  1480   00116E                     u5760:
  1481   00116E                     
  1482                           ; BSR set to: 0
  1483                           ;main.c: 303:         vibration_mode = 1;
  1484   00116E  0E01               	movlw	1
  1485   001170  6F9D               	movwf	_vibration_mode& (0+255),b
  1486   001172                     
  1487                           ; BSR set to: 0
  1488                           ;main.c: 305:         INTCONbits.GIE = 0;
  1489   001172  9EF2               	bcf	242,7,c	;volatile
  1490   001174                     
  1491                           ; BSR set to: 0
  1492                           ;main.c: 307:         INTCONbits.GIE = 1;
  1493   001174  8EF2               	bsf	242,7,c	;volatile
  1494   001176                     l194:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;main.c: 310:     NUM = 1;
  1498   001176  0E00               	movlw	0
  1499   001178  6F82               	movwf	(_NUM+1)& (0+255),b
  1500   00117A  0E01               	movlw	1
  1501   00117C  6F81               	movwf	_NUM& (0+255),b
  1502   00117E                     
  1503                           ; BSR set to: 0
  1504                           ;main.c: 311:     WriteSTLED316SData(NUM, vibration_mode);
  1505   00117E  C081  F009         	movff	_NUM,WriteSTLED316SData@number
  1506   001182  C082  F00A         	movff	_NUM+1,WriteSTLED316SData@number+1
  1507   001186  C09D  F00B         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1508   00118A  EC61  F01F         	call	_WriteSTLED316SData	;wreg free
  1509   00118E                     
  1510                           ;main.c: 312:     NUM_REC = 1;
  1511   00118E  0E00               	movlw	0
  1512   001190  0100               	movlb	0	; () banked
  1513   001192  6F7E               	movwf	(_NUM_REC+1)& (0+255),b
  1514   001194  0E01               	movlw	1
  1515   001196  6F7D               	movwf	_NUM_REC& (0+255),b
  1516   001198                     
  1517                           ; BSR set to: 0
  1518                           ;main.c: 317:     INTCONbits.GIE = 0;
  1519   001198  9EF2               	bcf	242,7,c	;volatile
  1520                           
  1521                           ;main.c: 318:     ETemp = read_i2c(0x0020);
  1522   00119A  0E20               	movlw	32
  1523   00119C  6E0F               	movwf	read_i2c@address^0,c
  1524   00119E  0E00               	movlw	0
  1525   0011A0  6E10               	movwf	(read_i2c@address+1)^0,c
  1526   0011A2  0E00               	movlw	0
  1527   0011A4  6E11               	movwf	(read_i2c@address+2)^0,c
  1528   0011A6  0E00               	movlw	0
  1529   0011A8  6E12               	movwf	(read_i2c@address+3)^0,c
  1530   0011AA  ECF6  F020         	call	_read_i2c	;wreg free
  1531   0011AE  C00F  F08B         	movff	?_read_i2c,_ETemp
  1532   0011B2  C010  F08C         	movff	?_read_i2c+1,_ETemp+1
  1533   0011B6                     
  1534                           ;main.c: 319:     INTCONbits.GIE = 1;
  1535   0011B6  8EF2               	bsf	242,7,c	;volatile
  1536   0011B8                     
  1537                           ;main.c: 321:     Device_ID = ETemp & 0x00FF;
  1538   0011B8  0100               	movlb	0	; () banked
  1539   0011BA  518B               	movf	_ETemp& (0+255),w,b
  1540   0011BC  6F85               	movwf	_Device_ID& (0+255),b
  1541   0011BE  6B86               	clrf	(_Device_ID+1)& (0+255),b
  1542   0011C0                     
  1543                           ; BSR set to: 0
  1544                           ;main.c: 322:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
  1545   0011C0  5186               	movf	(_Device_ID+1)& (0+255),w,b
  1546   0011C2  E109               	bnz	u5770
  1547   0011C4  0E31               	movlw	49
  1548   0011C6  5D85               	subwf	_Device_ID& (0+255),w,b
  1549   0011C8  A0D8               	btfss	status,0,c
  1550   0011CA  EFE9  F008         	goto	u5771
  1551   0011CE  EFEB  F008         	goto	u5770
  1552   0011D2                     u5771:
  1553   0011D2  EFF6  F008         	goto	l6568
  1554   0011D6                     u5770:
  1555   0011D6                     
  1556                           ; BSR set to: 0
  1557   0011D6  5186               	movf	(_Device_ID+1)& (0+255),w,b
  1558   0011D8  E109               	bnz	u5780
  1559   0011DA  0E3B               	movlw	59
  1560   0011DC  5D85               	subwf	_Device_ID& (0+255),w,b
  1561   0011DE  A0D8               	btfss	status,0,c
  1562   0011E0  EFF4  F008         	goto	u5781
  1563   0011E4  EFF6  F008         	goto	u5780
  1564   0011E8                     u5781:
  1565   0011E8  EFFC  F008         	goto	l6574
  1566   0011EC                     u5780:
  1567   0011EC                     l6568:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 323:         Device_ID = 0x31;
  1571   0011EC  0E00               	movlw	0
  1572   0011EE  6F86               	movwf	(_Device_ID+1)& (0+255),b
  1573   0011F0  0E31               	movlw	49
  1574   0011F2  6F85               	movwf	_Device_ID& (0+255),b
  1575   0011F4                     
  1576                           ; BSR set to: 0
  1577                           ;main.c: 325:         INTCONbits.GIE = 0;
  1578   0011F4  9EF2               	bcf	242,7,c	;volatile
  1579   0011F6                     
  1580                           ; BSR set to: 0
  1581                           ;main.c: 327:         INTCONbits.GIE = 1;
  1582   0011F6  8EF2               	bsf	242,7,c	;volatile
  1583   0011F8                     l6574:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;main.c: 333:     INTCONbits.GIE = 0;
  1587   0011F8  9EF2               	bcf	242,7,c	;volatile
  1588   0011FA                     
  1589                           ; BSR set to: 0
  1590                           ;main.c: 334:     ETemp = read_i2c(0x0060);
  1591   0011FA  0E60               	movlw	96
  1592   0011FC  6E0F               	movwf	read_i2c@address^0,c
  1593   0011FE  0E00               	movlw	0
  1594   001200  6E10               	movwf	(read_i2c@address+1)^0,c
  1595   001202  0E00               	movlw	0
  1596   001204  6E11               	movwf	(read_i2c@address+2)^0,c
  1597   001206  0E00               	movlw	0
  1598   001208  6E12               	movwf	(read_i2c@address+3)^0,c
  1599   00120A  ECF6  F020         	call	_read_i2c	;wreg free
  1600   00120E  C00F  F08B         	movff	?_read_i2c,_ETemp
  1601   001212  C010  F08C         	movff	?_read_i2c+1,_ETemp+1
  1602   001216                     
  1603                           ;main.c: 335:     INTCONbits.GIE = 1;
  1604   001216  8EF2               	bsf	242,7,c	;volatile
  1605   001218                     
  1606                           ;main.c: 337:     pause_Time = ETemp & 0x00FF;
  1607   001218  C08B  F09A         	movff	_ETemp,_pause_Time	;volatile
  1608   00121C                     
  1609                           ;main.c: 338:     if (pause_Time < 0x30 || pause_Time > 0x35) {
  1610   00121C  0E2F               	movlw	47
  1611   00121E  0100               	movlb	0	; () banked
  1612   001220  659A               	cpfsgt	_pause_Time& (0+255),b	;volatile
  1613   001222  EF15  F009         	goto	u5791
  1614   001226  EF17  F009         	goto	u5790
  1615   00122A                     u5791:
  1616   00122A  EF1F  F009         	goto	l6586
  1617   00122E                     u5790:
  1618   00122E                     
  1619                           ; BSR set to: 0
  1620   00122E  0E35               	movlw	53
  1621   001230  659A               	cpfsgt	_pause_Time& (0+255),b	;volatile
  1622   001232  EF1D  F009         	goto	u5801
  1623   001236  EF1F  F009         	goto	u5800
  1624   00123A                     u5801:
  1625   00123A  EF4F  F009         	goto	l6606
  1626   00123E                     u5800:
  1627   00123E                     l6586:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;main.c: 339:         pause_Time = 0x30;
  1631   00123E  0E30               	movlw	48
  1632   001240  6F9A               	movwf	_pause_Time& (0+255),b	;volatile
  1633                           
  1634                           ;main.c: 340:         Motor_Pause_Time = 0;
  1635   001242  0E00               	movlw	0
  1636   001244  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1637   001246  0E00               	movlw	0
  1638   001248  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1639   00124A                     
  1640                           ; BSR set to: 0
  1641                           ;main.c: 342:         INTCONbits.GIE = 0;
  1642   00124A  9EF2               	bcf	242,7,c	;volatile
  1643   00124C                     
  1644                           ; BSR set to: 0
  1645                           ;main.c: 344:         INTCONbits.GIE = 1;
  1646   00124C  8EF2               	bsf	242,7,c	;volatile
  1647                           
  1648                           ;main.c: 345:     } else {
  1649   00124E  EF74  F009         	goto	l201
  1650   001252                     l6592:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;main.c: 349:                 Motor_Pause_Time = 0;
  1654   001252  0E00               	movlw	0
  1655   001254  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1656   001256  0E00               	movlw	0
  1657   001258  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1658                           
  1659                           ;main.c: 350:                 pause_Time = 0x30;
  1660   00125A  0E30               	movlw	48
  1661   00125C  6F9A               	movwf	_pause_Time& (0+255),b	;volatile
  1662                           
  1663                           ;main.c: 351:                 break;
  1664   00125E  EF74  F009         	goto	l201
  1665   001262                     l6594:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 354:                 Motor_Pause_Time = 1000;
  1669   001262  0E03               	movlw	3
  1670   001264  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1671   001266  0EE8               	movlw	232
  1672   001268  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1673                           
  1674                           ;main.c: 355:                 break;
  1675   00126A  EF74  F009         	goto	l201
  1676   00126E                     l6596:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 358:                 Motor_Pause_Time = 2000;
  1680   00126E  0E07               	movlw	7
  1681   001270  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1682   001272  0ED0               	movlw	208
  1683   001274  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1684                           
  1685                           ;main.c: 359:                 break;
  1686   001276  EF74  F009         	goto	l201
  1687   00127A                     l6598:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 362:                 Motor_Pause_Time = 3000;
  1691   00127A  0E0B               	movlw	11
  1692   00127C  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1693   00127E  0EB8               	movlw	184
  1694   001280  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1695                           
  1696                           ;main.c: 363:                 break;
  1697   001282  EF74  F009         	goto	l201
  1698   001286                     l6600:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 366:                 Motor_Pause_Time = 4000;
  1702   001286  0E0F               	movlw	15
  1703   001288  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1704   00128A  0EA0               	movlw	160
  1705   00128C  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1706                           
  1707                           ;main.c: 367:                 break;
  1708   00128E  EF74  F009         	goto	l201
  1709   001292                     l6602:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 370:                 Motor_Pause_Time = 5000;
  1713   001292  0E13               	movlw	19
  1714   001294  6F84               	movwf	(_Motor_Pause_Time+1)& (0+255),b
  1715   001296  0E88               	movlw	136
  1716   001298  6F83               	movwf	_Motor_Pause_Time& (0+255),b
  1717                           
  1718                           ;main.c: 371:                 break;
  1719   00129A  EF74  F009         	goto	l201
  1720   00129E                     l6606:
  1721                           
  1722                           ; BSR set to: 0
  1723   00129E  519A               	movf	_pause_Time& (0+255),w,b	;volatile
  1724   0012A0  6FE3               	movwf	??_main& (0+255),b
  1725   0012A2  6BE4               	clrf	(??_main+1)& (0+255),b
  1726                           
  1727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1728                           ; Switch size 1, requested type "simple"
  1729                           ; Number of cases is 1, Range of values is 0 to 0
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte            4     3 (average)
  1733                           ;	Chosen strategy is simple_byte
  1734   0012A4  51E4               	movf	(??_main+1)& (0+255),w,b
  1735   0012A6  0A00               	xorlw	0	; case 0
  1736   0012A8  B4D8               	btfsc	status,2,c
  1737   0012AA  EF59  F009         	goto	l7486
  1738   0012AE  EF29  F009         	goto	l6592
  1739   0012B2                     l7486:
  1740                           
  1741                           ; BSR set to: 0
  1742                           ; Switch size 1, requested type "simple"
  1743                           ; Number of cases is 6, Range of values is 48 to 53
  1744                           ; switch strategies available:
  1745                           ; Name         Instructions Cycles
  1746                           ; simple_byte           19    10 (average)
  1747                           ;	Chosen strategy is simple_byte
  1748   0012B2  51E3               	movf	??_main& (0+255),w,b
  1749   0012B4  0A30               	xorlw	48	; case 48
  1750   0012B6  B4D8               	btfsc	status,2,c
  1751   0012B8  EF29  F009         	goto	l6592
  1752   0012BC  0A01               	xorlw	1	; case 49
  1753   0012BE  B4D8               	btfsc	status,2,c
  1754   0012C0  EF31  F009         	goto	l6594
  1755   0012C4  0A03               	xorlw	3	; case 50
  1756   0012C6  B4D8               	btfsc	status,2,c
  1757   0012C8  EF37  F009         	goto	l6596
  1758   0012CC  0A01               	xorlw	1	; case 51
  1759   0012CE  B4D8               	btfsc	status,2,c
  1760   0012D0  EF3D  F009         	goto	l6598
  1761   0012D4  0A07               	xorlw	7	; case 52
  1762   0012D6  B4D8               	btfsc	status,2,c
  1763   0012D8  EF43  F009         	goto	l6600
  1764   0012DC  0A01               	xorlw	1	; case 53
  1765   0012DE  B4D8               	btfsc	status,2,c
  1766   0012E0  EF49  F009         	goto	l6602
  1767   0012E4  EF29  F009         	goto	l6592
  1768   0012E8                     l201:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;main.c: 378:     INTCONbits.GIE = 0;
  1772   0012E8  9EF2               	bcf	242,7,c	;volatile
  1773   0012EA                     
  1774                           ; BSR set to: 0
  1775                           ;main.c: 379:     ETemp = read_i2c(0x0050);
  1776   0012EA  0E50               	movlw	80
  1777   0012EC  6E0F               	movwf	read_i2c@address^0,c
  1778   0012EE  0E00               	movlw	0
  1779   0012F0  6E10               	movwf	(read_i2c@address+1)^0,c
  1780   0012F2  0E00               	movlw	0
  1781   0012F4  6E11               	movwf	(read_i2c@address+2)^0,c
  1782   0012F6  0E00               	movlw	0
  1783   0012F8  6E12               	movwf	(read_i2c@address+3)^0,c
  1784   0012FA  ECF6  F020         	call	_read_i2c	;wreg free
  1785   0012FE  C00F  F08B         	movff	?_read_i2c,_ETemp
  1786   001302  C010  F08C         	movff	?_read_i2c+1,_ETemp+1
  1787   001306                     
  1788                           ;main.c: 380:     INTCONbits.GIE = 1;
  1789   001306  8EF2               	bsf	242,7,c	;volatile
  1790   001308                     
  1791                           ;main.c: 382:     delay_motor_stop_time = ETemp & 0x00FF;
  1792   001308  C08B  F098         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1793   00130C                     
  1794                           ;main.c: 383:     if (delay_motor_stop_time > 0x96) {
  1795   00130C  0E96               	movlw	150
  1796   00130E  0100               	movlb	0	; () banked
  1797   001310  6598               	cpfsgt	_delay_motor_stop_time& (0+255),b	;volatile
  1798   001312  EF8D  F009         	goto	u5811
  1799   001316  EF8F  F009         	goto	u5810
  1800   00131A                     u5811:
  1801   00131A  EFA7  F009         	goto	l211
  1802   00131E                     u5810:
  1803   00131E                     
  1804                           ; BSR set to: 0
  1805                           ;main.c: 384:         delay_motor_stop_time = 0x00;
  1806   00131E  0E00               	movlw	0
  1807   001320  6F98               	movwf	_delay_motor_stop_time& (0+255),b	;volatile
  1808   001322                     
  1809                           ; BSR set to: 0
  1810                           ;main.c: 386:         INTCONbits.GIE = 0;
  1811   001322  9EF2               	bcf	242,7,c	;volatile
  1812   001324                     
  1813                           ; BSR set to: 0
  1814                           ;main.c: 387:         write_i2c(0x0050, delay_motor_stop_time);
  1815   001324  0E50               	movlw	80
  1816   001326  6E0F               	movwf	write_i2c@address^0,c
  1817   001328  0E00               	movlw	0
  1818   00132A  6E10               	movwf	(write_i2c@address+1)^0,c
  1819   00132C  0E00               	movlw	0
  1820   00132E  6E11               	movwf	(write_i2c@address+2)^0,c
  1821   001330  0E00               	movlw	0
  1822   001332  6E12               	movwf	(write_i2c@address+3)^0,c
  1823   001334  C098  F013         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1824   001338  6A14               	clrf	(write_i2c@data+1)^0,c
  1825   00133A  ECFA  F021         	call	_write_i2c	;wreg free
  1826   00133E                     
  1827                           ;main.c: 388:         INTCONbits.GIE = 1;
  1828   00133E  8EF2               	bsf	242,7,c	;volatile
  1829   001340                     
  1830                           ;main.c: 390:         Motor_Stop_Delay_Time = 0;
  1831   001340  0E00               	movlw	0
  1832   001342  0100               	movlb	0	; () banked
  1833   001344  6F88               	movwf	(_Motor_Stop_Delay_Time+1)& (0+255),b
  1834   001346  0E00               	movlw	0
  1835   001348  6F87               	movwf	_Motor_Stop_Delay_Time& (0+255),b
  1836                           
  1837                           ;main.c: 391:     } else {
  1838   00134A  EFAA  F009         	goto	l212
  1839   00134E                     l211:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 392:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1843   00134E  C098  F087         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1844   001352  6B88               	clrf	(_Motor_Stop_Delay_Time+1)& (0+255),b
  1845   001354                     l212:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;main.c: 398:     INTCONbits.GIE = 0;
  1849   001354  9EF2               	bcf	242,7,c	;volatile
  1850   001356                     
  1851                           ; BSR set to: 0
  1852                           ;main.c: 399:     ETemp = read_i2c(0x0040);
  1853   001356  0E40               	movlw	64
  1854   001358  6E0F               	movwf	read_i2c@address^0,c
  1855   00135A  0E00               	movlw	0
  1856   00135C  6E10               	movwf	(read_i2c@address+1)^0,c
  1857   00135E  0E00               	movlw	0
  1858   001360  6E11               	movwf	(read_i2c@address+2)^0,c
  1859   001362  0E00               	movlw	0
  1860   001364  6E12               	movwf	(read_i2c@address+3)^0,c
  1861   001366  ECF6  F020         	call	_read_i2c	;wreg free
  1862   00136A  C00F  F08B         	movff	?_read_i2c,_ETemp
  1863   00136E  C010  F08C         	movff	?_read_i2c+1,_ETemp+1
  1864   001372                     
  1865                           ;main.c: 400:     INTCONbits.GIE = 1;
  1866   001372  8EF2               	bsf	242,7,c	;volatile
  1867   001374                     
  1868                           ;main.c: 401:     vib_Time = ETemp & 0x00FF;
  1869   001374  C08B  F099         	movff	_ETemp,_vib_Time	;volatile
  1870   001378                     
  1871                           ;main.c: 402:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85)) {
  1872   001378  0E81               	movlw	129
  1873   00137A  0100               	movlb	0	; () banked
  1874   00137C  1999               	xorwf	_vib_Time& (0+255),w,b	;volatile
  1875   00137E  B4D8               	btfsc	status,2,c
  1876   001380  EFC4  F009         	goto	u5821
  1877   001384  EFC6  F009         	goto	u5820
  1878   001388                     u5821:
  1879   001388  EF14  F00A         	goto	l6660
  1880   00138C                     u5820:
  1881   00138C                     
  1882                           ; BSR set to: 0
  1883   00138C  0E82               	movlw	130
  1884   00138E  1999               	xorwf	_vib_Time& (0+255),w,b	;volatile
  1885   001390  B4D8               	btfsc	status,2,c
  1886   001392  EFCD  F009         	goto	u5831
  1887   001396  EFCF  F009         	goto	u5830
  1888   00139A                     u5831:
  1889   00139A  EF14  F00A         	goto	l6660
  1890   00139E                     u5830:
  1891   00139E                     
  1892                           ; BSR set to: 0
  1893   00139E  0E83               	movlw	131
  1894   0013A0  1999               	xorwf	_vib_Time& (0+255),w,b	;volatile
  1895   0013A2  B4D8               	btfsc	status,2,c
  1896   0013A4  EFD6  F009         	goto	u5841
  1897   0013A8  EFD8  F009         	goto	u5840
  1898   0013AC                     u5841:
  1899   0013AC  EF14  F00A         	goto	l6660
  1900   0013B0                     u5840:
  1901   0013B0                     
  1902                           ; BSR set to: 0
  1903   0013B0  0E84               	movlw	132
  1904   0013B2  1999               	xorwf	_vib_Time& (0+255),w,b	;volatile
  1905   0013B4  B4D8               	btfsc	status,2,c
  1906   0013B6  EFDF  F009         	goto	u5851
  1907   0013BA  EFE1  F009         	goto	u5850
  1908   0013BE                     u5851:
  1909   0013BE  EF14  F00A         	goto	l6660
  1910   0013C2                     u5850:
  1911   0013C2                     
  1912                           ; BSR set to: 0
  1913   0013C2  0E85               	movlw	133
  1914   0013C4  1999               	xorwf	_vib_Time& (0+255),w,b	;volatile
  1915   0013C6  B4D8               	btfsc	status,2,c
  1916   0013C8  EFE8  F009         	goto	u5861
  1917   0013CC  EFEA  F009         	goto	u5860
  1918   0013D0                     u5861:
  1919   0013D0  EF14  F00A         	goto	l6660
  1920   0013D4                     u5860:
  1921   0013D4                     
  1922                           ; BSR set to: 0
  1923                           ;main.c: 403:         Vmotor_Time = 2000;
  1924   0013D4  0E07               	movlw	7
  1925   0013D6  6FF0               	movwf	(_Vmotor_Time+1)& (0+255),b
  1926   0013D8  0ED0               	movlw	208
  1927   0013DA  6FEF               	movwf	_Vmotor_Time& (0+255),b
  1928                           
  1929                           ;main.c: 404:         vib_Time = 0x82;
  1930   0013DC  0E82               	movlw	130
  1931   0013DE  6F99               	movwf	_vib_Time& (0+255),b	;volatile
  1932   0013E0                     
  1933                           ; BSR set to: 0
  1934                           ;main.c: 406:         INTCONbits.GIE = 0;
  1935   0013E0  9EF2               	bcf	242,7,c	;volatile
  1936   0013E2                     
  1937                           ; BSR set to: 0
  1938                           ;main.c: 408:         INTCONbits.GIE = 1;
  1939   0013E2  8EF2               	bsf	242,7,c	;volatile
  1940                           
  1941                           ;main.c: 409:     } else {
  1942   0013E4  EF35  F00A         	goto	l6662
  1943   0013E8                     l6648:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;main.c: 412:                 Vmotor_Time = 1000;
  1947   0013E8  0E03               	movlw	3
  1948   0013EA  6FF0               	movwf	(_Vmotor_Time+1)& (0+255),b
  1949   0013EC  0EE8               	movlw	232
  1950   0013EE  6FEF               	movwf	_Vmotor_Time& (0+255),b
  1951                           
  1952                           ;main.c: 413:                 break;
  1953   0013F0  EF35  F00A         	goto	l6662
  1954   0013F4                     l6650:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;main.c: 416:                 Vmotor_Time = 2000;
  1958   0013F4  0E07               	movlw	7
  1959   0013F6  6FF0               	movwf	(_Vmotor_Time+1)& (0+255),b
  1960   0013F8  0ED0               	movlw	208
  1961   0013FA  6FEF               	movwf	_Vmotor_Time& (0+255),b
  1962                           
  1963                           ;main.c: 417:                 vib_Time = 0x82;
  1964   0013FC  0E82               	movlw	130
  1965   0013FE  6F99               	movwf	_vib_Time& (0+255),b	;volatile
  1966                           
  1967                           ;main.c: 418:                 break;
  1968   001400  EF35  F00A         	goto	l6662
  1969   001404                     l6652:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 420:                 Vmotor_Time = 3000;
  1973   001404  0E0B               	movlw	11
  1974   001406  6FF0               	movwf	(_Vmotor_Time+1)& (0+255),b
  1975   001408  0EB8               	movlw	184
  1976   00140A  6FEF               	movwf	_Vmotor_Time& (0+255),b
  1977                           
  1978                           ;main.c: 421:                 break;
  1979   00140C  EF35  F00A         	goto	l6662
  1980   001410                     l6654:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;main.c: 423:                 Vmotor_Time = 4000;
  1984   001410  0E0F               	movlw	15
  1985   001412  6FF0               	movwf	(_Vmotor_Time+1)& (0+255),b
  1986   001414  0EA0               	movlw	160
  1987   001416  6FEF               	movwf	_Vmotor_Time& (0+255),b
  1988                           
  1989                           ;main.c: 424:                 break;
  1990   001418  EF35  F00A         	goto	l6662
  1991   00141C                     l6656:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;main.c: 426:                 Vmotor_Time = 5000;
  1995   00141C  0E13               	movlw	19
  1996   00141E  6FF0               	movwf	(_Vmotor_Time+1)& (0+255),b
  1997   001420  0E88               	movlw	136
  1998   001422  6FEF               	movwf	_Vmotor_Time& (0+255),b
  1999                           
  2000                           ;main.c: 427:                 break;
  2001   001424  EF35  F00A         	goto	l6662
  2002   001428                     l6660:
  2003                           
  2004                           ; BSR set to: 0
  2005   001428  5199               	movf	_vib_Time& (0+255),w,b	;volatile
  2006   00142A  6FE3               	movwf	??_main& (0+255),b
  2007   00142C  6BE4               	clrf	(??_main+1)& (0+255),b
  2008                           
  2009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2010                           ; Switch size 1, requested type "simple"
  2011                           ; Number of cases is 1, Range of values is 0 to 0
  2012                           ; switch strategies available:
  2013                           ; Name         Instructions Cycles
  2014                           ; simple_byte            4     3 (average)
  2015                           ;	Chosen strategy is simple_byte
  2016   00142E  51E4               	movf	(??_main+1)& (0+255),w,b
  2017   001430  0A00               	xorlw	0	; case 0
  2018   001432  B4D8               	btfsc	status,2,c
  2019   001434  EF1E  F00A         	goto	l7488
  2020   001438  EFFA  F009         	goto	l6650
  2021   00143C                     l7488:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 5, Range of values is 129 to 133
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte           16     9 (average)
  2029                           ;	Chosen strategy is simple_byte
  2030   00143C  51E3               	movf	??_main& (0+255),w,b
  2031   00143E  0A81               	xorlw	129	; case 129
  2032   001440  B4D8               	btfsc	status,2,c
  2033   001442  EFF4  F009         	goto	l6648
  2034   001446  0A03               	xorlw	3	; case 130
  2035   001448  B4D8               	btfsc	status,2,c
  2036   00144A  EFFA  F009         	goto	l6650
  2037   00144E  0A01               	xorlw	1	; case 131
  2038   001450  B4D8               	btfsc	status,2,c
  2039   001452  EF02  F00A         	goto	l6652
  2040   001456  0A07               	xorlw	7	; case 132
  2041   001458  B4D8               	btfsc	status,2,c
  2042   00145A  EF08  F00A         	goto	l6654
  2043   00145E  0A01               	xorlw	1	; case 133
  2044   001460  B4D8               	btfsc	status,2,c
  2045   001462  EF0E  F00A         	goto	l6656
  2046   001466  EFFA  F009         	goto	l6650
  2047   00146A                     l6662:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 434:     PWM_reg = 0x3F;
  2051   00146A  0E3F               	movlw	63
  2052   00146C  6FF1               	movwf	_PWM_reg& (0+255),b
  2053   00146E                     
  2054                           ; BSR set to: 0
  2055                           ;main.c: 436:     INTCONbits.GIE = 0;
  2056   00146E  9EF2               	bcf	242,7,c	;volatile
  2057   001470                     
  2058                           ; BSR set to: 0
  2059                           ;main.c: 437:     ETemp = read_i2c(0x0030);
  2060   001470  0E30               	movlw	48
  2061   001472  6E0F               	movwf	read_i2c@address^0,c
  2062   001474  0E00               	movlw	0
  2063   001476  6E10               	movwf	(read_i2c@address+1)^0,c
  2064   001478  0E00               	movlw	0
  2065   00147A  6E11               	movwf	(read_i2c@address+2)^0,c
  2066   00147C  0E00               	movlw	0
  2067   00147E  6E12               	movwf	(read_i2c@address+3)^0,c
  2068   001480  ECF6  F020         	call	_read_i2c	;wreg free
  2069   001484  C00F  F08B         	movff	?_read_i2c,_ETemp
  2070   001488  C010  F08C         	movff	?_read_i2c+1,_ETemp+1
  2071   00148C                     
  2072                           ;main.c: 438:     INTCONbits.GIE = 1;
  2073   00148C  8EF2               	bsf	242,7,c	;volatile
  2074   00148E                     
  2075                           ;main.c: 440:     PWM_reg = ETemp & 0x00FF;
  2076   00148E  C08B  F0F1         	movff	_ETemp,_PWM_reg
  2077   001492                     
  2078                           ;main.c: 442:     if ((PWM_reg != 0x00 && PWM_reg != 0x3F && PWM_reg != 0x7F)) {
  2079   001492  0100               	movlb	0	; () banked
  2080   001494  51F1               	movf	_PWM_reg& (0+255),w,b
  2081   001496  B4D8               	btfsc	status,2,c
  2082   001498  EF50  F00A         	goto	u5871
  2083   00149C  EF52  F00A         	goto	u5870
  2084   0014A0                     u5871:
  2085   0014A0  EF68  F00A         	goto	l223
  2086   0014A4                     u5870:
  2087   0014A4                     
  2088                           ; BSR set to: 0
  2089   0014A4  0E3F               	movlw	63
  2090   0014A6  19F1               	xorwf	_PWM_reg& (0+255),w,b
  2091   0014A8  B4D8               	btfsc	status,2,c
  2092   0014AA  EF59  F00A         	goto	u5881
  2093   0014AE  EF5B  F00A         	goto	u5880
  2094   0014B2                     u5881:
  2095   0014B2  EF68  F00A         	goto	l223
  2096   0014B6                     u5880:
  2097   0014B6                     
  2098                           ; BSR set to: 0
  2099   0014B6  0E7F               	movlw	127
  2100   0014B8  19F1               	xorwf	_PWM_reg& (0+255),w,b
  2101   0014BA  B4D8               	btfsc	status,2,c
  2102   0014BC  EF62  F00A         	goto	u5891
  2103   0014C0  EF64  F00A         	goto	u5890
  2104   0014C4                     u5891:
  2105   0014C4  EF68  F00A         	goto	l223
  2106   0014C8                     u5890:
  2107   0014C8                     
  2108                           ; BSR set to: 0
  2109                           ;main.c: 443:         PWM_reg = 0x3F;
  2110   0014C8  0E3F               	movlw	63
  2111   0014CA  6FF1               	movwf	_PWM_reg& (0+255),b
  2112   0014CC                     
  2113                           ; BSR set to: 0
  2114                           ;main.c: 445:         INTCONbits.GIE = 0;
  2115   0014CC  9EF2               	bcf	242,7,c	;volatile
  2116   0014CE                     
  2117                           ; BSR set to: 0
  2118                           ;main.c: 447:         INTCONbits.GIE = 1;
  2119   0014CE  8EF2               	bsf	242,7,c	;volatile
  2120   0014D0                     l223:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 450:     errorcounter = 30;
  2124   0014D0  0E1E               	movlw	30
  2125   0014D2  6FE9               	movwf	_errorcounter& (0+255),b	;volatile
  2126   0014D4  0E00               	movlw	0
  2127   0014D6  6FEA               	movwf	(_errorcounter+1)& (0+255),b	;volatile
  2128   0014D8  0E00               	movlw	0
  2129   0014DA  6FEB               	movwf	(_errorcounter+2)& (0+255),b	;volatile
  2130   0014DC  0E00               	movlw	0
  2131   0014DE  6FEC               	movwf	(_errorcounter+3)& (0+255),b	;volatile
  2132   0014E0                     
  2133                           ; BSR set to: 0
  2134                           ;main.c: 451:     MotorPosition_Init();
  2135   0014E0  EC0E  F01B         	call	_MotorPosition_Init	;wreg free
  2136   0014E4                     
  2137                           ;main.c: 452:     LATDbits.LATD1 = 0;
  2138   0014E4  928C               	bcf	140,1,c	;volatile
  2139   0014E6                     
  2140                           ;main.c: 458:     INTCONbits.GIE = 0;
  2141   0014E6  9EF2               	bcf	242,7,c	;volatile
  2142   0014E8                     
  2143                           ;main.c: 459:     ETemp = read_i2c(0x0070);
  2144   0014E8  0E70               	movlw	112
  2145   0014EA  6E0F               	movwf	read_i2c@address^0,c
  2146   0014EC  0E00               	movlw	0
  2147   0014EE  6E10               	movwf	(read_i2c@address+1)^0,c
  2148   0014F0  0E00               	movlw	0
  2149   0014F2  6E11               	movwf	(read_i2c@address+2)^0,c
  2150   0014F4  0E00               	movlw	0
  2151   0014F6  6E12               	movwf	(read_i2c@address+3)^0,c
  2152   0014F8  ECF6  F020         	call	_read_i2c	;wreg free
  2153   0014FC  C00F  F08B         	movff	?_read_i2c,_ETemp
  2154   001500  C010  F08C         	movff	?_read_i2c+1,_ETemp+1
  2155   001504                     
  2156                           ;main.c: 461:     INTCONbits.GIE = 1;
  2157   001504  8EF2               	bsf	242,7,c	;volatile
  2158                           
  2159                           ;main.c: 463:     dutyCycle_reg = ETemp & 0xFF;
  2160   001506  0100               	movlb	0	; () banked
  2161   001508  518B               	movf	_ETemp& (0+255),w,b
  2162   00150A  6F75               	movwf	_dutyCycle_reg& (0+255),b
  2163   00150C  6B76               	clrf	(_dutyCycle_reg+1)& (0+255),b
  2164   00150E                     
  2165                           ; BSR set to: 0
  2166                           ;main.c: 465:     if(dutyCycle_reg != 0x00 && dutyCycle_reg != 0x01 && dutyCycle_reg != 
      +                          0x02 && dutyCycle_reg != 0x03 && dutyCycle_reg != 0x04)
  2167   00150E  5175               	movf	_dutyCycle_reg& (0+255),w,b
  2168   001510  1176               	iorwf	(_dutyCycle_reg+1)& (0+255),w,b
  2169   001512  B4D8               	btfsc	status,2,c
  2170   001514  EF8E  F00A         	goto	u5901
  2171   001518  EF90  F00A         	goto	u5900
  2172   00151C                     u5901:
  2173   00151C  EFD7  F00A         	goto	l6726
  2174   001520                     u5900:
  2175   001520                     
  2176                           ; BSR set to: 0
  2177   001520  0575               	decf	_dutyCycle_reg& (0+255),w,b
  2178   001522  1176               	iorwf	(_dutyCycle_reg+1)& (0+255),w,b
  2179   001524  B4D8               	btfsc	status,2,c
  2180   001526  EF97  F00A         	goto	u5911
  2181   00152A  EF99  F00A         	goto	u5910
  2182   00152E                     u5911:
  2183   00152E  EFD7  F00A         	goto	l6726
  2184   001532                     u5910:
  2185   001532                     
  2186                           ; BSR set to: 0
  2187   001532  0E02               	movlw	2
  2188   001534  1975               	xorwf	_dutyCycle_reg& (0+255),w,b
  2189   001536  1176               	iorwf	(_dutyCycle_reg+1)& (0+255),w,b
  2190   001538  B4D8               	btfsc	status,2,c
  2191   00153A  EFA1  F00A         	goto	u5921
  2192   00153E  EFA3  F00A         	goto	u5920
  2193   001542                     u5921:
  2194   001542  EFD7  F00A         	goto	l6726
  2195   001546                     u5920:
  2196   001546                     
  2197                           ; BSR set to: 0
  2198   001546  0E03               	movlw	3
  2199   001548  1975               	xorwf	_dutyCycle_reg& (0+255),w,b
  2200   00154A  1176               	iorwf	(_dutyCycle_reg+1)& (0+255),w,b
  2201   00154C  B4D8               	btfsc	status,2,c
  2202   00154E  EFAB  F00A         	goto	u5931
  2203   001552  EFAD  F00A         	goto	u5930
  2204   001556                     u5931:
  2205   001556  EFD7  F00A         	goto	l6726
  2206   00155A                     u5930:
  2207   00155A                     
  2208                           ; BSR set to: 0
  2209   00155A  0E04               	movlw	4
  2210   00155C  1975               	xorwf	_dutyCycle_reg& (0+255),w,b
  2211   00155E  1176               	iorwf	(_dutyCycle_reg+1)& (0+255),w,b
  2212   001560  B4D8               	btfsc	status,2,c
  2213   001562  EFB5  F00A         	goto	u5941
  2214   001566  EFB7  F00A         	goto	u5940
  2215   00156A                     u5941:
  2216   00156A  EFD7  F00A         	goto	l6726
  2217   00156E                     u5940:
  2218   00156E                     
  2219                           ; BSR set to: 0
  2220                           ;main.c: 466:     {;main.c: 467:         dutyCycle_reg = 0x00;
  2221   00156E  0E00               	movlw	0
  2222   001570  6F76               	movwf	(_dutyCycle_reg+1)& (0+255),b
  2223   001572  0E00               	movlw	0
  2224   001574  6F75               	movwf	_dutyCycle_reg& (0+255),b
  2225   001576                     
  2226                           ; BSR set to: 0
  2227                           ;main.c: 468:         INTCONbits.GIE = 0;
  2228   001576  9EF2               	bcf	242,7,c	;volatile
  2229   001578                     
  2230                           ; BSR set to: 0
  2231                           ;main.c: 469:         write_i2c(0x0070, dutyCycle_reg);
  2232   001578  0E70               	movlw	112
  2233   00157A  6E0F               	movwf	write_i2c@address^0,c
  2234   00157C  0E00               	movlw	0
  2235   00157E  6E10               	movwf	(write_i2c@address+1)^0,c
  2236   001580  0E00               	movlw	0
  2237   001582  6E11               	movwf	(write_i2c@address+2)^0,c
  2238   001584  0E00               	movlw	0
  2239   001586  6E12               	movwf	(write_i2c@address+3)^0,c
  2240   001588  C075  F013         	movff	_dutyCycle_reg,write_i2c@data
  2241   00158C  C076  F014         	movff	_dutyCycle_reg+1,write_i2c@data+1
  2242   001590  ECFA  F021         	call	_write_i2c	;wreg free
  2243   001594                     
  2244                           ;main.c: 470:         INTCONbits.GIE = 1;
  2245   001594  8EF2               	bsf	242,7,c	;volatile
  2246                           
  2247                           ;main.c: 471:     }
  2248   001596  EFF9  F00A         	goto	l234
  2249   00159A                     l6712:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 476:           break;
  2253   00159A  EFF9  F00A         	goto	l234
  2254   00159E                     l6714:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;main.c: 479:           break;
  2258   00159E  EFF9  F00A         	goto	l234
  2259   0015A2                     l6716:
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;main.c: 483:           break;
  2263   0015A2  EFF9  F00A         	goto	l234
  2264   0015A6                     l6718:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;main.c: 486:           break;
  2268   0015A6  EFF9  F00A         	goto	l234
  2269   0015AA                     l6720:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 489:           break;
  2273   0015AA  EFF9  F00A         	goto	l234
  2274   0015AE                     l6726:
  2275                           
  2276                           ; BSR set to: 0
  2277   0015AE  C075  F0E3         	movff	_dutyCycle_reg,??_main
  2278   0015B2  C076  F0E4         	movff	_dutyCycle_reg+1,??_main+1
  2279                           
  2280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2281                           ; Switch size 1, requested type "simple"
  2282                           ; Number of cases is 1, Range of values is 0 to 0
  2283                           ; switch strategies available:
  2284                           ; Name         Instructions Cycles
  2285                           ; simple_byte            4     3 (average)
  2286                           ;	Chosen strategy is simple_byte
  2287   0015B6  51E4               	movf	(??_main+1)& (0+255),w,b
  2288   0015B8  0A00               	xorlw	0	; case 0
  2289   0015BA  B4D8               	btfsc	status,2,c
  2290   0015BC  EFE2  F00A         	goto	l7490
  2291   0015C0  EFCD  F00A         	goto	l6712
  2292   0015C4                     l7490:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ; Switch size 1, requested type "simple"
  2296                           ; Number of cases is 5, Range of values is 0 to 4
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte           16     9 (average)
  2300                           ;	Chosen strategy is simple_byte
  2301   0015C4  51E3               	movf	??_main& (0+255),w,b
  2302   0015C6  0A00               	xorlw	0	; case 0
  2303   0015C8  B4D8               	btfsc	status,2,c
  2304   0015CA  EFCD  F00A         	goto	l6712
  2305   0015CE  0A01               	xorlw	1	; case 1
  2306   0015D0  B4D8               	btfsc	status,2,c
  2307   0015D2  EFCF  F00A         	goto	l6714
  2308   0015D6  0A03               	xorlw	3	; case 2
  2309   0015D8  B4D8               	btfsc	status,2,c
  2310   0015DA  EFD1  F00A         	goto	l6716
  2311   0015DE  0A01               	xorlw	1	; case 3
  2312   0015E0  B4D8               	btfsc	status,2,c
  2313   0015E2  EFD3  F00A         	goto	l6718
  2314   0015E6  0A07               	xorlw	7	; case 4
  2315   0015E8  B4D8               	btfsc	status,2,c
  2316   0015EA  EFD5  F00A         	goto	l6720
  2317   0015EE  EFCD  F00A         	goto	l6712
  2318   0015F2                     l234:
  2319   0015F2  EF57  F000         	goto	start
  2320   0015F6                     __end_of_main:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _uart_config *****************
  2324 ;; Defined at:
  2325 ;;		line 371 in file "usart.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  uart_num        2    2[BANK0 ] unsigned int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        2 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 10
  2346 ;; This function calls:
  2347 ;;		_printf
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text1
  2354   003F6A                     __ptext1:
  2355                           	callstack 0
  2356   003F6A                     _uart_config:
  2357                           	callstack 20
  2358   003F6A                     
  2359                           ;usart.c: 372:     if (uart_num == 1) {
  2360   003F6A  0100               	movlb	0	; () banked
  2361   003F6C  05A6               	decf	uart_config@uart_num& (0+255),w,b
  2362   003F6E  11A7               	iorwf	(uart_config@uart_num+1)& (0+255),w,b
  2363   003F70  A4D8               	btfss	status,2,c
  2364   003F72  EFBD  F01F         	goto	u5441
  2365   003F76  EFBF  F01F         	goto	u5440
  2366   003F7A                     u5441:
  2367   003F7A  EFD6  F01F         	goto	l6166
  2368   003F7E                     u5440:
  2369   003F7E                     
  2370                           ; BSR set to: 0
  2371                           ;usart.c: 376:         PIE1bits.RC1IE = 1;
  2372   003F7E  8A9D               	bsf	157,5,c	;volatile
  2373                           
  2374                           ;usart.c: 377:         PIE1bits.TX1IE = 1;
  2375   003F80  889D               	bsf	157,4,c	;volatile
  2376                           
  2377                           ;usart.c: 379:         TRISCbits.TRISC7 = 1;
  2378   003F82  8E94               	bsf	148,7,c	;volatile
  2379                           
  2380                           ;usart.c: 380:         TRISCbits.TRISC6 = 0;
  2381   003F84  9C94               	bcf	148,6,c	;volatile
  2382   003F86                     
  2383                           ; BSR set to: 0
  2384                           ;usart.c: 382:         SPBRG1 = ((8000000/16/19200) - 1);
  2385   003F86  0E19               	movlw	25
  2386   003F88  6EB0               	movwf	176,c	;volatile
  2387   003F8A                     
  2388                           ; BSR set to: 0
  2389                           ;usart.c: 385:         TXSTA1bits.TX9 = 0;
  2390   003F8A  9CAD               	bcf	173,6,c	;volatile
  2391   003F8C                     
  2392                           ; BSR set to: 0
  2393                           ;usart.c: 386:         TXSTA1bits.TXEN = 1;
  2394   003F8C  8AAD               	bsf	173,5,c	;volatile
  2395   003F8E                     
  2396                           ; BSR set to: 0
  2397                           ;usart.c: 387:         TXSTA1bits.SYNC = 0;
  2398   003F8E  98AD               	bcf	173,4,c	;volatile
  2399   003F90                     
  2400                           ; BSR set to: 0
  2401                           ;usart.c: 388:         TXSTA1bits.SENDB = 0;
  2402   003F90  96AD               	bcf	173,3,c	;volatile
  2403   003F92                     
  2404                           ; BSR set to: 0
  2405                           ;usart.c: 389:         TXSTA1bits.BRGH = 1;
  2406   003F92  84AD               	bsf	173,2,c	;volatile
  2407   003F94                     
  2408                           ; BSR set to: 0
  2409                           ;usart.c: 390:         TXSTA1bits.TRMT = 0;
  2410   003F94  92AD               	bcf	173,1,c	;volatile
  2411   003F96                     
  2412                           ; BSR set to: 0
  2413                           ;usart.c: 391:         TXSTA1bits.TX9D = 0;
  2414   003F96  90AD               	bcf	173,0,c	;volatile
  2415   003F98                     
  2416                           ; BSR set to: 0
  2417                           ;usart.c: 394:         RCSTA1bits.SPEN = 1;
  2418   003F98  8EAC               	bsf	172,7,c	;volatile
  2419   003F9A                     
  2420                           ; BSR set to: 0
  2421                           ;usart.c: 395:         RCSTA1bits.RX9 = 0;
  2422   003F9A  9CAC               	bcf	172,6,c	;volatile
  2423   003F9C                     
  2424                           ; BSR set to: 0
  2425                           ;usart.c: 396:         RCSTA1bits.SREN = 0;
  2426   003F9C  9AAC               	bcf	172,5,c	;volatile
  2427   003F9E                     
  2428                           ; BSR set to: 0
  2429                           ;usart.c: 397:         RCSTA1bits.CREN = 1;
  2430   003F9E  88AC               	bsf	172,4,c	;volatile
  2431   003FA0                     
  2432                           ; BSR set to: 0
  2433                           ;usart.c: 398:         RCSTA1bits.ADDEN = 0;
  2434   003FA0  96AC               	bcf	172,3,c	;volatile
  2435   003FA2                     
  2436                           ; BSR set to: 0
  2437                           ;usart.c: 399:         RCSTA1bits.FERR = 0;
  2438   003FA2  94AC               	bcf	172,2,c	;volatile
  2439   003FA4                     
  2440                           ; BSR set to: 0
  2441                           ;usart.c: 400:         RCSTA1bits.FERR = 0;
  2442   003FA4  94AC               	bcf	172,2,c	;volatile
  2443   003FA6                     
  2444                           ; BSR set to: 0
  2445                           ;usart.c: 401:         RCSTA1bits.RX9D = 0;
  2446   003FA6  90AC               	bcf	172,0,c	;volatile
  2447                           
  2448                           ;usart.c: 404:     } else if (uart_num == 2) {
  2449   003FA8  EFFD  F01F         	goto	l734
  2450   003FAC                     l6166:
  2451                           
  2452                           ; BSR set to: 0
  2453   003FAC  0E02               	movlw	2
  2454   003FAE  19A6               	xorwf	uart_config@uart_num& (0+255),w,b
  2455   003FB0  11A7               	iorwf	(uart_config@uart_num+1)& (0+255),w,b
  2456   003FB2  A4D8               	btfss	status,2,c
  2457   003FB4  EFDE  F01F         	goto	u5451
  2458   003FB8  EFE0  F01F         	goto	u5450
  2459   003FBC                     u5451:
  2460   003FBC  EFF7  F01F         	goto	l6202
  2461   003FC0                     u5450:
  2462   003FC0                     
  2463                           ; BSR set to: 0
  2464                           ;usart.c: 408:         PIE3bits.RC2IE = 1;
  2465   003FC0  8AA3               	bsf	163,5,c	;volatile
  2466                           
  2467                           ;usart.c: 409:         PIE3bits.TX2IE = 1;
  2468   003FC2  88A3               	bsf	163,4,c	;volatile
  2469                           
  2470                           ;usart.c: 411:         TRISGbits.TRISG2 = 1;
  2471   003FC4  8498               	bsf	152,2,c	;volatile
  2472                           
  2473                           ;usart.c: 412:         TRISGbits.TRISG1 = 0;
  2474   003FC6  9298               	bcf	152,1,c	;volatile
  2475   003FC8                     
  2476                           ; BSR set to: 0
  2477                           ;usart.c: 414:         SPBRG2 = ((8000000/16/19200) - 1);
  2478   003FC8  0E19               	movlw	25
  2479   003FCA  6EAB               	movwf	171,c	;volatile
  2480   003FCC                     
  2481                           ; BSR set to: 0
  2482                           ;usart.c: 417:         TXSTA2bits.TX9 = 0;
  2483   003FCC  9CA8               	bcf	168,6,c	;volatile
  2484   003FCE                     
  2485                           ; BSR set to: 0
  2486                           ;usart.c: 418:         TXSTA2bits.TXEN = 1;
  2487   003FCE  8AA8               	bsf	168,5,c	;volatile
  2488   003FD0                     
  2489                           ; BSR set to: 0
  2490                           ;usart.c: 419:         TXSTA2bits.SYNC = 0;
  2491   003FD0  98A8               	bcf	168,4,c	;volatile
  2492   003FD2                     
  2493                           ; BSR set to: 0
  2494                           ;usart.c: 420:         TXSTA2bits.SENDB = 0;
  2495   003FD2  96A8               	bcf	168,3,c	;volatile
  2496   003FD4                     
  2497                           ; BSR set to: 0
  2498                           ;usart.c: 421:         TXSTA2bits.BRGH = 1;
  2499   003FD4  84A8               	bsf	168,2,c	;volatile
  2500   003FD6                     
  2501                           ; BSR set to: 0
  2502                           ;usart.c: 422:         TXSTA2bits.TRMT = 0;
  2503   003FD6  92A8               	bcf	168,1,c	;volatile
  2504   003FD8                     
  2505                           ; BSR set to: 0
  2506                           ;usart.c: 423:         TXSTA2bits.TX9D = 0;
  2507   003FD8  90A8               	bcf	168,0,c	;volatile
  2508   003FDA                     
  2509                           ; BSR set to: 0
  2510                           ;usart.c: 426:         RCSTA2bits.SPEN = 1;
  2511   003FDA  8E9C               	bsf	156,7,c	;volatile
  2512   003FDC                     
  2513                           ; BSR set to: 0
  2514                           ;usart.c: 427:         RCSTA2bits.RX9 = 0;
  2515   003FDC  9C9C               	bcf	156,6,c	;volatile
  2516   003FDE                     
  2517                           ; BSR set to: 0
  2518                           ;usart.c: 428:         RCSTA2bits.SREN = 0;
  2519   003FDE  9A9C               	bcf	156,5,c	;volatile
  2520   003FE0                     
  2521                           ; BSR set to: 0
  2522                           ;usart.c: 429:         RCSTA2bits.CREN = 1;
  2523   003FE0  889C               	bsf	156,4,c	;volatile
  2524   003FE2                     
  2525                           ; BSR set to: 0
  2526                           ;usart.c: 430:         RCSTA2bits.ADDEN = 0;
  2527   003FE2  969C               	bcf	156,3,c	;volatile
  2528   003FE4                     
  2529                           ; BSR set to: 0
  2530                           ;usart.c: 431:         RCSTA2bits.FERR = 0;
  2531   003FE4  949C               	bcf	156,2,c	;volatile
  2532   003FE6                     
  2533                           ; BSR set to: 0
  2534                           ;usart.c: 432:         RCSTA2bits.FERR = 0;
  2535   003FE6  949C               	bcf	156,2,c	;volatile
  2536   003FE8                     
  2537                           ; BSR set to: 0
  2538                           ;usart.c: 433:         RCSTA2bits.RX9D = 0;
  2539   003FE8  909C               	bcf	156,0,c	;volatile
  2540                           
  2541                           ;usart.c: 436:     } else {
  2542   003FEA  EFFD  F01F         	goto	l734
  2543   003FEE                     l6202:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;usart.c: 438:         printf("Error: Invalid UART number.\n");
  2547   003FEE  0E01               	movlw	low STR_11
  2548   003FF0  6E5D               	movwf	printf@fmt^0,c
  2549   003FF2  0E10               	movlw	high STR_11
  2550   003FF4  6E5E               	movwf	(printf@fmt+1)^0,c
  2551   003FF6  ECB1  F023         	call	_printf	;wreg free
  2552   003FFA                     l734:
  2553   003FFA  0012               	return		;funcret
  2554   003FFC                     __end_of_uart_config:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _printf *****************
  2558 ;; Defined at:
  2559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  fmt             2   92[COMRAM] PTR const unsigned char 
  2562 ;;		 -> STR_18(29), STR_17(29), STR_16(29), STR_15(29), 
  2563 ;;		 -> STR_14(29), STR_13(29), STR_12(29), STR_11(29), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  ap              2    0[BANK0 ] PTR void [1]
  2566 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2567 ;;  ret             2    0        int 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2   92[COMRAM] int 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        4 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 9
  2584 ;; This function calls:
  2585 ;;		_vfprintf
  2586 ;; This function is called by:
  2587 ;;		_uart_config
  2588 ;;		_uart_send
  2589 ;;		_uart_receive
  2590 ;;		_uart_receive_err
  2591 ;;		_uart_send_char_err
  2592 ;;		_uart_receive_char_err
  2593 ;;		_uart_send_string_err
  2594 ;;		_uart_receive_string_err
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text2
  2599   004762                     __ptext2:
  2600                           	callstack 0
  2601   004762                     _printf:
  2602                           	callstack 20
  2603   004762  0E5F               	movlw	low (?_printf+2)
  2604   004764  0100               	movlb	0	; () banked
  2605   004766  6FA4               	movwf	printf@ap& (0+255),b
  2606   004768  0E00               	movlw	high (?_printf+2)
  2607   00476A  6FA5               	movwf	(printf@ap+1)& (0+255),b
  2608   00476C                     
  2609                           ; BSR set to: 0
  2610   00476C  0E00               	movlw	0
  2611   00476E  6E55               	movwf	vfprintf@fp^0,c
  2612   004770  0E00               	movlw	0
  2613   004772  6E56               	movwf	(vfprintf@fp+1)^0,c
  2614   004774  C05D  F057         	movff	printf@fmt,vfprintf@fmt
  2615   004778  C05E  F058         	movff	printf@fmt+1,vfprintf@fmt+1
  2616   00477C  0EA4               	movlw	low printf@ap
  2617   00477E  6E59               	movwf	vfprintf@ap^0,c
  2618   004780  0E00               	movlw	high printf@ap
  2619   004782  6E5A               	movwf	(vfprintf@ap+1)^0,c
  2620   004784  EC85  F021         	call	_vfprintf	;wreg free
  2621   004788  0012               	return		;funcret
  2622   00478A                     __end_of_printf:
  2623                           	callstack 0
  2624                           
  2625 ;; *************** function _read_i2c *****************
  2626 ;; Defined at:
  2627 ;;		line 120 in file "i2c.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  address         4   14[COMRAM] long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  read_byte       2   18[COMRAM] int 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2   14[COMRAM] int 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;Total ram usage:        6 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 4
  2648 ;; This function calls:
  2649 ;;		___aldiv
  2650 ;;		_i2c_Address
  2651 ;;		_i2c_Read
  2652 ;;		_i2c_Restart
  2653 ;;		_i2c_Start
  2654 ;;		_i2c_Stop
  2655 ;;		_i2c_Write
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text3
  2662   0041EC                     __ptext3:
  2663                           	callstack 0
  2664   0041EC                     _read_i2c:
  2665                           	callstack 26
  2666   0041EC                     
  2667                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  2668   0041EC  EC45  F024         	call	_i2c_Start	;wreg free
  2669                           
  2670                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  2671   0041F0  0E00               	movlw	0
  2672   0041F2  6E02               	movwf	i2c_Address@mode^0,c
  2673   0041F4  0EA0               	movlw	160
  2674   0041F6  EC15  F024         	call	_i2c_Address
  2675                           
  2676                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  2677   0041FA  C00F  F001         	movff	read_i2c@address,___aldiv@dividend
  2678   0041FE  C010  F002         	movff	read_i2c@address+1,___aldiv@dividend+1
  2679   004202  C011  F003         	movff	read_i2c@address+2,___aldiv@dividend+2
  2680   004206  C012  F004         	movff	read_i2c@address+3,___aldiv@dividend+3
  2681   00420A  0E00               	movlw	0
  2682   00420C  6E05               	movwf	___aldiv@divisor^0,c
  2683   00420E  0E01               	movlw	1
  2684   004210  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2685   004212  0E00               	movlw	0
  2686   004214  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2687   004216  0E00               	movlw	0
  2688   004218  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2689   00421A  EC9B  F01B         	call	___aldiv	;wreg free
  2690   00421E  5001               	movf	?___aldiv^0,w,c
  2691   004220  EC2D  F024         	call	_i2c_Write
  2692                           
  2693                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  2694   004224  500F               	movf	read_i2c@address^0,w,c
  2695   004226  EC2D  F024         	call	_i2c_Write
  2696                           
  2697                           ;i2c.c: 128:     i2c_Restart();
  2698   00422A  EC3D  F024         	call	_i2c_Restart	;wreg free
  2699                           
  2700                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  2701   00422E  0E01               	movlw	1
  2702   004230  6E02               	movwf	i2c_Address@mode^0,c
  2703   004232  0EA0               	movlw	160
  2704   004234  EC15  F024         	call	_i2c_Address
  2705                           
  2706                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  2707   004238  0E00               	movlw	0
  2708   00423A  EC3D  F023         	call	_i2c_Read
  2709   00423E  C002  F013         	movff	?_i2c_Read,read_i2c@read_byte
  2710   004242  C003  F014         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2711                           
  2712                           ;i2c.c: 134:     i2c_Stop();
  2713   004246  EC41  F024         	call	_i2c_Stop	;wreg free
  2714   00424A                     
  2715                           ;i2c.c: 135:     return (read_byte);
  2716   00424A  C013  F00F         	movff	read_i2c@read_byte,?_read_i2c
  2717   00424E  C014  F010         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2718   004252  0012               	return		;funcret
  2719   004254                     __end_of_read_i2c:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _i2c_Restart *****************
  2723 ;; Defined at:
  2724 ;;		line 56 in file "i2c.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 3
  2745 ;; This function calls:
  2746 ;;		_i2c_Wait
  2747 ;; This function is called by:
  2748 ;;		_read_i2c
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text4
  2753   00487A                     __ptext4:
  2754                           	callstack 0
  2755   00487A                     _i2c_Restart:
  2756                           	callstack 26
  2757   00487A                     
  2758                           ;i2c.c: 57:     i2c_Wait();
  2759   00487A  ECC5  F023         	call	_i2c_Wait	;wreg free
  2760   00487E                     
  2761                           ;i2c.c: 58:     RSEN2 = 1;
  2762   00487E  826B               	bsf	3947,1,c	;volatile
  2763   004880  0012               	return		;funcret
  2764   004882                     __end_of_i2c_Restart:
  2765                           	callstack 0
  2766                           
  2767 ;; *************** function _i2c_Read *****************
  2768 ;; Defined at:
  2769 ;;		line 89 in file "i2c.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  ack             1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  ack             1    3[COMRAM] unsigned char 
  2774 ;;  i2cReadData     1    4[COMRAM] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  2    1[COMRAM] int 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;Total ram usage:        4 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 3
  2791 ;; This function calls:
  2792 ;;		_i2c_Wait
  2793 ;; This function is called by:
  2794 ;;		_read_i2c
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text5
  2799   00467A                     __ptext5:
  2800                           	callstack 0
  2801   00467A                     _i2c_Read:
  2802                           	callstack 26
  2803                           
  2804                           ;incstack = 0
  2805                           ;i2c_Read@ack stored from wreg
  2806   00467A  6E04               	movwf	i2c_Read@ack^0,c
  2807   00467C                     
  2808                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  2809   00467C  ECC5  F023         	call	_i2c_Wait	;wreg free
  2810   004680                     
  2811                           ;i2c.c: 96:     RCEN2 = 1;
  2812   004680  866B               	bsf	3947,3,c	;volatile
  2813                           
  2814                           ;i2c.c: 97:     i2c_Wait();
  2815   004682  ECC5  F023         	call	_i2c_Wait	;wreg free
  2816   004686                     
  2817                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  2818   004686  CF6F F005          	movff	3951,i2c_Read@i2cReadData	;volatile
  2819                           
  2820                           ;i2c.c: 99:     i2c_Wait();
  2821   00468A  ECC5  F023         	call	_i2c_Wait	;wreg free
  2822   00468E                     
  2823                           ;i2c.c: 100:     if (ack)
  2824   00468E  5004               	movf	i2c_Read@ack^0,w,c
  2825   004690  B4D8               	btfsc	status,2,c
  2826   004692  EF4D  F023         	goto	u5211
  2827   004696  EF4F  F023         	goto	u5210
  2828   00469A                     u5211:
  2829   00469A  EF52  F023         	goto	l528
  2830   00469E                     u5210:
  2831   00469E                     
  2832                           ;i2c.c: 101:         ACKDT2 = 0;
  2833   00469E  9A6B               	bcf	3947,5,c	;volatile
  2834   0046A0  EF53  F023         	goto	l529
  2835   0046A4                     l528:
  2836                           
  2837                           ;i2c.c: 103:         ACKDT2 = 1;
  2838   0046A4  8A6B               	bsf	3947,5,c	;volatile
  2839   0046A6                     l529:
  2840                           
  2841                           ;i2c.c: 104:     ACKEN2 = 1;
  2842   0046A6  886B               	bsf	3947,4,c	;volatile
  2843                           
  2844                           ;i2c.c: 106:     return ( i2cReadData);
  2845   0046A8  C005  F002         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2846   0046AC  6A03               	clrf	(?_i2c_Read+1)^0,c
  2847   0046AE  0012               	return		;funcret
  2848   0046B0                     __end_of_i2c_Read:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _pwm_set *****************
  2852 ;; Defined at:
  2853 ;;		line 195 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  duty            2    0[COMRAM] unsigned short 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;Total ram usage:        4 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 2
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text6
  2882   0046B0                     __ptext6:
  2883                           	callstack 0
  2884   0046B0                     _pwm_set:
  2885                           	callstack 28
  2886   0046B0                     
  2887                           ;main.c: 196:     CCP1CONbits.DC1B = (uint8_t) (duty & 0x0003);
  2888   0046B0  C001  F003         	movff	pwm_set@duty,??_pwm_set
  2889   0046B4  0E03               	movlw	3
  2890   0046B6  1603               	andwf	??_pwm_set^0,f,c
  2891   0046B8  3A03               	swapf	??_pwm_set^0,f,c
  2892   0046BA  50BB               	movf	187,w,c	;volatile
  2893   0046BC  1803               	xorwf	??_pwm_set^0,w,c
  2894   0046BE  0BCF               	andlw	-49
  2895   0046C0  1803               	xorwf	??_pwm_set^0,w,c
  2896   0046C2  6EBB               	movwf	187,c	;volatile
  2897                           
  2898                           ;main.c: 197:     CCPR1L = (uint8_t) (duty >> 2);
  2899   0046C4  C001  F003         	movff	pwm_set@duty,??_pwm_set
  2900   0046C8  C002  F004         	movff	pwm_set@duty+1,??_pwm_set+1
  2901   0046CC  90D8               	bcf	status,0,c
  2902   0046CE  3204               	rrcf	(??_pwm_set+1)^0,f,c
  2903   0046D0  3203               	rrcf	??_pwm_set^0,f,c
  2904   0046D2  90D8               	bcf	status,0,c
  2905   0046D4  3204               	rrcf	(??_pwm_set+1)^0,f,c
  2906   0046D6  3203               	rrcf	??_pwm_set^0,f,c
  2907   0046D8  5003               	movf	??_pwm_set^0,w,c
  2908   0046DA  6EBC               	movwf	188,c	;volatile
  2909   0046DC  0012               	return		;funcret
  2910   0046DE                     __end_of_pwm_set:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function _initUSART *****************
  2914 ;; Defined at:
  2915 ;;		line 34 in file "usart.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used: 1
  2935 ;; Hardware stack levels required when called: 2
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text7
  2944   0043AA                     __ptext7:
  2945                           	callstack 0
  2946   0043AA                     _initUSART:
  2947                           	callstack 28
  2948   0043AA                     
  2949                           ;usart.c: 36:     TRISCbits.TRISC6 = 0;
  2950   0043AA  9C94               	bcf	148,6,c	;volatile
  2951                           
  2952                           ;usart.c: 37:     TRISCbits.TRISC7 = 1;
  2953   0043AC  8E94               	bsf	148,7,c	;volatile
  2954                           
  2955                           ;usart.c: 39:     TXSTA1bits.SYNC = 0;
  2956   0043AE  98AD               	bcf	173,4,c	;volatile
  2957                           
  2958                           ;usart.c: 40:     TXSTA1bits.TX9 = 0;
  2959   0043B0  9CAD               	bcf	173,6,c	;volatile
  2960                           
  2961                           ;usart.c: 41:     TXSTA1bits.TXEN = 1;
  2962   0043B2  8AAD               	bsf	173,5,c	;volatile
  2963                           
  2964                           ;usart.c: 42:     RCSTA1bits.RX9 = 0;
  2965   0043B4  9CAC               	bcf	172,6,c	;volatile
  2966                           
  2967                           ;usart.c: 43:     RCSTA1bits.CREN = 1;
  2968   0043B6  88AC               	bsf	172,4,c	;volatile
  2969                           
  2970                           ;usart.c: 44:     TXSTA1bits.CSRC = 0;
  2971   0043B8  9EAD               	bcf	173,7,c	;volatile
  2972                           
  2973                           ;usart.c: 45:     RCSTA1bits.ADDEN = 1;
  2974   0043BA  86AC               	bsf	172,3,c	;volatile
  2975                           
  2976                           ;usart.c: 46:     RCSTA1bits.SPEN = 1;
  2977   0043BC  8EAC               	bsf	172,7,c	;volatile
  2978                           
  2979                           ;usart.c: 49:     TRISGbits.TRISG1 = 0;
  2980   0043BE  9298               	bcf	152,1,c	;volatile
  2981                           
  2982                           ;usart.c: 50:     TRISGbits.TRISG2 = 1;
  2983   0043C0  8498               	bsf	152,2,c	;volatile
  2984                           
  2985                           ;usart.c: 51:     TXSTA2bits.SYNC = 0;
  2986   0043C2  98A8               	bcf	168,4,c	;volatile
  2987                           
  2988                           ;usart.c: 52:     TXSTA2bits.TX9 = 0;
  2989   0043C4  9CA8               	bcf	168,6,c	;volatile
  2990                           
  2991                           ;usart.c: 53:     TXSTA2bits.TXEN = 1;
  2992   0043C6  8AA8               	bsf	168,5,c	;volatile
  2993                           
  2994                           ;usart.c: 54:     RCSTA2bits.RX9 = 0;
  2995   0043C8  9C9C               	bcf	156,6,c	;volatile
  2996                           
  2997                           ;usart.c: 55:     RCSTA2bits.CREN = 1;
  2998   0043CA  889C               	bsf	156,4,c	;volatile
  2999                           
  3000                           ;usart.c: 56:     TXSTA2bits.CSRC = 0;
  3001   0043CC  9EA8               	bcf	168,7,c	;volatile
  3002                           
  3003                           ;usart.c: 57:     RCSTA2bits.ADDEN = 1;
  3004   0043CE  869C               	bsf	156,3,c	;volatile
  3005                           
  3006                           ;usart.c: 58:     RCSTA2bits.SPEN = 1;
  3007   0043D0  8E9C               	bsf	156,7,c	;volatile
  3008                           
  3009                           ;usart.c: 62:     BAUDCON1bits.BRG16 = 0;
  3010   0043D2  967E               	bcf	126,3,c	;volatile
  3011                           
  3012                           ;usart.c: 63:     TXSTA1bits.BRGH = 1;
  3013   0043D4  84AD               	bsf	173,2,c	;volatile
  3014                           
  3015                           ;usart.c: 64:     PIE1bits.RC1IE = 1;
  3016   0043D6  8A9D               	bsf	157,5,c	;volatile
  3017                           
  3018                           ;usart.c: 65:     PIE1bits.TX1IE = 0;
  3019   0043D8  989D               	bcf	157,4,c	;volatile
  3020                           
  3021                           ;usart.c: 67:     BAUDCON2bits.BRG16 = 0;
  3022   0043DA  967C               	bcf	124,3,c	;volatile
  3023                           
  3024                           ;usart.c: 68:     TXSTA2bits.BRGH = 1;
  3025   0043DC  84A8               	bsf	168,2,c	;volatile
  3026                           
  3027                           ;usart.c: 69:     PIE3bits.RC2IE = 1;
  3028   0043DE  8AA3               	bsf	163,5,c	;volatile
  3029                           
  3030                           ;usart.c: 70:     PIE3bits.TX2IE = 0;
  3031   0043E0  98A3               	bcf	163,4,c	;volatile
  3032   0043E2                     
  3033                           ;usart.c: 74:     SPBRG1 = 25;
  3034   0043E2  0E19               	movlw	25
  3035   0043E4  6EB0               	movwf	176,c	;volatile
  3036                           
  3037                           ;usart.c: 75:     SPBRGH1 = 0;
  3038   0043E6  0E00               	movlw	0
  3039   0043E8  6E7F               	movwf	127,c	;volatile
  3040                           
  3041                           ;usart.c: 77:     SPBRG2 = 25;
  3042   0043EA  0E19               	movlw	25
  3043   0043EC  6EAB               	movwf	171,c	;volatile
  3044                           
  3045                           ;usart.c: 78:     SPBRGH2 = 0;
  3046   0043EE  0E00               	movlw	0
  3047   0043F0  6E7D               	movwf	125,c	;volatile
  3048   0043F2  0012               	return		;funcret
  3049   0043F4                     __end_of_initUSART:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _initMotor *****************
  3053 ;; Defined at:
  3054 ;;		line 21 in file "MotorDriver.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 2
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text8
  3083   00483E                     __ptext8:
  3084                           	callstack 0
  3085   00483E                     _initMotor:
  3086                           	callstack 28
  3087   00483E                     
  3088                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  3089   00483E  0EC7               	movlw	199
  3090   004840  6E77               	movwf	119,c	;volatile
  3091   004842                     
  3092                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  3093   004842  9679               	bcf	121,3,c	;volatile
  3094   004844                     
  3095                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  3096   004844  8C79               	bsf	121,6,c	;volatile
  3097                           
  3098                           ;MotorDriver.c: 25:     T4CON = 0x00;
  3099   004846  0E00               	movlw	0
  3100   004848  6E76               	movwf	118,c	;volatile
  3101   00484A  0012               	return		;funcret
  3102   00484C                     __end_of_initMotor:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _init *****************
  3106 ;; Defined at:
  3107 ;;		line 18 in file "IO.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 2
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text9
  3136   004108                     __ptext9:
  3137                           	callstack 0
  3138   004108                     _init:
  3139                           	callstack 28
  3140   004108                     
  3141                           ;IO.c: 19:     TRISA = 0xFB;
  3142   004108  0EFB               	movlw	251
  3143   00410A  6E92               	movwf	146,c	;volatile
  3144   00410C                     
  3145                           ;IO.c: 20:     TRISB = 0XFF;
  3146   00410C  6893               	setf	147,c	;volatile
  3147                           
  3148                           ;IO.c: 21:     TRISC = 0X84;
  3149   00410E  0E84               	movlw	132
  3150   004110  6E94               	movwf	148,c	;volatile
  3151                           
  3152                           ;IO.c: 22:     TRISD = 0XC0;
  3153   004112  0EC0               	movlw	192
  3154   004114  6E95               	movwf	149,c	;volatile
  3155                           
  3156                           ;IO.c: 23:     TRISE = 0X00;
  3157   004116  0E00               	movlw	0
  3158   004118  6E96               	movwf	150,c	;volatile
  3159                           
  3160                           ;IO.c: 24:     TRISF = 0X00;
  3161   00411A  0E00               	movlw	0
  3162   00411C  6E97               	movwf	151,c	;volatile
  3163                           
  3164                           ;IO.c: 25:     TRISG = 0X05;
  3165   00411E  0E05               	movlw	5
  3166   004120  6E98               	movwf	152,c	;volatile
  3167   004122                     
  3168                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3169   004122  9EC2               	bcf	194,7,c	;volatile
  3170   004124                     
  3171                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3172   004124  9CC2               	bcf	194,6,c	;volatile
  3173   004126                     
  3174                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3175   004126  90C2               	bcf	194,0,c	;volatile
  3176   004128                     
  3177                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3178   004128  8EC1               	bsf	193,7,c	;volatile
  3179   00412A                     
  3180                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3181   00412A  9CC1               	bcf	193,6,c	;volatile
  3182   00412C                     
  3183                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3184   00412C  9AC1               	bcf	193,5,c	;volatile
  3185   00412E                     
  3186                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3187   00412E  88C1               	bsf	193,4,c	;volatile
  3188   004130                     
  3189                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3190   004130  96C1               	bcf	193,3,c	;volatile
  3191   004132                     
  3192                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3193   004132  84C1               	bsf	193,2,c	;volatile
  3194   004134                     
  3195                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3196   004134  92C1               	bcf	193,1,c	;volatile
  3197   004136                     
  3198                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3199   004136  90C1               	bcf	193,0,c	;volatile
  3200   004138                     
  3201                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3202   004138  88C0               	bsf	192,4,c	;volatile
  3203   00413A                     
  3204                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3205   00413A  90C1               	bcf	193,0,c	;volatile
  3206   00413C                     
  3207                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3208   00413C  82C1               	bsf	193,1,c	;volatile
  3209   00413E                     
  3210                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3211   00413E  84C1               	bsf	193,2,c	;volatile
  3212   004140                     
  3213                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3214   004140  86C1               	bsf	193,3,c	;volatile
  3215   004142                     
  3216                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3217   004142  88C1               	bsf	193,4,c	;volatile
  3218   004144                     
  3219                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3220   004144  8EC1               	bsf	193,7,c	;volatile
  3221   004146                     
  3222                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3223   004146  98C0               	bcf	192,4,c	;volatile
  3224   004148                     
  3225                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3226   004148  8EF2               	bsf	242,7,c	;volatile
  3227                           
  3228                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3229   00414A  0E03               	movlw	3
  3230   00414C  12D3               	iorwf	211,f,c	;volatile
  3231                           
  3232                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3233   00414E  0E70               	movlw	112
  3234   004150  12D3               	iorwf	211,f,c	;volatile
  3235                           
  3236                           ;IO.c: 68:     ADRES = 0;
  3237   004152  0E00               	movlw	0
  3238   004154  6EC4               	movwf	196,c	;volatile
  3239   004156  0E00               	movlw	0
  3240   004158  6EC3               	movwf	195,c	;volatile
  3241   00415A                     
  3242                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3243   00415A  94C2               	bcf	194,2,c	;volatile
  3244   00415C                     
  3245                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3246   00415C  96C2               	bcf	194,3,c	;volatile
  3247   00415E                     
  3248                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3249   00415E  98C2               	bcf	194,4,c	;volatile
  3250   004160                     
  3251                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3252   004160  9AC2               	bcf	194,5,c	;volatile
  3253   004162                     
  3254                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3255   004162  8CC1               	bsf	193,6,c	;volatile
  3256   004164                     
  3257                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3258   004164  80C2               	bsf	194,0,c	;volatile
  3259   004166                     
  3260                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3261   004166  82C2               	bsf	194,1,c	;volatile
  3262   004168                     l866:
  3263                           
  3264                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3265   004168  B2C2               	btfsc	194,1,c	;volatile
  3266   00416A  EFB9  F020         	goto	u5401
  3267   00416E  EFBB  F020         	goto	u5400
  3268   004172                     u5401:
  3269   004172  EFB4  F020         	goto	l866
  3270   004176                     u5400:
  3271   004176                     
  3272                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3273   004176  9CC1               	bcf	193,6,c	;volatile
  3274   004178  0012               	return		;funcret
  3275   00417A                     __end_of_init:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _i2c_Init *****************
  3279 ;; Defined at:
  3280 ;;		line 25 in file "i2c.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 2
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text10
  3309   004814                     __ptext10:
  3310                           	callstack 0
  3311   004814                     _i2c_Init:
  3312                           	callstack 28
  3313   004814                     
  3314                           ;i2c.c: 29:     TRISD5 = 1;
  3315   004814  8A95               	bsf	3989,5,c	;volatile
  3316                           
  3317                           ;i2c.c: 30:     TRISD6 = 1;
  3318   004816  8C95               	bsf	3989,6,c	;volatile
  3319   004818                     
  3320                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3321   004818  0E28               	movlw	40
  3322   00481A  6E6C               	movwf	108,c	;volatile
  3323                           
  3324                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3325   00481C  0E00               	movlw	0
  3326   00481E  6E6B               	movwf	107,c	;volatile
  3327                           
  3328                           ;i2c.c: 35:     SSP2ADD = 39;
  3329   004820  0E27               	movlw	39
  3330   004822  6E6E               	movwf	110,c	;volatile
  3331                           
  3332                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3333   004824  0EC0               	movlw	192
  3334   004826  6E6D               	movwf	109,c	;volatile
  3335   004828  0012               	return		;funcret
  3336   00482A                     __end_of_i2c_Init:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _handle_uart_communication *****************
  3340 ;; Defined at:
  3341 ;;		line 243 in file "usart.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  Motor_Stop_D    2   43[BANK0 ] unsigned int 
  3344 ;;  errorcounter    4   45[BANK0 ] volatile long 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  i               2   59[BANK0 ] int 
  3347 ;;  receivedByte    5   52[BANK0 ] unsigned char [5]
  3348 ;;  eot             1   58[BANK0 ] unsigned char 
  3349 ;;  command         1   57[BANK0 ] unsigned char 
  3350 ;;  data2           1   51[BANK0 ] unsigned char 
  3351 ;;  data1           1    0        unsigned char 
  3352 ;;  IR_SENSORF      2   61[BANK0 ] unsigned int 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3362 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;Total ram usage:       20 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 13
  3369 ;; This function calls:
  3370 ;;		_MotorBREAK
  3371 ;;		_MotorON
  3372 ;;		_Read_IR
  3373 ;;		_delay2_1ms
  3374 ;;		_receiveData
  3375 ;;		_sendResponse
  3376 ;;		_vibrationMotorControl
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text11
  3383   002600                     __ptext11:
  3384                           	callstack 0
  3385   002600                     _handle_uart_communication:
  3386                           	callstack 17
  3387   002600                     
  3388                           ;usart.c: 247:     LATAbits.LATA2 = 1;
  3389   002600  8489               	bsf	137,2,c	;volatile
  3390   002602  EF03  F013         	goto	l6208
  3391   002606                     l696:
  3392   002606                     l6208:
  3393   002606  0E02               	movlw	2
  3394   002608  ECAD  F021         	call	_receiveData
  3395   00260C  0100               	movlb	0	; () banked
  3396   00260E  6FD8               	movwf	handle_uart_communication@receivedBytes& (0+255),b
  3397   002610  0EA5               	movlw	165
  3398   002612  19D8               	xorwf	handle_uart_communication@receivedBytes& (0+255),w,b
  3399   002614  A4D8               	btfss	status,2,c
  3400   002616  EF0F  F013         	goto	u5461
  3401   00261A  EF11  F013         	goto	u5460
  3402   00261E                     u5461:
  3403   00261E  EF03  F013         	goto	l6208
  3404   002622                     u5460:
  3405   002622                     
  3406                           ; BSR set to: 0
  3407                           ;usart.c: 258:         for (int i = 1; i < 5; i++) {
  3408   002622  0E00               	movlw	0
  3409   002624  6FE0               	movwf	(handle_uart_communication@i+1)& (0+255),b
  3410   002626  0E01               	movlw	1
  3411   002628  6FDF               	movwf	handle_uart_communication@i& (0+255),b
  3412   00262A                     l6216:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;usart.c: 259:             receivedBytes[i] = receiveData(2);
  3416   00262A  0ED8               	movlw	low handle_uart_communication@receivedBytes
  3417   00262C  25DF               	addwf	handle_uart_communication@i& (0+255),w,b
  3418   00262E  6ED9               	movwf	fsr2l,c
  3419   002630  0E00               	movlw	high handle_uart_communication@receivedBytes
  3420   002632  21E0               	addwfc	(handle_uart_communication@i+1)& (0+255),w,b
  3421   002634  6EDA               	movwf	fsr2h,c
  3422   002636  0E02               	movlw	2
  3423   002638  ECAD  F021         	call	_receiveData
  3424   00263C  6EDF               	movwf	indf2,c
  3425   00263E                     
  3426                           ;usart.c: 260:         }
  3427   00263E  0100               	movlb	0	; () banked
  3428   002640  4BDF               	infsnz	handle_uart_communication@i& (0+255),f,b
  3429   002642  2BE0               	incf	(handle_uart_communication@i+1)& (0+255),f,b
  3430   002644                     
  3431                           ; BSR set to: 0
  3432   002644  BFE0               	btfsc	(handle_uart_communication@i+1)& (0+255),7,b
  3433   002646  EF2E  F013         	goto	u5471
  3434   00264A  51E0               	movf	(handle_uart_communication@i+1)& (0+255),w,b
  3435   00264C  E109               	bnz	u5470
  3436   00264E  0E05               	movlw	5
  3437   002650  5DDF               	subwf	handle_uart_communication@i& (0+255),w,b
  3438   002652  A0D8               	btfss	status,0,c
  3439   002654  EF2E  F013         	goto	u5471
  3440   002658  EF30  F013         	goto	u5470
  3441   00265C                     u5471:
  3442   00265C  EF15  F013         	goto	l6216
  3443   002660                     u5470:
  3444   002660                     
  3445                           ; BSR set to: 0
  3446                           ;usart.c: 265:         unsigned char command = receivedBytes[1];
  3447   002660  C0D9  F0DD         	movff	handle_uart_communication@receivedBytes+1,handle_uart_communication@command
  3448                           
  3449                           ;usart.c: 267:         unsigned char data2 = receivedBytes[3];
  3450   002664  C0DB  F0D7         	movff	handle_uart_communication@receivedBytes+3,handle_uart_communication@data2
  3451                           
  3452                           ;usart.c: 268:         unsigned char eot = receivedBytes[4];
  3453   002668  C0DC  F0DE         	movff	handle_uart_communication@receivedBytes+4,handle_uart_communication@eot
  3454   00266C                     
  3455                           ; BSR set to: 0
  3456                           ;usart.c: 270:         if (receivedBytes[0] == 0xA5 && eot == 0x5A) {
  3457   00266C  0EA5               	movlw	165
  3458   00266E  19D8               	xorwf	handle_uart_communication@receivedBytes& (0+255),w,b
  3459   002670  A4D8               	btfss	status,2,c
  3460   002672  EF3D  F013         	goto	u5481
  3461   002676  EF3F  F013         	goto	u5480
  3462   00267A                     u5481:
  3463   00267A  EF03  F013         	goto	l6208
  3464   00267E                     u5480:
  3465   00267E                     
  3466                           ; BSR set to: 0
  3467   00267E  0E5A               	movlw	90
  3468   002680  19DE               	xorwf	handle_uart_communication@eot& (0+255),w,b
  3469   002682  A4D8               	btfss	status,2,c
  3470   002684  EF46  F013         	goto	u5491
  3471   002688  EF48  F013         	goto	u5490
  3472   00268C                     u5491:
  3473   00268C  EF03  F013         	goto	l6208
  3474   002690                     u5490:
  3475   002690  EF7C  F014         	goto	l6302
  3476   002694                     l6228:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;usart.c: 274:                     sendResponse(0xA5, 0x60, 0x00, 0x00, 0x5A);
  3480   002694  0E60               	movlw	96
  3481   002696  6FC5               	movwf	sendResponse@response& (0+255),b
  3482   002698  0E00               	movlw	0
  3483   00269A  6FC6               	movwf	sendResponse@data1& (0+255),b
  3484   00269C  0E00               	movlw	0
  3485   00269E  6FC7               	movwf	sendResponse@data2& (0+255),b
  3486   0026A0  0E5A               	movlw	90
  3487   0026A2  6FC8               	movwf	sendResponse@eot& (0+255),b
  3488   0026A4  0EA5               	movlw	165
  3489   0026A6  ECA5  F022         	call	_sendResponse
  3490                           
  3491                           ;usart.c: 275:                     break;
  3492   0026AA  EF03  F013         	goto	l6208
  3493   0026AE                     l705:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;usart.c: 280:                     LATCbits.LATC1 = 1;
  3497   0026AE  828B               	bsf	139,1,c	;volatile
  3498   0026B0                     
  3499                           ; BSR set to: 0
  3500                           ;usart.c: 284:                     vibrationMotorControl(1, 0x03);
  3501   0026B0  0E00               	movlw	0
  3502   0026B2  6FA5               	movwf	(vibrationMotorControl@pwm_msg+1)& (0+255),b
  3503   0026B4  0E03               	movlw	3
  3504   0026B6  6FA4               	movwf	vibrationMotorControl@pwm_msg& (0+255),b
  3505   0026B8  0E01               	movlw	1
  3506   0026BA  EC85  F022         	call	_vibrationMotorControl
  3507   0026BE                     
  3508                           ;usart.c: 286:                     sendResponse(0xA5, 0x60, 0x1C, 0x00, 0x5A);
  3509   0026BE  0E60               	movlw	96
  3510   0026C0  0100               	movlb	0	; () banked
  3511   0026C2  6FC5               	movwf	sendResponse@response& (0+255),b
  3512   0026C4  0E1C               	movlw	28
  3513   0026C6  6FC6               	movwf	sendResponse@data1& (0+255),b
  3514   0026C8  0E00               	movlw	0
  3515   0026CA  6FC7               	movwf	sendResponse@data2& (0+255),b
  3516   0026CC  0E5A               	movlw	90
  3517   0026CE  6FC8               	movwf	sendResponse@eot& (0+255),b
  3518   0026D0  0EA5               	movlw	165
  3519   0026D2  ECA5  F022         	call	_sendResponse
  3520                           
  3521                           ;usart.c: 287:                     break;
  3522   0026D6  EF03  F013         	goto	l6208
  3523   0026DA                     l706:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;usart.c: 291:                     LATCbits.LATC1 = 0;
  3527   0026DA  928B               	bcf	139,1,c	;volatile
  3528   0026DC                     
  3529                           ; BSR set to: 0
  3530                           ;usart.c: 294:                     vibrationMotorControl(0, 0x00);
  3531   0026DC  0E00               	movlw	0
  3532   0026DE  6FA5               	movwf	(vibrationMotorControl@pwm_msg+1)& (0+255),b
  3533   0026E0  0E00               	movlw	0
  3534   0026E2  6FA4               	movwf	vibrationMotorControl@pwm_msg& (0+255),b
  3535   0026E4  0E00               	movlw	0
  3536   0026E6  EC85  F022         	call	_vibrationMotorControl
  3537   0026EA                     
  3538                           ;usart.c: 296:                     sendResponse(0xA5, 0x60, 0x2C, 0x00, 0x5A);
  3539   0026EA  0E60               	movlw	96
  3540   0026EC  0100               	movlb	0	; () banked
  3541   0026EE  6FC5               	movwf	sendResponse@response& (0+255),b
  3542   0026F0  0E2C               	movlw	44
  3543   0026F2  6FC6               	movwf	sendResponse@data1& (0+255),b
  3544   0026F4  0E00               	movlw	0
  3545   0026F6  6FC7               	movwf	sendResponse@data2& (0+255),b
  3546   0026F8  0E5A               	movlw	90
  3547   0026FA  6FC8               	movwf	sendResponse@eot& (0+255),b
  3548   0026FC  0EA5               	movlw	165
  3549   0026FE  ECA5  F022         	call	_sendResponse
  3550                           
  3551                           ;usart.c: 297:                     break;
  3552   002702  EF03  F013         	goto	l6208
  3553   002706                     l707:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;usart.c: 302:                     LATAbits.LATA2 = 1;
  3557   002706  8489               	bsf	137,2,c	;volatile
  3558   002708                     
  3559                           ; BSR set to: 0
  3560                           ;usart.c: 303:                     MotorON();
  3561   002708  EC33  F024         	call	_MotorON	;wreg free
  3562   00270C                     
  3563                           ;usart.c: 306:                     _delay((unsigned long)((150)*(8000000/4000.0)));
  3564   00270C  0E02               	movlw	2
  3565   00270E  0100               	movlb	0	; () banked
  3566   002710  6FD6               	movwf	(??_handle_uart_communication+1)& (0+255),b
  3567   002712  0E86               	movlw	134
  3568   002714  6FD5               	movwf	??_handle_uart_communication& (0+255),b
  3569   002716  0E99               	movlw	153
  3570   002718                     u6657:
  3571   002718  2EE8               	decfsz	wreg,f,c
  3572   00271A  D7FE               	bra	u6657
  3573   00271C  2FD5               	decfsz	??_handle_uart_communication& (0+255),f,b
  3574   00271E  D7FC               	bra	u6657
  3575   002720  2FD6               	decfsz	(??_handle_uart_communication+1)& (0+255),f,b
  3576   002722  D7FA               	bra	u6657
  3577   002724                     
  3578                           ;usart.c: 307:                     errorcounter = 30;
  3579   002724  0E1E               	movlw	30
  3580   002726  0100               	movlb	0	; () banked
  3581   002728  6FD1               	movwf	handle_uart_communication@errorcounter& (0+255),b	;volatile
  3582   00272A  0E00               	movlw	0
  3583   00272C  6FD2               	movwf	(handle_uart_communication@errorcounter+1)& (0+255),b	;volatile
  3584   00272E  0E00               	movlw	0
  3585   002730  6FD3               	movwf	(handle_uart_communication@errorcounter+2)& (0+255),b	;volatile
  3586   002732  0E00               	movlw	0
  3587   002734  6FD4               	movwf	(handle_uart_communication@errorcounter+3)& (0+255),b	;volatile
  3588   002736                     l6244:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;usart.c: 309:                         IR_SENSORF = Read_IR();
  3592   002736  ECEB  F023         	call	_Read_IR	;wreg free
  3593   00273A  C001  F0E1         	movff	?_Read_IR,handle_uart_communication@IR_SENSORF
  3594   00273E  C002  F0E2         	movff	?_Read_IR+1,handle_uart_communication@IR_SENSORF+1
  3595   002742                     
  3596                           ;usart.c: 310:                         if (errorcounter == 0) {
  3597   002742  0100               	movlb	0	; () banked
  3598   002744  51D1               	movf	handle_uart_communication@errorcounter& (0+255),w,b	;volatile
  3599   002746  11D2               	iorwf	(handle_uart_communication@errorcounter+1)& (0+255),w,b	;volatile
  3600   002748  11D3               	iorwf	(handle_uart_communication@errorcounter+2)& (0+255),w,b	;volatile
  3601   00274A  11D4               	iorwf	(handle_uart_communication@errorcounter+3)& (0+255),w,b	;volatile
  3602   00274C  A4D8               	btfss	status,2,c
  3603   00274E  EFAB  F013         	goto	u5501
  3604   002752  EFAD  F013         	goto	u5500
  3605   002756                     u5501:
  3606   002756  EFAF  F013         	goto	l6250
  3607   00275A                     u5500:
  3608   00275A                     
  3609                           ; BSR set to: 0
  3610                           ;usart.c: 311:                             MotorBREAK();
  3611   00275A  EC38  F024         	call	_MotorBREAK	;wreg free
  3612   00275E                     l6250:
  3613                           
  3614                           ;usart.c: 313:                     } while (IR_SENSORF != 0);
  3615   00275E  0100               	movlb	0	; () banked
  3616   002760  51E1               	movf	handle_uart_communication@IR_SENSORF& (0+255),w,b
  3617   002762  11E2               	iorwf	(handle_uart_communication@IR_SENSORF+1)& (0+255),w,b
  3618   002764  A4D8               	btfss	status,2,c
  3619   002766  EFB7  F013         	goto	u5511
  3620   00276A  EFB9  F013         	goto	u5510
  3621   00276E                     u5511:
  3622   00276E  EF9B  F013         	goto	l6244
  3623   002772                     u5510:
  3624   002772                     
  3625                           ; BSR set to: 0
  3626                           ;usart.c: 314:                      _delay((unsigned long)((30)*(8000000/4000.0)));
  3627   002772  0E4E               	movlw	78
  3628   002774  0100               	movlb	0	; () banked
  3629   002776  6FD5               	movwf	??_handle_uart_communication& (0+255),b
  3630   002778  0EEB               	movlw	235
  3631   00277A                     u6667:
  3632   00277A  2EE8               	decfsz	wreg,f,c
  3633   00277C  D7FE               	bra	u6667
  3634   00277E  2FD5               	decfsz	??_handle_uart_communication& (0+255),f,b
  3635   002780  D7FC               	bra	u6667
  3636   002782                     
  3637                           ;usart.c: 315:                     errorcounter = 30;
  3638   002782  0E1E               	movlw	30
  3639   002784  0100               	movlb	0	; () banked
  3640   002786  6FD1               	movwf	handle_uart_communication@errorcounter& (0+255),b	;volatile
  3641   002788  0E00               	movlw	0
  3642   00278A  6FD2               	movwf	(handle_uart_communication@errorcounter+1)& (0+255),b	;volatile
  3643   00278C  0E00               	movlw	0
  3644   00278E  6FD3               	movwf	(handle_uart_communication@errorcounter+2)& (0+255),b	;volatile
  3645   002790  0E00               	movlw	0
  3646   002792  6FD4               	movwf	(handle_uart_communication@errorcounter+3)& (0+255),b	;volatile
  3647   002794                     l6256:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;usart.c: 318:                         IR_SENSORF = Read_IR();
  3651   002794  ECEB  F023         	call	_Read_IR	;wreg free
  3652   002798  C001  F0E1         	movff	?_Read_IR,handle_uart_communication@IR_SENSORF
  3653   00279C  C002  F0E2         	movff	?_Read_IR+1,handle_uart_communication@IR_SENSORF+1
  3654   0027A0                     
  3655                           ;usart.c: 319:                         if (errorcounter == 0) {
  3656   0027A0  0100               	movlb	0	; () banked
  3657   0027A2  51D1               	movf	handle_uart_communication@errorcounter& (0+255),w,b	;volatile
  3658   0027A4  11D2               	iorwf	(handle_uart_communication@errorcounter+1)& (0+255),w,b	;volatile
  3659   0027A6  11D3               	iorwf	(handle_uart_communication@errorcounter+2)& (0+255),w,b	;volatile
  3660   0027A8  11D4               	iorwf	(handle_uart_communication@errorcounter+3)& (0+255),w,b	;volatile
  3661   0027AA  A4D8               	btfss	status,2,c
  3662   0027AC  EFDA  F013         	goto	u5521
  3663   0027B0  EFDC  F013         	goto	u5520
  3664   0027B4                     u5521:
  3665   0027B4  EFDE  F013         	goto	l6262
  3666   0027B8                     u5520:
  3667   0027B8                     
  3668                           ; BSR set to: 0
  3669                           ;usart.c: 320:                             MotorBREAK();
  3670   0027B8  EC38  F024         	call	_MotorBREAK	;wreg free
  3671   0027BC                     l6262:
  3672                           
  3673                           ;usart.c: 322:                     } while (IR_SENSORF != 1);
  3674   0027BC  0100               	movlb	0	; () banked
  3675   0027BE  05E1               	decf	handle_uart_communication@IR_SENSORF& (0+255),w,b
  3676   0027C0  11E2               	iorwf	(handle_uart_communication@IR_SENSORF+1)& (0+255),w,b
  3677   0027C2  A4D8               	btfss	status,2,c
  3678   0027C4  EFE6  F013         	goto	u5531
  3679   0027C8  EFE8  F013         	goto	u5530
  3680   0027CC                     u5531:
  3681   0027CC  EFCA  F013         	goto	l6256
  3682   0027D0                     u5530:
  3683   0027D0                     
  3684                           ; BSR set to: 0
  3685                           ;usart.c: 323:                     errorcounter = 30;
  3686   0027D0  0E1E               	movlw	30
  3687   0027D2  6FD1               	movwf	handle_uart_communication@errorcounter& (0+255),b	;volatile
  3688   0027D4  0E00               	movlw	0
  3689   0027D6  6FD2               	movwf	(handle_uart_communication@errorcounter+1)& (0+255),b	;volatile
  3690   0027D8  0E00               	movlw	0
  3691   0027DA  6FD3               	movwf	(handle_uart_communication@errorcounter+2)& (0+255),b	;volatile
  3692   0027DC  0E00               	movlw	0
  3693   0027DE  6FD4               	movwf	(handle_uart_communication@errorcounter+3)& (0+255),b	;volatile
  3694   0027E0                     
  3695                           ; BSR set to: 0
  3696                           ;usart.c: 324:                     delay2_1ms(Motor_Stop_Delay_Time);
  3697   0027E0  C0CF  F001         	movff	handle_uart_communication@Motor_Stop_Delay_Time,delay2_1ms@time
  3698   0027E4  C0D0  F002         	movff	handle_uart_communication@Motor_Stop_Delay_Time+1,delay2_1ms@time+1
  3699   0027E8  EC85  F023         	call	_delay2_1ms	;wreg free
  3700   0027EC                     
  3701                           ;usart.c: 326:                     MotorBREAK();
  3702   0027EC  EC38  F024         	call	_MotorBREAK	;wreg free
  3703   0027F0                     
  3704                           ;usart.c: 327:                     sendResponse(0xA5, 0x60, 0x3C, 0x00, 0x5A);
  3705   0027F0  0E60               	movlw	96
  3706   0027F2  0100               	movlb	0	; () banked
  3707   0027F4  6FC5               	movwf	sendResponse@response& (0+255),b
  3708   0027F6  0E3C               	movlw	60
  3709   0027F8  6FC6               	movwf	sendResponse@data1& (0+255),b
  3710   0027FA  0E00               	movlw	0
  3711   0027FC  6FC7               	movwf	sendResponse@data2& (0+255),b
  3712   0027FE  0E5A               	movlw	90
  3713   002800  6FC8               	movwf	sendResponse@eot& (0+255),b
  3714   002802  0EA5               	movlw	165
  3715   002804  ECA5  F022         	call	_sendResponse
  3716                           
  3717                           ;usart.c: 328:                     break;
  3718   002808  EF03  F013         	goto	l6208
  3719   00280C                     l6272:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;usart.c: 332:                     MotorBREAK();
  3723   00280C  EC38  F024         	call	_MotorBREAK	;wreg free
  3724   002810                     
  3725                           ;usart.c: 333:                     sendResponse(0xA5, 0x60, 0x3C, 0x00, 0x5A);
  3726   002810  0E60               	movlw	96
  3727   002812  0100               	movlb	0	; () banked
  3728   002814  6FC5               	movwf	sendResponse@response& (0+255),b
  3729   002816  0E3C               	movlw	60
  3730   002818  6FC6               	movwf	sendResponse@data1& (0+255),b
  3731   00281A  0E00               	movlw	0
  3732   00281C  6FC7               	movwf	sendResponse@data2& (0+255),b
  3733   00281E  0E5A               	movlw	90
  3734   002820  6FC8               	movwf	sendResponse@eot& (0+255),b
  3735   002822  0EA5               	movlw	165
  3736   002824  ECA5  F022         	call	_sendResponse
  3737                           
  3738                           ;usart.c: 334:                     break;
  3739   002828  EF03  F013         	goto	l6208
  3740   00282C                     l6276:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;usart.c: 338:                     MotorBREAK();
  3744   00282C  EC38  F024         	call	_MotorBREAK	;wreg free
  3745   002830                     
  3746                           ;usart.c: 339:                     sendResponse(0xA5, 0x60, 0x3C, 0x00, 0x5A);
  3747   002830  0E60               	movlw	96
  3748   002832  0100               	movlb	0	; () banked
  3749   002834  6FC5               	movwf	sendResponse@response& (0+255),b
  3750   002836  0E3C               	movlw	60
  3751   002838  6FC6               	movwf	sendResponse@data1& (0+255),b
  3752   00283A  0E00               	movlw	0
  3753   00283C  6FC7               	movwf	sendResponse@data2& (0+255),b
  3754   00283E  0E5A               	movlw	90
  3755   002840  6FC8               	movwf	sendResponse@eot& (0+255),b
  3756   002842  0EA5               	movlw	165
  3757   002844  ECA5  F022         	call	_sendResponse
  3758                           
  3759                           ;usart.c: 340:                     break;
  3760   002848  EF03  F013         	goto	l6208
  3761   00284C                     l6280:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;usart.c: 344:                         IR_SENSORF = Read_IR();
  3765   00284C  ECEB  F023         	call	_Read_IR	;wreg free
  3766   002850  C001  F0E1         	movff	?_Read_IR,handle_uart_communication@IR_SENSORF
  3767   002854  C002  F0E2         	movff	?_Read_IR+1,handle_uart_communication@IR_SENSORF+1
  3768   002858                     
  3769                           ;usart.c: 345:                         if (errorcounter == 0) {
  3770   002858  0100               	movlb	0	; () banked
  3771   00285A  51D1               	movf	handle_uart_communication@errorcounter& (0+255),w,b	;volatile
  3772   00285C  11D2               	iorwf	(handle_uart_communication@errorcounter+1)& (0+255),w,b	;volatile
  3773   00285E  11D3               	iorwf	(handle_uart_communication@errorcounter+2)& (0+255),w,b	;volatile
  3774   002860  11D4               	iorwf	(handle_uart_communication@errorcounter+3)& (0+255),w,b	;volatile
  3775   002862  A4D8               	btfss	status,2,c
  3776   002864  EF36  F014         	goto	u5541
  3777   002868  EF38  F014         	goto	u5540
  3778   00286C                     u5541:
  3779   00286C  EF45  F014         	goto	l6288
  3780   002870                     u5540:
  3781   002870                     
  3782                           ; BSR set to: 0
  3783                           ;usart.c: 346:                             sendResponse(0xA5, 0x60, 0xE1, 0x00, 0x5A);
  3784   002870  0E60               	movlw	96
  3785   002872  6FC5               	movwf	sendResponse@response& (0+255),b
  3786   002874  0EE1               	movlw	225
  3787   002876  6FC6               	movwf	sendResponse@data1& (0+255),b
  3788   002878  0E00               	movlw	0
  3789   00287A  6FC7               	movwf	sendResponse@data2& (0+255),b
  3790   00287C  0E5A               	movlw	90
  3791   00287E  6FC8               	movwf	sendResponse@eot& (0+255),b
  3792   002880  0EA5               	movlw	165
  3793   002882  ECA5  F022         	call	_sendResponse
  3794   002886                     
  3795                           ;usart.c: 347:                             MotorBREAK();
  3796   002886  EC38  F024         	call	_MotorBREAK	;wreg free
  3797   00288A                     l6288:
  3798                           
  3799                           ;usart.c: 349:                     } while (IR_SENSORF != 0);
  3800   00288A  0100               	movlb	0	; () banked
  3801   00288C  51E1               	movf	handle_uart_communication@IR_SENSORF& (0+255),w,b
  3802   00288E  11E2               	iorwf	(handle_uart_communication@IR_SENSORF+1)& (0+255),w,b
  3803   002890  A4D8               	btfss	status,2,c
  3804   002892  EF4D  F014         	goto	u5551
  3805   002896  EF4F  F014         	goto	u5550
  3806   00289A                     u5551:
  3807   00289A  EF26  F014         	goto	l6280
  3808   00289E                     u5550:
  3809   00289E  EF03  F013         	goto	l6208
  3810   0028A2                     l6290:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;usart.c: 354:                         IR_SENSORF = Read_IR();
  3814   0028A2  ECEB  F023         	call	_Read_IR	;wreg free
  3815   0028A6  C001  F0E1         	movff	?_Read_IR,handle_uart_communication@IR_SENSORF
  3816   0028AA  C002  F0E2         	movff	?_Read_IR+1,handle_uart_communication@IR_SENSORF+1
  3817   0028AE                     
  3818                           ;usart.c: 355:                         if (errorcounter == 0) {
  3819   0028AE  0100               	movlb	0	; () banked
  3820   0028B0  51D1               	movf	handle_uart_communication@errorcounter& (0+255),w,b	;volatile
  3821   0028B2  11D2               	iorwf	(handle_uart_communication@errorcounter+1)& (0+255),w,b	;volatile
  3822   0028B4  11D3               	iorwf	(handle_uart_communication@errorcounter+2)& (0+255),w,b	;volatile
  3823   0028B6  11D4               	iorwf	(handle_uart_communication@errorcounter+3)& (0+255),w,b	;volatile
  3824   0028B8  A4D8               	btfss	status,2,c
  3825   0028BA  EF61  F014         	goto	u5561
  3826   0028BE  EF63  F014         	goto	u5560
  3827   0028C2                     u5561:
  3828   0028C2  EF70  F014         	goto	l6298
  3829   0028C6                     u5560:
  3830   0028C6                     
  3831                           ; BSR set to: 0
  3832                           ;usart.c: 356:                             sendResponse(0xA5, 0x60, 0xE2, 0x00, 0x5A);
  3833   0028C6  0E60               	movlw	96
  3834   0028C8  6FC5               	movwf	sendResponse@response& (0+255),b
  3835   0028CA  0EE2               	movlw	226
  3836   0028CC  6FC6               	movwf	sendResponse@data1& (0+255),b
  3837   0028CE  0E00               	movlw	0
  3838   0028D0  6FC7               	movwf	sendResponse@data2& (0+255),b
  3839   0028D2  0E5A               	movlw	90
  3840   0028D4  6FC8               	movwf	sendResponse@eot& (0+255),b
  3841   0028D6  0EA5               	movlw	165
  3842   0028D8  ECA5  F022         	call	_sendResponse
  3843   0028DC                     
  3844                           ;usart.c: 357:                             MotorBREAK();
  3845   0028DC  EC38  F024         	call	_MotorBREAK	;wreg free
  3846   0028E0                     l6298:
  3847                           
  3848                           ;usart.c: 359:                     } while (IR_SENSORF != 1);
  3849   0028E0  0100               	movlb	0	; () banked
  3850   0028E2  05E1               	decf	handle_uart_communication@IR_SENSORF& (0+255),w,b
  3851   0028E4  11E2               	iorwf	(handle_uart_communication@IR_SENSORF+1)& (0+255),w,b
  3852   0028E6  A4D8               	btfss	status,2,c
  3853   0028E8  EF78  F014         	goto	u5571
  3854   0028EC  EF7A  F014         	goto	u5570
  3855   0028F0                     u5571:
  3856   0028F0  EF51  F014         	goto	l6290
  3857   0028F4                     u5570:
  3858   0028F4  EF03  F013         	goto	l6208
  3859   0028F8                     l6302:
  3860                           
  3861                           ; BSR set to: 0
  3862   0028F8  51DD               	movf	handle_uart_communication@command& (0+255),w,b
  3863   0028FA  6FD5               	movwf	??_handle_uart_communication& (0+255),b
  3864   0028FC  6BD6               	clrf	(??_handle_uart_communication+1)& (0+255),b
  3865                           
  3866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3867                           ; Switch size 1, requested type "simple"
  3868                           ; Number of cases is 1, Range of values is 0 to 0
  3869                           ; switch strategies available:
  3870                           ; Name         Instructions Cycles
  3871                           ; simple_byte            4     3 (average)
  3872                           ;	Chosen strategy is simple_byte
  3873   0028FE  51D6               	movf	(??_handle_uart_communication+1)& (0+255),w,b
  3874   002900  0A00               	xorlw	0	; case 0
  3875   002902  B4D8               	btfsc	status,2,c
  3876   002904  EF86  F014         	goto	l7492
  3877   002908  EF03  F013         	goto	l696
  3878   00290C                     l7492:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ; Switch size 1, requested type "simple"
  3882                           ; Number of cases is 8, Range of values is 6 to 226
  3883                           ; switch strategies available:
  3884                           ; Name         Instructions Cycles
  3885                           ; simple_byte           25    13 (average)
  3886                           ;	Chosen strategy is simple_byte
  3887   00290C  51D5               	movf	??_handle_uart_communication& (0+255),w,b
  3888   00290E  0A06               	xorlw	6	; case 6
  3889   002910  B4D8               	btfsc	status,2,c
  3890   002912  EF4A  F013         	goto	l6228
  3891   002916  0AC7               	xorlw	199	; case 193
  3892   002918  B4D8               	btfsc	status,2,c
  3893   00291A  EF57  F013         	goto	l705
  3894   00291E  0A03               	xorlw	3	; case 194
  3895   002920  B4D8               	btfsc	status,2,c
  3896   002922  EF6D  F013         	goto	l706
  3897   002926  0A01               	xorlw	1	; case 195
  3898   002928  B4D8               	btfsc	status,2,c
  3899   00292A  EF83  F013         	goto	l707
  3900   00292E  0A07               	xorlw	7	; case 196
  3901   002930  B4D8               	btfsc	status,2,c
  3902   002932  EF06  F014         	goto	l6272
  3903   002936  0A01               	xorlw	1	; case 197
  3904   002938  B4D8               	btfsc	status,2,c
  3905   00293A  EF16  F014         	goto	l6276
  3906   00293E  0A24               	xorlw	36	; case 225
  3907   002940  B4D8               	btfsc	status,2,c
  3908   002942  EF26  F014         	goto	l6280
  3909   002946  0A03               	xorlw	3	; case 226
  3910   002948  B4D8               	btfsc	status,2,c
  3911   00294A  EF51  F014         	goto	l6290
  3912   00294E  EF03  F013         	goto	l696
  3913   002952  0012               	return		;funcret
  3914   002954                     __end_of_handle_uart_communication:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _vibrationMotorControl *****************
  3918 ;; Defined at:
  3919 ;;		line 1124 in file "main.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  powerState      1    wreg     _Bool 
  3922 ;;  pwm_msg         2    0[BANK0 ] unsigned int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  powerState      1    4[BANK0 ] _Bool 
  3925 ;;  dc              2    2[BANK0 ] unsigned int 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;Total ram usage:        5 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 6
  3942 ;; This function calls:
  3943 ;;		_PWM1_SetDutyCycle
  3944 ;;		_PWM_Selection
  3945 ;; This function is called by:
  3946 ;;		_handle_uart_communication
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text12
  3951   00450A                     __ptext12:
  3952                           	callstack 0
  3953   00450A                     _vibrationMotorControl:
  3954                           	callstack 23
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;incstack = 0
  3958                           ;vibrationMotorControl@powerState stored from wreg
  3959   00450A  0100               	movlb	0	; () banked
  3960   00450C  6FA8               	movwf	vibrationMotorControl@powerState& (0+255),b
  3961   00450E                     
  3962                           ;main.c: 1125:     if (powerState) {
  3963   00450E  0100               	movlb	0	; () banked
  3964   004510  51A8               	movf	vibrationMotorControl@powerState& (0+255),w,b
  3965   004512  B4D8               	btfsc	status,2,c
  3966   004514  EF8E  F022         	goto	u5201
  3967   004518  EF90  F022         	goto	u5200
  3968   00451C                     u5201:
  3969   00451C  EFA3  F022         	goto	l373
  3970   004520                     u5200:
  3971   004520                     
  3972                           ; BSR set to: 0
  3973                           ;main.c: 1126:         LATCbits.LATC1 = 1;
  3974   004520  828B               	bsf	139,1,c	;volatile
  3975   004522                     
  3976                           ; BSR set to: 0
  3977                           ;main.c: 1129:         unsigned int dc = PWM_Selection(pwm_msg);
  3978   004522  C0A4  F015         	movff	vibrationMotorControl@pwm_msg,PWM_Selection@msg
  3979   004526  C0A5  F016         	movff	vibrationMotorControl@pwm_msg+1,PWM_Selection@msg+1
  3980   00452A  ECE8  F019         	call	_PWM_Selection	;wreg free
  3981   00452E  C015  F0A6         	movff	?_PWM_Selection,vibrationMotorControl@dc
  3982   004532  C016  F0A7         	movff	?_PWM_Selection+1,vibrationMotorControl@dc+1
  3983   004536                     
  3984                           ;main.c: 1133:         PWM1_SetDutyCycle(dc);
  3985   004536  C0A6  F05B         	movff	vibrationMotorControl@dc,PWM1_SetDutyCycle@dutyCycle
  3986   00453A  C0A7  F05C         	movff	vibrationMotorControl@dc+1,PWM1_SetDutyCycle@dutyCycle+1
  3987   00453E  EC18  F01D         	call	_PWM1_SetDutyCycle	;wreg free
  3988                           
  3989                           ;main.c: 1134:     } else {
  3990   004542  EFA4  F022         	goto	l375
  3991   004546                     l373:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;main.c: 1135:         LATCbits.LATC1 = 0;
  3995   004546  928B               	bcf	139,1,c	;volatile
  3996   004548                     l375:
  3997   004548  0012               	return		;funcret
  3998   00454A                     __end_of_vibrationMotorControl:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _PWM_Selection *****************
  4002 ;; Defined at:
  4003 ;;		line 1081 in file "main.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  msg             2   20[COMRAM] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  dcSelected      2   24[COMRAM] int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2   20[COMRAM] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 5
  4024 ;; This function calls:
  4025 ;;		_write_i2c
  4026 ;; This function is called by:
  4027 ;;		_vibrationMotorControl
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text13
  4032   0033D0                     __ptext13:
  4033                           	callstack 0
  4034   0033D0                     _PWM_Selection:
  4035                           	callstack 23
  4036   0033D0                     
  4037                           ;main.c: 1082:     int dcSelected;;main.c: 1083:     switch(msg){
  4038   0033D0  EF58  F01A         	goto	l5692
  4039   0033D4                     l5650:
  4040                           
  4041                           ;main.c: 1085:             dcSelected = 7;
  4042   0033D4  0E00               	movlw	0
  4043   0033D6  6E1A               	movwf	(PWM_Selection@dcSelected+1)^0,c
  4044   0033D8  0E07               	movlw	7
  4045   0033DA  6E19               	movwf	PWM_Selection@dcSelected^0,c
  4046   0033DC                     
  4047                           ;main.c: 1086:             INTCONbits.GIE = 0;
  4048   0033DC  9EF2               	bcf	242,7,c	;volatile
  4049   0033DE                     
  4050                           ;main.c: 1087:             write_i2c(0x0070, 0x01);
  4051   0033DE  0E70               	movlw	112
  4052   0033E0  6E0F               	movwf	write_i2c@address^0,c
  4053   0033E2  0E00               	movlw	0
  4054   0033E4  6E10               	movwf	(write_i2c@address+1)^0,c
  4055   0033E6  0E00               	movlw	0
  4056   0033E8  6E11               	movwf	(write_i2c@address+2)^0,c
  4057   0033EA  0E00               	movlw	0
  4058   0033EC  6E12               	movwf	(write_i2c@address+3)^0,c
  4059   0033EE  0E00               	movlw	0
  4060   0033F0  6E14               	movwf	(write_i2c@data+1)^0,c
  4061   0033F2  0E01               	movlw	1
  4062   0033F4  6E13               	movwf	write_i2c@data^0,c
  4063   0033F6  ECFA  F021         	call	_write_i2c	;wreg free
  4064   0033FA                     
  4065                           ;main.c: 1088:             INTCONbits.GIE = 1;
  4066   0033FA  8EF2               	bsf	242,7,c	;volatile
  4067                           
  4068                           ;main.c: 1089:             break;
  4069   0033FC  EF7A  F01A         	goto	l364
  4070   003400                     l5658:
  4071                           
  4072                           ;main.c: 1091:             dcSelected = 9;
  4073   003400  0E00               	movlw	0
  4074   003402  6E1A               	movwf	(PWM_Selection@dcSelected+1)^0,c
  4075   003404  0E09               	movlw	9
  4076   003406  6E19               	movwf	PWM_Selection@dcSelected^0,c
  4077   003408                     
  4078                           ;main.c: 1092:             INTCONbits.GIE = 0;
  4079   003408  9EF2               	bcf	242,7,c	;volatile
  4080   00340A                     
  4081                           ;main.c: 1093:             write_i2c(0x0070, 0x02);
  4082   00340A  0E70               	movlw	112
  4083   00340C  6E0F               	movwf	write_i2c@address^0,c
  4084   00340E  0E00               	movlw	0
  4085   003410  6E10               	movwf	(write_i2c@address+1)^0,c
  4086   003412  0E00               	movlw	0
  4087   003414  6E11               	movwf	(write_i2c@address+2)^0,c
  4088   003416  0E00               	movlw	0
  4089   003418  6E12               	movwf	(write_i2c@address+3)^0,c
  4090   00341A  0E00               	movlw	0
  4091   00341C  6E14               	movwf	(write_i2c@data+1)^0,c
  4092   00341E  0E02               	movlw	2
  4093   003420  6E13               	movwf	write_i2c@data^0,c
  4094   003422  ECFA  F021         	call	_write_i2c	;wreg free
  4095   003426                     
  4096                           ;main.c: 1094:             INTCONbits.GIE = 1;
  4097   003426  8EF2               	bsf	242,7,c	;volatile
  4098                           
  4099                           ;main.c: 1095:             break;
  4100   003428  EF7A  F01A         	goto	l364
  4101   00342C                     l5666:
  4102                           
  4103                           ;main.c: 1097:             dcSelected = 12;
  4104   00342C  0E00               	movlw	0
  4105   00342E  6E1A               	movwf	(PWM_Selection@dcSelected+1)^0,c
  4106   003430  0E0C               	movlw	12
  4107   003432  6E19               	movwf	PWM_Selection@dcSelected^0,c
  4108   003434                     
  4109                           ;main.c: 1098:             INTCONbits.GIE = 0;
  4110   003434  9EF2               	bcf	242,7,c	;volatile
  4111   003436                     
  4112                           ;main.c: 1099:             write_i2c(0x0070, 0x03);
  4113   003436  0E70               	movlw	112
  4114   003438  6E0F               	movwf	write_i2c@address^0,c
  4115   00343A  0E00               	movlw	0
  4116   00343C  6E10               	movwf	(write_i2c@address+1)^0,c
  4117   00343E  0E00               	movlw	0
  4118   003440  6E11               	movwf	(write_i2c@address+2)^0,c
  4119   003442  0E00               	movlw	0
  4120   003444  6E12               	movwf	(write_i2c@address+3)^0,c
  4121   003446  0E00               	movlw	0
  4122   003448  6E14               	movwf	(write_i2c@data+1)^0,c
  4123   00344A  0E03               	movlw	3
  4124   00344C  6E13               	movwf	write_i2c@data^0,c
  4125   00344E  ECFA  F021         	call	_write_i2c	;wreg free
  4126   003452                     
  4127                           ;main.c: 1100:             INTCONbits.GIE = 1;
  4128   003452  8EF2               	bsf	242,7,c	;volatile
  4129                           
  4130                           ;main.c: 1101:             break;
  4131   003454  EF7A  F01A         	goto	l364
  4132   003458                     l5674:
  4133                           
  4134                           ;main.c: 1103:             dcSelected = 20;
  4135   003458  0E00               	movlw	0
  4136   00345A  6E1A               	movwf	(PWM_Selection@dcSelected+1)^0,c
  4137   00345C  0E14               	movlw	20
  4138   00345E  6E19               	movwf	PWM_Selection@dcSelected^0,c
  4139   003460                     
  4140                           ;main.c: 1104:             INTCONbits.GIE = 0;
  4141   003460  9EF2               	bcf	242,7,c	;volatile
  4142   003462                     
  4143                           ;main.c: 1105:             write_i2c(0x0070, 0x04);
  4144   003462  0E70               	movlw	112
  4145   003464  6E0F               	movwf	write_i2c@address^0,c
  4146   003466  0E00               	movlw	0
  4147   003468  6E10               	movwf	(write_i2c@address+1)^0,c
  4148   00346A  0E00               	movlw	0
  4149   00346C  6E11               	movwf	(write_i2c@address+2)^0,c
  4150   00346E  0E00               	movlw	0
  4151   003470  6E12               	movwf	(write_i2c@address+3)^0,c
  4152   003472  0E00               	movlw	0
  4153   003474  6E14               	movwf	(write_i2c@data+1)^0,c
  4154   003476  0E04               	movlw	4
  4155   003478  6E13               	movwf	write_i2c@data^0,c
  4156   00347A  ECFA  F021         	call	_write_i2c	;wreg free
  4157   00347E                     
  4158                           ;main.c: 1106:             INTCONbits.GIE = 1;
  4159   00347E  8EF2               	bsf	242,7,c	;volatile
  4160                           
  4161                           ;main.c: 1107:             break;
  4162   003480  EF7A  F01A         	goto	l364
  4163   003484                     l5682:
  4164                           
  4165                           ;main.c: 1109:             dcSelected = 0;
  4166   003484  0E00               	movlw	0
  4167   003486  6E1A               	movwf	(PWM_Selection@dcSelected+1)^0,c
  4168   003488  0E00               	movlw	0
  4169   00348A  6E19               	movwf	PWM_Selection@dcSelected^0,c
  4170   00348C                     
  4171                           ;main.c: 1110:             INTCONbits.GIE = 0;
  4172   00348C  9EF2               	bcf	242,7,c	;volatile
  4173   00348E                     
  4174                           ;main.c: 1111:             write_i2c(0x0070, 0x00);
  4175   00348E  0E70               	movlw	112
  4176   003490  6E0F               	movwf	write_i2c@address^0,c
  4177   003492  0E00               	movlw	0
  4178   003494  6E10               	movwf	(write_i2c@address+1)^0,c
  4179   003496  0E00               	movlw	0
  4180   003498  6E11               	movwf	(write_i2c@address+2)^0,c
  4181   00349A  0E00               	movlw	0
  4182   00349C  6E12               	movwf	(write_i2c@address+3)^0,c
  4183   00349E  0E00               	movlw	0
  4184   0034A0  6E14               	movwf	(write_i2c@data+1)^0,c
  4185   0034A2  0E00               	movlw	0
  4186   0034A4  6E13               	movwf	write_i2c@data^0,c
  4187   0034A6  ECFA  F021         	call	_write_i2c	;wreg free
  4188   0034AA                     
  4189                           ;main.c: 1112:             INTCONbits.GIE = 1;
  4190   0034AA  8EF2               	bsf	242,7,c	;volatile
  4191                           
  4192                           ;main.c: 1113:             break;
  4193   0034AC  EF7A  F01A         	goto	l364
  4194   0034B0                     l5692:
  4195   0034B0  C015  F017         	movff	PWM_Selection@msg,??_PWM_Selection
  4196   0034B4  C016  F018         	movff	PWM_Selection@msg+1,??_PWM_Selection+1
  4197                           
  4198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4199                           ; Switch size 1, requested type "simple"
  4200                           ; Number of cases is 1, Range of values is 0 to 0
  4201                           ; switch strategies available:
  4202                           ; Name         Instructions Cycles
  4203                           ; simple_byte            4     3 (average)
  4204                           ;	Chosen strategy is simple_byte
  4205   0034B8  5018               	movf	(??_PWM_Selection+1)^0,w,c
  4206   0034BA  0A00               	xorlw	0	; case 0
  4207   0034BC  B4D8               	btfsc	status,2,c
  4208   0034BE  EF63  F01A         	goto	l7494
  4209   0034C2  EF7A  F01A         	goto	l364
  4210   0034C6                     l7494:
  4211                           
  4212                           ; Switch size 1, requested type "simple"
  4213                           ; Number of cases is 5, Range of values is 0 to 4
  4214                           ; switch strategies available:
  4215                           ; Name         Instructions Cycles
  4216                           ; simple_byte           16     9 (average)
  4217                           ;	Chosen strategy is simple_byte
  4218   0034C6  5017               	movf	??_PWM_Selection^0,w,c
  4219   0034C8  0A00               	xorlw	0	; case 0
  4220   0034CA  B4D8               	btfsc	status,2,c
  4221   0034CC  EFEA  F019         	goto	l5650
  4222   0034D0  0A01               	xorlw	1	; case 1
  4223   0034D2  B4D8               	btfsc	status,2,c
  4224   0034D4  EF00  F01A         	goto	l5658
  4225   0034D8  0A03               	xorlw	3	; case 2
  4226   0034DA  B4D8               	btfsc	status,2,c
  4227   0034DC  EF16  F01A         	goto	l5666
  4228   0034E0  0A01               	xorlw	1	; case 3
  4229   0034E2  B4D8               	btfsc	status,2,c
  4230   0034E4  EF2C  F01A         	goto	l5674
  4231   0034E8  0A07               	xorlw	7	; case 4
  4232   0034EA  B4D8               	btfsc	status,2,c
  4233   0034EC  EF42  F01A         	goto	l5682
  4234   0034F0  EF7A  F01A         	goto	l364
  4235   0034F4                     l364:
  4236                           
  4237                           ;main.c: 1117:     return (dcSelected);
  4238   0034F4  C019  F015         	movff	PWM_Selection@dcSelected,?_PWM_Selection
  4239   0034F8  C01A  F016         	movff	PWM_Selection@dcSelected+1,?_PWM_Selection+1
  4240   0034FC  0012               	return		;funcret
  4241   0034FE                     __end_of_PWM_Selection:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _write_i2c *****************
  4245 ;; Defined at:
  4246 ;;		line 109 in file "i2c.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  address         4   14[COMRAM] long 
  4249 ;;  data            2   18[COMRAM] int 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;Total ram usage:        6 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; Hardware stack levels required when called: 4
  4268 ;; This function calls:
  4269 ;;		___aldiv
  4270 ;;		_i2c_Address
  4271 ;;		_i2c_Start
  4272 ;;		_i2c_Stop
  4273 ;;		_i2c_Write
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;;		_PWM_Selection
  4277 ;;		_ToggleVIB_Mode
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text14
  4282   0043F4                     __ptext14:
  4283                           	callstack 0
  4284   0043F4                     _write_i2c:
  4285                           	callstack 26
  4286   0043F4                     
  4287                           ;i2c.c: 110:     i2c_Start();
  4288   0043F4  EC45  F024         	call	_i2c_Start	;wreg free
  4289                           
  4290                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  4291   0043F8  0E00               	movlw	0
  4292   0043FA  6E02               	movwf	i2c_Address@mode^0,c
  4293   0043FC  0EA0               	movlw	160
  4294   0043FE  EC15  F024         	call	_i2c_Address
  4295                           
  4296                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  4297   004402  C00F  F001         	movff	write_i2c@address,___aldiv@dividend
  4298   004406  C010  F002         	movff	write_i2c@address+1,___aldiv@dividend+1
  4299   00440A  C011  F003         	movff	write_i2c@address+2,___aldiv@dividend+2
  4300   00440E  C012  F004         	movff	write_i2c@address+3,___aldiv@dividend+3
  4301   004412  0E00               	movlw	0
  4302   004414  6E05               	movwf	___aldiv@divisor^0,c
  4303   004416  0E01               	movlw	1
  4304   004418  6E06               	movwf	(___aldiv@divisor+1)^0,c
  4305   00441A  0E00               	movlw	0
  4306   00441C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  4307   00441E  0E00               	movlw	0
  4308   004420  6E08               	movwf	(___aldiv@divisor+3)^0,c
  4309   004422  EC9B  F01B         	call	___aldiv	;wreg free
  4310   004426  5001               	movf	?___aldiv^0,w,c
  4311   004428  EC2D  F024         	call	_i2c_Write
  4312                           
  4313                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  4314   00442C  500F               	movf	write_i2c@address^0,w,c
  4315   00442E  EC2D  F024         	call	_i2c_Write
  4316                           
  4317                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  4318   004432  5013               	movf	write_i2c@data^0,w,c
  4319   004434  EC2D  F024         	call	_i2c_Write
  4320                           
  4321                           ;i2c.c: 115:     i2c_Stop();
  4322   004438  EC41  F024         	call	_i2c_Stop	;wreg free
  4323   00443C  0012               	return		;funcret
  4324   00443E                     __end_of_write_i2c:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _i2c_Write *****************
  4328 ;; Defined at:
  4329 ;;		line 70 in file "i2c.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  data            1    wreg     unsigned char 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  data            1    1[COMRAM] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:        1 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 3
  4350 ;; This function calls:
  4351 ;;		_i2c_Wait
  4352 ;; This function is called by:
  4353 ;;		_write_i2c
  4354 ;;		_read_i2c
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text15
  4359   00485A                     __ptext15:
  4360                           	callstack 0
  4361   00485A                     _i2c_Write:
  4362                           	callstack 26
  4363                           
  4364                           ;incstack = 0
  4365                           ;i2c_Write@data stored from wreg
  4366   00485A  6E02               	movwf	i2c_Write@data^0,c
  4367   00485C                     
  4368                           ;i2c.c: 71:     i2c_Wait();
  4369   00485C  ECC5  F023         	call	_i2c_Wait	;wreg free
  4370   004860                     
  4371                           ;i2c.c: 72:     SSP2BUF = data;
  4372   004860  C002  FF6F         	movff	i2c_Write@data,3951	;volatile
  4373   004864  0012               	return		;funcret
  4374   004866                     __end_of_i2c_Write:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _i2c_Stop *****************
  4378 ;; Defined at:
  4379 ;;		line 63 in file "i2c.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 3
  4400 ;; This function calls:
  4401 ;;		_i2c_Wait
  4402 ;; This function is called by:
  4403 ;;		_write_i2c
  4404 ;;		_read_i2c
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text16
  4409   004882                     __ptext16:
  4410                           	callstack 0
  4411   004882                     _i2c_Stop:
  4412                           	callstack 26
  4413   004882                     
  4414                           ;i2c.c: 64:     i2c_Wait();
  4415   004882  ECC5  F023         	call	_i2c_Wait	;wreg free
  4416   004886                     
  4417                           ;i2c.c: 65:     PEN2 = 1;
  4418   004886  846B               	bsf	3947,2,c	;volatile
  4419   004888  0012               	return		;funcret
  4420   00488A                     __end_of_i2c_Stop:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _i2c_Start *****************
  4424 ;; Defined at:
  4425 ;;		line 49 in file "i2c.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 3
  4446 ;; This function calls:
  4447 ;;		_i2c_Wait
  4448 ;; This function is called by:
  4449 ;;		_write_i2c
  4450 ;;		_read_i2c
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text17
  4455   00488A                     __ptext17:
  4456                           	callstack 0
  4457   00488A                     _i2c_Start:
  4458                           	callstack 26
  4459   00488A                     
  4460                           ;i2c.c: 50:     i2c_Wait();
  4461   00488A  ECC5  F023         	call	_i2c_Wait	;wreg free
  4462   00488E                     
  4463                           ;i2c.c: 51:     SEN2 = 1;
  4464   00488E  806B               	bsf	3947,0,c	;volatile
  4465   004890  0012               	return		;funcret
  4466   004892                     __end_of_i2c_Start:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _i2c_Address *****************
  4470 ;; Defined at:
  4471 ;;		line 78 in file "i2c.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  address         1    wreg     unsigned char 
  4474 ;;  mode            1    1[COMRAM] unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  address         1    2[COMRAM] unsigned char 
  4477 ;;  l_address       1    3[COMRAM] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4487 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;Total ram usage:        3 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 3
  4494 ;; This function calls:
  4495 ;;		_i2c_Wait
  4496 ;; This function is called by:
  4497 ;;		_write_i2c
  4498 ;;		_read_i2c
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text18
  4503   00482A                     __ptext18:
  4504                           	callstack 0
  4505   00482A                     _i2c_Address:
  4506                           	callstack 26
  4507                           
  4508                           ;incstack = 0
  4509                           ;i2c_Address@address stored from wreg
  4510   00482A  6E03               	movwf	i2c_Address@address^0,c
  4511   00482C                     
  4512                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  4513   00482C  C003  F004         	movff	i2c_Address@address,i2c_Address@l_address
  4514   004830                     
  4515                           ;i2c.c: 82:     l_address += mode;
  4516   004830  5002               	movf	i2c_Address@mode^0,w,c
  4517   004832  2604               	addwf	i2c_Address@l_address^0,f,c
  4518   004834                     
  4519                           ;i2c.c: 83:     i2c_Wait();
  4520   004834  ECC5  F023         	call	_i2c_Wait	;wreg free
  4521   004838                     
  4522                           ;i2c.c: 84:     SSP2BUF = l_address;
  4523   004838  C004  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  4524   00483C  0012               	return		;funcret
  4525   00483E                     __end_of_i2c_Address:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _i2c_Wait *****************
  4529 ;; Defined at:
  4530 ;;		line 43 in file "i2c.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        1 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 2
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_i2c_Start
  4555 ;;		_i2c_Restart
  4556 ;;		_i2c_Stop
  4557 ;;		_i2c_Write
  4558 ;;		_i2c_Address
  4559 ;;		_i2c_Read
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text19
  4564   00478A                     __ptext19:
  4565                           	callstack 0
  4566   00478A                     _i2c_Wait:
  4567                           	callstack 26
  4568   00478A                     l4984:
  4569   00478A  CF6B F001          	movff	3947,??_i2c_Wait	;volatile
  4570   00478E  0E1F               	movlw	31
  4571   004790  1601               	andwf	??_i2c_Wait^0,f,c
  4572   004792  A4D8               	btfss	status,2,c
  4573   004794  EFCE  F023         	goto	u3951
  4574   004798  EFD0  F023         	goto	u3950
  4575   00479C                     u3951:
  4576   00479C  EFC5  F023         	goto	l4984
  4577   0047A0                     u3950:
  4578   0047A0  B46D               	btfsc	109,2,c	;volatile
  4579   0047A2  EFD5  F023         	goto	u3961
  4580   0047A6  EFD7  F023         	goto	u3960
  4581   0047AA                     u3961:
  4582   0047AA  EFC5  F023         	goto	l4984
  4583   0047AE                     u3960:
  4584   0047AE  0012               	return		;funcret
  4585   0047B0                     __end_of_i2c_Wait:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _PWM1_SetDutyCycle *****************
  4589 ;; Defined at:
  4590 ;;		line 1145 in file "main.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  dutyCycle       2   90[COMRAM] unsigned int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;Total ram usage:        4 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; Hardware stack levels required when called: 3
  4611 ;; This function calls:
  4612 ;;		___fladd
  4613 ;;		___fldiv
  4614 ;;		___flmul
  4615 ;;		___fltol
  4616 ;;		___xxtofl
  4617 ;; This function is called by:
  4618 ;;		_vibrationMotorControl
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text20
  4623   003A30                     __ptext20:
  4624                           	callstack 0
  4625   003A30                     _PWM1_SetDutyCycle:
  4626                           	callstack 25
  4627   003A30                     
  4628                           ;main.c: 1146:     if (dutyCycle < 1024)
  4629   003A30  0E04               	movlw	4
  4630   003A32  5C5C               	subwf	(PWM1_SetDutyCycle@dutyCycle+1)^0,w,c
  4631   003A34  B0D8               	btfsc	status,0,c
  4632   003A36  EF1F  F01D         	goto	u5061
  4633   003A3A  EF21  F01D         	goto	u5060
  4634   003A3E                     u5061:
  4635   003A3E  EF84  F01D         	goto	l382
  4636   003A42                     u5060:
  4637   003A42                     
  4638                           ;main.c: 1147:     {;main.c: 1148:         dutyCycle = ((float) dutyCycle / 1023)*(80000
      +                          00 / (5000 * 4 * 4)) - 1;
  4639   003A42  0E00               	movlw	0
  4640   003A44  6E45               	movwf	___fladd@a^0,c
  4641   003A46  0E00               	movlw	0
  4642   003A48  6E46               	movwf	(___fladd@a+1)^0,c
  4643   003A4A  0E80               	movlw	128
  4644   003A4C  6E47               	movwf	(___fladd@a+2)^0,c
  4645   003A4E  0EBF               	movlw	191
  4646   003A50  6E48               	movwf	(___fladd@a+3)^0,c
  4647   003A52  0E00               	movlw	0
  4648   003A54  6E2C               	movwf	___flmul@a^0,c
  4649   003A56  0E40               	movlw	64
  4650   003A58  6E2D               	movwf	(___flmul@a+1)^0,c
  4651   003A5A  0E0A               	movlw	10
  4652   003A5C  6E2E               	movwf	(___flmul@a+2)^0,c
  4653   003A5E  0E44               	movlw	68
  4654   003A60  6E2F               	movwf	(___flmul@a+3)^0,c
  4655   003A62  0E00               	movlw	0
  4656   003A64  6E13               	movwf	___fldiv@a^0,c
  4657   003A66  0EC0               	movlw	192
  4658   003A68  6E14               	movwf	(___fldiv@a+1)^0,c
  4659   003A6A  0E7F               	movlw	127
  4660   003A6C  6E15               	movwf	(___fldiv@a+2)^0,c
  4661   003A6E  0E44               	movlw	68
  4662   003A70  6E16               	movwf	(___fldiv@a+3)^0,c
  4663   003A72  C05B  F001         	movff	PWM1_SetDutyCycle@dutyCycle,___xxtofl@val
  4664   003A76  C05C  F002         	movff	PWM1_SetDutyCycle@dutyCycle+1,___xxtofl@val+1
  4665   003A7A  6A03               	clrf	(___xxtofl@val+2)^0,c
  4666   003A7C  6A04               	clrf	(___xxtofl@val+3)^0,c
  4667   003A7E  0E00               	movlw	0
  4668   003A80  ECEE  F016         	call	___xxtofl
  4669   003A84  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4670   003A88  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4671   003A8C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4672   003A90  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4673   003A94  EC70  F00F         	call	___fldiv	;wreg free
  4674   003A98  C00F  F028         	movff	?___fldiv,___flmul@b
  4675   003A9C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4676   003AA0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4677   003AA4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4678   003AA8  EC5B  F00D         	call	___flmul	;wreg free
  4679   003AAC  C028  F041         	movff	?___flmul,___fladd@b
  4680   003AB0  C029  F042         	movff	?___flmul+1,___fladd@b+1
  4681   003AB4  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  4682   003AB8  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  4683   003ABC  ECFB  F00A         	call	___fladd	;wreg free
  4684   003AC0  C041  F051         	movff	?___fladd,___fltol@f1
  4685   003AC4  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  4686   003AC8  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  4687   003ACC  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  4688   003AD0  EC21  F01C         	call	___fltol	;wreg free
  4689   003AD4  C051  F05B         	movff	?___fltol,PWM1_SetDutyCycle@dutyCycle
  4690   003AD8  C052  F05C         	movff	?___fltol+1,PWM1_SetDutyCycle@dutyCycle+1
  4691   003ADC                     
  4692                           ;main.c: 1149:         CCP1CONbits.DC1B = dutyCycle & 0x03;
  4693   003ADC  C05B  F05D         	movff	PWM1_SetDutyCycle@dutyCycle,??_PWM1_SetDutyCycle
  4694   003AE0  0E03               	movlw	3
  4695   003AE2  165D               	andwf	??_PWM1_SetDutyCycle^0,f,c
  4696   003AE4  3A5D               	swapf	??_PWM1_SetDutyCycle^0,f,c
  4697   003AE6  50BB               	movf	187,w,c	;volatile
  4698   003AE8  185D               	xorwf	??_PWM1_SetDutyCycle^0,w,c
  4699   003AEA  0BCF               	andlw	-49
  4700   003AEC  185D               	xorwf	??_PWM1_SetDutyCycle^0,w,c
  4701   003AEE  6EBB               	movwf	187,c	;volatile
  4702   003AF0                     
  4703                           ;main.c: 1150:         CCPR1L = dutyCycle >> 2;
  4704   003AF0  C05B  F05D         	movff	PWM1_SetDutyCycle@dutyCycle,??_PWM1_SetDutyCycle
  4705   003AF4  C05C  F05E         	movff	PWM1_SetDutyCycle@dutyCycle+1,??_PWM1_SetDutyCycle+1
  4706   003AF8  90D8               	bcf	status,0,c
  4707   003AFA  325E               	rrcf	(??_PWM1_SetDutyCycle+1)^0,f,c
  4708   003AFC  325D               	rrcf	??_PWM1_SetDutyCycle^0,f,c
  4709   003AFE  90D8               	bcf	status,0,c
  4710   003B00  325E               	rrcf	(??_PWM1_SetDutyCycle+1)^0,f,c
  4711   003B02  325D               	rrcf	??_PWM1_SetDutyCycle^0,f,c
  4712   003B04  505D               	movf	??_PWM1_SetDutyCycle^0,w,c
  4713   003B06  6EBC               	movwf	188,c	;volatile
  4714   003B08                     l382:
  4715   003B08  0012               	return		;funcret
  4716   003B0A                     __end_of_PWM1_SetDutyCycle:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function ___xxtofl *****************
  4720 ;; Defined at:
  4721 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  sign            1    wreg     unsigned char 
  4724 ;;  val             4    0[COMRAM] long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  sign            1    8[COMRAM] unsigned char 
  4727 ;;  arg             4   10[COMRAM] unsigned long 
  4728 ;;  exp             1    9[COMRAM] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4    0[COMRAM] unsigned char 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;Total ram usage:       14 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 2
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_PWM1_SetDutyCycle
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text21
  4753   002DDC                     __ptext21:
  4754                           	callstack 0
  4755   002DDC                     ___xxtofl:
  4756                           	callstack 25
  4757                           
  4758                           ;incstack = 0
  4759                           ;___xxtofl@sign stored from wreg
  4760   002DDC  6E09               	movwf	___xxtofl@sign^0,c
  4761   002DDE  5009               	movf	___xxtofl@sign^0,w,c
  4762   002DE0  B4D8               	btfsc	status,2,c
  4763   002DE2  EFF5  F016         	goto	u4961
  4764   002DE6  EFF7  F016         	goto	u4960
  4765   002DEA                     u4961:
  4766   002DEA  EF19  F017         	goto	l1560
  4767   002DEE                     u4960:
  4768   002DEE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4769   002DF0  EFFE  F016         	goto	u4970
  4770   002DF4  EFFC  F016         	goto	u4971
  4771   002DF8                     u4971:
  4772   002DF8  EF19  F017         	goto	l1560
  4773   002DFC                     u4970:
  4774   002DFC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4775   002E00  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4776   002E04  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4777   002E08  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4778   002E0C  1E05               	comf	??___xxtofl^0,f,c
  4779   002E0E  1E06               	comf	(??___xxtofl+1)^0,f,c
  4780   002E10  1E07               	comf	(??___xxtofl+2)^0,f,c
  4781   002E12  1E08               	comf	(??___xxtofl+3)^0,f,c
  4782   002E14  2A05               	incf	??___xxtofl^0,f,c
  4783   002E16  0E00               	movlw	0
  4784   002E18  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4785   002E1A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4786   002E1C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4787   002E1E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4788   002E22  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4789   002E26  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4790   002E2A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4791   002E2E  EF21  F017         	goto	l5608
  4792   002E32                     l1560:
  4793   002E32  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4794   002E36  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4795   002E3A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4796   002E3E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4797   002E42                     l5608:
  4798   002E42  5001               	movf	___xxtofl@val^0,w,c
  4799   002E44  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4800   002E46  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4801   002E48  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4802   002E4A  A4D8               	btfss	status,2,c
  4803   002E4C  EF2A  F017         	goto	u4981
  4804   002E50  EF2C  F017         	goto	u4980
  4805   002E54                     u4981:
  4806   002E54  EF36  F017         	goto	l5614
  4807   002E58                     u4980:
  4808   002E58  0E00               	movlw	0
  4809   002E5A  6E01               	movwf	?___xxtofl^0,c
  4810   002E5C  0E00               	movlw	0
  4811   002E5E  6E02               	movwf	(?___xxtofl+1)^0,c
  4812   002E60  0E00               	movlw	0
  4813   002E62  6E03               	movwf	(?___xxtofl+2)^0,c
  4814   002E64  0E00               	movlw	0
  4815   002E66  6E04               	movwf	(?___xxtofl+3)^0,c
  4816   002E68  EFC7  F017         	goto	l1563
  4817   002E6C                     l5614:
  4818   002E6C  0E96               	movlw	150
  4819   002E6E  6E0A               	movwf	___xxtofl@exp^0,c
  4820   002E70  EF40  F017         	goto	l5618
  4821   002E74                     l5616:
  4822   002E74  2A0A               	incf	___xxtofl@exp^0,f,c
  4823   002E76  90D8               	bcf	status,0,c
  4824   002E78  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4825   002E7A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4826   002E7C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4827   002E7E  320B               	rrcf	___xxtofl@arg^0,f,c
  4828   002E80                     l5618:
  4829   002E80  0E00               	movlw	0
  4830   002E82  140B               	andwf	___xxtofl@arg^0,w,c
  4831   002E84  6E05               	movwf	??___xxtofl^0,c
  4832   002E86  0E00               	movlw	0
  4833   002E88  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4834   002E8A  6E06               	movwf	(??___xxtofl+1)^0,c
  4835   002E8C  0E00               	movlw	0
  4836   002E8E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4837   002E90  6E07               	movwf	(??___xxtofl+2)^0,c
  4838   002E92  0EFE               	movlw	254
  4839   002E94  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4840   002E96  6E08               	movwf	(??___xxtofl+3)^0,c
  4841   002E98  5005               	movf	??___xxtofl^0,w,c
  4842   002E9A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4843   002E9C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4844   002E9E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4845   002EA0  A4D8               	btfss	status,2,c
  4846   002EA2  EF55  F017         	goto	u4991
  4847   002EA6  EF57  F017         	goto	u4990
  4848   002EAA                     u4991:
  4849   002EAA  EF3A  F017         	goto	l5616
  4850   002EAE                     u4990:
  4851   002EAE  EF65  F017         	goto	l1567
  4852   002EB2                     l5620:
  4853   002EB2  2A0A               	incf	___xxtofl@exp^0,f,c
  4854   002EB4  0E01               	movlw	1
  4855   002EB6  260B               	addwf	___xxtofl@arg^0,f,c
  4856   002EB8  0E00               	movlw	0
  4857   002EBA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4858   002EBC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4859   002EBE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4860   002EC0  90D8               	bcf	status,0,c
  4861   002EC2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4862   002EC4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4863   002EC6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4864   002EC8  320B               	rrcf	___xxtofl@arg^0,f,c
  4865   002ECA                     l1567:
  4866   002ECA  0E00               	movlw	0
  4867   002ECC  140B               	andwf	___xxtofl@arg^0,w,c
  4868   002ECE  6E05               	movwf	??___xxtofl^0,c
  4869   002ED0  0E00               	movlw	0
  4870   002ED2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4871   002ED4  6E06               	movwf	(??___xxtofl+1)^0,c
  4872   002ED6  0E00               	movlw	0
  4873   002ED8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4874   002EDA  6E07               	movwf	(??___xxtofl+2)^0,c
  4875   002EDC  0EFF               	movlw	255
  4876   002EDE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4877   002EE0  6E08               	movwf	(??___xxtofl+3)^0,c
  4878   002EE2  5005               	movf	??___xxtofl^0,w,c
  4879   002EE4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4880   002EE6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4881   002EE8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4882   002EEA  A4D8               	btfss	status,2,c
  4883   002EEC  EF7A  F017         	goto	u5001
  4884   002EF0  EF7C  F017         	goto	u5000
  4885   002EF4                     u5001:
  4886   002EF4  EF59  F017         	goto	l5620
  4887   002EF8                     u5000:
  4888   002EF8  EF84  F017         	goto	l5628
  4889   002EFC                     l5626:
  4890   002EFC  060A               	decf	___xxtofl@exp^0,f,c
  4891   002EFE  90D8               	bcf	status,0,c
  4892   002F00  360B               	rlcf	___xxtofl@arg^0,f,c
  4893   002F02  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4894   002F04  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4895   002F06  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4896   002F08                     l5628:
  4897   002F08  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4898   002F0A  EF89  F017         	goto	u5011
  4899   002F0E  EF8B  F017         	goto	u5010
  4900   002F12                     u5011:
  4901   002F12  EF93  F017         	goto	l1574
  4902   002F16                     u5010:
  4903   002F16  0E02               	movlw	2
  4904   002F18  600A               	cpfslt	___xxtofl@exp^0,c
  4905   002F1A  EF91  F017         	goto	u5021
  4906   002F1E  EF93  F017         	goto	u5020
  4907   002F22                     u5021:
  4908   002F22  EF7E  F017         	goto	l5626
  4909   002F26                     u5020:
  4910   002F26                     l1574:
  4911   002F26  B00A               	btfsc	___xxtofl@exp^0,0,c
  4912   002F28  EF98  F017         	goto	u5031
  4913   002F2C  EF9A  F017         	goto	u5030
  4914   002F30                     u5031:
  4915   002F30  EF9B  F017         	goto	l5634
  4916   002F34                     u5030:
  4917   002F34  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4918   002F36                     l5634:
  4919   002F36  90D8               	bcf	status,0,c
  4920   002F38  320A               	rrcf	___xxtofl@exp^0,f,c
  4921   002F3A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4922   002F3E  6A06               	clrf	(??___xxtofl+1)^0,c
  4923   002F40  6A07               	clrf	(??___xxtofl+2)^0,c
  4924   002F42  6A08               	clrf	(??___xxtofl+3)^0,c
  4925   002F44  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4926   002F48  6A07               	clrf	(??___xxtofl+2)^0,c
  4927   002F4A  6A06               	clrf	(??___xxtofl+1)^0,c
  4928   002F4C  6A05               	clrf	??___xxtofl^0,c
  4929   002F4E  5005               	movf	??___xxtofl^0,w,c
  4930   002F50  120B               	iorwf	___xxtofl@arg^0,f,c
  4931   002F52  5006               	movf	(??___xxtofl+1)^0,w,c
  4932   002F54  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4933   002F56  5007               	movf	(??___xxtofl+2)^0,w,c
  4934   002F58  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4935   002F5A  5008               	movf	(??___xxtofl+3)^0,w,c
  4936   002F5C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4937   002F5E  5009               	movf	___xxtofl@sign^0,w,c
  4938   002F60  B4D8               	btfsc	status,2,c
  4939   002F62  EFB5  F017         	goto	u5041
  4940   002F66  EFB7  F017         	goto	u5040
  4941   002F6A                     u5041:
  4942   002F6A  EFBF  F017         	goto	l5644
  4943   002F6E                     u5040:
  4944   002F6E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4945   002F70  EFBE  F017         	goto	u5050
  4946   002F74  EFBC  F017         	goto	u5051
  4947   002F78                     u5051:
  4948   002F78  EFBF  F017         	goto	l5644
  4949   002F7C                     u5050:
  4950   002F7C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4951   002F7E                     l5644:
  4952   002F7E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4953   002F82  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4954   002F86  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4955   002F8A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4956   002F8E                     l1563:
  4957   002F8E  0012               	return		;funcret
  4958   002F90                     __end_of___xxtofl:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function ___fltol *****************
  4962 ;; Defined at:
  4963 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  f1              4   80[COMRAM] unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  exp1            1   89[COMRAM] unsigned char 
  4968 ;;  sign1           1   88[COMRAM] unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  4   80[COMRAM] long 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;Total ram usage:       10 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 2
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_PWM1_SetDutyCycle
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text22
  4993   003842                     __ptext22:
  4994                           	callstack 0
  4995   003842                     ___fltol:
  4996                           	callstack 25
  4997   003842  3453               	rlcf	(___fltol@f1+2)^0,w,c
  4998   003844  3454               	rlcf	(___fltol@f1+3)^0,w,c
  4999   003846  6E5A               	movwf	___fltol@exp1^0,c
  5000   003848  505A               	movf	___fltol@exp1^0,w,c
  5001   00384A  A4D8               	btfss	status,2,c
  5002   00384C  EF2A  F01C         	goto	u4891
  5003   003850  EF2C  F01C         	goto	u4890
  5004   003854                     u4891:
  5005   003854  EF36  F01C         	goto	l5564
  5006   003858                     u4890:
  5007   003858                     l5560:
  5008   003858  0E00               	movlw	0
  5009   00385A  6E51               	movwf	?___fltol^0,c
  5010   00385C  0E00               	movlw	0
  5011   00385E  6E52               	movwf	(?___fltol+1)^0,c
  5012   003860  0E00               	movlw	0
  5013   003862  6E53               	movwf	(?___fltol+2)^0,c
  5014   003864  0E00               	movlw	0
  5015   003866  6E54               	movwf	(?___fltol+3)^0,c
  5016   003868  EFA3  F01C         	goto	l1202
  5017   00386C                     l5564:
  5018   00386C  C051  F055         	movff	___fltol@f1,??___fltol
  5019   003870  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  5020   003874  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  5021   003878  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  5022   00387C  0E20               	movlw	32
  5023   00387E  EF46  F01C         	goto	u4900
  5024   003882                     u4905:
  5025   003882  90D8               	bcf	status,0,c
  5026   003884  3258               	rrcf	(??___fltol+3)^0,f,c
  5027   003886  3257               	rrcf	(??___fltol+2)^0,f,c
  5028   003888  3256               	rrcf	(??___fltol+1)^0,f,c
  5029   00388A  3255               	rrcf	??___fltol^0,f,c
  5030   00388C                     u4900:
  5031   00388C  2EE8               	decfsz	wreg,f,c
  5032   00388E  EF41  F01C         	goto	u4905
  5033   003892  5055               	movf	??___fltol^0,w,c
  5034   003894  6E59               	movwf	___fltol@sign1^0,c
  5035   003896  8E53               	bsf	(___fltol@f1+2)^0,7,c
  5036   003898  0EFF               	movlw	255
  5037   00389A  1651               	andwf	___fltol@f1^0,f,c
  5038   00389C  0EFF               	movlw	255
  5039   00389E  1652               	andwf	(___fltol@f1+1)^0,f,c
  5040   0038A0  0EFF               	movlw	255
  5041   0038A2  1653               	andwf	(___fltol@f1+2)^0,f,c
  5042   0038A4  0E00               	movlw	0
  5043   0038A6  1654               	andwf	(___fltol@f1+3)^0,f,c
  5044   0038A8  0E96               	movlw	150
  5045   0038AA  5E5A               	subwf	___fltol@exp1^0,f,c
  5046   0038AC  BE5A               	btfsc	___fltol@exp1^0,7,c
  5047   0038AE  EF5D  F01C         	goto	u4910
  5048   0038B2  EF5B  F01C         	goto	u4911
  5049   0038B6                     u4911:
  5050   0038B6  EF73  F01C         	goto	l5584
  5051   0038BA                     u4910:
  5052   0038BA  505A               	movf	___fltol@exp1^0,w,c
  5053   0038BC  0A80               	xorlw	128
  5054   0038BE  0F97               	addlw	151
  5055   0038C0  B0D8               	btfsc	status,0,c
  5056   0038C2  EF65  F01C         	goto	u4921
  5057   0038C6  EF67  F01C         	goto	u4920
  5058   0038CA                     u4921:
  5059   0038CA  EF69  F01C         	goto	l5580
  5060   0038CE                     u4920:
  5061   0038CE  EF2C  F01C         	goto	l5560
  5062   0038D2                     l5580:
  5063   0038D2  90D8               	bcf	status,0,c
  5064   0038D4  3254               	rrcf	(___fltol@f1+3)^0,f,c
  5065   0038D6  3253               	rrcf	(___fltol@f1+2)^0,f,c
  5066   0038D8  3252               	rrcf	(___fltol@f1+1)^0,f,c
  5067   0038DA  3251               	rrcf	___fltol@f1^0,f,c
  5068   0038DC  3E5A               	incfsz	___fltol@exp1^0,f,c
  5069   0038DE  EF69  F01C         	goto	l5580
  5070   0038E2  EF8B  F01C         	goto	l5594
  5071   0038E6                     l5584:
  5072   0038E6  0E1F               	movlw	31
  5073   0038E8  645A               	cpfsgt	___fltol@exp1^0,c
  5074   0038EA  EF79  F01C         	goto	u4931
  5075   0038EE  EF7B  F01C         	goto	u4930
  5076   0038F2                     u4931:
  5077   0038F2  EF83  F01C         	goto	l5592
  5078   0038F6                     u4930:
  5079   0038F6  EF2C  F01C         	goto	l5560
  5080   0038FA                     l5590:
  5081   0038FA  90D8               	bcf	status,0,c
  5082   0038FC  3651               	rlcf	___fltol@f1^0,f,c
  5083   0038FE  3652               	rlcf	(___fltol@f1+1)^0,f,c
  5084   003900  3653               	rlcf	(___fltol@f1+2)^0,f,c
  5085   003902  3654               	rlcf	(___fltol@f1+3)^0,f,c
  5086   003904  065A               	decf	___fltol@exp1^0,f,c
  5087   003906                     l5592:
  5088   003906  505A               	movf	___fltol@exp1^0,w,c
  5089   003908  A4D8               	btfss	status,2,c
  5090   00390A  EF89  F01C         	goto	u4941
  5091   00390E  EF8B  F01C         	goto	u4940
  5092   003912                     u4941:
  5093   003912  EF7D  F01C         	goto	l5590
  5094   003916                     u4940:
  5095   003916                     l5594:
  5096   003916  5059               	movf	___fltol@sign1^0,w,c
  5097   003918  B4D8               	btfsc	status,2,c
  5098   00391A  EF91  F01C         	goto	u4951
  5099   00391E  EF93  F01C         	goto	u4950
  5100   003922                     u4951:
  5101   003922  EF9B  F01C         	goto	l5598
  5102   003926                     u4950:
  5103   003926  1E54               	comf	(___fltol@f1+3)^0,f,c
  5104   003928  1E53               	comf	(___fltol@f1+2)^0,f,c
  5105   00392A  1E52               	comf	(___fltol@f1+1)^0,f,c
  5106   00392C  6C51               	negf	___fltol@f1^0,c
  5107   00392E  0E00               	movlw	0
  5108   003930  2252               	addwfc	(___fltol@f1+1)^0,f,c
  5109   003932  2253               	addwfc	(___fltol@f1+2)^0,f,c
  5110   003934  2254               	addwfc	(___fltol@f1+3)^0,f,c
  5111   003936                     l5598:
  5112   003936  C051  F051         	movff	___fltol@f1,?___fltol
  5113   00393A  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  5114   00393E  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  5115   003942  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  5116   003946                     l1202:
  5117   003946  0012               	return		;funcret
  5118   003948                     __end_of___fltol:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function ___flmul *****************
  5122 ;; Defined at:
  5123 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  b               4   39[COMRAM] long 
  5126 ;;  a               4   43[COMRAM] long 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  prod            4   58[COMRAM] struct .
  5129 ;;  grs             4   52[COMRAM] unsigned long 
  5130 ;;  temp            2   62[COMRAM] struct .
  5131 ;;  bexp            1   57[COMRAM] unsigned char 
  5132 ;;  aexp            1   56[COMRAM] unsigned char 
  5133 ;;  sign            1   51[COMRAM] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  4   39[COMRAM] unsigned char 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0, prodl, prodh
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5143 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;Total ram usage:       25 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; Hardware stack levels required when called: 2
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_PWM1_SetDutyCycle
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text23
  5158   001AB6                     __ptext23:
  5159                           	callstack 0
  5160   001AB6                     ___flmul:
  5161                           	callstack 25
  5162   001AB6  502B               	movf	(___flmul@b+3)^0,w,c
  5163   001AB8  0B80               	andlw	128
  5164   001ABA  6E34               	movwf	___flmul@sign^0,c
  5165   001ABC  502B               	movf	(___flmul@b+3)^0,w,c
  5166   001ABE  242B               	addwf	(___flmul@b+3)^0,w,c
  5167   001AC0  6E3A               	movwf	___flmul@bexp^0,c
  5168   001AC2  AE2A               	btfss	(___flmul@b+2)^0,7,c
  5169   001AC4  EF66  F00D         	goto	u4701
  5170   001AC8  EF68  F00D         	goto	u4700
  5171   001ACC                     u4701:
  5172   001ACC  EF69  F00D         	goto	l5434
  5173   001AD0                     u4700:
  5174   001AD0  803A               	bsf	___flmul@bexp^0,0,c
  5175   001AD2                     l5434:
  5176   001AD2  503A               	movf	___flmul@bexp^0,w,c
  5177   001AD4  B4D8               	btfsc	status,2,c
  5178   001AD6  EF6F  F00D         	goto	u4711
  5179   001ADA  EF71  F00D         	goto	u4710
  5180   001ADE                     u4711:
  5181   001ADE  EF84  F00D         	goto	l5442
  5182   001AE2                     u4710:
  5183   001AE2  283A               	incf	___flmul@bexp^0,w,c
  5184   001AE4  A4D8               	btfss	status,2,c
  5185   001AE6  EF77  F00D         	goto	u4721
  5186   001AEA  EF79  F00D         	goto	u4720
  5187   001AEE                     u4721:
  5188   001AEE  EF81  F00D         	goto	l5440
  5189   001AF2                     u4720:
  5190   001AF2  0E00               	movlw	0
  5191   001AF4  6E28               	movwf	___flmul@b^0,c
  5192   001AF6  0E00               	movlw	0
  5193   001AF8  6E29               	movwf	(___flmul@b+1)^0,c
  5194   001AFA  0E00               	movlw	0
  5195   001AFC  6E2A               	movwf	(___flmul@b+2)^0,c
  5196   001AFE  0E00               	movlw	0
  5197   001B00  6E2B               	movwf	(___flmul@b+3)^0,c
  5198   001B02                     l5440:
  5199   001B02  8E2A               	bsf	(___flmul@b+2)^0,7,c
  5200   001B04  EF8C  F00D         	goto	l5444
  5201   001B08                     l5442:
  5202   001B08  0E00               	movlw	0
  5203   001B0A  6E28               	movwf	___flmul@b^0,c
  5204   001B0C  0E00               	movlw	0
  5205   001B0E  6E29               	movwf	(___flmul@b+1)^0,c
  5206   001B10  0E00               	movlw	0
  5207   001B12  6E2A               	movwf	(___flmul@b+2)^0,c
  5208   001B14  0E00               	movlw	0
  5209   001B16  6E2B               	movwf	(___flmul@b+3)^0,c
  5210   001B18                     l5444:
  5211   001B18  502F               	movf	(___flmul@a+3)^0,w,c
  5212   001B1A  0B80               	andlw	128
  5213   001B1C  1A34               	xorwf	___flmul@sign^0,f,c
  5214   001B1E  502F               	movf	(___flmul@a+3)^0,w,c
  5215   001B20  242F               	addwf	(___flmul@a+3)^0,w,c
  5216   001B22  6E39               	movwf	___flmul@aexp^0,c
  5217   001B24  AE2E               	btfss	(___flmul@a+2)^0,7,c
  5218   001B26  EF97  F00D         	goto	u4731
  5219   001B2A  EF99  F00D         	goto	u4730
  5220   001B2E                     u4731:
  5221   001B2E  EF9A  F00D         	goto	l5452
  5222   001B32                     u4730:
  5223   001B32  8039               	bsf	___flmul@aexp^0,0,c
  5224   001B34                     l5452:
  5225   001B34  5039               	movf	___flmul@aexp^0,w,c
  5226   001B36  B4D8               	btfsc	status,2,c
  5227   001B38  EFA0  F00D         	goto	u4741
  5228   001B3C  EFA2  F00D         	goto	u4740
  5229   001B40                     u4741:
  5230   001B40  EFB5  F00D         	goto	l5460
  5231   001B44                     u4740:
  5232   001B44  2839               	incf	___flmul@aexp^0,w,c
  5233   001B46  A4D8               	btfss	status,2,c
  5234   001B48  EFA8  F00D         	goto	u4751
  5235   001B4C  EFAA  F00D         	goto	u4750
  5236   001B50                     u4751:
  5237   001B50  EFB2  F00D         	goto	l5458
  5238   001B54                     u4750:
  5239   001B54  0E00               	movlw	0
  5240   001B56  6E2C               	movwf	___flmul@a^0,c
  5241   001B58  0E00               	movlw	0
  5242   001B5A  6E2D               	movwf	(___flmul@a+1)^0,c
  5243   001B5C  0E00               	movlw	0
  5244   001B5E  6E2E               	movwf	(___flmul@a+2)^0,c
  5245   001B60  0E00               	movlw	0
  5246   001B62  6E2F               	movwf	(___flmul@a+3)^0,c
  5247   001B64                     l5458:
  5248   001B64  8E2E               	bsf	(___flmul@a+2)^0,7,c
  5249   001B66  EFBD  F00D         	goto	l1519
  5250   001B6A                     l5460:
  5251   001B6A  0E00               	movlw	0
  5252   001B6C  6E2C               	movwf	___flmul@a^0,c
  5253   001B6E  0E00               	movlw	0
  5254   001B70  6E2D               	movwf	(___flmul@a+1)^0,c
  5255   001B72  0E00               	movlw	0
  5256   001B74  6E2E               	movwf	(___flmul@a+2)^0,c
  5257   001B76  0E00               	movlw	0
  5258   001B78  6E2F               	movwf	(___flmul@a+3)^0,c
  5259   001B7A                     l1519:
  5260   001B7A  5039               	movf	___flmul@aexp^0,w,c
  5261   001B7C  B4D8               	btfsc	status,2,c
  5262   001B7E  EFC3  F00D         	goto	u4761
  5263   001B82  EFC5  F00D         	goto	u4760
  5264   001B86                     u4761:
  5265   001B86  EFCD  F00D         	goto	l5464
  5266   001B8A                     u4760:
  5267   001B8A  503A               	movf	___flmul@bexp^0,w,c
  5268   001B8C  A4D8               	btfss	status,2,c
  5269   001B8E  EFCB  F00D         	goto	u4771
  5270   001B92  EFCD  F00D         	goto	u4770
  5271   001B96                     u4771:
  5272   001B96  EFD7  F00D         	goto	l5468
  5273   001B9A                     u4770:
  5274   001B9A                     l5464:
  5275   001B9A  0E00               	movlw	0
  5276   001B9C  6E28               	movwf	?___flmul^0,c
  5277   001B9E  0E00               	movlw	0
  5278   001BA0  6E29               	movwf	(?___flmul+1)^0,c
  5279   001BA2  0E00               	movlw	0
  5280   001BA4  6E2A               	movwf	(?___flmul+2)^0,c
  5281   001BA6  0E00               	movlw	0
  5282   001BA8  6E2B               	movwf	(?___flmul+3)^0,c
  5283   001BAA  EF6F  F00F         	goto	l1523
  5284   001BAE                     l5468:
  5285   001BAE  502E               	movf	(___flmul@a+2)^0,w,c
  5286   001BB0  0228               	mulwf	___flmul@b^0,c
  5287   001BB2  CFF3 F03F          	movff	prodl,___flmul@temp
  5288   001BB6  CFF4 F040          	movff	prodh,___flmul@temp+1
  5289   001BBA  503F               	movf	___flmul@temp^0,w,c
  5290   001BBC  6E35               	movwf	___flmul@grs^0,c
  5291   001BBE  6A36               	clrf	(___flmul@grs+1)^0,c
  5292   001BC0  6A37               	clrf	(___flmul@grs+2)^0,c
  5293   001BC2  6A38               	clrf	(___flmul@grs+3)^0,c
  5294   001BC4  5040               	movf	(___flmul@temp+1)^0,w,c
  5295   001BC6  6E3B               	movwf	___flmul@prod^0,c
  5296   001BC8  6A3C               	clrf	(___flmul@prod+1)^0,c
  5297   001BCA  6A3D               	clrf	(___flmul@prod+2)^0,c
  5298   001BCC  6A3E               	clrf	(___flmul@prod+3)^0,c
  5299   001BCE  502D               	movf	(___flmul@a+1)^0,w,c
  5300   001BD0  0229               	mulwf	(___flmul@b+1)^0,c
  5301   001BD2  CFF3 F03F          	movff	prodl,___flmul@temp
  5302   001BD6  CFF4 F040          	movff	prodh,___flmul@temp+1
  5303   001BDA  503F               	movf	___flmul@temp^0,w,c
  5304   001BDC  2635               	addwf	___flmul@grs^0,f,c
  5305   001BDE  0E00               	movlw	0
  5306   001BE0  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5307   001BE2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5308   001BE4  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5309   001BE6  5040               	movf	(___flmul@temp+1)^0,w,c
  5310   001BE8  263B               	addwf	___flmul@prod^0,f,c
  5311   001BEA  0E00               	movlw	0
  5312   001BEC  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5313   001BEE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5314   001BF0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5315   001BF2  502C               	movf	___flmul@a^0,w,c
  5316   001BF4  022A               	mulwf	(___flmul@b+2)^0,c
  5317   001BF6  CFF3 F03F          	movff	prodl,___flmul@temp
  5318   001BFA  CFF4 F040          	movff	prodh,___flmul@temp+1
  5319   001BFE  503F               	movf	___flmul@temp^0,w,c
  5320   001C00  2635               	addwf	___flmul@grs^0,f,c
  5321   001C02  0E00               	movlw	0
  5322   001C04  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5323   001C06  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5324   001C08  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5325   001C0A  5040               	movf	(___flmul@temp+1)^0,w,c
  5326   001C0C  263B               	addwf	___flmul@prod^0,f,c
  5327   001C0E  0E00               	movlw	0
  5328   001C10  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5329   001C12  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5330   001C14  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5331   001C16  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5332   001C1A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5333   001C1E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5334   001C22  6A35               	clrf	___flmul@grs^0,c
  5335   001C24  502C               	movf	___flmul@a^0,w,c
  5336   001C26  0229               	mulwf	(___flmul@b+1)^0,c
  5337   001C28  CFF3 F03F          	movff	prodl,___flmul@temp
  5338   001C2C  CFF4 F040          	movff	prodh,___flmul@temp+1
  5339   001C30  503F               	movf	___flmul@temp^0,w,c
  5340   001C32  2635               	addwf	___flmul@grs^0,f,c
  5341   001C34  5040               	movf	(___flmul@temp+1)^0,w,c
  5342   001C36  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5343   001C38  0E00               	movlw	0
  5344   001C3A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5345   001C3C  0E00               	movlw	0
  5346   001C3E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5347   001C40  502D               	movf	(___flmul@a+1)^0,w,c
  5348   001C42  0228               	mulwf	___flmul@b^0,c
  5349   001C44  CFF3 F03F          	movff	prodl,___flmul@temp
  5350   001C48  CFF4 F040          	movff	prodh,___flmul@temp+1
  5351   001C4C  503F               	movf	___flmul@temp^0,w,c
  5352   001C4E  2635               	addwf	___flmul@grs^0,f,c
  5353   001C50  5040               	movf	(___flmul@temp+1)^0,w,c
  5354   001C52  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5355   001C54  0E00               	movlw	0
  5356   001C56  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5357   001C58  0E00               	movlw	0
  5358   001C5A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5359   001C5C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5360   001C60  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5361   001C64  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5362   001C68  6A35               	clrf	___flmul@grs^0,c
  5363   001C6A  502C               	movf	___flmul@a^0,w,c
  5364   001C6C  0228               	mulwf	___flmul@b^0,c
  5365   001C6E  CFF3 F03F          	movff	prodl,___flmul@temp
  5366   001C72  CFF4 F040          	movff	prodh,___flmul@temp+1
  5367   001C76  503F               	movf	___flmul@temp^0,w,c
  5368   001C78  2635               	addwf	___flmul@grs^0,f,c
  5369   001C7A  5040               	movf	(___flmul@temp+1)^0,w,c
  5370   001C7C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5371   001C7E  0E00               	movlw	0
  5372   001C80  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5373   001C82  0E00               	movlw	0
  5374   001C84  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5375   001C86  502E               	movf	(___flmul@a+2)^0,w,c
  5376   001C88  0229               	mulwf	(___flmul@b+1)^0,c
  5377   001C8A  CFF3 F03F          	movff	prodl,___flmul@temp
  5378   001C8E  CFF4 F040          	movff	prodh,___flmul@temp+1
  5379   001C92  503F               	movf	___flmul@temp^0,w,c
  5380   001C94  263B               	addwf	___flmul@prod^0,f,c
  5381   001C96  5040               	movf	(___flmul@temp+1)^0,w,c
  5382   001C98  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5383   001C9A  0E00               	movlw	0
  5384   001C9C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5385   001C9E  0E00               	movlw	0
  5386   001CA0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5387   001CA2  502D               	movf	(___flmul@a+1)^0,w,c
  5388   001CA4  022A               	mulwf	(___flmul@b+2)^0,c
  5389   001CA6  CFF3 F03F          	movff	prodl,___flmul@temp
  5390   001CAA  CFF4 F040          	movff	prodh,___flmul@temp+1
  5391   001CAE  503F               	movf	___flmul@temp^0,w,c
  5392   001CB0  263B               	addwf	___flmul@prod^0,f,c
  5393   001CB2  5040               	movf	(___flmul@temp+1)^0,w,c
  5394   001CB4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5395   001CB6  0E00               	movlw	0
  5396   001CB8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5397   001CBA  0E00               	movlw	0
  5398   001CBC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5399   001CBE  502E               	movf	(___flmul@a+2)^0,w,c
  5400   001CC0  022A               	mulwf	(___flmul@b+2)^0,c
  5401   001CC2  CFF3 F03F          	movff	prodl,___flmul@temp
  5402   001CC6  CFF4 F040          	movff	prodh,___flmul@temp+1
  5403   001CCA  503F               	movf	___flmul@temp^0,w,c
  5404   001CCC  6E30               	movwf	??___flmul^0,c
  5405   001CCE  5040               	movf	(___flmul@temp+1)^0,w,c
  5406   001CD0  6E31               	movwf	(??___flmul+1)^0,c
  5407   001CD2  6A32               	clrf	(??___flmul+2)^0,c
  5408   001CD4  6A33               	clrf	(??___flmul+3)^0,c
  5409   001CD6  C032  F033         	movff	??___flmul+2,??___flmul+3
  5410   001CDA  C031  F032         	movff	??___flmul+1,??___flmul+2
  5411   001CDE  C030  F031         	movff	??___flmul,??___flmul+1
  5412   001CE2  6A30               	clrf	??___flmul^0,c
  5413   001CE4  5030               	movf	??___flmul^0,w,c
  5414   001CE6  263B               	addwf	___flmul@prod^0,f,c
  5415   001CE8  5031               	movf	(??___flmul+1)^0,w,c
  5416   001CEA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5417   001CEC  5032               	movf	(??___flmul+2)^0,w,c
  5418   001CEE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5419   001CF0  5033               	movf	(??___flmul+3)^0,w,c
  5420   001CF2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5421   001CF4  C035  F030         	movff	___flmul@grs,??___flmul
  5422   001CF8  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  5423   001CFC  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  5424   001D00  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  5425   001D04  0E19               	movlw	25
  5426   001D06  EF8A  F00E         	goto	u4780
  5427   001D0A                     u4785:
  5428   001D0A  90D8               	bcf	status,0,c
  5429   001D0C  3233               	rrcf	(??___flmul+3)^0,f,c
  5430   001D0E  3232               	rrcf	(??___flmul+2)^0,f,c
  5431   001D10  3231               	rrcf	(??___flmul+1)^0,f,c
  5432   001D12  3230               	rrcf	??___flmul^0,f,c
  5433   001D14                     u4780:
  5434   001D14  2EE8               	decfsz	wreg,f,c
  5435   001D16  EF85  F00E         	goto	u4785
  5436   001D1A  5030               	movf	??___flmul^0,w,c
  5437   001D1C  263B               	addwf	___flmul@prod^0,f,c
  5438   001D1E  5031               	movf	(??___flmul+1)^0,w,c
  5439   001D20  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5440   001D22  5032               	movf	(??___flmul+2)^0,w,c
  5441   001D24  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5442   001D26  5033               	movf	(??___flmul+3)^0,w,c
  5443   001D28  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5444   001D2A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5445   001D2E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5446   001D32  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5447   001D36  6A35               	clrf	___flmul@grs^0,c
  5448   001D38  5039               	movf	___flmul@aexp^0,w,c
  5449   001D3A  C03A  F030         	movff	___flmul@bexp,??___flmul
  5450   001D3E  6A31               	clrf	(??___flmul+1)^0,c
  5451   001D40  2630               	addwf	??___flmul^0,f,c
  5452   001D42  0E00               	movlw	0
  5453   001D44  2231               	addwfc	(??___flmul+1)^0,f,c
  5454   001D46  0E82               	movlw	130
  5455   001D48  2430               	addwf	??___flmul^0,w,c
  5456   001D4A  6E3F               	movwf	___flmul@temp^0,c
  5457   001D4C  0EFF               	movlw	255
  5458   001D4E  2031               	addwfc	(??___flmul+1)^0,w,c
  5459   001D50  6E40               	movwf	(___flmul@temp+1)^0,c
  5460   001D52  EFC0  F00E         	goto	l5516
  5461   001D56                     l5510:
  5462   001D56  90D8               	bcf	status,0,c
  5463   001D58  363B               	rlcf	___flmul@prod^0,f,c
  5464   001D5A  363C               	rlcf	(___flmul@prod+1)^0,f,c
  5465   001D5C  363D               	rlcf	(___flmul@prod+2)^0,f,c
  5466   001D5E  363E               	rlcf	(___flmul@prod+3)^0,f,c
  5467   001D60  AE38               	btfss	(___flmul@grs+3)^0,7,c
  5468   001D62  EFB5  F00E         	goto	u4791
  5469   001D66  EFB7  F00E         	goto	u4790
  5470   001D6A                     u4791:
  5471   001D6A  EFB8  F00E         	goto	l1526
  5472   001D6E                     u4790:
  5473   001D6E  803B               	bsf	___flmul@prod^0,0,c
  5474   001D70                     l1526:
  5475   001D70  90D8               	bcf	status,0,c
  5476   001D72  3635               	rlcf	___flmul@grs^0,f,c
  5477   001D74  3636               	rlcf	(___flmul@grs+1)^0,f,c
  5478   001D76  3637               	rlcf	(___flmul@grs+2)^0,f,c
  5479   001D78  3638               	rlcf	(___flmul@grs+3)^0,f,c
  5480   001D7A  063F               	decf	___flmul@temp^0,f,c
  5481   001D7C  A0D8               	btfss	status,0,c
  5482   001D7E  0640               	decf	(___flmul@temp+1)^0,f,c
  5483   001D80                     l5516:
  5484   001D80  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  5485   001D82  EFC5  F00E         	goto	u4801
  5486   001D86  EFC7  F00E         	goto	u4800
  5487   001D8A                     u4801:
  5488   001D8A  EFAB  F00E         	goto	l5510
  5489   001D8E                     u4800:
  5490   001D8E  0E00               	movlw	0
  5491   001D90  6E39               	movwf	___flmul@aexp^0,c
  5492   001D92  AE38               	btfss	(___flmul@grs+3)^0,7,c
  5493   001D94  EFCE  F00E         	goto	u4811
  5494   001D98  EFD0  F00E         	goto	u4810
  5495   001D9C                     u4811:
  5496   001D9C  EFF4  F00E         	goto	l1528
  5497   001DA0                     u4810:
  5498   001DA0  0EFF               	movlw	255
  5499   001DA2  1435               	andwf	___flmul@grs^0,w,c
  5500   001DA4  6E30               	movwf	??___flmul^0,c
  5501   001DA6  0EFF               	movlw	255
  5502   001DA8  1436               	andwf	(___flmul@grs+1)^0,w,c
  5503   001DAA  6E31               	movwf	(??___flmul+1)^0,c
  5504   001DAC  0EFF               	movlw	255
  5505   001DAE  1437               	andwf	(___flmul@grs+2)^0,w,c
  5506   001DB0  6E32               	movwf	(??___flmul+2)^0,c
  5507   001DB2  0E7F               	movlw	127
  5508   001DB4  1438               	andwf	(___flmul@grs+3)^0,w,c
  5509   001DB6  6E33               	movwf	(??___flmul+3)^0,c
  5510   001DB8  5030               	movf	??___flmul^0,w,c
  5511   001DBA  1031               	iorwf	(??___flmul+1)^0,w,c
  5512   001DBC  1032               	iorwf	(??___flmul+2)^0,w,c
  5513   001DBE  1033               	iorwf	(??___flmul+3)^0,w,c
  5514   001DC0  B4D8               	btfsc	status,2,c
  5515   001DC2  EFE5  F00E         	goto	u4821
  5516   001DC6  EFE7  F00E         	goto	u4820
  5517   001DCA                     u4821:
  5518   001DCA  EFEB  F00E         	goto	l1529
  5519   001DCE                     u4820:
  5520   001DCE                     l5524:
  5521   001DCE  0E01               	movlw	1
  5522   001DD0  6E39               	movwf	___flmul@aexp^0,c
  5523   001DD2  EFF4  F00E         	goto	l1528
  5524   001DD6                     l1529:
  5525   001DD6  A03B               	btfss	___flmul@prod^0,0,c
  5526   001DD8  EFF0  F00E         	goto	u4831
  5527   001DDC  EFF2  F00E         	goto	u4830
  5528   001DE0                     u4831:
  5529   001DE0  EFF4  F00E         	goto	l1528
  5530   001DE4                     u4830:
  5531   001DE4  EFE7  F00E         	goto	l5524
  5532   001DE8                     l1528:
  5533   001DE8  5039               	movf	___flmul@aexp^0,w,c
  5534   001DEA  B4D8               	btfsc	status,2,c
  5535   001DEC  EFFA  F00E         	goto	u4841
  5536   001DF0  EFFC  F00E         	goto	u4840
  5537   001DF4                     u4841:
  5538   001DF4  EF20  F00F         	goto	l5536
  5539   001DF8                     u4840:
  5540   001DF8  0E01               	movlw	1
  5541   001DFA  263B               	addwf	___flmul@prod^0,f,c
  5542   001DFC  0E00               	movlw	0
  5543   001DFE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5544   001E00  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5545   001E02  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5546   001E04  A03E               	btfss	(___flmul@prod+3)^0,0,c
  5547   001E06  EF07  F00F         	goto	u4851
  5548   001E0A  EF09  F00F         	goto	u4850
  5549   001E0E                     u4851:
  5550   001E0E  EF20  F00F         	goto	l5536
  5551   001E12                     u4850:
  5552   001E12  C03B  F030         	movff	___flmul@prod,??___flmul
  5553   001E16  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  5554   001E1A  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  5555   001E1E  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  5556   001E22  3433               	rlcf	(??___flmul+3)^0,w,c
  5557   001E24  3233               	rrcf	(??___flmul+3)^0,f,c
  5558   001E26  3232               	rrcf	(??___flmul+2)^0,f,c
  5559   001E28  3231               	rrcf	(??___flmul+1)^0,f,c
  5560   001E2A  3230               	rrcf	??___flmul^0,f,c
  5561   001E2C  C030  F03B         	movff	??___flmul,___flmul@prod
  5562   001E30  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  5563   001E34  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  5564   001E38  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  5565   001E3C  4A3F               	infsnz	___flmul@temp^0,f,c
  5566   001E3E  2A40               	incf	(___flmul@temp+1)^0,f,c
  5567   001E40                     l5536:
  5568   001E40  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  5569   001E42  EF2B  F00F         	goto	u4861
  5570   001E46  5040               	movf	(___flmul@temp+1)^0,w,c
  5571   001E48  E108               	bnz	u4860
  5572   001E4A  283F               	incf	___flmul@temp^0,w,c
  5573   001E4C  A0D8               	btfss	status,0,c
  5574   001E4E  EF2B  F00F         	goto	u4861
  5575   001E52  EF2D  F00F         	goto	u4860
  5576   001E56                     u4861:
  5577   001E56  EF37  F00F         	goto	l5540
  5578   001E5A                     u4860:
  5579   001E5A  0E00               	movlw	0
  5580   001E5C  6E3B               	movwf	___flmul@prod^0,c
  5581   001E5E  0E00               	movlw	0
  5582   001E60  6E3C               	movwf	(___flmul@prod+1)^0,c
  5583   001E62  0E80               	movlw	128
  5584   001E64  6E3D               	movwf	(___flmul@prod+2)^0,c
  5585   001E66  0E7F               	movlw	127
  5586   001E68  6E3E               	movwf	(___flmul@prod+3)^0,c
  5587   001E6A  EF65  F00F         	goto	l5552
  5588   001E6E                     l5540:
  5589   001E6E  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  5590   001E70  EF44  F00F         	goto	u4870
  5591   001E74  5040               	movf	(___flmul@temp+1)^0,w,c
  5592   001E76  E106               	bnz	u4871
  5593   001E78  043F               	decf	___flmul@temp^0,w,c
  5594   001E7A  B0D8               	btfsc	status,0,c
  5595   001E7C  EF42  F00F         	goto	u4871
  5596   001E80  EF44  F00F         	goto	u4870
  5597   001E84                     u4871:
  5598   001E84  EF50  F00F         	goto	l1536
  5599   001E88                     u4870:
  5600   001E88  0E00               	movlw	0
  5601   001E8A  6E3B               	movwf	___flmul@prod^0,c
  5602   001E8C  0E00               	movlw	0
  5603   001E8E  6E3C               	movwf	(___flmul@prod+1)^0,c
  5604   001E90  0E00               	movlw	0
  5605   001E92  6E3D               	movwf	(___flmul@prod+2)^0,c
  5606   001E94  0E00               	movlw	0
  5607   001E96  6E3E               	movwf	(___flmul@prod+3)^0,c
  5608   001E98  0E00               	movlw	0
  5609   001E9A  6E34               	movwf	___flmul@sign^0,c
  5610   001E9C  EF65  F00F         	goto	l5552
  5611   001EA0                     l1536:
  5612   001EA0  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  5613   001EA4  0EFF               	movlw	255
  5614   001EA6  163B               	andwf	___flmul@prod^0,f,c
  5615   001EA8  0EFF               	movlw	255
  5616   001EAA  163C               	andwf	(___flmul@prod+1)^0,f,c
  5617   001EAC  0E7F               	movlw	127
  5618   001EAE  163D               	andwf	(___flmul@prod+2)^0,f,c
  5619   001EB0  0E00               	movlw	0
  5620   001EB2  163E               	andwf	(___flmul@prod+3)^0,f,c
  5621   001EB4  A03A               	btfss	___flmul@bexp^0,0,c
  5622   001EB6  EF5F  F00F         	goto	u4881
  5623   001EBA  EF61  F00F         	goto	u4880
  5624   001EBE                     u4881:
  5625   001EBE  EF62  F00F         	goto	l5550
  5626   001EC2                     u4880:
  5627   001EC2  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  5628   001EC4                     l5550:
  5629   001EC4  90D8               	bcf	status,0,c
  5630   001EC6  303A               	rrcf	___flmul@bexp^0,w,c
  5631   001EC8  6E3E               	movwf	(___flmul@prod+3)^0,c
  5632   001ECA                     l5552:
  5633   001ECA  5034               	movf	___flmul@sign^0,w,c
  5634   001ECC  123E               	iorwf	(___flmul@prod+3)^0,f,c
  5635   001ECE  C03B  F028         	movff	___flmul@prod,?___flmul
  5636   001ED2  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  5637   001ED6  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  5638   001EDA  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  5639   001EDE                     l1523:
  5640   001EDE  0012               	return		;funcret
  5641   001EE0                     __end_of___flmul:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function ___fldiv *****************
  5645 ;; Defined at:
  5646 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  b               4   14[COMRAM] unsigned char 
  5649 ;;  a               4   18[COMRAM] unsigned char 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  grs             4   33[COMRAM] unsigned long 
  5652 ;;  rem             4   26[COMRAM] unsigned long 
  5653 ;;  new_exp         2   31[COMRAM] short 
  5654 ;;  aexp            1   38[COMRAM] unsigned char 
  5655 ;;  bexp            1   37[COMRAM] unsigned char 
  5656 ;;  sign            1   30[COMRAM] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  4   14[COMRAM] unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:       25 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 2
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_PWM1_SetDutyCycle
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text24
  5681   001EE0                     __ptext24:
  5682                           	callstack 0
  5683   001EE0                     ___fldiv:
  5684                           	callstack 25
  5685   001EE0  5012               	movf	(___fldiv@b+3)^0,w,c
  5686   001EE2  0B80               	andlw	128
  5687   001EE4  6E1F               	movwf	___fldiv@sign^0,c
  5688   001EE6  5012               	movf	(___fldiv@b+3)^0,w,c
  5689   001EE8  2412               	addwf	(___fldiv@b+3)^0,w,c
  5690   001EEA  6E26               	movwf	___fldiv@bexp^0,c
  5691   001EEC  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5692   001EEE  EF7B  F00F         	goto	u4471
  5693   001EF2  EF7D  F00F         	goto	u4470
  5694   001EF6                     u4471:
  5695   001EF6  EF7E  F00F         	goto	l5296
  5696   001EFA                     u4470:
  5697   001EFA  8026               	bsf	___fldiv@bexp^0,0,c
  5698   001EFC                     l5296:
  5699   001EFC  5026               	movf	___fldiv@bexp^0,w,c
  5700   001EFE  B4D8               	btfsc	status,2,c
  5701   001F00  EF84  F00F         	goto	u4481
  5702   001F04  EF86  F00F         	goto	u4480
  5703   001F08                     u4481:
  5704   001F08  EF9B  F00F         	goto	l5306
  5705   001F0C                     u4480:
  5706   001F0C  2826               	incf	___fldiv@bexp^0,w,c
  5707   001F0E  A4D8               	btfss	status,2,c
  5708   001F10  EF8C  F00F         	goto	u4491
  5709   001F14  EF8E  F00F         	goto	u4490
  5710   001F18                     u4491:
  5711   001F18  EF96  F00F         	goto	l5302
  5712   001F1C                     u4490:
  5713   001F1C  0E00               	movlw	0
  5714   001F1E  6E0F               	movwf	___fldiv@b^0,c
  5715   001F20  0E00               	movlw	0
  5716   001F22  6E10               	movwf	(___fldiv@b+1)^0,c
  5717   001F24  0E00               	movlw	0
  5718   001F26  6E11               	movwf	(___fldiv@b+2)^0,c
  5719   001F28  0E00               	movlw	0
  5720   001F2A  6E12               	movwf	(___fldiv@b+3)^0,c
  5721   001F2C                     l5302:
  5722   001F2C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5723   001F2E  0E00               	movlw	0
  5724   001F30  6E12               	movwf	(___fldiv@b+3)^0,c
  5725   001F32  EFA3  F00F         	goto	l5308
  5726   001F36                     l5306:
  5727   001F36  0E00               	movlw	0
  5728   001F38  6E0F               	movwf	___fldiv@b^0,c
  5729   001F3A  0E00               	movlw	0
  5730   001F3C  6E10               	movwf	(___fldiv@b+1)^0,c
  5731   001F3E  0E00               	movlw	0
  5732   001F40  6E11               	movwf	(___fldiv@b+2)^0,c
  5733   001F42  0E00               	movlw	0
  5734   001F44  6E12               	movwf	(___fldiv@b+3)^0,c
  5735   001F46                     l5308:
  5736   001F46  5016               	movf	(___fldiv@a+3)^0,w,c
  5737   001F48  0B80               	andlw	128
  5738   001F4A  1A1F               	xorwf	___fldiv@sign^0,f,c
  5739   001F4C  5016               	movf	(___fldiv@a+3)^0,w,c
  5740   001F4E  2416               	addwf	(___fldiv@a+3)^0,w,c
  5741   001F50  6E27               	movwf	___fldiv@aexp^0,c
  5742   001F52  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5743   001F54  EFAE  F00F         	goto	u4501
  5744   001F58  EFB0  F00F         	goto	u4500
  5745   001F5C                     u4501:
  5746   001F5C  EFB1  F00F         	goto	l5316
  5747   001F60                     u4500:
  5748   001F60  8027               	bsf	___fldiv@aexp^0,0,c
  5749   001F62                     l5316:
  5750   001F62  5027               	movf	___fldiv@aexp^0,w,c
  5751   001F64  B4D8               	btfsc	status,2,c
  5752   001F66  EFB7  F00F         	goto	u4511
  5753   001F6A  EFB9  F00F         	goto	u4510
  5754   001F6E                     u4511:
  5755   001F6E  EFCE  F00F         	goto	l5326
  5756   001F72                     u4510:
  5757   001F72  2827               	incf	___fldiv@aexp^0,w,c
  5758   001F74  A4D8               	btfss	status,2,c
  5759   001F76  EFBF  F00F         	goto	u4521
  5760   001F7A  EFC1  F00F         	goto	u4520
  5761   001F7E                     u4521:
  5762   001F7E  EFC9  F00F         	goto	l5322
  5763   001F82                     u4520:
  5764   001F82  0E00               	movlw	0
  5765   001F84  6E13               	movwf	___fldiv@a^0,c
  5766   001F86  0E00               	movlw	0
  5767   001F88  6E14               	movwf	(___fldiv@a+1)^0,c
  5768   001F8A  0E00               	movlw	0
  5769   001F8C  6E15               	movwf	(___fldiv@a+2)^0,c
  5770   001F8E  0E00               	movlw	0
  5771   001F90  6E16               	movwf	(___fldiv@a+3)^0,c
  5772   001F92                     l5322:
  5773   001F92  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5774   001F94  0E00               	movlw	0
  5775   001F96  6E16               	movwf	(___fldiv@a+3)^0,c
  5776   001F98  EFD6  F00F         	goto	l5328
  5777   001F9C                     l5326:
  5778   001F9C  0E00               	movlw	0
  5779   001F9E  6E13               	movwf	___fldiv@a^0,c
  5780   001FA0  0E00               	movlw	0
  5781   001FA2  6E14               	movwf	(___fldiv@a+1)^0,c
  5782   001FA4  0E00               	movlw	0
  5783   001FA6  6E15               	movwf	(___fldiv@a+2)^0,c
  5784   001FA8  0E00               	movlw	0
  5785   001FAA  6E16               	movwf	(___fldiv@a+3)^0,c
  5786   001FAC                     l5328:
  5787   001FAC  5013               	movf	___fldiv@a^0,w,c
  5788   001FAE  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5789   001FB0  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5790   001FB2  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5791   001FB4  A4D8               	btfss	status,2,c
  5792   001FB6  EFDF  F00F         	goto	u4531
  5793   001FBA  EFE1  F00F         	goto	u4530
  5794   001FBE                     u4531:
  5795   001FBE  EFF9  F00F         	goto	l5340
  5796   001FC2                     u4530:
  5797   001FC2  0E00               	movlw	0
  5798   001FC4  6E0F               	movwf	___fldiv@b^0,c
  5799   001FC6  0E00               	movlw	0
  5800   001FC8  6E10               	movwf	(___fldiv@b+1)^0,c
  5801   001FCA  0E00               	movlw	0
  5802   001FCC  6E11               	movwf	(___fldiv@b+2)^0,c
  5803   001FCE  0E00               	movlw	0
  5804   001FD0  6E12               	movwf	(___fldiv@b+3)^0,c
  5805   001FD2  0E80               	movlw	128
  5806   001FD4  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5807   001FD6  0E7F               	movlw	127
  5808   001FD8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5809   001FDA                     l5334:
  5810   001FDA  501F               	movf	___fldiv@sign^0,w,c
  5811   001FDC  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5812   001FDE  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5813   001FE2  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5814   001FE6  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5815   001FEA  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5816   001FEE  EF3C  F011         	goto	l1487
  5817   001FF2                     l5340:
  5818   001FF2  5026               	movf	___fldiv@bexp^0,w,c
  5819   001FF4  A4D8               	btfss	status,2,c
  5820   001FF6  EFFF  F00F         	goto	u4541
  5821   001FFA  EF01  F010         	goto	u4540
  5822   001FFE                     u4541:
  5823   001FFE  EF0B  F010         	goto	l5348
  5824   002002                     u4540:
  5825   002002  0E00               	movlw	0
  5826   002004  6E0F               	movwf	?___fldiv^0,c
  5827   002006  0E00               	movlw	0
  5828   002008  6E10               	movwf	(?___fldiv+1)^0,c
  5829   00200A  0E00               	movlw	0
  5830   00200C  6E11               	movwf	(?___fldiv+2)^0,c
  5831   00200E  0E00               	movlw	0
  5832   002010  6E12               	movwf	(?___fldiv+3)^0,c
  5833   002012  EF3C  F011         	goto	l1487
  5834   002016                     l5348:
  5835   002016  5027               	movf	___fldiv@aexp^0,w,c
  5836   002018  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5837   00201C  6A18               	clrf	(??___fldiv+1)^0,c
  5838   00201E  5E17               	subwf	??___fldiv^0,f,c
  5839   002020  0E00               	movlw	0
  5840   002022  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5841   002024  0E7F               	movlw	127
  5842   002026  2417               	addwf	??___fldiv^0,w,c
  5843   002028  6E20               	movwf	___fldiv@new_exp^0,c
  5844   00202A  0E00               	movlw	0
  5845   00202C  2018               	addwfc	(??___fldiv+1)^0,w,c
  5846   00202E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5847   002030  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5848   002034  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5849   002038  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5850   00203C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5851   002040  0E00               	movlw	0
  5852   002042  6E0F               	movwf	___fldiv@b^0,c
  5853   002044  0E00               	movlw	0
  5854   002046  6E10               	movwf	(___fldiv@b+1)^0,c
  5855   002048  0E00               	movlw	0
  5856   00204A  6E11               	movwf	(___fldiv@b+2)^0,c
  5857   00204C  0E00               	movlw	0
  5858   00204E  6E12               	movwf	(___fldiv@b+3)^0,c
  5859   002050  0E00               	movlw	0
  5860   002052  6E22               	movwf	___fldiv@grs^0,c
  5861   002054  0E00               	movlw	0
  5862   002056  6E23               	movwf	(___fldiv@grs+1)^0,c
  5863   002058  0E00               	movlw	0
  5864   00205A  6E24               	movwf	(___fldiv@grs+2)^0,c
  5865   00205C  0E00               	movlw	0
  5866   00205E  6E25               	movwf	(___fldiv@grs+3)^0,c
  5867   002060  0E00               	movlw	0
  5868   002062  6E27               	movwf	___fldiv@aexp^0,c
  5869   002064  EF6C  F010         	goto	l1489
  5870   002068                     l5358:
  5871   002068  5027               	movf	___fldiv@aexp^0,w,c
  5872   00206A  B4D8               	btfsc	status,2,c
  5873   00206C  EF3A  F010         	goto	u4551
  5874   002070  EF3C  F010         	goto	u4550
  5875   002074                     u4551:
  5876   002074  EF53  F010         	goto	l5366
  5877   002078                     u4550:
  5878   002078  90D8               	bcf	status,0,c
  5879   00207A  361B               	rlcf	___fldiv@rem^0,f,c
  5880   00207C  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5881   00207E  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5882   002080  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5883   002082  90D8               	bcf	status,0,c
  5884   002084  360F               	rlcf	___fldiv@b^0,f,c
  5885   002086  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5886   002088  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5887   00208A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5888   00208C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5889   00208E  EF4B  F010         	goto	u4561
  5890   002092  EF4D  F010         	goto	u4560
  5891   002096                     u4561:
  5892   002096  EF4E  F010         	goto	l1492
  5893   00209A                     u4560:
  5894   00209A  800F               	bsf	___fldiv@b^0,0,c
  5895   00209C                     l1492:
  5896   00209C  90D8               	bcf	status,0,c
  5897   00209E  3622               	rlcf	___fldiv@grs^0,f,c
  5898   0020A0  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5899   0020A2  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5900   0020A4  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5901   0020A6                     l5366:
  5902   0020A6  5013               	movf	___fldiv@a^0,w,c
  5903   0020A8  5C1B               	subwf	___fldiv@rem^0,w,c
  5904   0020AA  5014               	movf	(___fldiv@a+1)^0,w,c
  5905   0020AC  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5906   0020AE  5015               	movf	(___fldiv@a+2)^0,w,c
  5907   0020B0  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5908   0020B2  5016               	movf	(___fldiv@a+3)^0,w,c
  5909   0020B4  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5910   0020B6  A0D8               	btfss	status,0,c
  5911   0020B8  EF60  F010         	goto	u4571
  5912   0020BC  EF62  F010         	goto	u4570
  5913   0020C0                     u4571:
  5914   0020C0  EF6B  F010         	goto	l5372
  5915   0020C4                     u4570:
  5916   0020C4  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5917   0020C6  5013               	movf	___fldiv@a^0,w,c
  5918   0020C8  5E1B               	subwf	___fldiv@rem^0,f,c
  5919   0020CA  5014               	movf	(___fldiv@a+1)^0,w,c
  5920   0020CC  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5921   0020CE  5015               	movf	(___fldiv@a+2)^0,w,c
  5922   0020D0  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5923   0020D2  5016               	movf	(___fldiv@a+3)^0,w,c
  5924   0020D4  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5925   0020D6                     l5372:
  5926   0020D6  2A27               	incf	___fldiv@aexp^0,f,c
  5927   0020D8                     l1489:
  5928   0020D8  0E19               	movlw	25
  5929   0020DA  6427               	cpfsgt	___fldiv@aexp^0,c
  5930   0020DC  EF72  F010         	goto	u4581
  5931   0020E0  EF74  F010         	goto	u4580
  5932   0020E4                     u4581:
  5933   0020E4  EF34  F010         	goto	l5358
  5934   0020E8                     u4580:
  5935   0020E8  501B               	movf	___fldiv@rem^0,w,c
  5936   0020EA  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5937   0020EC  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5938   0020EE  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5939   0020F0  B4D8               	btfsc	status,2,c
  5940   0020F2  EF7D  F010         	goto	u4591
  5941   0020F6  EF7F  F010         	goto	u4590
  5942   0020FA                     u4591:
  5943   0020FA  EF97  F010         	goto	l5384
  5944   0020FE                     u4590:
  5945   0020FE  8022               	bsf	___fldiv@grs^0,0,c
  5946   002100  EF97  F010         	goto	l5384
  5947   002104                     l5378:
  5948   002104  90D8               	bcf	status,0,c
  5949   002106  360F               	rlcf	___fldiv@b^0,f,c
  5950   002108  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5951   00210A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5952   00210C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5953   00210E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5954   002110  EF8C  F010         	goto	u4601
  5955   002114  EF8E  F010         	goto	u4600
  5956   002118                     u4601:
  5957   002118  EF8F  F010         	goto	l1498
  5958   00211C                     u4600:
  5959   00211C  800F               	bsf	___fldiv@b^0,0,c
  5960   00211E                     l1498:
  5961   00211E  90D8               	bcf	status,0,c
  5962   002120  3622               	rlcf	___fldiv@grs^0,f,c
  5963   002122  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5964   002124  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5965   002126  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5966   002128  0620               	decf	___fldiv@new_exp^0,f,c
  5967   00212A  A0D8               	btfss	status,0,c
  5968   00212C  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5969   00212E                     l5384:
  5970   00212E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5971   002130  EF9C  F010         	goto	u4611
  5972   002134  EF9E  F010         	goto	u4610
  5973   002138                     u4611:
  5974   002138  EF82  F010         	goto	l5378
  5975   00213C                     u4610:
  5976   00213C  0E00               	movlw	0
  5977   00213E  6E27               	movwf	___fldiv@aexp^0,c
  5978   002140  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5979   002142  EFA5  F010         	goto	u4621
  5980   002146  EFA7  F010         	goto	u4620
  5981   00214A                     u4621:
  5982   00214A  EFCB  F010         	goto	l1500
  5983   00214E                     u4620:
  5984   00214E  0EFF               	movlw	255
  5985   002150  1422               	andwf	___fldiv@grs^0,w,c
  5986   002152  6E17               	movwf	??___fldiv^0,c
  5987   002154  0EFF               	movlw	255
  5988   002156  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5989   002158  6E18               	movwf	(??___fldiv+1)^0,c
  5990   00215A  0EFF               	movlw	255
  5991   00215C  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5992   00215E  6E19               	movwf	(??___fldiv+2)^0,c
  5993   002160  0E7F               	movlw	127
  5994   002162  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5995   002164  6E1A               	movwf	(??___fldiv+3)^0,c
  5996   002166  5017               	movf	??___fldiv^0,w,c
  5997   002168  1018               	iorwf	(??___fldiv+1)^0,w,c
  5998   00216A  1019               	iorwf	(??___fldiv+2)^0,w,c
  5999   00216C  101A               	iorwf	(??___fldiv+3)^0,w,c
  6000   00216E  B4D8               	btfsc	status,2,c
  6001   002170  EFBC  F010         	goto	u4631
  6002   002174  EFBE  F010         	goto	u4630
  6003   002178                     u4631:
  6004   002178  EFC2  F010         	goto	l1501
  6005   00217C                     u4630:
  6006   00217C                     l5392:
  6007   00217C  0E01               	movlw	1
  6008   00217E  6E27               	movwf	___fldiv@aexp^0,c
  6009   002180  EFCB  F010         	goto	l1500
  6010   002184                     l1501:
  6011   002184  A00F               	btfss	___fldiv@b^0,0,c
  6012   002186  EFC7  F010         	goto	u4641
  6013   00218A  EFC9  F010         	goto	u4640
  6014   00218E                     u4641:
  6015   00218E  EFCB  F010         	goto	l1500
  6016   002192                     u4640:
  6017   002192  EFBE  F010         	goto	l5392
  6018   002196                     l1500:
  6019   002196  5027               	movf	___fldiv@aexp^0,w,c
  6020   002198  B4D8               	btfsc	status,2,c
  6021   00219A  EFD1  F010         	goto	u4651
  6022   00219E  EFD3  F010         	goto	u4650
  6023   0021A2                     u4651:
  6024   0021A2  EFF7  F010         	goto	l5404
  6025   0021A6                     u4650:
  6026   0021A6  0E01               	movlw	1
  6027   0021A8  260F               	addwf	___fldiv@b^0,f,c
  6028   0021AA  0E00               	movlw	0
  6029   0021AC  2210               	addwfc	(___fldiv@b+1)^0,f,c
  6030   0021AE  2211               	addwfc	(___fldiv@b+2)^0,f,c
  6031   0021B0  2212               	addwfc	(___fldiv@b+3)^0,f,c
  6032   0021B2  A012               	btfss	(___fldiv@b+3)^0,0,c
  6033   0021B4  EFDE  F010         	goto	u4661
  6034   0021B8  EFE0  F010         	goto	u4660
  6035   0021BC                     u4661:
  6036   0021BC  EFF7  F010         	goto	l5404
  6037   0021C0                     u4660:
  6038   0021C0  C00F  F017         	movff	___fldiv@b,??___fldiv
  6039   0021C4  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  6040   0021C8  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  6041   0021CC  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  6042   0021D0  341A               	rlcf	(??___fldiv+3)^0,w,c
  6043   0021D2  321A               	rrcf	(??___fldiv+3)^0,f,c
  6044   0021D4  3219               	rrcf	(??___fldiv+2)^0,f,c
  6045   0021D6  3218               	rrcf	(??___fldiv+1)^0,f,c
  6046   0021D8  3217               	rrcf	??___fldiv^0,f,c
  6047   0021DA  C017  F00F         	movff	??___fldiv,___fldiv@b
  6048   0021DE  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  6049   0021E2  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  6050   0021E6  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  6051   0021EA  4A20               	infsnz	___fldiv@new_exp^0,f,c
  6052   0021EC  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  6053   0021EE                     l5404:
  6054   0021EE  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6055   0021F0  EF02  F011         	goto	u4671
  6056   0021F4  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6057   0021F6  E108               	bnz	u4670
  6058   0021F8  2820               	incf	___fldiv@new_exp^0,w,c
  6059   0021FA  A0D8               	btfss	status,0,c
  6060   0021FC  EF02  F011         	goto	u4671
  6061   002200  EF04  F011         	goto	u4670
  6062   002204                     u4671:
  6063   002204  EF0F  F011         	goto	l5408
  6064   002208                     u4670:
  6065   002208  0E00               	movlw	0
  6066   00220A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6067   00220C  6820               	setf	___fldiv@new_exp^0,c
  6068   00220E  0E00               	movlw	0
  6069   002210  6E0F               	movwf	___fldiv@b^0,c
  6070   002212  0E00               	movlw	0
  6071   002214  6E10               	movwf	(___fldiv@b+1)^0,c
  6072   002216  0E00               	movlw	0
  6073   002218  6E11               	movwf	(___fldiv@b+2)^0,c
  6074   00221A  0E00               	movlw	0
  6075   00221C  6E12               	movwf	(___fldiv@b+3)^0,c
  6076   00221E                     l5408:
  6077   00221E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6078   002220  EF1C  F011         	goto	u4680
  6079   002224  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6080   002226  E106               	bnz	u4681
  6081   002228  0420               	decf	___fldiv@new_exp^0,w,c
  6082   00222A  B0D8               	btfsc	status,0,c
  6083   00222C  EF1A  F011         	goto	u4681
  6084   002230  EF1C  F011         	goto	u4680
  6085   002234                     u4681:
  6086   002234  EF2A  F011         	goto	l5412
  6087   002238                     u4680:
  6088   002238  0E00               	movlw	0
  6089   00223A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6090   00223C  0E00               	movlw	0
  6091   00223E  6E20               	movwf	___fldiv@new_exp^0,c
  6092   002240  0E00               	movlw	0
  6093   002242  6E0F               	movwf	___fldiv@b^0,c
  6094   002244  0E00               	movlw	0
  6095   002246  6E10               	movwf	(___fldiv@b+1)^0,c
  6096   002248  0E00               	movlw	0
  6097   00224A  6E11               	movwf	(___fldiv@b+2)^0,c
  6098   00224C  0E00               	movlw	0
  6099   00224E  6E12               	movwf	(___fldiv@b+3)^0,c
  6100   002250  0E00               	movlw	0
  6101   002252  6E1F               	movwf	___fldiv@sign^0,c
  6102   002254                     l5412:
  6103   002254  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  6104   002258  A026               	btfss	___fldiv@bexp^0,0,c
  6105   00225A  EF31  F011         	goto	u4691
  6106   00225E  EF33  F011         	goto	u4690
  6107   002262                     u4691:
  6108   002262  EF36  F011         	goto	l5418
  6109   002266                     u4690:
  6110   002266  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6111   002268  EF37  F011         	goto	l5420
  6112   00226C                     l5418:
  6113   00226C  9E11               	bcf	(___fldiv@b+2)^0,7,c
  6114   00226E                     l5420:
  6115   00226E  90D8               	bcf	status,0,c
  6116   002270  3026               	rrcf	___fldiv@bexp^0,w,c
  6117   002272  6E12               	movwf	(___fldiv@b+3)^0,c
  6118   002274  EFED  F00F         	goto	l5334
  6119   002278                     l1487:
  6120   002278  0012               	return		;funcret
  6121   00227A                     __end_of___fldiv:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function ___fladd *****************
  6125 ;; Defined at:
  6126 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  b               4   64[COMRAM] unsigned char 
  6129 ;;  a               4   68[COMRAM] unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  grs             1   79[COMRAM] unsigned char 
  6132 ;;  bexp            1   78[COMRAM] unsigned char 
  6133 ;;  aexp            1   77[COMRAM] unsigned char 
  6134 ;;  signs           1   76[COMRAM] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  4   64[COMRAM] unsigned char 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6144 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6146 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6147 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;Total ram usage:       16 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; Hardware stack levels required when called: 2
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_PWM1_SetDutyCycle
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text25
  6159   0015F6                     __ptext25:
  6160                           	callstack 0
  6161   0015F6                     ___fladd:
  6162                           	callstack 25
  6163   0015F6  5044               	movf	(___fladd@b+3)^0,w,c
  6164   0015F8  0B80               	andlw	128
  6165   0015FA  6E4D               	movwf	___fladd@signs^0,c
  6166   0015FC  5044               	movf	(___fladd@b+3)^0,w,c
  6167   0015FE  2444               	addwf	(___fladd@b+3)^0,w,c
  6168   001600  6E4F               	movwf	___fladd@bexp^0,c
  6169   001602  AE43               	btfss	(___fladd@b+2)^0,7,c
  6170   001604  EF06  F00B         	goto	u4081
  6171   001608  EF08  F00B         	goto	u4080
  6172   00160C                     u4081:
  6173   00160C  EF09  F00B         	goto	l5094
  6174   001610                     u4080:
  6175   001610  804F               	bsf	___fladd@bexp^0,0,c
  6176   001612                     l5094:
  6177   001612  504F               	movf	___fladd@bexp^0,w,c
  6178   001614  B4D8               	btfsc	status,2,c
  6179   001616  EF0F  F00B         	goto	u4091
  6180   00161A  EF11  F00B         	goto	u4090
  6181   00161E                     u4091:
  6182   00161E  EF26  F00B         	goto	l5104
  6183   001622                     u4090:
  6184   001622  284F               	incf	___fladd@bexp^0,w,c
  6185   001624  A4D8               	btfss	status,2,c
  6186   001626  EF17  F00B         	goto	u4101
  6187   00162A  EF19  F00B         	goto	u4100
  6188   00162E                     u4101:
  6189   00162E  EF21  F00B         	goto	l5100
  6190   001632                     u4100:
  6191   001632  0E00               	movlw	0
  6192   001634  6E41               	movwf	___fladd@b^0,c
  6193   001636  0E00               	movlw	0
  6194   001638  6E42               	movwf	(___fladd@b+1)^0,c
  6195   00163A  0E00               	movlw	0
  6196   00163C  6E43               	movwf	(___fladd@b+2)^0,c
  6197   00163E  0E00               	movlw	0
  6198   001640  6E44               	movwf	(___fladd@b+3)^0,c
  6199   001642                     l5100:
  6200   001642  8E43               	bsf	(___fladd@b+2)^0,7,c
  6201   001644  0E00               	movlw	0
  6202   001646  6E44               	movwf	(___fladd@b+3)^0,c
  6203   001648  EF2E  F00B         	goto	l5106
  6204   00164C                     l5104:
  6205   00164C  0E00               	movlw	0
  6206   00164E  6E41               	movwf	___fladd@b^0,c
  6207   001650  0E00               	movlw	0
  6208   001652  6E42               	movwf	(___fladd@b+1)^0,c
  6209   001654  0E00               	movlw	0
  6210   001656  6E43               	movwf	(___fladd@b+2)^0,c
  6211   001658  0E00               	movlw	0
  6212   00165A  6E44               	movwf	(___fladd@b+3)^0,c
  6213   00165C                     l5106:
  6214   00165C  5048               	movf	(___fladd@a+3)^0,w,c
  6215   00165E  0B80               	andlw	128
  6216   001660  6E4E               	movwf	___fladd@aexp^0,c
  6217   001662  504D               	movf	___fladd@signs^0,w,c
  6218   001664  184E               	xorwf	___fladd@aexp^0,w,c
  6219   001666  B4D8               	btfsc	status,2,c
  6220   001668  EF38  F00B         	goto	u4111
  6221   00166C  EF3A  F00B         	goto	u4110
  6222   001670                     u4111:
  6223   001670  EF3B  F00B         	goto	l5112
  6224   001674                     u4110:
  6225   001674  8C4D               	bsf	___fladd@signs^0,6,c
  6226   001676                     l5112:
  6227   001676  5048               	movf	(___fladd@a+3)^0,w,c
  6228   001678  2448               	addwf	(___fladd@a+3)^0,w,c
  6229   00167A  6E4E               	movwf	___fladd@aexp^0,c
  6230   00167C  AE47               	btfss	(___fladd@a+2)^0,7,c
  6231   00167E  EF43  F00B         	goto	u4121
  6232   001682  EF45  F00B         	goto	u4120
  6233   001686                     u4121:
  6234   001686  EF46  F00B         	goto	l5118
  6235   00168A                     u4120:
  6236   00168A  804E               	bsf	___fladd@aexp^0,0,c
  6237   00168C                     l5118:
  6238   00168C  504E               	movf	___fladd@aexp^0,w,c
  6239   00168E  B4D8               	btfsc	status,2,c
  6240   001690  EF4C  F00B         	goto	u4131
  6241   001694  EF4E  F00B         	goto	u4130
  6242   001698                     u4131:
  6243   001698  EF63  F00B         	goto	l5128
  6244   00169C                     u4130:
  6245   00169C  284E               	incf	___fladd@aexp^0,w,c
  6246   00169E  A4D8               	btfss	status,2,c
  6247   0016A0  EF54  F00B         	goto	u4141
  6248   0016A4  EF56  F00B         	goto	u4140
  6249   0016A8                     u4141:
  6250   0016A8  EF5E  F00B         	goto	l5124
  6251   0016AC                     u4140:
  6252   0016AC  0E00               	movlw	0
  6253   0016AE  6E45               	movwf	___fladd@a^0,c
  6254   0016B0  0E00               	movlw	0
  6255   0016B2  6E46               	movwf	(___fladd@a+1)^0,c
  6256   0016B4  0E00               	movlw	0
  6257   0016B6  6E47               	movwf	(___fladd@a+2)^0,c
  6258   0016B8  0E00               	movlw	0
  6259   0016BA  6E48               	movwf	(___fladd@a+3)^0,c
  6260   0016BC                     l5124:
  6261   0016BC  8E47               	bsf	(___fladd@a+2)^0,7,c
  6262   0016BE  0E00               	movlw	0
  6263   0016C0  6E48               	movwf	(___fladd@a+3)^0,c
  6264   0016C2  EF6B  F00B         	goto	l5130
  6265   0016C6                     l5128:
  6266   0016C6  0E00               	movlw	0
  6267   0016C8  6E45               	movwf	___fladd@a^0,c
  6268   0016CA  0E00               	movlw	0
  6269   0016CC  6E46               	movwf	(___fladd@a+1)^0,c
  6270   0016CE  0E00               	movlw	0
  6271   0016D0  6E47               	movwf	(___fladd@a+2)^0,c
  6272   0016D2  0E00               	movlw	0
  6273   0016D4  6E48               	movwf	(___fladd@a+3)^0,c
  6274   0016D6                     l5130:
  6275   0016D6  504F               	movf	___fladd@bexp^0,w,c
  6276   0016D8  5C4E               	subwf	___fladd@aexp^0,w,c
  6277   0016DA  B0D8               	btfsc	status,0,c
  6278   0016DC  EF72  F00B         	goto	u4151
  6279   0016E0  EF74  F00B         	goto	u4150
  6280   0016E4                     u4151:
  6281   0016E4  EF9B  F00B         	goto	l5166
  6282   0016E8                     u4150:
  6283   0016E8  AC4D               	btfss	___fladd@signs^0,6,c
  6284   0016EA  EF79  F00B         	goto	u4161
  6285   0016EE  EF7B  F00B         	goto	u4160
  6286   0016F2                     u4161:
  6287   0016F2  EF7D  F00B         	goto	l5136
  6288   0016F6                     u4160:
  6289   0016F6  0E80               	movlw	128
  6290   0016F8  1A4D               	xorwf	___fladd@signs^0,f,c
  6291   0016FA                     l5136:
  6292   0016FA  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  6293   0016FE  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6294   001702  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  6295   001706  C041  F050         	movff	___fladd@b,___fladd@grs
  6296   00170A  C045  F041         	movff	___fladd@a,___fladd@b
  6297   00170E  C050  F045         	movff	___fladd@grs,___fladd@a
  6298   001712  C042  F050         	movff	___fladd@b+1,___fladd@grs
  6299   001716  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  6300   00171A  C050  F046         	movff	___fladd@grs,___fladd@a+1
  6301   00171E  C043  F050         	movff	___fladd@b+2,___fladd@grs
  6302   001722  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  6303   001726  C050  F047         	movff	___fladd@grs,___fladd@a+2
  6304   00172A  C044  F050         	movff	___fladd@b+3,___fladd@grs
  6305   00172E  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  6306   001732  C050  F048         	movff	___fladd@grs,___fladd@a+3
  6307   001736                     l5166:
  6308   001736  0E00               	movlw	0
  6309   001738  6E50               	movwf	___fladd@grs^0,c
  6310   00173A  504F               	movf	___fladd@bexp^0,w,c
  6311   00173C  C04E  F049         	movff	___fladd@aexp,??___fladd
  6312   001740  6A4A               	clrf	(??___fladd+1)^0,c
  6313   001742  5E49               	subwf	??___fladd^0,f,c
  6314   001744  0E00               	movlw	0
  6315   001746  5A4A               	subwfb	(??___fladd+1)^0,f,c
  6316   001748  BE4A               	btfsc	(??___fladd+1)^0,7,c
  6317   00174A  EFB0  F00B         	goto	u4171
  6318   00174E  504A               	movf	(??___fladd+1)^0,w,c
  6319   001750  E109               	bnz	u4170
  6320   001752  0E1A               	movlw	26
  6321   001754  5C49               	subwf	??___fladd^0,w,c
  6322   001756  A0D8               	btfss	status,0,c
  6323   001758  EFB0  F00B         	goto	u4171
  6324   00175C  EFB2  F00B         	goto	u4170
  6325   001760                     u4171:
  6326   001760  EFE9  F00B         	goto	l1434
  6327   001764                     u4170:
  6328   001764  5041               	movf	___fladd@b^0,w,c
  6329   001766  1042               	iorwf	(___fladd@b+1)^0,w,c
  6330   001768  1043               	iorwf	(___fladd@b+2)^0,w,c
  6331   00176A  1044               	iorwf	(___fladd@b+3)^0,w,c
  6332   00176C  A4D8               	btfss	status,2,c
  6333   00176E  EFBB  F00B         	goto	u4181
  6334   001772  EFBE  F00B         	goto	u4180
  6335   001776                     u4181:
  6336   001776  0E01               	movlw	1
  6337   001778  EFBF  F00B         	goto	u4190
  6338   00177C                     u4180:
  6339   00177C  0E00               	movlw	0
  6340   00177E                     u4190:
  6341   00177E  6E50               	movwf	___fladd@grs^0,c
  6342   001780  0E00               	movlw	0
  6343   001782  6E41               	movwf	___fladd@b^0,c
  6344   001784  0E00               	movlw	0
  6345   001786  6E42               	movwf	(___fladd@b+1)^0,c
  6346   001788  0E00               	movlw	0
  6347   00178A  6E43               	movwf	(___fladd@b+2)^0,c
  6348   00178C  0E00               	movlw	0
  6349   00178E  6E44               	movwf	(___fladd@b+3)^0,c
  6350   001790  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6351   001794  EFF2  F00B         	goto	l1433
  6352   001798                     l1435:
  6353   001798  A050               	btfss	___fladd@grs^0,0,c
  6354   00179A  EFD1  F00B         	goto	u4201
  6355   00179E  EFD3  F00B         	goto	u4200
  6356   0017A2                     u4201:
  6357   0017A2  EFD9  F00B         	goto	l5178
  6358   0017A6                     u4200:
  6359   0017A6  90D8               	bcf	status,0,c
  6360   0017A8  3050               	rrcf	___fladd@grs^0,w,c
  6361   0017AA  0901               	iorlw	1
  6362   0017AC  6E50               	movwf	___fladd@grs^0,c
  6363   0017AE  EFDB  F00B         	goto	l5180
  6364   0017B2                     l5178:
  6365   0017B2  90D8               	bcf	status,0,c
  6366   0017B4  3250               	rrcf	___fladd@grs^0,f,c
  6367   0017B6                     l5180:
  6368   0017B6  A041               	btfss	___fladd@b^0,0,c
  6369   0017B8  EFE0  F00B         	goto	u4211
  6370   0017BC  EFE2  F00B         	goto	u4210
  6371   0017C0                     u4211:
  6372   0017C0  EFE3  F00B         	goto	l5184
  6373   0017C4                     u4210:
  6374   0017C4  8E50               	bsf	___fladd@grs^0,7,c
  6375   0017C6                     l5184:
  6376   0017C6  3444               	rlcf	(___fladd@b+3)^0,w,c
  6377   0017C8  3244               	rrcf	(___fladd@b+3)^0,f,c
  6378   0017CA  3243               	rrcf	(___fladd@b+2)^0,f,c
  6379   0017CC  3242               	rrcf	(___fladd@b+1)^0,f,c
  6380   0017CE  3241               	rrcf	___fladd@b^0,f,c
  6381   0017D0  2A4F               	incf	___fladd@bexp^0,f,c
  6382   0017D2                     l1434:
  6383   0017D2  504E               	movf	___fladd@aexp^0,w,c
  6384   0017D4  5C4F               	subwf	___fladd@bexp^0,w,c
  6385   0017D6  A0D8               	btfss	status,0,c
  6386   0017D8  EFF0  F00B         	goto	u4221
  6387   0017DC  EFF2  F00B         	goto	u4220
  6388   0017E0                     u4221:
  6389   0017E0  EFCC  F00B         	goto	l1435
  6390   0017E4                     u4220:
  6391   0017E4                     l1433:
  6392   0017E4  BC4D               	btfsc	___fladd@signs^0,6,c
  6393   0017E6  EFF7  F00B         	goto	u4231
  6394   0017EA  EFF9  F00B         	goto	u4230
  6395   0017EE                     u4231:
  6396   0017EE  EF39  F00C         	goto	l5212
  6397   0017F2                     u4230:
  6398   0017F2  504F               	movf	___fladd@bexp^0,w,c
  6399   0017F4  A4D8               	btfss	status,2,c
  6400   0017F6  EFFF  F00B         	goto	u4241
  6401   0017FA  EF01  F00C         	goto	u4240
  6402   0017FE                     u4241:
  6403   0017FE  EF0B  F00C         	goto	l5194
  6404   001802                     u4240:
  6405   001802  0E00               	movlw	0
  6406   001804  6E41               	movwf	?___fladd^0,c
  6407   001806  0E00               	movlw	0
  6408   001808  6E42               	movwf	(?___fladd+1)^0,c
  6409   00180A  0E00               	movlw	0
  6410   00180C  6E43               	movwf	(?___fladd+2)^0,c
  6411   00180E  0E00               	movlw	0
  6412   001810  6E44               	movwf	(?___fladd+3)^0,c
  6413   001812  EF5A  F00D         	goto	l1442
  6414   001816                     l5194:
  6415   001816  5045               	movf	___fladd@a^0,w,c
  6416   001818  2641               	addwf	___fladd@b^0,f,c
  6417   00181A  5046               	movf	(___fladd@a+1)^0,w,c
  6418   00181C  2242               	addwfc	(___fladd@b+1)^0,f,c
  6419   00181E  5047               	movf	(___fladd@a+2)^0,w,c
  6420   001820  2243               	addwfc	(___fladd@b+2)^0,f,c
  6421   001822  5048               	movf	(___fladd@a+3)^0,w,c
  6422   001824  2244               	addwfc	(___fladd@b+3)^0,f,c
  6423   001826  A044               	btfss	(___fladd@b+3)^0,0,c
  6424   001828  EF18  F00C         	goto	u4251
  6425   00182C  EF1A  F00C         	goto	u4250
  6426   001830                     u4251:
  6427   001830  EFC6  F00C         	goto	l5248
  6428   001834                     u4250:
  6429   001834  A050               	btfss	___fladd@grs^0,0,c
  6430   001836  EF1F  F00C         	goto	u4261
  6431   00183A  EF21  F00C         	goto	u4260
  6432   00183E                     u4261:
  6433   00183E  EF27  F00C         	goto	l5202
  6434   001842                     u4260:
  6435   001842  90D8               	bcf	status,0,c
  6436   001844  3050               	rrcf	___fladd@grs^0,w,c
  6437   001846  0901               	iorlw	1
  6438   001848  6E50               	movwf	___fladd@grs^0,c
  6439   00184A  EF29  F00C         	goto	l5204
  6440   00184E                     l5202:
  6441   00184E  90D8               	bcf	status,0,c
  6442   001850  3250               	rrcf	___fladd@grs^0,f,c
  6443   001852                     l5204:
  6444   001852  A041               	btfss	___fladd@b^0,0,c
  6445   001854  EF2E  F00C         	goto	u4271
  6446   001858  EF30  F00C         	goto	u4270
  6447   00185C                     u4271:
  6448   00185C  EF31  F00C         	goto	l5208
  6449   001860                     u4270:
  6450   001860  8E50               	bsf	___fladd@grs^0,7,c
  6451   001862                     l5208:
  6452   001862  3444               	rlcf	(___fladd@b+3)^0,w,c
  6453   001864  3244               	rrcf	(___fladd@b+3)^0,f,c
  6454   001866  3243               	rrcf	(___fladd@b+2)^0,f,c
  6455   001868  3242               	rrcf	(___fladd@b+1)^0,f,c
  6456   00186A  3241               	rrcf	___fladd@b^0,f,c
  6457   00186C  2A4F               	incf	___fladd@bexp^0,f,c
  6458   00186E  EFC6  F00C         	goto	l5248
  6459   001872                     l5212:
  6460   001872  5045               	movf	___fladd@a^0,w,c
  6461   001874  5C41               	subwf	___fladd@b^0,w,c
  6462   001876  5046               	movf	(___fladd@a+1)^0,w,c
  6463   001878  5842               	subwfb	(___fladd@b+1)^0,w,c
  6464   00187A  5047               	movf	(___fladd@a+2)^0,w,c
  6465   00187C  5843               	subwfb	(___fladd@b+2)^0,w,c
  6466   00187E  5044               	movf	(___fladd@b+3)^0,w,c
  6467   001880  0A80               	xorlw	128
  6468   001882  6E49               	movwf	??___fladd^0,c
  6469   001884  5048               	movf	(___fladd@a+3)^0,w,c
  6470   001886  0A80               	xorlw	128
  6471   001888  5849               	subwfb	??___fladd^0,w,c
  6472   00188A  B0D8               	btfsc	status,0,c
  6473   00188C  EF4A  F00C         	goto	u4281
  6474   001890  EF4C  F00C         	goto	u4280
  6475   001894                     u4281:
  6476   001894  EF77  F00C         	goto	l5222
  6477   001898                     u4280:
  6478   001898  5041               	movf	___fladd@b^0,w,c
  6479   00189A  5C45               	subwf	___fladd@a^0,w,c
  6480   00189C  6E49               	movwf	??___fladd^0,c
  6481   00189E  5042               	movf	(___fladd@b+1)^0,w,c
  6482   0018A0  5846               	subwfb	(___fladd@a+1)^0,w,c
  6483   0018A2  6E4A               	movwf	(??___fladd+1)^0,c
  6484   0018A4  5043               	movf	(___fladd@b+2)^0,w,c
  6485   0018A6  5847               	subwfb	(___fladd@a+2)^0,w,c
  6486   0018A8  6E4B               	movwf	(??___fladd+2)^0,c
  6487   0018AA  5044               	movf	(___fladd@b+3)^0,w,c
  6488   0018AC  5848               	subwfb	(___fladd@a+3)^0,w,c
  6489   0018AE  6E4C               	movwf	(??___fladd+3)^0,c
  6490   0018B0  0EFF               	movlw	255
  6491   0018B2  2449               	addwf	??___fladd^0,w,c
  6492   0018B4  6E41               	movwf	___fladd@b^0,c
  6493   0018B6  0EFF               	movlw	255
  6494   0018B8  204A               	addwfc	(??___fladd+1)^0,w,c
  6495   0018BA  6E42               	movwf	(___fladd@b+1)^0,c
  6496   0018BC  0EFF               	movlw	255
  6497   0018BE  204B               	addwfc	(??___fladd+2)^0,w,c
  6498   0018C0  6E43               	movwf	(___fladd@b+2)^0,c
  6499   0018C2  0EFF               	movlw	255
  6500   0018C4  204C               	addwfc	(??___fladd+3)^0,w,c
  6501   0018C6  6E44               	movwf	(___fladd@b+3)^0,c
  6502   0018C8  0E80               	movlw	128
  6503   0018CA  1A4D               	xorwf	___fladd@signs^0,f,c
  6504   0018CC  6C50               	negf	___fladd@grs^0,c
  6505   0018CE  5050               	movf	___fladd@grs^0,w,c
  6506   0018D0  A4D8               	btfss	status,2,c
  6507   0018D2  EF6D  F00C         	goto	u4291
  6508   0018D6  EF6F  F00C         	goto	u4290
  6509   0018DA                     u4291:
  6510   0018DA  EF7F  F00C         	goto	l1450
  6511   0018DE                     u4290:
  6512   0018DE  0E01               	movlw	1
  6513   0018E0  2641               	addwf	___fladd@b^0,f,c
  6514   0018E2  0E00               	movlw	0
  6515   0018E4  2242               	addwfc	(___fladd@b+1)^0,f,c
  6516   0018E6  2243               	addwfc	(___fladd@b+2)^0,f,c
  6517   0018E8  2244               	addwfc	(___fladd@b+3)^0,f,c
  6518   0018EA  EF7F  F00C         	goto	l1450
  6519   0018EE                     l5222:
  6520   0018EE  5045               	movf	___fladd@a^0,w,c
  6521   0018F0  5E41               	subwf	___fladd@b^0,f,c
  6522   0018F2  5046               	movf	(___fladd@a+1)^0,w,c
  6523   0018F4  5A42               	subwfb	(___fladd@b+1)^0,f,c
  6524   0018F6  5047               	movf	(___fladd@a+2)^0,w,c
  6525   0018F8  5A43               	subwfb	(___fladd@b+2)^0,f,c
  6526   0018FA  5048               	movf	(___fladd@a+3)^0,w,c
  6527   0018FC  5A44               	subwfb	(___fladd@b+3)^0,f,c
  6528   0018FE                     l1450:
  6529   0018FE  5041               	movf	___fladd@b^0,w,c
  6530   001900  1042               	iorwf	(___fladd@b+1)^0,w,c
  6531   001902  1043               	iorwf	(___fladd@b+2)^0,w,c
  6532   001904  1044               	iorwf	(___fladd@b+3)^0,w,c
  6533   001906  A4D8               	btfss	status,2,c
  6534   001908  EF88  F00C         	goto	u4301
  6535   00190C  EF8A  F00C         	goto	u4300
  6536   001910                     u4301:
  6537   001910  EFBF  F00C         	goto	l5246
  6538   001914                     u4300:
  6539   001914  5050               	movf	___fladd@grs^0,w,c
  6540   001916  A4D8               	btfss	status,2,c
  6541   001918  EF90  F00C         	goto	u4311
  6542   00191C  EF92  F00C         	goto	u4310
  6543   001920                     u4311:
  6544   001920  EFBF  F00C         	goto	l5246
  6545   001924                     u4310:
  6546   001924  0E00               	movlw	0
  6547   001926  6E41               	movwf	?___fladd^0,c
  6548   001928  0E00               	movlw	0
  6549   00192A  6E42               	movwf	(?___fladd+1)^0,c
  6550   00192C  0E00               	movlw	0
  6551   00192E  6E43               	movwf	(?___fladd+2)^0,c
  6552   001930  0E00               	movlw	0
  6553   001932  6E44               	movwf	(?___fladd+3)^0,c
  6554   001934  EF5A  F00D         	goto	l1442
  6555   001938                     l5230:
  6556   001938  90D8               	bcf	status,0,c
  6557   00193A  3641               	rlcf	___fladd@b^0,f,c
  6558   00193C  3642               	rlcf	(___fladd@b+1)^0,f,c
  6559   00193E  3643               	rlcf	(___fladd@b+2)^0,f,c
  6560   001940  3644               	rlcf	(___fladd@b+3)^0,f,c
  6561   001942  AE50               	btfss	___fladd@grs^0,7,c
  6562   001944  EFA6  F00C         	goto	u4321
  6563   001948  EFA8  F00C         	goto	u4320
  6564   00194C                     u4321:
  6565   00194C  EFA9  F00C         	goto	l5236
  6566   001950                     u4320:
  6567   001950  8041               	bsf	___fladd@b^0,0,c
  6568   001952                     l5236:
  6569   001952  A050               	btfss	___fladd@grs^0,0,c
  6570   001954  EFAE  F00C         	goto	u4331
  6571   001958  EFB0  F00C         	goto	u4330
  6572   00195C                     u4331:
  6573   00195C  EFB4  F00C         	goto	l5240
  6574   001960                     u4330:
  6575   001960  80D8               	bsf	status,0,c
  6576   001962  3650               	rlcf	___fladd@grs^0,f,c
  6577   001964  EFB6  F00C         	goto	l5242
  6578   001968                     l5240:
  6579   001968  90D8               	bcf	status,0,c
  6580   00196A  3650               	rlcf	___fladd@grs^0,f,c
  6581   00196C                     l5242:
  6582   00196C  504F               	movf	___fladd@bexp^0,w,c
  6583   00196E  B4D8               	btfsc	status,2,c
  6584   001970  EFBC  F00C         	goto	u4341
  6585   001974  EFBE  F00C         	goto	u4340
  6586   001978                     u4341:
  6587   001978  EFBF  F00C         	goto	l5246
  6588   00197C                     u4340:
  6589   00197C  064F               	decf	___fladd@bexp^0,f,c
  6590   00197E                     l5246:
  6591   00197E  AE43               	btfss	(___fladd@b+2)^0,7,c
  6592   001980  EFC4  F00C         	goto	u4351
  6593   001984  EFC6  F00C         	goto	u4350
  6594   001988                     u4351:
  6595   001988  EF9C  F00C         	goto	l5230
  6596   00198C                     u4350:
  6597   00198C                     l5248:
  6598   00198C  0E00               	movlw	0
  6599   00198E  6E4E               	movwf	___fladd@aexp^0,c
  6600   001990  AE50               	btfss	___fladd@grs^0,7,c
  6601   001992  EFCD  F00C         	goto	u4361
  6602   001996  EFCF  F00C         	goto	u4360
  6603   00199A                     u4361:
  6604   00199A  EFE7  F00C         	goto	l1459
  6605   00199E                     u4360:
  6606   00199E  C050  F049         	movff	___fladd@grs,??___fladd
  6607   0019A2  0E7F               	movlw	127
  6608   0019A4  1649               	andwf	??___fladd^0,f,c
  6609   0019A6  B4D8               	btfsc	status,2,c
  6610   0019A8  EFD8  F00C         	goto	u4371
  6611   0019AC  EFDA  F00C         	goto	u4370
  6612   0019B0                     u4371:
  6613   0019B0  EFDE  F00C         	goto	l1460
  6614   0019B4                     u4370:
  6615   0019B4                     l5254:
  6616   0019B4  0E01               	movlw	1
  6617   0019B6  6E4E               	movwf	___fladd@aexp^0,c
  6618   0019B8  EFE7  F00C         	goto	l1459
  6619   0019BC                     l1460:
  6620   0019BC  A041               	btfss	___fladd@b^0,0,c
  6621   0019BE  EFE3  F00C         	goto	u4381
  6622   0019C2  EFE5  F00C         	goto	u4380
  6623   0019C6                     u4381:
  6624   0019C6  EFE7  F00C         	goto	l1459
  6625   0019CA                     u4380:
  6626   0019CA  EFDA  F00C         	goto	l5254
  6627   0019CE                     l1459:
  6628   0019CE  504E               	movf	___fladd@aexp^0,w,c
  6629   0019D0  B4D8               	btfsc	status,2,c
  6630   0019D2  EFED  F00C         	goto	u4391
  6631   0019D6  EFEF  F00C         	goto	u4390
  6632   0019DA                     u4391:
  6633   0019DA  EF1A  F00D         	goto	l5266
  6634   0019DE                     u4390:
  6635   0019DE  0E01               	movlw	1
  6636   0019E0  2641               	addwf	___fladd@b^0,f,c
  6637   0019E2  0E00               	movlw	0
  6638   0019E4  2242               	addwfc	(___fladd@b+1)^0,f,c
  6639   0019E6  2243               	addwfc	(___fladd@b+2)^0,f,c
  6640   0019E8  2244               	addwfc	(___fladd@b+3)^0,f,c
  6641   0019EA  A044               	btfss	(___fladd@b+3)^0,0,c
  6642   0019EC  EFFA  F00C         	goto	u4401
  6643   0019F0  EFFC  F00C         	goto	u4400
  6644   0019F4                     u4401:
  6645   0019F4  EF1A  F00D         	goto	l5266
  6646   0019F8                     u4400:
  6647   0019F8  C041  F049         	movff	___fladd@b,??___fladd
  6648   0019FC  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  6649   001A00  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  6650   001A04  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  6651   001A08  344C               	rlcf	(??___fladd+3)^0,w,c
  6652   001A0A  324C               	rrcf	(??___fladd+3)^0,f,c
  6653   001A0C  324B               	rrcf	(??___fladd+2)^0,f,c
  6654   001A0E  324A               	rrcf	(??___fladd+1)^0,f,c
  6655   001A10  3249               	rrcf	??___fladd^0,f,c
  6656   001A12  C049  F041         	movff	??___fladd,___fladd@b
  6657   001A16  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  6658   001A1A  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  6659   001A1E  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  6660   001A22  284F               	incf	___fladd@bexp^0,w,c
  6661   001A24  B4D8               	btfsc	status,2,c
  6662   001A26  EF17  F00D         	goto	u4411
  6663   001A2A  EF19  F00D         	goto	u4410
  6664   001A2E                     u4411:
  6665   001A2E  EF1A  F00D         	goto	l5266
  6666   001A32                     u4410:
  6667   001A32  2A4F               	incf	___fladd@bexp^0,f,c
  6668   001A34                     l5266:
  6669   001A34  284F               	incf	___fladd@bexp^0,w,c
  6670   001A36  B4D8               	btfsc	status,2,c
  6671   001A38  EF20  F00D         	goto	u4421
  6672   001A3C  EF22  F00D         	goto	u4420
  6673   001A40                     u4421:
  6674   001A40  EF2A  F00D         	goto	l5270
  6675   001A44                     u4420:
  6676   001A44  504F               	movf	___fladd@bexp^0,w,c
  6677   001A46  A4D8               	btfss	status,2,c
  6678   001A48  EF28  F00D         	goto	u4431
  6679   001A4C  EF2A  F00D         	goto	u4430
  6680   001A50                     u4431:
  6681   001A50  EF3C  F00D         	goto	l5274
  6682   001A54                     u4430:
  6683   001A54                     l5270:
  6684   001A54  0E00               	movlw	0
  6685   001A56  6E41               	movwf	___fladd@b^0,c
  6686   001A58  0E00               	movlw	0
  6687   001A5A  6E42               	movwf	(___fladd@b+1)^0,c
  6688   001A5C  0E00               	movlw	0
  6689   001A5E  6E43               	movwf	(___fladd@b+2)^0,c
  6690   001A60  0E00               	movlw	0
  6691   001A62  6E44               	movwf	(___fladd@b+3)^0,c
  6692   001A64  504F               	movf	___fladd@bexp^0,w,c
  6693   001A66  A4D8               	btfss	status,2,c
  6694   001A68  EF38  F00D         	goto	u4441
  6695   001A6C  EF3A  F00D         	goto	u4440
  6696   001A70                     u4441:
  6697   001A70  EF3C  F00D         	goto	l5274
  6698   001A74                     u4440:
  6699   001A74  0E00               	movlw	0
  6700   001A76  6E4D               	movwf	___fladd@signs^0,c
  6701   001A78                     l5274:
  6702   001A78  A04F               	btfss	___fladd@bexp^0,0,c
  6703   001A7A  EF41  F00D         	goto	u4451
  6704   001A7E  EF43  F00D         	goto	u4450
  6705   001A82                     u4451:
  6706   001A82  EF46  F00D         	goto	l5278
  6707   001A86                     u4450:
  6708   001A86  8E43               	bsf	(___fladd@b+2)^0,7,c
  6709   001A88  EF47  F00D         	goto	l5280
  6710   001A8C                     l5278:
  6711   001A8C  9E43               	bcf	(___fladd@b+2)^0,7,c
  6712   001A8E                     l5280:
  6713   001A8E  90D8               	bcf	status,0,c
  6714   001A90  304F               	rrcf	___fladd@bexp^0,w,c
  6715   001A92  6E44               	movwf	(___fladd@b+3)^0,c
  6716   001A94  AE4D               	btfss	___fladd@signs^0,7,c
  6717   001A96  EF4F  F00D         	goto	u4461
  6718   001A9A  EF51  F00D         	goto	u4460
  6719   001A9E                     u4461:
  6720   001A9E  EF52  F00D         	goto	l5286
  6721   001AA2                     u4460:
  6722   001AA2  8E44               	bsf	(___fladd@b+3)^0,7,c
  6723   001AA4                     l5286:
  6724   001AA4  C041  F041         	movff	___fladd@b,?___fladd
  6725   001AA8  C042  F042         	movff	___fladd@b+1,?___fladd+1
  6726   001AAC  C043  F043         	movff	___fladd@b+2,?___fladd+2
  6727   001AB0  C044  F044         	movff	___fladd@b+3,?___fladd+3
  6728   001AB4                     l1442:
  6729   001AB4  0012               	return		;funcret
  6730   001AB6                     __end_of___fladd:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function _sendResponse *****************
  6734 ;; Defined at:
  6735 ;;		line 224 in file "usart.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  sot             1    wreg     unsigned char 
  6738 ;;  response        1   33[BANK0 ] unsigned char 
  6739 ;;  data1           1   34[BANK0 ] unsigned char 
  6740 ;;  data2           1   35[BANK0 ] unsigned char 
  6741 ;;  eot             1   36[BANK0 ] unsigned char 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  sot             1   37[BANK0 ] unsigned char 
  6744 ;;  responseData    5   38[BANK0 ] unsigned char [5]
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;Total ram usage:       10 bytes
  6759 ;; Hardware stack levels used: 1
  6760 ;; Hardware stack levels required when called: 12
  6761 ;; This function calls:
  6762 ;;		_sendData
  6763 ;; This function is called by:
  6764 ;;		_handle_uart_communication
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text26
  6769   00454A                     __ptext26:
  6770                           	callstack 0
  6771   00454A                     _sendResponse:
  6772                           	callstack 17
  6773                           
  6774                           ;incstack = 0
  6775                           ;sendResponse@sot stored from wreg
  6776   00454A  0100               	movlb	0	; () banked
  6777   00454C  6FC9               	movwf	sendResponse@sot& (0+255),b
  6778   00454E                     
  6779                           ;usart.c: 225:     unsigned char responseData[5] = {sot, response, data1, data2, eot};
  6780   00454E  EE20  F0CA         	lfsr	2,sendResponse@responseData
  6781   004552  0E04               	movlw	4
  6782   004554                     u5261:
  6783   004554  6ADE               	clrf	postinc2,c
  6784   004556  06E8               	decf	wreg,f,c
  6785   004558  E2FD               	bc	u5261
  6786   00455A  C0C9  F0CA         	movff	sendResponse@sot,sendResponse@responseData
  6787   00455E  C0C5  F0CB         	movff	sendResponse@response,sendResponse@responseData+1
  6788   004562  C0C6  F0CC         	movff	sendResponse@data1,sendResponse@responseData+2
  6789   004566  C0C7  F0CD         	movff	sendResponse@data2,sendResponse@responseData+3
  6790   00456A  C0C8  F0CE         	movff	sendResponse@eot,sendResponse@responseData+4
  6791   00456E                     
  6792                           ;usart.c: 231:     sendData(responseData, 5, 2);
  6793   00456E  0ECA               	movlw	low sendResponse@responseData
  6794   004570  0100               	movlb	0	; () banked
  6795   004572  6FBD               	movwf	sendData@data& (0+255),b
  6796   004574  0E00               	movlw	high sendResponse@responseData
  6797   004576  6FBE               	movwf	(sendData@data+1)& (0+255),b
  6798   004578  0E00               	movlw	0
  6799   00457A  6FC0               	movwf	(sendData@length+1)& (0+255),b
  6800   00457C  0E05               	movlw	5
  6801   00457E  6FBF               	movwf	sendData@length& (0+255),b
  6802   004580  0E02               	movlw	2
  6803   004582  6FC1               	movwf	sendData@uart_channel& (0+255),b
  6804   004584  EC7F  F01A         	call	_sendData	;wreg free
  6805   004588  0012               	return		;funcret
  6806   00458A                     __end_of_sendResponse:
  6807                           	callstack 0
  6808                           
  6809 ;; *************** function _sendData *****************
  6810 ;; Defined at:
  6811 ;;		line 193 in file "usart.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  data            2   25[BANK0 ] PTR unsigned char 
  6814 ;;		 -> sendResponse@responseData(5), 
  6815 ;;  length          2   27[BANK0 ] int 
  6816 ;;  uart_channel    1   29[BANK0 ] unsigned char 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  i               2   92[COMRAM] int 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6828 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;Total ram usage:       10 bytes
  6833 ;; Hardware stack levels used: 1
  6834 ;; Hardware stack levels required when called: 11
  6835 ;; This function calls:
  6836 ;;		_uart_print
  6837 ;;		_uart_print_hex
  6838 ;; This function is called by:
  6839 ;;		_sendResponse
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text27
  6844   0034FE                     __ptext27:
  6845                           	callstack 0
  6846   0034FE                     _sendData:
  6847                           	callstack 17
  6848   0034FE                     
  6849                           ;usart.c: 194:     for (int i = 0; i < length; i++) {
  6850   0034FE  0E00               	movlw	0
  6851   003500  6E5E               	movwf	(sendData@i+1)^0,c
  6852   003502  0E00               	movlw	0
  6853   003504  6E5D               	movwf	sendData@i^0,c
  6854   003506  EFFD  F01A         	goto	l5768
  6855   00350A                     l5744:
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;usart.c: 195:         if (uart_channel == 1) {
  6859   00350A  05C1               	decf	sendData@uart_channel& (0+255),w,b
  6860   00350C  A4D8               	btfss	status,2,c
  6861   00350E  EF8B  F01A         	goto	u5121
  6862   003512  EF8D  F01A         	goto	u5120
  6863   003516                     u5121:
  6864   003516  EFE2  F01A         	goto	l5760
  6865   00351A                     u5120:
  6866   00351A                     l658:
  6867   00351A  A89E               	btfss	3998,4,c	;volatile
  6868   00351C  EF92  F01A         	goto	u5131
  6869   003520  EF94  F01A         	goto	u5130
  6870   003524                     u5131:
  6871   003524  EF8D  F01A         	goto	l658
  6872   003528                     u5130:
  6873   003528                     
  6874                           ;usart.c: 197:             TXREG1 = data[i];
  6875   003528  505D               	movf	sendData@i^0,w,c
  6876   00352A  0100               	movlb	0	; () banked
  6877   00352C  25BD               	addwf	sendData@data& (0+255),w,b
  6878   00352E  6ED9               	movwf	fsr2l,c
  6879   003530  505E               	movf	(sendData@i+1)^0,w,c
  6880   003532  21BE               	addwfc	(sendData@data+1)& (0+255),w,b
  6881   003534  6EDA               	movwf	fsr2h,c
  6882   003536  50DF               	movf	indf2,w,c
  6883   003538  6EAE               	movwf	174,c	;volatile
  6884   00353A                     
  6885                           ; BSR set to: 0
  6886                           ;usart.c: 198:             uart_print("Sent response (UART1): ");
  6887   00353A  0E1E               	movlw	low STR_8
  6888   00353C  6E01               	movwf	uart_print@str^0,c
  6889   00353E  0E10               	movlw	high STR_8
  6890   003540  6E02               	movwf	(uart_print@str+1)^0,c
  6891   003542  5001               	movf	uart_print@str^0,w,c
  6892   003544  1002               	iorwf	(uart_print@str+1)^0,w,c
  6893   003546  A4D8               	btfss	status,2,c
  6894   003548  0E00               	movlw	low (__mediumconst shr (0+16))
  6895   00354A  6E03               	movwf	(uart_print@str+2)^0,c
  6896   00354C  ECBD  F020         	call	_uart_print	;wreg free
  6897   003550                     
  6898                           ;usart.c: 199:             uart_print_hex(data[i]);
  6899   003550  505D               	movf	sendData@i^0,w,c
  6900   003552  0100               	movlb	0	; () banked
  6901   003554  25BD               	addwf	sendData@data& (0+255),w,b
  6902   003556  6ED9               	movwf	fsr2l,c
  6903   003558  505E               	movf	(sendData@i+1)^0,w,c
  6904   00355A  21BE               	addwfc	(sendData@data+1)& (0+255),w,b
  6905   00355C  6EDA               	movwf	fsr2h,c
  6906   00355E  50DF               	movf	indf2,w,c
  6907   003560  EC05  F023         	call	_uart_print_hex
  6908   003564                     
  6909                           ;usart.c: 200:             if (i < (length - 1)) {
  6910   003564  0EFF               	movlw	255
  6911   003566  0100               	movlb	0	; () banked
  6912   003568  25BF               	addwf	sendData@length& (0+255),w,b
  6913   00356A  6FC2               	movwf	??_sendData& (0+255),b
  6914   00356C  0EFF               	movlw	255
  6915   00356E  21C0               	addwfc	(sendData@length+1)& (0+255),w,b
  6916   003570  6FC3               	movwf	(??_sendData+1)& (0+255),b
  6917   003572  51C2               	movf	??_sendData& (0+255),w,b
  6918   003574  5C5D               	subwf	sendData@i^0,w,c
  6919   003576  505E               	movf	(sendData@i+1)^0,w,c
  6920   003578  0A80               	xorlw	128
  6921   00357A  6FC4               	movwf	(??_sendData+2)& (0+255),b
  6922   00357C  51C3               	movf	(??_sendData+1)& (0+255),w,b
  6923   00357E  0A80               	xorlw	128
  6924   003580  59C4               	subwfb	(??_sendData+2)& (0+255),w,b
  6925   003582  B0D8               	btfsc	status,0,c
  6926   003584  EFC6  F01A         	goto	u5141
  6927   003588  EFC8  F01A         	goto	u5140
  6928   00358C                     u5141:
  6929   00358C  EFD5  F01A         	goto	l5758
  6930   003590                     u5140:
  6931   003590                     
  6932                           ; BSR set to: 0
  6933                           ;usart.c: 201:                 uart_print(", ");
  6934   003590  0E54               	movlw	low STR_6
  6935   003592  6E01               	movwf	uart_print@str^0,c
  6936   003594  0E10               	movlw	high STR_6
  6937   003596  6E02               	movwf	(uart_print@str+1)^0,c
  6938   003598  5001               	movf	uart_print@str^0,w,c
  6939   00359A  1002               	iorwf	(uart_print@str+1)^0,w,c
  6940   00359C  A4D8               	btfss	status,2,c
  6941   00359E  0E00               	movlw	low (__mediumconst shr (0+16))
  6942   0035A0  6E03               	movwf	(uart_print@str+2)^0,c
  6943   0035A2  ECBD  F020         	call	_uart_print	;wreg free
  6944                           
  6945                           ;usart.c: 202:             } else {
  6946   0035A6  EFFB  F01A         	goto	l5766
  6947   0035AA                     l5758:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;usart.c: 203:                 uart_print("\r\n");
  6951   0035AA  0E51               	movlw	low STR_2
  6952   0035AC  6E01               	movwf	uart_print@str^0,c
  6953   0035AE  0E10               	movlw	high STR_2
  6954   0035B0  6E02               	movwf	(uart_print@str+1)^0,c
  6955   0035B2  5001               	movf	uart_print@str^0,w,c
  6956   0035B4  1002               	iorwf	(uart_print@str+1)^0,w,c
  6957   0035B6  A4D8               	btfss	status,2,c
  6958   0035B8  0E00               	movlw	low (__mediumconst shr (0+16))
  6959   0035BA  6E03               	movwf	(uart_print@str+2)^0,c
  6960   0035BC  ECBD  F020         	call	_uart_print	;wreg free
  6961   0035C0  EFFB  F01A         	goto	l5766
  6962   0035C4                     l5760:
  6963                           
  6964                           ; BSR set to: 0
  6965   0035C4  0E02               	movlw	2
  6966   0035C6  19C1               	xorwf	sendData@uart_channel& (0+255),w,b
  6967   0035C8  A4D8               	btfss	status,2,c
  6968   0035CA  EFE9  F01A         	goto	u5151
  6969   0035CE  EFEB  F01A         	goto	u5150
  6970   0035D2                     u5151:
  6971   0035D2  EFFB  F01A         	goto	l5766
  6972   0035D6                     u5150:
  6973   0035D6                     l665:
  6974   0035D6  A8A4               	btfss	4004,4,c	;volatile
  6975   0035D8  EFF0  F01A         	goto	u5161
  6976   0035DC  EFF2  F01A         	goto	u5160
  6977   0035E0                     u5161:
  6978   0035E0  EFEB  F01A         	goto	l665
  6979   0035E4                     u5160:
  6980   0035E4                     
  6981                           ;usart.c: 207:             TXREG2 = data[i];
  6982   0035E4  505D               	movf	sendData@i^0,w,c
  6983   0035E6  0100               	movlb	0	; () banked
  6984   0035E8  25BD               	addwf	sendData@data& (0+255),w,b
  6985   0035EA  6ED9               	movwf	fsr2l,c
  6986   0035EC  505E               	movf	(sendData@i+1)^0,w,c
  6987   0035EE  21BE               	addwfc	(sendData@data+1)& (0+255),w,b
  6988   0035F0  6EDA               	movwf	fsr2h,c
  6989   0035F2  50DF               	movf	indf2,w,c
  6990   0035F4  6EA9               	movwf	169,c	;volatile
  6991   0035F6                     l5766:
  6992                           
  6993                           ;usart.c: 209:     }
  6994   0035F6  4A5D               	infsnz	sendData@i^0,f,c
  6995   0035F8  2A5E               	incf	(sendData@i+1)^0,f,c
  6996   0035FA                     l5768:
  6997   0035FA  0100               	movlb	0	; () banked
  6998   0035FC  51BF               	movf	sendData@length& (0+255),w,b
  6999   0035FE  5C5D               	subwf	sendData@i^0,w,c
  7000   003600  505E               	movf	(sendData@i+1)^0,w,c
  7001   003602  0A80               	xorlw	128
  7002   003604  6FC2               	movwf	??_sendData& (0+255),b
  7003   003606  51C0               	movf	(sendData@length+1)& (0+255),w,b
  7004   003608  0A80               	xorlw	128
  7005   00360A  59C2               	subwfb	??_sendData& (0+255),w,b
  7006   00360C  A0D8               	btfss	status,0,c
  7007   00360E  EF0B  F01B         	goto	u5171
  7008   003612  EF0D  F01B         	goto	u5170
  7009   003616                     u5171:
  7010   003616  EF85  F01A         	goto	l5744
  7011   00361A                     u5170:
  7012   00361A                     
  7013                           ; BSR set to: 0
  7014   00361A  0012               	return		;funcret
  7015   00361C                     __end_of_sendData:
  7016                           	callstack 0
  7017                           
  7018 ;; *************** function _uart_print_hex *****************
  7019 ;; Defined at:
  7020 ;;		line 158 in file "usart.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  num             1    wreg     unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  num             1   24[BANK0 ] unsigned char 
  7025 ;;  buf             5   19[BANK0 ] unsigned char [5]
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;Total ram usage:        6 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; Hardware stack levels required when called: 10
  7042 ;; This function calls:
  7043 ;;		_sprintf
  7044 ;;		_uart_print
  7045 ;; This function is called by:
  7046 ;;		_sendData
  7047 ;;		_print_received_block
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text28
  7052   00460A                     __ptext28:
  7053                           	callstack 0
  7054   00460A                     _uart_print_hex:
  7055                           	callstack 17
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;incstack = 0
  7059                           ;uart_print_hex@num stored from wreg
  7060   00460A  0100               	movlb	0	; () banked
  7061   00460C  6FBC               	movwf	uart_print_hex@num& (0+255),b
  7062   00460E                     
  7063                           ;usart.c: 159:     char buf[5];;usart.c: 160:     sprintf(buf, "0x%02X", num);
  7064   00460E  0EB7               	movlw	low uart_print_hex@buf
  7065   004610  0100               	movlb	0	; () banked
  7066   004612  6FA4               	movwf	sprintf@s& (0+255),b
  7067   004614  0E00               	movlw	high uart_print_hex@buf
  7068   004616  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  7069   004618  0E4A               	movlw	low STR_3
  7070   00461A  6FA6               	movwf	sprintf@fmt& (0+255),b
  7071   00461C  0E10               	movlw	high STR_3
  7072   00461E  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  7073   004620  C0BC  F0A8         	movff	uart_print_hex@num,?_sprintf+4
  7074   004624  6BA9               	clrf	(?_sprintf+5)& (0+255),b
  7075   004626  EC5C  F021         	call	_sprintf	;wreg free
  7076   00462A                     
  7077                           ;usart.c: 161:     uart_print(buf);
  7078   00462A  0EB7               	movlw	low uart_print_hex@buf
  7079   00462C  6E01               	movwf	uart_print@str^0,c
  7080   00462E  0E00               	movlw	high uart_print_hex@buf
  7081   004630  6E02               	movwf	(uart_print@str+1)^0,c
  7082   004632  5001               	movf	uart_print@str^0,w,c
  7083   004634  1002               	iorwf	(uart_print@str+1)^0,w,c
  7084   004636  A4D8               	btfss	status,2,c
  7085   004638  0E20               	movlw	32
  7086   00463A  6E03               	movwf	(uart_print@str+2)^0,c
  7087   00463C  ECBD  F020         	call	_uart_print	;wreg free
  7088   004640  0012               	return		;funcret
  7089   004642                     __end_of_uart_print_hex:
  7090                           	callstack 0
  7091                           
  7092 ;; *************** function _uart_print *****************
  7093 ;; Defined at:
  7094 ;;		line 143 in file "usart.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  str             3    0[COMRAM] PTR const unsigned char 
  7097 ;;		 -> STR_10(3), STR_9(3), STR_8(24), STR_7(3), 
  7098 ;;		 -> STR_6(3), STR_5(4), ROM(32759), STR_4(20), 
  7099 ;;		 -> uart_print_hex@buf(5), STR_2(3), uart_println@buf(5), 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7111 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;Total ram usage:        3 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 2
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_uart_print_hex
  7122 ;;		_sendData
  7123 ;;		_uart_println
  7124 ;;		_print_received_block
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text29
  7129   00417A                     __ptext29:
  7130                           	callstack 0
  7131   00417A                     _uart_print:
  7132                           	callstack 24
  7133   00417A                     
  7134                           ;usart.c: 144:     while (*str) {
  7135   00417A  EFDD  F020         	goto	l5024
  7136   00417E                     l635:
  7137   00417E  A89E               	btfss	3998,4,c	;volatile
  7138   004180  EFC4  F020         	goto	u3981
  7139   004184  EFC6  F020         	goto	u3980
  7140   004188                     u3981:
  7141   004188  EFBF  F020         	goto	l635
  7142   00418C                     u3980:
  7143   00418C                     
  7144                           ;usart.c: 146:         TXREG1 = *str;
  7145   00418C  C001  FFF6         	movff	uart_print@str,tblptrl
  7146   004190  C002  FFF7         	movff	uart_print@str+1,tblptrh
  7147   004194  C003  FFF8         	movff	uart_print@str+2,tblptru
  7148   004198  BAF8               	btfsc	tblptru,5,c
  7149   00419A  D003               	bra	u3997
  7150   00419C  0008               	tblrd		*
  7151   00419E  50F5               	movf	tablat,w,c
  7152   0041A0  D005               	bra	u3990
  7153   0041A2                     u3997:
  7154   0041A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7155   0041A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7156   0041AA  50EF               	movf	indf0,w,c
  7157   0041AC                     u3990:
  7158   0041AC  6EAE               	movwf	174,c	;volatile
  7159   0041AE                     
  7160                           ;usart.c: 147:         str++;
  7161   0041AE  0E01               	movlw	1
  7162   0041B0  2601               	addwf	uart_print@str^0,f,c
  7163   0041B2  0E00               	movlw	0
  7164   0041B4  2202               	addwfc	(uart_print@str+1)^0,f,c
  7165   0041B6  0E00               	movlw	0
  7166   0041B8  2203               	addwfc	(uart_print@str+2)^0,f,c
  7167   0041BA                     l5024:
  7168                           
  7169                           ;usart.c: 144:     while (*str) {
  7170   0041BA  C001  FFF6         	movff	uart_print@str,tblptrl
  7171   0041BE  C002  FFF7         	movff	uart_print@str+1,tblptrh
  7172   0041C2  C003  FFF8         	movff	uart_print@str+2,tblptru
  7173   0041C6  BAF8               	btfsc	tblptru,5,c
  7174   0041C8  D003               	bra	u4007
  7175   0041CA  0008               	tblrd		*
  7176   0041CC  50F5               	movf	tablat,w,c
  7177   0041CE  D005               	bra	u4000
  7178   0041D0                     u4007:
  7179   0041D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  7180   0041D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  7181   0041D8  50EF               	movf	indf0,w,c
  7182   0041DA                     u4000:
  7183   0041DA  0900               	iorlw	0
  7184   0041DC  A4D8               	btfss	status,2,c
  7185   0041DE  EFF3  F020         	goto	u4011
  7186   0041E2  EFF5  F020         	goto	u4010
  7187   0041E6                     u4011:
  7188   0041E6  EFBF  F020         	goto	l635
  7189   0041EA                     u4010:
  7190   0041EA  0012               	return		;funcret
  7191   0041EC                     __end_of_uart_print:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _sprintf *****************
  7195 ;; Defined at:
  7196 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7199 ;;		 -> uart_print_hex@buf(5), uart_println@buf(5), 
  7200 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7201 ;;		 -> STR_3(7), STR_1(3), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  f              11    8[BANK0 ] struct _IO_FILE
  7204 ;;  ap              2    6[BANK0 ] PTR void [1]
  7205 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7206 ;;  ret             2    0        int 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  2    0[BANK0 ] int 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7216 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7217 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;Total ram usage:       19 bytes
  7221 ;; Hardware stack levels used: 1
  7222 ;; Hardware stack levels required when called: 9
  7223 ;; This function calls:
  7224 ;;		_vfprintf
  7225 ;; This function is called by:
  7226 ;;		_uart_print_hex
  7227 ;;		_uart_println
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text30
  7232   0042B8                     __ptext30:
  7233                           	callstack 0
  7234   0042B8                     _sprintf:
  7235                           	callstack 17
  7236   0042B8  0EA8               	movlw	low (?_sprintf+4)
  7237   0042BA  0100               	movlb	0	; () banked
  7238   0042BC  6FAA               	movwf	sprintf@ap& (0+255),b
  7239   0042BE  0E00               	movlw	high (?_sprintf+4)
  7240   0042C0  6FAB               	movwf	(sprintf@ap+1)& (0+255),b
  7241   0042C2  C0A4  F0AC         	movff	sprintf@s,sprintf@f
  7242   0042C6  C0A5  F0AD         	movff	sprintf@s+1,sprintf@f+1
  7243   0042CA                     
  7244                           ; BSR set to: 0
  7245   0042CA  0E00               	movlw	0
  7246   0042CC  6FB0               	movwf	(sprintf@f+4)& (0+255),b
  7247   0042CE  0E00               	movlw	0
  7248   0042D0  6FAF               	movwf	(sprintf@f+3)& (0+255),b
  7249   0042D2                     
  7250                           ; BSR set to: 0
  7251   0042D2  0E00               	movlw	0
  7252   0042D4  6FB6               	movwf	(sprintf@f+10)& (0+255),b
  7253   0042D6  0E00               	movlw	0
  7254   0042D8  6FB5               	movwf	(sprintf@f+9)& (0+255),b
  7255   0042DA                     
  7256                           ; BSR set to: 0
  7257   0042DA  0EAC               	movlw	low sprintf@f
  7258   0042DC  6E55               	movwf	vfprintf@fp^0,c
  7259   0042DE  0E00               	movlw	high sprintf@f
  7260   0042E0  6E56               	movwf	(vfprintf@fp+1)^0,c
  7261   0042E2  C0A6  F057         	movff	sprintf@fmt,vfprintf@fmt
  7262   0042E6  C0A7  F058         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7263   0042EA  0EAA               	movlw	low sprintf@ap
  7264   0042EC  6E59               	movwf	vfprintf@ap^0,c
  7265   0042EE  0E00               	movlw	high sprintf@ap
  7266   0042F0  6E5A               	movwf	(vfprintf@ap+1)^0,c
  7267   0042F2  EC85  F021         	call	_vfprintf	;wreg free
  7268   0042F6  0100               	movlb	0	; () banked
  7269   0042F8  51AF               	movf	(sprintf@f+3)& (0+255),w,b
  7270   0042FA  25A4               	addwf	sprintf@s& (0+255),w,b
  7271   0042FC  6ED9               	movwf	fsr2l,c
  7272   0042FE  51B0               	movf	(sprintf@f+4)& (0+255),w,b
  7273   004300  21A5               	addwfc	(sprintf@s+1)& (0+255),w,b
  7274   004302  6EDA               	movwf	fsr2h,c
  7275   004304  0E00               	movlw	0
  7276   004306  6EDF               	movwf	indf2,c
  7277   004308                     
  7278                           ; BSR set to: 0
  7279   004308  0012               	return		;funcret
  7280   00430A                     __end_of_sprintf:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function _vfprintf *****************
  7284 ;; Defined at:
  7285 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  7288 ;;		 -> NULL(0), sprintf@f(11), 
  7289 ;;  fmt             2   86[COMRAM] PTR const unsigned char 
  7290 ;;		 -> STR_18(29), STR_17(29), STR_16(29), STR_15(29), 
  7291 ;;		 -> STR_14(29), STR_13(29), STR_12(29), STR_11(29), 
  7292 ;;		 -> STR_3(7), STR_1(3), 
  7293 ;;  ap              2   88[COMRAM] PTR PTR void 
  7294 ;;		 -> printf@ap(2), sprintf@ap(2), 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  7297 ;;		 -> STR_18(29), STR_17(29), STR_16(29), STR_15(29), 
  7298 ;;		 -> STR_14(29), STR_13(29), STR_12(29), STR_11(29), 
  7299 ;;		 -> STR_3(7), STR_1(3), 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2   84[COMRAM] int 
  7302 ;; Registers used:
  7303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7309 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;Total ram usage:        8 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 8
  7316 ;; This function calls:
  7317 ;;		_vfpfcnvrt
  7318 ;; This function is called by:
  7319 ;;		_sprintf
  7320 ;;		_printf
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text31
  7325   00430A                     __ptext31:
  7326                           	callstack 0
  7327   00430A                     _vfprintf:
  7328                           	callstack 20
  7329   00430A                     
  7330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  7331   00430A  C057  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  7332   00430E  C058  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7333                           
  7334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  7335   004312  EF99  F021         	goto	l4992
  7336   004316                     l4990:
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7339   004316  C055  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  7340   00431A  C056  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7341   00431E  0E5B               	movlw	low vfprintf@cfmt
  7342   004320  6E41               	movwf	vfpfcnvrt@fmt^0,c
  7343   004322  0E00               	movlw	high vfprintf@cfmt
  7344   004324  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7345   004326  C059  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  7346   00432A  C05A  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7347   00432E  EC3D  F011         	call	_vfpfcnvrt	;wreg free
  7348   004332                     l4992:
  7349                           
  7350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  7351   004332  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  7352   004336  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7353   00433A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7354   00433A  6AF8               	clrf	tblptru,c
  7355   00433C                     	endif
  7356   00433C                     	if	0	;tblptru may be non-zero
  7357   00433C                     	endif
  7358   00433C  0008               	tblrd		*
  7359   00433E  50F5               	movf	tablat,w,c
  7360   004340  0900               	iorlw	0
  7361   004342  A4D8               	btfss	status,2,c
  7362   004344  EFA6  F021         	goto	u3971
  7363   004348  EFA8  F021         	goto	u3970
  7364   00434C                     u3971:
  7365   00434C  EF8B  F021         	goto	l4990
  7366   004350                     u3970:
  7367   004350                     
  7368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  7369   004350  0E00               	movlw	0
  7370   004352  6E56               	movwf	(?_vfprintf+1)^0,c
  7371   004354  0E00               	movlw	0
  7372   004356  6E55               	movwf	?_vfprintf^0,c
  7373   004358  0012               	return		;funcret
  7374   00435A                     __end_of_vfprintf:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _vfpfcnvrt *****************
  7378 ;; Defined at:
  7379 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  7382 ;;		 -> NULL(0), sprintf@f(11), 
  7383 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  7384 ;;		 -> vfprintf@cfmt(2), 
  7385 ;;  ap              2   66[COMRAM] PTR PTR void 
  7386 ;;		 -> printf@ap(2), sprintf@ap(2), 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  convarg         8   74[COMRAM] struct .
  7389 ;;  cp              2   82[COMRAM] PTR unsigned char 
  7390 ;;		 -> STR_18(29), STR_17(29), STR_16(29), STR_15(29), 
  7391 ;;		 -> STR_14(29), STR_13(29), STR_12(29), STR_11(29), 
  7392 ;;		 -> STR_3(7), STR_1(3), 
  7393 ;;  done            2   72[COMRAM] int 
  7394 ;;  i               2    0        int 
  7395 ;;  c               1    0        unsigned char 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      void 
  7398 ;; Registers used:
  7399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7405 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7407 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7408 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;Total ram usage:       22 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 7
  7412 ;; This function calls:
  7413 ;;		_atoi
  7414 ;;		_dtoa
  7415 ;;		_fputc
  7416 ;;		_isdigit
  7417 ;;		_xtoa
  7418 ;; This function is called by:
  7419 ;;		_vfprintf
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text32
  7424   00227A                     __ptext32:
  7425                           	callstack 0
  7426   00227A                     _vfpfcnvrt:
  7427                           	callstack 20
  7428   00227A                     
  7429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  7430   00227A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7431   00227E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7432   002282  CFDE FFF6          	movff	postinc2,tblptrl
  7433   002286  CFDD FFF7          	movff	postdec2,tblptrh
  7434   00228A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7435   00228A  6AF8               	clrf	tblptru,c
  7436   00228C                     	endif
  7437   00228C                     	if	0	;tblptru may be non-zero
  7438   00228C                     	endif
  7439   00228C  0008               	tblrd		*
  7440   00228E  50F5               	movf	tablat,w,c
  7441   002290  0A25               	xorlw	37
  7442   002292  A4D8               	btfss	status,2,c
  7443   002294  EF4E  F011         	goto	u3871
  7444   002298  EF50  F011         	goto	u3870
  7445   00229C                     u3871:
  7446   00229C  EFEA  F012         	goto	l4968
  7447   0022A0                     u3870:
  7448   0022A0                     
  7449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  7450   0022A0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7451   0022A4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7452   0022A8  2ADE               	incf	postinc2,f,c
  7453   0022AA  0E00               	movlw	0
  7454   0022AC  22DD               	addwfc	postdec2,f,c
  7455   0022AE                     
  7456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  7457   0022AE  0E00               	movlw	0
  7458   0022B0  0100               	movlb	0	; () banked
  7459   0022B2  6F66               	movwf	(_width+1)& (0+255),b
  7460   0022B4  0E00               	movlw	0
  7461   0022B6  6F65               	movwf	_width& (0+255),b
  7462   0022B8  C065  F095         	movff	_width,_flags
  7463   0022BC                     
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  7466   0022BC  6967               	setf	_prec& (0+255),b
  7467   0022BE  6968               	setf	(_prec+1)& (0+255),b
  7468   0022C0                     
  7469                           ; BSR set to: 0
  7470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  7471   0022C0  0E00               	movlw	0
  7472   0022C2  6E4A               	movwf	(vfpfcnvrt@done+1)^0,c
  7473   0022C4  0E00               	movlw	0
  7474   0022C6  6E49               	movwf	vfpfcnvrt@done^0,c
  7475                           
  7476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  7477   0022C8  EF92  F011         	goto	l4922
  7478   0022CC                     l4912:
  7479                           
  7480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  7481   0022CC  0100               	movlb	0	; () banked
  7482   0022CE  8395               	bsf	_flags& (0+255),1,b
  7483   0022D0                     
  7484                           ; BSR set to: 0
  7485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  7486   0022D0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7487   0022D4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7488   0022D8  2ADE               	incf	postinc2,f,c
  7489   0022DA  0E00               	movlw	0
  7490   0022DC  22DD               	addwfc	postdec2,f,c
  7491                           
  7492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  7493   0022DE  EF92  F011         	goto	l4922
  7494   0022E2                     l4916:
  7495                           
  7496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  7497   0022E2  0E00               	movlw	0
  7498   0022E4  6E4A               	movwf	(vfpfcnvrt@done+1)^0,c
  7499   0022E6  0E01               	movlw	1
  7500   0022E8  6E49               	movwf	vfpfcnvrt@done^0,c
  7501                           
  7502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  7503   0022EA  EF92  F011         	goto	l4922
  7504   0022EE                     l4920:
  7505   0022EE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7506   0022F2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7507   0022F6  CFDE FFF6          	movff	postinc2,tblptrl
  7508   0022FA  CFDD FFF7          	movff	postdec2,tblptrh
  7509   0022FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7510   0022FE  6AF8               	clrf	tblptru,c
  7511   002300                     	endif
  7512   002300                     	if	0	;tblptru may be non-zero
  7513   002300                     	endif
  7514   002300  0008               	tblrd		*
  7515   002302  50F5               	movf	tablat,w,c
  7516   002304  6E45               	movwf	??_vfpfcnvrt^0,c
  7517   002306  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  7518                           
  7519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7520                           ; Switch size 1, requested type "simple"
  7521                           ; Number of cases is 1, Range of values is 0 to 0
  7522                           ; switch strategies available:
  7523                           ; Name         Instructions Cycles
  7524                           ; simple_byte            4     3 (average)
  7525                           ;	Chosen strategy is simple_byte
  7526   002308  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  7527   00230A  0A00               	xorlw	0	; case 0
  7528   00230C  B4D8               	btfsc	status,2,c
  7529   00230E  EF8B  F011         	goto	l7496
  7530   002312  EF71  F011         	goto	l4916
  7531   002316                     l7496:
  7532                           
  7533                           ; Switch size 1, requested type "simple"
  7534                           ; Number of cases is 1, Range of values is 48 to 48
  7535                           ; switch strategies available:
  7536                           ; Name         Instructions Cycles
  7537                           ; simple_byte            4     3 (average)
  7538                           ;	Chosen strategy is simple_byte
  7539   002316  5045               	movf	??_vfpfcnvrt^0,w,c
  7540   002318  0A30               	xorlw	48	; case 48
  7541   00231A  B4D8               	btfsc	status,2,c
  7542   00231C  EF66  F011         	goto	l4912
  7543   002320  EF71  F011         	goto	l4916
  7544   002324                     l4922:
  7545                           
  7546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  7547   002324  5049               	movf	vfpfcnvrt@done^0,w,c
  7548   002326  104A               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  7549   002328  B4D8               	btfsc	status,2,c
  7550   00232A  EF99  F011         	goto	u3881
  7551   00232E  EF9B  F011         	goto	u3880
  7552   002332                     u3881:
  7553   002332  EF77  F011         	goto	l4920
  7554   002336                     u3880:
  7555   002336                     
  7556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  7557   002336  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7558   00233A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7559   00233E  CFDE FFF6          	movff	postinc2,tblptrl
  7560   002342  CFDD FFF7          	movff	postdec2,tblptrh
  7561   002346                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7562   002346  6AF8               	clrf	tblptru,c
  7563   002348                     	endif
  7564   002348                     	if	0	;tblptru may be non-zero
  7565   002348                     	endif
  7566   002348  0008               	tblrd		*
  7567   00234A  50F5               	movf	tablat,w,c
  7568   00234C  0A2A               	xorlw	42
  7569   00234E  A4D8               	btfss	status,2,c
  7570   002350  EFAC  F011         	goto	u3891
  7571   002354  EFAE  F011         	goto	u3890
  7572   002358                     u3891:
  7573   002358  EFD8  F011         	goto	l4932
  7574   00235C                     u3890:
  7575   00235C                     
  7576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  7577   00235C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7578   002360  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7579   002364  2ADE               	incf	postinc2,f,c
  7580   002366  0E00               	movlw	0
  7581   002368  22DD               	addwfc	postdec2,f,c
  7582                           
  7583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7584   00236A  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7585   00236E  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7586   002372  CFDF F045          	movff	indf2,??_vfpfcnvrt
  7587   002376  0E02               	movlw	2
  7588   002378  26DE               	addwf	postinc2,f,c
  7589   00237A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  7590   00237E  0E00               	movlw	0
  7591   002380  22DD               	addwfc	postdec2,f,c
  7592   002382  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7593   002386  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7594   00238A  CFDE F065          	movff	postinc2,_width
  7595   00238E  CFDD F066          	movff	postdec2,_width+1
  7596   002392                     
  7597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  7598   002392  0100               	movlb	0	; () banked
  7599   002394  BF66               	btfsc	(_width+1)& (0+255),7,b
  7600   002396  EFD1  F011         	goto	u3900
  7601   00239A  EFCF  F011         	goto	u3901
  7602   00239E                     u3901:
  7603   00239E  EF0C  F012         	goto	l4940
  7604   0023A2                     u3900:
  7605   0023A2                     
  7606                           ; BSR set to: 0
  7607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  7608   0023A2  8195               	bsf	_flags& (0+255),0,b
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  7611   0023A4  6D65               	negf	_width& (0+255),b
  7612   0023A6  1F66               	comf	(_width+1)& (0+255),f,b
  7613   0023A8  B0D8               	btfsc	status,0,c
  7614   0023AA  2B66               	incf	(_width+1)& (0+255),f,b
  7615   0023AC  EF0C  F012         	goto	l4940
  7616   0023B0                     l4932:
  7617                           
  7618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  7619   0023B0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7620   0023B4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7621   0023B8  CFDE F007          	movff	postinc2,atoi@s
  7622   0023BC  CFDD F008          	movff	postdec2,atoi@s+1
  7623   0023C0  EC3E  F019         	call	_atoi	;wreg free
  7624   0023C4  C007  F065         	movff	?_atoi,_width
  7625   0023C8  C008  F066         	movff	?_atoi+1,_width+1
  7626                           
  7627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  7628   0023CC  EFEF  F011         	goto	l4938
  7629   0023D0                     l4934:
  7630                           
  7631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  7632   0023D0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7633   0023D4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7634   0023D8  2ADE               	incf	postinc2,f,c
  7635   0023DA  0E00               	movlw	0
  7636   0023DC  22DD               	addwfc	postdec2,f,c
  7637   0023DE                     l4938:
  7638   0023DE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7639   0023E2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7640   0023E6  CFDE FFF6          	movff	postinc2,tblptrl
  7641   0023EA  CFDD FFF7          	movff	postdec2,tblptrh
  7642   0023EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7643   0023EE  6AF8               	clrf	tblptru,c
  7644   0023F0                     	endif
  7645   0023F0                     	if	0	;tblptru may be non-zero
  7646   0023F0                     	endif
  7647   0023F0  0008               	tblrd		*
  7648   0023F2  CFF5 F045          	movff	tablat,??_vfpfcnvrt
  7649   0023F6  0ED0               	movlw	208
  7650   0023F8  2445               	addwf	??_vfpfcnvrt^0,w,c
  7651   0023FA  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  7652   0023FC  6A47               	clrf	(??_vfpfcnvrt+2)^0,c
  7653   0023FE  0EFF               	movlw	255
  7654   002400  2247               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  7655   002402  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  7656   002404  E109               	bnz	u3910
  7657   002406  0E0A               	movlw	10
  7658   002408  5C46               	subwf	(??_vfpfcnvrt+1)^0,w,c
  7659   00240A  A0D8               	btfss	status,0,c
  7660   00240C  EF0A  F012         	goto	u3911
  7661   002410  EF0C  F012         	goto	u3910
  7662   002414                     u3911:
  7663   002414  EFE8  F011         	goto	l4934
  7664   002418                     u3910:
  7665   002418                     l4940:
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  7668   002418  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7669   00241C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7670   002420  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  7671   002424  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  7672   002428                     
  7673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7674   002428  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7675   00242C  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7676   002430                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7677   002430  6AF8               	clrf	tblptru,c
  7678   002432                     	endif
  7679   002432                     	if	0	;tblptru may be non-zero
  7680   002432                     	endif
  7681   002432  0008               	tblrd		*
  7682   002434  50F5               	movf	tablat,w,c
  7683   002436  0A64               	xorlw	100
  7684   002438  B4D8               	btfsc	status,2,c
  7685   00243A  EF21  F012         	goto	u3921
  7686   00243E  EF23  F012         	goto	u3920
  7687   002442                     u3921:
  7688   002442  EF32  F012         	goto	l4946
  7689   002446                     u3920:
  7690   002446  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7691   00244A  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7692   00244E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7693   00244E  6AF8               	clrf	tblptru,c
  7694   002450                     	endif
  7695   002450                     	if	0	;tblptru may be non-zero
  7696   002450                     	endif
  7697   002450  0008               	tblrd		*
  7698   002452  50F5               	movf	tablat,w,c
  7699   002454  0A69               	xorlw	105
  7700   002456  A4D8               	btfss	status,2,c
  7701   002458  EF30  F012         	goto	u3931
  7702   00245C  EF32  F012         	goto	u3930
  7703   002460                     u3931:
  7704   002460  EF75  F012         	goto	l4952
  7705   002464                     u3930:
  7706   002464                     l4946:
  7707                           
  7708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7709   002464  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7710   002468  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7711   00246C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  7712   002470  0E02               	movlw	2
  7713   002472  26DE               	addwf	postinc2,f,c
  7714   002474  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  7715   002478  0E00               	movlw	0
  7716   00247A  22DD               	addwfc	postdec2,f,c
  7717   00247C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7718   002480  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7719   002484  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  7720   002488  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  7721   00248C  0E00               	movlw	0
  7722   00248E  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  7723   002490  0EFF               	movlw	-1
  7724   002492  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  7725   002494  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  7726   002496  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  7727   002498  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  7728   00249A  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  7729   00249C  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  7732   00249E  0E01               	movlw	1
  7733   0024A0  2453               	addwf	vfpfcnvrt@cp^0,w,c
  7734   0024A2  6E45               	movwf	??_vfpfcnvrt^0,c
  7735   0024A4  0E00               	movlw	0
  7736   0024A6  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  7737   0024A8  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  7738   0024AA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7739   0024AE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7740   0024B2  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  7741   0024B6  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7742   0024BA                     
  7743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  7744   0024BA  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7745   0024BE  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7746   0024C2  C04B  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  7747   0024C6  C04C  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  7748   0024CA  C04D  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  7749   0024CE  C04E  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  7750   0024D2  C04F  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  7751   0024D6  C050  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  7752   0024DA  C051  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  7753   0024DE  C052  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  7754   0024E2  ECAA  F014         	call	_dtoa	;wreg free
  7755   0024E6  EFFF  F012         	goto	l1678
  7756   0024EA                     l4952:
  7757   0024EA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7758   0024EE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7759   0024F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7760   0024F2  6AF8               	clrf	tblptru,c
  7761   0024F4                     	endif
  7762   0024F4                     	if	0	;tblptru may be non-zero
  7763   0024F4                     	endif
  7764   0024F4  0008               	tblrd		*
  7765   0024F6  50F5               	movf	tablat,w,c
  7766   0024F8  0A58               	xorlw	88
  7767   0024FA  A4D8               	btfss	status,2,c
  7768   0024FC  EF82  F012         	goto	u3941
  7769   002500  EF84  F012         	goto	u3940
  7770   002504                     u3941:
  7771   002504  EFE1  F012         	goto	l4964
  7772   002508                     u3940:
  7773   002508                     
  7774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  7775   002508  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7776   00250C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7777   002510  CFDF F045          	movff	indf2,??_vfpfcnvrt
  7778   002514  0E02               	movlw	2
  7779   002516  26DE               	addwf	postinc2,f,c
  7780   002518  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  7781   00251C  0E00               	movlw	0
  7782   00251E  22DD               	addwfc	postdec2,f,c
  7783   002520  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7784   002524  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7785   002528  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  7786   00252C  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  7787   002530  C047  F04B         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  7788   002534  C048  F04C         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  7789   002538  6A4D               	clrf	(vfpfcnvrt@convarg+2)^0,c
  7790   00253A  6A4E               	clrf	(vfpfcnvrt@convarg+3)^0,c
  7791   00253C  6A4F               	clrf	(vfpfcnvrt@convarg+4)^0,c
  7792   00253E  6A50               	clrf	(vfpfcnvrt@convarg+5)^0,c
  7793   002540  6A51               	clrf	(vfpfcnvrt@convarg+6)^0,c
  7794   002542  6A52               	clrf	(vfpfcnvrt@convarg+7)^0,c
  7795                           
  7796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  7797   002544  0E01               	movlw	1
  7798   002546  2453               	addwf	vfpfcnvrt@cp^0,w,c
  7799   002548  6E45               	movwf	??_vfpfcnvrt^0,c
  7800   00254A  0E00               	movlw	0
  7801   00254C  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  7802   00254E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  7803   002550  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7804   002554  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7805   002558  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  7806   00255C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7807                           
  7808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  7809   002560  EFCA  F012         	goto	l4962
  7810   002564                     l4956:
  7811                           
  7812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  7813   002564  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  7814   002568  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  7815   00256C  C04B  F01E         	movff	vfpfcnvrt@convarg,xtoa@d
  7816   002570  C04C  F01F         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  7817   002574  C04D  F020         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  7818   002578  C04E  F021         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  7819   00257C  C04F  F022         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  7820   002580  C050  F023         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  7821   002584  C051  F024         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  7822   002588  C052  F025         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  7823   00258C  EC06  F016         	call	_xtoa	;wreg free
  7824   002590  EFFF  F012         	goto	l1678
  7825   002594                     l4962:
  7826   002594  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7827   002598  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7828   00259C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7829   00259C  6AF8               	clrf	tblptru,c
  7830   00259E                     	endif
  7831   00259E                     	if	0	;tblptru may be non-zero
  7832   00259E                     	endif
  7833   00259E  0008               	tblrd		*
  7834   0025A0  50F5               	movf	tablat,w,c
  7835   0025A2  6E45               	movwf	??_vfpfcnvrt^0,c
  7836   0025A4  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  7837                           
  7838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7839                           ; Switch size 1, requested type "simple"
  7840                           ; Number of cases is 1, Range of values is 0 to 0
  7841                           ; switch strategies available:
  7842                           ; Name         Instructions Cycles
  7843                           ; simple_byte            4     3 (average)
  7844                           ;	Chosen strategy is simple_byte
  7845   0025A6  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  7846   0025A8  0A00               	xorlw	0	; case 0
  7847   0025AA  B4D8               	btfsc	status,2,c
  7848   0025AC  EFDA  F012         	goto	l7498
  7849   0025B0  EFE1  F012         	goto	l4964
  7850   0025B4                     l7498:
  7851                           
  7852                           ; Switch size 1, requested type "simple"
  7853                           ; Number of cases is 1, Range of values is 88 to 88
  7854                           ; switch strategies available:
  7855                           ; Name         Instructions Cycles
  7856                           ; simple_byte            4     3 (average)
  7857                           ;	Chosen strategy is simple_byte
  7858   0025B4  5045               	movf	??_vfpfcnvrt^0,w,c
  7859   0025B6  0A58               	xorlw	88	; case 88
  7860   0025B8  B4D8               	btfsc	status,2,c
  7861   0025BA  EFB2  F012         	goto	l4956
  7862   0025BE  EFE1  F012         	goto	l4964
  7863   0025C2                     l4964:
  7864                           
  7865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  7866   0025C2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7867   0025C6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7868   0025CA  2ADE               	incf	postinc2,f,c
  7869   0025CC  0E00               	movlw	0
  7870   0025CE  22DD               	addwfc	postdec2,f,c
  7871   0025D0  EFFF  F012         	goto	l1678
  7872   0025D4                     l4968:
  7873                           
  7874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7875   0025D4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7876   0025D8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7877   0025DC  CFDE FFF6          	movff	postinc2,tblptrl
  7878   0025E0  CFDD FFF7          	movff	postdec2,tblptrh
  7879   0025E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7880   0025E4  6AF8               	clrf	tblptru,c
  7881   0025E6                     	endif
  7882   0025E6                     	if	0	;tblptru may be non-zero
  7883   0025E6                     	endif
  7884   0025E6  0008               	tblrd		*
  7885   0025E8  50F5               	movf	tablat,w,c
  7886   0025EA  6E01               	movwf	fputc@c^0,c
  7887   0025EC  6A02               	clrf	(fputc@c+1)^0,c
  7888   0025EE  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7889   0025F2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7890   0025F6  ECEB  F01D         	call	_fputc	;wreg free
  7891   0025FA  EFE1  F012         	goto	l4964
  7892   0025FE                     l1678:
  7893   0025FE  0012               	return		;funcret
  7894   002600                     __end_of_vfpfcnvrt:
  7895                           	callstack 0
  7896                           
  7897 ;; *************** function _xtoa *****************
  7898 ;; Defined at:
  7899 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7902 ;;		 -> NULL(0), sprintf@f(11), 
  7903 ;;  d               8   29[COMRAM] unsigned long long 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  n               8   51[COMRAM] unsigned long long 
  7906 ;;  i               2   59[COMRAM] int 
  7907 ;;  w               2   49[COMRAM] int 
  7908 ;;  p               2   47[COMRAM] int 
  7909 ;;  c               1   61[COMRAM] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7919 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7920 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;Total ram usage:       35 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; Hardware stack levels required when called: 6
  7926 ;; This function calls:
  7927 ;;		_pad
  7928 ;; This function is called by:
  7929 ;;		_vfpfcnvrt
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text33
  7934   002C0C                     __ptext33:
  7935                           	callstack 0
  7936   002C0C                     _xtoa:
  7937                           	callstack 20
  7938   002C0C                     
  7939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  7940   002C0C  0100               	movlb	0	; () banked
  7941   002C0E  BF68               	btfsc	(_prec+1)& (0+255),7,b
  7942   002C10  EF0C  F016         	goto	u3741
  7943   002C14  EF0E  F016         	goto	u3740
  7944   002C18                     u3741:
  7945   002C18  EF0F  F016         	goto	l4828
  7946   002C1C                     u3740:
  7947   002C1C                     
  7948                           ; BSR set to: 0
  7949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  7950   002C1C  9395               	bcf	_flags& (0+255),1,b
  7951   002C1E                     l4828:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  7955   002C1E  BF68               	btfsc	(_prec+1)& (0+255),7,b
  7956   002C20  EF1C  F016         	goto	u3750
  7957   002C24  5168               	movf	(_prec+1)& (0+255),w,b
  7958   002C26  E106               	bnz	u3751
  7959   002C28  0567               	decf	_prec& (0+255),w,b
  7960   002C2A  B0D8               	btfsc	status,0,c
  7961   002C2C  EF1A  F016         	goto	u3751
  7962   002C30  EF1C  F016         	goto	u3750
  7963   002C34                     u3751:
  7964   002C34  EF22  F016         	goto	l1642
  7965   002C38                     u3750:
  7966   002C38                     
  7967                           ; BSR set to: 0
  7968   002C38  0E00               	movlw	0
  7969   002C3A  6E31               	movwf	(xtoa@p+1)^0,c
  7970   002C3C  0E01               	movlw	1
  7971   002C3E  6E30               	movwf	xtoa@p^0,c
  7972   002C40  EF26  F016         	goto	l1644
  7973   002C44                     l1642:
  7974                           
  7975                           ; BSR set to: 0
  7976   002C44  C067  F030         	movff	_prec,xtoa@p
  7977   002C48  C068  F031         	movff	_prec+1,xtoa@p+1
  7978   002C4C                     l1644:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7982   002C4C  C065  F032         	movff	_width,xtoa@w
  7983   002C50  C066  F033         	movff	_width+1,xtoa@w+1
  7984                           
  7985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7986   002C54  C01E  F034         	movff	xtoa@d,xtoa@n
  7987   002C58  C01F  F035         	movff	xtoa@d+1,xtoa@n+1
  7988   002C5C  C020  F036         	movff	xtoa@d+2,xtoa@n+2
  7989   002C60  C021  F037         	movff	xtoa@d+3,xtoa@n+3
  7990   002C64  C022  F038         	movff	xtoa@d+4,xtoa@n+4
  7991   002C68  C023  F039         	movff	xtoa@d+5,xtoa@n+5
  7992   002C6C  C024  F03A         	movff	xtoa@d+6,xtoa@n+6
  7993   002C70  C025  F03B         	movff	xtoa@d+7,xtoa@n+7
  7994   002C74                     
  7995                           ; BSR set to: 0
  7996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7997   002C74  0E00               	movlw	0
  7998   002C76  6E3D               	movwf	(xtoa@i+1)^0,c
  7999   002C78  0E1F               	movlw	31
  8000   002C7A  6E3C               	movwf	xtoa@i^0,c
  8001   002C7C                     
  8002                           ; BSR set to: 0
  8003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  8004   002C7C  0E00               	movlw	0
  8005   002C7E  0101               	movlb	1	; () banked
  8006   002C80  6F4F               	movwf	(_dbuf+31)& (0+255),b
  8007                           
  8008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  8009   002C82  EF9E  F016         	goto	l4856
  8010   002C86                     l4836:
  8011                           
  8012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  8013   002C86  063C               	decf	xtoa@i^0,f,c
  8014   002C88  A0D8               	btfss	status,0,c
  8015   002C8A  063D               	decf	(xtoa@i+1)^0,f,c
  8016   002C8C                     
  8017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  8018   002C8C  5034               	movf	xtoa@n^0,w,c
  8019   002C8E  0B0F               	andlw	15
  8020   002C90  6E3E               	movwf	xtoa@c^0,c
  8021   002C92                     
  8022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 975:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'A' + (c - 10);
  8023   002C92  0E09               	movlw	9
  8024   002C94  643E               	cpfsgt	xtoa@c^0,c
  8025   002C96  EF4F  F016         	goto	u3761
  8026   002C9A  EF51  F016         	goto	u3760
  8027   002C9E                     u3761:
  8028   002C9E  EF59  F016         	goto	l4844
  8029   002CA2                     u3760:
  8030   002CA2  0E37               	movlw	55
  8031   002CA4  243E               	addwf	xtoa@c^0,w,c
  8032   002CA6  6E2E               	movwf	_xtoa$2924^0,c
  8033   002CA8  6A2F               	clrf	(_xtoa$2924+1)^0,c
  8034   002CAA  0E00               	movlw	0
  8035   002CAC  222F               	addwfc	(_xtoa$2924+1)^0,f,c
  8036   002CAE  EF5F  F016         	goto	l4846
  8037   002CB2                     l4844:
  8038   002CB2  0E30               	movlw	48
  8039   002CB4  243E               	addwf	xtoa@c^0,w,c
  8040   002CB6  6E2E               	movwf	_xtoa$2924^0,c
  8041   002CB8  6A2F               	clrf	(_xtoa$2924+1)^0,c
  8042   002CBA  0E00               	movlw	0
  8043   002CBC  222F               	addwfc	(_xtoa$2924+1)^0,f,c
  8044   002CBE                     l4846:
  8045   002CBE  C02E  F03E         	movff	_xtoa$2924,xtoa@c
  8046   002CC2                     
  8047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  8048   002CC2  0E30               	movlw	low _dbuf
  8049   002CC4  243C               	addwf	xtoa@i^0,w,c
  8050   002CC6  6ED9               	movwf	fsr2l,c
  8051   002CC8  0E01               	movlw	high _dbuf
  8052   002CCA  203D               	addwfc	(xtoa@i+1)^0,w,c
  8053   002CCC  6EDA               	movwf	fsr2h,c
  8054   002CCE  C03E  FFDF         	movff	xtoa@c,indf2
  8055   002CD2                     
  8056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  8057   002CD2  0630               	decf	xtoa@p^0,f,c
  8058   002CD4  A0D8               	btfss	status,0,c
  8059   002CD6  0631               	decf	(xtoa@p+1)^0,f,c
  8060   002CD8                     
  8061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  8062   002CD8  0632               	decf	xtoa@w^0,f,c
  8063   002CDA  A0D8               	btfss	status,0,c
  8064   002CDC  0633               	decf	(xtoa@w+1)^0,f,c
  8065   002CDE                     
  8066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  8067   002CDE  C034  F026         	movff	xtoa@n,??_xtoa
  8068   002CE2  C035  F027         	movff	xtoa@n+1,??_xtoa+1
  8069   002CE6  C036  F028         	movff	xtoa@n+2,??_xtoa+2
  8070   002CEA  C037  F029         	movff	xtoa@n+3,??_xtoa+3
  8071   002CEE  C038  F02A         	movff	xtoa@n+4,??_xtoa+4
  8072   002CF2  C039  F02B         	movff	xtoa@n+5,??_xtoa+5
  8073   002CF6  C03A  F02C         	movff	xtoa@n+6,??_xtoa+6
  8074   002CFA  C03B  F02D         	movff	xtoa@n+7,??_xtoa+7
  8075   002CFE  0E05               	movlw	5
  8076   002D00  EF8B  F016         	goto	u3770
  8077   002D04                     u3775:
  8078   002D04  90D8               	bcf	status,0,c
  8079   002D06  322D               	rrcf	(??_xtoa+7)^0,f,c
  8080   002D08  322C               	rrcf	(??_xtoa+6)^0,f,c
  8081   002D0A  322B               	rrcf	(??_xtoa+5)^0,f,c
  8082   002D0C  322A               	rrcf	(??_xtoa+4)^0,f,c
  8083   002D0E  3229               	rrcf	(??_xtoa+3)^0,f,c
  8084   002D10  3228               	rrcf	(??_xtoa+2)^0,f,c
  8085   002D12  3227               	rrcf	(??_xtoa+1)^0,f,c
  8086   002D14  3226               	rrcf	??_xtoa^0,f,c
  8087   002D16                     u3770:
  8088   002D16  2EE8               	decfsz	wreg,f,c
  8089   002D18  EF82  F016         	goto	u3775
  8090   002D1C  C026  F034         	movff	??_xtoa,xtoa@n
  8091   002D20  C027  F035         	movff	??_xtoa+1,xtoa@n+1
  8092   002D24  C028  F036         	movff	??_xtoa+2,xtoa@n+2
  8093   002D28  C029  F037         	movff	??_xtoa+3,xtoa@n+3
  8094   002D2C  C02A  F038         	movff	??_xtoa+4,xtoa@n+4
  8095   002D30  C02B  F039         	movff	??_xtoa+5,xtoa@n+5
  8096   002D34  C02C  F03A         	movff	??_xtoa+6,xtoa@n+6
  8097   002D38  C02D  F03B         	movff	??_xtoa+7,xtoa@n+7
  8098   002D3C                     l4856:
  8099                           
  8100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  8101   002D3C  BE3D               	btfsc	(xtoa@i+1)^0,7,c
  8102   002D3E  EFAA  F016         	goto	u3781
  8103   002D42  503D               	movf	(xtoa@i+1)^0,w,c
  8104   002D44  E109               	bnz	u3780
  8105   002D46  0E02               	movlw	2
  8106   002D48  5C3C               	subwf	xtoa@i^0,w,c
  8107   002D4A  A0D8               	btfss	status,0,c
  8108   002D4C  EFAA  F016         	goto	u3781
  8109   002D50  EFAC  F016         	goto	u3780
  8110   002D54                     u3781:
  8111   002D54  EFDD  F016         	goto	l4866
  8112   002D58                     u3780:
  8113   002D58  5034               	movf	xtoa@n^0,w,c
  8114   002D5A  1035               	iorwf	(xtoa@n+1)^0,w,c
  8115   002D5C  1036               	iorwf	(xtoa@n+2)^0,w,c
  8116   002D5E  1037               	iorwf	(xtoa@n+3)^0,w,c
  8117   002D60  1038               	iorwf	(xtoa@n+4)^0,w,c
  8118   002D62  1039               	iorwf	(xtoa@n+5)^0,w,c
  8119   002D64  103A               	iorwf	(xtoa@n+6)^0,w,c
  8120   002D66  103B               	iorwf	(xtoa@n+7)^0,w,c
  8121   002D68  A4D8               	btfss	status,2,c
  8122   002D6A  EFB9  F016         	goto	u3791
  8123   002D6E  EFBB  F016         	goto	u3790
  8124   002D72                     u3791:
  8125   002D72  EF43  F016         	goto	l4836
  8126   002D76                     u3790:
  8127   002D76  BE31               	btfsc	(xtoa@p+1)^0,7,c
  8128   002D78  EFC8  F016         	goto	u3800
  8129   002D7C  5031               	movf	(xtoa@p+1)^0,w,c
  8130   002D7E  E106               	bnz	u3801
  8131   002D80  0430               	decf	xtoa@p^0,w,c
  8132   002D82  B0D8               	btfsc	status,0,c
  8133   002D84  EFC6  F016         	goto	u3801
  8134   002D88  EFC8  F016         	goto	u3800
  8135   002D8C                     u3801:
  8136   002D8C  EF43  F016         	goto	l4836
  8137   002D90                     u3800:
  8138   002D90  BE33               	btfsc	(xtoa@w+1)^0,7,c
  8139   002D92  EFD3  F016         	goto	u3811
  8140   002D96  5033               	movf	(xtoa@w+1)^0,w,c
  8141   002D98  E108               	bnz	u3810
  8142   002D9A  0432               	decf	xtoa@w^0,w,c
  8143   002D9C  A0D8               	btfss	status,0,c
  8144   002D9E  EFD3  F016         	goto	u3811
  8145   002DA2  EFD5  F016         	goto	u3810
  8146   002DA6                     u3811:
  8147   002DA6  EFDD  F016         	goto	l4866
  8148   002DAA                     u3810:
  8149   002DAA  0100               	movlb	0	; () banked
  8150   002DAC  B395               	btfsc	_flags& (0+255),1,b
  8151   002DAE  EFDB  F016         	goto	u3821
  8152   002DB2  EFDD  F016         	goto	u3820
  8153   002DB6                     u3821:
  8154   002DB6  EF43  F016         	goto	l4836
  8155   002DBA                     u3820:
  8156   002DBA                     l4866:
  8157                           
  8158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  8159   002DBA  C01C  F011         	movff	xtoa@fp,pad@fp
  8160   002DBE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  8161   002DC2  0E30               	movlw	low _dbuf
  8162   002DC4  243C               	addwf	xtoa@i^0,w,c
  8163   002DC6  6E13               	movwf	pad@buf^0,c
  8164   002DC8  0E01               	movlw	high _dbuf
  8165   002DCA  203D               	addwfc	(xtoa@i+1)^0,w,c
  8166   002DCC  6E14               	movwf	(pad@buf+1)^0,c
  8167   002DCE  C032  F015         	movff	xtoa@w,pad@p
  8168   002DD2  C033  F016         	movff	xtoa@w+1,pad@p+1
  8169   002DD6  EC0A  F01F         	call	_pad	;wreg free
  8170   002DDA  0012               	return		;funcret
  8171   002DDC                     __end_of_xtoa:
  8172                           	callstack 0
  8173                           
  8174 ;; *************** function _dtoa *****************
  8175 ;; Defined at:
  8176 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8179 ;;		 -> NULL(0), sprintf@f(11), 
  8180 ;;  d               8   29[COMRAM] long long 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  n               8   51[COMRAM] long long 
  8183 ;;  i               2   59[COMRAM] int 
  8184 ;;  w               2   49[COMRAM] int 
  8185 ;;  p               2   47[COMRAM] int 
  8186 ;;  s               1   61[COMRAM] unsigned char 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8196 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;Total ram usage:       35 bytes
  8201 ;; Hardware stack levels used: 1
  8202 ;; Hardware stack levels required when called: 6
  8203 ;; This function calls:
  8204 ;;		___aodiv
  8205 ;;		___aomod
  8206 ;;		_abs
  8207 ;;		_pad
  8208 ;; This function is called by:
  8209 ;;		_vfpfcnvrt
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text34
  8214   002954                     __ptext34:
  8215                           	callstack 0
  8216   002954                     _dtoa:
  8217                           	callstack 20
  8218   002954                     
  8219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8220   002954  C01E  F034         	movff	dtoa@d,dtoa@n
  8221   002958  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  8222   00295C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  8223   002960  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  8224   002964  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  8225   002968  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  8226   00296C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  8227   002970  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  8228   002974                     
  8229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8230   002974  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  8231   002976  EFBF  F014         	goto	u3611
  8232   00297A  EFC2  F014         	goto	u3610
  8233   00297E                     u3611:
  8234   00297E  0E01               	movlw	1
  8235   002980  EFC3  F014         	goto	u3620
  8236   002984                     u3610:
  8237   002984  0E00               	movlw	0
  8238   002986                     u3620:
  8239   002986  6E3E               	movwf	dtoa@s^0,c
  8240   002988                     
  8241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8242   002988  503E               	movf	dtoa@s^0,w,c
  8243   00298A  B4D8               	btfsc	status,2,c
  8244   00298C  EFCA  F014         	goto	u3631
  8245   002990  EFCC  F014         	goto	u3630
  8246   002994                     u3631:
  8247   002994  EFDC  F014         	goto	l4772
  8248   002998                     u3630:
  8249   002998                     
  8250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8251   002998  1E3B               	comf	(dtoa@n+7)^0,f,c
  8252   00299A  1E3A               	comf	(dtoa@n+6)^0,f,c
  8253   00299C  1E39               	comf	(dtoa@n+5)^0,f,c
  8254   00299E  1E38               	comf	(dtoa@n+4)^0,f,c
  8255   0029A0  1E37               	comf	(dtoa@n+3)^0,f,c
  8256   0029A2  1E36               	comf	(dtoa@n+2)^0,f,c
  8257   0029A4  1E35               	comf	(dtoa@n+1)^0,f,c
  8258   0029A6  6C34               	negf	dtoa@n^0,c
  8259   0029A8  0E00               	movlw	0
  8260   0029AA  2235               	addwfc	(dtoa@n+1)^0,f,c
  8261   0029AC  2236               	addwfc	(dtoa@n+2)^0,f,c
  8262   0029AE  2237               	addwfc	(dtoa@n+3)^0,f,c
  8263   0029B0  2238               	addwfc	(dtoa@n+4)^0,f,c
  8264   0029B2  2239               	addwfc	(dtoa@n+5)^0,f,c
  8265   0029B4  223A               	addwfc	(dtoa@n+6)^0,f,c
  8266   0029B6  223B               	addwfc	(dtoa@n+7)^0,f,c
  8267   0029B8                     l4772:
  8268                           
  8269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  8270   0029B8  0100               	movlb	0	; () banked
  8271   0029BA  BF68               	btfsc	(_prec+1)& (0+255),7,b
  8272   0029BC  EFE2  F014         	goto	u3641
  8273   0029C0  EFE4  F014         	goto	u3640
  8274   0029C4                     u3641:
  8275   0029C4  EFE5  F014         	goto	l4776
  8276   0029C8                     u3640:
  8277   0029C8                     
  8278                           ; BSR set to: 0
  8279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  8280   0029C8  9395               	bcf	_flags& (0+255),1,b
  8281   0029CA                     l4776:
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8285   0029CA  BF68               	btfsc	(_prec+1)& (0+255),7,b
  8286   0029CC  EFF2  F014         	goto	u3650
  8287   0029D0  5168               	movf	(_prec+1)& (0+255),w,b
  8288   0029D2  E106               	bnz	u3651
  8289   0029D4  0567               	decf	_prec& (0+255),w,b
  8290   0029D6  B0D8               	btfsc	status,0,c
  8291   0029D8  EFF0  F014         	goto	u3651
  8292   0029DC  EFF2  F014         	goto	u3650
  8293   0029E0                     u3651:
  8294   0029E0  EFF8  F014         	goto	l1621
  8295   0029E4                     u3650:
  8296   0029E4                     
  8297                           ; BSR set to: 0
  8298   0029E4  0E00               	movlw	0
  8299   0029E6  6E31               	movwf	(dtoa@p+1)^0,c
  8300   0029E8  0E01               	movlw	1
  8301   0029EA  6E30               	movwf	dtoa@p^0,c
  8302   0029EC  EFFC  F014         	goto	l1623
  8303   0029F0                     l1621:
  8304                           
  8305                           ; BSR set to: 0
  8306   0029F0  C067  F030         	movff	_prec,dtoa@p
  8307   0029F4  C068  F031         	movff	_prec+1,dtoa@p+1
  8308   0029F8                     l1623:
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8312   0029F8  C065  F032         	movff	_width,dtoa@w
  8313   0029FC  C066  F033         	movff	_width+1,dtoa@w+1
  8314   002A00                     
  8315                           ; BSR set to: 0
  8316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8317   002A00  503E               	movf	dtoa@s^0,w,c
  8318   002A02  B4D8               	btfsc	status,2,c
  8319   002A04  EF06  F015         	goto	u3661
  8320   002A08  EF08  F015         	goto	u3660
  8321   002A0C                     u3661:
  8322   002A0C  EF1F  F015         	goto	l1624
  8323   002A10                     u3660:
  8324   002A10                     
  8325                           ; BSR set to: 0
  8326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8327   002A10  0632               	decf	dtoa@w^0,f,c
  8328   002A12  A0D8               	btfss	status,0,c
  8329   002A14  0633               	decf	(dtoa@w+1)^0,f,c
  8330   002A16                     
  8331                           ; BSR set to: 0
  8332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8333   002A16  503E               	movf	dtoa@s^0,w,c
  8334   002A18  A4D8               	btfss	status,2,c
  8335   002A1A  EF11  F015         	goto	u3671
  8336   002A1E  EF13  F015         	goto	u3670
  8337   002A22                     u3671:
  8338   002A22  EF19  F015         	goto	l4788
  8339   002A26                     u3670:
  8340   002A26                     
  8341                           ; BSR set to: 0
  8342   002A26  0E00               	movlw	0
  8343   002A28  6E2F               	movwf	(_dtoa$2914+1)^0,c
  8344   002A2A  0E2B               	movlw	43
  8345   002A2C  6E2E               	movwf	_dtoa$2914^0,c
  8346   002A2E  EF1D  F015         	goto	l4790
  8347   002A32                     l4788:
  8348                           
  8349                           ; BSR set to: 0
  8350   002A32  0E00               	movlw	0
  8351   002A34  6E2F               	movwf	(_dtoa$2914+1)^0,c
  8352   002A36  0E2D               	movlw	45
  8353   002A38  6E2E               	movwf	_dtoa$2914^0,c
  8354   002A3A                     l4790:
  8355                           
  8356                           ; BSR set to: 0
  8357   002A3A  C02E  F03E         	movff	_dtoa$2914,dtoa@s
  8358   002A3E                     l1624:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8362   002A3E  0E00               	movlw	0
  8363   002A40  6E3D               	movwf	(dtoa@i+1)^0,c
  8364   002A42  0E1F               	movlw	31
  8365   002A44  6E3C               	movwf	dtoa@i^0,c
  8366   002A46                     
  8367                           ; BSR set to: 0
  8368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8369   002A46  0E00               	movlw	0
  8370   002A48  0101               	movlb	1	; () banked
  8371   002A4A  6F4F               	movwf	(_dbuf+31)& (0+255),b
  8372                           
  8373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8374   002A4C  EFA4  F015         	goto	l4804
  8375   002A50                     l4794:
  8376                           
  8377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8378   002A50  063C               	decf	dtoa@i^0,f,c
  8379   002A52  A0D8               	btfss	status,0,c
  8380   002A54  063D               	decf	(dtoa@i+1)^0,f,c
  8381   002A56                     
  8382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8383   002A56  0E30               	movlw	low _dbuf
  8384   002A58  243C               	addwf	dtoa@i^0,w,c
  8385   002A5A  6ED9               	movwf	fsr2l,c
  8386   002A5C  0E01               	movlw	high _dbuf
  8387   002A5E  203D               	addwfc	(dtoa@i+1)^0,w,c
  8388   002A60  6EDA               	movwf	fsr2h,c
  8389   002A62  C034  F001         	movff	dtoa@n,___aomod@dividend
  8390   002A66  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8391   002A6A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8392   002A6E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8393   002A72  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8394   002A76  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8395   002A7A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8396   002A7E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8397   002A82  0E0A               	movlw	10
  8398   002A84  6E09               	movwf	___aomod@divisor^0,c
  8399   002A86  0E00               	movlw	0
  8400   002A88  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8401   002A8A  0E00               	movlw	0
  8402   002A8C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8403   002A8E  0E00               	movlw	0
  8404   002A90  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8405   002A92  0E00               	movlw	0
  8406   002A94  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8407   002A96  0E00               	movlw	0
  8408   002A98  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8409   002A9A  0E00               	movlw	0
  8410   002A9C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8411   002A9E  0E00               	movlw	0
  8412   002AA0  6E10               	movwf	(___aomod@divisor+7)^0,c
  8413   002AA2  EC8C  F018         	call	___aomod	;wreg free
  8414   002AA6  C001  F026         	movff	?___aomod,??_dtoa
  8415   002AAA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8416   002AAE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8417   002AB2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8418   002AB6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8419   002ABA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8420   002ABE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8421   002AC2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8422   002AC6  C026  F013         	movff	??_dtoa,abs@a
  8423   002ACA  C027  F014         	movff	??_dtoa+1,abs@a+1
  8424   002ACE  ECC5  F022         	call	_abs	;wreg free
  8425   002AD2  5013               	movf	?_abs^0,w,c
  8426   002AD4  0F30               	addlw	48
  8427   002AD6  6EDF               	movwf	indf2,c
  8428   002AD8                     
  8429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8430   002AD8  0630               	decf	dtoa@p^0,f,c
  8431   002ADA  A0D8               	btfss	status,0,c
  8432   002ADC  0631               	decf	(dtoa@p+1)^0,f,c
  8433   002ADE                     
  8434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8435   002ADE  0632               	decf	dtoa@w^0,f,c
  8436   002AE0  A0D8               	btfss	status,0,c
  8437   002AE2  0633               	decf	(dtoa@w+1)^0,f,c
  8438   002AE4                     
  8439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8440   002AE4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  8441   002AE8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8442   002AEC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8443   002AF0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8444   002AF4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8445   002AF8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8446   002AFC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8447   002B00  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8448   002B04  0E0A               	movlw	10
  8449   002B06  6E09               	movwf	___aodiv@divisor^0,c
  8450   002B08  0E00               	movlw	0
  8451   002B0A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8452   002B0C  0E00               	movlw	0
  8453   002B0E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8454   002B10  0E00               	movlw	0
  8455   002B12  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8456   002B14  0E00               	movlw	0
  8457   002B16  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8458   002B18  0E00               	movlw	0
  8459   002B1A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8460   002B1C  0E00               	movlw	0
  8461   002B1E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8462   002B20  0E00               	movlw	0
  8463   002B22  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8464   002B24  ECC8  F017         	call	___aodiv	;wreg free
  8465   002B28  C001  F034         	movff	?___aodiv,dtoa@n
  8466   002B2C  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  8467   002B30  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  8468   002B34  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  8469   002B38  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  8470   002B3C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  8471   002B40  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  8472   002B44  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  8473   002B48                     l4804:
  8474                           
  8475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8476   002B48  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  8477   002B4A  EFAF  F015         	goto	u3681
  8478   002B4E  503D               	movf	(dtoa@i+1)^0,w,c
  8479   002B50  E108               	bnz	u3680
  8480   002B52  043C               	decf	dtoa@i^0,w,c
  8481   002B54  A0D8               	btfss	status,0,c
  8482   002B56  EFAF  F015         	goto	u3681
  8483   002B5A  EFB1  F015         	goto	u3680
  8484   002B5E                     u3681:
  8485   002B5E  EFE2  F015         	goto	l4814
  8486   002B62                     u3680:
  8487   002B62  5034               	movf	dtoa@n^0,w,c
  8488   002B64  1035               	iorwf	(dtoa@n+1)^0,w,c
  8489   002B66  1036               	iorwf	(dtoa@n+2)^0,w,c
  8490   002B68  1037               	iorwf	(dtoa@n+3)^0,w,c
  8491   002B6A  1038               	iorwf	(dtoa@n+4)^0,w,c
  8492   002B6C  1039               	iorwf	(dtoa@n+5)^0,w,c
  8493   002B6E  103A               	iorwf	(dtoa@n+6)^0,w,c
  8494   002B70  103B               	iorwf	(dtoa@n+7)^0,w,c
  8495   002B72  A4D8               	btfss	status,2,c
  8496   002B74  EFBE  F015         	goto	u3691
  8497   002B78  EFC0  F015         	goto	u3690
  8498   002B7C                     u3691:
  8499   002B7C  EF28  F015         	goto	l4794
  8500   002B80                     u3690:
  8501   002B80  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8502   002B82  EFCD  F015         	goto	u3700
  8503   002B86  5031               	movf	(dtoa@p+1)^0,w,c
  8504   002B88  E106               	bnz	u3701
  8505   002B8A  0430               	decf	dtoa@p^0,w,c
  8506   002B8C  B0D8               	btfsc	status,0,c
  8507   002B8E  EFCB  F015         	goto	u3701
  8508   002B92  EFCD  F015         	goto	u3700
  8509   002B96                     u3701:
  8510   002B96  EF28  F015         	goto	l4794
  8511   002B9A                     u3700:
  8512   002B9A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8513   002B9C  EFD8  F015         	goto	u3711
  8514   002BA0  5033               	movf	(dtoa@w+1)^0,w,c
  8515   002BA2  E108               	bnz	u3710
  8516   002BA4  0432               	decf	dtoa@w^0,w,c
  8517   002BA6  A0D8               	btfss	status,0,c
  8518   002BA8  EFD8  F015         	goto	u3711
  8519   002BAC  EFDA  F015         	goto	u3710
  8520   002BB0                     u3711:
  8521   002BB0  EFE2  F015         	goto	l4814
  8522   002BB4                     u3710:
  8523   002BB4  0100               	movlb	0	; () banked
  8524   002BB6  B395               	btfsc	_flags& (0+255),1,b
  8525   002BB8  EFE0  F015         	goto	u3721
  8526   002BBC  EFE2  F015         	goto	u3720
  8527   002BC0                     u3721:
  8528   002BC0  EF28  F015         	goto	l4794
  8529   002BC4                     u3720:
  8530   002BC4                     l4814:
  8531                           
  8532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8533   002BC4  503E               	movf	dtoa@s^0,w,c
  8534   002BC6  B4D8               	btfsc	status,2,c
  8535   002BC8  EFE8  F015         	goto	u3731
  8536   002BCC  EFEA  F015         	goto	u3730
  8537   002BD0                     u3731:
  8538   002BD0  EFF5  F015         	goto	l4820
  8539   002BD4                     u3730:
  8540   002BD4                     
  8541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8542   002BD4  063C               	decf	dtoa@i^0,f,c
  8543   002BD6  A0D8               	btfss	status,0,c
  8544   002BD8  063D               	decf	(dtoa@i+1)^0,f,c
  8545   002BDA                     
  8546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8547   002BDA  0E30               	movlw	low _dbuf
  8548   002BDC  243C               	addwf	dtoa@i^0,w,c
  8549   002BDE  6ED9               	movwf	fsr2l,c
  8550   002BE0  0E01               	movlw	high _dbuf
  8551   002BE2  203D               	addwfc	(dtoa@i+1)^0,w,c
  8552   002BE4  6EDA               	movwf	fsr2h,c
  8553   002BE6  C03E  FFDF         	movff	dtoa@s,indf2
  8554   002BEA                     l4820:
  8555                           
  8556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8557   002BEA  C01C  F011         	movff	dtoa@fp,pad@fp
  8558   002BEE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8559   002BF2  0E30               	movlw	low _dbuf
  8560   002BF4  243C               	addwf	dtoa@i^0,w,c
  8561   002BF6  6E13               	movwf	pad@buf^0,c
  8562   002BF8  0E01               	movlw	high _dbuf
  8563   002BFA  203D               	addwfc	(dtoa@i+1)^0,w,c
  8564   002BFC  6E14               	movwf	(pad@buf+1)^0,c
  8565   002BFE  C032  F015         	movff	dtoa@w,pad@p
  8566   002C02  C033  F016         	movff	dtoa@w+1,pad@p+1
  8567   002C06  EC0A  F01F         	call	_pad	;wreg free
  8568   002C0A  0012               	return		;funcret
  8569   002C0C                     __end_of_dtoa:
  8570                           	callstack 0
  8571                           
  8572 ;; *************** function _pad *****************
  8573 ;; Defined at:
  8574 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8577 ;;		 -> NULL(0), sprintf@f(11), 
  8578 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8579 ;;		 -> dbuf(32), 
  8580 ;;  p               2   20[COMRAM] int 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  w               2   25[COMRAM] int 
  8583 ;;  i               2   23[COMRAM] int 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8593 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;Total ram usage:       11 bytes
  8598 ;; Hardware stack levels used: 1
  8599 ;; Hardware stack levels required when called: 5
  8600 ;; This function calls:
  8601 ;;		_fputc
  8602 ;;		_fputs
  8603 ;; This function is called by:
  8604 ;;		_dtoa
  8605 ;;		_xtoa
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text35
  8610   003E14                     __ptext35:
  8611                           	callstack 0
  8612   003E14                     _pad:
  8613                           	callstack 20
  8614   003E14                     
  8615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  8616   003E14  0100               	movlb	0	; () banked
  8617   003E16  A195               	btfss	_flags& (0+255),0,b
  8618   003E18  EF10  F01F         	goto	u3521
  8619   003E1C  EF12  F01F         	goto	u3520
  8620   003E20                     u3521:
  8621   003E20  EF1C  F01F         	goto	l4730
  8622   003E24                     u3520:
  8623   003E24                     
  8624                           ; BSR set to: 0
  8625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  8626   003E24  C013  F00A         	movff	pad@buf,fputs@s
  8627   003E28  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8628   003E2C  C011  F00C         	movff	pad@fp,fputs@fp
  8629   003E30  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8630   003E34  EC42  F022         	call	_fputs	;wreg free
  8631   003E38                     l4730:
  8632                           
  8633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  8634   003E38  BE16               	btfsc	(pad@p+1)^0,7,c
  8635   003E3A  EF21  F01F         	goto	u3531
  8636   003E3E  EF23  F01F         	goto	u3530
  8637   003E42                     u3531:
  8638   003E42  EF29  F01F         	goto	l4734
  8639   003E46                     u3530:
  8640   003E46  C015  F01A         	movff	pad@p,pad@w
  8641   003E4A  C016  F01B         	movff	pad@p+1,pad@w+1
  8642   003E4E  EF2D  F01F         	goto	l1610
  8643   003E52                     l4734:
  8644   003E52  0E00               	movlw	0
  8645   003E54  6E1B               	movwf	(pad@w+1)^0,c
  8646   003E56  0E00               	movlw	0
  8647   003E58  6E1A               	movwf	pad@w^0,c
  8648   003E5A                     l1610:
  8649                           
  8650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8651   003E5A  0E00               	movlw	0
  8652   003E5C  6E19               	movwf	(pad@i+1)^0,c
  8653   003E5E  0E00               	movlw	0
  8654   003E60  6E18               	movwf	pad@i^0,c
  8655                           
  8656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8657   003E62  EF3F  F01F         	goto	l4740
  8658   003E66                     l4736:
  8659                           
  8660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8661   003E66  0E00               	movlw	0
  8662   003E68  6E02               	movwf	(fputc@c+1)^0,c
  8663   003E6A  0E20               	movlw	32
  8664   003E6C  6E01               	movwf	fputc@c^0,c
  8665   003E6E  C011  F003         	movff	pad@fp,fputc@fp
  8666   003E72  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8667   003E76  ECEB  F01D         	call	_fputc	;wreg free
  8668   003E7A                     
  8669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8670   003E7A  4A18               	infsnz	pad@i^0,f,c
  8671   003E7C  2A19               	incf	(pad@i+1)^0,f,c
  8672   003E7E                     l4740:
  8673                           
  8674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8675   003E7E  501A               	movf	pad@w^0,w,c
  8676   003E80  5C18               	subwf	pad@i^0,w,c
  8677   003E82  5019               	movf	(pad@i+1)^0,w,c
  8678   003E84  0A80               	xorlw	128
  8679   003E86  6E17               	movwf	??_pad^0,c
  8680   003E88  501B               	movf	(pad@w+1)^0,w,c
  8681   003E8A  0A80               	xorlw	128
  8682   003E8C  5817               	subwfb	??_pad^0,w,c
  8683   003E8E  A0D8               	btfss	status,0,c
  8684   003E90  EF4C  F01F         	goto	u3541
  8685   003E94  EF4E  F01F         	goto	u3540
  8686   003E98                     u3541:
  8687   003E98  EF33  F01F         	goto	l4736
  8688   003E9C                     u3540:
  8689   003E9C                     
  8690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  8691   003E9C  0100               	movlb	0	; () banked
  8692   003E9E  B195               	btfsc	_flags& (0+255),0,b
  8693   003EA0  EF54  F01F         	goto	u3551
  8694   003EA4  EF56  F01F         	goto	u3550
  8695   003EA8                     u3551:
  8696   003EA8  EF60  F01F         	goto	l1615
  8697   003EAC                     u3550:
  8698   003EAC                     
  8699                           ; BSR set to: 0
  8700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8701   003EAC  C013  F00A         	movff	pad@buf,fputs@s
  8702   003EB0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8703   003EB4  C011  F00C         	movff	pad@fp,fputs@fp
  8704   003EB8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8705   003EBC  EC42  F022         	call	_fputs	;wreg free
  8706   003EC0                     l1615:
  8707   003EC0  0012               	return		;funcret
  8708   003EC2                     __end_of_pad:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function _fputs *****************
  8712 ;; Defined at:
  8713 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8716 ;;		 -> dbuf(32), 
  8717 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8718 ;;		 -> NULL(0), sprintf@f(11), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  i               2   14[COMRAM] int 
  8721 ;;  c               1   13[COMRAM] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  2    9[COMRAM] int 
  8724 ;; Registers used:
  8725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;Total ram usage:        7 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 4
  8738 ;; This function calls:
  8739 ;;		_fputc
  8740 ;; This function is called by:
  8741 ;;		_pad
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text36
  8746   004484                     __ptext36:
  8747                           	callstack 0
  8748   004484                     _fputs:
  8749                           	callstack 20
  8750   004484  0E00               	movlw	0
  8751   004486  6E10               	movwf	(fputs@i+1)^0,c
  8752   004488  0E00               	movlw	0
  8753   00448A  6E0F               	movwf	fputs@i^0,c
  8754   00448C  EF53  F022         	goto	l4638
  8755   004490                     l4634:
  8756   004490  C00E  F001         	movff	fputs@c,fputc@c
  8757   004494  6A02               	clrf	(fputc@c+1)^0,c
  8758   004496  C00C  F003         	movff	fputs@fp,fputc@fp
  8759   00449A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8760   00449E  ECEB  F01D         	call	_fputc	;wreg free
  8761   0044A2  4A0F               	infsnz	fputs@i^0,f,c
  8762   0044A4  2A10               	incf	(fputs@i+1)^0,f,c
  8763   0044A6                     l4638:
  8764   0044A6  500F               	movf	fputs@i^0,w,c
  8765   0044A8  240A               	addwf	fputs@s^0,w,c
  8766   0044AA  6ED9               	movwf	fsr2l,c
  8767   0044AC  5010               	movf	(fputs@i+1)^0,w,c
  8768   0044AE  200B               	addwfc	(fputs@s+1)^0,w,c
  8769   0044B0  6EDA               	movwf	fsr2h,c
  8770   0044B2  50DF               	movf	indf2,w,c
  8771   0044B4  6E0E               	movwf	fputs@c^0,c
  8772   0044B6  500E               	movf	fputs@c^0,w,c
  8773   0044B8  A4D8               	btfss	status,2,c
  8774   0044BA  EF61  F022         	goto	u3381
  8775   0044BE  EF63  F022         	goto	u3380
  8776   0044C2                     u3381:
  8777   0044C2  EF48  F022         	goto	l4634
  8778   0044C6                     u3380:
  8779   0044C6  0012               	return		;funcret
  8780   0044C8                     __end_of_fputs:
  8781                           	callstack 0
  8782                           
  8783 ;; *************** function _fputc *****************
  8784 ;; Defined at:
  8785 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  c               2    0[COMRAM] int 
  8788 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8789 ;;		 -> NULL(0), sprintf@f(11), 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  2    0[COMRAM] int 
  8794 ;; Registers used:
  8795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;Total ram usage:        9 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 3
  8808 ;; This function calls:
  8809 ;;		_putch
  8810 ;; This function is called by:
  8811 ;;		_pad
  8812 ;;		_vfpfcnvrt
  8813 ;;		_fputs
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text37
  8818   003BD6                     __ptext37:
  8819                           	callstack 0
  8820   003BD6                     _fputc:
  8821                           	callstack 20
  8822   003BD6  5003               	movf	fputc@fp^0,w,c
  8823   003BD8  1004               	iorwf	(fputc@fp+1)^0,w,c
  8824   003BDA  B4D8               	btfsc	status,2,c
  8825   003BDC  EFF2  F01D         	goto	u3341
  8826   003BE0  EFF4  F01D         	goto	u3340
  8827   003BE4                     u3341:
  8828   003BE4  EFFD  F01D         	goto	l4622
  8829   003BE8                     u3340:
  8830   003BE8  5003               	movf	fputc@fp^0,w,c
  8831   003BEA  1004               	iorwf	(fputc@fp+1)^0,w,c
  8832   003BEC  A4D8               	btfss	status,2,c
  8833   003BEE  EFFB  F01D         	goto	u3351
  8834   003BF2  EFFD  F01D         	goto	u3350
  8835   003BF6                     u3351:
  8836   003BF6  EF02  F01E         	goto	l4624
  8837   003BFA                     u3350:
  8838   003BFA                     l4622:
  8839   003BFA  5001               	movf	fputc@c^0,w,c
  8840   003BFC  EC51  F024         	call	_putch
  8841   003C00  EF4F  F01E         	goto	l1748
  8842   003C04                     l4624:
  8843   003C04  EE20 F009          	lfsr	2,9
  8844   003C08  5003               	movf	fputc@fp^0,w,c
  8845   003C0A  26D9               	addwf	fsr2l,f,c
  8846   003C0C  5004               	movf	(fputc@fp+1)^0,w,c
  8847   003C0E  22DA               	addwfc	fsr2h,f,c
  8848   003C10  50DE               	movf	postinc2,w,c
  8849   003C12  10DE               	iorwf	postinc2,w,c
  8850   003C14  B4D8               	btfsc	status,2,c
  8851   003C16  EF0F  F01E         	goto	u3361
  8852   003C1A  EF11  F01E         	goto	u3360
  8853   003C1E                     u3361:
  8854   003C1E  EF2C  F01E         	goto	l4628
  8855   003C22                     u3360:
  8856   003C22  EE20 F009          	lfsr	2,9
  8857   003C26  5003               	movf	fputc@fp^0,w,c
  8858   003C28  26D9               	addwf	fsr2l,f,c
  8859   003C2A  5004               	movf	(fputc@fp+1)^0,w,c
  8860   003C2C  22DA               	addwfc	fsr2h,f,c
  8861   003C2E  EE10 F003          	lfsr	1,3
  8862   003C32  5003               	movf	fputc@fp^0,w,c
  8863   003C34  26E1               	addwf	fsr1l,f,c
  8864   003C36  5004               	movf	(fputc@fp+1)^0,w,c
  8865   003C38  22E2               	addwfc	fsr1h,f,c
  8866   003C3A  50DE               	movf	postinc2,w,c
  8867   003C3C  5CE6               	subwf	postinc1,w,c
  8868   003C3E  50E6               	movf	postinc1,w,c
  8869   003C40  0A80               	xorlw	128
  8870   003C42  6E09               	movwf	(??_fputc+4)^0,c
  8871   003C44  50DE               	movf	postinc2,w,c
  8872   003C46  0A80               	xorlw	128
  8873   003C48  5809               	subwfb	(??_fputc+4)^0,w,c
  8874   003C4A  B0D8               	btfsc	status,0,c
  8875   003C4C  EF2A  F01E         	goto	u3371
  8876   003C50  EF2C  F01E         	goto	u3370
  8877   003C54                     u3371:
  8878   003C54  EF4F  F01E         	goto	l1748
  8879   003C58                     u3370:
  8880   003C58                     l4628:
  8881   003C58  EE20 F003          	lfsr	2,3
  8882   003C5C  5003               	movf	fputc@fp^0,w,c
  8883   003C5E  26D9               	addwf	fsr2l,f,c
  8884   003C60  5004               	movf	(fputc@fp+1)^0,w,c
  8885   003C62  22DA               	addwfc	fsr2h,f,c
  8886   003C64  CFDE F005          	movff	postinc2,??_fputc
  8887   003C68  CFDD F006          	movff	postdec2,??_fputc+1
  8888   003C6C  C003  FFD9         	movff	fputc@fp,fsr2l
  8889   003C70  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8890   003C74  CFDE F007          	movff	postinc2,??_fputc+2
  8891   003C78  CFDD F008          	movff	postdec2,??_fputc+3
  8892   003C7C  5005               	movf	??_fputc^0,w,c
  8893   003C7E  2407               	addwf	(??_fputc+2)^0,w,c
  8894   003C80  6ED9               	movwf	fsr2l,c
  8895   003C82  5006               	movf	(??_fputc+1)^0,w,c
  8896   003C84  2008               	addwfc	(??_fputc+3)^0,w,c
  8897   003C86  6EDA               	movwf	fsr2h,c
  8898   003C88  C001  FFDF         	movff	fputc@c,indf2
  8899   003C8C  EE20 F003          	lfsr	2,3
  8900   003C90  5003               	movf	fputc@fp^0,w,c
  8901   003C92  26D9               	addwf	fsr2l,f,c
  8902   003C94  5004               	movf	(fputc@fp+1)^0,w,c
  8903   003C96  22DA               	addwfc	fsr2h,f,c
  8904   003C98  2ADE               	incf	postinc2,f,c
  8905   003C9A  0E00               	movlw	0
  8906   003C9C  22DD               	addwfc	postdec2,f,c
  8907   003C9E                     l1748:
  8908   003C9E  0012               	return		;funcret
  8909   003CA0                     __end_of_fputc:
  8910                           	callstack 0
  8911                           
  8912 ;; *************** function _putch *****************
  8913 ;; Defined at:
  8914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  c               1    wreg     unsigned char 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  c               1    0[COMRAM] unsigned char 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		wreg
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;Total ram usage:        0 bytes
  8933 ;; Hardware stack levels used: 1
  8934 ;; Hardware stack levels required when called: 2
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_fputc
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text38
  8943   0048A2                     __ptext38:
  8944                           	callstack 0
  8945   0048A2                     _putch:
  8946                           	callstack 20
  8947   0048A2  0012               	return		;funcret
  8948   0048A4                     __end_of_putch:
  8949                           	callstack 0
  8950                           
  8951 ;; *************** function _abs *****************
  8952 ;; Defined at:
  8953 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  a               2   18[COMRAM] int 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  2   18[COMRAM] int 
  8960 ;; Registers used:
  8961 ;;		wreg, status,2, status,0
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;Total ram usage:        4 bytes
  8972 ;; Hardware stack levels used: 1
  8973 ;; Hardware stack levels required when called: 2
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_dtoa
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text39
  8982   00458A                     __ptext39:
  8983                           	callstack 0
  8984   00458A                     _abs:
  8985                           	callstack 23
  8986   00458A  BE14               	btfsc	(abs@a+1)^0,7,c
  8987   00458C  EFD2  F022         	goto	u3560
  8988   004590  5014               	movf	(abs@a+1)^0,w,c
  8989   004592  E106               	bnz	u3561
  8990   004594  0413               	decf	abs@a^0,w,c
  8991   004596  B0D8               	btfsc	status,0,c
  8992   004598  EFD0  F022         	goto	u3561
  8993   00459C  EFD2  F022         	goto	u3560
  8994   0045A0                     u3561:
  8995   0045A0  EFE0  F022         	goto	l1694
  8996   0045A4                     u3560:
  8997   0045A4  C013  F015         	movff	abs@a,??_abs
  8998   0045A8  C014  F016         	movff	abs@a+1,??_abs+1
  8999   0045AC  1E15               	comf	??_abs^0,f,c
  9000   0045AE  1E16               	comf	(??_abs+1)^0,f,c
  9001   0045B0  4A15               	infsnz	??_abs^0,f,c
  9002   0045B2  2A16               	incf	(??_abs+1)^0,f,c
  9003   0045B4  C015  F013         	movff	??_abs,?_abs
  9004   0045B8  C016  F014         	movff	??_abs+1,?_abs+1
  9005   0045BC  EFE4  F022         	goto	l1697
  9006   0045C0                     l1694:
  9007   0045C0  C013  F013         	movff	abs@a,?_abs
  9008   0045C4  C014  F014         	movff	abs@a+1,?_abs+1
  9009   0045C8                     l1697:
  9010   0045C8  0012               	return		;funcret
  9011   0045CA                     __end_of_abs:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function ___aomod *****************
  9015 ;; Defined at:
  9016 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  dividend        8    0[COMRAM] long long 
  9019 ;;  divisor         8    8[COMRAM] long long 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  sign            1   17[COMRAM] unsigned char 
  9022 ;;  counter         1   16[COMRAM] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  8    0[COMRAM] long long 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9032 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;Total ram usage:       18 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 2
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_dtoa
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text40
  9047   003118                     __ptext40:
  9048                           	callstack 0
  9049   003118                     ___aomod:
  9050                           	callstack 23
  9051   003118  0E00               	movlw	0
  9052   00311A  6E12               	movwf	___aomod@sign^0,c
  9053   00311C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9054   00311E  EF95  F018         	goto	u3460
  9055   003122  EF93  F018         	goto	u3461
  9056   003126                     u3461:
  9057   003126  EFA7  F018         	goto	l4698
  9058   00312A                     u3460:
  9059   00312A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9060   00312C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9061   00312E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9062   003130  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9063   003132  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9064   003134  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9065   003136  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9066   003138  6C01               	negf	___aomod@dividend^0,c
  9067   00313A  0E00               	movlw	0
  9068   00313C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9069   00313E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9070   003140  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9071   003142  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9072   003144  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9073   003146  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9074   003148  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9075   00314A  0E01               	movlw	1
  9076   00314C  6E12               	movwf	___aomod@sign^0,c
  9077   00314E                     l4698:
  9078   00314E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9079   003150  EFAE  F018         	goto	u3470
  9080   003154  EFAC  F018         	goto	u3471
  9081   003158                     u3471:
  9082   003158  EFBE  F018         	goto	l4702
  9083   00315C                     u3470:
  9084   00315C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9085   00315E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9086   003160  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9087   003162  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9088   003164  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9089   003166  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9090   003168  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9091   00316A  6C09               	negf	___aomod@divisor^0,c
  9092   00316C  0E00               	movlw	0
  9093   00316E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9094   003170  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9095   003172  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9096   003174  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9097   003176  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9098   003178  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9099   00317A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9100   00317C                     l4702:
  9101   00317C  5009               	movf	___aomod@divisor^0,w,c
  9102   00317E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9103   003180  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9104   003182  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9105   003184  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9106   003186  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9107   003188  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9108   00318A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9109   00318C  B4D8               	btfsc	status,2,c
  9110   00318E  EFCB  F018         	goto	u3481
  9111   003192  EFCD  F018         	goto	u3480
  9112   003196                     u3481:
  9113   003196  EF15  F019         	goto	l4718
  9114   00319A                     u3480:
  9115   00319A  0E01               	movlw	1
  9116   00319C  6E11               	movwf	___aomod@counter^0,c
  9117   00319E  EFDB  F018         	goto	l4708
  9118   0031A2                     l4706:
  9119   0031A2  90D8               	bcf	status,0,c
  9120   0031A4  3609               	rlcf	___aomod@divisor^0,f,c
  9121   0031A6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9122   0031A8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9123   0031AA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9124   0031AC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9125   0031AE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9126   0031B0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9127   0031B2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9128   0031B4  2A11               	incf	___aomod@counter^0,f,c
  9129   0031B6                     l4708:
  9130   0031B6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9131   0031B8  EFE0  F018         	goto	u3491
  9132   0031BC  EFE2  F018         	goto	u3490
  9133   0031C0                     u3491:
  9134   0031C0  EFD1  F018         	goto	l4706
  9135   0031C4                     u3490:
  9136   0031C4                     l4710:
  9137   0031C4  5009               	movf	___aomod@divisor^0,w,c
  9138   0031C6  5C01               	subwf	___aomod@dividend^0,w,c
  9139   0031C8  500A               	movf	(___aomod@divisor+1)^0,w,c
  9140   0031CA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9141   0031CC  500B               	movf	(___aomod@divisor+2)^0,w,c
  9142   0031CE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9143   0031D0  500C               	movf	(___aomod@divisor+3)^0,w,c
  9144   0031D2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9145   0031D4  500D               	movf	(___aomod@divisor+4)^0,w,c
  9146   0031D6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9147   0031D8  500E               	movf	(___aomod@divisor+5)^0,w,c
  9148   0031DA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9149   0031DC  500F               	movf	(___aomod@divisor+6)^0,w,c
  9150   0031DE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9151   0031E0  5010               	movf	(___aomod@divisor+7)^0,w,c
  9152   0031E2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9153   0031E4  A0D8               	btfss	status,0,c
  9154   0031E6  EFF7  F018         	goto	u3501
  9155   0031EA  EFF9  F018         	goto	u3500
  9156   0031EE                     u3501:
  9157   0031EE  EF09  F019         	goto	l4714
  9158   0031F2                     u3500:
  9159   0031F2  5009               	movf	___aomod@divisor^0,w,c
  9160   0031F4  5E01               	subwf	___aomod@dividend^0,f,c
  9161   0031F6  500A               	movf	(___aomod@divisor+1)^0,w,c
  9162   0031F8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9163   0031FA  500B               	movf	(___aomod@divisor+2)^0,w,c
  9164   0031FC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9165   0031FE  500C               	movf	(___aomod@divisor+3)^0,w,c
  9166   003200  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9167   003202  500D               	movf	(___aomod@divisor+4)^0,w,c
  9168   003204  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9169   003206  500E               	movf	(___aomod@divisor+5)^0,w,c
  9170   003208  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9171   00320A  500F               	movf	(___aomod@divisor+6)^0,w,c
  9172   00320C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9173   00320E  5010               	movf	(___aomod@divisor+7)^0,w,c
  9174   003210  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9175   003212                     l4714:
  9176   003212  90D8               	bcf	status,0,c
  9177   003214  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9178   003216  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9179   003218  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9180   00321A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9181   00321C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9182   00321E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9183   003220  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9184   003222  3209               	rrcf	___aomod@divisor^0,f,c
  9185   003224  2E11               	decfsz	___aomod@counter^0,f,c
  9186   003226  EFE2  F018         	goto	l4710
  9187   00322A                     l4718:
  9188   00322A  5012               	movf	___aomod@sign^0,w,c
  9189   00322C  B4D8               	btfsc	status,2,c
  9190   00322E  EF1B  F019         	goto	u3511
  9191   003232  EF1D  F019         	goto	u3510
  9192   003236                     u3511:
  9193   003236  EF2D  F019         	goto	l4722
  9194   00323A                     u3510:
  9195   00323A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9196   00323C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9197   00323E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9198   003240  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9199   003242  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9200   003244  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9201   003246  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9202   003248  6C01               	negf	___aomod@dividend^0,c
  9203   00324A  0E00               	movlw	0
  9204   00324C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9205   00324E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9206   003250  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9207   003252  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9208   003254  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9209   003256  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9210   003258  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9211   00325A                     l4722:
  9212   00325A  C001  F001         	movff	___aomod@dividend,?___aomod
  9213   00325E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9214   003262  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9215   003266  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9216   00326A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9217   00326E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9218   003272  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9219   003276  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9220   00327A  0012               	return		;funcret
  9221   00327C                     __end_of___aomod:
  9222                           	callstack 0
  9223                           
  9224 ;; *************** function ___aodiv *****************
  9225 ;; Defined at:
  9226 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  dividend        8    0[COMRAM] long long 
  9229 ;;  divisor         8    8[COMRAM] long long 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  quotient        8   18[COMRAM] long long 
  9232 ;;  sign            1   17[COMRAM] unsigned char 
  9233 ;;  counter         1   16[COMRAM] unsigned char 
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  8    0[COMRAM] long long 
  9236 ;; Registers used:
  9237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9243 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9244 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;Total ram usage:       26 bytes
  9248 ;; Hardware stack levels used: 1
  9249 ;; Hardware stack levels required when called: 2
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_dtoa
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text41
  9258   002F90                     __ptext41:
  9259                           	callstack 0
  9260   002F90                     ___aodiv:
  9261                           	callstack 23
  9262   002F90  0E00               	movlw	0
  9263   002F92  6E12               	movwf	___aodiv@sign^0,c
  9264   002F94  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9265   002F96  EFD1  F017         	goto	u3390
  9266   002F9A  EFCF  F017         	goto	u3391
  9267   002F9E                     u3391:
  9268   002F9E  EFE3  F017         	goto	l4654
  9269   002FA2                     u3390:
  9270   002FA2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9271   002FA4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9272   002FA6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9273   002FA8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9274   002FAA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9275   002FAC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9276   002FAE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9277   002FB0  6C09               	negf	___aodiv@divisor^0,c
  9278   002FB2  0E00               	movlw	0
  9279   002FB4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9280   002FB6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9281   002FB8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9282   002FBA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9283   002FBC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9284   002FBE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9285   002FC0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9286   002FC2  0E01               	movlw	1
  9287   002FC4  6E12               	movwf	___aodiv@sign^0,c
  9288   002FC6                     l4654:
  9289   002FC6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9290   002FC8  EFEA  F017         	goto	u3400
  9291   002FCC  EFE8  F017         	goto	u3401
  9292   002FD0                     u3401:
  9293   002FD0  EFFC  F017         	goto	l4660
  9294   002FD4                     u3400:
  9295   002FD4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9296   002FD6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9297   002FD8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9298   002FDA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9299   002FDC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9300   002FDE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9301   002FE0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9302   002FE2  6C01               	negf	___aodiv@dividend^0,c
  9303   002FE4  0E00               	movlw	0
  9304   002FE6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9305   002FE8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9306   002FEA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9307   002FEC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9308   002FEE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9309   002FF0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9310   002FF2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9311   002FF4  0E01               	movlw	1
  9312   002FF6  1A12               	xorwf	___aodiv@sign^0,f,c
  9313   002FF8                     l4660:
  9314   002FF8  EE20  F013         	lfsr	2,___aodiv@quotient
  9315   002FFC  0E07               	movlw	7
  9316   002FFE                     u3411:
  9317   002FFE  6ADE               	clrf	postinc2,c
  9318   003000  06E8               	decf	wreg,f,c
  9319   003002  E2FD               	bc	u3411
  9320   003004  5009               	movf	___aodiv@divisor^0,w,c
  9321   003006  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9322   003008  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9323   00300A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9324   00300C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9325   00300E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9326   003010  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9327   003012  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9328   003014  B4D8               	btfsc	status,2,c
  9329   003016  EF0F  F018         	goto	u3421
  9330   00301A  EF11  F018         	goto	u3420
  9331   00301E                     u3421:
  9332   00301E  EF63  F018         	goto	l4682
  9333   003022                     u3420:
  9334   003022  0E01               	movlw	1
  9335   003024  6E11               	movwf	___aodiv@counter^0,c
  9336   003026  EF1F  F018         	goto	l4668
  9337   00302A                     l4666:
  9338   00302A  90D8               	bcf	status,0,c
  9339   00302C  3609               	rlcf	___aodiv@divisor^0,f,c
  9340   00302E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9341   003030  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9342   003032  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9343   003034  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9344   003036  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9345   003038  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9346   00303A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9347   00303C  2A11               	incf	___aodiv@counter^0,f,c
  9348   00303E                     l4668:
  9349   00303E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9350   003040  EF24  F018         	goto	u3431
  9351   003044  EF26  F018         	goto	u3430
  9352   003048                     u3431:
  9353   003048  EF15  F018         	goto	l4666
  9354   00304C                     u3430:
  9355   00304C                     l4670:
  9356   00304C  90D8               	bcf	status,0,c
  9357   00304E  3613               	rlcf	___aodiv@quotient^0,f,c
  9358   003050  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9359   003052  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9360   003054  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9361   003056  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9362   003058  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9363   00305A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9364   00305C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9365   00305E  5009               	movf	___aodiv@divisor^0,w,c
  9366   003060  5C01               	subwf	___aodiv@dividend^0,w,c
  9367   003062  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9368   003064  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9369   003066  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9370   003068  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9371   00306A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9372   00306C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9373   00306E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9374   003070  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9375   003072  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9376   003074  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9377   003076  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9378   003078  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9379   00307A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9380   00307C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9381   00307E  A0D8               	btfss	status,0,c
  9382   003080  EF44  F018         	goto	u3441
  9383   003084  EF46  F018         	goto	u3440
  9384   003088                     u3441:
  9385   003088  EF57  F018         	goto	l4678
  9386   00308C                     u3440:
  9387   00308C  5009               	movf	___aodiv@divisor^0,w,c
  9388   00308E  5E01               	subwf	___aodiv@dividend^0,f,c
  9389   003090  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9390   003092  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9391   003094  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9392   003096  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9393   003098  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9394   00309A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9395   00309C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9396   00309E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9397   0030A0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9398   0030A2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9399   0030A4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9400   0030A6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9401   0030A8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9402   0030AA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9403   0030AC  8013               	bsf	___aodiv@quotient^0,0,c
  9404   0030AE                     l4678:
  9405   0030AE  90D8               	bcf	status,0,c
  9406   0030B0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9407   0030B2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9408   0030B4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9409   0030B6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9410   0030B8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9411   0030BA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9412   0030BC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9413   0030BE  3209               	rrcf	___aodiv@divisor^0,f,c
  9414   0030C0  2E11               	decfsz	___aodiv@counter^0,f,c
  9415   0030C2  EF26  F018         	goto	l4670
  9416   0030C6                     l4682:
  9417   0030C6  5012               	movf	___aodiv@sign^0,w,c
  9418   0030C8  B4D8               	btfsc	status,2,c
  9419   0030CA  EF69  F018         	goto	u3451
  9420   0030CE  EF6B  F018         	goto	u3450
  9421   0030D2                     u3451:
  9422   0030D2  EF7B  F018         	goto	l4686
  9423   0030D6                     u3450:
  9424   0030D6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9425   0030D8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9426   0030DA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9427   0030DC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9428   0030DE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9429   0030E0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9430   0030E2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9431   0030E4  6C13               	negf	___aodiv@quotient^0,c
  9432   0030E6  0E00               	movlw	0
  9433   0030E8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9434   0030EA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9435   0030EC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9436   0030EE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9437   0030F0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9438   0030F2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9439   0030F4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9440   0030F6                     l4686:
  9441   0030F6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9442   0030FA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9443   0030FE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9444   003102  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9445   003106  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9446   00310A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9447   00310E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9448   003112  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9449   003116  0012               	return		;funcret
  9450   003118                     __end_of___aodiv:
  9451                           	callstack 0
  9452                           
  9453 ;; *************** function _atoi *****************
  9454 ;; Defined at:
  9455 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9458 ;;		 -> STR_18(29), STR_17(29), STR_16(29), STR_15(29), 
  9459 ;;		 -> STR_14(29), STR_13(29), STR_12(29), STR_11(29), 
  9460 ;;		 -> STR_3(7), STR_1(3), 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;  n               2   13[COMRAM] int 
  9463 ;;  neg             2   11[COMRAM] int 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  2    6[COMRAM] int 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;Total ram usage:        9 bytes
  9478 ;; Hardware stack levels used: 1
  9479 ;; Hardware stack levels required when called: 3
  9480 ;; This function calls:
  9481 ;;		___wmul
  9482 ;;		_isdigit
  9483 ;;		_isspace
  9484 ;; This function is called by:
  9485 ;;		_vfpfcnvrt
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text42
  9490   00327C                     __ptext42:
  9491                           	callstack 0
  9492   00327C                     _atoi:
  9493                           	callstack 23
  9494   00327C  0E00               	movlw	0
  9495   00327E  6E0F               	movwf	(atoi@n+1)^0,c
  9496   003280  0E00               	movlw	0
  9497   003282  6E0E               	movwf	atoi@n^0,c
  9498   003284  0E00               	movlw	0
  9499   003286  6E0D               	movwf	(atoi@neg+1)^0,c
  9500   003288  0E00               	movlw	0
  9501   00328A  6E0C               	movwf	atoi@neg^0,c
  9502   00328C  EF4A  F019         	goto	l4876
  9503   003290                     l4872:
  9504   003290  4A07               	infsnz	atoi@s^0,f,c
  9505   003292  2A08               	incf	(atoi@s+1)^0,f,c
  9506   003294                     l4876:
  9507   003294  C007  FFF6         	movff	atoi@s,tblptrl
  9508   003298  C008  FFF7         	movff	atoi@s+1,tblptrh
  9509   00329C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9510   00329C  6AF8               	clrf	tblptru,c
  9511   00329E                     	endif
  9512   00329E                     	if	0	;tblptru may be non-zero
  9513   00329E                     	endif
  9514   00329E  0008               	tblrd		*
  9515   0032A0  50F5               	movf	tablat,w,c
  9516   0032A2  0A20               	xorlw	32
  9517   0032A4  B4D8               	btfsc	status,2,c
  9518   0032A6  EF57  F019         	goto	u3831
  9519   0032AA  EF59  F019         	goto	u3830
  9520   0032AE                     u3831:
  9521   0032AE  EF48  F019         	goto	l4872
  9522   0032B2                     u3830:
  9523   0032B2  C007  FFF6         	movff	atoi@s,tblptrl
  9524   0032B6  C008  FFF7         	movff	atoi@s+1,tblptrh
  9525   0032BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9526   0032BA  6AF8               	clrf	tblptru,c
  9527   0032BC                     	endif
  9528   0032BC                     	if	0	;tblptru may be non-zero
  9529   0032BC                     	endif
  9530   0032BC  0008               	tblrd		*
  9531   0032BE  CFF5 F009          	movff	tablat,??_atoi
  9532   0032C2  0EF7               	movlw	247
  9533   0032C4  2409               	addwf	??_atoi^0,w,c
  9534   0032C6  6E0A               	movwf	(??_atoi+1)^0,c
  9535   0032C8  6A0B               	clrf	(??_atoi+2)^0,c
  9536   0032CA  0EFF               	movlw	255
  9537   0032CC  220B               	addwfc	(??_atoi+2)^0,f,c
  9538   0032CE  500B               	movf	(??_atoi+2)^0,w,c
  9539   0032D0  E109               	bnz	u3840
  9540   0032D2  0E05               	movlw	5
  9541   0032D4  5C0A               	subwf	(??_atoi+1)^0,w,c
  9542   0032D6  A0D8               	btfss	status,0,c
  9543   0032D8  EF70  F019         	goto	u3841
  9544   0032DC  EF72  F019         	goto	u3840
  9545   0032E0                     u3841:
  9546   0032E0  EF48  F019         	goto	l4872
  9547   0032E4                     u3840:
  9548   0032E4  EF7C  F019         	goto	l4884
  9549   0032E8                     l4880:
  9550   0032E8  0E00               	movlw	0
  9551   0032EA  6E0D               	movwf	(atoi@neg+1)^0,c
  9552   0032EC  0E01               	movlw	1
  9553   0032EE  6E0C               	movwf	atoi@neg^0,c
  9554   0032F0                     l4882:
  9555   0032F0  4A07               	infsnz	atoi@s^0,f,c
  9556   0032F2  2A08               	incf	(atoi@s+1)^0,f,c
  9557   0032F4  EFB3  F019         	goto	l4892
  9558   0032F8                     l4884:
  9559   0032F8  C007  FFF6         	movff	atoi@s,tblptrl
  9560   0032FC  C008  FFF7         	movff	atoi@s+1,tblptrh
  9561   003300                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9562   003300  6AF8               	clrf	tblptru,c
  9563   003302                     	endif
  9564   003302                     	if	0	;tblptru may be non-zero
  9565   003302                     	endif
  9566   003302  0008               	tblrd		*
  9567   003304  50F5               	movf	tablat,w,c
  9568   003306  6E09               	movwf	??_atoi^0,c
  9569   003308  6A0A               	clrf	(??_atoi+1)^0,c
  9570                           
  9571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9572                           ; Switch size 1, requested type "simple"
  9573                           ; Number of cases is 1, Range of values is 0 to 0
  9574                           ; switch strategies available:
  9575                           ; Name         Instructions Cycles
  9576                           ; simple_byte            4     3 (average)
  9577                           ;	Chosen strategy is simple_byte
  9578   00330A  500A               	movf	(??_atoi+1)^0,w,c
  9579   00330C  0A00               	xorlw	0	; case 0
  9580   00330E  B4D8               	btfsc	status,2,c
  9581   003310  EF8C  F019         	goto	l7500
  9582   003314  EFB3  F019         	goto	l4892
  9583   003318                     l7500:
  9584                           
  9585                           ; Switch size 1, requested type "simple"
  9586                           ; Number of cases is 2, Range of values is 43 to 45
  9587                           ; switch strategies available:
  9588                           ; Name         Instructions Cycles
  9589                           ; simple_byte            7     4 (average)
  9590                           ;	Chosen strategy is simple_byte
  9591   003318  5009               	movf	??_atoi^0,w,c
  9592   00331A  0A2B               	xorlw	43	; case 43
  9593   00331C  B4D8               	btfsc	status,2,c
  9594   00331E  EF78  F019         	goto	l4882
  9595   003322  0A06               	xorlw	6	; case 45
  9596   003324  B4D8               	btfsc	status,2,c
  9597   003326  EF74  F019         	goto	l4880
  9598   00332A  EFB3  F019         	goto	l4892
  9599   00332E                     l4886:
  9600   00332E  C00E  F001         	movff	atoi@n,___wmul@multiplier
  9601   003332  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9602   003336  0E00               	movlw	0
  9603   003338  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9604   00333A  0E0A               	movlw	10
  9605   00333C  6E03               	movwf	___wmul@multiplicand^0,c
  9606   00333E  ECD8  F023         	call	___wmul	;wreg free
  9607   003342  C007  FFF6         	movff	atoi@s,tblptrl
  9608   003346  C008  FFF7         	movff	atoi@s+1,tblptrh
  9609   00334A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9610   00334A  6AF8               	clrf	tblptru,c
  9611   00334C                     	endif
  9612   00334C                     	if	0	;tblptru may be non-zero
  9613   00334C                     	endif
  9614   00334C  0008               	tblrd		*
  9615   00334E  50F5               	movf	tablat,w,c
  9616   003350  5E01               	subwf	?___wmul^0,f,c
  9617   003352  0E00               	movlw	0
  9618   003354  5A02               	subwfb	(?___wmul+1)^0,f,c
  9619   003356  0E30               	movlw	48
  9620   003358  2401               	addwf	?___wmul^0,w,c
  9621   00335A  6E0E               	movwf	atoi@n^0,c
  9622   00335C  0E00               	movlw	0
  9623   00335E  2002               	addwfc	(?___wmul+1)^0,w,c
  9624   003360  6E0F               	movwf	(atoi@n+1)^0,c
  9625   003362  EF78  F019         	goto	l4882
  9626   003366                     l4892:
  9627   003366  C007  FFF6         	movff	atoi@s,tblptrl
  9628   00336A  C008  FFF7         	movff	atoi@s+1,tblptrh
  9629   00336E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9630   00336E  6AF8               	clrf	tblptru,c
  9631   003370                     	endif
  9632   003370                     	if	0	;tblptru may be non-zero
  9633   003370                     	endif
  9634   003370  0008               	tblrd		*
  9635   003372  CFF5 F009          	movff	tablat,??_atoi
  9636   003376  0ED0               	movlw	208
  9637   003378  2409               	addwf	??_atoi^0,w,c
  9638   00337A  6E0A               	movwf	(??_atoi+1)^0,c
  9639   00337C  6A0B               	clrf	(??_atoi+2)^0,c
  9640   00337E  0EFF               	movlw	255
  9641   003380  220B               	addwfc	(??_atoi+2)^0,f,c
  9642   003382  500B               	movf	(??_atoi+2)^0,w,c
  9643   003384  E109               	bnz	u3850
  9644   003386  0E0A               	movlw	10
  9645   003388  5C0A               	subwf	(??_atoi+1)^0,w,c
  9646   00338A  A0D8               	btfss	status,0,c
  9647   00338C  EFCA  F019         	goto	u3851
  9648   003390  EFCC  F019         	goto	u3850
  9649   003394                     u3851:
  9650   003394  EF97  F019         	goto	l4886
  9651   003398                     u3850:
  9652   003398  500C               	movf	atoi@neg^0,w,c
  9653   00339A  100D               	iorwf	(atoi@neg+1)^0,w,c
  9654   00339C  A4D8               	btfss	status,2,c
  9655   00339E  EFD3  F019         	goto	u3861
  9656   0033A2  EFD5  F019         	goto	u3860
  9657   0033A6                     u3861:
  9658   0033A6  EFE3  F019         	goto	l1719
  9659   0033AA                     u3860:
  9660   0033AA  C00E  F009         	movff	atoi@n,??_atoi
  9661   0033AE  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  9662   0033B2  1E09               	comf	??_atoi^0,f,c
  9663   0033B4  1E0A               	comf	(??_atoi+1)^0,f,c
  9664   0033B6  4A09               	infsnz	??_atoi^0,f,c
  9665   0033B8  2A0A               	incf	(??_atoi+1)^0,f,c
  9666   0033BA  C009  F007         	movff	??_atoi,?_atoi
  9667   0033BE  C00A  F008         	movff	??_atoi+1,?_atoi+1
  9668   0033C2  EFE7  F019         	goto	l1722
  9669   0033C6                     l1719:
  9670   0033C6  C00E  F007         	movff	atoi@n,?_atoi
  9671   0033CA  C00F  F008         	movff	atoi@n+1,?_atoi+1
  9672   0033CE                     l1722:
  9673   0033CE  0012               	return		;funcret
  9674   0033D0                     __end_of_atoi:
  9675                           	callstack 0
  9676                           
  9677 ;; *************** function _isspace *****************
  9678 ;; Defined at:
  9679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  c               2    0[COMRAM] int 
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  2    0[COMRAM] int 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;Total ram usage:        5 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 2
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_atoi
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text43
  9708   00443E                     __ptext43:
  9709                           	callstack 0
  9710   00443E                     _isspace:
  9711                           	callstack 23
  9712   00443E  0E01               	movlw	1
  9713   004440  6E05               	movwf	_isspace$2973^0,c
  9714   004442  0E20               	movlw	32
  9715   004444  1801               	xorwf	isspace@c^0,w,c
  9716   004446  1002               	iorwf	(isspace@c+1)^0,w,c
  9717   004448  B4D8               	btfsc	status,2,c
  9718   00444A  EF29  F022         	goto	u3591
  9719   00444E  EF2B  F022         	goto	u3590
  9720   004452                     u3591:
  9721   004452  EF3E  F022         	goto	l4760
  9722   004456                     u3590:
  9723   004456  0EF7               	movlw	247
  9724   004458  2401               	addwf	isspace@c^0,w,c
  9725   00445A  6E03               	movwf	??_isspace^0,c
  9726   00445C  0EFF               	movlw	255
  9727   00445E  2002               	addwfc	(isspace@c+1)^0,w,c
  9728   004460  6E04               	movwf	(??_isspace+1)^0,c
  9729   004462  5004               	movf	(??_isspace+1)^0,w,c
  9730   004464  E109               	bnz	u3600
  9731   004466  0E05               	movlw	5
  9732   004468  5C03               	subwf	??_isspace^0,w,c
  9733   00446A  A0D8               	btfss	status,0,c
  9734   00446C  EF3A  F022         	goto	u3601
  9735   004470  EF3C  F022         	goto	u3600
  9736   004474                     u3601:
  9737   004474  EF3E  F022         	goto	l4760
  9738   004478                     u3600:
  9739   004478  0E00               	movlw	0
  9740   00447A  6E05               	movwf	_isspace$2973^0,c
  9741   00447C                     l4760:
  9742   00447C  C005  F001         	movff	_isspace$2973,?_isspace
  9743   004480  6A02               	clrf	(?_isspace+1)^0,c
  9744   004482  0012               	return		;funcret
  9745   004484                     __end_of_isspace:
  9746                           	callstack 0
  9747                           
  9748 ;; *************** function _isdigit *****************
  9749 ;; Defined at:
  9750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  c               2    0[COMRAM] int 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  2    0[COMRAM] int 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;Total ram usage:        4 bytes
  9769 ;; Hardware stack levels used: 1
  9770 ;; Hardware stack levels required when called: 2
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_vfpfcnvrt
  9775 ;;		_atoi
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text44
  9780   0046DE                     __ptext44:
  9781                           	callstack 0
  9782   0046DE                     _isdigit:
  9783                           	callstack 24
  9784   0046DE  0ED0               	movlw	208
  9785   0046E0  2401               	addwf	isdigit@c^0,w,c
  9786   0046E2  6E03               	movwf	??_isdigit^0,c
  9787   0046E4  0EFF               	movlw	255
  9788   0046E6  2002               	addwfc	(isdigit@c+1)^0,w,c
  9789   0046E8  6E04               	movwf	(??_isdigit+1)^0,c
  9790   0046EA  5004               	movf	(??_isdigit+1)^0,w,c
  9791   0046EC  E10A               	bnz	u3570
  9792   0046EE  0E0A               	movlw	10
  9793   0046F0  5C03               	subwf	??_isdigit^0,w,c
  9794   0046F2  A0D8               	btfss	status,0,c
  9795   0046F4  EF7E  F023         	goto	u3571
  9796   0046F8  EF81  F023         	goto	u3570
  9797   0046FC                     u3571:
  9798   0046FC  0E01               	movlw	1
  9799   0046FE  EF82  F023         	goto	u3580
  9800   004702                     u3570:
  9801   004702  0E00               	movlw	0
  9802   004704                     u3580:
  9803   004704  6E01               	movwf	?_isdigit^0,c
  9804   004706  6A02               	clrf	(?_isdigit+1)^0,c
  9805   004708  0012               	return		;funcret
  9806   00470A                     __end_of_isdigit:
  9807                           	callstack 0
  9808                           
  9809 ;; *************** function ___wmul *****************
  9810 ;; Defined at:
  9811 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  multiplier      2    0[COMRAM] unsigned int 
  9814 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  product         2    4[COMRAM] unsigned int 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  2    0[COMRAM] unsigned int 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0, prodl, prodh
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9829 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;Total ram usage:        6 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 2
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_atoi
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text45
  9841   0047B0                     __ptext45:
  9842                           	callstack 0
  9843   0047B0                     ___wmul:
  9844                           	callstack 23
  9845   0047B0  5001               	movf	___wmul@multiplier^0,w,c
  9846   0047B2  0203               	mulwf	___wmul@multiplicand^0,c
  9847   0047B4  CFF3 F005          	movff	prodl,___wmul@product
  9848   0047B8  CFF4 F006          	movff	prodh,___wmul@product+1
  9849   0047BC  5001               	movf	___wmul@multiplier^0,w,c
  9850   0047BE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9851   0047C0  50F3               	movf	243,w,c
  9852   0047C2  2606               	addwf	(___wmul@product+1)^0,f,c
  9853   0047C4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9854   0047C6  0203               	mulwf	___wmul@multiplicand^0,c
  9855   0047C8  50F3               	movf	243,w,c
  9856   0047CA  2606               	addwf	(___wmul@product+1)^0,f,c
  9857   0047CC  C005  F001         	movff	___wmul@product,?___wmul
  9858   0047D0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9859   0047D4  0012               	return		;funcret
  9860   0047D6                     __end_of___wmul:
  9861                           	callstack 0
  9862                           
  9863 ;; *************** function _receiveData *****************
  9864 ;; Defined at:
  9865 ;;		line 212 in file "usart.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;  uart_channel    1    wreg     unsigned char 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  uart_channel    1    1[COMRAM] unsigned char 
  9870 ;;  receivedData    1    0[COMRAM] unsigned char 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      unsigned char 
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;Total ram usage:        2 bytes
  9885 ;; Hardware stack levels used: 1
  9886 ;; Hardware stack levels required when called: 2
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_handle_uart_communication
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text46
  9895   00435A                     __ptext46:
  9896                           	callstack 0
  9897   00435A                     _receiveData:
  9898                           	callstack 27
  9899                           
  9900                           ;incstack = 0
  9901                           ;receiveData@uart_channel stored from wreg
  9902   00435A  6E02               	movwf	receiveData@uart_channel^0,c
  9903   00435C                     
  9904                           ;usart.c: 213:     unsigned char receivedData;;usart.c: 214:     if (uart_channel == 1) 
      +                          {
  9905   00435C  0402               	decf	receiveData@uart_channel^0,w,c
  9906   00435E  A4D8               	btfss	status,2,c
  9907   004360  EFB4  F021         	goto	u5221
  9908   004364  EFB6  F021         	goto	u5220
  9909   004368                     u5221:
  9910   004368  EFC1  F021         	goto	l5902
  9911   00436C                     u5220:
  9912   00436C                     l673:
  9913   00436C  AA9E               	btfss	158,5,c	;volatile
  9914   00436E  EFBB  F021         	goto	u5231
  9915   004372  EFBD  F021         	goto	u5230
  9916   004376                     u5231:
  9917   004376  EFB6  F021         	goto	l673
  9918   00437A                     u5230:
  9919   00437A                     
  9920                           ;usart.c: 216:         receivedData = RCREG1;
  9921   00437A  CFAF F001          	movff	4015,receiveData@receivedData	;volatile
  9922                           
  9923                           ;usart.c: 217:     } else if (uart_channel == 2) {
  9924   00437E  EFD3  F021         	goto	l5906
  9925   004382                     l5902:
  9926   004382  0E02               	movlw	2
  9927   004384  1802               	xorwf	receiveData@uart_channel^0,w,c
  9928   004386  A4D8               	btfss	status,2,c
  9929   004388  EFC8  F021         	goto	u5241
  9930   00438C  EFCA  F021         	goto	u5240
  9931   004390                     u5241:
  9932   004390  EFD3  F021         	goto	l5906
  9933   004394                     u5240:
  9934   004394                     l678:
  9935   004394  AAA4               	btfss	164,5,c	;volatile
  9936   004396  EFCF  F021         	goto	u5251
  9937   00439A  EFD1  F021         	goto	u5250
  9938   00439E                     u5251:
  9939   00439E  EFCA  F021         	goto	l678
  9940   0043A2                     u5250:
  9941   0043A2                     
  9942                           ;usart.c: 219:         receivedData = RCREG2;
  9943   0043A2  CFAA F001          	movff	4010,receiveData@receivedData	;volatile
  9944   0043A6                     l5906:
  9945                           
  9946                           ;usart.c: 221:     return receivedData;
  9947   0043A6  5001               	movf	receiveData@receivedData^0,w,c
  9948   0043A8  0012               	return		;funcret
  9949   0043AA                     __end_of_receiveData:
  9950                           	callstack 0
  9951                           
  9952 ;; *************** function _delay2_1ms *****************
  9953 ;; Defined at:
  9954 ;;		line 236 in file "usart.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  time            2    0[COMRAM] unsigned int 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;		None
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;Total ram usage:        3 bytes
  9973 ;; Hardware stack levels used: 1
  9974 ;; Hardware stack levels required when called: 2
  9975 ;; This function calls:
  9976 ;;		Nothing
  9977 ;; This function is called by:
  9978 ;;		_handle_uart_communication
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           	psect	text47
  9983   00470A                     __ptext47:
  9984                           	callstack 0
  9985   00470A                     _delay2_1ms:
  9986                           	callstack 27
  9987   00470A                     
  9988                           ;usart.c: 237:     while (time > 0) {
  9989   00470A  EF91  F023         	goto	l689
  9990   00470E                     l5926:
  9991                           
  9992                           ;usart.c: 238:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9993   00470E  0E03               	movlw	3
  9994   004710  6E03               	movwf	??_delay2_1ms^0,c
  9995   004712  0E98               	movlw	152
  9996   004714                     u6677:
  9997   004714  2EE8               	decfsz	wreg,f,c
  9998   004716  D7FE               	bra	u6677
  9999   004718  2E03               	decfsz	??_delay2_1ms^0,f,c
 10000   00471A  D7FC               	bra	u6677
 10001   00471C                     
 10002                           ;usart.c: 239:         time--;
 10003   00471C  0601               	decf	delay2_1ms@time^0,f,c
 10004   00471E  A0D8               	btfss	status,0,c
 10005   004720  0602               	decf	(delay2_1ms@time+1)^0,f,c
 10006   004722                     l689:
 10007                           
 10008                           ;usart.c: 237:     while (time > 0) {
 10009   004722  5001               	movf	delay2_1ms@time^0,w,c
 10010   004724  1002               	iorwf	(delay2_1ms@time+1)^0,w,c
 10011   004726  A4D8               	btfss	status,2,c
 10012   004728  EF98  F023         	goto	u5271
 10013   00472C  EF9A  F023         	goto	u5270
 10014   004730                     u5271:
 10015   004730  EF87  F023         	goto	l5926
 10016   004734                     u5270:
 10017   004734  0012               	return		;funcret
 10018   004736                     __end_of_delay2_1ms:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _WriteSTLED316SData *****************
 10022 ;; Defined at:
 10023 ;;		line 145 in file "Display.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  number          2    8[COMRAM] int 
 10026 ;;  v_mode          1   10[COMRAM] unsigned char 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;  NUM_DIG1        2   13[COMRAM] int 
 10029 ;;  NUM_DIG0        2   11[COMRAM] int 
 10030 ;;  data4           1   16[COMRAM] unsigned char 
 10031 ;;  data3           1   15[COMRAM] unsigned char 
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1    wreg      void 
 10034 ;; Registers used:
 10035 ;;		wreg, status,2, status,0, cstack
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;Total ram usage:        9 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; Hardware stack levels required when called: 3
 10048 ;; This function calls:
 10049 ;;		_Get7Seg
 10050 ;;		_STLED316s_SPI_SendData
 10051 ;;		___awdiv
 10052 ;;		___awmod
 10053 ;; This function is called by:
 10054 ;;		_main
 10055 ;;		_Homing_Again_Manual
 10056 ;; This function uses a non-reentrant model
 10057 ;;
 10058                           
 10059                           	psect	text48
 10060   003EC2                     __ptext48:
 10061                           	callstack 0
 10062   003EC2                     _WriteSTLED316SData:
 10063                           	callstack 27
 10064   003EC2                     
 10065                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
 10066   003EC2  C009  F001         	movff	WriteSTLED316SData@number,___awmod@dividend
 10067   003EC6  C00A  F002         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
 10068   003ECA  0E00               	movlw	0
 10069   003ECC  6E04               	movwf	(___awmod@divisor+1)^0,c
 10070   003ECE  0E0A               	movlw	10
 10071   003ED0  6E03               	movwf	___awmod@divisor^0,c
 10072   003ED2  ECB2  F01E         	call	___awmod	;wreg free
 10073   003ED6  C001  F00C         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
 10074   003EDA  C002  F00D         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
 10075                           
 10076                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
 10077   003EDE  C009  F001         	movff	WriteSTLED316SData@number,___awdiv@dividend
 10078   003EE2  C00A  F002         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
 10079   003EE6  0E00               	movlw	0
 10080   003EE8  6E04               	movwf	(___awdiv@divisor+1)^0,c
 10081   003EEA  0E0A               	movlw	10
 10082   003EEC  6E03               	movwf	___awdiv@divisor^0,c
 10083   003EEE  EC50  F01E         	call	___awdiv	;wreg free
 10084   003EF2  C001  F00E         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
 10085   003EF6  C002  F00F         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
 10086   003EFA                     
 10087                           ;Display.c: 152:     LATCbits.LATC4 = 0;
 10088   003EFA  988B               	bcf	139,4,c	;volatile
 10089                           
 10090                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
 10091   003EFC  0E00               	movlw	0
 10092   003EFE  EC44  F020         	call	_STLED316s_SPI_SendData
 10093   003F02                     
 10094                           ;Display.c: 156:     LATCbits.LATC4 = 1;
 10095   003F02  888B               	bsf	139,4,c	;volatile
 10096   003F04                     
 10097                           ;Display.c: 158:     LATCbits.LATC4 = 0;
 10098   003F04  988B               	bcf	139,4,c	;volatile
 10099                           
 10100                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
 10101   003F06  0E00               	movlw	0
 10102   003F08  EC44  F020         	call	_STLED316s_SPI_SendData
 10103                           
 10104                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
 10105   003F0C  C00E  F001         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
 10106   003F10  C00F  F002         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
 10107   003F14  EC85  F01D         	call	_Get7Seg	;wreg free
 10108   003F18  6E11               	movwf	WriteSTLED316SData@data4^0,c
 10109                           
 10110                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
 10111   003F1A  C00C  F001         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
 10112   003F1E  C00D  F002         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
 10113   003F22  EC85  F01D         	call	_Get7Seg	;wreg free
 10114   003F26  6E10               	movwf	WriteSTLED316SData@data3^0,c
 10115   003F28                     
 10116                           ;Display.c: 165:     if (v_mode) {
 10117   003F28  500B               	movf	WriteSTLED316SData@v_mode^0,w,c
 10118   003F2A  B4D8               	btfsc	status,2,c
 10119   003F2C  EF9A  F01F         	goto	u5581
 10120   003F30  EF9C  F01F         	goto	u5580
 10121   003F34                     u5581:
 10122   003F34  EFA8  F01F         	goto	l6326
 10123   003F38                     u5580:
 10124   003F38                     
 10125                           ;Display.c: 166:         if (v_mode == 0xFF)
 10126   003F38  280B               	incf	WriteSTLED316SData@v_mode^0,w,c
 10127   003F3A  A4D8               	btfss	status,2,c
 10128   003F3C  EFA2  F01F         	goto	u5591
 10129   003F40  EFA4  F01F         	goto	u5590
 10130   003F44                     u5591:
 10131   003F44  EFA7  F01F         	goto	l6324
 10132   003F48                     u5590:
 10133   003F48                     
 10134                           ;Display.c: 167:             data4 |= 0x80;
 10135   003F48  8E11               	bsf	WriteSTLED316SData@data4^0,7,c
 10136   003F4A  EFA8  F01F         	goto	l6326
 10137   003F4E                     l6324:
 10138                           
 10139                           ;Display.c: 169:             data3 |= 0x80;
 10140   003F4E  8E10               	bsf	WriteSTLED316SData@data3^0,7,c
 10141   003F50                     l6326:
 10142                           
 10143                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
 10144   003F50  5011               	movf	WriteSTLED316SData@data4^0,w,c
 10145   003F52  EC44  F020         	call	_STLED316s_SPI_SendData
 10146   003F56                     
 10147                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
 10148   003F56  5010               	movf	WriteSTLED316SData@data3^0,w,c
 10149   003F58  EC44  F020         	call	_STLED316s_SPI_SendData
 10150   003F5C                     
 10151                           ;Display.c: 175:     LATCbits.LATC4 = 1;
 10152   003F5C  888B               	bsf	139,4,c	;volatile
 10153   003F5E                     
 10154                           ;Display.c: 177:     LATCbits.LATC4 = 0;
 10155   003F5E  988B               	bcf	139,4,c	;volatile
 10156   003F60                     
 10157                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
 10158   003F60  0E0D               	movlw	13
 10159   003F62  EC44  F020         	call	_STLED316s_SPI_SendData
 10160   003F66                     
 10161                           ;Display.c: 181:     LATCbits.LATC4 = 1;
 10162   003F66  888B               	bsf	139,4,c	;volatile
 10163   003F68  0012               	return		;funcret
 10164   003F6A                     __end_of_WriteSTLED316SData:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function ___awmod *****************
 10168 ;; Defined at:
 10169 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  dividend        2    0[COMRAM] int 
 10172 ;;  divisor         2    2[COMRAM] int 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  sign            1    5[COMRAM] unsigned char 
 10175 ;;  counter         1    4[COMRAM] unsigned char 
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  2    0[COMRAM] int 
 10178 ;; Registers used:
 10179 ;;		wreg, status,2, status,0
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;Total ram usage:        6 bytes
 10190 ;; Hardware stack levels used: 1
 10191 ;; Hardware stack levels required when called: 2
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		_WriteSTLED316SData
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           	psect	text49
 10200   003D64                     __ptext49:
 10201                           	callstack 0
 10202   003D64                     ___awmod:
 10203                           	callstack 27
 10204   003D64  0E00               	movlw	0
 10205   003D66  6E06               	movwf	___awmod@sign^0,c
 10206   003D68  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 10207   003D6A  EFBB  F01E         	goto	u5340
 10208   003D6E  EFB9  F01E         	goto	u5341
 10209   003D72                     u5341:
 10210   003D72  EFC1  F01E         	goto	l5988
 10211   003D76                     u5340:
 10212   003D76  6C01               	negf	___awmod@dividend^0,c
 10213   003D78  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10214   003D7A  B0D8               	btfsc	status,0,c
 10215   003D7C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10216   003D7E  0E01               	movlw	1
 10217   003D80  6E06               	movwf	___awmod@sign^0,c
 10218   003D82                     l5988:
 10219   003D82  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 10220   003D84  EFC8  F01E         	goto	u5350
 10221   003D88  EFC6  F01E         	goto	u5351
 10222   003D8C                     u5351:
 10223   003D8C  EFCC  F01E         	goto	l5992
 10224   003D90                     u5350:
 10225   003D90  6C03               	negf	___awmod@divisor^0,c
 10226   003D92  1E04               	comf	(___awmod@divisor+1)^0,f,c
 10227   003D94  B0D8               	btfsc	status,0,c
 10228   003D96  2A04               	incf	(___awmod@divisor+1)^0,f,c
 10229   003D98                     l5992:
 10230   003D98  5003               	movf	___awmod@divisor^0,w,c
 10231   003D9A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 10232   003D9C  B4D8               	btfsc	status,2,c
 10233   003D9E  EFD3  F01E         	goto	u5361
 10234   003DA2  EFD5  F01E         	goto	u5360
 10235   003DA6                     u5361:
 10236   003DA6  EFF9  F01E         	goto	l6008
 10237   003DAA                     u5360:
 10238   003DAA  0E01               	movlw	1
 10239   003DAC  6E05               	movwf	___awmod@counter^0,c
 10240   003DAE  EFDD  F01E         	goto	l5998
 10241   003DB2                     l5996:
 10242   003DB2  90D8               	bcf	status,0,c
 10243   003DB4  3603               	rlcf	___awmod@divisor^0,f,c
 10244   003DB6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 10245   003DB8  2A05               	incf	___awmod@counter^0,f,c
 10246   003DBA                     l5998:
 10247   003DBA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 10248   003DBC  EFE2  F01E         	goto	u5371
 10249   003DC0  EFE4  F01E         	goto	u5370
 10250   003DC4                     u5371:
 10251   003DC4  EFD9  F01E         	goto	l5996
 10252   003DC8                     u5370:
 10253   003DC8                     l6000:
 10254   003DC8  5003               	movf	___awmod@divisor^0,w,c
 10255   003DCA  5C01               	subwf	___awmod@dividend^0,w,c
 10256   003DCC  5004               	movf	(___awmod@divisor+1)^0,w,c
 10257   003DCE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 10258   003DD0  A0D8               	btfss	status,0,c
 10259   003DD2  EFED  F01E         	goto	u5381
 10260   003DD6  EFEF  F01E         	goto	u5380
 10261   003DDA                     u5381:
 10262   003DDA  EFF3  F01E         	goto	l6004
 10263   003DDE                     u5380:
 10264   003DDE  5003               	movf	___awmod@divisor^0,w,c
 10265   003DE0  5E01               	subwf	___awmod@dividend^0,f,c
 10266   003DE2  5004               	movf	(___awmod@divisor+1)^0,w,c
 10267   003DE4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 10268   003DE6                     l6004:
 10269   003DE6  90D8               	bcf	status,0,c
 10270   003DE8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 10271   003DEA  3203               	rrcf	___awmod@divisor^0,f,c
 10272   003DEC  2E05               	decfsz	___awmod@counter^0,f,c
 10273   003DEE  EFE4  F01E         	goto	l6000
 10274   003DF2                     l6008:
 10275   003DF2  5006               	movf	___awmod@sign^0,w,c
 10276   003DF4  B4D8               	btfsc	status,2,c
 10277   003DF6  EFFF  F01E         	goto	u5391
 10278   003DFA  EF01  F01F         	goto	u5390
 10279   003DFE                     u5391:
 10280   003DFE  EF05  F01F         	goto	l6012
 10281   003E02                     u5390:
 10282   003E02  6C01               	negf	___awmod@dividend^0,c
 10283   003E04  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10284   003E06  B0D8               	btfsc	status,0,c
 10285   003E08  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10286   003E0A                     l6012:
 10287   003E0A  C001  F001         	movff	___awmod@dividend,?___awmod
 10288   003E0E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 10289   003E12  0012               	return		;funcret
 10290   003E14                     __end_of___awmod:
 10291                           	callstack 0
 10292                           
 10293 ;; *************** function ___awdiv *****************
 10294 ;; Defined at:
 10295 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  dividend        2    0[COMRAM] int 
 10298 ;;  divisor         2    2[COMRAM] int 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;  quotient        2    6[COMRAM] int 
 10301 ;;  sign            1    5[COMRAM] unsigned char 
 10302 ;;  counter         1    4[COMRAM] unsigned char 
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  2    0[COMRAM] int 
 10305 ;; Registers used:
 10306 ;;		wreg, status,2, status,0
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;Total ram usage:        8 bytes
 10317 ;; Hardware stack levels used: 1
 10318 ;; Hardware stack levels required when called: 2
 10319 ;; This function calls:
 10320 ;;		Nothing
 10321 ;; This function is called by:
 10322 ;;		_WriteSTLED316SData
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text50
 10327   003CA0                     __ptext50:
 10328                           	callstack 0
 10329   003CA0                     ___awdiv:
 10330                           	callstack 27
 10331   003CA0  0E00               	movlw	0
 10332   003CA2  6E06               	movwf	___awdiv@sign^0,c
 10333   003CA4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10334   003CA6  EF59  F01E         	goto	u5280
 10335   003CAA  EF57  F01E         	goto	u5281
 10336   003CAE                     u5281:
 10337   003CAE  EF5F  F01E         	goto	l5944
 10338   003CB2                     u5280:
 10339   003CB2  6C03               	negf	___awdiv@divisor^0,c
 10340   003CB4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10341   003CB6  B0D8               	btfsc	status,0,c
 10342   003CB8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10343   003CBA  0E01               	movlw	1
 10344   003CBC  6E06               	movwf	___awdiv@sign^0,c
 10345   003CBE                     l5944:
 10346   003CBE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10347   003CC0  EF66  F01E         	goto	u5290
 10348   003CC4  EF64  F01E         	goto	u5291
 10349   003CC8                     u5291:
 10350   003CC8  EF6C  F01E         	goto	l5950
 10351   003CCC                     u5290:
 10352   003CCC  6C01               	negf	___awdiv@dividend^0,c
 10353   003CCE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10354   003CD0  B0D8               	btfsc	status,0,c
 10355   003CD2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10356   003CD4  0E01               	movlw	1
 10357   003CD6  1A06               	xorwf	___awdiv@sign^0,f,c
 10358   003CD8                     l5950:
 10359   003CD8  0E00               	movlw	0
 10360   003CDA  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10361   003CDC  0E00               	movlw	0
 10362   003CDE  6E07               	movwf	___awdiv@quotient^0,c
 10363   003CE0  5003               	movf	___awdiv@divisor^0,w,c
 10364   003CE2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10365   003CE4  B4D8               	btfsc	status,2,c
 10366   003CE6  EF77  F01E         	goto	u5301
 10367   003CEA  EF79  F01E         	goto	u5300
 10368   003CEE                     u5301:
 10369   003CEE  EFA1  F01E         	goto	l5972
 10370   003CF2                     u5300:
 10371   003CF2  0E01               	movlw	1
 10372   003CF4  6E05               	movwf	___awdiv@counter^0,c
 10373   003CF6  EF81  F01E         	goto	l5958
 10374   003CFA                     l5956:
 10375   003CFA  90D8               	bcf	status,0,c
 10376   003CFC  3603               	rlcf	___awdiv@divisor^0,f,c
 10377   003CFE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10378   003D00  2A05               	incf	___awdiv@counter^0,f,c
 10379   003D02                     l5958:
 10380   003D02  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10381   003D04  EF86  F01E         	goto	u5311
 10382   003D08  EF88  F01E         	goto	u5310
 10383   003D0C                     u5311:
 10384   003D0C  EF7D  F01E         	goto	l5956
 10385   003D10                     u5310:
 10386   003D10                     l5960:
 10387   003D10  90D8               	bcf	status,0,c
 10388   003D12  3607               	rlcf	___awdiv@quotient^0,f,c
 10389   003D14  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10390   003D16  5003               	movf	___awdiv@divisor^0,w,c
 10391   003D18  5C01               	subwf	___awdiv@dividend^0,w,c
 10392   003D1A  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10393   003D1C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10394   003D1E  A0D8               	btfss	status,0,c
 10395   003D20  EF94  F01E         	goto	u5321
 10396   003D24  EF96  F01E         	goto	u5320
 10397   003D28                     u5321:
 10398   003D28  EF9B  F01E         	goto	l5968
 10399   003D2C                     u5320:
 10400   003D2C  5003               	movf	___awdiv@divisor^0,w,c
 10401   003D2E  5E01               	subwf	___awdiv@dividend^0,f,c
 10402   003D30  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10403   003D32  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10404   003D34  8007               	bsf	___awdiv@quotient^0,0,c
 10405   003D36                     l5968:
 10406   003D36  90D8               	bcf	status,0,c
 10407   003D38  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10408   003D3A  3203               	rrcf	___awdiv@divisor^0,f,c
 10409   003D3C  2E05               	decfsz	___awdiv@counter^0,f,c
 10410   003D3E  EF88  F01E         	goto	l5960
 10411   003D42                     l5972:
 10412   003D42  5006               	movf	___awdiv@sign^0,w,c
 10413   003D44  B4D8               	btfsc	status,2,c
 10414   003D46  EFA7  F01E         	goto	u5331
 10415   003D4A  EFA9  F01E         	goto	u5330
 10416   003D4E                     u5331:
 10417   003D4E  EFAD  F01E         	goto	l5976
 10418   003D52                     u5330:
 10419   003D52  6C07               	negf	___awdiv@quotient^0,c
 10420   003D54  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10421   003D56  B0D8               	btfsc	status,0,c
 10422   003D58  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10423   003D5A                     l5976:
 10424   003D5A  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10425   003D5E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10426   003D62  0012               	return		;funcret
 10427   003D64                     __end_of___awdiv:
 10428                           	callstack 0
 10429                           
 10430 ;; *************** function _Get7Seg *****************
 10431 ;; Defined at:
 10432 ;;		line 104 in file "Display.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  Digit           2    0[COMRAM] int 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  Data            1    4[COMRAM] unsigned char 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      unsigned char 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10450 ;;Total ram usage:        5 bytes
 10451 ;; Hardware stack levels used: 1
 10452 ;; Hardware stack levels required when called: 2
 10453 ;; This function calls:
 10454 ;;		Nothing
 10455 ;; This function is called by:
 10456 ;;		_WriteSTLED316SData
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text51
 10461   003B0A                     __ptext51:
 10462                           	callstack 0
 10463   003B0A                     _Get7Seg:
 10464                           	callstack 27
 10465   003B0A                     
 10466                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
 10467   003B0A  EFB3  F01D         	goto	l5874
 10468   003B0E                     l5850:
 10469                           
 10470                           ;Display.c: 109:             Data = 0x3F;
 10471   003B0E  0E3F               	movlw	63
 10472   003B10  6E05               	movwf	Get7Seg@Data^0,c
 10473                           
 10474                           ;Display.c: 110:             break;
 10475   003B12  EFE9  F01D         	goto	l5876
 10476   003B16                     l5852:
 10477                           
 10478                           ;Display.c: 112:             Data = 0x06;
 10479   003B16  0E06               	movlw	6
 10480   003B18  6E05               	movwf	Get7Seg@Data^0,c
 10481                           
 10482                           ;Display.c: 113:             break;
 10483   003B1A  EFE9  F01D         	goto	l5876
 10484   003B1E                     l5854:
 10485                           
 10486                           ;Display.c: 115:             Data = 0x5B;
 10487   003B1E  0E5B               	movlw	91
 10488   003B20  6E05               	movwf	Get7Seg@Data^0,c
 10489                           
 10490                           ;Display.c: 116:             break;
 10491   003B22  EFE9  F01D         	goto	l5876
 10492   003B26                     l5856:
 10493                           
 10494                           ;Display.c: 118:             Data = 0x4F;
 10495   003B26  0E4F               	movlw	79
 10496   003B28  6E05               	movwf	Get7Seg@Data^0,c
 10497                           
 10498                           ;Display.c: 119:             break;
 10499   003B2A  EFE9  F01D         	goto	l5876
 10500   003B2E                     l5858:
 10501                           
 10502                           ;Display.c: 121:             Data = 0x66;
 10503   003B2E  0E66               	movlw	102
 10504   003B30  6E05               	movwf	Get7Seg@Data^0,c
 10505                           
 10506                           ;Display.c: 122:             break;
 10507   003B32  EFE9  F01D         	goto	l5876
 10508   003B36                     l5860:
 10509                           
 10510                           ;Display.c: 124:             Data = 0x6D;
 10511   003B36  0E6D               	movlw	109
 10512   003B38  6E05               	movwf	Get7Seg@Data^0,c
 10513                           
 10514                           ;Display.c: 125:             break;
 10515   003B3A  EFE9  F01D         	goto	l5876
 10516   003B3E                     l5862:
 10517                           
 10518                           ;Display.c: 127:             Data = 0x7D;
 10519   003B3E  0E7D               	movlw	125
 10520   003B40  6E05               	movwf	Get7Seg@Data^0,c
 10521                           
 10522                           ;Display.c: 128:             break;
 10523   003B42  EFE9  F01D         	goto	l5876
 10524   003B46                     l5864:
 10525                           
 10526                           ;Display.c: 130:             Data = 0x07;
 10527   003B46  0E07               	movlw	7
 10528   003B48  6E05               	movwf	Get7Seg@Data^0,c
 10529                           
 10530                           ;Display.c: 131:             break;
 10531   003B4A  EFE9  F01D         	goto	l5876
 10532   003B4E                     l5866:
 10533                           
 10534                           ;Display.c: 133:             Data = 0x7F;
 10535   003B4E  0E7F               	movlw	127
 10536   003B50  6E05               	movwf	Get7Seg@Data^0,c
 10537                           
 10538                           ;Display.c: 134:             break;
 10539   003B52  EFE9  F01D         	goto	l5876
 10540   003B56                     l5868:
 10541                           
 10542                           ;Display.c: 136:             Data = 0x6F;
 10543   003B56  0E6F               	movlw	111
 10544   003B58  6E05               	movwf	Get7Seg@Data^0,c
 10545                           
 10546                           ;Display.c: 137:             break;
 10547   003B5A  EFE9  F01D         	goto	l5876
 10548   003B5E                     l5870:
 10549                           
 10550                           ;Display.c: 139:             Data = 0x00;
 10551   003B5E  0E00               	movlw	0
 10552   003B60  6E05               	movwf	Get7Seg@Data^0,c
 10553                           
 10554                           ;Display.c: 140:             break;
 10555   003B62  EFE9  F01D         	goto	l5876
 10556   003B66                     l5874:
 10557   003B66  C001  F003         	movff	Get7Seg@Digit,??_Get7Seg
 10558   003B6A  C002  F004         	movff	Get7Seg@Digit+1,??_Get7Seg+1
 10559                           
 10560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10561                           ; Switch size 1, requested type "simple"
 10562                           ; Number of cases is 1, Range of values is 0 to 0
 10563                           ; switch strategies available:
 10564                           ; Name         Instructions Cycles
 10565                           ; simple_byte            4     3 (average)
 10566                           ;	Chosen strategy is simple_byte
 10567   003B6E  5004               	movf	(??_Get7Seg+1)^0,w,c
 10568   003B70  0A00               	xorlw	0	; case 0
 10569   003B72  B4D8               	btfsc	status,2,c
 10570   003B74  EFBE  F01D         	goto	l7502
 10571   003B78  EFAF  F01D         	goto	l5870
 10572   003B7C                     l7502:
 10573                           
 10574                           ; Switch size 1, requested type "simple"
 10575                           ; Number of cases is 10, Range of values is 0 to 9
 10576                           ; switch strategies available:
 10577                           ; Name         Instructions Cycles
 10578                           ; simple_byte           31    16 (average)
 10579                           ;	Chosen strategy is simple_byte
 10580   003B7C  5003               	movf	??_Get7Seg^0,w,c
 10581   003B7E  0A00               	xorlw	0	; case 0
 10582   003B80  B4D8               	btfsc	status,2,c
 10583   003B82  EF87  F01D         	goto	l5850
 10584   003B86  0A01               	xorlw	1	; case 1
 10585   003B88  B4D8               	btfsc	status,2,c
 10586   003B8A  EF8B  F01D         	goto	l5852
 10587   003B8E  0A03               	xorlw	3	; case 2
 10588   003B90  B4D8               	btfsc	status,2,c
 10589   003B92  EF8F  F01D         	goto	l5854
 10590   003B96  0A01               	xorlw	1	; case 3
 10591   003B98  B4D8               	btfsc	status,2,c
 10592   003B9A  EF93  F01D         	goto	l5856
 10593   003B9E  0A07               	xorlw	7	; case 4
 10594   003BA0  B4D8               	btfsc	status,2,c
 10595   003BA2  EF97  F01D         	goto	l5858
 10596   003BA6  0A01               	xorlw	1	; case 5
 10597   003BA8  B4D8               	btfsc	status,2,c
 10598   003BAA  EF9B  F01D         	goto	l5860
 10599   003BAE  0A03               	xorlw	3	; case 6
 10600   003BB0  B4D8               	btfsc	status,2,c
 10601   003BB2  EF9F  F01D         	goto	l5862
 10602   003BB6  0A01               	xorlw	1	; case 7
 10603   003BB8  B4D8               	btfsc	status,2,c
 10604   003BBA  EFA3  F01D         	goto	l5864
 10605   003BBE  0A0F               	xorlw	15	; case 8
 10606   003BC0  B4D8               	btfsc	status,2,c
 10607   003BC2  EFA7  F01D         	goto	l5866
 10608   003BC6  0A01               	xorlw	1	; case 9
 10609   003BC8  B4D8               	btfsc	status,2,c
 10610   003BCA  EFAB  F01D         	goto	l5868
 10611   003BCE  EFAF  F01D         	goto	l5870
 10612   003BD2                     l5876:
 10613                           
 10614                           ;Display.c: 142:     return (Data);
 10615   003BD2  5005               	movf	Get7Seg@Data^0,w,c
 10616   003BD4  0012               	return		;funcret
 10617   003BD6                     __end_of_Get7Seg:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _PWM1_Init *****************
 10621 ;; Defined at:
 10622 ;;		line 1139 in file "main.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;  desiredFrequ    4   14[COMRAM] long 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, status,2, status,0, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;Total ram usage:        8 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 3
 10643 ;; This function calls:
 10644 ;;		___aldiv
 10645 ;; This function is called by:
 10646 ;;		_main
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text52
 10651   004254                     __ptext52:
 10652                           	callstack 0
 10653   004254                     _PWM1_Init:
 10654                           	callstack 27
 10655   004254                     
 10656                           ;main.c: 1140:     PR2 = (8000000 / (desiredFrequency * 4 * 4)) - 1;
 10657   004254  0E00               	movlw	0
 10658   004256  6E01               	movwf	___aldiv@dividend^0,c
 10659   004258  0E12               	movlw	18
 10660   00425A  6E02               	movwf	(___aldiv@dividend+1)^0,c
 10661   00425C  0E7A               	movlw	122
 10662   00425E  6E03               	movwf	(___aldiv@dividend+2)^0,c
 10663   004260  0E00               	movlw	0
 10664   004262  6E04               	movwf	(___aldiv@dividend+3)^0,c
 10665   004264  C00F  F013         	movff	PWM1_Init@desiredFrequency,??_PWM1_Init
 10666   004268  C010  F014         	movff	PWM1_Init@desiredFrequency+1,??_PWM1_Init+1
 10667   00426C  C011  F015         	movff	PWM1_Init@desiredFrequency+2,??_PWM1_Init+2
 10668   004270  C012  F016         	movff	PWM1_Init@desiredFrequency+3,??_PWM1_Init+3
 10669   004274  0E02               	movlw	2
 10670   004276                     u5425:
 10671   004276  90D8               	bcf	status,0,c
 10672   004278  3613               	rlcf	??_PWM1_Init^0,f,c
 10673   00427A  3614               	rlcf	(??_PWM1_Init+1)^0,f,c
 10674   00427C  3615               	rlcf	(??_PWM1_Init+2)^0,f,c
 10675   00427E  3616               	rlcf	(??_PWM1_Init+3)^0,f,c
 10676   004280  2EE8               	decfsz	wreg,f,c
 10677   004282  EF3B  F021         	goto	u5425
 10678   004286  0E02               	movlw	2
 10679   004288                     u5435:
 10680   004288  90D8               	bcf	status,0,c
 10681   00428A  3613               	rlcf	??_PWM1_Init^0,f,c
 10682   00428C  3614               	rlcf	(??_PWM1_Init+1)^0,f,c
 10683   00428E  3615               	rlcf	(??_PWM1_Init+2)^0,f,c
 10684   004290  3616               	rlcf	(??_PWM1_Init+3)^0,f,c
 10685   004292  2EE8               	decfsz	wreg,f,c
 10686   004294  EF44  F021         	goto	u5435
 10687   004298  C013  F005         	movff	??_PWM1_Init,___aldiv@divisor
 10688   00429C  C014  F006         	movff	??_PWM1_Init+1,___aldiv@divisor+1
 10689   0042A0  C015  F007         	movff	??_PWM1_Init+2,___aldiv@divisor+2
 10690   0042A4  C016  F008         	movff	??_PWM1_Init+3,___aldiv@divisor+3
 10691   0042A8  EC9B  F01B         	call	___aldiv	;wreg free
 10692   0042AC  0401               	decf	?___aldiv^0,w,c
 10693   0042AE  6ECB               	movwf	203,c	;volatile
 10694   0042B0                     
 10695                           ;main.c: 1141:     CCPR1L = 0;
 10696   0042B0  0E00               	movlw	0
 10697   0042B2  6EBC               	movwf	188,c	;volatile
 10698   0042B4                     
 10699                           ;main.c: 1142:     TRISC2 = 0;
 10700   0042B4  9494               	bcf	3988,2,c	;volatile
 10701   0042B6  0012               	return		;funcret
 10702   0042B8                     __end_of_PWM1_Init:
 10703                           	callstack 0
 10704                           
 10705 ;; *************** function ___aldiv *****************
 10706 ;; Defined at:
 10707 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  dividend        4    0[COMRAM] long 
 10710 ;;  divisor         4    4[COMRAM] long 
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;  quotient        4   10[COMRAM] long 
 10713 ;;  sign            1    9[COMRAM] unsigned char 
 10714 ;;  counter         1    8[COMRAM] unsigned char 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  4    0[COMRAM] long 
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10725 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10727 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10728 ;;Total ram usage:       14 bytes
 10729 ;; Hardware stack levels used: 1
 10730 ;; Hardware stack levels required when called: 2
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_PWM1_Init
 10735 ;;		_write_i2c
 10736 ;;		_read_i2c
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text53
 10741   003736                     __ptext53:
 10742                           	callstack 0
 10743   003736                     ___aldiv:
 10744                           	callstack 27
 10745   003736  0E00               	movlw	0
 10746   003738  6E0A               	movwf	___aldiv@sign^0,c
 10747   00373A  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 10748   00373C  EFA4  F01B         	goto	u4020
 10749   003740  EFA2  F01B         	goto	u4021
 10750   003744                     u4021:
 10751   003744  EFAE  F01B         	goto	l5046
 10752   003748                     u4020:
 10753   003748  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 10754   00374A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 10755   00374C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 10756   00374E  6C05               	negf	___aldiv@divisor^0,c
 10757   003750  0E00               	movlw	0
 10758   003752  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 10759   003754  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 10760   003756  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 10761   003758  0E01               	movlw	1
 10762   00375A  6E0A               	movwf	___aldiv@sign^0,c
 10763   00375C                     l5046:
 10764   00375C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 10765   00375E  EFB5  F01B         	goto	u4030
 10766   003762  EFB3  F01B         	goto	u4031
 10767   003766                     u4031:
 10768   003766  EFBF  F01B         	goto	l5052
 10769   00376A                     u4030:
 10770   00376A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 10771   00376C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 10772   00376E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 10773   003770  6C01               	negf	___aldiv@dividend^0,c
 10774   003772  0E00               	movlw	0
 10775   003774  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 10776   003776  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 10777   003778  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 10778   00377A  0E01               	movlw	1
 10779   00377C  1A0A               	xorwf	___aldiv@sign^0,f,c
 10780   00377E                     l5052:
 10781   00377E  0E00               	movlw	0
 10782   003780  6E0B               	movwf	___aldiv@quotient^0,c
 10783   003782  0E00               	movlw	0
 10784   003784  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 10785   003786  0E00               	movlw	0
 10786   003788  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 10787   00378A  0E00               	movlw	0
 10788   00378C  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 10789   00378E  5005               	movf	___aldiv@divisor^0,w,c
 10790   003790  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 10791   003792  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 10792   003794  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 10793   003796  B4D8               	btfsc	status,2,c
 10794   003798  EFD0  F01B         	goto	u4041
 10795   00379C  EFD2  F01B         	goto	u4040
 10796   0037A0                     u4041:
 10797   0037A0  EF08  F01C         	goto	l5074
 10798   0037A4                     u4040:
 10799   0037A4  0E01               	movlw	1
 10800   0037A6  6E09               	movwf	___aldiv@counter^0,c
 10801   0037A8  EFDC  F01B         	goto	l5060
 10802   0037AC                     l5058:
 10803   0037AC  90D8               	bcf	status,0,c
 10804   0037AE  3605               	rlcf	___aldiv@divisor^0,f,c
 10805   0037B0  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 10806   0037B2  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 10807   0037B4  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 10808   0037B6  2A09               	incf	___aldiv@counter^0,f,c
 10809   0037B8                     l5060:
 10810   0037B8  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 10811   0037BA  EFE1  F01B         	goto	u4051
 10812   0037BE  EFE3  F01B         	goto	u4050
 10813   0037C2                     u4051:
 10814   0037C2  EFD6  F01B         	goto	l5058
 10815   0037C6                     u4050:
 10816   0037C6                     l5062:
 10817   0037C6  90D8               	bcf	status,0,c
 10818   0037C8  360B               	rlcf	___aldiv@quotient^0,f,c
 10819   0037CA  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 10820   0037CC  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 10821   0037CE  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 10822   0037D0  5005               	movf	___aldiv@divisor^0,w,c
 10823   0037D2  5C01               	subwf	___aldiv@dividend^0,w,c
 10824   0037D4  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10825   0037D6  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 10826   0037D8  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10827   0037DA  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 10828   0037DC  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10829   0037DE  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 10830   0037E0  A0D8               	btfss	status,0,c
 10831   0037E2  EFF5  F01B         	goto	u4061
 10832   0037E6  EFF7  F01B         	goto	u4060
 10833   0037EA                     u4061:
 10834   0037EA  EF00  F01C         	goto	l5070
 10835   0037EE                     u4060:
 10836   0037EE  5005               	movf	___aldiv@divisor^0,w,c
 10837   0037F0  5E01               	subwf	___aldiv@dividend^0,f,c
 10838   0037F2  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10839   0037F4  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 10840   0037F6  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10841   0037F8  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 10842   0037FA  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10843   0037FC  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 10844   0037FE  800B               	bsf	___aldiv@quotient^0,0,c
 10845   003800                     l5070:
 10846   003800  90D8               	bcf	status,0,c
 10847   003802  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 10848   003804  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 10849   003806  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 10850   003808  3205               	rrcf	___aldiv@divisor^0,f,c
 10851   00380A  2E09               	decfsz	___aldiv@counter^0,f,c
 10852   00380C  EFE3  F01B         	goto	l5062
 10853   003810                     l5074:
 10854   003810  500A               	movf	___aldiv@sign^0,w,c
 10855   003812  B4D8               	btfsc	status,2,c
 10856   003814  EF0E  F01C         	goto	u4071
 10857   003818  EF10  F01C         	goto	u4070
 10858   00381C                     u4071:
 10859   00381C  EF18  F01C         	goto	l5078
 10860   003820                     u4070:
 10861   003820  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 10862   003822  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 10863   003824  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 10864   003826  6C0B               	negf	___aldiv@quotient^0,c
 10865   003828  0E00               	movlw	0
 10866   00382A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 10867   00382C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 10868   00382E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 10869   003830                     l5078:
 10870   003830  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 10871   003834  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 10872   003838  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 10873   00383C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 10874   003840  0012               	return		;funcret
 10875   003842                     __end_of___aldiv:
 10876                           	callstack 0
 10877                           
 10878 ;; *************** function _MotorPosition_Init *****************
 10879 ;; Defined at:
 10880 ;;		line 706 in file "main.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10898 ;;Total ram usage:        2 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 4
 10901 ;; This function calls:
 10902 ;;		_MotorBREAK
 10903 ;;		_MotorON
 10904 ;;		_Read_IR
 10905 ;;		_WriteSTLED316SErr
 10906 ;;		_delay_1ms
 10907 ;; This function is called by:
 10908 ;;		_main
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text54
 10913   00361C                     __ptext54:
 10914                           	callstack 0
 10915   00361C                     _MotorPosition_Init:
 10916                           	callstack 26
 10917   00361C                     
 10918                           ;main.c: 707:     LATAbits.LATA2 = 1;
 10919   00361C  8489               	bsf	137,2,c	;volatile
 10920   00361E                     
 10921                           ;main.c: 708:     MotorON();
 10922   00361E  EC33  F024         	call	_MotorON	;wreg free
 10923   003622                     
 10924                           ;main.c: 709:     _delay((unsigned long)((350)*(8000000/4000.0)));
 10925   003622  0E04               	movlw	4
 10926   003624  6E0B               	movwf	(??_MotorPosition_Init+1)^0,c
 10927   003626  0E8E               	movlw	142
 10928   003628  6E0A               	movwf	??_MotorPosition_Init^0,c
 10929   00362A  0E12               	movlw	18
 10930   00362C                     u6687:
 10931   00362C  2EE8               	decfsz	wreg,f,c
 10932   00362E  D7FE               	bra	u6687
 10933   003630  2E0A               	decfsz	??_MotorPosition_Init^0,f,c
 10934   003632  D7FC               	bra	u6687
 10935   003634  2E0B               	decfsz	(??_MotorPosition_Init+1)^0,f,c
 10936   003636  D7FA               	bra	u6687
 10937   003638  D000               	nop2	
 10938   00363A                     
 10939                           ;main.c: 710:     errorcounter = 30;
 10940   00363A  0E1E               	movlw	30
 10941   00363C  0100               	movlb	0	; () banked
 10942   00363E  6FE9               	movwf	_errorcounter& (0+255),b	;volatile
 10943   003640  0E00               	movlw	0
 10944   003642  6FEA               	movwf	(_errorcounter+1)& (0+255),b	;volatile
 10945   003644  0E00               	movlw	0
 10946   003646  6FEB               	movwf	(_errorcounter+2)& (0+255),b	;volatile
 10947   003648  0E00               	movlw	0
 10948   00364A  6FEC               	movwf	(_errorcounter+3)& (0+255),b	;volatile
 10949   00364C                     l6360:
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;main.c: 713:         IR_SENSORF = Read_IR();
 10953   00364C  ECEB  F023         	call	_Read_IR	;wreg free
 10954   003650  C001  F079         	movff	?_Read_IR,_IR_SENSORF
 10955   003654  C002  F07A         	movff	?_Read_IR+1,_IR_SENSORF+1
 10956   003658                     
 10957                           ;main.c: 714:         if (errorcounter == 0) {
 10958   003658  0100               	movlb	0	; () banked
 10959   00365A  51E9               	movf	_errorcounter& (0+255),w,b	;volatile
 10960   00365C  11EA               	iorwf	(_errorcounter+1)& (0+255),w,b	;volatile
 10961   00365E  11EB               	iorwf	(_errorcounter+2)& (0+255),w,b	;volatile
 10962   003660  11EC               	iorwf	(_errorcounter+3)& (0+255),w,b	;volatile
 10963   003662  A4D8               	btfss	status,2,c
 10964   003664  EF36  F01B         	goto	u5611
 10965   003668  EF38  F01B         	goto	u5610
 10966   00366C                     u5611:
 10967   00366C  EF3D  F01B         	goto	l6368
 10968   003670                     u5610:
 10969   003670                     
 10970                           ; BSR set to: 0
 10971                           ;main.c: 715:             WriteSTLED316SErr('1');
 10972   003670  0E31               	movlw	49
 10973   003672  ECA4  F01C         	call	_WriteSTLED316SErr
 10974   003676                     
 10975                           ;main.c: 716:             MotorBREAK();
 10976   003676  EC38  F024         	call	_MotorBREAK	;wreg free
 10977   00367A                     l6368:
 10978                           
 10979                           ;main.c: 719:     } while (IR_SENSORF != 0);
 10980   00367A  0100               	movlb	0	; () banked
 10981   00367C  5179               	movf	_IR_SENSORF& (0+255),w,b
 10982   00367E  117A               	iorwf	(_IR_SENSORF+1)& (0+255),w,b
 10983   003680  A4D8               	btfss	status,2,c
 10984   003682  EF45  F01B         	goto	u5621
 10985   003686  EF47  F01B         	goto	u5620
 10986   00368A                     u5621:
 10987   00368A  EF26  F01B         	goto	l6360
 10988   00368E                     u5620:
 10989   00368E                     
 10990                           ; BSR set to: 0
 10991                           ;main.c: 721:     _delay((unsigned long)((30)*(8000000/4000.0)));
 10992   00368E  0E4E               	movlw	78
 10993   003690  6E0A               	movwf	??_MotorPosition_Init^0,c
 10994   003692  0EEB               	movlw	235
 10995   003694                     u6697:
 10996   003694  2EE8               	decfsz	wreg,f,c
 10997   003696  D7FE               	bra	u6697
 10998   003698  2E0A               	decfsz	??_MotorPosition_Init^0,f,c
 10999   00369A  D7FC               	bra	u6697
 11000   00369C  F000               	nop	
 11001   00369E                     
 11002                           ;main.c: 722:     errorcounter = 30;
 11003   00369E  0E1E               	movlw	30
 11004   0036A0  0100               	movlb	0	; () banked
 11005   0036A2  6FE9               	movwf	_errorcounter& (0+255),b	;volatile
 11006   0036A4  0E00               	movlw	0
 11007   0036A6  6FEA               	movwf	(_errorcounter+1)& (0+255),b	;volatile
 11008   0036A8  0E00               	movlw	0
 11009   0036AA  6FEB               	movwf	(_errorcounter+2)& (0+255),b	;volatile
 11010   0036AC  0E00               	movlw	0
 11011   0036AE  6FEC               	movwf	(_errorcounter+3)& (0+255),b	;volatile
 11012   0036B0                     l6374:
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;main.c: 724:         IR_SENSORF = Read_IR();
 11016   0036B0  ECEB  F023         	call	_Read_IR	;wreg free
 11017   0036B4  C001  F079         	movff	?_Read_IR,_IR_SENSORF
 11018   0036B8  C002  F07A         	movff	?_Read_IR+1,_IR_SENSORF+1
 11019   0036BC                     
 11020                           ;main.c: 725:         if (errorcounter == 0) {
 11021   0036BC  0100               	movlb	0	; () banked
 11022   0036BE  51E9               	movf	_errorcounter& (0+255),w,b	;volatile
 11023   0036C0  11EA               	iorwf	(_errorcounter+1)& (0+255),w,b	;volatile
 11024   0036C2  11EB               	iorwf	(_errorcounter+2)& (0+255),w,b	;volatile
 11025   0036C4  11EC               	iorwf	(_errorcounter+3)& (0+255),w,b	;volatile
 11026   0036C6  A4D8               	btfss	status,2,c
 11027   0036C8  EF68  F01B         	goto	u5631
 11028   0036CC  EF6A  F01B         	goto	u5630
 11029   0036D0                     u5631:
 11030   0036D0  EF6F  F01B         	goto	l6382
 11031   0036D4                     u5630:
 11032   0036D4                     
 11033                           ; BSR set to: 0
 11034                           ;main.c: 726:             WriteSTLED316SErr('2');
 11035   0036D4  0E32               	movlw	50
 11036   0036D6  ECA4  F01C         	call	_WriteSTLED316SErr
 11037   0036DA                     
 11038                           ;main.c: 727:             MotorBREAK();
 11039   0036DA  EC38  F024         	call	_MotorBREAK	;wreg free
 11040   0036DE                     l6382:
 11041                           
 11042                           ;main.c: 730:     } while (IR_SENSORF != 1);
 11043   0036DE  0100               	movlb	0	; () banked
 11044   0036E0  0579               	decf	_IR_SENSORF& (0+255),w,b
 11045   0036E2  117A               	iorwf	(_IR_SENSORF+1)& (0+255),w,b
 11046   0036E4  A4D8               	btfss	status,2,c
 11047   0036E6  EF77  F01B         	goto	u5641
 11048   0036EA  EF79  F01B         	goto	u5640
 11049   0036EE                     u5641:
 11050   0036EE  EF58  F01B         	goto	l6374
 11051   0036F2                     u5640:
 11052   0036F2                     
 11053                           ; BSR set to: 0
 11054                           ;main.c: 732:     errorcounter = 30;
 11055   0036F2  0E1E               	movlw	30
 11056   0036F4  6FE9               	movwf	_errorcounter& (0+255),b	;volatile
 11057   0036F6  0E00               	movlw	0
 11058   0036F8  6FEA               	movwf	(_errorcounter+1)& (0+255),b	;volatile
 11059   0036FA  0E00               	movlw	0
 11060   0036FC  6FEB               	movwf	(_errorcounter+2)& (0+255),b	;volatile
 11061   0036FE  0E00               	movlw	0
 11062   003700  6FEC               	movwf	(_errorcounter+3)& (0+255),b	;volatile
 11063   003702                     
 11064                           ; BSR set to: 0
 11065                           ;main.c: 734:     delay_1ms(Motor_Stop_Delay_Time);
 11066   003702  C087  F001         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
 11067   003706  C088  F002         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
 11068   00370A  EC9B  F023         	call	_delay_1ms	;wreg free
 11069   00370E                     
 11070                           ;main.c: 735:     MotorBREAK();
 11071   00370E  EC38  F024         	call	_MotorBREAK	;wreg free
 11072   003712                     
 11073                           ;main.c: 736:     _delay((unsigned long)((500)*(8000000/4000.0)));
 11074   003712  0E06               	movlw	6
 11075   003714  6E0B               	movwf	(??_MotorPosition_Init+1)^0,c
 11076   003716  0E13               	movlw	19
 11077   003718  6E0A               	movwf	??_MotorPosition_Init^0,c
 11078   00371A  0EAE               	movlw	174
 11079   00371C                     u6707:
 11080   00371C  2EE8               	decfsz	wreg,f,c
 11081   00371E  D7FE               	bra	u6707
 11082   003720  2E0A               	decfsz	??_MotorPosition_Init^0,f,c
 11083   003722  D7FC               	bra	u6707
 11084   003724  2E0B               	decfsz	(??_MotorPosition_Init+1)^0,f,c
 11085   003726  D7FA               	bra	u6707
 11086   003728                     
 11087                           ;main.c: 737:     IR_SENSORF = 0;
 11088   003728  0E00               	movlw	0
 11089   00372A  0100               	movlb	0	; () banked
 11090   00372C  6F7A               	movwf	(_IR_SENSORF+1)& (0+255),b
 11091   00372E  0E00               	movlw	0
 11092   003730  6F79               	movwf	_IR_SENSORF& (0+255),b
 11093   003732                     
 11094                           ; BSR set to: 0
 11095                           ;main.c: 739:     LATAbits.LATA2 = 0;
 11096   003732  9489               	bcf	137,2,c	;volatile
 11097   003734                     
 11098                           ; BSR set to: 0
 11099   003734  0012               	return		;funcret
 11100   003736                     __end_of_MotorPosition_Init:
 11101                           	callstack 0
 11102                           
 11103 ;; *************** function _WriteSTLED316SErr *****************
 11104 ;; Defined at:
 11105 ;;		line 287 in file "Display.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  msg             1    wreg     unsigned char 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  msg             1    8[COMRAM] unsigned char 
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;Total ram usage:        3 bytes
 11124 ;; Hardware stack levels used: 1
 11125 ;; Hardware stack levels required when called: 3
 11126 ;; This function calls:
 11127 ;;		_STLED316s_SPI_SendData
 11128 ;; This function is called by:
 11129 ;;		_MotorPosition_Init
 11130 ;;		_Homing_Again_Manual
 11131 ;;		_Homing_Again_Auto
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text55
 11136   003948                     __ptext55:
 11137                           	callstack 0
 11138   003948                     _WriteSTLED316SErr:
 11139                           	callstack 26
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;incstack = 0
 11143                           ;WriteSTLED316SErr@msg stored from wreg
 11144   003948  6E09               	movwf	WriteSTLED316SErr@msg^0,c
 11145   00394A                     
 11146                           ;Display.c: 288:     LATCbits.LATC4 = 0;
 11147   00394A  988B               	bcf	139,4,c	;volatile
 11148   00394C                     
 11149                           ;Display.c: 290:     STLED316s_SPI_SendData(0x00);
 11150   00394C  0E00               	movlw	0
 11151   00394E  EC44  F020         	call	_STLED316s_SPI_SendData
 11152   003952                     
 11153                           ;Display.c: 293:     LATCbits.LATC4 = 1;
 11154   003952  888B               	bsf	139,4,c	;volatile
 11155   003954                     
 11156                           ;Display.c: 295:     LATCbits.LATC4 = 0;
 11157   003954  988B               	bcf	139,4,c	;volatile
 11158                           
 11159                           ;Display.c: 297:     STLED316s_SPI_SendData(0x00);
 11160   003956  0E00               	movlw	0
 11161   003958  EC44  F020         	call	_STLED316s_SPI_SendData
 11162                           
 11163                           ;Display.c: 299:     switch (msg) {
 11164   00395C  EFE8  F01C         	goto	l5824
 11165   003960                     l5808:
 11166                           
 11167                           ;Display.c: 301:             STLED316s_SPI_SendData(0x79);
 11168   003960  0E79               	movlw	121
 11169   003962  EC44  F020         	call	_STLED316s_SPI_SendData
 11170                           
 11171                           ;Display.c: 302:             STLED316s_SPI_SendData(0x77);
 11172   003966  0E77               	movlw	119
 11173   003968  EC44  F020         	call	_STLED316s_SPI_SendData
 11174                           
 11175                           ;Display.c: 303:             break;
 11176   00396C  EF11  F01D         	goto	l463
 11177   003970                     l5810:
 11178                           
 11179                           ;Display.c: 305:             STLED316s_SPI_SendData(0x79);
 11180   003970  0E79               	movlw	121
 11181   003972  EC44  F020         	call	_STLED316s_SPI_SendData
 11182                           
 11183                           ;Display.c: 306:             STLED316s_SPI_SendData(0x3F);
 11184   003976  0E3F               	movlw	63
 11185   003978  EC44  F020         	call	_STLED316s_SPI_SendData
 11186                           
 11187                           ;Display.c: 307:             break;
 11188   00397C  EF11  F01D         	goto	l463
 11189   003980                     l5812:
 11190                           
 11191                           ;Display.c: 309:             STLED316s_SPI_SendData(0x79);
 11192   003980  0E79               	movlw	121
 11193   003982  EC44  F020         	call	_STLED316s_SPI_SendData
 11194                           
 11195                           ;Display.c: 310:             STLED316s_SPI_SendData(0x06);
 11196   003986  0E06               	movlw	6
 11197   003988  EC44  F020         	call	_STLED316s_SPI_SendData
 11198                           
 11199                           ;Display.c: 311:             break;
 11200   00398C  EF11  F01D         	goto	l463
 11201   003990                     l5814:
 11202                           
 11203                           ;Display.c: 313:             STLED316s_SPI_SendData(0x79);
 11204   003990  0E79               	movlw	121
 11205   003992  EC44  F020         	call	_STLED316s_SPI_SendData
 11206                           
 11207                           ;Display.c: 314:             STLED316s_SPI_SendData(0x5B);
 11208   003996  0E5B               	movlw	91
 11209   003998  EC44  F020         	call	_STLED316s_SPI_SendData
 11210                           
 11211                           ;Display.c: 315:             break;
 11212   00399C  EF11  F01D         	goto	l463
 11213   0039A0                     l5816:
 11214                           
 11215                           ;Display.c: 317:             STLED316s_SPI_SendData(0x00);
 11216   0039A0  0E00               	movlw	0
 11217   0039A2  EC44  F020         	call	_STLED316s_SPI_SendData
 11218                           
 11219                           ;Display.c: 318:             STLED316s_SPI_SendData(0x3F);
 11220   0039A6  0E3F               	movlw	63
 11221   0039A8  EC44  F020         	call	_STLED316s_SPI_SendData
 11222                           
 11223                           ;Display.c: 319:             break;
 11224   0039AC  EF11  F01D         	goto	l463
 11225   0039B0                     l5818:
 11226                           
 11227                           ;Display.c: 321:             STLED316s_SPI_SendData(0x79);
 11228   0039B0  0E79               	movlw	121
 11229   0039B2  EC44  F020         	call	_STLED316s_SPI_SendData
 11230                           
 11231                           ;Display.c: 322:             STLED316s_SPI_SendData(0x06);
 11232   0039B6  0E06               	movlw	6
 11233   0039B8  EC44  F020         	call	_STLED316s_SPI_SendData
 11234                           
 11235                           ;Display.c: 323:             break;
 11236   0039BC  EF11  F01D         	goto	l463
 11237   0039C0                     l5820:
 11238                           
 11239                           ;Display.c: 325:             STLED316s_SPI_SendData(0x77);
 11240   0039C0  0E77               	movlw	119
 11241   0039C2  EC44  F020         	call	_STLED316s_SPI_SendData
 11242                           
 11243                           ;Display.c: 326:             STLED316s_SPI_SendData(0x3E);
 11244   0039C6  0E3E               	movlw	62
 11245   0039C8  EC44  F020         	call	_STLED316s_SPI_SendData
 11246                           
 11247                           ;Display.c: 327:             break;
 11248   0039CC  EF11  F01D         	goto	l463
 11249   0039D0                     l5824:
 11250   0039D0  5009               	movf	WriteSTLED316SErr@msg^0,w,c
 11251   0039D2  6E07               	movwf	??_WriteSTLED316SErr^0,c
 11252   0039D4  6A08               	clrf	(??_WriteSTLED316SErr+1)^0,c
 11253                           
 11254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11255                           ; Switch size 1, requested type "simple"
 11256                           ; Number of cases is 1, Range of values is 0 to 0
 11257                           ; switch strategies available:
 11258                           ; Name         Instructions Cycles
 11259                           ; simple_byte            4     3 (average)
 11260                           ;	Chosen strategy is simple_byte
 11261   0039D6  5008               	movf	(??_WriteSTLED316SErr+1)^0,w,c
 11262   0039D8  0A00               	xorlw	0	; case 0
 11263   0039DA  B4D8               	btfsc	status,2,c
 11264   0039DC  EFF2  F01C         	goto	l7504
 11265   0039E0  EF11  F01D         	goto	l463
 11266   0039E4                     l7504:
 11267                           
 11268                           ; Switch size 1, requested type "simple"
 11269                           ; Number of cases is 7, Range of values is 48 to 83
 11270                           ; switch strategies available:
 11271                           ; Name         Instructions Cycles
 11272                           ; simple_byte           22    12 (average)
 11273                           ;	Chosen strategy is simple_byte
 11274   0039E4  5007               	movf	??_WriteSTLED316SErr^0,w,c
 11275   0039E6  0A30               	xorlw	48	; case 48
 11276   0039E8  B4D8               	btfsc	status,2,c
 11277   0039EA  EFB8  F01C         	goto	l5810
 11278   0039EE  0A01               	xorlw	1	; case 49
 11279   0039F0  B4D8               	btfsc	status,2,c
 11280   0039F2  EFC0  F01C         	goto	l5812
 11281   0039F6  0A03               	xorlw	3	; case 50
 11282   0039F8  B4D8               	btfsc	status,2,c
 11283   0039FA  EFC8  F01C         	goto	l5814
 11284   0039FE  0A73               	xorlw	115	; case 65
 11285   003A00  B4D8               	btfsc	status,2,c
 11286   003A02  EFE0  F01C         	goto	l5820
 11287   003A06  0A04               	xorlw	4	; case 69
 11288   003A08  B4D8               	btfsc	status,2,c
 11289   003A0A  EFB0  F01C         	goto	l5808
 11290   003A0E  0A02               	xorlw	2	; case 71
 11291   003A10  B4D8               	btfsc	status,2,c
 11292   003A12  EFD0  F01C         	goto	l5816
 11293   003A16  0A14               	xorlw	20	; case 83
 11294   003A18  B4D8               	btfsc	status,2,c
 11295   003A1A  EFD8  F01C         	goto	l5818
 11296   003A1E  EF11  F01D         	goto	l463
 11297   003A22                     l463:
 11298                           
 11299                           ;Display.c: 332:     LATCbits.LATC4 = 1;
 11300   003A22  888B               	bsf	139,4,c	;volatile
 11301                           
 11302                           ;Display.c: 334:     LATCbits.LATC4 = 0;
 11303   003A24  988B               	bcf	139,4,c	;volatile
 11304   003A26                     
 11305                           ;Display.c: 336:     STLED316s_SPI_SendData(0x0D);
 11306   003A26  0E0D               	movlw	13
 11307   003A28  EC44  F020         	call	_STLED316s_SPI_SendData
 11308   003A2C                     
 11309                           ;Display.c: 338:     LATCbits.LATC4 = 1;
 11310   003A2C  888B               	bsf	139,4,c	;volatile
 11311   003A2E  0012               	return		;funcret
 11312   003A30                     __end_of_WriteSTLED316SErr:
 11313                           	callstack 0
 11314                           
 11315 ;; *************** function _Read_IR *****************
 11316 ;; Defined at:
 11317 ;;		line 691 in file "main.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;		None
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  2    0[COMRAM] unsigned int 
 11324 ;; Registers used:
 11325 ;;		wreg, status,2
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;Total ram usage:        2 bytes
 11336 ;; Hardware stack levels used: 1
 11337 ;; Hardware stack levels required when called: 2
 11338 ;; This function calls:
 11339 ;;		Nothing
 11340 ;; This function is called by:
 11341 ;;		_MotorPosition_Init
 11342 ;;		_handle_uart_communication
 11343 ;;		_Homing_Again_Manual
 11344 ;;		_Homing_Again_Auto
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text56
 11349   0047D6                     __ptext56:
 11350                           	callstack 0
 11351   0047D6                     _Read_IR:
 11352                           	callstack 27
 11353   0047D6                     
 11354                           ;main.c: 693:     if (PORTAbits.RA1 == 1)
 11355   0047D6  A280               	btfss	128,1,c	;volatile
 11356   0047D8  EFF0  F023         	goto	u5191
 11357   0047DC  EFF2  F023         	goto	u5190
 11358   0047E0                     u5191:
 11359   0047E0  EFF8  F023         	goto	l5792
 11360   0047E4                     u5190:
 11361   0047E4                     
 11362                           ;main.c: 694:     {;main.c: 695:         return 0;
 11363   0047E4  0E00               	movlw	0
 11364   0047E6  6E02               	movwf	(?_Read_IR+1)^0,c
 11365   0047E8  0E00               	movlw	0
 11366   0047EA  6E01               	movwf	?_Read_IR^0,c
 11367   0047EC  EFFC  F023         	goto	l254
 11368   0047F0                     l5792:
 11369                           
 11370                           ;main.c: 697:     {;main.c: 698:         return 1;
 11371   0047F0  0E00               	movlw	0
 11372   0047F2  6E02               	movwf	(?_Read_IR+1)^0,c
 11373   0047F4  0E01               	movlw	1
 11374   0047F6  6E01               	movwf	?_Read_IR^0,c
 11375   0047F8                     l254:
 11376   0047F8  0012               	return		;funcret
 11377   0047FA                     __end_of_Read_IR:
 11378                           	callstack 0
 11379                           
 11380 ;; *************** function _MotorON *****************
 11381 ;; Defined at:
 11382 ;;		line 40 in file "MotorDriver.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;		None
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1    wreg      void 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;Total ram usage:        0 bytes
 11401 ;; Hardware stack levels used: 1
 11402 ;; Hardware stack levels required when called: 3
 11403 ;; This function calls:
 11404 ;;		_Set_RG3
 11405 ;; This function is called by:
 11406 ;;		_MotorPosition_Init
 11407 ;;		_handle_uart_communication
 11408 ;;		_Homing_Again_Manual
 11409 ;;		_Homing_Again_Auto
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text57
 11414   004866                     __ptext57:
 11415                           	callstack 0
 11416   004866                     _MotorON:
 11417                           	callstack 26
 11418   004866                     
 11419                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
 11420   004866  868F               	bsf	143,3,c	;volatile
 11421                           
 11422                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
 11423   004868  888F               	bsf	143,4,c	;volatile
 11424   00486A                     
 11425                           ;MotorDriver.c: 44:     Set_RG3();
 11426   00486A  EC49  F024         	call	_Set_RG3	;wreg free
 11427   00486E  0012               	return		;funcret
 11428   004870                     __end_of_MotorON:
 11429                           	callstack 0
 11430                           
 11431 ;; *************** function _Set_RG3 *****************
 11432 ;; Defined at:
 11433 ;;		line 28 in file "MotorDriver.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;		None
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;		None
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, status,2
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;Total ram usage:        0 bytes
 11452 ;; Hardware stack levels used: 1
 11453 ;; Hardware stack levels required when called: 2
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_MotorON
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text58
 11462   004892                     __ptext58:
 11463                           	callstack 0
 11464   004892                     _Set_RG3:
 11465                           	callstack 26
 11466   004892                     
 11467                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
 11468   004892  0E08               	movlw	8
 11469   004894  6E73               	movwf	115,c	;volatile
 11470   004896                     
 11471                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
 11472   004896  8476               	bsf	118,2,c	;volatile
 11473   004898  0012               	return		;funcret
 11474   00489A                     __end_of_Set_RG3:
 11475                           	callstack 0
 11476                           
 11477 ;; *************** function _MotorBREAK *****************
 11478 ;; Defined at:
 11479 ;;		line 47 in file "MotorDriver.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg, status,2, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used: 1
 11499 ;; Hardware stack levels required when called: 3
 11500 ;; This function calls:
 11501 ;;		_Clr_RG3
 11502 ;; This function is called by:
 11503 ;;		_MotorPosition_Init
 11504 ;;		_handle_uart_communication
 11505 ;;		_Homing_Again_Manual
 11506 ;;		_Homing_Again_Auto
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text59
 11511   004870                     __ptext59:
 11512                           	callstack 0
 11513   004870                     _MotorBREAK:
 11514                           	callstack 26
 11515   004870                     
 11516                           ;MotorDriver.c: 49:     Clr_RG3();
 11517   004870  EC4D  F024         	call	_Clr_RG3	;wreg free
 11518   004874                     
 11519                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
 11520   004874  868F               	bsf	143,3,c	;volatile
 11521   004876                     
 11522                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
 11523   004876  888F               	bsf	143,4,c	;volatile
 11524   004878  0012               	return		;funcret
 11525   00487A                     __end_of_MotorBREAK:
 11526                           	callstack 0
 11527                           
 11528 ;; *************** function _Clr_RG3 *****************
 11529 ;; Defined at:
 11530 ;;		line 35 in file "MotorDriver.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;		None
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;		None
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		wreg, status,2
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;Total ram usage:        0 bytes
 11549 ;; Hardware stack levels used: 1
 11550 ;; Hardware stack levels required when called: 2
 11551 ;; This function calls:
 11552 ;;		Nothing
 11553 ;; This function is called by:
 11554 ;;		_MotorBREAK
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           	psect	text60
 11559   00489A                     __ptext60:
 11560                           	callstack 0
 11561   00489A                     _Clr_RG3:
 11562                           	callstack 26
 11563   00489A                     
 11564                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
 11565   00489A  0E00               	movlw	0
 11566   00489C  6E73               	movwf	115,c	;volatile
 11567   00489E                     
 11568                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
 11569   00489E  9476               	bcf	118,2,c	;volatile
 11570   0048A0  0012               	return		;funcret
 11571   0048A2                     __end_of_Clr_RG3:
 11572                           	callstack 0
 11573                           
 11574 ;; *************** function _InitTimer1 *****************
 11575 ;; Defined at:
 11576 ;;		line 1032 in file "main.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;		None
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, status,2
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;Total ram usage:        0 bytes
 11595 ;; Hardware stack levels used: 1
 11596 ;; Hardware stack levels required when called: 2
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_main
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text61
 11605   0047FA                     __ptext61:
 11606                           	callstack 0
 11607   0047FA                     _InitTimer1:
 11608                           	callstack 28
 11609   0047FA                     
 11610                           ;main.c: 1033:     T1CON = 0b00110001;
 11611   0047FA  0E31               	movlw	49
 11612   0047FC  6ECD               	movwf	205,c	;volatile
 11613                           
 11614                           ;main.c: 1036:     TMR1 = 0x9E57;
 11615   0047FE  0E9E               	movlw	158
 11616   004800  6ECF               	movwf	207,c	;volatile
 11617   004802  0E57               	movlw	87
 11618   004804  6ECE               	movwf	206,c	;volatile
 11619   004806                     
 11620                           ;main.c: 1037:     TMR1IF = 0;
 11621   004806  909E               	bcf	3998,0,c	;volatile
 11622   004808                     
 11623                           ;main.c: 1038:     TMR1IE = 1;
 11624   004808  809D               	bsf	3997,0,c	;volatile
 11625   00480A                     
 11626                           ;main.c: 1039:     IPR1bits.TMR1IP = 1;
 11627   00480A  809F               	bsf	159,0,c	;volatile
 11628                           
 11629                           ;main.c: 1041:     TMR1IF_triggered = 0;
 11630   00480C  0E00               	movlw	0
 11631   00480E  0100               	movlb	0	; () banked
 11632   004810  6F97               	movwf	_TMR1IF_triggered& (0+255),b	;volatile
 11633   004812                     
 11634                           ; BSR set to: 0
 11635   004812  0012               	return		;funcret
 11636   004814                     __end_of_InitTimer1:
 11637                           	callstack 0
 11638                           
 11639 ;; *************** function _InitSTLED316 *****************
 11640 ;; Defined at:
 11641 ;;		line 14 in file "Display.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  Brightness      1    wreg     unsigned char 
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;  Brightness      1    8[COMRAM] unsigned char 
 11646 ;;  i               2    0        int 
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		wreg, status,2, status,0, cstack
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;Total ram usage:        3 bytes
 11661 ;; Hardware stack levels used: 1
 11662 ;; Hardware stack levels required when called: 3
 11663 ;; This function calls:
 11664 ;;		_STLED316s_SPI_SendData
 11665 ;; This function is called by:
 11666 ;;		_main
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           	psect	text62
 11671   003FFC                     __ptext62:
 11672                           	callstack 0
 11673   003FFC                     _InitSTLED316:
 11674                           	callstack 27
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;incstack = 0
 11678                           ;InitSTLED316@Brightness stored from wreg
 11679   003FFC  6E09               	movwf	InitSTLED316@Brightness^0,c
 11680   003FFE                     
 11681                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
 11682   003FFE  888B               	bsf	139,4,c	;volatile
 11683                           
 11684                           ;Display.c: 20:     LATCbits.LATC4 = 0;
 11685   004000  988B               	bcf	139,4,c	;volatile
 11686   004002                     
 11687                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
 11688   004002  0E30               	movlw	48
 11689   004004  EC44  F020         	call	_STLED316s_SPI_SendData
 11690   004008                     
 11691                           ;Display.c: 25:     LATCbits.LATC4 = 1;
 11692   004008  888B               	bsf	139,4,c	;volatile
 11693   00400A                     
 11694                           ;Display.c: 27:     LATCbits.LATC4 = 0;
 11695   00400A  988B               	bcf	139,4,c	;volatile
 11696                           
 11697                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
 11698   00400C  0E30               	movlw	48
 11699   00400E  EC44  F020         	call	_STLED316s_SPI_SendData
 11700                           
 11701                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
 11702   004012  C009  F007         	movff	InitSTLED316@Brightness,??_InitSTLED316
 11703   004016  3A07               	swapf	??_InitSTLED316^0,f,c
 11704   004018  0E0F               	movlw	15
 11705   00401A  1607               	andwf	??_InitSTLED316^0,f,c
 11706   00401C  0E05               	movlw	5
 11707   00401E  6E08               	movwf	(??_InitSTLED316+1)^0,c
 11708   004020                     u5415:
 11709   004020  90D8               	bcf	status,0,c
 11710   004022  3607               	rlcf	??_InitSTLED316^0,f,c
 11711   004024  2E08               	decfsz	(??_InitSTLED316+1)^0,f,c
 11712   004026  EF10  F020         	goto	u5415
 11713   00402A  5007               	movf	??_InitSTLED316^0,w,c
 11714   00402C  0905               	iorlw	5
 11715   00402E  EC44  F020         	call	_STLED316s_SPI_SendData
 11716   004032                     
 11717                           ;Display.c: 34:     LATCbits.LATC4 = 1;
 11718   004032  888B               	bsf	139,4,c	;volatile
 11719   004034                     
 11720                           ;Display.c: 36:     LATCbits.LATC4 = 0;
 11721   004034  988B               	bcf	139,4,c	;volatile
 11722                           
 11723                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
 11724   004036  0E11               	movlw	17
 11725   004038  EC44  F020         	call	_STLED316s_SPI_SendData
 11726   00403C                     
 11727                           ;Display.c: 45:     LATCbits.LATC4 = 1;
 11728   00403C  888B               	bsf	139,4,c	;volatile
 11729   00403E                     
 11730                           ;Display.c: 47:     LATCbits.LATC4 = 0;
 11731   00403E  988B               	bcf	139,4,c	;volatile
 11732                           
 11733                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
 11734   004040  0E11               	movlw	17
 11735   004042  EC44  F020         	call	_STLED316s_SPI_SendData
 11736                           
 11737                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
 11738   004046  5009               	movf	InitSTLED316@Brightness^0,w,c
 11739   004048  EC44  F020         	call	_STLED316s_SPI_SendData
 11740                           
 11741                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
 11742   00404C  5009               	movf	InitSTLED316@Brightness^0,w,c
 11743   00404E  EC44  F020         	call	_STLED316s_SPI_SendData
 11744                           
 11745                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
 11746   004052  5009               	movf	InitSTLED316@Brightness^0,w,c
 11747   004054  EC44  F020         	call	_STLED316s_SPI_SendData
 11748   004058                     
 11749                           ;Display.c: 58:     LATCbits.LATC4 = 1;
 11750   004058  888B               	bsf	139,4,c	;volatile
 11751   00405A                     
 11752                           ;Display.c: 60:     LATCbits.LATC4 = 0;
 11753   00405A  988B               	bcf	139,4,c	;volatile
 11754                           
 11755                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
 11756   00405C  0E18               	movlw	24
 11757   00405E  EC44  F020         	call	_STLED316s_SPI_SendData
 11758   004062                     
 11759                           ;Display.c: 66:     LATCbits.LATC4 = 1;
 11760   004062  888B               	bsf	139,4,c	;volatile
 11761   004064                     
 11762                           ;Display.c: 68:     LATCbits.LATC4 = 0;
 11763   004064  988B               	bcf	139,4,c	;volatile
 11764                           
 11765                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
 11766   004066  0E18               	movlw	24
 11767   004068  EC44  F020         	call	_STLED316s_SPI_SendData
 11768                           
 11769                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
 11770   00406C  5009               	movf	InitSTLED316@Brightness^0,w,c
 11771   00406E  EC44  F020         	call	_STLED316s_SPI_SendData
 11772                           
 11773                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
 11774   004072  5009               	movf	InitSTLED316@Brightness^0,w,c
 11775   004074  EC44  F020         	call	_STLED316s_SPI_SendData
 11776                           
 11777                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
 11778   004078  5009               	movf	InitSTLED316@Brightness^0,w,c
 11779   00407A  EC44  F020         	call	_STLED316s_SPI_SendData
 11780                           
 11781                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
 11782   00407E  5009               	movf	InitSTLED316@Brightness^0,w,c
 11783   004080  EC44  F020         	call	_STLED316s_SPI_SendData
 11784   004084                     
 11785                           ;Display.c: 79:     LATCbits.LATC4 = 1;
 11786   004084  888B               	bsf	139,4,c	;volatile
 11787   004086  0012               	return		;funcret
 11788   004088                     __end_of_InitSTLED316:
 11789                           	callstack 0
 11790                           
 11791 ;; *************** function _STLED316s_SPI_SendData *****************
 11792 ;; Defined at:
 11793 ;;		line 88 in file "Display.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  Data            1    wreg     unsigned char 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  Data            1    2[COMRAM] unsigned char 
 11798 ;;  t               1    5[COMRAM] unsigned char 
 11799 ;;  i               1    4[COMRAM] unsigned char 
 11800 ;;  temp            1    3[COMRAM] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;Total ram usage:        6 bytes
 11815 ;; Hardware stack levels used: 1
 11816 ;; Hardware stack levels required when called: 2
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_InitSTLED316
 11821 ;;		_WriteSTLED316SData
 11822 ;;		_WriteSTLED316SErr
 11823 ;;		_WriteSTLED316SMode
 11824 ;;		_WriteSTLED316SVibMode
 11825 ;; This function uses a non-reentrant model
 11826 ;;
 11827                           
 11828                           	psect	text63
 11829   004088                     __ptext63:
 11830                           	callstack 0
 11831   004088                     _STLED316s_SPI_SendData:
 11832                           	callstack 27
 11833                           
 11834                           ;incstack = 0
 11835                           ;STLED316s_SPI_SendData@Data stored from wreg
 11836   004088  6E03               	movwf	STLED316s_SPI_SendData@Data^0,c
 11837   00408A                     
 11838                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
 11839   00408A  0E00               	movlw	0
 11840   00408C  6E05               	movwf	STLED316s_SPI_SendData@i^0,c
 11841   00408E                     l405:
 11842                           
 11843                           ;Display.c: 92:         LATCbits.LATC3 = 0;
 11844   00408E  968B               	bcf	139,3,c	;volatile
 11845   004090                     
 11846                           ;Display.c: 93:         temp = Data & (0x1 << i);
 11847   004090  C005  F001         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
 11848   004094  0E01               	movlw	1
 11849   004096  6E02               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
 11850   004098  2A01               	incf	??_STLED316s_SPI_SendData^0,f,c
 11851   00409A  EF51  F020         	goto	u5074
 11852   00409E                     u5075:
 11853   00409E  90D8               	bcf	status,0,c
 11854   0040A0  3602               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
 11855   0040A2                     u5074:
 11856   0040A2  2E01               	decfsz	??_STLED316s_SPI_SendData^0,f,c
 11857   0040A4  EF4F  F020         	goto	u5075
 11858   0040A8  5002               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
 11859   0040AA  1403               	andwf	STLED316s_SPI_SendData@Data^0,w,c
 11860   0040AC  6E04               	movwf	STLED316s_SPI_SendData@temp^0,c
 11861   0040AE                     
 11862                           ;Display.c: 94:         if (temp)
 11863   0040AE  5004               	movf	STLED316s_SPI_SendData@temp^0,w,c
 11864   0040B0  B4D8               	btfsc	status,2,c
 11865   0040B2  EF5D  F020         	goto	u5081
 11866   0040B6  EF5F  F020         	goto	u5080
 11867   0040BA                     u5081:
 11868   0040BA  EF62  F020         	goto	l407
 11869   0040BE                     u5080:
 11870   0040BE                     
 11871                           ;Display.c: 95:             LATCbits.LATC5 = 1;
 11872   0040BE  8A8B               	bsf	139,5,c	;volatile
 11873   0040C0  EF63  F020         	goto	l5718
 11874   0040C4                     l407:
 11875                           
 11876                           ;Display.c: 97:             LATCbits.LATC5 = 0;
 11877   0040C4  9A8B               	bcf	139,5,c	;volatile
 11878   0040C6                     l5718:
 11879                           
 11880                           ;Display.c: 98:         for (t = 0; t < 5; t++);
 11881   0040C6  0E00               	movlw	0
 11882   0040C8  6E06               	movwf	STLED316s_SPI_SendData@t^0,c
 11883   0040CA                     l5724:
 11884   0040CA  2A06               	incf	STLED316s_SPI_SendData@t^0,f,c
 11885   0040CC  0E04               	movlw	4
 11886   0040CE  6406               	cpfsgt	STLED316s_SPI_SendData@t^0,c
 11887   0040D0  EF6C  F020         	goto	u5091
 11888   0040D4  EF6E  F020         	goto	u5090
 11889   0040D8                     u5091:
 11890   0040D8  EF65  F020         	goto	l5724
 11891   0040DC                     u5090:
 11892   0040DC                     
 11893                           ;Display.c: 99:         LATCbits.LATC3 = 1;
 11894   0040DC  868B               	bsf	139,3,c	;volatile
 11895   0040DE                     
 11896                           ;Display.c: 100:         for (t = 0; t < 5; t++);
 11897   0040DE  0E00               	movlw	0
 11898   0040E0  6E06               	movwf	STLED316s_SPI_SendData@t^0,c
 11899   0040E2                     l5734:
 11900   0040E2  2A06               	incf	STLED316s_SPI_SendData@t^0,f,c
 11901   0040E4  0E04               	movlw	4
 11902   0040E6  6406               	cpfsgt	STLED316s_SPI_SendData@t^0,c
 11903   0040E8  EF78  F020         	goto	u5101
 11904   0040EC  EF7A  F020         	goto	u5100
 11905   0040F0                     u5101:
 11906   0040F0  EF71  F020         	goto	l5734
 11907   0040F4                     u5100:
 11908   0040F4                     
 11909                           ;Display.c: 101:     }
 11910   0040F4  2A05               	incf	STLED316s_SPI_SendData@i^0,f,c
 11911   0040F6  0E07               	movlw	7
 11912   0040F8  6405               	cpfsgt	STLED316s_SPI_SendData@i^0,c
 11913   0040FA  EF81  F020         	goto	u5111
 11914   0040FE  EF83  F020         	goto	u5110
 11915   004102                     u5111:
 11916   004102  EF47  F020         	goto	l405
 11917   004106                     u5110:
 11918   004106  0012               	return		;funcret
 11919   004108                     __end_of_STLED316s_SPI_SendData:
 11920                           	callstack 0
 11921                           
 11922 ;; *************** function _AD_capture_BattVoltage *****************
 11923 ;; Defined at:
 11924 ;;		line 1046 in file "main.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;		None
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;		None
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      void 
 11931 ;; Registers used:
 11932 ;;		wreg, status,2, status,0, cstack
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11942 ;;Total ram usage:        2 bytes
 11943 ;; Hardware stack levels used: 1
 11944 ;; Hardware stack levels required when called: 3
 11945 ;; This function calls:
 11946 ;;		_delay_1ms
 11947 ;; This function is called by:
 11948 ;;		_main
 11949 ;;		_Homing_Again_Manual
 11950 ;;		_Homing_Again_Auto
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           	psect	text64
 11955   0045CA                     __ptext64:
 11956                           	callstack 0
 11957   0045CA                     _AD_capture_BattVoltage:
 11958                           	callstack 27
 11959   0045CA                     
 11960                           ;main.c: 1048:     ADCON0bits.CHS0 = 0;
 11961   0045CA  94C2               	bcf	194,2,c	;volatile
 11962                           
 11963                           ;main.c: 1049:     ADCON0bits.CHS1 = 0;
 11964   0045CC  96C2               	bcf	194,3,c	;volatile
 11965                           
 11966                           ;main.c: 1050:     ADCON0bits.CHS2 = 0;
 11967   0045CE  98C2               	bcf	194,4,c	;volatile
 11968                           
 11969                           ;main.c: 1051:     ADCON0bits.CHS3 = 0;
 11970   0045D0  9AC2               	bcf	194,5,c	;volatile
 11971                           
 11972                           ;main.c: 1053:     ADCON0bits.ADON = 1;
 11973   0045D2  80C2               	bsf	194,0,c	;volatile
 11974   0045D4                     
 11975                           ;main.c: 1054:     delay_1ms(5);
 11976   0045D4  0E00               	movlw	0
 11977   0045D6  6E02               	movwf	(delay_1ms@time+1)^0,c
 11978   0045D8  0E05               	movlw	5
 11979   0045DA  6E01               	movwf	delay_1ms@time^0,c
 11980   0045DC  EC9B  F023         	call	_delay_1ms	;wreg free
 11981   0045E0                     
 11982                           ;main.c: 1055:     ADCON0bits.GO = 1;
 11983   0045E0  82C2               	bsf	194,1,c	;volatile
 11984   0045E2                     l350:
 11985                           
 11986                           ;main.c: 1057:     while (ADCON0bits.GO == 1) {
 11987   0045E2  B2C2               	btfsc	194,1,c	;volatile
 11988   0045E4  EFF6  F022         	goto	u5601
 11989   0045E8  EFF8  F022         	goto	u5600
 11990   0045EC                     u5601:
 11991   0045EC  EFF1  F022         	goto	l350
 11992   0045F0                     u5600:
 11993   0045F0                     
 11994                           ;main.c: 1061:     VOLTAGE = (ADRESH * 256) | (ADRESL);
 11995   0045F0  50C3               	movf	195,w,c	;volatile
 11996   0045F2  CFC4 F004          	movff	4036,??_AD_capture_BattVoltage	;volatile
 11997   0045F6  6A05               	clrf	(??_AD_capture_BattVoltage+1)^0,c
 11998   0045F8  C004  F005         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
 11999   0045FC  6A04               	clrf	??_AD_capture_BattVoltage^0,c
 12000   0045FE  1004               	iorwf	??_AD_capture_BattVoltage^0,w,c
 12001   004600  0100               	movlb	0	; () banked
 12002   004602  6F77               	movwf	_VOLTAGE& (0+255),b
 12003   004604  5005               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
 12004   004606  6F78               	movwf	(_VOLTAGE+1)& (0+255),b
 12005   004608                     
 12006                           ; BSR set to: 0
 12007   004608  0012               	return		;funcret
 12008   00460A                     __end_of_AD_capture_BattVoltage:
 12009                           	callstack 0
 12010                           
 12011 ;; *************** function _delay_1ms *****************
 12012 ;; Defined at:
 12013 ;;		line 681 in file "main.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  time            2    0[COMRAM] unsigned int 
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      void 
 12020 ;; Registers used:
 12021 ;;		wreg, status,2, status,0
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;Total ram usage:        3 bytes
 12032 ;; Hardware stack levels used: 1
 12033 ;; Hardware stack levels required when called: 2
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_MotorPosition_Init
 12038 ;;		_AD_capture_BattVoltage
 12039 ;;		_Homing_Again_Manual
 12040 ;;		_Homing_Again_Auto
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text65
 12045   004736                     __ptext65:
 12046                           	callstack 0
 12047   004736                     _delay_1ms:
 12048                           	callstack 27
 12049   004736                     
 12050                           ;main.c: 682:     while (time > 0) {
 12051   004736  EFA7  F023         	goto	l247
 12052   00473A                     l5780:
 12053                           
 12054                           ;main.c: 683:         _delay((unsigned long)((1)*(8000000/4000.0)));
 12055   00473A  0E03               	movlw	3
 12056   00473C  6E03               	movwf	??_delay_1ms^0,c
 12057   00473E  0E98               	movlw	152
 12058   004740                     u6717:
 12059   004740  2EE8               	decfsz	wreg,f,c
 12060   004742  D7FE               	bra	u6717
 12061   004744  2E03               	decfsz	??_delay_1ms^0,f,c
 12062   004746  D7FC               	bra	u6717
 12063   004748                     
 12064                           ;main.c: 684:         time--;
 12065   004748  0601               	decf	delay_1ms@time^0,f,c
 12066   00474A  A0D8               	btfss	status,0,c
 12067   00474C  0602               	decf	(delay_1ms@time+1)^0,f,c
 12068   00474E                     l247:
 12069                           
 12070                           ;main.c: 682:     while (time > 0) {
 12071   00474E  5001               	movf	delay_1ms@time^0,w,c
 12072   004750  1002               	iorwf	(delay_1ms@time+1)^0,w,c
 12073   004752  A4D8               	btfss	status,2,c
 12074   004754  EFAE  F023         	goto	u5181
 12075   004758  EFB0  F023         	goto	u5180
 12076   00475C                     u5181:
 12077   00475C  EF9D  F023         	goto	l5780
 12078   004760                     u5180:
 12079   004760  0012               	return		;funcret
 12080   004762                     __end_of_delay_1ms:
 12081                           	callstack 0
 12082                           
 12083 ;; *************** function _high_isr *****************
 12084 ;; Defined at:
 12085 ;;		line 500 in file "main.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;		None
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;  Temp            1    0        unsigned char 
 12090 ;;  i               1    0        unsigned char 
 12091 ;;  c               1    0        unsigned char 
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  1    wreg      void 
 12094 ;; Registers used:
 12095 ;;		wreg, status,2, status,0, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12105 ;;Total ram usage:        0 bytes
 12106 ;; Hardware stack levels used: 1
 12107 ;; Hardware stack levels required when called: 1
 12108 ;; This function calls:
 12109 ;;		_Low_Power_Indicator
 12110 ;; This function is called by:
 12111 ;;		Interrupt level 2
 12112 ;; This function uses a non-reentrant model
 12113 ;;
 12114                           
 12115                           	psect	intcode
 12116   000008                     __pintcode:
 12117                           	callstack 0
 12118   000008                     _high_isr:
 12119                           	callstack 17
 12120                           
 12121                           ;incstack = 0
 12122   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12123   00000A                     
 12124                           ;main.c: 501:     unsigned char c, i;;main.c: 502:     unsigned char Temp;;main.c: 636: 
      +                              if (TMR1IF_triggered == 1) {
 12125   00000A  0100               	movlb	0	; () banked
 12126   00000C  0597               	decf	_TMR1IF_triggered& (0+255),w,b	;volatile
 12127   00000E  A4D8               	btfss	status,2,c
 12128   000010  EF0C  F000         	goto	i2u595_41
 12129   000014  EF0E  F000         	goto	i2u595_40
 12130   000018                     i2u595_41:
 12131   000018  EF55  F000         	goto	i2l244
 12132   00001C                     i2u595_40:
 12133   00001C                     
 12134                           ; BSR set to: 0
 12135                           ;main.c: 637:         if (errorcounter > 0) {
 12136   00001C  BFEC               	btfsc	(_errorcounter+3)& (0+255),7,b	;volatile
 12137   00001E  EF1B  F000         	goto	i2u596_41
 12138   000022  51EC               	movf	(_errorcounter+3)& (0+255),w,b	;volatile
 12139   000024  11EB               	iorwf	(_errorcounter+2)& (0+255),w,b	;volatile
 12140   000026  11EA               	iorwf	(_errorcounter+1)& (0+255),w,b	;volatile
 12141   000028  E108               	bnz	i2u596_40
 12142   00002A  05E9               	decf	_errorcounter& (0+255),w,b	;volatile
 12143   00002C  A0D8               	btfss	status,0,c
 12144   00002E  EF1B  F000         	goto	i2u596_41
 12145   000032  EF1D  F000         	goto	i2u596_40
 12146   000036                     i2u596_41:
 12147   000036  EF27  F000         	goto	i2l6752
 12148   00003A                     i2u596_40:
 12149   00003A                     
 12150                           ; BSR set to: 0
 12151                           ;main.c: 638:             errorcounter--;
 12152   00003A  0EFF               	movlw	255
 12153   00003C  27E9               	addwf	_errorcounter& (0+255),f,b	;volatile
 12154   00003E  0EFF               	movlw	255
 12155   000040  23EA               	addwfc	(_errorcounter+1)& (0+255),f,b	;volatile
 12156   000042  0EFF               	movlw	255
 12157   000044  23EB               	addwfc	(_errorcounter+2)& (0+255),f,b	;volatile
 12158   000046  0EFF               	movlw	255
 12159   000048  23EC               	addwfc	(_errorcounter+3)& (0+255),f,b	;volatile
 12160                           
 12161                           ;main.c: 639:         } else {
 12162   00004A  EF2F  F000         	goto	i2l6754
 12163   00004E                     i2l6752:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;main.c: 640:             errorcounter = 0;
 12167   00004E  0E00               	movlw	0
 12168   000050  6FE9               	movwf	_errorcounter& (0+255),b	;volatile
 12169   000052  0E00               	movlw	0
 12170   000054  6FEA               	movwf	(_errorcounter+1)& (0+255),b	;volatile
 12171   000056  0E00               	movlw	0
 12172   000058  6FEB               	movwf	(_errorcounter+2)& (0+255),b	;volatile
 12173   00005A  0E00               	movlw	0
 12174   00005C  6FEC               	movwf	(_errorcounter+3)& (0+255),b	;volatile
 12175   00005E                     i2l6754:
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;main.c: 643:         if (LowPowerCounter > 0) {
 12179   00005E  BFE8               	btfsc	(_LowPowerCounter+3)& (0+255),7,b	;volatile
 12180   000060  EF3C  F000         	goto	i2u597_41
 12181   000064  51E8               	movf	(_LowPowerCounter+3)& (0+255),w,b	;volatile
 12182   000066  11E7               	iorwf	(_LowPowerCounter+2)& (0+255),w,b	;volatile
 12183   000068  11E6               	iorwf	(_LowPowerCounter+1)& (0+255),w,b	;volatile
 12184   00006A  E108               	bnz	i2u597_40
 12185   00006C  05E5               	decf	_LowPowerCounter& (0+255),w,b	;volatile
 12186   00006E  A0D8               	btfss	status,0,c
 12187   000070  EF3C  F000         	goto	i2u597_41
 12188   000074  EF3E  F000         	goto	i2u597_40
 12189   000078                     i2u597_41:
 12190   000078  EF48  F000         	goto	i2l6758
 12191   00007C                     i2u597_40:
 12192   00007C                     
 12193                           ; BSR set to: 0
 12194                           ;main.c: 644:             LowPowerCounter--;
 12195   00007C  0EFF               	movlw	255
 12196   00007E  27E5               	addwf	_LowPowerCounter& (0+255),f,b	;volatile
 12197   000080  0EFF               	movlw	255
 12198   000082  23E6               	addwfc	(_LowPowerCounter+1)& (0+255),f,b	;volatile
 12199   000084  0EFF               	movlw	255
 12200   000086  23E7               	addwfc	(_LowPowerCounter+2)& (0+255),f,b	;volatile
 12201   000088  0EFF               	movlw	255
 12202   00008A  23E8               	addwfc	(_LowPowerCounter+3)& (0+255),f,b	;volatile
 12203                           
 12204                           ;main.c: 645:         } else {
 12205   00008C  EF52  F000         	goto	i2l6762
 12206   000090                     i2l6758:
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;main.c: 646:             LowPowerCounter = 20;
 12210   000090  0E14               	movlw	20
 12211   000092  6FE5               	movwf	_LowPowerCounter& (0+255),b	;volatile
 12212   000094  0E00               	movlw	0
 12213   000096  6FE6               	movwf	(_LowPowerCounter+1)& (0+255),b	;volatile
 12214   000098  0E00               	movlw	0
 12215   00009A  6FE7               	movwf	(_LowPowerCounter+2)& (0+255),b	;volatile
 12216   00009C  0E00               	movlw	0
 12217   00009E  6FE8               	movwf	(_LowPowerCounter+3)& (0+255),b	;volatile
 12218   0000A0                     
 12219                           ; BSR set to: 0
 12220                           ;main.c: 647:             Low_Power_Indicator();
 12221   0000A0  EC21  F023         	call	_Low_Power_Indicator	;wreg free
 12222   0000A4                     i2l6762:
 12223                           
 12224                           ;main.c: 650:         TMR1IF_triggered = 0;
 12225   0000A4  0E00               	movlw	0
 12226   0000A6  0100               	movlb	0	; () banked
 12227   0000A8  6F97               	movwf	_TMR1IF_triggered& (0+255),b	;volatile
 12228   0000AA                     i2l244:
 12229                           
 12230                           ; BSR set to: 0
 12231   0000AA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12232   0000AC  0011               	retfie		f
 12233   0000AE                     __end_of_high_isr:
 12234                           	callstack 0
 12235                           
 12236 ;; *************** function _Low_Power_Indicator *****************
 12237 ;; Defined at:
 12238 ;;		line 1064 in file "main.c"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;		None
 12241 ;; Auto vars:     Size  Location     Type
 12242 ;;		None
 12243 ;; Return value:  Size  Location     Type
 12244 ;;                  1    wreg      void 
 12245 ;; Registers used:
 12246 ;;		wreg, status,2, status,0
 12247 ;; Tracked objects:
 12248 ;;		On entry : 0/0
 12249 ;;		On exit  : 0/0
 12250 ;;		Unchanged: 0/0
 12251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;Total ram usage:        0 bytes
 12257 ;; Hardware stack levels used: 1
 12258 ;; This function calls:
 12259 ;;		Nothing
 12260 ;; This function is called by:
 12261 ;;		_high_isr
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text67
 12266   004642                     __ptext67:
 12267                           	callstack 0
 12268   004642                     _Low_Power_Indicator:
 12269                           	callstack 17
 12270   004642                     
 12271                           ;main.c: 1066:     if (VOLTAGE <= 0x0366)
 12272   004642  0E67               	movlw	103
 12273   004644  0100               	movlb	0	; () banked
 12274   004646  5D77               	subwf	_VOLTAGE& (0+255),w,b
 12275   004648  0E03               	movlw	3
 12276   00464A  5978               	subwfb	(_VOLTAGE+1)& (0+255),w,b
 12277   00464C  B0D8               	btfsc	status,0,c
 12278   00464E  EF2B  F023         	goto	i2u565_41
 12279   004652  EF2D  F023         	goto	i2u565_40
 12280   004656                     i2u565_41:
 12281   004656  EF30  F023         	goto	i2l6400
 12282   00465A                     i2u565_40:
 12283   00465A                     
 12284                           ; BSR set to: 0
 12285                           ;main.c: 1067:     {;main.c: 1069:         LATDbits.LATD1 = 1;
 12286   00465A  828C               	bsf	140,1,c	;volatile
 12287                           
 12288                           ;main.c: 1071:     } else if (VOLTAGE >= 0x03C0)
 12289   00465C  EF3C  F023         	goto	i2l359
 12290   004660                     i2l6400:
 12291                           
 12292                           ; BSR set to: 0
 12293   004660  0EC0               	movlw	192
 12294   004662  5D77               	subwf	_VOLTAGE& (0+255),w,b
 12295   004664  0E03               	movlw	3
 12296   004666  5978               	subwfb	(_VOLTAGE+1)& (0+255),w,b
 12297   004668  A0D8               	btfss	status,0,c
 12298   00466A  EF39  F023         	goto	i2u566_41
 12299   00466E  EF3B  F023         	goto	i2u566_40
 12300   004672                     i2u566_41:
 12301   004672  EF3C  F023         	goto	i2l359
 12302   004676                     i2u566_40:
 12303   004676                     
 12304                           ; BSR set to: 0
 12305                           ;main.c: 1072:     {;main.c: 1073:         LATDbits.LATD1 = 0;
 12306   004676  928C               	bcf	140,1,c	;volatile
 12307   004678                     i2l359:
 12308                           
 12309                           ; BSR set to: 0
 12310   004678  0012               	return		;funcret
 12311   00467A                     __end_of_Low_Power_Indicator:
 12312                           	callstack 0
 12313                           
 12314                           	psect	rparam
 12315   000000                     
 12316                           	psect	temp
 12317   00005F                     btemp:
 12318                           	callstack 0
 12319   00005F                     	ds	1
 12320   000000                     int$flags	set	btemp
 12321   000000                     wtemp8	set	btemp+1
 12322   000000                     ttemp5	set	btemp+1
 12323   000000                     ttemp6	set	btemp+4
 12324   000000                     ttemp7	set	btemp+8
 12325                           
 12326                           	psect	config
 12327                           
 12328                           ;Config register CONFIG1L @ 0x7FF8
 12329                           ;	Watchdog Timer Enable bit
 12330                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
 12331                           ;	PLL Prescaler Selection bits
 12332                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12333                           ;	Stack Overflow/Underflow Reset Enable bit
 12334                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
 12335                           ;	Extended Instruction Set Enable bit
 12336                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12337                           ;	Background Debugger Enable bit
 12338                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
 12339   007FF8                     	org	32760
 12340   007FF8  AE                 	db	174
 12341                           
 12342                           ;Config register CONFIG1H @ 0x7FF9
 12343                           ;	CPU System Clock Postscaler
 12344                           ;	CPUDIV = OSC1, No CPU system clock divide
 12345                           ;	Code Protection bit
 12346                           ;	CP0 = OFF, Program memory is not code-protected
 12347   007FF9                     	org	32761
 12348   007FF9  F7                 	db	247
 12349                           
 12350                           ;Config register CONFIG2L @ 0x7FFA
 12351                           ;	Oscillator Selection bits
 12352                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
 12353                           ;	Fail-Safe Clock Monitor Enable bit
 12354                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12355                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
 12356                           ;	IESO = OFF, Two-Speed Start-up disabled
 12357   007FFA                     	org	32762
 12358   007FFA  03                 	db	3
 12359                           
 12360                           ;Config register CONFIG2H @ 0x7FFB
 12361                           ;	Watchdog Timer Postscaler Select bits
 12362                           ;	WDTPS = 2048, 1:2048
 12363   007FFB                     	org	32763
 12364   007FFB  FB                 	db	251
 12365                           
 12366                           ;Config register CONFIG3L @ 0x7FFC
 12367                           ;	unspecified, using default values
 12368   007FFC                     	org	32764
 12369   007FFC  F8                 	db	248
 12370                           
 12371                           ;Config register CONFIG3H @ 0x7FFD
 12372                           ;	ECCP2 MUX bit
 12373                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
 12374                           ;	MSSP Address Masking Mode Select bit
 12375                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
 12376   007FFD                     	org	32765
 12377   007FFD  F1                 	db	241
 12378                           tosu	equ	0xFFF
 12379                           tosh	equ	0xFFE
 12380                           tosl	equ	0xFFD
 12381                           stkptr	equ	0xFFC
 12382                           pclatu	equ	0xFFB
 12383                           pclath	equ	0xFFA
 12384                           pcl	equ	0xFF9
 12385                           tblptru	equ	0xFF8
 12386                           tblptrh	equ	0xFF7
 12387                           tblptrl	equ	0xFF6
 12388                           tablat	equ	0xFF5
 12389                           prodh	equ	0xFF4
 12390                           prodl	equ	0xFF3
 12391                           indf0	equ	0xFEF
 12392                           postinc0	equ	0xFEE
 12393                           postdec0	equ	0xFED
 12394                           preinc0	equ	0xFEC
 12395                           plusw0	equ	0xFEB
 12396                           fsr0h	equ	0xFEA
 12397                           fsr0l	equ	0xFE9
 12398                           wreg	equ	0xFE8
 12399                           indf1	equ	0xFE7
 12400                           postinc1	equ	0xFE6
 12401                           postdec1	equ	0xFE5
 12402                           preinc1	equ	0xFE4
 12403                           plusw1	equ	0xFE3
 12404                           fsr1h	equ	0xFE2
 12405                           fsr1l	equ	0xFE1
 12406                           bsr	equ	0xFE0
 12407                           indf2	equ	0xFDF
 12408                           postinc2	equ	0xFDE
 12409                           postdec2	equ	0xFDD
 12410                           preinc2	equ	0xFDC
 12411                           plusw2	equ	0xFDB
 12412                           fsr2h	equ	0xFDA
 12413                           fsr2l	equ	0xFD9
 12414                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        13
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     65     146
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_18(CODE[29]), STR_17(CODE[29]), STR_16(CODE[29]), STR_15(CODE[29]), 
		 -> STR_14(CODE[29]), STR_13(CODE[29]), STR_12(CODE[29]), STR_11(CODE[29]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_18(CODE[29]), STR_17(CODE[29]), STR_16(CODE[29]), STR_15(CODE[29]), 
		 -> STR_14(CODE[29]), STR_13(CODE[29]), STR_12(CODE[29]), STR_11(CODE[29]), 
		 -> STR_3(CODE[7]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_18(CODE[29]), STR_17(CODE[29]), STR_16(CODE[29]), STR_15(CODE[29]), 
		 -> STR_14(CODE[29]), STR_13(CODE[29]), STR_12(CODE[29]), STR_11(CODE[29]), 
		 -> STR_3(CODE[7]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_18(CODE[29]), STR_17(CODE[29]), STR_16(CODE[29]), STR_15(CODE[29]), 
		 -> STR_14(CODE[29]), STR_13(CODE[29]), STR_12(CODE[29]), STR_11(CODE[29]), 
		 -> STR_3(CODE[7]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 29
		 -> STR_18(CODE[29]), STR_17(CODE[29]), STR_16(CODE[29]), STR_15(CODE[29]), 
		 -> STR_14(CODE[29]), STR_13(CODE[29]), STR_12(CODE[29]), STR_11(CODE[29]), 
		 -> STR_3(CODE[7]), STR_1(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2876$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> uart_print_hex@buf(BANK0[5]), uart_println@buf(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    S2823$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2823$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendData@data	PTR unsigned char  size(2) Largest target is 5
		 -> sendResponse@responseData(BANK0[5]), 

    uart_print@str	PTR const unsigned char  size(3) Largest target is 32759
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[24]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[4]), ROM(CODE[32759]), STR_4(CODE[20]), 
		 -> uart_print_hex@buf(BANK0[5]), STR_2(CODE[3]), uart_println@buf(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _uart_config->_printf
    _printf->_vfprintf
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _vibrationMotorControl->_PWM1_SetDutyCycle
    _PWM_Selection->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _PWM1_SetDutyCycle->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _sendResponse->_sendData
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _WriteSTLED316SData->___awdiv
    _PWM1_Init->___aldiv
    _MotorPosition_Init->_WriteSTLED316SErr
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _InitSTLED316->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_handle_uart_communication
    _uart_config->_printf
    _handle_uart_communication->_sendResponse
    _sendResponse->_sendData
    _sendData->_uart_print_hex
    _uart_print_hex->_sprintf

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   47532
                                             63 BANK0      2     2      0
             _AD_capture_BattVoltage
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                          _PWM1_Init
                 _WriteSTLED316SData
          _handle_uart_communication
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                            _pwm_set
                           _read_i2c
                        _uart_config
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _uart_config                                          2     0      2   11424
                                              2 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   11228
                                             92 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1642
                                             14 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              1 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handle_uart_communication                           21    15      6   25941
                                             43 BANK0     20    14      6
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                         _delay2_1ms
                        _receiveData
                       _sendResponse
              _vibrationMotorControl
 ---------------------------------------------------------------------------------
 (2) _vibrationMotorControl                                5     3      2    9099
                                              0 BANK0      5     3      2
                  _PWM1_SetDutyCycle
                      _PWM_Selection
 ---------------------------------------------------------------------------------
 (3) _PWM_Selection                                        6     4      2    2481
                                             20 COMRAM     6     4      2
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2356
                                             14 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              1 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              1 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _PWM1_SetDutyCycle                                    4     2      2    6399
                                             90 COMRAM     4     2      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1744
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2388
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendResponse                                        10     6      4   16062
                                             33 BANK0     10     6      4
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                            10     5      5   13397
                                             92 COMRAM     2     2      0
                                             25 BANK0      8     3      5
                         _uart_print
                     _uart_print_hex
 ---------------------------------------------------------------------------------
 (4) _uart_print_hex                                       6     6      0   12022
                                             19 BANK0      6     6      0
                            _sprintf
                         _uart_print
 ---------------------------------------------------------------------------------
 (5) _uart_print                                           3     0      3     881
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6   11069
                                              0 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   10562
                                             84 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6    9971
                                             62 COMRAM    22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                35    25     10    2962
                                             27 COMRAM    35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4095
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2423
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _receiveData                                          2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay2_1ms                                           3     1      2      99
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    2406
                                              8 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     854
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                              9 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                              6 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                              6 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _AD_capture_BattVoltage                               2     2      0    1087
                                              3 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                            3     3      0       0
                _Low_Power_Indicator
 ---------------------------------------------------------------------------------
 (14) _Low_Power_Indicator                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
   _PWM1_Init
     ___aldiv
   _WriteSTLED316SData
     _Get7Seg
     _STLED316s_SPI_SendData
     ___awdiv
     ___awmod
   _handle_uart_communication
     _MotorBREAK
     _MotorON
     _Read_IR
     _delay2_1ms
     _receiveData
     _sendResponse
       _sendData
         _uart_print
         _uart_print_hex
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                 _fputc
                 _isdigit
                 _xtoa
                   _pad
           _uart_print
     _vibrationMotorControl
       _PWM1_SetDutyCycle
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
         ___flmul
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _PWM_Selection
         _write_i2c
           ___aldiv
           _i2c_Address
             _i2c_Wait
           _i2c_Start
             _i2c_Wait
           _i2c_Stop
             _i2c_Wait
           _i2c_Write
             _i2c_Wait
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _pwm_set
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _uart_config
     _printf
       _vfprintf
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      56        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRllllll     2B      0       0      55        0.0%
BITBIGSFRhlh        1E      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhhh       A      0       0      43        0.0%
BITBIGSFRllllh       8      0       0      50        0.0%
BITBIGSFRhlllhh      5      0       0      41        0.0%
BITBIGSFRlhhllh      3      0       0      44        0.0%
BITBIGSFRlhlh        3      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRlhhlll      3      0       0      45        0.0%
BITBIGSFRhllll       3      0       0      42        0.0%
BITBIGSFRllhh        2      0       0      47        0.0%
BITBIGSFRlllllh      2      0       0      53        0.0%
BITBIGSFRlllllh      2      0       0      51        0.0%
BITBIGSFRhllhh       2      0       0      39        0.0%
BITBIGSFRllhl        2      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      52        0.0%
BITBIGSFRlllh        1      0       0      49        0.0%
BITBIGSFRhllhll      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     140      30        0.0%
DATA                 0      0     140       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Oct 04 15:40:55 2023

                                  ___fldiv@aexp 0027                                    ___fldiv@bexp 0026  
                                             _i 007B                                    ___fldiv@sign 001F  
                                 ??_i2c_Address 0003                                    ___awdiv@sign 0006  
                           ___wmul@multiplicand 0003                  handle_uart_communication@data2 00D7  
                                 ?_InitSTLED316 0001                                     i2c_Read@ack 0004  
                                           l201 12E8                                             l211 134E  
                                           l212 1354                                             l223 14D0  
                                           l250 4760                                             l410 40DC  
                                           l234 15F2                                             l413 4106  
                                           l405 408E                                             l350 45E2  
                                           l254 47F8                                             l510 47AE  
                                           l247 474E                                             l407 40C4  
                                           l264 3734                                             l504 4828  
                                           l353 4608                                             l513 4890  
                                           l522 4864                                             l370 34FC  
                                           l530 46AE                                             l194 1176  
                                           l347 4812                                             l435 3F68  
                                           l364 34F4                                             l700 2660  
                                           l516 4880                                             l429 3BD4  
                                           l525 483C                                             l533 443C  
                                           l373 4546                                             l189 46DC  
                                           l382 3B08                                             l471 3A2E  
                                           l463 3A22                                             l519 4888  
                                           l375 4548                                             l607 43F2  
                                           l528 46A4                                             l536 4252  
                                           l705 26AE                                             l529 46A6  
                                           l378 42B6                                             l706 26DA  
                                           l635 417E                                             l707 2706  
                                           l645 4640                                             l902 4878  
                                           l734 3FFA                                             l399 4086  
                                           l639 41EA                                             l680 43A2  
                                           l681 43A8                                             l673 436C  
                                           l905 47D4                                             l665 35D6  
                                           l658 351A                                             l675 437A  
                                           l692 4734                                             l669 361A  
                                           l678 4394                                             l686 4588  
                                           l696 2606                                             l689 4722  
                                           l866 4168                                             l890 484A  
                                           l868 4176                                             l893 4898  
                                           l869 4178                                             l896 48A0  
                                           l984 3840                                             l899 486E  
                                           _GIE 007F97                                             _PR2 000FCB  
                                           _PR4 000F77                                             _NUM 0081  
                                           _abs 458A                                             _idx 00ED  
                                           _pad 3E14                                    ___awmod@sign 0006  
                                           wreg 000FE8                                      _TXSTA1bits 000FAD  
                                    _TXSTA2bits 000FA8                                    ___flmul@aexp 0039  
                                  ___flmul@bexp 003A                                   ??_i2c_Restart 0002  
                                  ___flmul@sign 0034                                    ___flmul@temp 003F  
                                  ___flmul@prod 003B                                    ___fltol@exp1 005A  
                                          l1032 327A                                            l1202 3946  
                                          l1019 3116                                            ?_abs 0013  
                                          l1136 3D62                                            l1500 2196  
                                          l1149 3E12                                            l1501 2184  
                                          l1433 17E4                                            l1610 3E5A  
                                          l1450 18FE                                            l1442 1AB4  
                                          l1434 17D2                                            l1435 1798  
                                          l1523 1EDE                                            l1460 19BC  
                                          l1613 3E9C                                            l1621 29F0  
                                          l1526 1D70                                            l1615 3EC0  
                                          l1623 29F8                                            l1519 1B7A  
                                          l1624 2A3E                                            l1536 1EA0  
                                          l1528 1DE8                                            l1560 2E32  
                                          l5000 488E                                            l1529 1DD6  
                                          l1722 33CE                                            l1642 2C44  
                                          l5010 482C                                            l5002 4882  
                                          l1459 19CE                                            l1563 2F8E  
                                          l1644 2C4C                                            l5020 418C  
                                          l5100 1642                                            l1492 209C  
                                          l5012 4830                                            l5004 4886  
                                          l1725 4708                                            l1733 4482  
                                          l1637 2C0A                                            l5030 42D2  
                                          l5022 41AE                                            l5110 1674  
                                          l5102 1644                                            l1574 2F26  
                                          l5014 4834                                            l5006 485C  
                                          l1719 33C6                                            l1583 4308  
                                          l1487 2278                                            l1567 2ECA  
                                          l5040 373A                                            l6000 3DC8  
                                          l1656 2DDA                                            l5032 42DA  
                                          l5024 41BA                                            l5200 1842  
                                          l5120 169C                                            l5112 1676  
                                          l5104 164C                                            l5016 4838  
                                          l5008 4860                                            l1489 20D8  
                                          l5050 377A                                            l5042 3748  
                                          l6010 3E02                                            l6002 3DDE  
                                          l1690 4358                                            l5034 42F6  
                                          l5026 42B8                                            l5018 417A  
                                          l5210 186C                                            l5202 184E  
                                          l5130 16D6                                            l5122 16AC  
                                          l5114 167C                                            l5106 165C  
                                          l1498 211E                                            l1763 4788  
                                          l6100 4084                                            l5060 37B8  
                                          l5052 377E                                            l5044 3758  
                                          l6012 3E0A                                            l6004 3DE6  
                                          l1748 3C9E                                            l1756 44C6  
                                          l5028 42CA                                            l5220 18DE  
                                          l5204 1852                                            l5212 1872  
                                          l5140 1702                                            l5132 16E8  
                                          l5124 16BC                                            l5116 168A  
                                          l5108 1662                                            l5300 1F1C  
                                          l6020 410C                                            l5070 3800  
                                          l5062 37C6                                            l5054 378E  
                                          l5046 375C                                            l5038 3736  
                                          l6006 3DEC                                            l1694 45C0  
                                          l1766 48A2                                            l1678 25FE  
                                          l5230 1938                                            l5214 1898  
                                          l5222 18EE                                            l5206 1860  
                                          l5150 1716                                            l5142 1706  
                                          l5134 16F6                                            l5126 16BE  
                                          l5118 168C                                            l5310 1F4C  
                                          l5302 1F2C                                            l6110 4818  
                                          l6030 412A                                            l6022 4122  
                                          l6102 483E                                            l6120 4808  
                                          l5072 380A                                            l5064 37D0  
                                          l5056 37A4                                            l5048 376A  
                                          l6008 3DF2                                            l5240 1968  
                                          l5232 1942                                            l5224 1914  
                                          l5216 18CC                                            l5208 1862  
                                          l5160 172A                                            l5152 171A  
                                          l5144 170A                                            l5136 16FA  
                                          l5128 16C6                                            l5400 21C0  
                                          l5320 1F82                                            l5312 1F52  
                                          l5304 1F2E                                            l6040 4134  
                                          l6032 412C                                            l6024 4124  
                                          l6104 4842                                            l6112 43AA  
                                          l6016 46B0                                            l6200 3FE8  
                                          l1697 45C8                                            l6122 480A  
                                          l5066 37EE                                            l5058 37AC  
                                          l5074 3810                                            l5250 1990  
                                          l5242 196C                                            l5234 1950  
                                          l5226 1924                                            l5218 18CE  
                                          l5170 1764                                            l5162 172E  
                                          l5154 171E                                            l5146 170E  
                                          l5138 16FE                                            l5090 1602  
                                          l5410 2238                                            l5402 21EA  
                                          l5330 1FC2                                            l5322 1F92  
                                          l5314 1F60                                            l5306 1F36  
                                          l5082 43F4                                            l6210 2622  
                                          l6050 413E                                            l6042 4136  
                                          l6034 412E                                            l6026 4126  
                                          l6018 4108                                            l6106 4844  
                                          l6114 43E2                                            l6202 3FEE  
                                          l6130 3F6A                                            l6116 47FA  
                                          l5076 3820                                            l5068 37FE  
                                          l6124 4254                                            l4700 315C  
                                          l4620 3BE8                                            l5084 460E  
                                          l5260 19EA                                            l5252 199E  
                                          l5244 197C                                            l5236 1952  
                                          l5180 17B6                                            l5172 1780  
                                          l5164 1732                                            l5156 1722  
                                          l5148 1712                                            l5092 1610  
                                          l5420 226E                                            l5412 2254  
                                          l5404 21EE                                            l5332 1FD2  
                                          l5340 1FF2                                            l5324 1F94  
                                          l5316 1F62                                            l5308 1F46  
                                          l5500 1CAE                                            l6220 2644  
                                          l6204 2600                                            l6108 4814  
                                          l6060 4148                                            l6052 4140  
                                          l6044 4138                                            l6036 4130  
                                          l6028 4128                                            l6140 3F8E  
                                          l6132 3F7E                                            l6118 4806  
                                          l5078 3830                                            l6126 42B0  
                                          l6310 3EC2                                            l4710 31C4  
                                          l4702 317C                                            l4622 3BFA  
                                          l5086 462A                                            l5270 1A54  
                                          l5262 19F8                                            l5254 19B4  
                                          l5238 1960                                            l5246 197E  
                                          l5190 1802                                            l5182 17C4  
                                          l5174 1790                                            l5158 1726  
                                          l5166 1736                                            l5094 1612  
                                          l5414 2258                                            l5406 2208  
                                          l5350 2030                                            l5342 2002  
                                          l5334 1FDA                                            l5318 1F72  
                                          l5326 1F9C                                            l5510 1D56  
                                          l5502 1CCA                                            l5430 1AC2  
                                          l6230 26B0                                            l6302 28F8  
                                          l6222 266C                                            l6206 2600  
                                          l6070 4162                                            l6062 415A  
                                          l6054 4142                                            l6046 413A  
                                          l6038 4132                                            l6150 3F98  
                                          l6142 3F90                                            l6134 3F86  
                                          ?_pad 0011                                            l6080 4008  
                                          l6128 42B4                                            l6320 3F38  
                                          l6312 3EFA                                            l4640 47B0  
                                          l4720 323A                                            l4712 31F2  
                                          l4704 319A                                            l4624 3C04  
                                          l4632 4484                                            l4800 2ADE  
                                          l5280 1A8E                                            l5272 1A74  
                                          l5264 1A32                                            l5248 198C  
                                          l5184 17C6                                            l5176 17A6  
                                          l5168 173A                                            l5096 1622  
                                          l5088 15F6                                            l5416 2266  
                                          l5408 221E                                            l5360 2078  
                                          l5352 2040                                            l5344 2002  
                                          l5336 1FDE                                            l5328 1FAC  
                                          l5520 1D92                                            l5512 1D60  
                                          l5504 1CF4                                            l5440 1B02  
                                          l5432 1AD0                                            l6240 270C  
                                          l6232 26BE                                            l6224 267E  
                                          l6216 262A                                            l6208 2606  
                                          l6072 4164                                            l6064 415C  
                                          l6056 4144                                            l6048 413C  
                                          l6160 3FA2                                            l6152 3F9A  
                                          l6144 3F92                                            l6136 3F8A  
                                          l6090 403E                                            l6082 400A  
                                          l6330 3F5C                                            l6322 3F48  
                                          l6314 3F02                                            l4642 47CC  
                                          l4650 2FA2                                            l4722 325A  
                                          l4714 3212                                            l4706 31A2  
                                          l4626 3C22                                            l4618 3BD6  
                                          l4634 4490                                            l4730 3E38  
                                          l4810 2B9A                                            l4802 2AE4  
                                          l5282 1A94                                            l5274 1A78  
                                          l5258 19DE                                            l5266 1A34  
                                          l5194 1816                                            l5186 17D0  
                                          l5178 17B2                                            l5098 1632  
                                          l5418 226C                                            l5370 20C6  
                                          l5362 208C                                            l5354 2050  
                                          l5290 1EE0                                            l5530 1E04  
                                          l5522 1DA0                                            l5514 1D6E  
                                          l5506 1D2A                                            l5450 1B32  
                                          l5442 1B08                                            l5434 1AD2  
                                          l5610 2E58                                            l5602 2DDE  
                                          l6250 275E                                            l6242 2724  
                                          l6234 26DC                                            l6218 263E  
                                          l6074 4166                                            l6066 415E  
                                          l6058 4146                                            l6170 3FC8  
                                          l6162 3FA4                                            l6154 3F9C  
                                          l6146 3F94                                            l6138 3F8C  
                                          l6340 45D4                                            l6092 4058  
                                          l6084 4032                                            l6076 3FFE  
                                          l6332 3F5E                                            l6324 3F4E  
                                          l6316 3F04                                            l4660 2FF8  
                                          l4652 2FC2                                            l4716 3224  
                                          l4708 31B6                                            l4628 3C58  
                                          l4636 44A2                                            l4740 3E7E  
                                          l4732 3E46                                            l4820 2BEA  
                                          l4812 2BB4                                            l4804 2B48  
                                          l5284 1AA2                                            l5276 1A86  
                                          l5268 1A44                                            l5196 1826  
                                          l5188 17F2                                            l5380 210E  
                                          l5372 20D6                                            l5364 209A  
                                          l5356 2060                                            l5348 2016  
                                          l5292 1EEC                                            l5540 1E6E  
                                          l5532 1E12                                            l5524 1DCE  
                                          l5516 1D80                                            l5508 1D38  
                                          l5460 1B6A                                            l5452 1B34  
                                          l5444 1B18                                            l5436 1AE2  
                                          l5428 1AB6                                            l5620 2EB2  
                                          l5604 2DEE                                            l5700 3A42  
                                          l6260 27B8                                            l6252 2772  
                                          l6244 2736                                            l6236 26EA  
                                          l6228 2694                                            l6068 4160  
                                          l6180 3FD4                                            l6172 3FCC  
                                          l6164 3FA6                                            l6156 3F9E  
                                          l6148 3F96                                            l6500 10E6  
                                          l6342 45E0                                            l6094 405A  
                                          l6086 4034                                            l6078 4002  
                                          l6334 3F60                                            l6326 3F50  
                                          l6318 3F28                                            l4670 304C  
                                          l4662 3004                                            l4654 2FC6  
                                          l4646 2F90                                            l4718 322A  
                                          l4638 44A6                                            l4742 3EAC  
                                          l4734 3E52                                            l4726 3E14  
                                          l4806 2B62                                            l4814 2BC4  
                                          l4830 2C38                                            l4910 22C0  
                                          l4902 227A                                            l5286 1AA4  
                                          l5278 1A8C                                            l5198 1834  
                                          l5390 214E                                            l5382 211C  
                                          l5374 20E8                                            l5366 20A6  
                                          l5358 2068                                            l5294 1EFA  
                                          l5550 1EC4                                            l5542 1E88  
                                          l5534 1E3C                                            l5518 1D8E  
                                          l5470 1BBA                                            l5462 1B8A  
                                          l5454 1B44                                            l5446 1B1E  
                                          l5438 1AF2                                            l5630 2F16  
                                          l5622 2EB4                                            l5614 2E6C  
                                          l5606 2DFC                                            l5702 3ADC  
                                          l6270 27F0                                            l6262 27BC  
                                          l6254 2782                                            l6246 2742  
                                          l6238 2708                                            l6190 3FDE  
                                          l6182 3FD6                                            l6174 3FCE  
                                          l6158 3FA0                                            l6166 3FAC  
                                          l6510 10FC                                            l6502 10E8  
                                          l6344 45F0                                            l5712 4090  
                                          l6096 4062                                            l6088 403C  
                                          l5800 394A                                            l6360 364C  
                                          l6352 361C                                            l6336 3F66  
                                          l6328 3F56                                            l4760 447C  
                                          l4752 443E                                            l4680 30C0  
                                          l4672 305E                                            l4664 3022  
                                          l4656 2FD4                                            l4648 2F94  
                                          l4744 458A                                            l4736 3E66  
                                          l4728 3E24                                            l4816 2BD4  
                                          l4808 2B80                                            l4840 2C92  
                                          l4832 2C74                                            l4824 2C0C  
                                          l4920 22EE                                            l4912 22CC  
                                          l4904 22A0                                            l5392 217C  
                                          l5376 20FE                                            l5384 212E  
                                          l5368 20C4                                            l5296 1EFC  
                                          l5544 1EA4                                            l5552 1ECA  
                                          l5528 1DF8                                            l5536 1E40  
                                          l5480 1C0A                                            l5472 1BC4  
                                          l5464 1B9A                                            l5456 1B54  
                                          l5448 1B24                                            l5560 3858  
                                          l5640 2F6E                                            l5632 2F34  
                                          l5624 2EC0                                            l5616 2E74  
                                          l5608 2E42                                            l5704 3AF0  
                                          l6280 284C                                            l6272 280C  
                                          l6264 27D0                                            l6256 2794  
                                          l6248 275A                                            l6192 3FE0  
                                          l6184 3FD8                                            l6176 3FD0  
                                          l6168 3FC0                                            l6600 1286  
                                          l6520 1118                                            l6512 1100  
                                          l6504 10EC                                            l6338 45CA  
                                          l5714 40AE                                            l5706 408A  
                                          l6098 4064                                            l5810 3970  
                                          l5802 394C                                            l6370 368E  
                                          l6362 3658                                            l6354 361E  
                                          l4754 4442                                            l4674 308C  
                                          l4666 302A                                            l4682 30C6  
                                          l4658 2FF4                                            l4690 3118  
                                          l4746 45A4                                            l4738 3E7A  
                                          l4818 2BDA                                            l4770 2998  
                                          l4850 2CD2                                            l4842 2CA2  
                                          l4834 2C7C                                            l4826 2C1C  
                                          l4930 23A2                                            l4914 22D0  
                                          l4922 2324                                            l4906 22AE  
                                          l5386 213C                                            l5378 2104  
                                          l5298 1F0C                                            l5554 1ECE  
                                          l5546 1EB4                                            l5538 1E5A  
                                          l5490 1C4C                                            l5482 1C16  
                                          l5474 1BDA                                            l5458 1B64  
                                          l5570 38A8                                            l5642 2F7C  
                                          l5634 2F36                                            l5626 2EFC  
                                          l5618 2E80                                            l5650 33D4  
                                          l6290 28A2                                            l6282 2858  
                                          l6274 2810                                            l6266 27E0  
                                          l6258 27A0                                            l6346 41EC  
                                          l6194 3FE2                                            l6186 3FDA  
                                          l6178 3FD2                                            l6610 1306  
                                          l6602 1292                                            l6530 1122  
                                          l6522 111A                                            l6514 1102  
                                          l6506 10F0                                            l5740 40F6  
                                          l5724 40CA                                            l5716 40BE  
                                          l5820 39C0                                            l5812 3980  
                                          l5804 3952                                            l6380 36DA  
                                          l6372 369E                                            l6364 3670  
                                          l6356 3622                                            l4748 46DE  
                                          l4756 4456                                            l7500 3318  
                                          l4684 30D6                                            l4676 30AC  
                                          l4668 303E                                            l4692 311C  
                                          l4780 2A00                                            l4772 29B8  
                                          l4764 2954                                            l4860 2D76  
                                          l4852 2CD8                                            l4844 2CB2  
                                          l4836 2C86                                            l4828 2C1E  
                                          l4940 2418                                            l4932 23B0  
                                          l4924 2336                                            l4916 22E2  
                                          l4908 22BC                                            l5396 21A6  
                                          l5388 2140                                            l5548 1EC2  
                                          l5492 1C5C                                            l5484 1C24  
                                          l5476 1BE6                                            l5468 1BAE  
                                          l5580 38D2                                            l5572 38AC  
                                          l5564 386C                                            l5644 2F7E  
                                          l5636 2F3A                                            l5628 2F08  
                                          l5660 3408                                            l5652 33DC  
                                          l6292 28AE                                            l6284 2870  
                                          l6276 282C                                            l6268 27EC  
                                          l6348 424A                                            l6196 3FE4  
                                          l6188 3FDC                                            l6700 1546  
                                          l6620 1324                                            l6612 1308  
                                          l6540 1154                                            l6532 1124  
                                          l6524 111C                                            l6516 1104  
                                          l6508 10F4                                            l6460 106C  
                                          l6452 105C                                            l5734 40E2  
                                          l5726 40CC                                            l5718 40C6  
                                          l5814 3990                                            l5806 3954  
                                          l6390 3712                                            l6382 36DE  
                                          l6374 36B0                                            l6366 3676  
                                          l6358 363A                                            l7502 3B7C  
                                          l5902 4382                                            l4758 4478  
                                          l4870 327C                                            l4686 30F6  
                                          l4678 30AE                                            l4694 312A  
                                          l4790 2A3A                                            l4782 2A10  
                                          l4774 29C8                                            l4766 2974  
                                          l4862 2D90                                            l4854 2CDE  
                                          l4846 2CBE                                            l4838 2C8C  
                                          l4942 2428                                            l4934 23D0  
                                          l4926 235C                                            l5750 353A  
                                          l5742 34FE                                            l5910 454E  
                                          l5398 21B2                                            l5494 1C76  
                                          l5486 1C30                                            l5478 1BFE  
                                          l5590 38FA                                            l5582 38DC  
                                          l5574 38BA                                            l5566 3896  
                                          l5558 3842                                            l5638 2F5E  
                                          l5670 3436                                            l5662 340A  
                                          l5654 33DE                                            l6294 28C6  
                                          l6286 2886                                            l6278 2830  
                                          l6198 3FE6                                            l6710 1594  
                                          l6702 155A                                            l6630 1374  
                                          l6622 133E                                            l6614 130C  
                                          l6606 129E                                            l6550 1172  
                                          l6542 1156                                            l6534 1126  
                                          l6526 111E                                            l6518 1106  
                                          l6470 1098                                            l6462 1070  
                                          l6454 105E                                            l5736 40E4  
                                          l5728 40DE                                            l7504 39E4  
                                          l5816 39A0                                            l5808 3960  
                                          l5824 39D0                                            l6392 3728  
                                          l6384 36F2                                            l6376 36BC  
                                          l6368 367A                                            l4880 32E8  
                                          l4872 3290                                            l4696 314A  
                                          l4792 2A46                                            l4784 2A16  
                                          l4776 29CA                                            l4768 2988  
                                          l4864 2DAA                                            l4848 2CC2  
                                          l4856 2D3C                                            l4952 24EA  
                                          l4944 2446                                            l4928 2392  
                                          l5752 3550                                            l5760 35C4  
                                          l5744 350A                                            l5920 456A  
                                          l5912 455A                                            l5496 1C86  
                                          l5488 1C40                                            l5592 3906  
                                          l5584 38E6                                            l5568 3898  
                                          l5680 347E                                            l5672 3452  
                                          l5664 3426                                            l5656 33FA  
                                          l5648 33D0                                            l5840 450E  
                                          l6296 28DC                                            l6288 288A  
                                          l6720 15AA                                            l6712 159A  
                                          l6704 156E                                            l6640 13C2  
                                          l6632 1378                                            l6624 1340  
                                          l6616 131E                                            l6608 12EA  
                                          l6560 11B6                                            l6552 1174  
                                          l6544 1158                                            l6536 1136  
                                          l6528 1120                                            l6480 10D2  
                                          l6472 10A6                                            l6464 1074  
                                          l6456 1062                                            l5738 40F4  
                                          l5834 4870                                            l5770 4892  
                                          l5826 3A26                                            l5818 39B0  
                                          l6394 3732                                            l6386 3702  
                                          l6378 36D4                                            l5850 3B0E  
                                          l5906 43A6                                            l4882 32F0  
                                          l4698 314E                                            l4794 2A50  
                                          l4786 2A26                                            l4778 29E4  
                                          l4858 2D58                                            l4866 2DBA  
                                          l4962 2594                                            l4954 2508  
                                          l4946 2464                                            l4938 23DE  
                                          l5754 3564                                            l5922 456E  
                                          l5914 455E                                            l5498 1CA2  
                                          l5594 3916                                            l5682 3484  
                                          l5674 3458                                            l5666 342C  
                                          l5658 3400                                            l5842 4520  
                                          l6298 28E0                                            l5930 4762  
                                          l6714 159E                                            l6706 1576  
                                          l6650 13F4                                            l6642 13D4  
                                          l6634 138C                                            l6626 1356  
                                          l6618 1322                                            l6570 11F4  
                                          l6562 11B8                                            l6554 117E  
                                          l6546 115C                                            l6538 1150  
                                          l6490 10DC                                            l6482 10D4  
                                          l6474 10B4                                            l6466 1078  
                                          l6458 1068                                            l5780 473A  
                                          l5836 4874                                            l5772 4896  
                                          l5828 3A2C                                            l6388 370E  
                                          l5860 3B36                                            l5852 3B16  
                                          l5940 3CB2                                            l5924 470A  
                                          l4892 3366                                            l4884 32F8  
                                          l4876 3294                                            l4796 2A56  
                                          l4788 2A32                                            l4956 2564  
                                          l4964 25C2                                            l4948 24BA  
                                          l5764 35E4                                            l5756 3590  
                                          l5748 3528                                            l5916 4562  
                                          l5596 3926                                            l5684 348C  
                                          l5676 3460                                            l5668 3434  
                                          l5692 34B0                                            l5844 4522  
                                          l5932 476C                                            l6716 15A2  
                                          l6708 1578                                            l6652 1404  
                                          l6644 13E0                                            l6636 139E  
                                          l6660 1428                                            l6628 1372  
                                          l6580 1218                                            l6572 11F6  
                                          l6564 11C0                                            l6556 118E  
                                          l6548 116E                                            l6492 10DE  
                                          l6484 10D6                                            l6476 10B6  
                                          l6468 108C                                            l5782 4748  
                                          l5774 489A                                            l5838 4876  
                                          l5870 3B5E                                            l5862 3B3E  
                                          l5854 3B1E                                            l5950 3CD8  
                                          l5942 3CBA                                            l5926 470E  
                                          l4894 3398                                            l4886 332E  
                                          l4878 32B2                                            l4798 2AD8  
                                          l4990 4316                                            l5766 35F6  
                                          l5758 35AA                                            l5918 4566  
                                          l5598 3936                                            l4982 478A  
                                          l5686 348E                                            l5678 3462  
                                          l5846 4536                                            l6718 15A6  
                                          l6726 15AE                                            l6670 148E  
                                          l6654 1410                                            l6662 146A  
                                          l6646 13E2                                            l6638 13B0  
                                          l6590 124C                                            l6582 121C  
                                          l6574 11F8                                            l6566 11D6  
                                          l6558 1198                                            l6494 10E0  
                                          l6486 10D8                                            l6478 10D2  
                                          l5776 489E                                            l5792 47F0  
                                          l5784 47D6                                            l5864 3B46  
                                          l5856 3B26                                            l5848 3B0A  
                                          l5960 3D10                                            l5952 3CE0  
                                          l5944 3CBE                                            l5936 3CA0  
                                          l5928 471C                                            l4896 33AA  
                                          l4968 25D4                                            l4992 4332  
                                          l5768 35FA                                            l4984 478A  
                                          l5688 34AA                                            l6680 14CC  
                                          l6672 1492                                            l6664 146E  
                                          l6656 141C                                            l6648 13E8  
                                          l6592 1252                                            l6584 122E  
                                          l6576 11FA                                            l6568 11EC  
                                          l6496 10E2                                            l6488 10DA  
                                          l5778 4736                                            l5786 47E4  
                                          l5866 3B4E                                            l5858 3B2E  
                                          l5874 3B66                                            l5970 3D3C  
                                          l5962 3D16                                            l5954 3CF2  
                                          l5946 3CCC                                            l5938 3CA4  
                                          l4994 4350                                            l5698 3A30  
                                          l4986 47A0                                            l5890 4680  
                                          l7490 15C4                                            l6690 14E8  
                                          l6682 14CE                                            l6674 14A4  
                                          l6666 1470                                            l6594 1262  
                                          l6586 123E                                            l6578 1216  
                                          l6498 10E4                                            l5796 4866  
                                          l5868 3B56                                            l5876 3BD2  
                                          l5964 3D2C                                            l5956 3CFA  
                                          l5972 3D42                                            l5948 3CD4  
                                          l5980 3D64                                            l4988 430A  
                                          l7492 290C                                            l5892 4686  
                                          l5884 487A                                            l6692 1504  
                                          l6684 14E0                                            l6676 14B6  
                                          l6668 148C                                            l6596 126E  
                                          l6588 124A                                            l5798 486A  
                                          l5974 3D52                                            l5966 3D34  
                                          l5958 3D02                                            l5990 3D90  
                                          l5982 3D68                                            l4998 488A  
                                          l7494 34C6                                            l5894 468E  
                                          l5886 487E                                            l6694 150E  
                                          l6686 14E4                                            l6678 14C8  
                                          l7486 12B2                                            l6598 127A  
                                          l5976 3D5A                                            l5968 3D36  
                                          l5992 3D98                                            l5984 3D76  
                                          l7496 2316                                            l5896 469E  
                                          l5888 467C                                            l6696 1520  
                                          l6688 14E6                                            l7488 143C  
                                          l5994 3DAA                                            l5986 3D7E  
                                          l5898 435C                                            l7498 25B4  
                                          l6698 1532                                            l5996 3DB2  
                                          l5988 3D82                                            l5998 3DBA  
                                          STR_1 1057                                            STR_2 1051  
                                          STR_3 104A                                            STR_4 1036  
                                          STR_6 1054                                            STR_8 101E  
                                          STR_9 1054                                            u4000 41DA  
                                          u4010 41EA                                            u4011 41E6  
                                          u4020 3748                                            u4100 1632  
                                          u4021 3744                                            u4101 162E  
                                          u4030 376A                                            u4110 1674  
                                          u4031 3766                                            u4007 41D0  
                                          u4111 1670                                            u4040 37A4  
                                          u3400 2FD4                                            u4200 17A6  
                                          u4120 168A                                            u5000 2EF8  
                                          u4041 37A0                                            u3401 2FD0  
                                          u4201 17A2                                            u4121 1686  
                                          u5001 2EF4                                            u4050 37C6  
                                          u4210 17C4                                            u4130 169C  
                                          u5010 2F16                                            u4051 37C2  
                                          u3411 2FFE                                            u4211 17C0  
                                          u4131 1698                                            u5011 2F12  
                                          u5100 40F4                                            u4060 37EE  
                                          u3420 3022                                            u3500 31F2  
                                          u3340 3BE8                                            u4300 1914  
                                          u4220 17E4                                            u4140 16AC  
                                          u5020 2F26                                            u5101 40F0  
                                          u4061 37EA                                            u3421 301E  
                                          u3501 31EE                                            u3341 3BE4  
                                          u4301 1910                                            u4221 17E0  
                                          u4141 16A8                                            u5021 2F22  
                                          u5110 4106                                            u4070 3820  
                                          u3430 304C                                            u3510 323A  
                                          u3350 3BFA                                            u4310 1924  
                                          u4230 17F2                                            u4150 16E8  
                                          u5030 2F34                                            u5111 4102  
                                          u4071 381C                                            u3431 3048  
                                          u3511 3236                                            u3351 3BF6  
                                          u4311 1920                                            u4231 17EE  
                                          u4151 16E4                                            u5031 2F30  
                                          u3600 4478                                            u3440 308C  
                                          u3360 3C22                                            u3520 3E24  
                                          u5120 351A                                            u4400 19F8  
                                          u4320 1950                                            u4240 1802  
                                          u4160 16F6                                            u4080 1610  
                                          u5040 2F6E                                            u5200 4520  
                                          u3601 4474                                            u3441 3088  
                                          u3361 3C1E                                            u3521 3E20  
                                          u5121 3516                                            u4401 19F4  
                                          u4321 194C                                            u4241 17FE  
                                          u4161 16F2                                            u4081 160C  
                                          u5041 2F6A                                            u5201 451C  
                                          u3450 30D6                                            u3370 3C58  
                                          u3530 3E46                                            u3610 2984  
                                          u5130 3528                                            u4410 1A32  
                                          u4330 1960                                            u4250 1834  
                                          u4170 1764                                            u4090 1622  
                                          u5050 2F7C                                            u5210 469E  
                                          _PEN2 007B5A                                            u3451 30D2  
                                          u3371 3C54                                            u3531 3E42  
                                          u3611 297E                                            u5131 3524  
                                          u4411 1A2E                                            u4331 195C  
                                          u4251 1830                                            u4171 1760  
                                          u4091 161E                                            u5051 2F78  
                                          u5211 469A                                            u5300 3CF2  
                                          u5220 436C                                            u3460 312A  
                                          u3380 44C6                                            u3540 3E9C  
                                          u3700 2B9A                                            u3620 2986  
                                          u5140 3590                                            u4420 1A44  
                                          u4340 197C                                            u4260 1842  
                                          u4180 177C                                            u4500 1F60  
                                          u5060 3A42                                            u5301 3CEE  
                                          u5221 4368                                            u3461 3126  
                                          u3381 44C2                                            u3541 3E98  
                                          u3701 2B96                                            u5141 358C  
                                          u4421 1A40                                            u4341 1978  
                                          u4261 183E                                            u4181 1776  
                                          u4501 1F5C                                            u5061 3A3E  
                                          u5310 3D10                                            u5230 437A  
                                          u3390 2FA2                                            u3470 315C  
                                          u3550 3EAC                                            u3710 2BB4  
                                          u3630 2998                                            u5150 35D6  
                                          u4430 1A54                                            u4350 198C  
                                          u4270 1860                                            u4190 177E  
                                          u4510 1F72                                            u5311 3D0C  
                                          u5231 4376                                            u3391 2F9E  
                                          u3471 3158                                            u3551 3EA8  
                                          u3711 2BB0                                            u3631 2994  
                                          u5151 35D2                                            u4431 1A50  
                                          u4351 1988                                            u4271 185C  
                                          u4511 1F6E                                            u5080 40BE  
                                          u5320 3D2C                                            u5240 4394  
                                          u3480 319A                                            u3560 45A4  
                                          u3720 2BC4                                            u3640 29C8  
                                          u3800 2D90                                            u5160 35E4  
                                          u4440 1A74                                            u4360 199E  
                                          u4280 1898                                            u4600 211C  
                                          u4520 1F82                                            u5400 4176  
                                          u5081 40BA                                            u5321 3D28  
                                          u5241 4390                                            u3481 3196  
                                          u3561 45A0                                            u3721 2BC0  
                                          u3641 29C4                                            u3801 2D8C  
                                          u5161 35E0                                            u4441 1A70  
                                          u4361 199A                                            u4281 1894  
                                          u4601 2118                                            u4521 1F7E  
                                          u5401 4172                                            u5090 40DC  
                                          u5074 40A2                                            u5330 3D52  
                                          u5250 43A2                                            u3570 4702  
                                          u3490 31C4                                            u3730 2BD4  
                                          u3650 29E4                                            u3810 2DAA  
                                          u5170 361A                                            u4450 1A86  
                                          u4370 19B4                                            u4290 18DE  
                                          u4610 213C                                            u4530 1FC2  
                                          u5091 40D8                                            u5075 409E  
                                          u5331 3D4E                                            u5251 439E  
                                          u3571 46FC                                            u3491 31C0  
                                          u3731 2BD0                                            u3651 29E0  
                                          u3811 2DA6                                            u5171 3616  
                                          u4451 1A82                                            u4371 19B0  
                                          u4291 18DA                                            u4611 2138  
                                          u4531 1FBE                                            u5180 4760  
                                          u5340 3D76                                            u3580 4704  
                                          u3660 2A10                                            u3820 2DBA  
                                          u3740 2C1C                                            u3900 23A2  
                                          u4460 1AA2                                            u4380 19CA  
                                          u4620 214E                                            u4540 2002  
                                          u4700 1AD0                                            u5500 275A  
                                          u5181 475C                                            u5341 3D72  
                                          u3661 2A0C                                            u3821 2DB6  
                                          u3741 2C18                                            u3901 239E  
                                          u5261 4554                                            u4461 1A9E  
                                          u4381 19C6                                            u4621 214A  
                                          u4541 1FFE                                            u4701 1ACC  
                                          u5501 2756                                            u5190 47E4  
                                          u5350 3D90                                            u5270 4734  
                                          u3590 4456                                            u3830 32B2  
                                          u3670 2A26                                            u3750 2C38  
                                          u3910 2418                                            u4390 19DE  
                                          u4630 217C                                            u4550 2078  
                                          u4470 1EFA                                            u4710 1AE2  
                                          u5510 2772                                            u5415 4020  
                                          u5191 47E0                                            u5351 3D8C  
                                          u5271 4730                                            u3591 4452  
                                          u3831 32AE                                            u3671 2A22  
                                          u3751 2C34                                            u3911 2414  
                                          u4391 19DA                                            u4631 2178  
                                          u4551 2074                                            u4471 1EF6  
                                          u4711 1ADE                                            u5511 276E  
                                          u5600 45F0                                            u5280 3CB2  
                                          u5360 3DAA                                            u3840 32E4  
                                          u3680 2B62                                            u3760 2CA2  
                                          u3920 2446                                            u4640 2192  
                                          u4560 209A                                            u4480 1F0C  
                                          u4800 1D8E                                            u4720 1AF2  
                                          u5520 27B8                                            u5440 3F7E  
                                          u5601 45EC                                            u5425 4276  
                                          u5281 3CAE                                            u5361 3DA6  
                                          u3841 32E0                                            u3681 2B5E  
                                          u3761 2C9E                                            u3921 2442  
                                          u4641 218E                                            u4561 2096  
                                          u4481 1F08                                            u4801 1D8A  
                                          u4721 1AEE                                            u5521 27B4  
                                          u5441 3F7A                                            u5610 3670  
                                          u5290 3CCC                                            u5370 3DC8  
                                          u3850 3398                                            u3690 2B80  
                                          u3770 2D16                                            u3930 2464  
                                          u4650 21A6                                            u4570 20C4  
                                          u4490 1F1C                                            u4810 1DA0  
                                          u4730 1B32                                            u5530 27D0  
                                          u5450 3FC0                                            u5611 366C  
                                          u5435 4288                                            u5291 3CC8  
                                          u5371 3DC4                                            u3851 3394  
                                          u3691 2B7C                                            u3931 2460  
                                          u4651 21A2                                            u4571 20C0  
                                          u4491 1F18                                            u4811 1D9C  
                                          u4731 1B2E                                            u5531 27CC  
                                          u5451 3FBC                                            u5620 368E  
                                          u5380 3DDE                                            u3860 33AA  
                                          u3780 2D58                                            u3940 2508  
                                          u4660 21C0                                            u4580 20E8  
                                          u4820 1DCE                                            u4740 1B44  
                                          u4900 388C                                            u5540 2870  
                                          u5460 2622                                            u5621 368A  
                                          u5381 3DDA                                            u3861 33A6  
                                          u3781 2D54                                            u3941 2504  
                                          u4661 21BC                                            u4581 20E4  
                                          u4821 1DCA                                            u4741 1B40  
                                          u5541 286C                                            u5461 261E  
                                          u5630 36D4                                            u5390 3E02  
                                          u3790 2D76                                            u3870 22A0  
                                          u4670 2208                                            u4590 20FE  
                                          u4830 1DE4                                            u4750 1B54  
                                          u4910 38BA                                            u3950 47A0  
                                          u5550 289E                                            u5470 2660  
                                          u5631 36D0                                            u5391 3DFE  
                                          u3791 2D72                                            u3775 2D04  
                                          u3871 229C                                            u4671 2204  
                                          u4591 20FA                                            u4831 1DE0  
                                          u4751 1B50                                            u4911 38B6  
                                          u3951 479C                                            u5551 289A  
                                          u5471 265C                                            u5640 36F2  
                                          u3880 2336                                            u4680 2238  
                                          u4840 1DF8                                            u4760 1B8A  
                                          u4920 38CE                                            u3960 47AE  
                                          u5560 28C6                                            u5480 267E  
                                          u5800 123E                                            u5641 36EE  
                                          u3881 2332                                            u4681 2234  
                                          u4841 1DF4                                            u4761 1B86  
                                          u4921 38CA                                            u4905 3882  
                                          u3961 47AA                                            u5561 28C2  
                                          u5481 267A                                            u5801 123A  
                                          u3890 235C                                            u3970 4350  
                                          u4690 2266                                            u4850 1E12  
                                          u4770 1B9A                                            u4930 38F6  
                                          u5570 28F4                                            u5490 2690  
                                          u5810 131E                                            _SEN2 007B58  
                                          u3891 2358                                            u3971 434C  
                                          u4691 2262                                            u4851 1E0E  
                                          u4771 1B96                                            u4931 38F2  
                                          u5571 28F0                                            u5491 268C  
                                          u5811 131A                                            u5580 3F38  
                                          u3980 418C                                            u4860 1E5A  
                                          u4780 1D14                                            u4940 3916  
                                          u5900 1520                                            u5820 138C  
                                          u5581 3F34                                            u3981 4188  
                                          u4861 1E56                                            u4941 3912  
                                          u5901 151C                                            u5821 1388  
                                          u5590 3F48                                            u3990 41AC  
                                          u4870 1E88                                            u4790 1D6E  
                                          u4950 3926                                            u5910 1532  
                                          u5830 139E                                            u5591 3F44  
                                          u4871 1E84                                            u4791 1D6A  
                                          u4951 3922                                            u5911 152E  
                                          u5831 139A                                            u4880 1EC2  
                                          u4960 2DEE                                            u5920 1546  
                                          u5840 13B0                                            u5760 116E  
                                          u4881 1EBE                                            u4785 1D0A  
                                          u4961 2DEA                                            u5921 1542  
                                          u5841 13AC                                            u5761 116A  
                                          u4890 3858                                            u4970 2DFC  
                                          u5930 155A                                            u5850 13C2  
                                          u5770 11D6                                            u6707 371C  
                                          u4891 3854                                            u4971 2DF8  
                                          u5931 1556                                            u5851 13BE  
                                          u5771 11D2                                            u4980 2E58  
                                          u5940 156E                                            u5860 13D4  
                                          u5780 11EC                                            u6717 4740  
                                          u3997 41A2                                            u4981 2E54  
                                          u5941 156A                                            u5861 13D0  
                                          u5781 11E8                                            u4990 2EAE  
                                          u5870 14A4                                            u5790 122E  
                                          u4991 2EAA                                            u5871 14A0  
                                          u5791 122A                                            u6647 1142  
                                          u5880 14B6                                            u6657 2718  
                                          u5881 14B2                                            u5890 14C8  
                                          u6667 277A                                            u5891 14C4  
                                          u6677 4714                                            u6687 362C  
                                          u6697 3694                                            _TMR1 000FCE  
                                          _Busy 009E                                            _Stop 00A0  
                                          abs@a 0013                                            _data 009C  
                                          _dbuf 0130                                            _atoi 327C  
                __end_of_AD_capture_BattVoltage 460A                                            _main 105C  
                                          _dtoa 2954                                            _init 4108  
                                          _prec 0067                                            _temp 006D  
                                          pad@i 0018                                            pad@p 0015  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001A  
                                          fsr2l 000FD9                              _MotorPosition_Init 361C  
                                          btemp 005F                                            _xtoa 2C0C  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00AE                                 __end_of_Get7Seg 3BD6  
                  handle_uart_communication@eot 00DE                                 ___fldiv@new_exp 0020  
                               __end_of_Clr_RG3 48A2                                    ___param_bank 000000  
                           ?_MotorPosition_Init 0001                                 __end_of_Read_IR 47FA  
                                         ??_abs 0015                                 __end_of_Set_RG3 489A  
                                         ??_pad 0017                                  ??_InitSTLED316 0007  
                               __end_of_MotorON 4870                                    _BAUDCON1bits 000F7E  
                                  _BAUDCON2bits 000F7C                                   ___fltol@sign1 0059  
                               __end_of___aldiv 3842                                 __end_of___aodiv 3118  
                                         ?_atoi 0007                                 __end_of___fladd 1AB6  
                                         ?_main 0001                                           ?_dtoa 001C  
                               __end_of___aomod 327C                                           ?_init 0001  
                               __end_of___fldiv 227A                                 __end_of___awdiv 3D64  
                                         _ADRES 000FC3                                           STR_10 1051  
                                         STR_11 1001                                 __end_of___awmod 3E14  
                               __end_of___flmul 1EE0                                 __end_of___fltol 3948  
                              ??_uart_print_hex 005D                                 ___awdiv@divisor 0003  
                                         ?_xtoa 001C                                           _T1CON 000FCD  
                                         _T2CON 000FCA                                           _T4CON 000F76  
                                         _RCEN2 007B5B                                           i2l244 00AA  
                                         i2l359 4678                                 ___awdiv@counter 0005  
                                  vfpfcnvrt@fmt 0041                                           _RSEN2 007B59  
                                         _TX1IF 007CF4                                           _TX2IF 007D24  
                                         _ETemp 008B                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                         _TRISF 000F97                                           _TRISG 000F98  
                           __end_of_i2c_Address 483E                            ??_MotorPosition_Init 000A  
                                         _flags 0095                                           _fputc 3BD6  
                                         _fputs 4484                                 __end_of_isdigit 470A  
                                         atoi@n 000E                                           pad@fp 0011  
                                         atoi@s 0007                                           _width 0065  
                                         _putch 48A2                                           dtoa@d 001E  
                                         dtoa@i 003C                                           dtoa@n 0034  
                                         dtoa@p 0030                                           dtoa@s 003E  
                                         dtoa@w 0032                                _TMR1IF_triggered 0097  
                               __end_of_isspace 4484                                           tablat 000FF5  
                      ??_STLED316s_SPI_SendData 0001                                 __end_of_pwm_set 46DE  
                           __end_of_i2c_Restart 4882                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                         status 000FD8                                           wtemp8 0060  
                               __end_of_sprintf 430A                                           xtoa@c 003E  
                                         xtoa@d 001E                                           xtoa@i 003C  
                                         xtoa@n 0034                                           xtoa@p 0030  
                                         xtoa@w 0032                                    ?_receiveData 0001  
                                 _PWM_Selection 33D0                                PWM_Selection@msg 0015  
                       ??_vibrationMotorControl 005F                                 __initialization 44C8  
                                 _holdTimeRight 006B                                      _InitTimer1 47FA  
                                  __end_of_atoi 33D0                                    __end_of_main 15F6  
                                  __end_of_dtoa 2C0C                                    __end_of_init 417A  
                              __end_of_i2c_Init 482A                                __end_of_i2c_Read 46B0  
                              __end_of_i2c_Wait 47B0                                    __end_of_xtoa 2DDC  
                              __end_of_i2c_Stop 488A                                          ??_atoi 0009  
                                        ??_main 00E3                                          ??_dtoa 0026  
                                        ??_init 0001                                          ??_xtoa 0026  
                                 __activetblptr 000003                                          _ACKEN2 007B5C  
                                        _ACKDT2 007B5D                                          ?_fputc 0001  
                                        ?_fputs 000A                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _CCPR1L 000FBC  
                              ___awdiv@dividend 0001                                          ?_putch 0001  
                                     ??_Get7Seg 0003                                          i2l6400 4660  
                                        i2l6402 4676                                          i2l6396 4642  
                                        i2l6398 465A                                          i2l6750 003A  
                                        i2l6760 00A0                                          i2l6752 004E  
                                        i2l6762 00A4                                          i2l6754 005E  
                                        i2l6746 000A                                          i2l6756 007C  
                                        i2l6748 001C                                          i2l6758 0090  
                                        _RCREG1 000FAF                                       ??_Clr_RG3 0001  
                                        _RCREG2 000FAA                                   vfpfcnvrt@done 0049  
                                        _SPBRG1 000FB0                                          _SPBRG2 000FAB  
                                        _TMR1IE 007CE8                                          _TMR1IF 007CF0  
                                ?_PWM_Selection 0015                                          _TRISC2 007CA2  
                                        _TRISD5 007CAD                                          _TRISD6 007CAE  
                                        _TXREG1 000FAE                                          _TXREG2 000FA9  
                              __end_of___xxtofl 2F90                                      _MotorBREAK 4870  
                                     ??_Read_IR 0003             handle_uart_communication@IR_SENSORF 00E1  
                                     ??_Set_RG3 0001                                 read_i2c@address 000F  
                                        _OpMode 009B                                       ??_MotorON 0001  
                                  vfprintf@cfmt 005B                                __end_of_high_isr 00AE  
                             __end_of_PWM1_Init 42B8                                       ??___aldiv 0009  
                                     ??___aodiv 0011                                       ??___fladd 0049  
                                     ??___aomod 0011                                          ___wmul 47B0  
                                     ??___fldiv 0017                                       ??___awdiv 0005  
                                     ??___awmod 0005                                       ??___flmul 0030  
                                     ??___fltol 0055                                  _PWM_Duty_Cycle 00A3  
                              __end_of_read_i2c 4254                                     _i2c_Address 482A  
                                        clear_0 44EE                                          clear_1 44FA  
                              ___awdiv@quotient 0007                                 ___awmod@divisor 0003  
                                        isa$std 000001                                 ___awmod@counter 0005  
                                        _printf 4762                                          pad@buf 0013  
                              __end_of_sendData 361C                                          dtoa@fp 001C  
                    __end_of_WriteSTLED316SData 3F6A                                    ?_uart_config 00A6  
                    ?_handle_uart_communication 00CF                                   i2c_Write@data 0002  
                                        fputc@c 0001                                          fputs@c 000E  
                                        fputs@i 000F                                          fputs@s 000A  
                                     ??_isdigit 0003                                    __mediumconst 0000  
                                     ??_isspace 0003                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                        putch@c 0001                                     _i2c_Restart 487A  
                              __end_of_vfprintf 435A                                       ??_pwm_set 0003  
                     PWM1_Init@desiredFrequency 000F                                       ??_sprintf 005D  
                                        xtoa@fp 001C                                    ___xxtofl@arg 000B  
                                  ___xxtofl@exp 000A                 vibrationMotorControl@powerState 00A8  
                                  ___xxtofl@val 0001                            __end_of_InitSTLED316 4088  
                                    __accesstop 0060                                      _i_RUN_ZERO 007F  
                       __end_of__initialization 4500                             _Low_Power_Indicator 4642  
                             _WriteSTLED316SErr 3948                                   ___rparam_used 000001  
                                    ___fltol@f1 0051                      handle_uart_communication@i 00DF  
                            ?_WriteSTLED316SErr 0001                                  __pcstackCOMRAM 0001  
                                   ?_InitTimer1 0001                                    __pidataBANK0 484C  
                                 __end_of_fputc 3CA0                                   __end_of_fputs 44C8  
                                 __end_of_putch 48A4                               __end_of_i2c_Start 4892  
                           ??_WriteSTLED316SErr 0007                               __end_of_i2c_Write 4866  
                          ?_Low_Power_Indicator 0001                                         ??_fputc 0005  
                                       ??_fputs 000E                                         ??_putch 0001  
                                     ?_i2c_Init 0001                                       ?_i2c_Read 0002  
                               ??_PWM_Selection 0017                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                       ?_i2c_Wait 0001  
                                    _delay2_1ms 470A                                       ?_i2c_Stop 0001  
                     __end_of_WriteSTLED316SErr 3A30                                   ?_sendResponse 00C5  
                                   ?_MotorBREAK 0001                                         ?___wmul 0001  
                                 _dutyCycle_reg 0075                                         _CCP1CON 000FBB  
                                       _CCP4CON 000F73                           ??_Low_Power_Indicator 0001  
                        _STLED316s_SPI_SendData 4088                                         ?_printf 005D  
                            i2c_Address@address 0003                                       ?___xxtofl 0001  
                                       _SPBRGH1 000F7F                                         _SPBRGH2 000F7D  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                                       _NUM_REC 007D                                         _VOLTAGE 0077  
                                     ?_high_isr 0001                                      ??_i2c_Init 0001  
                                    ??_i2c_Read 0004                                         _PWM_reg 00F1  
                                    ??_i2c_Wait 0001                                         _Get7Seg 3B0A  
                                    ??_i2c_Stop 0002                                         _Clr_RG3 489A  
                             __end_of_delay_1ms 4762                                  ??_sendResponse 005F  
                                     ?_read_i2c 000F                                     _Serial_Flag 00A2  
                                       _Read_IR 47D6                                       ?_sendData 00BD  
                                       _Set_RG3 4892                                         __Hparam 0000  
                                       __Lparam 0000                                         _MotorON 4866  
                 __end_of_vibrationMotorControl 454A                      WriteSTLED316SData@NUM_DIG0 000C  
                    WriteSTLED316SData@NUM_DIG1 000E                                         ___aldiv 3736  
                                       ___aodiv 2F90                                     _Motor_Speed 0089  
                                       ___fladd 15F6                                         ___aomod 3118  
                                       ___fldiv 1EE0                                         ___awdiv 3CA0  
                                       ___awmod 3D64                                         ___flmul 1AB6  
                                       ___fltol 3842                                    Get7Seg@Digit 0001  
                                     ?_vfprintf 0055                                    __psmallconst 1000  
                                       __pcinit 44C8                                         __ramtop 1000  
                             __end_of_initUSART 43F4                                         __ptext0 105C  
                                       __ptext1 3F6A                                         __ptext2 4762  
                                       __ptext3 41EC                                         __ptext4 487A  
                                       __ptext5 467A                                         __ptext6 46B0  
                                       __ptext7 43AA                                         __ptext8 483E  
                                       __ptext9 4108                               __end_of_initMotor 484C  
                                     _T2CONbits 000FCA                                         _isdigit 46DE  
                                    ??___xxtofl 0005                                       _T3CONbits 000F79  
                              ___awmod@dividend 0001                                      _duty_cycle 0093  
                              ___aldiv@dividend 0001                                       _T4CONbits 000F76  
                                       _isspace 443E                                   delay_1ms@time 0001  
                                       atoi@neg 000C                                         _pwm_set 46B0  
                                    _pause_Time 009A                                         _sprintf 42B8  
                                     _EAdd_High 008F                                      ??_high_isr 0001  
                          end_of_initialization 4500                                     ?_delay2_1ms 0001  
                          i2c_Address@l_address 0004                                         fputc@fp 0003  
                                    ??_read_i2c 0013                                         fputs@fp 000C  
                                    ??_sendData 00C2           handle_uart_communication@errorcounter 00D1  
                       WriteSTLED316SData@data3 0010                         WriteSTLED316SData@data4 0011  
                             __end_of_vfpfcnvrt 2600                                ___aldiv@quotient 000B  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                vfpfcnvrt@convarg 004B  
                                    ??_vfprintf 005B                                    ?_i2c_Address 0002  
                                    _uart_print 417A                                       _PWM1_Init 4254  
                                  _InitSTLED316 3FFC  handle_uart_communication@Motor_Stop_Delay_Time 00CF  
                                     _PORTAbits 000F80                     ??_handle_uart_communication 00D5  
                             __end_of_write_i2c 443E                                     ___fladd@grs 0050  
                                 ___xxtofl@sign 0009                                       _TRISBbits 000F93  
                                     _TRISCbits 000F94                                       _TRISGbits 000F98  
                       vibrationMotorControl@dc 00A6                                    ?_i2c_Restart 0001  
                      ??_AD_capture_BattVoltage 0004                                     ___fldiv@grs 0022  
                                   ___fldiv@rem 001B                                  sendData@length 00BF  
                            _WriteSTLED316SData 3EC2                                     ___flmul@grs 0035  
                                   _CCP1CONbits 000FBB                             ?_WriteSTLED316SData 0009  
                                  ??_InitTimer1 0001                                       _Device_ID 0085  
                                   _Vmotor_Time 00EF                                     vfpfcnvrt@ap 0043  
                                   vfpfcnvrt@cp 0053                                     vfpfcnvrt@fp 003F  
                                __end_of___wmul 47D6                                      ?_PWM1_Init 000F  
                          __end_of_sendResponse 458A                                   _Serial_Buffer 0120  
                                delay2_1ms@time 0001                                  __end_of_printf 478A  
                                     _i2c_Start 488A                                       _i2c_Write 485A  
                          ??_WriteSTLED316SData 000C                             start_initialization 44C8  
                                  _holdTimeLeft 0069                                     __end_of_abs 45CA  
                                   __end_of_pad 3EC2                              __end_of_InitTimer1 4814  
                               _LowPowerCounter 00E5          handle_uart_communication@receivedBytes 00D8  
                                   pwm_set@duty 0001                       _handle_uart_communication 2600  
                                  ??_MotorBREAK 0001                                     vfprintf@fmt 0057  
                                      ??___wmul 0005                         ?_STLED316s_SPI_SendData 0001  
                                   __pdataBANK0 00E5                                     ?_uart_print 0001  
                                      ??_printf 005F                                       ___fladd@a 0045  
                                     ___fladd@b 0041                                    sendData@data 00BD  
                                     ___fldiv@a 0013                                       ___fldiv@b 000F  
                                    ?_i2c_Start 0001                                      ?_i2c_Write 0001  
                                     ___flmul@a 002C                                       ___flmul@b 0028  
                            __end_of_MotorBREAK 487A                                   __pcstackBANK0 00A4  
                              ___aodiv@dividend 0001                                        ?_Get7Seg 0001  
                           uart_config@uart_num 00A6                                       _charUART2 0096  
                                      ?_Clr_RG3 0001                           __end_of_PWM_Selection 34FE  
                                 ??_receiveData 0001                handle_uart_communication@command 00DD  
                                      ?_Read_IR 0001                                       _delay_1ms 4736  
                                      ?_Set_RG3 0001                                       _dtoa$2914 002E  
                                      ?_MotorON 0001                  __end_of_STLED316s_SPI_SendData 4108  
                       PWM_Selection@dcSelected 0019                     __end_of_Low_Power_Indicator 467A  
                                     __pintcode 0008                                        ?___aldiv 0001  
                                      ?___aodiv 0001                                        ?___fladd 0041  
                                      ?___aomod 0001                                        ?___fldiv 000F  
                                      ?___awdiv 0001                                ___aodiv@quotient 0013  
                                      ?___awmod 0001                                        ?___flmul 0028  
                                      ?___fltol 0051                            sendData@uart_channel 00C1  
                                  _errorcounter 00E9                                     ??_PWM1_Init 0013  
                             uart_print_hex@buf 00B7                               uart_print_hex@num 00BC  
                                   __smallconst 1000                            WriteSTLED316SErr@msg 0009  
                                      ?_isdigit 0001                                       _initUSART 43AA  
                                      ?_isspace 0001                                       _initMotor 483E  
                                   Get7Seg@Data 0005                                        ?_pwm_set 0001  
                                      ?_sprintf 00A4                                 sendResponse@eot 00C8  
                                _uart_print_hex 460A                                 sendResponse@sot 00C9  
                                  ??_delay2_1ms 0003                                 ___aldiv@divisor 0005  
                               ___aldiv@counter 0009                                  ___wmul@product 0005  
                                      _LATAbits 000F89                                        _EAdd_Low 008D  
                                      _LATCbits 000F8B                                        _LATDbits 000F8C  
                                      _LATGbits 000F8F                                        _IPR1bits 000F9F  
                                      _PIE1bits 000F9D                                        _PIE3bits 000FA3  
                                    ?_delay_1ms 0001                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                        i2u565_40 465A  
                                      i2u565_41 4656                                        i2u566_40 4676  
                                      i2u566_41 4672                                        i2u595_40 001C  
                                      i2u595_41 0018                                        i2u596_40 003A  
                                      i2u596_41 0036                                        i2u597_40 007C  
                                      i2u597_41 0078                                        _RCONbits 000FD0  
                        _AD_capture_BattVoltage 45CA                             __end_of_receiveData 43AA  
                                      _SSP2CON1 000F6C                                        _SSP2CON2 000F6B  
                         _vibrationMotorControl 450A                                        _SSP2STAT 000F6D  
                          sendResponse@response 00C5                                       _vfpfcnvrt 227A  
                       receiveData@receivedData 0001                                       _xtoa$2924 002E  
                                     _pwm_count 0073                                      _ADCON0bits 000FC2  
                                    _ADCON1bits 000FC1                                   ??_uart_config 005F  
                             ___wmul@multiplier 0001                              __end_of_delay2_1ms 4736  
                                   ??_i2c_Start 0002                                     ??_i2c_Write 0002  
                    __end_of_MotorPosition_Init 3736                                      ?_initUSART 0001  
                  vibrationMotorControl@pwm_msg 00A4                           _delay_motor_stop_time 0098  
                                  _isspace$2973 0005                          __end_of_uart_print_hex 4642  
                                    ?_initMotor 0001                                    _Serial_GData 00A1  
                                     _write_i2c 43F4                                       copy_data0 44DC  
                        InitSTLED316@Brightness 0009                                    _Serial_Count 0091  
                                      _i2c_Init 4814                                        _i2c_Read 467A  
                                      _i2c_Wait 478A                                        _i2c_Stop 4882  
                                  _sendResponse 454A                                      _ANCON0bits 000FC1  
                                      __Hrparam 0000                                      vfprintf@ap 0059  
                                      __Lrparam 0000                                      vfprintf@fp 0055  
                    PWM1_SetDutyCycle@dutyCycle 005B                                      ?_vfpfcnvrt 003F  
                             sendResponse@F6047 0060                                 ___aodiv@divisor 0009  
                               ___aodiv@counter 0011                                      sprintf@fmt 00A6  
                                     sendData@i 005D                                        ___xxtofl 2DDC  
                             _PWM1_SetDutyCycle 3A30                                  _vibration_mode 009D  
                            ?_PWM1_SetDutyCycle 005B                                 ?_uart_print_hex 0001  
                             sendResponse@data1 00C6                               sendResponse@data2 00C7  
                                      __ptext10 4814                                        __ptext11 2600  
                                      __ptext20 3A30                                        __ptext12 450A  
                                      __ptext21 2DDC                                        __ptext13 33D0  
                                      __ptext30 42B8                                        __ptext22 3842  
                                      __ptext14 43F4                                        __ptext31 430A  
                                      __ptext23 1AB6                                        __ptext15 485A  
                                      __ptext40 3118                                        __ptext32 227A  
                                      __ptext24 1EE0                                        __ptext16 4882  
                                      __ptext41 2F90                                        __ptext33 2C0C  
                                      __ptext25 15F6                                        __ptext17 488A  
                                      __ptext50 3CA0                                        __ptext42 327C  
                                      __ptext34 2954                                        __ptext26 454A  
                                      __ptext18 482A                                        __ptext51 3B0A  
                                      __ptext43 443E                                        __ptext35 3E14  
                                      __ptext27 34FE                                        __ptext19 478A  
                                      __ptext60 489A                                        __ptext52 4254  
                                      __ptext44 46DE                                        __ptext36 4484  
                                      __ptext28 460A                                        __ptext61 47FA  
                                      __ptext53 3736                                        __ptext45 47B0  
                                      __ptext37 3BD6                                        __ptext29 417A  
                                      __ptext62 3FFC                                        __ptext54 361C  
                                      __ptext46 435A                                        __ptext38 48A2  
                                      __ptext63 4088                                        __ptext55 3948  
                                      __ptext47 470A                                        __ptext39 458A  
                                      __ptext64 45CA                                        __ptext56 47D6  
                                      __ptext48 3EC2                                        __ptext65 4736  
                                      __ptext57 4866                                        __ptext49 3D64  
                                      __ptext58 4892                                        __ptext67 4642  
                                      __ptext59 4870                             __end_of_uart_config 3FFC  
                                    ?_write_i2c 000F                                write_i2c@address 000F  
                                      _high_isr 0008                                        _dispense 006F  
                             read_i2c@read_byte 0013                                        _read_i2c 41EC  
                           ??_PWM1_SetDutyCycle 005D                                     _receiveData 435A  
                                      _sendData 34FE                                     ??_delay_1ms 0003  
                                      _vib_Time 0099                           _Motor_Stop_Delay_Time 0087  
                                      isa$xinst 000000                          ?_vibrationMotorControl 00A4  
                                      int$flags 005F                                        _pwm_mode 0071  
                                      _vfprintf 430A                                       printf@fmt 005D  
                                  ??_uart_print 0004                               _Serial_Buffer_Out 0100  
             __end_of_handle_uart_communication 2954                       __end_of_PWM1_SetDutyCycle 3B0A  
                              ___aomod@dividend 0001                      STLED316s_SPI_SendData@Data 0003  
                                    _INTCONbits 000FF2                        sendResponse@responseData 00CA  
                                   ??_initUSART 0001                      STLED316s_SPI_SendData@temp 0004  
                                   ??_initMotor 0001                                        isdigit@c 0001  
                                      intlevel2 0000                                       sprintf@ap 00AA  
                                  _motor_status 009F                                        isspace@c 0001  
                               i2c_Address@mode 0002                              __end_of_uart_print 41EC  
                                    _RCSTA1bits 000FAC                                      _RCSTA2bits 000F9C  
                                    _OSCCONbits 000FD3                         receiveData@uart_channel 0002  
                      WriteSTLED316SData@v_mode 000B                                        printf@ap 00A4  
                      WriteSTLED316SData@number 0009                                      _IR_SENSORF 0079  
                               ___aomod@divisor 0009                                _Motor_Pause_Time 0083  
                                   ??_vfpfcnvrt 0045                                 ___aomod@counter 0011  
                                   _uart_config 3F6A                                        sprintf@f 00AC  
                                      sprintf@s 00A4                              _Serial_Temp_Buffer 0110  
                       STLED316s_SPI_SendData@i 0005                         STLED316s_SPI_SendData@t 0006  
                                  ___aldiv@sign 000A                                      _WDTCONbits 000FC0  
                                   ??_write_i2c 0015                             i2c_Read@i2cReadData 0005  
                                 ___fladd@signs 004D                                   uart_print@str 0001  
                                  ___aodiv@sign 0012                                   write_i2c@data 0013  
                                  ___fladd@aexp 004E                                    ___fladd@bexp 004F  
                       ?_AD_capture_BattVoltage 0001                                    ___aomod@sign 0012  
