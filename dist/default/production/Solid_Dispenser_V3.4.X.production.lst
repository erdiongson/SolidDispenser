

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Sep 13 17:32:36 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F65J50 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  001E7A                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _LowPowerCounter
   100  001E7A  0014               	dw	20
   101  001E7C  0000               	dw	0
   102                           
   103                           ;initializer for _errorcounter
   104  001E7E  001E               	dw	30
   105  001E80  0000               	dw	0
   106                           
   107                           ;initializer for _Vmotor_Time
   108  001E82  07D0               	dw	2000
   109                           
   110                           ;initializer for _PWM_reg
   111  001E84  3F                 	db	63
   112  0000                     _ADRES	set	4035
   113  0000                     _TMR1	set	4046
   114  0000                     _LATGbits	set	3983
   115  0000                     _T4CONbits	set	3958
   116  0000                     _CCP4CON	set	3955
   117  0000                     _T4CON	set	3958
   118  0000                     _T3CONbits	set	3961
   119  0000                     _PR4	set	3959
   120  0000                     _OSCCONbits	set	4051
   121  0000                     _ANCON0bits	set	4033
   122  0000                     _ADCON1bits	set	4033
   123  0000                     _TRISG	set	3992
   124  0000                     _TRISF	set	3991
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _RCREG1	set	4015
   131  0000                     _TXREG1	set	4014
   132  0000                     _SPBRGH1	set	3967
   133  0000                     _SPBRG1	set	4016
   134  0000                     _PIE1bits	set	3997
   135  0000                     _BAUDCON1bits	set	3966
   136  0000                     _TXSTA1bits	set	4013
   137  0000                     _TRISCbits	set	3988
   138  0000                     _SSP2BUF	set	3951
   139  0000                     _SSP2STAT	set	3949
   140  0000                     _SSP2ADD	set	3950
   141  0000                     _SSP2CON2	set	3947
   142  0000                     _SSP2CON1	set	3948
   143  0000                     _ADRESL	set	4035
   144  0000                     _ADRESH	set	4036
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _T1CON	set	4045
   147  0000                     _RCSTA1bits	set	4012
   148  0000                     _PIR1bits	set	3998
   149  0000                     _PORTAbits	set	3968
   150  0000                     _PORTBbits	set	3969
   151  0000                     _LATDbits	set	3980
   152  0000                     _WDTCONbits	set	4032
   153  0000                     _INTCONbits	set	4082
   154  0000                     _IPR1bits	set	3999
   155  0000                     _RCONbits	set	4048
   156  0000                     _LATAbits	set	3977
   157  0000                     _LATCbits	set	3979
   158  0000                     _ACKEN2	set	31580
   159  0000                     _ACKDT2	set	31581
   160  0000                     _RCEN2	set	31579
   161  0000                     _PEN2	set	31578
   162  0000                     _RSEN2	set	31577
   163  0000                     _SEN2	set	31576
   164  0000                     _TRISD6	set	31918
   165  0000                     _TRISD5	set	31917
   166  0000                     _TMR1IE	set	31976
   167  0000                     _TMR1IF	set	31984
   168  0000                     _GIE	set	32663
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  001B8E                     __pcinit:
   174                           	opt callstack 0
   175  001B8E                     start_initialization:
   176                           	opt callstack 0
   177  001B8E                     __initialization:
   178                           	opt callstack 0
   179                           
   180                           ; Initialize objects allocated to COMRAM (11 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  001B8E  0E7A               	movlw	low __pidataCOMRAM
   183  001B90  6EF6               	movwf	tblptrl,c
   184  001B92  0E1E               	movlw	high __pidataCOMRAM
   185  001B94  6EF7               	movwf	tblptrh,c
   186  001B96  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  001B98  6EF8               	movwf	tblptru,c
   188  001B9A  EE00  F04E         	lfsr	0,__pdataCOMRAM
   189  001B9E  EE10 F00B          	lfsr	1,11
   190  001BA2                     copy_data0:
   191  001BA2  0009               	tblrd		*+
   192  001BA4  CFF5 FFEE          	movff	tablat,postinc0
   193  001BA8  50E5               	movf	postdec1,w,c
   194  001BAA  50E1               	movf	fsr1l,w,c
   195  001BAC  E1FA               	bnz	copy_data0
   196                           
   197                           ; Clear objects allocated to BANK0 (32 bytes)
   198  001BAE  EE00  F060         	lfsr	0,__pbssBANK0
   199  001BB2  0E20               	movlw	32
   200  001BB4                     clear_0:
   201  001BB4  6AEE               	clrf	postinc0,c
   202  001BB6  06E8               	decf	wreg,f,c
   203  001BB8  E1FD               	bnz	clear_0
   204                           
   205                           ; Clear objects allocated to COMRAM (55 bytes)
   206  001BBA  EE00  F001         	lfsr	0,__pbssCOMRAM
   207  001BBE  0E37               	movlw	55
   208  001BC0                     clear_1:
   209  001BC0  6AEE               	clrf	postinc0,c
   210  001BC2  06E8               	decf	wreg,f,c
   211  001BC4  E1FD               	bnz	clear_1
   212  001BC6                     end_of_initialization:
   213                           	opt callstack 0
   214  001BC6                     __end_of__initialization:
   215                           	opt callstack 0
   216  001BC6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217  001BC8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218  001BCA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219  001BCC  6EF8               	movwf	tblptru,c
   220  001BCE  0100               	movlb	0
   221  001BD0  EF4F  F001         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000001                     __pbssCOMRAM:
   225                           	opt callstack 0
   226  000001                     _Serial_Buffer:
   227                           	opt callstack 0
   228  000001                     	ds	16
   229  000011                     _VOLTAGE:
   230                           	opt callstack 0
   231  000011                     	ds	2
   232  000013                     _IR_SENSORF:
   233                           	opt callstack 0
   234  000013                     	ds	2
   235  000015                     _i:
   236                           	opt callstack 0
   237  000015                     	ds	2
   238  000017                     _NUM_REC:
   239                           	opt callstack 0
   240  000017                     	ds	2
   241  000019                     _NUM:
   242                           	opt callstack 0
   243  000019                     	ds	2
   244  00001B                     _Motor_Pause_Time:
   245                           	opt callstack 0
   246  00001B                     	ds	2
   247  00001D                     _Device_ID:
   248                           	opt callstack 0
   249  00001D                     	ds	2
   250  00001F                     _Motor_Stop_Delay_Time:
   251                           	opt callstack 0
   252  00001F                     	ds	2
   253  000021                     _Motor_Speed:
   254                           	opt callstack 0
   255  000021                     	ds	2
   256  000023                     _ETemp:
   257                           	opt callstack 0
   258  000023                     	ds	2
   259  000025                     _EAdd_Low:
   260                           	opt callstack 0
   261  000025                     	ds	2
   262  000027                     _EAdd_High:
   263                           	opt callstack 0
   264  000027                     	ds	2
   265  000029                     _Serial_Count:
   266                           	opt callstack 0
   267  000029                     	ds	2
   268  00002B                     _TMR1IF_triggered:
   269                           	opt callstack 0
   270  00002B                     	ds	1
   271  00002C                     _PWM_Duty_Cycle:
   272                           	opt callstack 0
   273  00002C                     	ds	1
   274  00002D                     _delay_motor_stop_time:
   275                           	opt callstack 0
   276  00002D                     	ds	1
   277  00002E                     _vib_Time:
   278                           	opt callstack 0
   279  00002E                     	ds	1
   280  00002F                     _pause_Time:
   281                           	opt callstack 0
   282  00002F                     	ds	1
   283  000030                     _OpMode:
   284                           	opt callstack 0
   285  000030                     	ds	1
   286  000031                     _data:
   287                           	opt callstack 0
   288  000031                     	ds	1
   289  000032                     _vibration_mode:
   290                           	opt callstack 0
   291  000032                     	ds	1
   292  000033                     _Busy:
   293                           	opt callstack 0
   294  000033                     	ds	1
   295  000034                     _motor_status:
   296                           	opt callstack 0
   297  000034                     	ds	1
   298  000035                     _Stop:
   299                           	opt callstack 0
   300  000035                     	ds	1
   301  000036                     _Serial_GData:
   302                           	opt callstack 0
   303  000036                     	ds	1
   304  000037                     _Serial_Flag:
   305                           	opt callstack 0
   306  000037                     	ds	1
   307                           
   308                           	psect	dataCOMRAM
   309  00004E                     __pdataCOMRAM:
   310                           	opt callstack 0
   311  00004E                     _LowPowerCounter:
   312                           	opt callstack 0
   313  00004E                     	ds	4
   314  000052                     _errorcounter:
   315                           	opt callstack 0
   316  000052                     	ds	4
   317  000056                     _Vmotor_Time:
   318                           	opt callstack 0
   319  000056                     	ds	2
   320  000058                     _PWM_reg:
   321                           	opt callstack 0
   322  000058                     	ds	1
   323                           
   324                           	psect	bssBANK0
   325  000060                     __pbssBANK0:
   326                           	opt callstack 0
   327  000060                     _Serial_Buffer_Out:
   328                           	opt callstack 0
   329  000060                     	ds	16
   330  000070                     _Serial_Temp_Buffer:
   331                           	opt callstack 0
   332  000070                     	ds	16
   333                           
   334                           	psect	cstackBANK0
   335  000080                     __pcstackBANK0:
   336                           	opt callstack 0
   337  000080                     ?_read_i2c:
   338                           	opt callstack 0
   339  000080                     WriteSTLED316SData@NUM_DIG0:
   340                           	opt callstack 0
   341  000080                     write_i2c@address:
   342                           	opt callstack 0
   343  000080                     read_i2c@address:
   344                           	opt callstack 0
   345                           
   346                           ; 4 bytes @ 0x0
   347  000080                     	ds	2
   348  000082                     WriteSTLED316SData@NUM_DIG1:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000082                     	ds	2
   353  000084                     WriteSTLED316SData@data3:
   354                           	opt callstack 0
   355  000084                     write_i2c@data:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x4
   359  000084                     	ds	1
   360  000085                     WriteSTLED316SData@data4:
   361                           	opt callstack 0
   362                           
   363                           ; 1 bytes @ 0x5
   364  000085                     	ds	1
   365  000086                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x6
   368  000086                     	ds	2
   369                           
   370                           	psect	cstackCOMRAM
   371  000038                     __pcstackCOMRAM:
   372                           	opt callstack 0
   373  000038                     Read1USART@result:
   374                           	opt callstack 0
   375  000038                     i2Write1USART@data:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x0
   379  000038                     	ds	1
   380  000039                     ??_high_isr:
   381                           
   382                           ; 1 bytes @ 0x1
   383  000039                     	ds	2
   384  00003B                     high_isr@Temp:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388  00003B                     	ds	1
   389  00003C                     high_isr@c:
   390                           	opt callstack 0
   391                           
   392                           ; 1 bytes @ 0x4
   393  00003C                     	ds	1
   394  00003D                     high_isr@i:
   395                           	opt callstack 0
   396                           
   397                           ; 1 bytes @ 0x5
   398  00003D                     	ds	1
   399  00003E                     ??_STLED316s_SPI_SendData:
   400  00003E                     ??_i2c_Wait:
   401  00003E                     ?_Read_IR:
   402                           	opt callstack 0
   403  00003E                     ?___awdiv:
   404                           	opt callstack 0
   405  00003E                     ?___awmod:
   406                           	opt callstack 0
   407  00003E                     ?___aldiv:
   408                           	opt callstack 0
   409  00003E                     Write1USART@data:
   410                           	opt callstack 0
   411  00003E                     delay_1ms@time:
   412                           	opt callstack 0
   413  00003E                     flush@i:
   414                           	opt callstack 0
   415  00003E                     flushOut@i:
   416                           	opt callstack 0
   417  00003E                     Get7Seg@Digit:
   418                           	opt callstack 0
   419  00003E                     ___awdiv@dividend:
   420                           	opt callstack 0
   421  00003E                     ___awmod@dividend:
   422                           	opt callstack 0
   423  00003E                     ___aldiv@dividend:
   424                           	opt callstack 0
   425                           
   426                           ; 4 bytes @ 0x6
   427  00003E                     	ds	1
   428  00003F                     ?_i2c_Read:
   429                           	opt callstack 0
   430  00003F                     i2c_Write@data:
   431                           	opt callstack 0
   432  00003F                     i2c_Address@mode:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436  00003F                     	ds	1
   437  000040                     ??_delay_1ms:
   438  000040                     ??_Get7Seg:
   439  000040                     STLED316s_SPI_SendData@Data:
   440                           	opt callstack 0
   441  000040                     i2c_Address@address:
   442                           	opt callstack 0
   443  000040                     readWeighingData@i:
   444                           	opt callstack 0
   445  000040                     ___awdiv@divisor:
   446                           	opt callstack 0
   447  000040                     ___awmod@divisor:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x8
   451  000040                     	ds	1
   452  000041                     ??_AD_capture_BattVoltage:
   453  000041                     STLED316s_SPI_SendData@temp:
   454                           	opt callstack 0
   455  000041                     i2c_Address@l_address:
   456                           	opt callstack 0
   457  000041                     i2c_Read@ack:
   458                           	opt callstack 0
   459                           
   460                           ; 1 bytes @ 0x9
   461  000041                     	ds	1
   462  000042                     STLED316s_SPI_SendData@i:
   463                           	opt callstack 0
   464  000042                     Get7Seg@Data:
   465                           	opt callstack 0
   466  000042                     i2c_Read@i2cReadData:
   467                           	opt callstack 0
   468  000042                     ___awdiv@counter:
   469                           	opt callstack 0
   470  000042                     ___awmod@counter:
   471                           	opt callstack 0
   472  000042                     ___aldiv@divisor:
   473                           	opt callstack 0
   474                           
   475                           ; 4 bytes @ 0xA
   476  000042                     	ds	1
   477  000043                     STLED316s_SPI_SendData@t:
   478                           	opt callstack 0
   479  000043                     ___awdiv@sign:
   480                           	opt callstack 0
   481  000043                     ___awmod@sign:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0xB
   485  000043                     	ds	1
   486  000044                     ??_InitSTLED316:
   487  000044                     ??_WriteSTLED316SErr:
   488  000044                     ??_WriteSTLED316SMode:
   489  000044                     WriteSTLED316SVibMode@v_mode:
   490                           	opt callstack 0
   491  000044                     ___awdiv@quotient:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0xC
   495  000044                     	ds	2
   496  000046                     InitSTLED316@Brightness:
   497                           	opt callstack 0
   498  000046                     WriteSTLED316SMode@msg:
   499                           	opt callstack 0
   500  000046                     WriteSTLED316SErr@msg:
   501                           	opt callstack 0
   502  000046                     ___aldiv@counter:
   503                           	opt callstack 0
   504  000046                     WriteSTLED316SData@number:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508  000046                     	ds	1
   509  000047                     ??_MotorPosition_Init:
   510  000047                     ??_Homing_Again_Auto:
   511  000047                     ___aldiv@sign:
   512                           	opt callstack 0
   513                           
   514                           ; 1 bytes @ 0xF
   515  000047                     	ds	1
   516  000048                     WriteSTLED316SData@v_mode:
   517                           	opt callstack 0
   518  000048                     ___aldiv@quotient:
   519                           	opt callstack 0
   520                           
   521                           ; 4 bytes @ 0x10
   522  000048                     	ds	1
   523  000049                     ??_Homing_Again_Manual:
   524                           
   525                           ; 1 bytes @ 0x11
   526  000049                     	ds	3
   527  00004C                     read_i2c@read_byte:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x14
   531  00004C                     	ds	2
   532                           
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 124 in file "main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;Total ram usage:        2 bytes
   557 ;; Hardware stack levels required when called:    6
   558 ;; This function calls:
   559 ;;		_AD_capture_BattVoltage
   560 ;;		_Homing_Again_Auto
   561 ;;		_Homing_Again_Manual
   562 ;;		_InitSTLED316
   563 ;;		_InitTimer1
   564 ;;		_MotorPosition_Init
   565 ;;		_ToggleVIB_Mode
   566 ;;		_Write1USART
   567 ;;		_WriteSTLED316SData
   568 ;;		_WriteSTLED316SVibMode
   569 ;;		_flush
   570 ;;		_flushOut
   571 ;;		_i2c_Init
   572 ;;		_init
   573 ;;		_initMotor
   574 ;;		_initUSART
   575 ;;		_read_i2c
   576 ;;		_write_i2c
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583  00029E                     __ptext0:
   584                           	opt callstack 0
   585  00029E                     _main:
   586                           	opt callstack 25
   587  00029E                     
   588                           ;main.c: 126:     GIE = 0;
   589  00029E  9EF2               	bcf	4082,7,c	;volatile
   590  0002A0                     
   591                           ;main.c: 127:     init();
   592  0002A0  ECDE  F00C         	call	_init	;wreg free
   593  0002A4                     
   594                           ;main.c: 128:     InitSTLED316(0x77);
   595  0002A4  0E77               	movlw	119
   596  0002A6  EC58  F00C         	call	_InitSTLED316
   597  0002AA                     
   598                           ;main.c: 129:     initMotor();
   599  0002AA  EC30  F00F         	call	_initMotor	;wreg free
   600  0002AE                     
   601                           ;main.c: 130:     i2c_Init();
   602  0002AE  EC05  F00F         	call	_i2c_Init	;wreg free
   603  0002B2                     
   604                           ;main.c: 131:     initUSART();
   605  0002B2  ECAE  F00E         	call	_initUSART	;wreg free
   606  0002B6                     
   607                           ;main.c: 132:     InitTimer1();
   608  0002B6  ECF9  F00E         	call	_InitTimer1	;wreg free
   609  0002BA                     
   610                           ;main.c: 134:     LATCbits.LATC1 = 0;
   611  0002BA  928B               	bcf	139,1,c	;volatile
   612  0002BC                     
   613                           ;main.c: 135:     LATAbits.LATA2 = 0;
   614  0002BC  9489               	bcf	137,2,c	;volatile
   615  0002BE                     
   616                           ;main.c: 136:     errorcounter = 30;
   617  0002BE  0E1E               	movlw	30
   618  0002C0  6E52               	movwf	_errorcounter^0,c	;volatile
   619  0002C2  0E00               	movlw	0
   620  0002C4  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
   621  0002C6  0E00               	movlw	0
   622  0002C8  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
   623  0002CA  0E00               	movlw	0
   624  0002CC  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
   625  0002CE                     
   626                           ;main.c: 140:    RCONbits.IPEN = 1;
   627  0002CE  8ED0               	bsf	208,7,c	;volatile
   628  0002D0                     
   629                           ;main.c: 143:    IPR1bits.RCIP = 1;
   630  0002D0  8A9F               	bsf	159,5,c	;volatile
   631  0002D2                     
   632                           ;main.c: 146:    INTCONbits.GIEH = 1;
   633  0002D2  8EF2               	bsf	242,7,c	;volatile
   634  0002D4                     
   635                           ;main.c: 147:     INTCONbits.GIE=1;
   636  0002D4  8EF2               	bsf	242,7,c	;volatile
   637  0002D6                     
   638                           ;main.c: 152:     WDTCONbits.SWDTEN = 0;
   639  0002D6  90C0               	bcf	192,0,c	;volatile
   640  0002D8                     
   641                           ;main.c: 154:     LATDbits.LATD0 = 1;
   642  0002D8  808C               	bsf	140,0,c	;volatile
   643  0002DA                     
   644                           ;main.c: 155:     LATDbits.LATD1 = 1;
   645  0002DA  828C               	bsf	140,1,c	;volatile
   646  0002DC                     
   647                           ;main.c: 157:     WriteSTLED316SData(34, 0xFF);
   648  0002DC  0E00               	movlw	0
   649  0002DE  6E47               	movwf	(WriteSTLED316SData@number+1)^0,c
   650  0002E0  0E22               	movlw	34
   651  0002E2  6E46               	movwf	WriteSTLED316SData@number^0,c
   652  0002E4  0EFF               	movlw	255
   653  0002E6  6E48               	movwf	WriteSTLED316SData@v_mode^0,c
   654  0002E8  EC01  F00C         	call	_WriteSTLED316SData	;wreg free
   655  0002EC                     
   656                           ;main.c: 158:     _delay((unsigned long)((500)*(8000000/4000.0)));
   657  0002EC  0E06               	movlw	6
   658  0002EE  0100               	movlb	0	; () banked
   659  0002F0  6F87               	movwf	(??_main+1)& (0+255),b
   660  0002F2  0E13               	movlw	19
   661  0002F4  6F86               	movwf	??_main& (0+255),b
   662  0002F6  0EAD               	movlw	173
   663  0002F8                     u3567:
   664  0002F8  2EE8               	decfsz	wreg,f,c
   665  0002FA  D7FE               	bra	u3567
   666  0002FC  2F86               	decfsz	??_main& (0+255),f,b
   667  0002FE  D7FC               	bra	u3567
   668  000300  2F87               	decfsz	(??_main+1)& (0+255),f,b
   669  000302  D7FA               	bra	u3567
   670  000304  D000               	nop2	
   671  000306                     
   672                           ;main.c: 159:     AD_capture_BattVoltage();
   673  000306  EC09  F00E         	call	_AD_capture_BattVoltage	;wreg free
   674  00030A                     
   675                           ;main.c: 167:     INTCONbits.GIE=0;
   676  00030A  9EF2               	bcf	242,7,c	;volatile
   677  00030C                     
   678                           ;main.c: 168:     ETemp = read_i2c(0x0010);
   679  00030C  0E10               	movlw	16
   680  00030E  0100               	movlb	0	; () banked
   681  000310  6F80               	movwf	read_i2c@address& (0+255),b
   682  000312  0E00               	movlw	0
   683  000314  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   684  000316  0E00               	movlw	0
   685  000318  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   686  00031A  0E00               	movlw	0
   687  00031C  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   688  00031E  EC17  F00D         	call	_read_i2c	;wreg free
   689  000322  C080  F023         	movff	?_read_i2c,_ETemp
   690  000326  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   691  00032A                     
   692                           ;main.c: 169:     INTCONbits.GIE=1;
   693  00032A  8EF2               	bsf	242,7,c	;volatile
   694  00032C                     
   695                           ;main.c: 171:     vibration_mode = ETemp & 0x00FF;
   696  00032C  C023  F032         	movff	_ETemp,_vibration_mode
   697  000330                     
   698                           ;main.c: 172:     if(vibration_mode>1)
   699  000330  0E01               	movlw	1
   700  000332  6432               	cpfsgt	_vibration_mode^0,c
   701  000334  EF9E  F001         	goto	u3161
   702  000338  EFA0  F001         	goto	u3160
   703  00033C                     u3161:
   704  00033C  EFB2  F001         	goto	l4823
   705  000340                     u3160:
   706  000340                     
   707                           ;main.c: 173:     {;main.c: 174:         vibration_mode = 1;
   708  000340  0E01               	movlw	1
   709  000342  6E32               	movwf	_vibration_mode^0,c
   710  000344                     
   711                           ;main.c: 176:         INTCONbits.GIE=0;
   712  000344  9EF2               	bcf	242,7,c	;volatile
   713  000346                     
   714                           ;main.c: 177:         write_i2c(0x0010, vibration_mode);
   715  000346  0E10               	movlw	16
   716  000348  0100               	movlb	0	; () banked
   717  00034A  6F80               	movwf	write_i2c@address& (0+255),b
   718  00034C  0E00               	movlw	0
   719  00034E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   720  000350  0E00               	movlw	0
   721  000352  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   722  000354  0E00               	movlw	0
   723  000356  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   724  000358  C032  F084         	movff	_vibration_mode,write_i2c@data
   725  00035C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   726  00035E  ECA0  F00D         	call	_write_i2c	;wreg free
   727  000362                     
   728                           ;main.c: 178:         INTCONbits.GIE=1;
   729  000362  8EF2               	bsf	242,7,c	;volatile
   730  000364                     l4823:
   731                           
   732                           ;main.c: 181:     NUM = 1;
   733  000364  0E00               	movlw	0
   734  000366  6E1A               	movwf	(_NUM+1)^0,c
   735  000368  0E01               	movlw	1
   736  00036A  6E19               	movwf	_NUM^0,c
   737                           
   738                           ;main.c: 182:     WriteSTLED316SData(NUM, vibration_mode);
   739  00036C  C019  F046         	movff	_NUM,WriteSTLED316SData@number
   740  000370  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
   741  000374  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   742  000378  EC01  F00C         	call	_WriteSTLED316SData	;wreg free
   743  00037C                     
   744                           ;main.c: 183:     NUM_REC = 1;
   745  00037C  0E00               	movlw	0
   746  00037E  6E18               	movwf	(_NUM_REC+1)^0,c
   747  000380  0E01               	movlw	1
   748  000382  6E17               	movwf	_NUM_REC^0,c
   749  000384                     
   750                           ;main.c: 188:     INTCONbits.GIE=0;
   751  000384  9EF2               	bcf	242,7,c	;volatile
   752  000386                     
   753                           ;main.c: 189:     ETemp = read_i2c(0x0020);
   754  000386  0E20               	movlw	32
   755  000388  0100               	movlb	0	; () banked
   756  00038A  6F80               	movwf	read_i2c@address& (0+255),b
   757  00038C  0E00               	movlw	0
   758  00038E  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   759  000390  0E00               	movlw	0
   760  000392  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   761  000394  0E00               	movlw	0
   762  000396  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   763  000398  EC17  F00D         	call	_read_i2c	;wreg free
   764  00039C  C080  F023         	movff	?_read_i2c,_ETemp
   765  0003A0  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   766  0003A4                     
   767                           ;main.c: 190:     INTCONbits.GIE=1;
   768  0003A4  8EF2               	bsf	242,7,c	;volatile
   769                           
   770                           ;main.c: 192:     Device_ID = ETemp & 0x00FF;
   771  0003A6  5023               	movf	_ETemp^0,w,c
   772  0003A8  6E1D               	movwf	_Device_ID^0,c
   773  0003AA  6A1E               	clrf	(_Device_ID+1)^0,c
   774  0003AC                     
   775                           ;main.c: 193:     if(Device_ID<0x31 || Device_ID>0x3A)
   776  0003AC  501E               	movf	(_Device_ID+1)^0,w,c
   777  0003AE  E109               	bnz	u3170
   778  0003B0  0E31               	movlw	49
   779  0003B2  5C1D               	subwf	_Device_ID^0,w,c
   780  0003B4  A0D8               	btfss	status,0,c
   781  0003B6  EFDF  F001         	goto	u3171
   782  0003BA  EFE1  F001         	goto	u3170
   783  0003BE                     u3171:
   784  0003BE  EFEC  F001         	goto	l4837
   785  0003C2                     u3170:
   786  0003C2  501E               	movf	(_Device_ID+1)^0,w,c
   787  0003C4  E109               	bnz	u3180
   788  0003C6  0E3B               	movlw	59
   789  0003C8  5C1D               	subwf	_Device_ID^0,w,c
   790  0003CA  A0D8               	btfss	status,0,c
   791  0003CC  EFEA  F001         	goto	u3181
   792  0003D0  EFEC  F001         	goto	u3180
   793  0003D4                     u3181:
   794  0003D4  EF01  F002         	goto	l4845
   795  0003D8                     u3180:
   796  0003D8                     l4837:
   797                           
   798                           ;main.c: 194:     {;main.c: 195:         Device_ID=0x31;
   799  0003D8  0E00               	movlw	0
   800  0003DA  6E1E               	movwf	(_Device_ID+1)^0,c
   801  0003DC  0E31               	movlw	49
   802  0003DE  6E1D               	movwf	_Device_ID^0,c
   803  0003E0                     
   804                           ;main.c: 197:         INTCONbits.GIE=0;
   805  0003E0  9EF2               	bcf	242,7,c	;volatile
   806  0003E2                     
   807                           ;main.c: 198:         write_i2c(0x0020, Device_ID);
   808  0003E2  0E20               	movlw	32
   809  0003E4  0100               	movlb	0	; () banked
   810  0003E6  6F80               	movwf	write_i2c@address& (0+255),b
   811  0003E8  0E00               	movlw	0
   812  0003EA  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   813  0003EC  0E00               	movlw	0
   814  0003EE  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   815  0003F0  0E00               	movlw	0
   816  0003F2  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   817  0003F4  C01D  F084         	movff	_Device_ID,write_i2c@data
   818  0003F8  C01E  F085         	movff	_Device_ID+1,write_i2c@data+1
   819  0003FC  ECA0  F00D         	call	_write_i2c	;wreg free
   820  000400                     
   821                           ;main.c: 199:         INTCONbits.GIE=1;
   822  000400  8EF2               	bsf	242,7,c	;volatile
   823  000402                     l4845:
   824                           
   825                           ;main.c: 205:     INTCONbits.GIE=0;
   826  000402  9EF2               	bcf	242,7,c	;volatile
   827  000404                     
   828                           ;main.c: 206:     ETemp = read_i2c(0x0060);
   829  000404  0E60               	movlw	96
   830  000406  0100               	movlb	0	; () banked
   831  000408  6F80               	movwf	read_i2c@address& (0+255),b
   832  00040A  0E00               	movlw	0
   833  00040C  6F81               	movwf	(read_i2c@address+1)& (0+255),b
   834  00040E  0E00               	movlw	0
   835  000410  6F82               	movwf	(read_i2c@address+2)& (0+255),b
   836  000412  0E00               	movlw	0
   837  000414  6F83               	movwf	(read_i2c@address+3)& (0+255),b
   838  000416  EC17  F00D         	call	_read_i2c	;wreg free
   839  00041A  C080  F023         	movff	?_read_i2c,_ETemp
   840  00041E  C081  F024         	movff	?_read_i2c+1,_ETemp+1
   841  000422                     
   842                           ;main.c: 207:     INTCONbits.GIE=1;
   843  000422  8EF2               	bsf	242,7,c	;volatile
   844  000424                     
   845                           ;main.c: 209:     pause_Time = ETemp & 0x00FF;
   846  000424  C023  F02F         	movff	_ETemp,_pause_Time	;volatile
   847  000428                     
   848                           ;main.c: 210:     if(pause_Time<0x30 || pause_Time>0x35)
   849  000428  0E2F               	movlw	47
   850  00042A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   851  00042C  EF1A  F002         	goto	u3191
   852  000430  EF1C  F002         	goto	u3190
   853  000434                     u3191:
   854  000434  EF24  F002         	goto	l4857
   855  000438                     u3190:
   856  000438  0E35               	movlw	53
   857  00043A  642F               	cpfsgt	_pause_Time^0,c	;volatile
   858  00043C  EF22  F002         	goto	u3201
   859  000440  EF24  F002         	goto	u3200
   860  000444                     u3201:
   861  000444  EF62  F002         	goto	l4879
   862  000448                     u3200:
   863  000448                     l4857:
   864                           
   865                           ;main.c: 211:     {;main.c: 212:         pause_Time = 0x30;
   866  000448  0E30               	movlw	48
   867  00044A  6E2F               	movwf	_pause_Time^0,c	;volatile
   868                           
   869                           ;main.c: 213:         Motor_Pause_Time=0;
   870  00044C  0E00               	movlw	0
   871  00044E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   872  000450  0E00               	movlw	0
   873  000452  6E1B               	movwf	_Motor_Pause_Time^0,c
   874  000454                     
   875                           ;main.c: 215:         INTCONbits.GIE=0;
   876  000454  9EF2               	bcf	242,7,c	;volatile
   877  000456                     
   878                           ;main.c: 216:         write_i2c(0x0060, pause_Time);
   879  000456  0E60               	movlw	96
   880  000458  0100               	movlb	0	; () banked
   881  00045A  6F80               	movwf	write_i2c@address& (0+255),b
   882  00045C  0E00               	movlw	0
   883  00045E  6F81               	movwf	(write_i2c@address+1)& (0+255),b
   884  000460  0E00               	movlw	0
   885  000462  6F82               	movwf	(write_i2c@address+2)& (0+255),b
   886  000464  0E00               	movlw	0
   887  000466  6F83               	movwf	(write_i2c@address+3)& (0+255),b
   888  000468  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
   889  00046C  6B85               	clrf	(write_i2c@data+1)& (0+255),b
   890  00046E  ECA0  F00D         	call	_write_i2c	;wreg free
   891  000472                     
   892                           ;main.c: 217:         INTCONbits.GIE=1;
   893  000472  8EF2               	bsf	242,7,c	;volatile
   894                           
   895                           ;main.c: 218:     }
   896  000474  EF88  F002         	goto	l168
   897  000478                     l4865:
   898                           
   899                           ; BSR set to: 0
   900                           ;main.c: 225:                 Motor_Pause_Time = 0;
   901  000478  0E00               	movlw	0
   902  00047A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   903  00047C  0E00               	movlw	0
   904  00047E  6E1B               	movwf	_Motor_Pause_Time^0,c
   905                           
   906                           ;main.c: 226:                 pause_Time = 0x30;
   907  000480  0E30               	movlw	48
   908  000482  6E2F               	movwf	_pause_Time^0,c	;volatile
   909                           
   910                           ;main.c: 227:                 break;
   911  000484  EF88  F002         	goto	l168
   912  000488                     l4867:
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 230:                 Motor_Pause_Time = 1000;
   916  000488  0E03               	movlw	3
   917  00048A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   918  00048C  0EE8               	movlw	232
   919  00048E  6E1B               	movwf	_Motor_Pause_Time^0,c
   920                           
   921                           ;main.c: 231:                 break;
   922  000490  EF88  F002         	goto	l168
   923  000494                     l4869:
   924                           
   925                           ; BSR set to: 0
   926                           ;main.c: 234:                 Motor_Pause_Time = 2000;
   927  000494  0E07               	movlw	7
   928  000496  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   929  000498  0ED0               	movlw	208
   930  00049A  6E1B               	movwf	_Motor_Pause_Time^0,c
   931                           
   932                           ;main.c: 235:                 break;
   933  00049C  EF88  F002         	goto	l168
   934  0004A0                     l4871:
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 238:                  Motor_Pause_Time = 3000;
   938  0004A0  0E0B               	movlw	11
   939  0004A2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   940  0004A4  0EB8               	movlw	184
   941  0004A6  6E1B               	movwf	_Motor_Pause_Time^0,c
   942                           
   943                           ;main.c: 239:                 break;
   944  0004A8  EF88  F002         	goto	l168
   945  0004AC                     l4873:
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 242:                 Motor_Pause_Time = 4000;
   949  0004AC  0E0F               	movlw	15
   950  0004AE  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   951  0004B0  0EA0               	movlw	160
   952  0004B2  6E1B               	movwf	_Motor_Pause_Time^0,c
   953                           
   954                           ;main.c: 243:                 break;
   955  0004B4  EF88  F002         	goto	l168
   956  0004B8                     l4875:
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 246:                 Motor_Pause_Time = 5000;
   960  0004B8  0E13               	movlw	19
   961  0004BA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
   962  0004BC  0E88               	movlw	136
   963  0004BE  6E1B               	movwf	_Motor_Pause_Time^0,c
   964                           
   965                           ;main.c: 247:                 break;
   966  0004C0  EF88  F002         	goto	l168
   967  0004C4                     l4879:
   968  0004C4  502F               	movf	_pause_Time^0,w,c	;volatile
   969  0004C6  0100               	movlb	0	; () banked
   970  0004C8  6F86               	movwf	??_main& (0+255),b
   971  0004CA  6B87               	clrf	(??_main+1)& (0+255),b
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ;	Chosen strategy is simple_byte
   980  0004CC  5187               	movf	(??_main+1)& (0+255),w,b
   981  0004CE  0A00               	xorlw	0	; case 0
   982  0004D0  B4D8               	btfsc	status,2,c
   983  0004D2  EF6D  F002         	goto	l5433
   984  0004D6  EF3C  F002         	goto	l4865
   985  0004DA                     l5433:
   986                           
   987                           ; BSR set to: 0
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 6, Range of values is 48 to 53
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte           19    10 (average)
   993                           ;	Chosen strategy is simple_byte
   994  0004DA  5186               	movf	??_main& (0+255),w,b
   995  0004DC  0A30               	xorlw	48	; case 48
   996  0004DE  B4D8               	btfsc	status,2,c
   997  0004E0  EF3C  F002         	goto	l4865
   998  0004E4  0A01               	xorlw	1	; case 49
   999  0004E6  B4D8               	btfsc	status,2,c
  1000  0004E8  EF44  F002         	goto	l4867
  1001  0004EC  0A03               	xorlw	3	; case 50
  1002  0004EE  B4D8               	btfsc	status,2,c
  1003  0004F0  EF4A  F002         	goto	l4869
  1004  0004F4  0A01               	xorlw	1	; case 51
  1005  0004F6  B4D8               	btfsc	status,2,c
  1006  0004F8  EF50  F002         	goto	l4871
  1007  0004FC  0A07               	xorlw	7	; case 52
  1008  0004FE  B4D8               	btfsc	status,2,c
  1009  000500  EF56  F002         	goto	l4873
  1010  000504  0A01               	xorlw	1	; case 53
  1011  000506  B4D8               	btfsc	status,2,c
  1012  000508  EF5C  F002         	goto	l4875
  1013  00050C  EF3C  F002         	goto	l4865
  1014  000510                     l168:
  1015                           
  1016                           ;main.c: 254:     INTCONbits.GIE=0;
  1017  000510  9EF2               	bcf	242,7,c	;volatile
  1018  000512                     
  1019                           ;main.c: 255:     ETemp = read_i2c(0x0050);
  1020  000512  0E50               	movlw	80
  1021  000514  0100               	movlb	0	; () banked
  1022  000516  6F80               	movwf	read_i2c@address& (0+255),b
  1023  000518  0E00               	movlw	0
  1024  00051A  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1025  00051C  0E00               	movlw	0
  1026  00051E  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1027  000520  0E00               	movlw	0
  1028  000522  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1029  000524  EC17  F00D         	call	_read_i2c	;wreg free
  1030  000528  C080  F023         	movff	?_read_i2c,_ETemp
  1031  00052C  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1032  000530                     
  1033                           ;main.c: 256:     INTCONbits.GIE=1;
  1034  000530  8EF2               	bsf	242,7,c	;volatile
  1035  000532                     
  1036                           ;main.c: 258:     delay_motor_stop_time = ETemp & 0x00FF;
  1037  000532  C023  F02D         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1038  000536                     
  1039                           ;main.c: 259:     if(delay_motor_stop_time>0x96)
  1040  000536  0E96               	movlw	150
  1041  000538  642D               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1042  00053A  EFA1  F002         	goto	u3211
  1043  00053E  EFA3  F002         	goto	u3210
  1044  000542                     u3211:
  1045  000542  EFBB  F002         	goto	l178
  1046  000546                     u3210:
  1047  000546                     
  1048                           ;main.c: 260:     {;main.c: 261:         delay_motor_stop_time=0x00;
  1049  000546  0E00               	movlw	0
  1050  000548  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  1051  00054A                     
  1052                           ;main.c: 263:         INTCONbits.GIE=0;
  1053  00054A  9EF2               	bcf	242,7,c	;volatile
  1054  00054C                     
  1055                           ;main.c: 264:         write_i2c(0x0050, delay_motor_stop_time);
  1056  00054C  0E50               	movlw	80
  1057  00054E  0100               	movlb	0	; () banked
  1058  000550  6F80               	movwf	write_i2c@address& (0+255),b
  1059  000552  0E00               	movlw	0
  1060  000554  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1061  000556  0E00               	movlw	0
  1062  000558  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1063  00055A  0E00               	movlw	0
  1064  00055C  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1065  00055E  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1066  000562  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1067  000564  ECA0  F00D         	call	_write_i2c	;wreg free
  1068  000568                     
  1069                           ;main.c: 265:         INTCONbits.GIE=1;
  1070  000568  8EF2               	bsf	242,7,c	;volatile
  1071  00056A                     
  1072                           ;main.c: 267:         Motor_Stop_Delay_Time=0;
  1073  00056A  0E00               	movlw	0
  1074  00056C  6E20               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1075  00056E  0E00               	movlw	0
  1076  000570  6E1F               	movwf	_Motor_Stop_Delay_Time^0,c
  1077                           
  1078                           ;main.c: 268:     }
  1079  000572  EFBE  F002         	goto	l179
  1080  000576                     l178:
  1081                           
  1082                           ;main.c: 270:     {;main.c: 271:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1083  000576  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1084  00057A  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1085  00057C                     l179:
  1086                           
  1087                           ;main.c: 277:     INTCONbits.GIE=0;
  1088  00057C  9EF2               	bcf	242,7,c	;volatile
  1089  00057E                     
  1090                           ;main.c: 278:     ETemp = read_i2c(0x0040);
  1091  00057E  0E40               	movlw	64
  1092  000580  0100               	movlb	0	; () banked
  1093  000582  6F80               	movwf	read_i2c@address& (0+255),b
  1094  000584  0E00               	movlw	0
  1095  000586  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1096  000588  0E00               	movlw	0
  1097  00058A  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1098  00058C  0E00               	movlw	0
  1099  00058E  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1100  000590  EC17  F00D         	call	_read_i2c	;wreg free
  1101  000594  C080  F023         	movff	?_read_i2c,_ETemp
  1102  000598  C081  F024         	movff	?_read_i2c+1,_ETemp+1
  1103  00059C                     
  1104                           ;main.c: 279:     INTCONbits.GIE=1
  1105  00059C  8EF2               	bsf	242,7,c	;volatile
  1106  00059E                     
  1107                           ;main.c: 281:     vib_Time = ETemp & 0x00FF;
  1108  00059E  C023  F02E         	movff	_ETemp,_vib_Time	;volatile
  1109  0005A2                     
  1110                           ;main.c: 282:     if( (vib_Time!=0x81 && vib_Time!=0x82 && vib_Time!=0x83 && vib_Time!=0
      +                          x84 && vib_Time!=0x85) )
  1111  0005A2  0E81               	movlw	129
  1112  0005A4  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1113  0005A6  B4D8               	btfsc	status,2,c
  1114  0005A8  EFD8  F002         	goto	u3221
  1115  0005AC  EFDA  F002         	goto	u3220
  1116  0005B0                     u3221:
  1117  0005B0  EF36  F003         	goto	l4935
  1118  0005B4                     u3220:
  1119  0005B4  0E82               	movlw	130
  1120  0005B6  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1121  0005B8  B4D8               	btfsc	status,2,c
  1122  0005BA  EFE1  F002         	goto	u3231
  1123  0005BE  EFE3  F002         	goto	u3230
  1124  0005C2                     u3231:
  1125  0005C2  EF36  F003         	goto	l4935
  1126  0005C6                     u3230:
  1127  0005C6  0E83               	movlw	131
  1128  0005C8  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1129  0005CA  B4D8               	btfsc	status,2,c
  1130  0005CC  EFEA  F002         	goto	u3241
  1131  0005D0  EFEC  F002         	goto	u3240
  1132  0005D4                     u3241:
  1133  0005D4  EF36  F003         	goto	l4935
  1134  0005D8                     u3240:
  1135  0005D8  0E84               	movlw	132
  1136  0005DA  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1137  0005DC  B4D8               	btfsc	status,2,c
  1138  0005DE  EFF3  F002         	goto	u3251
  1139  0005E2  EFF5  F002         	goto	u3250
  1140  0005E6                     u3251:
  1141  0005E6  EF36  F003         	goto	l4935
  1142  0005EA                     u3250:
  1143  0005EA  0E85               	movlw	133
  1144  0005EC  182E               	xorwf	_vib_Time^0,w,c	;volatile
  1145  0005EE  B4D8               	btfsc	status,2,c
  1146  0005F0  EFFC  F002         	goto	u3261
  1147  0005F4  EFFE  F002         	goto	u3260
  1148  0005F8                     u3261:
  1149  0005F8  EF36  F003         	goto	l4935
  1150  0005FC                     u3260:
  1151  0005FC                     
  1152                           ;main.c: 283:     {;main.c: 284:         Vmotor_Time = 2000;
  1153  0005FC  0E07               	movlw	7
  1154  0005FE  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1155  000600  0ED0               	movlw	208
  1156  000602  6E56               	movwf	_Vmotor_Time^0,c
  1157                           
  1158                           ;main.c: 285:         vib_Time = 0x82;
  1159  000604  0E82               	movlw	130
  1160  000606  6E2E               	movwf	_vib_Time^0,c	;volatile
  1161  000608                     
  1162                           ;main.c: 287:         INTCONbits.GIE=0;
  1163  000608  9EF2               	bcf	242,7,c	;volatile
  1164  00060A                     
  1165                           ;main.c: 288:         write_i2c(0x0040,vib_Time);
  1166  00060A  0E40               	movlw	64
  1167  00060C  0100               	movlb	0	; () banked
  1168  00060E  6F80               	movwf	write_i2c@address& (0+255),b
  1169  000610  0E00               	movlw	0
  1170  000612  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1171  000614  0E00               	movlw	0
  1172  000616  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1173  000618  0E00               	movlw	0
  1174  00061A  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1175  00061C  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  1176  000620  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1177  000622  ECA0  F00D         	call	_write_i2c	;wreg free
  1178  000626                     
  1179                           ;main.c: 289:         INTCONbits.GIE=1;
  1180  000626  8EF2               	bsf	242,7,c	;volatile
  1181                           
  1182                           ;main.c: 290:     }
  1183  000628  EF58  F003         	goto	l4937
  1184  00062C                     l4923:
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 296:                 Vmotor_Time=1000;
  1188  00062C  0E03               	movlw	3
  1189  00062E  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1190  000630  0EE8               	movlw	232
  1191  000632  6E56               	movwf	_Vmotor_Time^0,c
  1192                           
  1193                           ;main.c: 297:                 break;
  1194  000634  EF58  F003         	goto	l4937
  1195  000638                     l4925:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;main.c: 300:                 Vmotor_Time=2000;
  1199  000638  0E07               	movlw	7
  1200  00063A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1201  00063C  0ED0               	movlw	208
  1202  00063E  6E56               	movwf	_Vmotor_Time^0,c
  1203                           
  1204                           ;main.c: 301:                 vib_Time=0x82;
  1205  000640  0E82               	movlw	130
  1206  000642  6E2E               	movwf	_vib_Time^0,c	;volatile
  1207                           
  1208                           ;main.c: 302:                 break;
  1209  000644  EF58  F003         	goto	l4937
  1210  000648                     l4927:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;main.c: 304:                 Vmotor_Time=3000;
  1214  000648  0E0B               	movlw	11
  1215  00064A  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1216  00064C  0EB8               	movlw	184
  1217  00064E  6E56               	movwf	_Vmotor_Time^0,c
  1218                           
  1219                           ;main.c: 305:                 break;
  1220  000650  EF58  F003         	goto	l4937
  1221  000654                     l4929:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 307:                 Vmotor_Time=4000;
  1225  000654  0E0F               	movlw	15
  1226  000656  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1227  000658  0EA0               	movlw	160
  1228  00065A  6E56               	movwf	_Vmotor_Time^0,c
  1229                           
  1230                           ;main.c: 308:                 break;
  1231  00065C  EF58  F003         	goto	l4937
  1232  000660                     l4931:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 310:                 Vmotor_Time=5000;
  1236  000660  0E13               	movlw	19
  1237  000662  6E57               	movwf	(_Vmotor_Time+1)^0,c
  1238  000664  0E88               	movlw	136
  1239  000666  6E56               	movwf	_Vmotor_Time^0,c
  1240                           
  1241                           ;main.c: 311:                 break;
  1242  000668  EF58  F003         	goto	l4937
  1243  00066C                     l4935:
  1244  00066C  502E               	movf	_vib_Time^0,w,c	;volatile
  1245  00066E  0100               	movlb	0	; () banked
  1246  000670  6F86               	movwf	??_main& (0+255),b
  1247  000672  6B87               	clrf	(??_main+1)& (0+255),b
  1248                           
  1249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 1, Range of values is 0 to 0
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte            4     3 (average)
  1255                           ;	Chosen strategy is simple_byte
  1256  000674  5187               	movf	(??_main+1)& (0+255),w,b
  1257  000676  0A00               	xorlw	0	; case 0
  1258  000678  B4D8               	btfsc	status,2,c
  1259  00067A  EF41  F003         	goto	l5435
  1260  00067E  EF1C  F003         	goto	l4925
  1261  000682                     l5435:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 5, Range of values is 129 to 133
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte           16     9 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270  000682  5186               	movf	??_main& (0+255),w,b
  1271  000684  0A81               	xorlw	129	; case 129
  1272  000686  B4D8               	btfsc	status,2,c
  1273  000688  EF16  F003         	goto	l4923
  1274  00068C  0A03               	xorlw	3	; case 130
  1275  00068E  B4D8               	btfsc	status,2,c
  1276  000690  EF1C  F003         	goto	l4925
  1277  000694  0A01               	xorlw	1	; case 131
  1278  000696  B4D8               	btfsc	status,2,c
  1279  000698  EF24  F003         	goto	l4927
  1280  00069C  0A07               	xorlw	7	; case 132
  1281  00069E  B4D8               	btfsc	status,2,c
  1282  0006A0  EF2A  F003         	goto	l4929
  1283  0006A4  0A01               	xorlw	1	; case 133
  1284  0006A6  B4D8               	btfsc	status,2,c
  1285  0006A8  EF30  F003         	goto	l4931
  1286  0006AC  EF1C  F003         	goto	l4925
  1287  0006B0                     l4937:
  1288                           
  1289                           ;main.c: 335:     errorcounter = 30;
  1290  0006B0  0E1E               	movlw	30
  1291  0006B2  6E52               	movwf	_errorcounter^0,c	;volatile
  1292  0006B4  0E00               	movlw	0
  1293  0006B6  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1294  0006B8  0E00               	movlw	0
  1295  0006BA  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1296  0006BC  0E00               	movlw	0
  1297  0006BE  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1298  0006C0                     
  1299                           ;main.c: 336:     MotorPosition_Init();
  1300  0006C0  EC67  F009         	call	_MotorPosition_Init	;wreg free
  1301  0006C4                     
  1302                           ;main.c: 337:     LATDbits.LATD1 = 0;
  1303  0006C4  928C               	bcf	140,1,c	;volatile
  1304  0006C6                     l190:
  1305  0006C6  0004               	clrwdt		;# 
  1306  0006C8                     
  1307                           ;main.c: 345:         errorcounter = 30;
  1308  0006C8  0E1E               	movlw	30
  1309  0006CA  6E52               	movwf	_errorcounter^0,c	;volatile
  1310  0006CC  0E00               	movlw	0
  1311  0006CE  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1312  0006D0  0E00               	movlw	0
  1313  0006D2  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1314  0006D4  0E00               	movlw	0
  1315  0006D6  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1316                           
  1317                           ;main.c: 346:         AD_capture_BattVoltage();
  1318  0006D8  EC09  F00E         	call	_AD_capture_BattVoltage	;wreg free
  1319                           
  1320                           ;main.c: 348:         switch(OpMode)
  1321  0006DC  EF6E  F006         	goto	l5155
  1322  0006E0                     l192:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 355:                 NUM = NUM_REC;
  1326  0006E0  C017  F019         	movff	_NUM_REC,_NUM
  1327  0006E4  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1328                           
  1329                           ;main.c: 357:                 if (PORTBbits.RB4 == 0)
  1330  0006E8  B881               	btfsc	129,4,c	;volatile
  1331  0006EA  EF79  F003         	goto	u3271
  1332  0006EE  EF7B  F003         	goto	u3270
  1333  0006F2                     u3271:
  1334  0006F2  EF9B  F003         	goto	l193
  1335  0006F6                     u3270:
  1336  0006F6                     l194:
  1337                           
  1338                           ;main.c: 360:                     {;main.c: 361:                         if(PORTBbits.RB
      +                          2 == 0)
  1339  0006F6  B481               	btfsc	129,2,c	;volatile
  1340  0006F8  EF80  F003         	goto	u3281
  1341  0006FC  EF82  F003         	goto	u3280
  1342  000700                     u3281:
  1343  000700  EF84  F003         	goto	l195
  1344  000704                     u3280:
  1345  000704                     
  1346                           ;main.c: 362:                         {;main.c: 363:                             ToggleV
      +                          IB_Mode();
  1347  000704  ECEA  F00D         	call	_ToggleVIB_Mode	;wreg free
  1348  000708                     l195:
  1349                           
  1350                           ;main.c: 366:                         WriteSTLED316SVibMode(vibration_mode);
  1351  000708  5032               	movf	_vibration_mode^0,w,c
  1352  00070A  EC79  F00D         	call	_WriteSTLED316SVibMode
  1353  00070E                     
  1354                           ;main.c: 367:                          _delay((unsigned long)((100)*(8000000/4000.0)));
  1355  00070E  0E02               	movlw	2
  1356  000710  0100               	movlb	0	; () banked
  1357  000712  6F87               	movwf	(??_main+1)& (0+255),b
  1358  000714  0E04               	movlw	4
  1359  000716  6F86               	movwf	??_main& (0+255),b
  1360  000718  0EBA               	movlw	186
  1361  00071A                     u3577:
  1362  00071A  2EE8               	decfsz	wreg,f,c
  1363  00071C  D7FE               	bra	u3577
  1364  00071E  2F86               	decfsz	??_main& (0+255),f,b
  1365  000720  D7FC               	bra	u3577
  1366  000722  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1367  000724  D7FA               	bra	u3577
  1368  000726  F000               	nop	
  1369  000728                     
  1370                           ;main.c: 369:                     }while (PORTBbits.RB4 == 0);
  1371  000728  A881               	btfss	129,4,c	;volatile
  1372  00072A  EF99  F003         	goto	u3291
  1373  00072E  EF9B  F003         	goto	u3290
  1374  000732                     u3291:
  1375  000732  EF7B  F003         	goto	l194
  1376  000736                     u3290:
  1377  000736                     l193:
  1378                           
  1379                           ;main.c: 372:                 if ((PORTBbits.RB3 == 0) && NUM != 99)
  1380  000736  B681               	btfsc	129,3,c	;volatile
  1381  000738  EFA0  F003         	goto	u3301
  1382  00073C  EFA2  F003         	goto	u3300
  1383  000740                     u3301:
  1384  000740  EFB9  F003         	goto	l197
  1385  000744                     u3300:
  1386  000744  0E63               	movlw	99
  1387  000746  1819               	xorwf	_NUM^0,w,c
  1388  000748  101A               	iorwf	(_NUM+1)^0,w,c
  1389  00074A  B4D8               	btfsc	status,2,c
  1390  00074C  EFAA  F003         	goto	u3311
  1391  000750  EFAC  F003         	goto	u3310
  1392  000754                     u3311:
  1393  000754  EFB9  F003         	goto	l197
  1394  000758                     u3310:
  1395  000758                     
  1396                           ;main.c: 373:                 {;main.c: 374:                     NUM = NUM + 1;
  1397  000758  0E01               	movlw	1
  1398  00075A  2419               	addwf	_NUM^0,w,c
  1399  00075C  6E19               	movwf	_NUM^0,c
  1400  00075E  0E00               	movlw	0
  1401  000760  201A               	addwfc	(_NUM+1)^0,w,c
  1402  000762  6E1A               	movwf	(_NUM+1)^0,c
  1403  000764                     l198:
  1404  000764  A681               	btfss	129,3,c	;volatile
  1405  000766  EFB7  F003         	goto	u3321
  1406  00076A  EFB9  F003         	goto	u3320
  1407  00076E                     u3321:
  1408  00076E  EFB2  F003         	goto	l198
  1409  000772                     u3320:
  1410  000772                     l197:
  1411                           
  1412                           ;main.c: 378:                 if (PORTAbits.RA5 == 0 && NUM != 0)
  1413  000772  BA80               	btfsc	128,5,c	;volatile
  1414  000774  EFBE  F003         	goto	u3331
  1415  000778  EFC0  F003         	goto	u3330
  1416  00077C                     u3331:
  1417  00077C  EFD6  F003         	goto	l201
  1418  000780                     u3330:
  1419  000780  5019               	movf	_NUM^0,w,c
  1420  000782  101A               	iorwf	(_NUM+1)^0,w,c
  1421  000784  B4D8               	btfsc	status,2,c
  1422  000786  EFC7  F003         	goto	u3341
  1423  00078A  EFC9  F003         	goto	u3340
  1424  00078E                     u3341:
  1425  00078E  EFD6  F003         	goto	l201
  1426  000792                     u3340:
  1427  000792                     
  1428                           ;main.c: 379:                 {;main.c: 380:                     NUM = NUM - 1;
  1429  000792  0EFF               	movlw	255
  1430  000794  2419               	addwf	_NUM^0,w,c
  1431  000796  6E19               	movwf	_NUM^0,c
  1432  000798  0EFF               	movlw	255
  1433  00079A  201A               	addwfc	(_NUM+1)^0,w,c
  1434  00079C  6E1A               	movwf	(_NUM+1)^0,c
  1435  00079E                     l202:
  1436  00079E  AA80               	btfss	128,5,c	;volatile
  1437  0007A0  EFD4  F003         	goto	u3351
  1438  0007A4  EFD6  F003         	goto	u3350
  1439  0007A8                     u3351:
  1440  0007A8  EFCF  F003         	goto	l202
  1441  0007AC                     u3350:
  1442  0007AC                     l201:
  1443                           
  1444                           ;main.c: 384:                 if (PORTAbits.RA4 == 0 && NUM <= 89)
  1445  0007AC  B880               	btfsc	128,4,c	;volatile
  1446  0007AE  EFDB  F003         	goto	u3361
  1447  0007B2  EFDD  F003         	goto	u3360
  1448  0007B6                     u3361:
  1449  0007B6  EFF5  F003         	goto	l205
  1450  0007BA                     u3360:
  1451  0007BA  501A               	movf	(_NUM+1)^0,w,c
  1452  0007BC  E107               	bnz	u3371
  1453  0007BE  0E5A               	movlw	90
  1454  0007C0  5C19               	subwf	_NUM^0,w,c
  1455  0007C2  B0D8               	btfsc	status,0,c
  1456  0007C4  EFE6  F003         	goto	u3371
  1457  0007C8  EFE8  F003         	goto	u3370
  1458  0007CC                     u3371:
  1459  0007CC  EFF5  F003         	goto	l205
  1460  0007D0                     u3370:
  1461  0007D0                     
  1462                           ;main.c: 385:                 {;main.c: 386:                     NUM = NUM + 10;
  1463  0007D0  0E0A               	movlw	10
  1464  0007D2  2419               	addwf	_NUM^0,w,c
  1465  0007D4  6E19               	movwf	_NUM^0,c
  1466  0007D6  0E00               	movlw	0
  1467  0007D8  201A               	addwfc	(_NUM+1)^0,w,c
  1468  0007DA  6E1A               	movwf	(_NUM+1)^0,c
  1469  0007DC                     l206:
  1470  0007DC  A880               	btfss	128,4,c	;volatile
  1471  0007DE  EFF3  F003         	goto	u3381
  1472  0007E2  EFF5  F003         	goto	u3380
  1473  0007E6                     u3381:
  1474  0007E6  EFEE  F003         	goto	l206
  1475  0007EA                     u3380:
  1476  0007EA                     l205:
  1477                           
  1478                           ;main.c: 390:                 if (PORTAbits.RA3 == 0 && NUM >= 10)
  1479  0007EA  B680               	btfsc	128,3,c	;volatile
  1480  0007EC  EFFA  F003         	goto	u3391
  1481  0007F0  EFFC  F003         	goto	u3390
  1482  0007F4                     u3391:
  1483  0007F4  EF14  F004         	goto	l209
  1484  0007F8                     u3390:
  1485  0007F8  501A               	movf	(_NUM+1)^0,w,c
  1486  0007FA  E109               	bnz	u3400
  1487  0007FC  0E0A               	movlw	10
  1488  0007FE  5C19               	subwf	_NUM^0,w,c
  1489  000800  A0D8               	btfss	status,0,c
  1490  000802  EF05  F004         	goto	u3401
  1491  000806  EF07  F004         	goto	u3400
  1492  00080A                     u3401:
  1493  00080A  EF14  F004         	goto	l209
  1494  00080E                     u3400:
  1495  00080E                     
  1496                           ;main.c: 391:                 {;main.c: 392:                     NUM = NUM - 10;
  1497  00080E  0EF6               	movlw	246
  1498  000810  2419               	addwf	_NUM^0,w,c
  1499  000812  6E19               	movwf	_NUM^0,c
  1500  000814  0EFF               	movlw	255
  1501  000816  201A               	addwfc	(_NUM+1)^0,w,c
  1502  000818  6E1A               	movwf	(_NUM+1)^0,c
  1503  00081A                     l210:
  1504  00081A  A680               	btfss	128,3,c	;volatile
  1505  00081C  EF12  F004         	goto	u3411
  1506  000820  EF14  F004         	goto	u3410
  1507  000824                     u3411:
  1508  000824  EF0D  F004         	goto	l210
  1509  000828                     u3410:
  1510  000828                     l209:
  1511                           
  1512                           ;main.c: 396:                 NUM_REC = NUM;
  1513  000828  C019  F017         	movff	_NUM,_NUM_REC
  1514  00082C  C01A  F018         	movff	_NUM+1,_NUM_REC+1
  1515  000830                     
  1516                           ;main.c: 397:                 WriteSTLED316SData(NUM, vibration_mode);
  1517  000830  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1518  000834  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1519  000838  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1520  00083C  EC01  F00C         	call	_WriteSTLED316SData	;wreg free
  1521  000840                     
  1522                           ;main.c: 399:                 if (PORTBbits.RB2 == 0)
  1523  000840  B481               	btfsc	129,2,c	;volatile
  1524  000842  EF25  F004         	goto	u3421
  1525  000846  EF27  F004         	goto	u3420
  1526  00084A                     u3421:
  1527  00084A  EF37  F004         	goto	l4979
  1528  00084E                     u3420:
  1529  00084E                     
  1530                           ;main.c: 400:                 {;main.c: 401:                     Busy = 1;
  1531  00084E  0E01               	movlw	1
  1532  000850  6E33               	movwf	_Busy^0,c
  1533                           
  1534                           ;main.c: 402:                     errorcounter = 30;
  1535  000852  0E1E               	movlw	30
  1536  000854  6E52               	movwf	_errorcounter^0,c	;volatile
  1537  000856  0E00               	movlw	0
  1538  000858  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1539  00085A  0E00               	movlw	0
  1540  00085C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1541  00085E  0E00               	movlw	0
  1542  000860  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1543  000862                     
  1544                           ;main.c: 403:                     Homing_Again_Manual();
  1545  000862  EC86  F006         	call	_Homing_Again_Manual	;wreg free
  1546  000866                     
  1547                           ;main.c: 404:                     Stop = 0;
  1548  000866  0E00               	movlw	0
  1549  000868  6E35               	movwf	_Stop^0,c
  1550  00086A                     
  1551                           ;main.c: 405:                     Busy = 0;
  1552  00086A  0E00               	movlw	0
  1553  00086C  6E33               	movwf	_Busy^0,c
  1554  00086E                     l4979:
  1555                           
  1556                           ;main.c: 419:                 if(Serial_Flag==1)
  1557  00086E  0437               	decf	_Serial_Flag^0,w,c
  1558  000870  A4D8               	btfss	status,2,c
  1559  000872  EF3D  F004         	goto	u3431
  1560  000876  EF3F  F004         	goto	u3430
  1561  00087A                     u3431:
  1562  00087A  EF6A  F006         	goto	l5153
  1563  00087E                     u3430:
  1564  00087E  EF40  F006         	goto	l5149
  1565  000882                     l4983:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 426:                             if(Serial_Buffer[2] == 0xF1 && Busy == 0)
  1569  000882  0EF1               	movlw	241
  1570  000884  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1571  000886  A4D8               	btfss	status,2,c
  1572  000888  EF48  F004         	goto	u3441
  1573  00088C  EF4A  F004         	goto	u3440
  1574  000890                     u3441:
  1575  000890  EF66  F004         	goto	l4993
  1576  000894                     u3440:
  1577  000894                     
  1578                           ; BSR set to: 0
  1579  000894  5033               	movf	_Busy^0,w,c
  1580  000896  A4D8               	btfss	status,2,c
  1581  000898  EF50  F004         	goto	u3451
  1582  00089C  EF52  F004         	goto	u3450
  1583  0008A0                     u3451:
  1584  0008A0  EF66  F004         	goto	l4993
  1585  0008A4                     u3450:
  1586  0008A4                     
  1587                           ; BSR set to: 0
  1588                           ;main.c: 427:                             {;main.c: 428:                                
      +                           Stop = 0;
  1589  0008A4  0E00               	movlw	0
  1590  0008A6  6E35               	movwf	_Stop^0,c
  1591                           
  1592                           ;main.c: 429:                                 Busy = 1;
  1593  0008A8  0E01               	movlw	1
  1594  0008AA  6E33               	movwf	_Busy^0,c
  1595  0008AC                     
  1596                           ; BSR set to: 0
  1597                           ;main.c: 430:                                 NUM = NUM_REC;
  1598  0008AC  C017  F019         	movff	_NUM_REC,_NUM
  1599  0008B0  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1600                           
  1601                           ;main.c: 432:                                 errorcounter = 30;
  1602  0008B4  0E1E               	movlw	30
  1603  0008B6  6E52               	movwf	_errorcounter^0,c	;volatile
  1604  0008B8  0E00               	movlw	0
  1605  0008BA  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1606  0008BC  0E00               	movlw	0
  1607  0008BE  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1608  0008C0  0E00               	movlw	0
  1609  0008C2  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1610  0008C4                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 433:                                 Homing_Again_Auto();
  1613  0008C4  ECCE  F007         	call	_Homing_Again_Auto	;wreg free
  1614                           
  1615                           ;main.c: 435:                             }
  1616  0008C8  EFC4  F004         	goto	l5023
  1617  0008CC                     l4993:
  1618                           
  1619                           ; BSR set to: 0
  1620  0008CC  0EF2               	movlw	242
  1621  0008CE  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  1622  0008D0  A4D8               	btfss	status,2,c
  1623  0008D2  EF6D  F004         	goto	u3461
  1624  0008D6  EF6F  F004         	goto	u3460
  1625  0008DA                     u3461:
  1626  0008DA  EFC4  F004         	goto	l5023
  1627  0008DE                     u3460:
  1628  0008DE                     
  1629                           ; BSR set to: 0
  1630  0008DE  5033               	movf	_Busy^0,w,c
  1631  0008E0  A4D8               	btfss	status,2,c
  1632  0008E2  EF75  F004         	goto	u3471
  1633  0008E6  EF77  F004         	goto	u3470
  1634  0008EA                     u3471:
  1635  0008EA  EFC4  F004         	goto	l5023
  1636  0008EE                     u3470:
  1637  0008EE                     
  1638                           ; BSR set to: 0
  1639                           ;main.c: 437:                            {;main.c: 438:                                 
      +                          Stop = 0;
  1640  0008EE  0E00               	movlw	0
  1641  0008F0  6E35               	movwf	_Stop^0,c
  1642                           
  1643                           ;main.c: 439:                                 Busy = 1;
  1644  0008F2  0E01               	movlw	1
  1645  0008F4  6E33               	movwf	_Busy^0,c
  1646  0008F6                     
  1647                           ; BSR set to: 0
  1648                           ;main.c: 440:                                 NUM = NUM_REC;
  1649  0008F6  C017  F019         	movff	_NUM_REC,_NUM
  1650  0008FA  C018  F01A         	movff	_NUM_REC+1,_NUM+1
  1651  0008FE                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 441:                                 WriteSTLED316SData(NUM, vibration_mode);
  1654  0008FE  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  1655  000902  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  1656  000906  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1657  00090A  EC01  F00C         	call	_WriteSTLED316SData	;wreg free
  1658  00090E                     
  1659                           ;main.c: 443:                                 errorcounter = 30;
  1660  00090E  0E1E               	movlw	30
  1661  000910  6E52               	movwf	_errorcounter^0,c	;volatile
  1662  000912  0E00               	movlw	0
  1663  000914  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  1664  000916  0E00               	movlw	0
  1665  000918  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  1666  00091A  0E00               	movlw	0
  1667  00091C  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  1668  00091E                     
  1669                           ;main.c: 444:                                 Homing_Again_Manual();
  1670  00091E  EC86  F006         	call	_Homing_Again_Manual	;wreg free
  1671  000922                     
  1672                           ;main.c: 447:                                 if(Stop == 0)
  1673  000922  5035               	movf	_Stop^0,w,c
  1674  000924  A4D8               	btfss	status,2,c
  1675  000926  EF97  F004         	goto	u3481
  1676  00092A  EF99  F004         	goto	u3480
  1677  00092E                     u3481:
  1678  00092E  EFC4  F004         	goto	l5023
  1679  000932                     u3480:
  1680  000932                     
  1681                           ;main.c: 448:                                 {;main.c: 449:                            
      +                                   Serial_Buffer_Out[0] = 0xA5;
  1682  000932  0EA5               	movlw	165
  1683  000934  0100               	movlb	0	; () banked
  1684  000936  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1685                           
  1686                           ;main.c: 450:                                     Serial_Buffer_Out[1] = 0x44;
  1687  000938  0E44               	movlw	68
  1688  00093A  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  1689                           
  1690                           ;main.c: 451:                                     Serial_Buffer_Out[2] = 0xF9;
  1691  00093C  0EF9               	movlw	249
  1692  00093E  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  1693                           
  1694                           ;main.c: 452:                                     Serial_Buffer_Out[3] = 0X3D;
  1695  000940  0E3D               	movlw	61
  1696  000942  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  1697                           
  1698                           ;main.c: 453:                                     Serial_Buffer_Out[4] = 0x5A;
  1699  000944  0E5A               	movlw	90
  1700  000946  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  1701  000948                     
  1702                           ; BSR set to: 0
  1703                           ;main.c: 455:                                     INTCONbits.GIE=0;
  1704  000948  9EF2               	bcf	242,7,c	;volatile
  1705                           
  1706                           ;main.c: 456:                                     for (i=0; i<5;i++)
  1707  00094A  0E00               	movlw	0
  1708  00094C  6E16               	movwf	(_i+1)^0,c
  1709  00094E  0E00               	movlw	0
  1710  000950  6E15               	movwf	_i^0,c
  1711  000952                     l5013:
  1712  000952  5016               	movf	(_i+1)^0,w,c
  1713  000954  E109               	bnz	u3490
  1714  000956  0E05               	movlw	5
  1715  000958  5C15               	subwf	_i^0,w,c
  1716  00095A  A0D8               	btfss	status,0,c
  1717  00095C  EFB2  F004         	goto	u3491
  1718  000960  EFB4  F004         	goto	u3490
  1719  000964                     u3491:
  1720  000964  EFB6  F004         	goto	l5017
  1721  000968                     u3490:
  1722  000968  EFC3  F004         	goto	l223
  1723  00096C                     l5017:
  1724                           
  1725                           ;main.c: 457:                                     {;main.c: 458:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  1726  00096C  0E60               	movlw	low _Serial_Buffer_Out
  1727  00096E  2415               	addwf	_i^0,w,c
  1728  000970  6ED9               	movwf	fsr2l,c
  1729  000972  0E00               	movlw	high _Serial_Buffer_Out
  1730  000974  2016               	addwfc	(_i+1)^0,w,c
  1731  000976  6EDA               	movwf	fsr2h,c
  1732  000978  50DF               	movf	indf2,w,c
  1733  00097A  EC10  F00F         	call	_Write1USART
  1734  00097E                     
  1735                           ;main.c: 459:                                     }
  1736  00097E  4A15               	infsnz	_i^0,f,c
  1737  000980  2A16               	incf	(_i+1)^0,f,c
  1738  000982  EFA9  F004         	goto	l5013
  1739  000986                     l223:
  1740                           
  1741                           ;main.c: 460:                                     INTCONbits.GIE=1;
  1742  000986  8EF2               	bsf	242,7,c	;volatile
  1743  000988                     l5023:
  1744                           
  1745                           ;main.c: 464:                                 flush();
  1746  000988  EC28  F00E         	call	_flush	;wreg free
  1747                           
  1748                           ;main.c: 465:                                 flushOut();
  1749  00098C  EC45  F00E         	call	_flushOut	;wreg free
  1750  000990                     
  1751                           ;main.c: 466:                                 Stop = 0;
  1752  000990  0E00               	movlw	0
  1753  000992  6E35               	movwf	_Stop^0,c
  1754  000994                     l5027:
  1755                           
  1756                           ;main.c: 467:                                 Busy = 0;
  1757  000994  0E00               	movlw	0
  1758  000996  6E33               	movwf	_Busy^0,c
  1759                           
  1760                           ;main.c: 468:                                 break;
  1761  000998  EF62  F006         	goto	l5151
  1762  00099C                     l5029:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;main.c: 473:                             if(Busy==0)
  1766  00099C  5033               	movf	_Busy^0,w,c
  1767  00099E  A4D8               	btfss	status,2,c
  1768  0009A0  EFD4  F004         	goto	u3501
  1769  0009A4  EFD6  F004         	goto	u3500
  1770  0009A8                     u3501:
  1771  0009A8  EF62  F006         	goto	l5151
  1772  0009AC                     u3500:
  1773  0009AC                     
  1774                           ; BSR set to: 0
  1775                           ;main.c: 474:                             {;main.c: 475:                                
      +                           Busy = 1;
  1776  0009AC  0E01               	movlw	1
  1777  0009AE  6E33               	movwf	_Busy^0,c
  1778  0009B0                     
  1779                           ; BSR set to: 0
  1780                           ;main.c: 479:                                     pause_Time = Serial_Buffer[2];
  1781  0009B0  C003  F02F         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  1782                           
  1783                           ;main.c: 480:                                     switch(pause_Time)
  1784  0009B4  EF02  F005         	goto	l5049
  1785  0009B8                     l5035:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 484:                                             Motor_Pause_Time = 0;
  1789  0009B8  0E00               	movlw	0
  1790  0009BA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1791  0009BC  0E00               	movlw	0
  1792  0009BE  6E1B               	movwf	_Motor_Pause_Time^0,c
  1793                           
  1794                           ;main.c: 485:                                             pause_Time = 0x30;
  1795  0009C0  0E30               	movlw	48
  1796  0009C2  6E2F               	movwf	_pause_Time^0,c	;volatile
  1797                           
  1798                           ;main.c: 486:                                             break;
  1799  0009C4  EF27  F005         	goto	l230
  1800  0009C8                     l5037:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;main.c: 489:                                             Motor_Pause_Time = 1000;
  1804  0009C8  0E03               	movlw	3
  1805  0009CA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1806  0009CC  0EE8               	movlw	232
  1807  0009CE  6E1B               	movwf	_Motor_Pause_Time^0,c
  1808                           
  1809                           ;main.c: 490:                                             break;
  1810  0009D0  EF27  F005         	goto	l230
  1811  0009D4                     l5039:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 493:                                             Motor_Pause_Time = 2000;
  1815  0009D4  0E07               	movlw	7
  1816  0009D6  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1817  0009D8  0ED0               	movlw	208
  1818  0009DA  6E1B               	movwf	_Motor_Pause_Time^0,c
  1819                           
  1820                           ;main.c: 494:                                             break;
  1821  0009DC  EF27  F005         	goto	l230
  1822  0009E0                     l5041:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 497:                                             Motor_Pause_Time = 3000;
  1826  0009E0  0E0B               	movlw	11
  1827  0009E2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1828  0009E4  0EB8               	movlw	184
  1829  0009E6  6E1B               	movwf	_Motor_Pause_Time^0,c
  1830                           
  1831                           ;main.c: 498:                                             break;
  1832  0009E8  EF27  F005         	goto	l230
  1833  0009EC                     l5043:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 501:                                             Motor_Pause_Time = 4000;
  1837  0009EC  0E0F               	movlw	15
  1838  0009EE  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1839  0009F0  0EA0               	movlw	160
  1840  0009F2  6E1B               	movwf	_Motor_Pause_Time^0,c
  1841                           
  1842                           ;main.c: 502:                                             break;
  1843  0009F4  EF27  F005         	goto	l230
  1844  0009F8                     l5045:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 505:                                             Motor_Pause_Time = 5000;
  1848  0009F8  0E13               	movlw	19
  1849  0009FA  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1850  0009FC  0E88               	movlw	136
  1851  0009FE  6E1B               	movwf	_Motor_Pause_Time^0,c
  1852                           
  1853                           ;main.c: 506:                                             break;
  1854  000A00  EF27  F005         	goto	l230
  1855  000A04                     l5049:
  1856                           
  1857                           ; BSR set to: 0
  1858  000A04  502F               	movf	_pause_Time^0,w,c	;volatile
  1859  000A06  6F86               	movwf	??_main& (0+255),b
  1860  000A08  6B87               	clrf	(??_main+1)& (0+255),b
  1861                           
  1862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1863                           ; Switch size 1, requested type "simple"
  1864                           ; Number of cases is 1, Range of values is 0 to 0
  1865                           ; switch strategies available:
  1866                           ; Name         Instructions Cycles
  1867                           ; simple_byte            4     3 (average)
  1868                           ;	Chosen strategy is simple_byte
  1869  000A0A  5187               	movf	(??_main+1)& (0+255),w,b
  1870  000A0C  0A00               	xorlw	0	; case 0
  1871  000A0E  B4D8               	btfsc	status,2,c
  1872  000A10  EF0C  F005         	goto	l5437
  1873  000A14  EFDC  F004         	goto	l5035
  1874  000A18                     l5437:
  1875                           
  1876                           ; BSR set to: 0
  1877                           ; Switch size 1, requested type "simple"
  1878                           ; Number of cases is 6, Range of values is 48 to 53
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte           19    10 (average)
  1882                           ;	Chosen strategy is simple_byte
  1883  000A18  5186               	movf	??_main& (0+255),w,b
  1884  000A1A  0A30               	xorlw	48	; case 48
  1885  000A1C  B4D8               	btfsc	status,2,c
  1886  000A1E  EFDC  F004         	goto	l5035
  1887  000A22  0A01               	xorlw	1	; case 49
  1888  000A24  B4D8               	btfsc	status,2,c
  1889  000A26  EFE4  F004         	goto	l5037
  1890  000A2A  0A03               	xorlw	3	; case 50
  1891  000A2C  B4D8               	btfsc	status,2,c
  1892  000A2E  EFEA  F004         	goto	l5039
  1893  000A32  0A01               	xorlw	1	; case 51
  1894  000A34  B4D8               	btfsc	status,2,c
  1895  000A36  EFF0  F004         	goto	l5041
  1896  000A3A  0A07               	xorlw	7	; case 52
  1897  000A3C  B4D8               	btfsc	status,2,c
  1898  000A3E  EFF6  F004         	goto	l5043
  1899  000A42  0A01               	xorlw	1	; case 53
  1900  000A44  B4D8               	btfsc	status,2,c
  1901  000A46  EFFC  F004         	goto	l5045
  1902  000A4A  EFDC  F004         	goto	l5035
  1903  000A4E                     l230:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 511:                                 INTCONbits.GIE=0;
  1907  000A4E  9EF2               	bcf	242,7,c	;volatile
  1908  000A50                     
  1909                           ; BSR set to: 0
  1910                           ;main.c: 512:                                 write_i2c(0x0060, pause_Time);
  1911  000A50  0E60               	movlw	96
  1912  000A52  6F80               	movwf	write_i2c@address& (0+255),b
  1913  000A54  0E00               	movlw	0
  1914  000A56  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  1915  000A58  0E00               	movlw	0
  1916  000A5A  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  1917  000A5C  0E00               	movlw	0
  1918  000A5E  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  1919  000A60  C02F  F084         	movff	_pause_Time,write_i2c@data	;volatile
  1920  000A64  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  1921  000A66  ECA0  F00D         	call	_write_i2c	;wreg free
  1922  000A6A                     
  1923                           ;main.c: 513:                                 INTCONbits.GIE=1;
  1924  000A6A  8EF2               	bsf	242,7,c	;volatile
  1925  000A6C                     
  1926                           ;main.c: 515:                                 flush();
  1927  000A6C  EC28  F00E         	call	_flush	;wreg free
  1928  000A70  EFCA  F004         	goto	l5027
  1929  000A74                     l5059:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 523:                             if(Busy==0)
  1933  000A74  5033               	movf	_Busy^0,w,c
  1934  000A76  A4D8               	btfss	status,2,c
  1935  000A78  EF40  F005         	goto	u3511
  1936  000A7C  EF42  F005         	goto	u3510
  1937  000A80                     u3511:
  1938  000A80  EF62  F006         	goto	l5151
  1939  000A84                     u3510:
  1940  000A84                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 524:                             {;main.c: 525:                                
      +                           if (Serial_Buffer[2] == 0x00)
  1943  000A84  5003               	movf	(_Serial_Buffer+2)^0,w,c
  1944  000A86  A4D8               	btfss	status,2,c
  1945  000A88  EF48  F005         	goto	u3521
  1946  000A8C  EF4A  F005         	goto	u3520
  1947  000A90                     u3521:
  1948  000A90  EFBB  F005         	goto	l5101
  1949  000A94                     u3520:
  1950  000A94                     
  1951                           ; BSR set to: 0
  1952                           ;main.c: 526:                                 {;main.c: 527:                            
      +                                   Busy = 1;
  1953  000A94  0E01               	movlw	1
  1954  000A96  6E33               	movwf	_Busy^0,c
  1955  000A98                     
  1956                           ; BSR set to: 0
  1957                           ;main.c: 529:                                     INTCONbits.GIE=0;
  1958  000A98  9EF2               	bcf	242,7,c	;volatile
  1959  000A9A                     
  1960                           ; BSR set to: 0
  1961                           ;main.c: 530:                                     pause_Time = read_i2c(0x0060);
  1962  000A9A  0E60               	movlw	96
  1963  000A9C  6F80               	movwf	read_i2c@address& (0+255),b
  1964  000A9E  0E00               	movlw	0
  1965  000AA0  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1966  000AA2  0E00               	movlw	0
  1967  000AA4  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1968  000AA6  0E00               	movlw	0
  1969  000AA8  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1970  000AAA  EC17  F00D         	call	_read_i2c	;wreg free
  1971  000AAE  0100               	movlb	0	; () banked
  1972  000AB0  5180               	movf	?_read_i2c& (0+255),w,b
  1973  000AB2  6E2F               	movwf	_pause_Time^0,c	;volatile
  1974  000AB4                     
  1975                           ; BSR set to: 0
  1976                           ;main.c: 531:                                     vib_Time = read_i2c(0x0040);
  1977  000AB4  0E40               	movlw	64
  1978  000AB6  6F80               	movwf	read_i2c@address& (0+255),b
  1979  000AB8  0E00               	movlw	0
  1980  000ABA  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1981  000ABC  0E00               	movlw	0
  1982  000ABE  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1983  000AC0  0E00               	movlw	0
  1984  000AC2  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  1985  000AC4  EC17  F00D         	call	_read_i2c	;wreg free
  1986  000AC8  0100               	movlb	0	; () banked
  1987  000ACA  5180               	movf	?_read_i2c& (0+255),w,b
  1988  000ACC  6E2E               	movwf	_vib_Time^0,c	;volatile
  1989  000ACE                     
  1990                           ; BSR set to: 0
  1991                           ;main.c: 532:                                     Motor_Speed = read_i2c(0x0030);
  1992  000ACE  0E30               	movlw	48
  1993  000AD0  6F80               	movwf	read_i2c@address& (0+255),b
  1994  000AD2  0E00               	movlw	0
  1995  000AD4  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  1996  000AD6  0E00               	movlw	0
  1997  000AD8  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  1998  000ADA  0E00               	movlw	0
  1999  000ADC  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2000  000ADE  EC17  F00D         	call	_read_i2c	;wreg free
  2001  000AE2  C080  F021         	movff	?_read_i2c,_Motor_Speed
  2002  000AE6  C081  F022         	movff	?_read_i2c+1,_Motor_Speed+1
  2003  000AEA                     
  2004                           ;main.c: 533:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2005  000AEA  0E50               	movlw	80
  2006  000AEC  0100               	movlb	0	; () banked
  2007  000AEE  6F80               	movwf	read_i2c@address& (0+255),b
  2008  000AF0  0E00               	movlw	0
  2009  000AF2  6F81               	movwf	(read_i2c@address+1)& (0+255),b
  2010  000AF4  0E00               	movlw	0
  2011  000AF6  6F82               	movwf	(read_i2c@address+2)& (0+255),b
  2012  000AF8  0E00               	movlw	0
  2013  000AFA  6F83               	movwf	(read_i2c@address+3)& (0+255),b
  2014  000AFC  EC17  F00D         	call	_read_i2c	;wreg free
  2015  000B00  0100               	movlb	0	; () banked
  2016  000B02  5180               	movf	?_read_i2c& (0+255),w,b
  2017  000B04  6E2D               	movwf	_delay_motor_stop_time^0,c	;volatile
  2018  000B06                     
  2019                           ; BSR set to: 0
  2020                           ;main.c: 534:                                     INTCONbits.GIE=1;
  2021  000B06  8EF2               	bsf	242,7,c	;volatile
  2022                           
  2023                           ;main.c: 536:                                     Serial_Buffer_Out[0] = 0x51;
  2024  000B08  0E51               	movlw	81
  2025  000B0A  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2026  000B0C                     
  2027                           ; BSR set to: 0
  2028                           ;main.c: 537:                                     Serial_Buffer_Out[1] = pause_Time;
  2029  000B0C  C02F  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2030  000B10                     
  2031                           ; BSR set to: 0
  2032                           ;main.c: 538:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2033  000B10  C021  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2034  000B14                     
  2035                           ; BSR set to: 0
  2036                           ;main.c: 539:                                     Serial_Buffer_Out[3] = vib_Time;
  2037  000B14  C02E  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2038  000B18                     
  2039                           ; BSR set to: 0
  2040                           ;main.c: 540:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2041  000B18  C02D  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2042  000B1C                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 542:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2045  000B1C  0E02               	movlw	2
  2046  000B1E  0100               	movlb	0	; () banked
  2047  000B20  6F87               	movwf	(??_main+1)& (0+255),b
  2048  000B22  0E04               	movlw	4
  2049  000B24  6F86               	movwf	??_main& (0+255),b
  2050  000B26  0EBA               	movlw	186
  2051  000B28                     u3587:
  2052  000B28  2EE8               	decfsz	wreg,f,c
  2053  000B2A  D7FE               	bra	u3587
  2054  000B2C  2F86               	decfsz	??_main& (0+255),f,b
  2055  000B2E  D7FC               	bra	u3587
  2056  000B30  2F87               	decfsz	(??_main+1)& (0+255),f,b
  2057  000B32  D7FA               	bra	u3587
  2058  000B34  F000               	nop	
  2059  000B36                     
  2060                           ;main.c: 544:                                     INTCONbits.GIE=0;
  2061  000B36  9EF2               	bcf	242,7,c	;volatile
  2062  000B38                     
  2063                           ;main.c: 545:                                     for (i=0; i<5;i++)
  2064  000B38  0E00               	movlw	0
  2065  000B3A  6E16               	movwf	(_i+1)^0,c
  2066  000B3C  0E00               	movlw	0
  2067  000B3E  6E15               	movwf	_i^0,c
  2068  000B40                     l5091:
  2069  000B40  5016               	movf	(_i+1)^0,w,c
  2070  000B42  E109               	bnz	u3530
  2071  000B44  0E05               	movlw	5
  2072  000B46  5C15               	subwf	_i^0,w,c
  2073  000B48  A0D8               	btfss	status,0,c
  2074  000B4A  EFA9  F005         	goto	u3531
  2075  000B4E  EFAB  F005         	goto	u3530
  2076  000B52                     u3531:
  2077  000B52  EFAD  F005         	goto	l5095
  2078  000B56                     u3530:
  2079  000B56  EFBA  F005         	goto	l240
  2080  000B5A                     l5095:
  2081                           
  2082                           ;main.c: 546:                                     {;main.c: 547:                        
      +                                           Write1USART(Serial_Buffer_Out[i]);
  2083  000B5A  0E60               	movlw	low _Serial_Buffer_Out
  2084  000B5C  2415               	addwf	_i^0,w,c
  2085  000B5E  6ED9               	movwf	fsr2l,c
  2086  000B60  0E00               	movlw	high _Serial_Buffer_Out
  2087  000B62  2016               	addwfc	(_i+1)^0,w,c
  2088  000B64  6EDA               	movwf	fsr2h,c
  2089  000B66  50DF               	movf	indf2,w,c
  2090  000B68  EC10  F00F         	call	_Write1USART
  2091  000B6C                     
  2092                           ;main.c: 548:                                     }
  2093  000B6C  4A15               	infsnz	_i^0,f,c
  2094  000B6E  2A16               	incf	(_i+1)^0,f,c
  2095  000B70  EFA0  F005         	goto	l5091
  2096  000B74                     l240:
  2097                           
  2098                           ;main.c: 549:                                     INTCONbits.GIE=1;
  2099  000B74  8EF2               	bsf	242,7,c	;volatile
  2100  000B76                     l5101:
  2101                           
  2102                           ;main.c: 551:                                 flushOut();
  2103  000B76  EC45  F00E         	call	_flushOut	;wreg free
  2104  000B7A  EFCA  F004         	goto	l5027
  2105  000B7E                     l5105:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;main.c: 588:                             if(Busy == 0)
  2109  000B7E  5033               	movf	_Busy^0,w,c
  2110  000B80  A4D8               	btfss	status,2,c
  2111  000B82  EFC5  F005         	goto	u3541
  2112  000B86  EFC7  F005         	goto	u3540
  2113  000B8A                     u3541:
  2114  000B8A  EF1F  F006         	goto	l5131
  2115  000B8E                     u3540:
  2116  000B8E                     
  2117                           ; BSR set to: 0
  2118                           ;main.c: 589:                             {;main.c: 590:                                
      +                           Busy = 1;
  2119  000B8E  0E01               	movlw	1
  2120  000B90  6E33               	movwf	_Busy^0,c
  2121  000B92                     
  2122                           ; BSR set to: 0
  2123                           ;main.c: 591:                                 vib_Time = Serial_Buffer[2];
  2124  000B92  C003  F02E         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2125                           
  2126                           ;main.c: 593:                                 switch(vib_Time)
  2127  000B96  EFED  F005         	goto	l5123
  2128  000B9A                     l5111:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 596:                                         Vmotor_Time=1000;
  2132  000B9A  0E03               	movlw	3
  2133  000B9C  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2134  000B9E  0EE8               	movlw	232
  2135  000BA0  6E56               	movwf	_Vmotor_Time^0,c
  2136                           
  2137                           ;main.c: 597:                                         break;
  2138  000BA2  EF0E  F006         	goto	l245
  2139  000BA6                     l5113:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;main.c: 601:                                         Vmotor_Time=2000;
  2143  000BA6  0E07               	movlw	7
  2144  000BA8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2145  000BAA  0ED0               	movlw	208
  2146  000BAC  6E56               	movwf	_Vmotor_Time^0,c
  2147                           
  2148                           ;main.c: 602:                                         vib_Time=0x82;
  2149  000BAE  0E82               	movlw	130
  2150  000BB0  6E2E               	movwf	_vib_Time^0,c	;volatile
  2151                           
  2152                           ;main.c: 603:                                         break;
  2153  000BB2  EF0E  F006         	goto	l245
  2154  000BB6                     l5115:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;main.c: 606:                                         Vmotor_Time=3000;
  2158  000BB6  0E0B               	movlw	11
  2159  000BB8  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2160  000BBA  0EB8               	movlw	184
  2161  000BBC  6E56               	movwf	_Vmotor_Time^0,c
  2162                           
  2163                           ;main.c: 607:                                         break;
  2164  000BBE  EF0E  F006         	goto	l245
  2165  000BC2                     l5117:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 610:                                         Vmotor_Time=4000;
  2169  000BC2  0E0F               	movlw	15
  2170  000BC4  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2171  000BC6  0EA0               	movlw	160
  2172  000BC8  6E56               	movwf	_Vmotor_Time^0,c
  2173                           
  2174                           ;main.c: 611:                                         break;
  2175  000BCA  EF0E  F006         	goto	l245
  2176  000BCE                     l5119:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;main.c: 614:                                         Vmotor_Time=5000;
  2180  000BCE  0E13               	movlw	19
  2181  000BD0  6E57               	movwf	(_Vmotor_Time+1)^0,c
  2182  000BD2  0E88               	movlw	136
  2183  000BD4  6E56               	movwf	_Vmotor_Time^0,c
  2184                           
  2185                           ;main.c: 615:                                         break;
  2186  000BD6  EF0E  F006         	goto	l245
  2187  000BDA                     l5123:
  2188                           
  2189                           ; BSR set to: 0
  2190  000BDA  502E               	movf	_vib_Time^0,w,c	;volatile
  2191  000BDC  6F86               	movwf	??_main& (0+255),b
  2192  000BDE  6B87               	clrf	(??_main+1)& (0+255),b
  2193                           
  2194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2195                           ; Switch size 1, requested type "simple"
  2196                           ; Number of cases is 1, Range of values is 0 to 0
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte            4     3 (average)
  2200                           ;	Chosen strategy is simple_byte
  2201  000BE0  5187               	movf	(??_main+1)& (0+255),w,b
  2202  000BE2  0A00               	xorlw	0	; case 0
  2203  000BE4  B4D8               	btfsc	status,2,c
  2204  000BE6  EFF7  F005         	goto	l5439
  2205  000BEA  EFD3  F005         	goto	l5113
  2206  000BEE                     l5439:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ; Switch size 1, requested type "simple"
  2210                           ; Number of cases is 5, Range of values is 129 to 133
  2211                           ; switch strategies available:
  2212                           ; Name         Instructions Cycles
  2213                           ; simple_byte           16     9 (average)
  2214                           ;	Chosen strategy is simple_byte
  2215  000BEE  5186               	movf	??_main& (0+255),w,b
  2216  000BF0  0A81               	xorlw	129	; case 129
  2217  000BF2  B4D8               	btfsc	status,2,c
  2218  000BF4  EFCD  F005         	goto	l5111
  2219  000BF8  0A03               	xorlw	3	; case 130
  2220  000BFA  B4D8               	btfsc	status,2,c
  2221  000BFC  EFD3  F005         	goto	l5113
  2222  000C00  0A01               	xorlw	1	; case 131
  2223  000C02  B4D8               	btfsc	status,2,c
  2224  000C04  EFDB  F005         	goto	l5115
  2225  000C08  0A07               	xorlw	7	; case 132
  2226  000C0A  B4D8               	btfsc	status,2,c
  2227  000C0C  EFE1  F005         	goto	l5117
  2228  000C10  0A01               	xorlw	1	; case 133
  2229  000C12  B4D8               	btfsc	status,2,c
  2230  000C14  EFE7  F005         	goto	l5119
  2231  000C18  EFD3  F005         	goto	l5113
  2232  000C1C                     l245:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 617:                                     INTCONbits.GIE=0;
  2236  000C1C  9EF2               	bcf	242,7,c	;volatile
  2237  000C1E                     
  2238                           ; BSR set to: 0
  2239                           ;main.c: 618:                                     write_i2c(0x0040,vib_Time);
  2240  000C1E  0E40               	movlw	64
  2241  000C20  6F80               	movwf	write_i2c@address& (0+255),b
  2242  000C22  0E00               	movlw	0
  2243  000C24  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2244  000C26  0E00               	movlw	0
  2245  000C28  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2246  000C2A  0E00               	movlw	0
  2247  000C2C  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2248  000C2E  C02E  F084         	movff	_vib_Time,write_i2c@data	;volatile
  2249  000C32  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2250  000C34  ECA0  F00D         	call	_write_i2c	;wreg free
  2251  000C38                     
  2252                           ;main.c: 619:                                     INTCONbits.GIE=1;
  2253  000C38  8EF2               	bsf	242,7,c	;volatile
  2254  000C3A                     
  2255                           ;main.c: 621:                                     Busy = 0;
  2256  000C3A  0E00               	movlw	0
  2257  000C3C  6E33               	movwf	_Busy^0,c
  2258  000C3E                     l5131:
  2259                           
  2260                           ;main.c: 626:                             if(Busy == 0)
  2261  000C3E  5033               	movf	_Busy^0,w,c
  2262  000C40  A4D8               	btfss	status,2,c
  2263  000C42  EF25  F006         	goto	u3551
  2264  000C46  EF27  F006         	goto	u3550
  2265  000C4A                     u3551:
  2266  000C4A  EF62  F006         	goto	l5151
  2267  000C4E                     u3550:
  2268  000C4E                     
  2269                           ;main.c: 627:                             {;main.c: 628:                                
      +                           Busy = 1;
  2270  000C4E  0E01               	movlw	1
  2271  000C50  6E33               	movwf	_Busy^0,c
  2272  000C52                     
  2273                           ;main.c: 629:                                 delay_motor_stop_time = Serial_Buffer[2];
  2274  000C52  C003  F02D         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2275  000C56                     
  2276                           ;main.c: 630:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2277  000C56  C02D  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2278  000C5A  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2279  000C5C                     
  2280                           ;main.c: 632:                                 INTCONbits.GIE=0;
  2281  000C5C  9EF2               	bcf	242,7,c	;volatile
  2282  000C5E                     
  2283                           ;main.c: 633:                                 write_i2c(0x0050,delay_motor_stop_time);
  2284  000C5E  0E50               	movlw	80
  2285  000C60  0100               	movlb	0	; () banked
  2286  000C62  6F80               	movwf	write_i2c@address& (0+255),b
  2287  000C64  0E00               	movlw	0
  2288  000C66  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  2289  000C68  0E00               	movlw	0
  2290  000C6A  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  2291  000C6C  0E00               	movlw	0
  2292  000C6E  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  2293  000C70  C02D  F084         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2294  000C74  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  2295  000C76  ECA0  F00D         	call	_write_i2c	;wreg free
  2296  000C7A                     
  2297                           ;main.c: 634:                                 INTCONbits.GIE=1;
  2298  000C7A  8EF2               	bsf	242,7,c	;volatile
  2299  000C7C  EFCA  F004         	goto	l5027
  2300  000C80                     l5149:
  2301  000C80  5002               	movf	(_Serial_Buffer+1)^0,w,c
  2302  000C82  0100               	movlb	0	; () banked
  2303  000C84  6F86               	movwf	??_main& (0+255),b
  2304  000C86  6B87               	clrf	(??_main+1)& (0+255),b
  2305                           
  2306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2307                           ; Switch size 1, requested type "simple"
  2308                           ; Number of cases is 1, Range of values is 0 to 0
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte            4     3 (average)
  2312                           ;	Chosen strategy is simple_byte
  2313  000C88  5187               	movf	(??_main+1)& (0+255),w,b
  2314  000C8A  0A00               	xorlw	0	; case 0
  2315  000C8C  B4D8               	btfsc	status,2,c
  2316  000C8E  EF4B  F006         	goto	l5441
  2317  000C92  EF62  F006         	goto	l5151
  2318  000C96                     l5441:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ; Switch size 1, requested type "simple"
  2322                           ; Number of cases is 5, Range of values is 35 to 102
  2323                           ; switch strategies available:
  2324                           ; Name         Instructions Cycles
  2325                           ; simple_byte           16     9 (average)
  2326                           ;	Chosen strategy is simple_byte
  2327  000C96  5186               	movf	??_main& (0+255),w,b
  2328  000C98  0A23               	xorlw	35	; case 35
  2329  000C9A  B4D8               	btfsc	status,2,c
  2330  000C9C  EFCE  F004         	goto	l5029
  2331  000CA0  0A67               	xorlw	103	; case 68
  2332  000CA2  B4D8               	btfsc	status,2,c
  2333  000CA4  EF41  F004         	goto	l4983
  2334  000CA8  0A15               	xorlw	21	; case 81
  2335  000CAA  B4D8               	btfsc	status,2,c
  2336  000CAC  EF3A  F005         	goto	l5059
  2337  000CB0  0A34               	xorlw	52	; case 101
  2338  000CB2  B4D8               	btfsc	status,2,c
  2339  000CB4  EFBF  F005         	goto	l5105
  2340  000CB8  0A03               	xorlw	3	; case 102
  2341  000CBA  B4D8               	btfsc	status,2,c
  2342  000CBC  EF1F  F006         	goto	l5131
  2343  000CC0  EF62  F006         	goto	l5151
  2344  000CC4                     l5151:
  2345                           
  2346                           ;main.c: 643:                     Serial_Flag = 0;
  2347  000CC4  0E00               	movlw	0
  2348  000CC6  6E37               	movwf	_Serial_Flag^0,c
  2349                           
  2350                           ;main.c: 644:                     Serial_GData = 0;
  2351  000CC8  0E00               	movlw	0
  2352  000CCA  6E36               	movwf	_Serial_GData^0,c
  2353                           
  2354                           ;main.c: 645:                     OpMode = MANUAL_MODE;
  2355  000CCC  0E00               	movlw	0
  2356  000CCE  6E30               	movwf	_OpMode^0,c	;volatile
  2357                           
  2358                           ;main.c: 646:                 }
  2359  000CD0  EF63  F003         	goto	l190
  2360  000CD4                     l5153:
  2361                           
  2362                           ;main.c: 648:                 {;main.c: 649:                     OpMode = MANUAL_MODE;
  2363  000CD4  0E00               	movlw	0
  2364  000CD6  6E30               	movwf	_OpMode^0,c	;volatile
  2365  000CD8  EF63  F003         	goto	l190
  2366  000CDC                     l5155:
  2367  000CDC  5030               	movf	_OpMode^0,w,c	;volatile
  2368  000CDE  0100               	movlb	0	; () banked
  2369  000CE0  6F86               	movwf	??_main& (0+255),b
  2370  000CE2  6B87               	clrf	(??_main+1)& (0+255),b
  2371                           
  2372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2373                           ; Switch size 1, requested type "simple"
  2374                           ; Number of cases is 1, Range of values is 0 to 0
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte            4     3 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379  000CE4  5187               	movf	(??_main+1)& (0+255),w,b
  2380  000CE6  0A00               	xorlw	0	; case 0
  2381  000CE8  B4D8               	btfsc	status,2,c
  2382  000CEA  EF79  F006         	goto	l5443
  2383  000CEE  EF63  F003         	goto	l190
  2384  000CF2                     l5443:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 2, Range of values is 0 to 2
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            7     4 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393  000CF2  5186               	movf	??_main& (0+255),w,b
  2394  000CF4  0A00               	xorlw	0	; case 0
  2395  000CF6  B4D8               	btfsc	status,2,c
  2396  000CF8  EF70  F003         	goto	l192
  2397  000CFC  0A02               	xorlw	2	; case 2
  2398  000CFE  B4D8               	btfsc	status,2,c
  2399  000D00  EF37  F004         	goto	l4979
  2400  000D04  EF63  F003         	goto	l190
  2401  000D08  EF4D  F001         	goto	start
  2402  000D0C                     __end_of_main:
  2403                           	opt callstack 0
  2404                           
  2405 ;; *************** function _read_i2c *****************
  2406 ;; Defined at:
  2407 ;;		line 118 in file "i2c.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  address         4    0[BANK0 ] long 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  read_byte       2   20[COMRAM] int 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    0[BANK0 ] int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        6 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    4
  2428 ;; This function calls:
  2429 ;;		___aldiv
  2430 ;;		_i2c_Address
  2431 ;;		_i2c_Read
  2432 ;;		_i2c_Restart
  2433 ;;		_i2c_Start
  2434 ;;		_i2c_Stop
  2435 ;;		_i2c_Write
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text1
  2442  001A2E                     __ptext1:
  2443                           	opt callstack 0
  2444  001A2E                     _read_i2c:
  2445                           	opt callstack 26
  2446  001A2E                     
  2447                           ;i2c.c: 118: int read_i2c(long address);i2c.c: 119: {;i2c.c: 120:  int read_byte;;i2c.c:
      +                           123:  i2c_Start();
  2448  001A2E  EC55  F00F         	call	_i2c_Start	;wreg free
  2449                           
  2450                           ;i2c.c: 124:  i2c_Address(0xA0, 0);
  2451  001A32  0E00               	movlw	0
  2452  001A34  6E3F               	movwf	i2c_Address@mode^0,c
  2453  001A36  0EA0               	movlw	160
  2454  001A38  EC26  F00F         	call	_i2c_Address
  2455                           
  2456                           ;i2c.c: 125:  i2c_Write((unsigned char)(address/0x100));
  2457  001A3C  C080  F03E         	movff	read_i2c@address,___aldiv@dividend
  2458  001A40  C081  F03F         	movff	read_i2c@address+1,___aldiv@dividend+1
  2459  001A44  C082  F040         	movff	read_i2c@address+2,___aldiv@dividend+2
  2460  001A48  C083  F041         	movff	read_i2c@address+3,___aldiv@dividend+3
  2461  001A4C  0E00               	movlw	0
  2462  001A4E  6E42               	movwf	___aldiv@divisor^0,c
  2463  001A50  0E01               	movlw	1
  2464  001A52  6E43               	movwf	(___aldiv@divisor+1)^0,c
  2465  001A54  0E00               	movlw	0
  2466  001A56  6E44               	movwf	(___aldiv@divisor+2)^0,c
  2467  001A58  0E00               	movlw	0
  2468  001A5A  6E45               	movwf	(___aldiv@divisor+3)^0,c
  2469  001A5C  ECE1  F008         	call	___aldiv	;wreg free
  2470  001A60  503E               	movf	?___aldiv^0,w,c
  2471  001A62  EC37  F00F         	call	_i2c_Write
  2472                           
  2473                           ;i2c.c: 126:  i2c_Write((unsigned char)(address&0xFF));
  2474  001A66  0100               	movlb	0	; () banked
  2475  001A68  5180               	movf	read_i2c@address& (0+255),w,b
  2476  001A6A  EC37  F00F         	call	_i2c_Write
  2477                           
  2478                           ;i2c.c: 127:  i2c_Restart();
  2479  001A6E  EC4D  F00F         	call	_i2c_Restart	;wreg free
  2480                           
  2481                           ;i2c.c: 128:  i2c_Address(0xA0, 1);
  2482  001A72  0E01               	movlw	1
  2483  001A74  6E3F               	movwf	i2c_Address@mode^0,c
  2484  001A76  0EA0               	movlw	160
  2485  001A78  EC26  F00F         	call	_i2c_Address
  2486                           
  2487                           ;i2c.c: 129:  read_byte = i2c_Read(0);
  2488  001A7C  0E00               	movlw	0
  2489  001A7E  EC62  F00E         	call	_i2c_Read
  2490  001A82  C03F  F04C         	movff	?_i2c_Read,read_i2c@read_byte
  2491  001A86  C040  F04D         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2492                           
  2493                           ;i2c.c: 133:     i2c_Stop();
  2494  001A8A  EC51  F00F         	call	_i2c_Stop	;wreg free
  2495  001A8E                     
  2496                           ;i2c.c: 134:  return (read_byte);
  2497  001A8E  C04C  F080         	movff	read_i2c@read_byte,?_read_i2c
  2498  001A92  C04D  F081         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2499  001A96  0012               	return		;funcret
  2500  001A98                     __end_of_read_i2c:
  2501                           	opt callstack 0
  2502                           
  2503 ;; *************** function _i2c_Restart *****************
  2504 ;; Defined at:
  2505 ;;		line 53 in file "i2c.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		_i2c_Wait
  2528 ;; This function is called by:
  2529 ;;		_read_i2c
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text2
  2534  001E9A                     __ptext2:
  2535                           	opt callstack 0
  2536  001E9A                     _i2c_Restart:
  2537                           	opt callstack 26
  2538  001E9A                     
  2539                           ;i2c.c: 54:   i2c_Wait();
  2540  001E9A  ECC1  F00E         	call	_i2c_Wait	;wreg free
  2541  001E9E                     
  2542                           ;i2c.c: 55:  RSEN2=1;
  2543  001E9E  826B               	bsf	3947,1,c	;volatile
  2544  001EA0  0012               	return		;funcret
  2545  001EA2                     __end_of_i2c_Restart:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _i2c_Read *****************
  2549 ;; Defined at:
  2550 ;;		line 85 in file "i2c.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  ack             1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  ack             1    9[COMRAM] unsigned char 
  2555 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    7[COMRAM] int 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;Total ram usage:        4 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    3
  2572 ;; This function calls:
  2573 ;;		_i2c_Wait
  2574 ;; This function is called by:
  2575 ;;		_read_i2c
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text3
  2580  001CC4                     __ptext3:
  2581                           	opt callstack 0
  2582  001CC4                     _i2c_Read:
  2583                           	opt callstack 26
  2584                           
  2585                           ;incstack = 0
  2586                           ;i2c_Read@ack stored from wreg
  2587  001CC4  6E41               	movwf	i2c_Read@ack^0,c
  2588  001CC6                     
  2589                           ;i2c.c: 85: int i2c_Read(unsigned char ack);i2c.c: 86: {;i2c.c: 90:   unsigned char i2cR
      +                          eadData;;i2c.c: 92:   i2c_Wait();
  2590  001CC6  ECC1  F00E         	call	_i2c_Wait	;wreg free
  2591  001CCA                     
  2592                           ;i2c.c: 93:  RCEN2=1;
  2593  001CCA  866B               	bsf	3947,3,c	;volatile
  2594                           
  2595                           ;i2c.c: 94:   i2c_Wait();
  2596  001CCC  ECC1  F00E         	call	_i2c_Wait	;wreg free
  2597  001CD0                     
  2598                           ;i2c.c: 95:   i2cReadData = SSP2BUF;
  2599  001CD0  CF6F F042          	movff	3951,i2c_Read@i2cReadData	;volatile
  2600                           
  2601                           ;i2c.c: 96:   i2c_Wait();
  2602  001CD4  ECC1  F00E         	call	_i2c_Wait	;wreg free
  2603  001CD8                     
  2604                           ;i2c.c: 97:   if ( ack )
  2605  001CD8  5041               	movf	i2c_Read@ack^0,w,c
  2606  001CDA  B4D8               	btfsc	status,2,c
  2607  001CDC  EF72  F00E         	goto	u1671
  2608  001CE0  EF74  F00E         	goto	u1670
  2609  001CE4                     u1671:
  2610  001CE4  EF77  F00E         	goto	l520
  2611  001CE8                     u1670:
  2612  001CE8                     
  2613                           ;i2c.c: 98:   ACKDT2=0;
  2614  001CE8  9A6B               	bcf	3947,5,c	;volatile
  2615  001CEA  EF78  F00E         	goto	l521
  2616  001CEE                     l520:
  2617                           
  2618                           ;i2c.c: 100:   ACKDT2=1;
  2619  001CEE  8A6B               	bsf	3947,5,c	;volatile
  2620  001CF0                     l521:
  2621                           
  2622                           ;i2c.c: 101:  ACKEN2=1;
  2623  001CF0  886B               	bsf	3947,4,c	;volatile
  2624                           
  2625                           ;i2c.c: 103:  return( i2cReadData );
  2626  001CF2  C042  F03F         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2627  001CF6  6A40               	clrf	(?_i2c_Read+1)^0,c
  2628  001CF8  0012               	return		;funcret
  2629  001CFA                     __end_of_i2c_Read:
  2630                           	opt callstack 0
  2631                           
  2632 ;; *************** function _initUSART *****************
  2633 ;; Defined at:
  2634 ;;		line 20 in file "usart.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text4
  2663  001D5C                     __ptext4:
  2664                           	opt callstack 0
  2665  001D5C                     _initUSART:
  2666                           	opt callstack 28
  2667  001D5C                     
  2668                           ;usart.c: 23:     TRISCbits.TRISC6 = 0;
  2669  001D5C  9C94               	bcf	148,6,c	;volatile
  2670                           
  2671                           ;usart.c: 24:     TRISCbits.TRISC7 = 1;
  2672  001D5E  8E94               	bsf	148,7,c	;volatile
  2673                           
  2674                           ;usart.c: 25:     TXSTA1bits.SYNC = 0;
  2675  001D60  98AD               	bcf	173,4,c	;volatile
  2676                           
  2677                           ;usart.c: 26:     TXSTA1bits.TX9 = 0;
  2678  001D62  9CAD               	bcf	173,6,c	;volatile
  2679                           
  2680                           ;usart.c: 27:     TXSTA1bits.TXEN = 1;
  2681  001D64  8AAD               	bsf	173,5,c	;volatile
  2682                           
  2683                           ;usart.c: 28:     RCSTA1bits.RX9 = 0;
  2684  001D66  9CAC               	bcf	172,6,c	;volatile
  2685                           
  2686                           ;usart.c: 29:     RCSTA1bits.CREN = 1;
  2687  001D68  88AC               	bsf	172,4,c	;volatile
  2688                           
  2689                           ;usart.c: 30:     TXSTA1bits.CSRC = 0;
  2690  001D6A  9EAD               	bcf	173,7,c	;volatile
  2691                           
  2692                           ;usart.c: 31:     RCSTA1bits.ADDEN = 1;
  2693  001D6C  86AC               	bsf	172,3,c	;volatile
  2694                           
  2695                           ;usart.c: 32:     RCSTA1bits.SPEN = 1;
  2696  001D6E  8EAC               	bsf	172,7,c	;volatile
  2697                           
  2698                           ;usart.c: 35:     BAUDCON1bits.BRG16 = 0;
  2699  001D70  967E               	bcf	126,3,c	;volatile
  2700                           
  2701                           ;usart.c: 36:     TXSTA1bits.BRGH = 1;
  2702  001D72  84AD               	bsf	173,2,c	;volatile
  2703                           
  2704                           ;usart.c: 37:     PIE1bits.RC1IE = 1;
  2705  001D74  8A9D               	bsf	157,5,c	;volatile
  2706                           
  2707                           ;usart.c: 38:     PIE1bits.TX1IE = 0;
  2708  001D76  989D               	bcf	157,4,c	;volatile
  2709  001D78                     
  2710                           ;usart.c: 40:     SPBRG1 = 25;
  2711  001D78  0E19               	movlw	25
  2712  001D7A  6EB0               	movwf	176,c	;volatile
  2713                           
  2714                           ;usart.c: 41:     SPBRGH1 = 0;
  2715  001D7C  0E00               	movlw	0
  2716  001D7E  6E7F               	movwf	127,c	;volatile
  2717  001D80  0012               	return		;funcret
  2718  001D82                     __end_of_initUSART:
  2719                           	opt callstack 0
  2720                           
  2721 ;; *************** function _initMotor *****************
  2722 ;; Defined at:
  2723 ;;		line 21 in file "MotorDriver.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    2
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text5
  2752  001E60                     __ptext5:
  2753                           	opt callstack 0
  2754  001E60                     _initMotor:
  2755                           	opt callstack 28
  2756  001E60                     
  2757                           ;MotorDriver.c: 23:     PR4 = 0xC7;
  2758  001E60  0EC7               	movlw	199
  2759  001E62  6E77               	movwf	119,c	;volatile
  2760  001E64                     
  2761                           ;MotorDriver.c: 24:     T3CONbits.T3CCP1 = 0;
  2762  001E64  9679               	bcf	121,3,c	;volatile
  2763  001E66                     
  2764                           ;MotorDriver.c: 25:     T3CONbits.T3CCP2 = 1;
  2765  001E66  8C79               	bsf	121,6,c	;volatile
  2766                           
  2767                           ;MotorDriver.c: 26:     T4CON = 0x00;
  2768  001E68  0E00               	movlw	0
  2769  001E6A  6E76               	movwf	118,c	;volatile
  2770  001E6C  0012               	return		;funcret
  2771  001E6E                     __end_of_initMotor:
  2772                           	opt callstack 0
  2773                           
  2774 ;; *************** function _init *****************
  2775 ;; Defined at:
  2776 ;;		line 18 in file "IO.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text6
  2805  0019BC                     __ptext6:
  2806                           	opt callstack 0
  2807  0019BC                     _init:
  2808                           	opt callstack 28
  2809  0019BC                     
  2810                           ;IO.c: 20:     TRISA = 0xFB;
  2811  0019BC  0EFB               	movlw	251
  2812  0019BE  6E92               	movwf	146,c	;volatile
  2813  0019C0                     
  2814                           ;IO.c: 21:     TRISB = 0XFF;
  2815  0019C0  6893               	setf	147,c	;volatile
  2816                           
  2817                           ;IO.c: 22:     TRISC = 0X84;
  2818  0019C2  0E84               	movlw	132
  2819  0019C4  6E94               	movwf	148,c	;volatile
  2820                           
  2821                           ;IO.c: 23:     TRISD = 0XC0;
  2822  0019C6  0EC0               	movlw	192
  2823  0019C8  6E95               	movwf	149,c	;volatile
  2824                           
  2825                           ;IO.c: 24:     TRISE = 0X00;
  2826  0019CA  0E00               	movlw	0
  2827  0019CC  6E96               	movwf	150,c	;volatile
  2828                           
  2829                           ;IO.c: 25:     TRISF = 0X00;
  2830  0019CE  0E00               	movlw	0
  2831  0019D0  6E97               	movwf	151,c	;volatile
  2832                           
  2833                           ;IO.c: 26:     TRISG = 0X05;
  2834  0019D2  0E05               	movlw	5
  2835  0019D4  6E98               	movwf	152,c	;volatile
  2836  0019D6                     
  2837                           ;IO.c: 29:     ADCON0bits.VCFG1 = 0;
  2838  0019D6  9EC2               	bcf	194,7,c	;volatile
  2839  0019D8                     
  2840                           ;IO.c: 30:  ADCON0bits.VCFG0 = 0;
  2841  0019D8  9CC2               	bcf	194,6,c	;volatile
  2842  0019DA                     
  2843                           ;IO.c: 31:     ADCON0bits.ADON=0;
  2844  0019DA  90C2               	bcf	194,0,c	;volatile
  2845  0019DC                     
  2846                           ;IO.c: 34:  ADCON1bits.ADFM = 1;
  2847  0019DC  8EC1               	bsf	193,7,c	;volatile
  2848  0019DE                     
  2849                           ;IO.c: 35:  ADCON1bits.ADCAL = 0;
  2850  0019DE  9CC1               	bcf	193,6,c	;volatile
  2851  0019E0                     
  2852                           ;IO.c: 36:  ADCON1bits.ACQT2 = 0;
  2853  0019E0  9AC1               	bcf	193,5,c	;volatile
  2854  0019E2                     
  2855                           ;IO.c: 37:  ADCON1bits.ACQT1 = 1;
  2856  0019E2  88C1               	bsf	193,4,c	;volatile
  2857  0019E4                     
  2858                           ;IO.c: 38:  ADCON1bits.ACQT0 = 0;
  2859  0019E4  96C1               	bcf	193,3,c	;volatile
  2860  0019E6                     
  2861                           ;IO.c: 39:  ADCON1bits.ADCS2 = 1;
  2862  0019E6  84C1               	bsf	193,2,c	;volatile
  2863  0019E8                     
  2864                           ;IO.c: 40:  ADCON1bits.ADCS1 = 0;
  2865  0019E8  92C1               	bcf	193,1,c	;volatile
  2866  0019EA                     
  2867                           ;IO.c: 41:  ADCON1bits.ADCS0 = 0;
  2868  0019EA  90C1               	bcf	193,0,c	;volatile
  2869  0019EC                     
  2870                           ;IO.c: 46:  WDTCONbits.ADSHR = 1;
  2871  0019EC  88C0               	bsf	192,4,c	;volatile
  2872  0019EE                     
  2873                           ;IO.c: 52:  ANCON0bits.PCFG0 = 0;
  2874  0019EE  90C1               	bcf	193,0,c	;volatile
  2875  0019F0                     
  2876                           ;IO.c: 53:  ANCON0bits.PCFG1 = 1;
  2877  0019F0  82C1               	bsf	193,1,c	;volatile
  2878  0019F2                     
  2879                           ;IO.c: 54:  ANCON0bits.PCFG2 = 1;
  2880  0019F2  84C1               	bsf	193,2,c	;volatile
  2881  0019F4                     
  2882                           ;IO.c: 55:  ANCON0bits.PCFG3 = 1;
  2883  0019F4  86C1               	bsf	193,3,c	;volatile
  2884  0019F6                     
  2885                           ;IO.c: 56:  ANCON0bits.PCFG4 = 1;
  2886  0019F6  88C1               	bsf	193,4,c	;volatile
  2887  0019F8                     
  2888                           ;IO.c: 57:     ANCON0bits.PCFG7 = 1;
  2889  0019F8  8EC1               	bsf	193,7,c	;volatile
  2890  0019FA                     
  2891                           ;IO.c: 59:     WDTCONbits.ADSHR = 0;
  2892  0019FA  98C0               	bcf	192,4,c	;volatile
  2893  0019FC                     
  2894                           ;IO.c: 61:     INTCONbits.GIE = 1;
  2895  0019FC  8EF2               	bsf	242,7,c	;volatile
  2896                           
  2897                           ;IO.c: 66:     OSCCONbits.SCS = 0b11;
  2898  0019FE  0E03               	movlw	3
  2899  001A00  12D3               	iorwf	211,f,c	;volatile
  2900                           
  2901                           ;IO.c: 67:     OSCCONbits.IRCF = 0b111;
  2902  001A02  0E70               	movlw	112
  2903  001A04  12D3               	iorwf	211,f,c	;volatile
  2904                           
  2905                           ;IO.c: 69:     ADRES = 0;
  2906  001A06  0E00               	movlw	0
  2907  001A08  6EC4               	movwf	196,c	;volatile
  2908  001A0A  0E00               	movlw	0
  2909  001A0C  6EC3               	movwf	195,c	;volatile
  2910  001A0E                     
  2911                           ;IO.c: 72:  ADCON0bits.CHS0 = 0;
  2912  001A0E  94C2               	bcf	194,2,c	;volatile
  2913  001A10                     
  2914                           ;IO.c: 73:  ADCON0bits.CHS1 = 0;
  2915  001A10  96C2               	bcf	194,3,c	;volatile
  2916  001A12                     
  2917                           ;IO.c: 74:  ADCON0bits.CHS2 = 0;
  2918  001A12  98C2               	bcf	194,4,c	;volatile
  2919  001A14                     
  2920                           ;IO.c: 75:  ADCON0bits.CHS3 = 0;
  2921  001A14  9AC2               	bcf	194,5,c	;volatile
  2922  001A16                     
  2923                           ;IO.c: 76:  ADCON1bits.ADCAL = 1;
  2924  001A16  8CC1               	bsf	193,6,c	;volatile
  2925  001A18                     
  2926                           ;IO.c: 77:  ADCON0bits.ADON=1;
  2927  001A18  80C2               	bsf	194,0,c	;volatile
  2928  001A1A                     
  2929                           ;IO.c: 79:  ADCON0bits.GO=1;
  2930  001A1A  82C2               	bsf	194,1,c	;volatile
  2931  001A1C                     l591:
  2932  001A1C  B2C2               	btfsc	194,1,c	;volatile
  2933  001A1E  EF13  F00D         	goto	u1681
  2934  001A22  EF15  F00D         	goto	u1680
  2935  001A26                     u1681:
  2936  001A26  EF0E  F00D         	goto	l591
  2937  001A2A                     u1680:
  2938  001A2A                     
  2939                           ;IO.c: 81:  ADCON1bits.ADCAL = 0;
  2940  001A2A  9CC1               	bcf	193,6,c	;volatile
  2941  001A2C  0012               	return		;funcret
  2942  001A2E                     __end_of_init:
  2943                           	opt callstack 0
  2944                           
  2945 ;; *************** function _i2c_Init *****************
  2946 ;; Defined at:
  2947 ;;		line 24 in file "i2c.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    2
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text7
  2976  001E0A                     __ptext7:
  2977                           	opt callstack 0
  2978  001E0A                     _i2c_Init:
  2979                           	opt callstack 28
  2980  001E0A                     
  2981                           ;i2c.c: 28:  TRISD5=1;
  2982  001E0A  8A95               	bsf	3989,5,c	;volatile
  2983                           
  2984                           ;i2c.c: 29:  TRISD6=1;
  2985  001E0C  8C95               	bsf	3989,6,c	;volatile
  2986  001E0E                     
  2987                           ;i2c.c: 31:  SSP2CON1 = 0b00101000;
  2988  001E0E  0E28               	movlw	40
  2989  001E10  6E6C               	movwf	108,c	;volatile
  2990                           
  2991                           ;i2c.c: 32:  SSP2CON2 = 0x00;
  2992  001E12  0E00               	movlw	0
  2993  001E14  6E6B               	movwf	107,c	;volatile
  2994                           
  2995                           ;i2c.c: 34:     SSP2ADD = 39;
  2996  001E16  0E27               	movlw	39
  2997  001E18  6E6E               	movwf	110,c	;volatile
  2998                           
  2999                           ;i2c.c: 36:  SSP2STAT = 0b11000000;
  3000  001E1A  0EC0               	movlw	192
  3001  001E1C  6E6D               	movwf	109,c	;volatile
  3002  001E1E  0012               	return		;funcret
  3003  001E20                     __end_of_i2c_Init:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function _flush *****************
  3007 ;; Defined at:
  3008 ;;		line 1099 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  i               2    6[COMRAM] int 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    2
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text8
  3037  001C50                     __ptext8:
  3038                           	opt callstack 0
  3039  001C50                     _flush:
  3040                           	opt callstack 28
  3041  001C50                     
  3042                           ;main.c: 1101:     int i;;main.c: 1103:     for(i=0; i<16; i++)
  3043  001C50  0E00               	movlw	0
  3044  001C52  6E3F               	movwf	(flush@i+1)^0,c
  3045  001C54  0E00               	movlw	0
  3046  001C56  6E3E               	movwf	flush@i^0,c
  3047  001C58                     l3493:
  3048                           
  3049                           ;main.c: 1104:     {;main.c: 1105:         Serial_Buffer[i]=0x00;
  3050  001C58  0E01               	movlw	low _Serial_Buffer
  3051  001C5A  243E               	addwf	flush@i^0,w,c
  3052  001C5C  6ED9               	movwf	fsr2l,c
  3053  001C5E  0E00               	movlw	high _Serial_Buffer
  3054  001C60  203F               	addwfc	(flush@i+1)^0,w,c
  3055  001C62  6EDA               	movwf	fsr2h,c
  3056  001C64  0E00               	movlw	0
  3057  001C66  6EDF               	movwf	indf2,c
  3058  001C68                     
  3059                           ;main.c: 1106:     }
  3060  001C68  4A3E               	infsnz	flush@i^0,f,c
  3061  001C6A  2A3F               	incf	(flush@i+1)^0,f,c
  3062  001C6C  BE3F               	btfsc	(flush@i+1)^0,7,c
  3063  001C6E  EF42  F00E         	goto	u2021
  3064  001C72  503F               	movf	(flush@i+1)^0,w,c
  3065  001C74  E109               	bnz	u2020
  3066  001C76  0E10               	movlw	16
  3067  001C78  5C3E               	subwf	flush@i^0,w,c
  3068  001C7A  A0D8               	btfss	status,0,c
  3069  001C7C  EF42  F00E         	goto	u2021
  3070  001C80  EF44  F00E         	goto	u2020
  3071  001C84                     u2021:
  3072  001C84  EF2C  F00E         	goto	l3493
  3073  001C88                     u2020:
  3074  001C88  0012               	return		;funcret
  3075  001C8A                     __end_of_flush:
  3076                           	opt callstack 0
  3077                           
  3078 ;; *************** function _WriteSTLED316SVibMode *****************
  3079 ;; Defined at:
  3080 ;;		line 253 in file "Display.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  v_mode          1    wreg     unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  v_mode          1   12[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        1 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    3
  3101 ;; This function calls:
  3102 ;;		_STLED316s_SPI_SendData
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text9
  3109  001AF2                     __ptext9:
  3110                           	opt callstack 0
  3111  001AF2                     _WriteSTLED316SVibMode:
  3112                           	opt callstack 27
  3113                           
  3114                           ;incstack = 0
  3115                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3116  001AF2  6E44               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3117  001AF4                     
  3118                           ;Display.c: 253: void WriteSTLED316SVibMode( char v_mode);Display.c: 254: {;Display.c: 2
      +                          56:  LATCbits.LATC4 = 0;
  3119  001AF4  988B               	bcf	139,4,c	;volatile
  3120  001AF6                     
  3121                           ;Display.c: 258:  STLED316s_SPI_SendData (0x00 );
  3122  001AF6  0E00               	movlw	0
  3123  001AF8  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3124  001AFC                     
  3125                           ;Display.c: 261:  LATCbits.LATC4 = 1;
  3126  001AFC  888B               	bsf	139,4,c	;volatile
  3127  001AFE                     
  3128                           ;Display.c: 263:  LATCbits.LATC4 = 0;
  3129  001AFE  988B               	bcf	139,4,c	;volatile
  3130                           
  3131                           ;Display.c: 265:  STLED316s_SPI_SendData (0x00);
  3132  001B00  0E00               	movlw	0
  3133  001B02  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3134  001B06                     
  3135                           ;Display.c: 271:     if (v_mode == 1)
  3136  001B06  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3137  001B08  A4D8               	btfss	status,2,c
  3138  001B0A  EF89  F00D         	goto	u2891
  3139  001B0E  EF8B  F00D         	goto	u2890
  3140  001B12                     u2891:
  3141  001B12  EF93  F00D         	goto	l4555
  3142  001B16                     u2890:
  3143  001B16                     
  3144                           ;Display.c: 272:     {;Display.c: 273:   STLED316s_SPI_SendData (0x00);
  3145  001B16  0E00               	movlw	0
  3146  001B18  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3147                           
  3148                           ;Display.c: 274:         STLED316s_SPI_SendData (0xBE);
  3149  001B1C  0EBE               	movlw	190
  3150  001B1E  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3151                           
  3152                           ;Display.c: 275:     }
  3153  001B22  EF99  F00D         	goto	l4557
  3154  001B26                     l4555:
  3155                           
  3156                           ;Display.c: 277:     {;Display.c: 278:         STLED316s_SPI_SendData (0x00);
  3157  001B26  0E00               	movlw	0
  3158  001B28  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3159                           
  3160                           ;Display.c: 279:         STLED316s_SPI_SendData (0x3E);
  3161  001B2C  0E3E               	movlw	62
  3162  001B2E  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3163  001B32                     l4557:
  3164                           
  3165                           ;Display.c: 282:  LATCbits.LATC4 = 1;
  3166  001B32  888B               	bsf	139,4,c	;volatile
  3167  001B34                     
  3168                           ;Display.c: 284:  LATCbits.LATC4 = 0;
  3169  001B34  988B               	bcf	139,4,c	;volatile
  3170                           
  3171                           ;Display.c: 286:  STLED316s_SPI_SendData ( 0x0D );
  3172  001B36  0E0D               	movlw	13
  3173  001B38  EC9E  F00C         	call	_STLED316s_SPI_SendData
  3174  001B3C                     
  3175                           ;Display.c: 288:  LATCbits.LATC4 = 1;
  3176  001B3C  888B               	bsf	139,4,c	;volatile
  3177  001B3E  0012               	return		;funcret
  3178  001B40                     __end_of_WriteSTLED316SVibMode:
  3179                           	opt callstack 0
  3180                           
  3181 ;; *************** function _ToggleVIB_Mode *****************
  3182 ;; Defined at:
  3183 ;;		line 863 in file "main.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    5
  3204 ;; This function calls:
  3205 ;;		_write_i2c
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text10
  3212  001BD4                     __ptext10:
  3213                           	opt callstack 0
  3214  001BD4                     _ToggleVIB_Mode:
  3215                           	opt callstack 25
  3216  001BD4                     
  3217                           ;main.c: 865:     if (vibration_mode)
  3218  001BD4  5032               	movf	_vibration_mode^0,w,c
  3219  001BD6  B4D8               	btfsc	status,2,c
  3220  001BD8  EFF0  F00D         	goto	u2881
  3221  001BDC  EFF2  F00D         	goto	u2880
  3222  001BE0                     u2881:
  3223  001BE0  EFF6  F00D         	goto	l4535
  3224  001BE4                     u2880:
  3225  001BE4                     
  3226                           ;main.c: 866:         vibration_mode = 0;
  3227  001BE4  0E00               	movlw	0
  3228  001BE6  6E32               	movwf	_vibration_mode^0,c
  3229  001BE8  EFF8  F00D         	goto	l4537
  3230  001BEC                     l4535:
  3231                           
  3232                           ;main.c: 868:         vibration_mode = 1;
  3233  001BEC  0E01               	movlw	1
  3234  001BEE  6E32               	movwf	_vibration_mode^0,c
  3235  001BF0                     l4537:
  3236                           
  3237                           ;main.c: 875:     INTCONbits.GIE=0;
  3238  001BF0  9EF2               	bcf	242,7,c	;volatile
  3239  001BF2                     
  3240                           ;main.c: 876:     write_i2c(0x0010, vibration_mode);
  3241  001BF2  0E10               	movlw	16
  3242  001BF4  0100               	movlb	0	; () banked
  3243  001BF6  6F80               	movwf	write_i2c@address& (0+255),b
  3244  001BF8  0E00               	movlw	0
  3245  001BFA  6F81               	movwf	(write_i2c@address+1)& (0+255),b
  3246  001BFC  0E00               	movlw	0
  3247  001BFE  6F82               	movwf	(write_i2c@address+2)& (0+255),b
  3248  001C00  0E00               	movlw	0
  3249  001C02  6F83               	movwf	(write_i2c@address+3)& (0+255),b
  3250  001C04  C032  F084         	movff	_vibration_mode,write_i2c@data
  3251  001C08  6B85               	clrf	(write_i2c@data+1)& (0+255),b
  3252  001C0A  ECA0  F00D         	call	_write_i2c	;wreg free
  3253  001C0E                     
  3254                           ;main.c: 877:     INTCONbits.GIE=1;
  3255  001C0E  8EF2               	bsf	242,7,c	;volatile
  3256  001C10  0012               	return		;funcret
  3257  001C12                     __end_of_ToggleVIB_Mode:
  3258                           	opt callstack 0
  3259                           
  3260 ;; *************** function _write_i2c *****************
  3261 ;; Defined at:
  3262 ;;		line 107 in file "i2c.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  address         4    0[BANK0 ] long 
  3265 ;;  data            2    4[BANK0 ] int 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3277 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;Total ram usage:        6 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    4
  3284 ;; This function calls:
  3285 ;;		___aldiv
  3286 ;;		_i2c_Address
  3287 ;;		_i2c_Start
  3288 ;;		_i2c_Stop
  3289 ;;		_i2c_Write
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;;		_ToggleVIB_Mode
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text11
  3297  001B40                     __ptext11:
  3298                           	opt callstack 0
  3299  001B40                     _write_i2c:
  3300                           	opt callstack 26
  3301  001B40                     
  3302                           ;i2c.c: 107: void write_i2c(long address, int data);i2c.c: 108: {;i2c.c: 109:  i2c_Start
      +                          ();
  3303  001B40  EC55  F00F         	call	_i2c_Start	;wreg free
  3304                           
  3305                           ;i2c.c: 110:  i2c_Address(0xA0, 0);
  3306  001B44  0E00               	movlw	0
  3307  001B46  6E3F               	movwf	i2c_Address@mode^0,c
  3308  001B48  0EA0               	movlw	160
  3309  001B4A  EC26  F00F         	call	_i2c_Address
  3310                           
  3311                           ;i2c.c: 111:  i2c_Write((unsigned char)(address/0x100));
  3312  001B4E  C080  F03E         	movff	write_i2c@address,___aldiv@dividend
  3313  001B52  C081  F03F         	movff	write_i2c@address+1,___aldiv@dividend+1
  3314  001B56  C082  F040         	movff	write_i2c@address+2,___aldiv@dividend+2
  3315  001B5A  C083  F041         	movff	write_i2c@address+3,___aldiv@dividend+3
  3316  001B5E  0E00               	movlw	0
  3317  001B60  6E42               	movwf	___aldiv@divisor^0,c
  3318  001B62  0E01               	movlw	1
  3319  001B64  6E43               	movwf	(___aldiv@divisor+1)^0,c
  3320  001B66  0E00               	movlw	0
  3321  001B68  6E44               	movwf	(___aldiv@divisor+2)^0,c
  3322  001B6A  0E00               	movlw	0
  3323  001B6C  6E45               	movwf	(___aldiv@divisor+3)^0,c
  3324  001B6E  ECE1  F008         	call	___aldiv	;wreg free
  3325  001B72  503E               	movf	?___aldiv^0,w,c
  3326  001B74  EC37  F00F         	call	_i2c_Write
  3327                           
  3328                           ;i2c.c: 112:  i2c_Write((unsigned char)(address&0xFF));
  3329  001B78  0100               	movlb	0	; () banked
  3330  001B7A  5180               	movf	write_i2c@address& (0+255),w,b
  3331  001B7C  EC37  F00F         	call	_i2c_Write
  3332                           
  3333                           ;i2c.c: 113:  i2c_Write((unsigned char)data);
  3334  001B80  0100               	movlb	0	; () banked
  3335  001B82  5184               	movf	write_i2c@data& (0+255),w,b
  3336  001B84  EC37  F00F         	call	_i2c_Write
  3337                           
  3338                           ;i2c.c: 114:   i2c_Stop();
  3339  001B88  EC51  F00F         	call	_i2c_Stop	;wreg free
  3340  001B8C  0012               	return		;funcret
  3341  001B8E                     __end_of_write_i2c:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _i2c_Write *****************
  3345 ;; Defined at:
  3346 ;;		line 66 in file "i2c.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  data            1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  data            1    7[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    3
  3367 ;; This function calls:
  3368 ;;		_i2c_Wait
  3369 ;; This function is called by:
  3370 ;;		_write_i2c
  3371 ;;		_read_i2c
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text12
  3376  001E6E                     __ptext12:
  3377                           	opt callstack 0
  3378  001E6E                     _i2c_Write:
  3379                           	opt callstack 26
  3380                           
  3381                           ;incstack = 0
  3382                           ;i2c_Write@data stored from wreg
  3383  001E6E  6E3F               	movwf	i2c_Write@data^0,c
  3384  001E70                     
  3385                           ;i2c.c: 66: void i2c_Write(unsigned char data);i2c.c: 67: {;i2c.c: 68:   i2c_Wait();
  3386  001E70  ECC1  F00E         	call	_i2c_Wait	;wreg free
  3387  001E74                     
  3388                           ;i2c.c: 69:   SSP2BUF = data;
  3389  001E74  C03F  FF6F         	movff	i2c_Write@data,3951	;volatile
  3390  001E78  0012               	return		;funcret
  3391  001E7A                     __end_of_i2c_Write:
  3392                           	opt callstack 0
  3393                           
  3394 ;; *************** function _i2c_Stop *****************
  3395 ;; Defined at:
  3396 ;;		line 59 in file "i2c.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    3
  3417 ;; This function calls:
  3418 ;;		_i2c_Wait
  3419 ;; This function is called by:
  3420 ;;		_write_i2c
  3421 ;;		_read_i2c
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text13
  3426  001EA2                     __ptext13:
  3427                           	opt callstack 0
  3428  001EA2                     _i2c_Stop:
  3429                           	opt callstack 26
  3430  001EA2                     
  3431                           ;i2c.c: 61:   i2c_Wait();
  3432  001EA2  ECC1  F00E         	call	_i2c_Wait	;wreg free
  3433  001EA6                     
  3434                           ;i2c.c: 62:   PEN2=1;
  3435  001EA6  846B               	bsf	3947,2,c	;volatile
  3436  001EA8  0012               	return		;funcret
  3437  001EAA                     __end_of_i2c_Stop:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function _i2c_Start *****************
  3441 ;; Defined at:
  3442 ;;		line 46 in file "i2c.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		_i2c_Wait
  3465 ;; This function is called by:
  3466 ;;		_write_i2c
  3467 ;;		_read_i2c
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text14
  3472  001EAA                     __ptext14:
  3473                           	opt callstack 0
  3474  001EAA                     _i2c_Start:
  3475                           	opt callstack 26
  3476  001EAA                     
  3477                           ;i2c.c: 48:   i2c_Wait();
  3478  001EAA  ECC1  F00E         	call	_i2c_Wait	;wreg free
  3479  001EAE                     
  3480                           ;i2c.c: 49:  SEN2=1;
  3481  001EAE  806B               	bsf	3947,0,c	;volatile
  3482  001EB0  0012               	return		;funcret
  3483  001EB2                     __end_of_i2c_Start:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _i2c_Address *****************
  3487 ;; Defined at:
  3488 ;;		line 74 in file "i2c.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  address         1    wreg     unsigned char 
  3491 ;;  mode            1    7[COMRAM] unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  address         1    8[COMRAM] unsigned char 
  3494 ;;  l_address       1    9[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:        3 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    3
  3511 ;; This function calls:
  3512 ;;		_i2c_Wait
  3513 ;; This function is called by:
  3514 ;;		_write_i2c
  3515 ;;		_read_i2c
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text15
  3520  001E4C                     __ptext15:
  3521                           	opt callstack 0
  3522  001E4C                     _i2c_Address:
  3523                           	opt callstack 26
  3524                           
  3525                           ;incstack = 0
  3526                           ;i2c_Address@address stored from wreg
  3527  001E4C  6E40               	movwf	i2c_Address@address^0,c
  3528  001E4E                     
  3529                           ;i2c.c: 74: void i2c_Address(unsigned char address, unsigned char mode);i2c.c: 75: {;i2c
      +                          .c: 76:  unsigned char l_address;;i2c.c: 78:  l_address=address;
  3530  001E4E  C040  F041         	movff	i2c_Address@address,i2c_Address@l_address
  3531  001E52                     
  3532                           ;i2c.c: 79:  l_address += mode;
  3533  001E52  503F               	movf	i2c_Address@mode^0,w,c
  3534  001E54  2641               	addwf	i2c_Address@l_address^0,f,c
  3535  001E56                     
  3536                           ;i2c.c: 80:   i2c_Wait();
  3537  001E56  ECC1  F00E         	call	_i2c_Wait	;wreg free
  3538  001E5A                     
  3539                           ;i2c.c: 81:   SSP2BUF = l_address;
  3540  001E5A  C041  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3541  001E5E  0012               	return		;funcret
  3542  001E60                     __end_of_i2c_Address:
  3543                           	opt callstack 0
  3544                           
  3545 ;; *************** function _i2c_Wait *****************
  3546 ;; Defined at:
  3547 ;;		line 41 in file "i2c.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        1 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_i2c_Start
  3572 ;;		_i2c_Restart
  3573 ;;		_i2c_Stop
  3574 ;;		_i2c_Write
  3575 ;;		_i2c_Address
  3576 ;;		_i2c_Read
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text16
  3581  001D82                     __ptext16:
  3582                           	opt callstack 0
  3583  001D82                     _i2c_Wait:
  3584                           	opt callstack 26
  3585  001D82                     l2689:
  3586  001D82  CF6B F03E          	movff	3947,??_i2c_Wait	;volatile
  3587  001D86  0E1F               	movlw	31
  3588  001D88  163E               	andwf	??_i2c_Wait^0,f,c
  3589  001D8A  A4D8               	btfss	status,2,c
  3590  001D8C  EFCA  F00E         	goto	u1341
  3591  001D90  EFCC  F00E         	goto	u1340
  3592  001D94                     u1341:
  3593  001D94  EFC1  F00E         	goto	l2689
  3594  001D98                     u1340:
  3595  001D98  B46D               	btfsc	109,2,c	;volatile
  3596  001D9A  EFD1  F00E         	goto	u1351
  3597  001D9E  EFD3  F00E         	goto	u1350
  3598  001DA2                     u1351:
  3599  001DA2  EFC1  F00E         	goto	l2689
  3600  001DA6                     u1350:
  3601  001DA6  0012               	return		;funcret
  3602  001DA8                     __end_of_i2c_Wait:
  3603                           	opt callstack 0
  3604                           
  3605 ;; *************** function ___aldiv *****************
  3606 ;; Defined at:
  3607 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  dividend        4    6[COMRAM] long 
  3610 ;;  divisor         4   10[COMRAM] long 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  quotient        4   16[COMRAM] long 
  3613 ;;  sign            1   15[COMRAM] unsigned char 
  3614 ;;  counter         1   14[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  4    6[COMRAM] long 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3624 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;Total ram usage:       14 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_write_i2c
  3635 ;;		_read_i2c
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text17
  3640  0011C2                     __ptext17:
  3641                           	opt callstack 0
  3642  0011C2                     ___aldiv:
  3643                           	opt callstack 27
  3644  0011C2  0E00               	movlw	0
  3645  0011C4  6E47               	movwf	___aldiv@sign^0,c
  3646  0011C6  BE45               	btfsc	(___aldiv@divisor+3)^0,7,c
  3647  0011C8  EFEA  F008         	goto	u1440
  3648  0011CC  EFE8  F008         	goto	u1441
  3649  0011D0                     u1441:
  3650  0011D0  EFF4  F008         	goto	l2821
  3651  0011D4                     u1440:
  3652  0011D4  1E45               	comf	(___aldiv@divisor+3)^0,f,c
  3653  0011D6  1E44               	comf	(___aldiv@divisor+2)^0,f,c
  3654  0011D8  1E43               	comf	(___aldiv@divisor+1)^0,f,c
  3655  0011DA  6C42               	negf	___aldiv@divisor^0,c
  3656  0011DC  0E00               	movlw	0
  3657  0011DE  2243               	addwfc	(___aldiv@divisor+1)^0,f,c
  3658  0011E0  2244               	addwfc	(___aldiv@divisor+2)^0,f,c
  3659  0011E2  2245               	addwfc	(___aldiv@divisor+3)^0,f,c
  3660  0011E4  0E01               	movlw	1
  3661  0011E6  6E47               	movwf	___aldiv@sign^0,c
  3662  0011E8                     l2821:
  3663  0011E8  BE41               	btfsc	(___aldiv@dividend+3)^0,7,c
  3664  0011EA  EFFB  F008         	goto	u1450
  3665  0011EE  EFF9  F008         	goto	u1451
  3666  0011F2                     u1451:
  3667  0011F2  EF05  F009         	goto	l2827
  3668  0011F6                     u1450:
  3669  0011F6  1E41               	comf	(___aldiv@dividend+3)^0,f,c
  3670  0011F8  1E40               	comf	(___aldiv@dividend+2)^0,f,c
  3671  0011FA  1E3F               	comf	(___aldiv@dividend+1)^0,f,c
  3672  0011FC  6C3E               	negf	___aldiv@dividend^0,c
  3673  0011FE  0E00               	movlw	0
  3674  001200  223F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3675  001202  2240               	addwfc	(___aldiv@dividend+2)^0,f,c
  3676  001204  2241               	addwfc	(___aldiv@dividend+3)^0,f,c
  3677  001206  0E01               	movlw	1
  3678  001208  1A47               	xorwf	___aldiv@sign^0,f,c
  3679  00120A                     l2827:
  3680  00120A  0E00               	movlw	0
  3681  00120C  6E48               	movwf	___aldiv@quotient^0,c
  3682  00120E  0E00               	movlw	0
  3683  001210  6E49               	movwf	(___aldiv@quotient+1)^0,c
  3684  001212  0E00               	movlw	0
  3685  001214  6E4A               	movwf	(___aldiv@quotient+2)^0,c
  3686  001216  0E00               	movlw	0
  3687  001218  6E4B               	movwf	(___aldiv@quotient+3)^0,c
  3688  00121A  5042               	movf	___aldiv@divisor^0,w,c
  3689  00121C  1043               	iorwf	(___aldiv@divisor+1)^0,w,c
  3690  00121E  1044               	iorwf	(___aldiv@divisor+2)^0,w,c
  3691  001220  1045               	iorwf	(___aldiv@divisor+3)^0,w,c
  3692  001222  B4D8               	btfsc	status,2,c
  3693  001224  EF16  F009         	goto	u1461
  3694  001228  EF18  F009         	goto	u1460
  3695  00122C                     u1461:
  3696  00122C  EF4E  F009         	goto	l2849
  3697  001230                     u1460:
  3698  001230  0E01               	movlw	1
  3699  001232  6E46               	movwf	___aldiv@counter^0,c
  3700  001234  EF22  F009         	goto	l2835
  3701  001238                     l2833:
  3702  001238  90D8               	bcf	status,0,c
  3703  00123A  3642               	rlcf	___aldiv@divisor^0,f,c
  3704  00123C  3643               	rlcf	(___aldiv@divisor+1)^0,f,c
  3705  00123E  3644               	rlcf	(___aldiv@divisor+2)^0,f,c
  3706  001240  3645               	rlcf	(___aldiv@divisor+3)^0,f,c
  3707  001242  2A46               	incf	___aldiv@counter^0,f,c
  3708  001244                     l2835:
  3709  001244  AE45               	btfss	(___aldiv@divisor+3)^0,7,c
  3710  001246  EF27  F009         	goto	u1471
  3711  00124A  EF29  F009         	goto	u1470
  3712  00124E                     u1471:
  3713  00124E  EF1C  F009         	goto	l2833
  3714  001252                     u1470:
  3715  001252                     l2837:
  3716  001252  90D8               	bcf	status,0,c
  3717  001254  3648               	rlcf	___aldiv@quotient^0,f,c
  3718  001256  3649               	rlcf	(___aldiv@quotient+1)^0,f,c
  3719  001258  364A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3720  00125A  364B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3721  00125C  5042               	movf	___aldiv@divisor^0,w,c
  3722  00125E  5C3E               	subwf	___aldiv@dividend^0,w,c
  3723  001260  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3724  001262  583F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3725  001264  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3726  001266  5840               	subwfb	(___aldiv@dividend+2)^0,w,c
  3727  001268  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3728  00126A  5841               	subwfb	(___aldiv@dividend+3)^0,w,c
  3729  00126C  A0D8               	btfss	status,0,c
  3730  00126E  EF3B  F009         	goto	u1481
  3731  001272  EF3D  F009         	goto	u1480
  3732  001276                     u1481:
  3733  001276  EF46  F009         	goto	l2845
  3734  00127A                     u1480:
  3735  00127A  5042               	movf	___aldiv@divisor^0,w,c
  3736  00127C  5E3E               	subwf	___aldiv@dividend^0,f,c
  3737  00127E  5043               	movf	(___aldiv@divisor+1)^0,w,c
  3738  001280  5A3F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3739  001282  5044               	movf	(___aldiv@divisor+2)^0,w,c
  3740  001284  5A40               	subwfb	(___aldiv@dividend+2)^0,f,c
  3741  001286  5045               	movf	(___aldiv@divisor+3)^0,w,c
  3742  001288  5A41               	subwfb	(___aldiv@dividend+3)^0,f,c
  3743  00128A  8048               	bsf	___aldiv@quotient^0,0,c
  3744  00128C                     l2845:
  3745  00128C  90D8               	bcf	status,0,c
  3746  00128E  3245               	rrcf	(___aldiv@divisor+3)^0,f,c
  3747  001290  3244               	rrcf	(___aldiv@divisor+2)^0,f,c
  3748  001292  3243               	rrcf	(___aldiv@divisor+1)^0,f,c
  3749  001294  3242               	rrcf	___aldiv@divisor^0,f,c
  3750  001296  2E46               	decfsz	___aldiv@counter^0,f,c
  3751  001298  EF29  F009         	goto	l2837
  3752  00129C                     l2849:
  3753  00129C  5047               	movf	___aldiv@sign^0,w,c
  3754  00129E  B4D8               	btfsc	status,2,c
  3755  0012A0  EF54  F009         	goto	u1491
  3756  0012A4  EF56  F009         	goto	u1490
  3757  0012A8                     u1491:
  3758  0012A8  EF5E  F009         	goto	l2853
  3759  0012AC                     u1490:
  3760  0012AC  1E4B               	comf	(___aldiv@quotient+3)^0,f,c
  3761  0012AE  1E4A               	comf	(___aldiv@quotient+2)^0,f,c
  3762  0012B0  1E49               	comf	(___aldiv@quotient+1)^0,f,c
  3763  0012B2  6C48               	negf	___aldiv@quotient^0,c
  3764  0012B4  0E00               	movlw	0
  3765  0012B6  2249               	addwfc	(___aldiv@quotient+1)^0,f,c
  3766  0012B8  224A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3767  0012BA  224B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3768  0012BC                     l2853:
  3769  0012BC  C048  F03E         	movff	___aldiv@quotient,?___aldiv
  3770  0012C0  C049  F03F         	movff	___aldiv@quotient+1,?___aldiv+1
  3771  0012C4  C04A  F040         	movff	___aldiv@quotient+2,?___aldiv+2
  3772  0012C8  C04B  F041         	movff	___aldiv@quotient+3,?___aldiv+3
  3773  0012CC  0012               	return		;funcret
  3774  0012CE                     __end_of___aldiv:
  3775                           	opt callstack 0
  3776                           
  3777 ;; *************** function _MotorPosition_Init *****************
  3778 ;; Defined at:
  3779 ;;		line 818 in file "main.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    4
  3800 ;; This function calls:
  3801 ;;		_MotorBREAK
  3802 ;;		_MotorON
  3803 ;;		_Read_IR
  3804 ;;		_WriteSTLED316SErr
  3805 ;;		_delay_1ms
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text18
  3812  0012CE                     __ptext18:
  3813                           	opt callstack 0
  3814  0012CE                     _MotorPosition_Init:
  3815                           	opt callstack 26
  3816  0012CE                     
  3817                           ;main.c: 820:     LATAbits.LATA2 = 1;
  3818  0012CE  8489               	bsf	137,2,c	;volatile
  3819  0012D0                     
  3820                           ;main.c: 821:     MotorON();
  3821  0012D0  EC43  F00F         	call	_MotorON	;wreg free
  3822  0012D4                     
  3823                           ;main.c: 822:     _delay((unsigned long)((350)*(8000000/4000.0)));
  3824  0012D4  0E04               	movlw	4
  3825  0012D6  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  3826  0012D8  0E8E               	movlw	142
  3827  0012DA  6E47               	movwf	??_MotorPosition_Init^0,c
  3828  0012DC  0E12               	movlw	18
  3829  0012DE                     u3597:
  3830  0012DE  2EE8               	decfsz	wreg,f,c
  3831  0012E0  D7FE               	bra	u3597
  3832  0012E2  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  3833  0012E4  D7FC               	bra	u3597
  3834  0012E6  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  3835  0012E8  D7FA               	bra	u3597
  3836  0012EA  D000               	nop2	
  3837  0012EC                     
  3838                           ;main.c: 823:     errorcounter = 30;
  3839  0012EC  0E1E               	movlw	30
  3840  0012EE  6E52               	movwf	_errorcounter^0,c	;volatile
  3841  0012F0  0E00               	movlw	0
  3842  0012F2  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  3843  0012F4  0E00               	movlw	0
  3844  0012F6  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  3845  0012F8  0E00               	movlw	0
  3846  0012FA  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  3847  0012FC                     l4495:
  3848                           
  3849                           ;main.c: 826:     {;main.c: 827:       IR_SENSORF = Read_IR();
  3850  0012FC  ECE7  F00E         	call	_Read_IR	;wreg free
  3851  001300  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  3852  001304  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  3853  001308                     
  3854                           ;main.c: 828:       if(errorcounter == 0)
  3855  001308  5052               	movf	_errorcounter^0,w,c	;volatile
  3856  00130A  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  3857  00130C  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  3858  00130E  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  3859  001310  A4D8               	btfss	status,2,c
  3860  001312  EF8D  F009         	goto	u2841
  3861  001316  EF8F  F009         	goto	u2840
  3862  00131A                     u2841:
  3863  00131A  EF94  F009         	goto	l4503
  3864  00131E                     u2840:
  3865  00131E                     
  3866                           ;main.c: 829:       {;main.c: 830:           WriteSTLED316SErr('1');
  3867  00131E  0E31               	movlw	49
  3868  001320  EC6D  F00A         	call	_WriteSTLED316SErr
  3869  001324                     
  3870                           ;main.c: 831:           MotorBREAK();
  3871  001324  EC48  F00F         	call	_MotorBREAK	;wreg free
  3872  001328                     l4503:
  3873                           
  3874                           ;main.c: 834:     }while(IR_SENSORF != 0);
  3875  001328  5013               	movf	_IR_SENSORF^0,w,c
  3876  00132A  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  3877  00132C  A4D8               	btfss	status,2,c
  3878  00132E  EF9B  F009         	goto	u2851
  3879  001332  EF9D  F009         	goto	u2850
  3880  001336                     u2851:
  3881  001336  EF7E  F009         	goto	l4495
  3882  00133A                     u2850:
  3883  00133A                     
  3884                           ;main.c: 836:      _delay((unsigned long)((30)*(8000000/4000.0)));
  3885  00133A  0E4E               	movlw	78
  3886  00133C  6E47               	movwf	??_MotorPosition_Init^0,c
  3887  00133E  0EEB               	movlw	235
  3888  001340                     u3607:
  3889  001340  2EE8               	decfsz	wreg,f,c
  3890  001342  D7FE               	bra	u3607
  3891  001344  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  3892  001346  D7FC               	bra	u3607
  3893  001348  F000               	nop	
  3894  00134A                     
  3895                           ;main.c: 837:     errorcounter = 30;
  3896  00134A  0E1E               	movlw	30
  3897  00134C  6E52               	movwf	_errorcounter^0,c	;volatile
  3898  00134E  0E00               	movlw	0
  3899  001350  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  3900  001352  0E00               	movlw	0
  3901  001354  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  3902  001356  0E00               	movlw	0
  3903  001358  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  3904  00135A                     l4509:
  3905                           
  3906                           ;main.c: 839:     {;main.c: 840:        IR_SENSORF = Read_IR();
  3907  00135A  ECE7  F00E         	call	_Read_IR	;wreg free
  3908  00135E  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  3909  001362  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  3910  001366                     
  3911                           ;main.c: 841:        if(errorcounter == 0)
  3912  001366  5052               	movf	_errorcounter^0,w,c	;volatile
  3913  001368  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  3914  00136A  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  3915  00136C  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  3916  00136E  A4D8               	btfss	status,2,c
  3917  001370  EFBC  F009         	goto	u2861
  3918  001374  EFBE  F009         	goto	u2860
  3919  001378                     u2861:
  3920  001378  EFC3  F009         	goto	l4517
  3921  00137C                     u2860:
  3922  00137C                     
  3923                           ;main.c: 842:        {;main.c: 843:             WriteSTLED316SErr('2');
  3924  00137C  0E32               	movlw	50
  3925  00137E  EC6D  F00A         	call	_WriteSTLED316SErr
  3926  001382                     
  3927                           ;main.c: 844:            MotorBREAK();
  3928  001382  EC48  F00F         	call	_MotorBREAK	;wreg free
  3929  001386                     l4517:
  3930                           
  3931                           ;main.c: 847:     }while(IR_SENSORF != 1);
  3932  001386  0413               	decf	_IR_SENSORF^0,w,c
  3933  001388  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  3934  00138A  A4D8               	btfss	status,2,c
  3935  00138C  EFCA  F009         	goto	u2871
  3936  001390  EFCC  F009         	goto	u2870
  3937  001394                     u2871:
  3938  001394  EFAD  F009         	goto	l4509
  3939  001398                     u2870:
  3940  001398                     
  3941                           ;main.c: 849:     errorcounter = 30;
  3942  001398  0E1E               	movlw	30
  3943  00139A  6E52               	movwf	_errorcounter^0,c	;volatile
  3944  00139C  0E00               	movlw	0
  3945  00139E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  3946  0013A0  0E00               	movlw	0
  3947  0013A2  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  3948  0013A4  0E00               	movlw	0
  3949  0013A6  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  3950  0013A8                     
  3951                           ;main.c: 851:     delay_1ms(Motor_Stop_Delay_Time);
  3952  0013A8  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  3953  0013AC  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  3954  0013B0  EC98  F00E         	call	_delay_1ms	;wreg free
  3955  0013B4                     
  3956                           ;main.c: 852:     MotorBREAK();
  3957  0013B4  EC48  F00F         	call	_MotorBREAK	;wreg free
  3958  0013B8                     
  3959                           ;main.c: 853:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3960  0013B8  0E06               	movlw	6
  3961  0013BA  6E48               	movwf	(??_MotorPosition_Init+1)^0,c
  3962  0013BC  0E13               	movlw	19
  3963  0013BE  6E47               	movwf	??_MotorPosition_Init^0,c
  3964  0013C0  0EAE               	movlw	174
  3965  0013C2                     u3617:
  3966  0013C2  2EE8               	decfsz	wreg,f,c
  3967  0013C4  D7FE               	bra	u3617
  3968  0013C6  2E47               	decfsz	??_MotorPosition_Init^0,f,c
  3969  0013C8  D7FC               	bra	u3617
  3970  0013CA  2E48               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  3971  0013CC  D7FA               	bra	u3617
  3972  0013CE                     
  3973                           ;main.c: 854:     IR_SENSORF=0;
  3974  0013CE  0E00               	movlw	0
  3975  0013D0  6E14               	movwf	(_IR_SENSORF+1)^0,c
  3976  0013D2  0E00               	movlw	0
  3977  0013D4  6E13               	movwf	_IR_SENSORF^0,c
  3978  0013D6                     
  3979                           ;main.c: 856:     LATAbits.LATA2 = 0;
  3980  0013D6  9489               	bcf	137,2,c	;volatile
  3981  0013D8  0012               	return		;funcret
  3982  0013DA                     __end_of_MotorPosition_Init:
  3983                           	opt callstack 0
  3984                           
  3985 ;; *************** function _InitTimer1 *****************
  3986 ;; Defined at:
  3987 ;;		line 1145 in file "main.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    2
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text19
  4016  001DF2                     __ptext19:
  4017                           	opt callstack 0
  4018  001DF2                     _InitTimer1:
  4019                           	opt callstack 28
  4020  001DF2                     
  4021                           ;main.c: 1147:  T1CON = 0b00110001;
  4022  001DF2  0E31               	movlw	49
  4023  001DF4  6ECD               	movwf	205,c	;volatile
  4024                           
  4025                           ;main.c: 1150:     TMR1 = 0x9E57;
  4026  001DF6  0E9E               	movlw	158
  4027  001DF8  6ECF               	movwf	207,c	;volatile
  4028  001DFA  0E57               	movlw	87
  4029  001DFC  6ECE               	movwf	206,c	;volatile
  4030  001DFE                     
  4031                           ;main.c: 1151:  TMR1IF = 0;
  4032  001DFE  909E               	bcf	3998,0,c	;volatile
  4033  001E00                     
  4034                           ;main.c: 1152:  TMR1IE = 1;
  4035  001E00  809D               	bsf	3997,0,c	;volatile
  4036  001E02                     
  4037                           ;main.c: 1153:     IPR1bits.TMR1IP=1;
  4038  001E02  809F               	bsf	159,0,c	;volatile
  4039                           
  4040                           ;main.c: 1155:     TMR1IF_triggered = 0;
  4041  001E04  0E00               	movlw	0
  4042  001E06  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  4043  001E08  0012               	return		;funcret
  4044  001E0A                     __end_of_InitTimer1:
  4045                           	opt callstack 0
  4046                           
  4047 ;; *************** function _InitSTLED316 *****************
  4048 ;; Defined at:
  4049 ;;		line 14 in file "Display.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  Brightness      1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  Brightness      1   14[COMRAM] unsigned char 
  4054 ;;  i               2    0        int 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;Total ram usage:        3 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		_STLED316s_SPI_SendData
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text20
  4079  0018B0                     __ptext20:
  4080                           	opt callstack 0
  4081  0018B0                     _InitSTLED316:
  4082                           	opt callstack 27
  4083                           
  4084                           ;incstack = 0
  4085                           ;InitSTLED316@Brightness stored from wreg
  4086  0018B0  6E46               	movwf	InitSTLED316@Brightness^0,c
  4087  0018B2                     
  4088                           ;Display.c: 14: void InitSTLED316( unsigned char Brightness );Display.c: 15: {;Display.c
      +                          : 16:  int i;;Display.c: 18:  LATCbits.LATC4 = 1;
  4089  0018B2  888B               	bsf	139,4,c	;volatile
  4090                           
  4091                           ;Display.c: 20:  LATCbits.LATC4 = 0;
  4092  0018B4  988B               	bcf	139,4,c	;volatile
  4093  0018B6                     
  4094                           ;Display.c: 22:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4095  0018B6  0E30               	movlw	48
  4096  0018B8  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4097  0018BC                     
  4098                           ;Display.c: 25:  LATCbits.LATC4 = 1;
  4099  0018BC  888B               	bsf	139,4,c	;volatile
  4100  0018BE                     
  4101                           ;Display.c: 27:  LATCbits.LATC4 = 0;
  4102  0018BE  988B               	bcf	139,4,c	;volatile
  4103                           
  4104                           ;Display.c: 30:  STLED316s_SPI_SendData ( 0x00 + (0x02 << 3) + 0x20 + 0x00 );
  4105  0018C0  0E30               	movlw	48
  4106  0018C2  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4107                           
  4108                           ;Display.c: 32:  STLED316s_SPI_SendData ( ( ( Brightness>>4 )<<5 ) | 0x00 | 0x5 );
  4109  0018C6  C046  F044         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4110  0018CA  3A44               	swapf	??_InitSTLED316^0,f,c
  4111  0018CC  0E0F               	movlw	15
  4112  0018CE  1644               	andwf	??_InitSTLED316^0,f,c
  4113  0018D0  0E05               	movlw	5
  4114  0018D2  6E45               	movwf	(??_InitSTLED316+1)^0,c
  4115  0018D4                     u2835:
  4116  0018D4  90D8               	bcf	status,0,c
  4117  0018D6  3644               	rlcf	??_InitSTLED316^0,f,c
  4118  0018D8  2E45               	decfsz	(??_InitSTLED316+1)^0,f,c
  4119  0018DA  EF6A  F00C         	goto	u2835
  4120  0018DE  5044               	movf	??_InitSTLED316^0,w,c
  4121  0018E0  0905               	iorlw	5
  4122  0018E2  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4123  0018E6                     
  4124                           ;Display.c: 34:  LATCbits.LATC4 = 1;
  4125  0018E6  888B               	bsf	139,4,c	;volatile
  4126  0018E8                     
  4127                           ;Display.c: 36:  LATCbits.LATC4 = 0;
  4128  0018E8  988B               	bcf	139,4,c	;volatile
  4129                           
  4130                           ;Display.c: 39:  STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4131  0018EA  0E11               	movlw	17
  4132  0018EC  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4133  0018F0                     
  4134                           ;Display.c: 45:  LATCbits.LATC4 = 1;
  4135  0018F0  888B               	bsf	139,4,c	;volatile
  4136  0018F2                     
  4137                           ;Display.c: 47:  LATCbits.LATC4 = 0;
  4138  0018F2  988B               	bcf	139,4,c	;volatile
  4139                           
  4140                           ;Display.c: 50:     STLED316s_SPI_SendData ( (0x02 << 3) + 0x01 + 0x00 + 0x00 );
  4141  0018F4  0E11               	movlw	17
  4142  0018F6  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4143                           
  4144                           ;Display.c: 52:  STLED316s_SPI_SendData ( Brightness );
  4145  0018FA  5046               	movf	InitSTLED316@Brightness^0,w,c
  4146  0018FC  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4147                           
  4148                           ;Display.c: 53:  STLED316s_SPI_SendData ( Brightness );
  4149  001900  5046               	movf	InitSTLED316@Brightness^0,w,c
  4150  001902  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4151                           
  4152                           ;Display.c: 54:  STLED316s_SPI_SendData ( Brightness );
  4153  001906  5046               	movf	InitSTLED316@Brightness^0,w,c
  4154  001908  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4155  00190C                     
  4156                           ;Display.c: 58:  LATCbits.LATC4 = 1;
  4157  00190C  888B               	bsf	139,4,c	;volatile
  4158  00190E                     
  4159                           ;Display.c: 60:  LATCbits.LATC4 = 0;
  4160  00190E  988B               	bcf	139,4,c	;volatile
  4161                           
  4162                           ;Display.c: 63:  STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4163  001910  0E18               	movlw	24
  4164  001912  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4165  001916                     
  4166                           ;Display.c: 66:  LATCbits.LATC4 = 1;
  4167  001916  888B               	bsf	139,4,c	;volatile
  4168  001918                     
  4169                           ;Display.c: 68:  LATCbits.LATC4 = 0;
  4170  001918  988B               	bcf	139,4,c	;volatile
  4171                           
  4172                           ;Display.c: 70:     STLED316s_SPI_SendData ( (0x03 << 3) + 0x00 + 0x00 + 0x00 );
  4173  00191A  0E18               	movlw	24
  4174  00191C  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4175                           
  4176                           ;Display.c: 72:  STLED316s_SPI_SendData ( Brightness );
  4177  001920  5046               	movf	InitSTLED316@Brightness^0,w,c
  4178  001922  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4179                           
  4180                           ;Display.c: 73:  STLED316s_SPI_SendData ( Brightness );
  4181  001926  5046               	movf	InitSTLED316@Brightness^0,w,c
  4182  001928  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4183                           
  4184                           ;Display.c: 74:  STLED316s_SPI_SendData ( Brightness );
  4185  00192C  5046               	movf	InitSTLED316@Brightness^0,w,c
  4186  00192E  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4187                           
  4188                           ;Display.c: 75:  STLED316s_SPI_SendData ( Brightness );
  4189  001932  5046               	movf	InitSTLED316@Brightness^0,w,c
  4190  001934  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4191  001938                     
  4192                           ;Display.c: 79:  LATCbits.LATC4 = 1;
  4193  001938  888B               	bsf	139,4,c	;volatile
  4194  00193A  0012               	return		;funcret
  4195  00193C                     __end_of_InitSTLED316:
  4196                           	opt callstack 0
  4197                           
  4198 ;; *************** function _Homing_Again_Manual *****************
  4199 ;; Defined at:
  4200 ;;		line 885 in file "main.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;Total ram usage:        2 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    4
  4221 ;; This function calls:
  4222 ;;		_AD_capture_BattVoltage
  4223 ;;		_MotorBREAK
  4224 ;;		_MotorON
  4225 ;;		_Read_IR
  4226 ;;		_WriteSTLED316SData
  4227 ;;		_WriteSTLED316SErr
  4228 ;;		_delay_1ms
  4229 ;;		_readWeighingData
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text21
  4236  000D0C                     __ptext21:
  4237                           	opt callstack 0
  4238  000D0C                     _Homing_Again_Manual:
  4239                           	opt callstack 26
  4240  000D0C                     
  4241                           ;main.c: 888:     if (vibration_mode == 1)
  4242  000D0C  0432               	decf	_vibration_mode^0,w,c
  4243  000D0E  A4D8               	btfss	status,2,c
  4244  000D10  EF8C  F006         	goto	u2901
  4245  000D14  EF8E  F006         	goto	u2900
  4246  000D18                     u2901:
  4247  000D18  EFA3  F006         	goto	l320
  4248  000D1C                     u2900:
  4249  000D1C                     
  4250                           ;main.c: 889:     {;main.c: 890:         LATCbits.LATC1 = 1;
  4251  000D1C  828B               	bsf	139,1,c	;volatile
  4252  000D1E                     
  4253                           ;main.c: 891:         delay_1ms(Vmotor_Time);
  4254  000D1E  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4255  000D22  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4256  000D26  EC98  F00E         	call	_delay_1ms	;wreg free
  4257  000D2A                     
  4258                           ;main.c: 892:         LATCbits.LATC1 = 0;
  4259  000D2A  928B               	bcf	139,1,c	;volatile
  4260  000D2C                     l4571:
  4261                           
  4262                           ;main.c: 893:         _delay((unsigned long)((300)*(8000000/4000.0)));
  4263  000D2C  0E04               	movlw	4
  4264  000D2E  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4265  000D30  0E0C               	movlw	12
  4266  000D32  6E49               	movwf	??_Homing_Again_Manual^0,c
  4267  000D34  0E34               	movlw	52
  4268  000D36                     u3627:
  4269  000D36  2EE8               	decfsz	wreg,f,c
  4270  000D38  D7FE               	bra	u3627
  4271  000D3A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4272  000D3C  D7FC               	bra	u3627
  4273  000D3E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4274  000D40  D7FA               	bra	u3627
  4275                           
  4276                           ;main.c: 894:     }
  4277  000D42  EFA6  F006         	goto	l4575
  4278  000D46                     l320:
  4279                           
  4280                           ;main.c: 896:     {;main.c: 897:         LATCbits.LATC1 = 0;
  4281  000D46  928B               	bcf	139,1,c	;volatile
  4282  000D48  EF96  F006         	goto	l4571
  4283  000D4C                     l4575:
  4284                           
  4285                           ;main.c: 901:     LATAbits.LATA2 = 1;
  4286  000D4C  8489               	bsf	137,2,c	;volatile
  4287                           
  4288                           ;main.c: 903:     while (NUM>0)
  4289  000D4E  EF91  F007         	goto	l4651
  4290  000D52                     l323:
  4291  000D52  0004               	clrwdt		;# 
  4292  000D54                     
  4293                           ;main.c: 906:         readWeighingData();
  4294  000D54  EC4C  F00D         	call	_readWeighingData	;wreg free
  4295  000D58                     
  4296                           ;main.c: 907:         AD_capture_BattVoltage();
  4297  000D58  EC09  F00E         	call	_AD_capture_BattVoltage	;wreg free
  4298  000D5C                     
  4299                           ;main.c: 908:         delay_1ms(Motor_Pause_Time);
  4300  000D5C  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  4301  000D60  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4302  000D64  EC98  F00E         	call	_delay_1ms	;wreg free
  4303  000D68                     
  4304                           ;main.c: 909:         MotorON();
  4305  000D68  EC43  F00F         	call	_MotorON	;wreg free
  4306  000D6C                     
  4307                           ;main.c: 910:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4308  000D6C  0E04               	movlw	4
  4309  000D6E  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4310  000D70  0E8E               	movlw	142
  4311  000D72  6E49               	movwf	??_Homing_Again_Manual^0,c
  4312  000D74  0E12               	movlw	18
  4313  000D76                     u3637:
  4314  000D76  2EE8               	decfsz	wreg,f,c
  4315  000D78  D7FE               	bra	u3637
  4316  000D7A  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4317  000D7C  D7FC               	bra	u3637
  4318  000D7E  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4319  000D80  D7FA               	bra	u3637
  4320  000D82  D000               	nop2	
  4321  000D84                     
  4322                           ;main.c: 911:         errorcounter = 30;
  4323  000D84  0E1E               	movlw	30
  4324  000D86  6E52               	movwf	_errorcounter^0,c	;volatile
  4325  000D88  0E00               	movlw	0
  4326  000D8A  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4327  000D8C  0E00               	movlw	0
  4328  000D8E  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4329  000D90  0E00               	movlw	0
  4330  000D92  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4331  000D94                     l4589:
  4332                           
  4333                           ;main.c: 914:         {;main.c: 915:             IR_SENSORF = Read_IR();
  4334  000D94  ECE7  F00E         	call	_Read_IR	;wreg free
  4335  000D98  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4336  000D9C  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4337  000DA0                     
  4338                           ;main.c: 916:             if(errorcounter == 0)
  4339  000DA0  5052               	movf	_errorcounter^0,w,c	;volatile
  4340  000DA2  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4341  000DA4  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4342  000DA6  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4343  000DA8  A4D8               	btfss	status,2,c
  4344  000DAA  EFD9  F006         	goto	u2911
  4345  000DAE  EFDB  F006         	goto	u2910
  4346  000DB2                     u2911:
  4347  000DB2  EFE0  F006         	goto	l4597
  4348  000DB6                     u2910:
  4349  000DB6                     
  4350                           ;main.c: 917:             {;main.c: 918:                 WriteSTLED316SErr('1');
  4351  000DB6  0E31               	movlw	49
  4352  000DB8  EC6D  F00A         	call	_WriteSTLED316SErr
  4353  000DBC                     
  4354                           ;main.c: 919:                 MotorBREAK();
  4355  000DBC  EC48  F00F         	call	_MotorBREAK	;wreg free
  4356  000DC0                     l4597:
  4357                           
  4358                           ;main.c: 922:         }while(IR_SENSORF != 0);
  4359  000DC0  5013               	movf	_IR_SENSORF^0,w,c
  4360  000DC2  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4361  000DC4  A4D8               	btfss	status,2,c
  4362  000DC6  EFE7  F006         	goto	u2921
  4363  000DCA  EFE9  F006         	goto	u2920
  4364  000DCE                     u2921:
  4365  000DCE  EFCA  F006         	goto	l4589
  4366  000DD2                     u2920:
  4367  000DD2                     
  4368                           ;main.c: 924:          _delay((unsigned long)((30)*(8000000/4000.0)));
  4369  000DD2  0E4E               	movlw	78
  4370  000DD4  6E49               	movwf	??_Homing_Again_Manual^0,c
  4371  000DD6  0EEB               	movlw	235
  4372  000DD8                     u3647:
  4373  000DD8  2EE8               	decfsz	wreg,f,c
  4374  000DDA  D7FE               	bra	u3647
  4375  000DDC  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4376  000DDE  D7FC               	bra	u3647
  4377  000DE0  F000               	nop	
  4378  000DE2                     
  4379                           ;main.c: 926:          errorcounter = 30;
  4380  000DE2  0E1E               	movlw	30
  4381  000DE4  6E52               	movwf	_errorcounter^0,c	;volatile
  4382  000DE6  0E00               	movlw	0
  4383  000DE8  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4384  000DEA  0E00               	movlw	0
  4385  000DEC  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4386  000DEE  0E00               	movlw	0
  4387  000DF0  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4388  000DF2                     l4603:
  4389                           
  4390                           ;main.c: 929:         {;main.c: 930:             IR_SENSORF = Read_IR();
  4391  000DF2  ECE7  F00E         	call	_Read_IR	;wreg free
  4392  000DF6  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  4393  000DFA  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  4394  000DFE                     
  4395                           ;main.c: 931:             if(errorcounter == 0)
  4396  000DFE  5052               	movf	_errorcounter^0,w,c	;volatile
  4397  000E00  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4398  000E02  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4399  000E04  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4400  000E06  A4D8               	btfss	status,2,c
  4401  000E08  EF08  F007         	goto	u2931
  4402  000E0C  EF0A  F007         	goto	u2930
  4403  000E10                     u2931:
  4404  000E10  EF0F  F007         	goto	l4611
  4405  000E14                     u2930:
  4406  000E14                     
  4407                           ;main.c: 932:             {;main.c: 933:                 WriteSTLED316SErr('2');
  4408  000E14  0E32               	movlw	50
  4409  000E16  EC6D  F00A         	call	_WriteSTLED316SErr
  4410  000E1A                     
  4411                           ;main.c: 934:                 MotorBREAK();
  4412  000E1A  EC48  F00F         	call	_MotorBREAK	;wreg free
  4413  000E1E                     l4611:
  4414                           
  4415                           ;main.c: 936:         }
  4416  000E1E  0413               	decf	_IR_SENSORF^0,w,c
  4417  000E20  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  4418  000E22  A4D8               	btfss	status,2,c
  4419  000E24  EF16  F007         	goto	u2941
  4420  000E28  EF18  F007         	goto	u2940
  4421  000E2C                     u2941:
  4422  000E2C  EFF9  F006         	goto	l4603
  4423  000E30                     u2940:
  4424  000E30                     
  4425                           ;main.c: 939:         errorcounter = 30;
  4426  000E30  0E1E               	movlw	30
  4427  000E32  6E52               	movwf	_errorcounter^0,c	;volatile
  4428  000E34  0E00               	movlw	0
  4429  000E36  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  4430  000E38  0E00               	movlw	0
  4431  000E3A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  4432  000E3C  0E00               	movlw	0
  4433  000E3E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  4434  000E40                     
  4435                           ;main.c: 940:         delay_1ms(Motor_Stop_Delay_Time);
  4436  000E40  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4437  000E44  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4438  000E48  EC98  F00E         	call	_delay_1ms	;wreg free
  4439  000E4C                     
  4440                           ;main.c: 941:         MotorBREAK();
  4441  000E4C  EC48  F00F         	call	_MotorBREAK	;wreg free
  4442  000E50                     
  4443                           ;main.c: 943:         NUM--;
  4444  000E50  0619               	decf	_NUM^0,f,c
  4445  000E52  A0D8               	btfss	status,0,c
  4446  000E54  061A               	decf	(_NUM+1)^0,f,c
  4447  000E56                     
  4448                           ;main.c: 944:         WriteSTLED316SData(NUM, vibration_mode);
  4449  000E56  C019  F046         	movff	_NUM,WriteSTLED316SData@number
  4450  000E5A  C01A  F047         	movff	_NUM+1,WriteSTLED316SData@number+1
  4451  000E5E  C032  F048         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4452  000E62  EC01  F00C         	call	_WriteSTLED316SData	;wreg free
  4453  000E66                     
  4454                           ;main.c: 946:         if (vibration_mode == 1 && NUM != 0)
  4455  000E66  0432               	decf	_vibration_mode^0,w,c
  4456  000E68  A4D8               	btfss	status,2,c
  4457  000E6A  EF39  F007         	goto	u2951
  4458  000E6E  EF3B  F007         	goto	u2950
  4459  000E72                     u2951:
  4460  000E72  EF59  F007         	goto	l4635
  4461  000E76                     u2950:
  4462  000E76  5019               	movf	_NUM^0,w,c
  4463  000E78  101A               	iorwf	(_NUM+1)^0,w,c
  4464  000E7A  B4D8               	btfsc	status,2,c
  4465  000E7C  EF42  F007         	goto	u2961
  4466  000E80  EF44  F007         	goto	u2960
  4467  000E84                     u2961:
  4468  000E84  EF59  F007         	goto	l4635
  4469  000E88                     u2960:
  4470  000E88                     
  4471                           ;main.c: 947:         {;main.c: 948:             LATCbits.LATC1 = 1;
  4472  000E88  828B               	bsf	139,1,c	;volatile
  4473  000E8A                     
  4474                           ;main.c: 949:             delay_1ms(Vmotor_Time);
  4475  000E8A  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4476  000E8E  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4477  000E92  EC98  F00E         	call	_delay_1ms	;wreg free
  4478  000E96                     
  4479                           ;main.c: 951:             LATCbits.LATC1 = 0;
  4480  000E96  928B               	bcf	139,1,c	;volatile
  4481  000E98                     
  4482                           ;main.c: 952:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4483  000E98  0E04               	movlw	4
  4484  000E9A  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4485  000E9C  0E0C               	movlw	12
  4486  000E9E  6E49               	movwf	??_Homing_Again_Manual^0,c
  4487  000EA0  0E34               	movlw	52
  4488  000EA2                     u3657:
  4489  000EA2  2EE8               	decfsz	wreg,f,c
  4490  000EA4  D7FE               	bra	u3657
  4491  000EA6  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4492  000EA8  D7FC               	bra	u3657
  4493  000EAA  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4494  000EAC  D7FA               	bra	u3657
  4495                           
  4496                           ;main.c: 953:         }
  4497  000EAE  EF87  F007         	goto	l4647
  4498  000EB2                     l4635:
  4499  000EB2  5032               	movf	_vibration_mode^0,w,c
  4500  000EB4  A4D8               	btfss	status,2,c
  4501  000EB6  EF5F  F007         	goto	u2971
  4502  000EBA  EF61  F007         	goto	u2970
  4503  000EBE                     u2971:
  4504  000EBE  EF87  F007         	goto	l4647
  4505  000EC2                     u2970:
  4506  000EC2  5019               	movf	_NUM^0,w,c
  4507  000EC4  101A               	iorwf	(_NUM+1)^0,w,c
  4508  000EC6  B4D8               	btfsc	status,2,c
  4509  000EC8  EF68  F007         	goto	u2981
  4510  000ECC  EF6A  F007         	goto	u2980
  4511  000ED0                     u2981:
  4512  000ED0  EF87  F007         	goto	l4647
  4513  000ED4                     u2980:
  4514  000ED4                     
  4515                           ;main.c: 955:         {;main.c: 956:             LATCbits.LATC1 = 0;
  4516  000ED4  928B               	bcf	139,1,c	;volatile
  4517  000ED6                     
  4518                           ;main.c: 957:             if (NUM != 0)
  4519  000ED6  5019               	movf	_NUM^0,w,c
  4520  000ED8  101A               	iorwf	(_NUM+1)^0,w,c
  4521  000EDA  B4D8               	btfsc	status,2,c
  4522  000EDC  EF72  F007         	goto	u2991
  4523  000EE0  EF74  F007         	goto	u2990
  4524  000EE4                     u2991:
  4525  000EE4  EF7C  F007         	goto	l4645
  4526  000EE8                     u2990:
  4527  000EE8                     
  4528                           ;main.c: 958:             {;main.c: 959:                 delay_1ms(Vmotor_Time);
  4529  000EE8  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4530  000EEC  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4531  000EF0  EC98  F00E         	call	_delay_1ms	;wreg free
  4532                           
  4533                           ;main.c: 960:             }
  4534  000EF4  EF87  F007         	goto	l4647
  4535  000EF8                     l4645:
  4536                           
  4537                           ;main.c: 962:             {;main.c: 963:                 _delay((unsigned long)((500)*(8
      +                          000000/4000.0)));
  4538  000EF8  0E06               	movlw	6
  4539  000EFA  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4540  000EFC  0E13               	movlw	19
  4541  000EFE  6E49               	movwf	??_Homing_Again_Manual^0,c
  4542  000F00  0EAE               	movlw	174
  4543  000F02                     u3667:
  4544  000F02  2EE8               	decfsz	wreg,f,c
  4545  000F04  D7FE               	bra	u3667
  4546  000F06  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4547  000F08  D7FC               	bra	u3667
  4548  000F0A  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4549  000F0C  D7FA               	bra	u3667
  4550  000F0E                     l4647:
  4551                           
  4552                           ;main.c: 967:         if(Stop==1)
  4553  000F0E  0435               	decf	_Stop^0,w,c
  4554  000F10  A4D8               	btfss	status,2,c
  4555  000F12  EF8D  F007         	goto	u3001
  4556  000F16  EF8F  F007         	goto	u3000
  4557  000F1A                     u3001:
  4558  000F1A  EF91  F007         	goto	l4651
  4559  000F1E                     u3000:
  4560  000F1E  EF9A  F007         	goto	l336
  4561  000F22                     l4651:
  4562                           
  4563                           ;main.c: 903:     while (NUM>0)
  4564  000F22  5019               	movf	_NUM^0,w,c
  4565  000F24  101A               	iorwf	(_NUM+1)^0,w,c
  4566  000F26  A4D8               	btfss	status,2,c
  4567  000F28  EF98  F007         	goto	u3011
  4568  000F2C  EF9A  F007         	goto	u3010
  4569  000F30                     u3011:
  4570  000F30  EFA9  F006         	goto	l323
  4571  000F34                     u3010:
  4572  000F34                     l336:
  4573                           
  4574                           ;main.c: 972:     LATAbits.LATA2 = 0;
  4575  000F34  9489               	bcf	137,2,c	;volatile
  4576  000F36                     
  4577                           ;main.c: 974:     if (NUM == 0 || Stop==1)
  4578  000F36  5019               	movf	_NUM^0,w,c
  4579  000F38  101A               	iorwf	(_NUM+1)^0,w,c
  4580  000F3A  B4D8               	btfsc	status,2,c
  4581  000F3C  EFA2  F007         	goto	u3021
  4582  000F40  EFA4  F007         	goto	u3020
  4583  000F44                     u3021:
  4584  000F44  EFAC  F007         	goto	l4657
  4585  000F48                     u3020:
  4586  000F48  0435               	decf	_Stop^0,w,c
  4587  000F4A  A4D8               	btfss	status,2,c
  4588  000F4C  EFAA  F007         	goto	u3031
  4589  000F50  EFAC  F007         	goto	u3030
  4590  000F54                     u3031:
  4591  000F54  EFC7  F007         	goto	l4667
  4592  000F58                     u3030:
  4593  000F58                     l4657:
  4594                           
  4595                           ;main.c: 975:     {;main.c: 977:         if (vibration_mode == 1)
  4596  000F58  0432               	decf	_vibration_mode^0,w,c
  4597  000F5A  A4D8               	btfss	status,2,c
  4598  000F5C  EFB2  F007         	goto	u3041
  4599  000F60  EFB4  F007         	goto	u3040
  4600  000F64                     u3041:
  4601  000F64  EFC7  F007         	goto	l4667
  4602  000F68                     u3040:
  4603  000F68                     
  4604                           ;main.c: 978:         {;main.c: 979:             LATCbits.LATC1 = 1;
  4605  000F68  828B               	bsf	139,1,c	;volatile
  4606  000F6A                     
  4607                           ;main.c: 980:             delay_1ms(Vmotor_Time);
  4608  000F6A  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  4609  000F6E  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4610  000F72  EC98  F00E         	call	_delay_1ms	;wreg free
  4611  000F76                     
  4612                           ;main.c: 982:             LATCbits.LATC1 = 0;
  4613  000F76  928B               	bcf	139,1,c	;volatile
  4614  000F78                     
  4615                           ;main.c: 983:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4616  000F78  0E04               	movlw	4
  4617  000F7A  6E4A               	movwf	(??_Homing_Again_Manual+1)^0,c
  4618  000F7C  0E0C               	movlw	12
  4619  000F7E  6E49               	movwf	??_Homing_Again_Manual^0,c
  4620  000F80  0E34               	movlw	52
  4621  000F82                     u3677:
  4622  000F82  2EE8               	decfsz	wreg,f,c
  4623  000F84  D7FE               	bra	u3677
  4624  000F86  2E49               	decfsz	??_Homing_Again_Manual^0,f,c
  4625  000F88  D7FC               	bra	u3677
  4626  000F8A  2E4A               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4627  000F8C  D7FA               	bra	u3677
  4628  000F8E                     l4667:
  4629                           
  4630                           ;main.c: 988:     NUM = 0;
  4631  000F8E  0E00               	movlw	0
  4632  000F90  6E1A               	movwf	(_NUM+1)^0,c
  4633  000F92  0E00               	movlw	0
  4634  000F94  6E19               	movwf	_NUM^0,c
  4635  000F96                     
  4636                           ;main.c: 989:     OpMode = MANUAL_MODE;
  4637  000F96  0E00               	movlw	0
  4638  000F98  6E30               	movwf	_OpMode^0,c	;volatile
  4639  000F9A  0012               	return		;funcret
  4640  000F9C                     __end_of_Homing_Again_Manual:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function _WriteSTLED316SData *****************
  4644 ;; Defined at:
  4645 ;;		line 150 in file "Display.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  number          2   14[COMRAM] int 
  4648 ;;  v_mode          1   16[COMRAM] unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  NUM_DIG1        2    2[BANK0 ] int 
  4651 ;;  NUM_DIG0        2    0[BANK0 ] int 
  4652 ;;  data4           1    5[BANK0 ] unsigned char 
  4653 ;;  data3           1    4[BANK0 ] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:        9 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    3
  4670 ;; This function calls:
  4671 ;;		_Get7Seg
  4672 ;;		_STLED316s_SPI_SendData
  4673 ;;		___awdiv
  4674 ;;		___awmod
  4675 ;; This function is called by:
  4676 ;;		_main
  4677 ;;		_Homing_Again_Manual
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text22
  4682  001802                     __ptext22:
  4683                           	opt callstack 0
  4684  001802                     _WriteSTLED316SData:
  4685                           	opt callstack 27
  4686  001802                     
  4687                           ;Display.c: 150: void WriteSTLED316SData( int number, char v_mode);Display.c: 151: {;Dis
      +                          play.c: 152:  unsigned char data3, data4;;Display.c: 153:  int NUM_DIG0, NUM_DIG1;;Displ
      +                          ay.c: 155:  NUM_DIG0=(int) number%10;
  4688  001802  C046  F03E         	movff	WriteSTLED316SData@number,___awmod@dividend
  4689  001806  C047  F03F         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  4690  00180A  0E00               	movlw	0
  4691  00180C  6E41               	movwf	(___awmod@divisor+1)^0,c
  4692  00180E  0E0A               	movlw	10
  4693  001810  6E40               	movwf	___awmod@divisor^0,c
  4694  001812  ECA9  F00B         	call	___awmod	;wreg free
  4695  001816  C03E  F080         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  4696  00181A  C03F  F081         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  4697                           
  4698                           ;Display.c: 156:  NUM_DIG1=(int) number/10;
  4699  00181E  C046  F03E         	movff	WriteSTLED316SData@number,___awdiv@dividend
  4700  001822  C047  F03F         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  4701  001826  0E00               	movlw	0
  4702  001828  6E41               	movwf	(___awdiv@divisor+1)^0,c
  4703  00182A  0E0A               	movlw	10
  4704  00182C  6E40               	movwf	___awdiv@divisor^0,c
  4705  00182E  EC47  F00B         	call	___awdiv	;wreg free
  4706  001832  C03E  F082         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  4707  001836  C03F  F083         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  4708  00183A                     
  4709                           ;Display.c: 158:  LATCbits.LATC4 = 0;
  4710  00183A  988B               	bcf	139,4,c	;volatile
  4711                           
  4712                           ;Display.c: 160:  STLED316s_SPI_SendData (0x00 );
  4713  00183C  0E00               	movlw	0
  4714  00183E  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4715  001842                     
  4716                           ;Display.c: 162:  LATCbits.LATC4 = 1;
  4717  001842  888B               	bsf	139,4,c	;volatile
  4718  001844                     
  4719                           ;Display.c: 164:  LATCbits.LATC4 = 0;
  4720  001844  988B               	bcf	139,4,c	;volatile
  4721                           
  4722                           ;Display.c: 166:  STLED316s_SPI_SendData (0x00);
  4723  001846  0E00               	movlw	0
  4724  001848  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4725                           
  4726                           ;Display.c: 168:  data4 = Get7Seg(NUM_DIG1);
  4727  00184C  C082  F03E         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  4728  001850  C083  F03F         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  4729  001854  ECE1  F00A         	call	_Get7Seg	;wreg free
  4730  001858  0100               	movlb	0	; () banked
  4731  00185A  6F85               	movwf	WriteSTLED316SData@data4& (0+255),b
  4732                           
  4733                           ;Display.c: 169:  data3 = Get7Seg(NUM_DIG0);
  4734  00185C  C080  F03E         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  4735  001860  C081  F03F         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  4736  001864  ECE1  F00A         	call	_Get7Seg	;wreg free
  4737  001868  0100               	movlb	0	; () banked
  4738  00186A  6F84               	movwf	WriteSTLED316SData@data3& (0+255),b
  4739  00186C                     
  4740                           ; BSR set to: 0
  4741                           ;Display.c: 171:  if (v_mode)
  4742  00186C  5048               	movf	WriteSTLED316SData@v_mode^0,w,c
  4743  00186E  B4D8               	btfsc	status,2,c
  4744  001870  EF3C  F00C         	goto	u2811
  4745  001874  EF3E  F00C         	goto	u2810
  4746  001878                     u2811:
  4747  001878  EF4A  F00C         	goto	l4371
  4748  00187C                     u2810:
  4749  00187C                     
  4750                           ; BSR set to: 0
  4751                           ;Display.c: 172:  {;Display.c: 173:   if (v_mode == 0xFF)
  4752  00187C  2848               	incf	WriteSTLED316SData@v_mode^0,w,c
  4753  00187E  A4D8               	btfss	status,2,c
  4754  001880  EF44  F00C         	goto	u2821
  4755  001884  EF46  F00C         	goto	u2820
  4756  001888                     u2821:
  4757  001888  EF49  F00C         	goto	l4369
  4758  00188C                     u2820:
  4759  00188C                     
  4760                           ; BSR set to: 0
  4761                           ;Display.c: 174:    data4 |= 0x80;
  4762  00188C  8F85               	bsf	WriteSTLED316SData@data4& (0+255),7,b
  4763  00188E  EF4A  F00C         	goto	l4371
  4764  001892                     l4369:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;Display.c: 176:    data3 |= 0x80;
  4768  001892  8F84               	bsf	WriteSTLED316SData@data3& (0+255),7,b
  4769  001894                     l4371:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;Display.c: 179:     STLED316s_SPI_SendData (data4);
  4773  001894  5185               	movf	WriteSTLED316SData@data4& (0+255),w,b
  4774  001896  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4775  00189A                     
  4776                           ;Display.c: 180:     STLED316s_SPI_SendData (data3);
  4777  00189A  0100               	movlb	0	; () banked
  4778  00189C  5184               	movf	WriteSTLED316SData@data3& (0+255),w,b
  4779  00189E  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4780  0018A2                     
  4781                           ;Display.c: 182:  LATCbits.LATC4 = 1;
  4782  0018A2  888B               	bsf	139,4,c	;volatile
  4783  0018A4                     
  4784                           ;Display.c: 184:  LATCbits.LATC4 = 0;
  4785  0018A4  988B               	bcf	139,4,c	;volatile
  4786  0018A6                     
  4787                           ;Display.c: 186:  STLED316s_SPI_SendData ( 0x0D );
  4788  0018A6  0E0D               	movlw	13
  4789  0018A8  EC9E  F00C         	call	_STLED316s_SPI_SendData
  4790  0018AC                     
  4791                           ;Display.c: 188:  LATCbits.LATC4 = 1;
  4792  0018AC  888B               	bsf	139,4,c	;volatile
  4793  0018AE  0012               	return		;funcret
  4794  0018B0                     __end_of_WriteSTLED316SData:
  4795                           	opt callstack 0
  4796                           
  4797 ;; *************** function ___awmod *****************
  4798 ;; Defined at:
  4799 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  dividend        2    6[COMRAM] int 
  4802 ;;  divisor         2    8[COMRAM] int 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  sign            1   11[COMRAM] unsigned char 
  4805 ;;  counter         1   10[COMRAM] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  2    6[COMRAM] int 
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;Total ram usage:        6 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    2
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_WriteSTLED316SData
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text23
  4830  001752                     __ptext23:
  4831                           	opt callstack 0
  4832  001752                     ___awmod:
  4833                           	opt callstack 27
  4834  001752  0E00               	movlw	0
  4835  001754  6E43               	movwf	___awmod@sign^0,c
  4836  001756  BE3F               	btfsc	(___awmod@dividend+1)^0,7,c
  4837  001758  EFB2  F00B         	goto	u2750
  4838  00175C  EFB0  F00B         	goto	u2751
  4839  001760                     u2751:
  4840  001760  EFB8  F00B         	goto	l4327
  4841  001764                     u2750:
  4842  001764  6C3E               	negf	___awmod@dividend^0,c
  4843  001766  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  4844  001768  B0D8               	btfsc	status,0,c
  4845  00176A  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  4846  00176C  0E01               	movlw	1
  4847  00176E  6E43               	movwf	___awmod@sign^0,c
  4848  001770                     l4327:
  4849  001770  BE41               	btfsc	(___awmod@divisor+1)^0,7,c
  4850  001772  EFBF  F00B         	goto	u2760
  4851  001776  EFBD  F00B         	goto	u2761
  4852  00177A                     u2761:
  4853  00177A  EFC3  F00B         	goto	l4331
  4854  00177E                     u2760:
  4855  00177E  6C40               	negf	___awmod@divisor^0,c
  4856  001780  1E41               	comf	(___awmod@divisor+1)^0,f,c
  4857  001782  B0D8               	btfsc	status,0,c
  4858  001784  2A41               	incf	(___awmod@divisor+1)^0,f,c
  4859  001786                     l4331:
  4860  001786  5040               	movf	___awmod@divisor^0,w,c
  4861  001788  1041               	iorwf	(___awmod@divisor+1)^0,w,c
  4862  00178A  B4D8               	btfsc	status,2,c
  4863  00178C  EFCA  F00B         	goto	u2771
  4864  001790  EFCC  F00B         	goto	u2770
  4865  001794                     u2771:
  4866  001794  EFF0  F00B         	goto	l4347
  4867  001798                     u2770:
  4868  001798  0E01               	movlw	1
  4869  00179A  6E42               	movwf	___awmod@counter^0,c
  4870  00179C  EFD4  F00B         	goto	l4337
  4871  0017A0                     l4335:
  4872  0017A0  90D8               	bcf	status,0,c
  4873  0017A2  3640               	rlcf	___awmod@divisor^0,f,c
  4874  0017A4  3641               	rlcf	(___awmod@divisor+1)^0,f,c
  4875  0017A6  2A42               	incf	___awmod@counter^0,f,c
  4876  0017A8                     l4337:
  4877  0017A8  AE41               	btfss	(___awmod@divisor+1)^0,7,c
  4878  0017AA  EFD9  F00B         	goto	u2781
  4879  0017AE  EFDB  F00B         	goto	u2780
  4880  0017B2                     u2781:
  4881  0017B2  EFD0  F00B         	goto	l4335
  4882  0017B6                     u2780:
  4883  0017B6                     l4339:
  4884  0017B6  5040               	movf	___awmod@divisor^0,w,c
  4885  0017B8  5C3E               	subwf	___awmod@dividend^0,w,c
  4886  0017BA  5041               	movf	(___awmod@divisor+1)^0,w,c
  4887  0017BC  583F               	subwfb	(___awmod@dividend+1)^0,w,c
  4888  0017BE  A0D8               	btfss	status,0,c
  4889  0017C0  EFE4  F00B         	goto	u2791
  4890  0017C4  EFE6  F00B         	goto	u2790
  4891  0017C8                     u2791:
  4892  0017C8  EFEA  F00B         	goto	l4343
  4893  0017CC                     u2790:
  4894  0017CC  5040               	movf	___awmod@divisor^0,w,c
  4895  0017CE  5E3E               	subwf	___awmod@dividend^0,f,c
  4896  0017D0  5041               	movf	(___awmod@divisor+1)^0,w,c
  4897  0017D2  5A3F               	subwfb	(___awmod@dividend+1)^0,f,c
  4898  0017D4                     l4343:
  4899  0017D4  90D8               	bcf	status,0,c
  4900  0017D6  3241               	rrcf	(___awmod@divisor+1)^0,f,c
  4901  0017D8  3240               	rrcf	___awmod@divisor^0,f,c
  4902  0017DA  2E42               	decfsz	___awmod@counter^0,f,c
  4903  0017DC  EFDB  F00B         	goto	l4339
  4904  0017E0                     l4347:
  4905  0017E0  5043               	movf	___awmod@sign^0,w,c
  4906  0017E2  B4D8               	btfsc	status,2,c
  4907  0017E4  EFF6  F00B         	goto	u2801
  4908  0017E8  EFF8  F00B         	goto	u2800
  4909  0017EC                     u2801:
  4910  0017EC  EFFC  F00B         	goto	l4351
  4911  0017F0                     u2800:
  4912  0017F0  6C3E               	negf	___awmod@dividend^0,c
  4913  0017F2  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  4914  0017F4  B0D8               	btfsc	status,0,c
  4915  0017F6  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  4916  0017F8                     l4351:
  4917  0017F8  C03E  F03E         	movff	___awmod@dividend,?___awmod
  4918  0017FC  C03F  F03F         	movff	___awmod@dividend+1,?___awmod+1
  4919  001800  0012               	return		;funcret
  4920  001802                     __end_of___awmod:
  4921                           	opt callstack 0
  4922                           
  4923 ;; *************** function ___awdiv *****************
  4924 ;; Defined at:
  4925 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  dividend        2    6[COMRAM] int 
  4928 ;;  divisor         2    8[COMRAM] int 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  quotient        2   12[COMRAM] int 
  4931 ;;  sign            1   11[COMRAM] unsigned char 
  4932 ;;  counter         1   10[COMRAM] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  2    6[COMRAM] int 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;Total ram usage:        8 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    2
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_WriteSTLED316SData
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text24
  4957  00168E                     __ptext24:
  4958                           	opt callstack 0
  4959  00168E                     ___awdiv:
  4960                           	opt callstack 27
  4961  00168E  0E00               	movlw	0
  4962  001690  6E43               	movwf	___awdiv@sign^0,c
  4963  001692  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  4964  001694  EF50  F00B         	goto	u2690
  4965  001698  EF4E  F00B         	goto	u2691
  4966  00169C                     u2691:
  4967  00169C  EF56  F00B         	goto	l4283
  4968  0016A0                     u2690:
  4969  0016A0  6C40               	negf	___awdiv@divisor^0,c
  4970  0016A2  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  4971  0016A4  B0D8               	btfsc	status,0,c
  4972  0016A6  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  4973  0016A8  0E01               	movlw	1
  4974  0016AA  6E43               	movwf	___awdiv@sign^0,c
  4975  0016AC                     l4283:
  4976  0016AC  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  4977  0016AE  EF5D  F00B         	goto	u2700
  4978  0016B2  EF5B  F00B         	goto	u2701
  4979  0016B6                     u2701:
  4980  0016B6  EF63  F00B         	goto	l4289
  4981  0016BA                     u2700:
  4982  0016BA  6C3E               	negf	___awdiv@dividend^0,c
  4983  0016BC  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  4984  0016BE  B0D8               	btfsc	status,0,c
  4985  0016C0  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  4986  0016C2  0E01               	movlw	1
  4987  0016C4  1A43               	xorwf	___awdiv@sign^0,f,c
  4988  0016C6                     l4289:
  4989  0016C6  0E00               	movlw	0
  4990  0016C8  6E45               	movwf	(___awdiv@quotient+1)^0,c
  4991  0016CA  0E00               	movlw	0
  4992  0016CC  6E44               	movwf	___awdiv@quotient^0,c
  4993  0016CE  5040               	movf	___awdiv@divisor^0,w,c
  4994  0016D0  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  4995  0016D2  B4D8               	btfsc	status,2,c
  4996  0016D4  EF6E  F00B         	goto	u2711
  4997  0016D8  EF70  F00B         	goto	u2710
  4998  0016DC                     u2711:
  4999  0016DC  EF98  F00B         	goto	l4311
  5000  0016E0                     u2710:
  5001  0016E0  0E01               	movlw	1
  5002  0016E2  6E42               	movwf	___awdiv@counter^0,c
  5003  0016E4  EF78  F00B         	goto	l4297
  5004  0016E8                     l4295:
  5005  0016E8  90D8               	bcf	status,0,c
  5006  0016EA  3640               	rlcf	___awdiv@divisor^0,f,c
  5007  0016EC  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  5008  0016EE  2A42               	incf	___awdiv@counter^0,f,c
  5009  0016F0                     l4297:
  5010  0016F0  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  5011  0016F2  EF7D  F00B         	goto	u2721
  5012  0016F6  EF7F  F00B         	goto	u2720
  5013  0016FA                     u2721:
  5014  0016FA  EF74  F00B         	goto	l4295
  5015  0016FE                     u2720:
  5016  0016FE                     l4299:
  5017  0016FE  90D8               	bcf	status,0,c
  5018  001700  3644               	rlcf	___awdiv@quotient^0,f,c
  5019  001702  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  5020  001704  5040               	movf	___awdiv@divisor^0,w,c
  5021  001706  5C3E               	subwf	___awdiv@dividend^0,w,c
  5022  001708  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5023  00170A  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  5024  00170C  A0D8               	btfss	status,0,c
  5025  00170E  EF8B  F00B         	goto	u2731
  5026  001712  EF8D  F00B         	goto	u2730
  5027  001716                     u2731:
  5028  001716  EF92  F00B         	goto	l4307
  5029  00171A                     u2730:
  5030  00171A  5040               	movf	___awdiv@divisor^0,w,c
  5031  00171C  5E3E               	subwf	___awdiv@dividend^0,f,c
  5032  00171E  5041               	movf	(___awdiv@divisor+1)^0,w,c
  5033  001720  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  5034  001722  8044               	bsf	___awdiv@quotient^0,0,c
  5035  001724                     l4307:
  5036  001724  90D8               	bcf	status,0,c
  5037  001726  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  5038  001728  3240               	rrcf	___awdiv@divisor^0,f,c
  5039  00172A  2E42               	decfsz	___awdiv@counter^0,f,c
  5040  00172C  EF7F  F00B         	goto	l4299
  5041  001730                     l4311:
  5042  001730  5043               	movf	___awdiv@sign^0,w,c
  5043  001732  B4D8               	btfsc	status,2,c
  5044  001734  EF9E  F00B         	goto	u2741
  5045  001738  EFA0  F00B         	goto	u2740
  5046  00173C                     u2741:
  5047  00173C  EFA4  F00B         	goto	l4315
  5048  001740                     u2740:
  5049  001740  6C44               	negf	___awdiv@quotient^0,c
  5050  001742  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  5051  001744  B0D8               	btfsc	status,0,c
  5052  001746  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  5053  001748                     l4315:
  5054  001748  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  5055  00174C  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  5056  001750  0012               	return		;funcret
  5057  001752                     __end_of___awdiv:
  5058                           	opt callstack 0
  5059                           
  5060 ;; *************** function _Get7Seg *****************
  5061 ;; Defined at:
  5062 ;;		line 107 in file "Display.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  Digit           2    6[COMRAM] int 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  Data            1   10[COMRAM] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      unsigned char 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;Total ram usage:        5 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    2
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_WriteSTLED316SData
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text25
  5091  0015C2                     __ptext25:
  5092                           	opt callstack 0
  5093  0015C2                     _Get7Seg:
  5094                           	opt callstack 27
  5095  0015C2                     
  5096                           ;Display.c: 107: unsigned char Get7Seg (int Digit);Display.c: 108: {;Display.c: 109:  un
      +                          signed char Data;;Display.c: 111:  switch (Digit)
  5097  0015C2  EF0F  F00B         	goto	l4265
  5098  0015C6                     l4241:
  5099                           
  5100                           ;Display.c: 114:    Data = 0x3F;
  5101  0015C6  0E3F               	movlw	63
  5102  0015C8  6E42               	movwf	Get7Seg@Data^0,c
  5103                           
  5104                           ;Display.c: 115:    break;
  5105  0015CA  EF45  F00B         	goto	l4267
  5106  0015CE                     l4243:
  5107                           
  5108                           ;Display.c: 117:    Data = 0x06;
  5109  0015CE  0E06               	movlw	6
  5110  0015D0  6E42               	movwf	Get7Seg@Data^0,c
  5111                           
  5112                           ;Display.c: 118:    break;
  5113  0015D2  EF45  F00B         	goto	l4267
  5114  0015D6                     l4245:
  5115                           
  5116                           ;Display.c: 120:    Data = 0x5B;
  5117  0015D6  0E5B               	movlw	91
  5118  0015D8  6E42               	movwf	Get7Seg@Data^0,c
  5119                           
  5120                           ;Display.c: 121:    break;
  5121  0015DA  EF45  F00B         	goto	l4267
  5122  0015DE                     l4247:
  5123                           
  5124                           ;Display.c: 123:    Data = 0x4F;
  5125  0015DE  0E4F               	movlw	79
  5126  0015E0  6E42               	movwf	Get7Seg@Data^0,c
  5127                           
  5128                           ;Display.c: 124:    break;
  5129  0015E2  EF45  F00B         	goto	l4267
  5130  0015E6                     l4249:
  5131                           
  5132                           ;Display.c: 126:    Data = 0x66;
  5133  0015E6  0E66               	movlw	102
  5134  0015E8  6E42               	movwf	Get7Seg@Data^0,c
  5135                           
  5136                           ;Display.c: 127:    break;
  5137  0015EA  EF45  F00B         	goto	l4267
  5138  0015EE                     l4251:
  5139                           
  5140                           ;Display.c: 129:    Data = 0x6D;
  5141  0015EE  0E6D               	movlw	109
  5142  0015F0  6E42               	movwf	Get7Seg@Data^0,c
  5143                           
  5144                           ;Display.c: 130:    break;
  5145  0015F2  EF45  F00B         	goto	l4267
  5146  0015F6                     l4253:
  5147                           
  5148                           ;Display.c: 132:    Data = 0x7D;
  5149  0015F6  0E7D               	movlw	125
  5150  0015F8  6E42               	movwf	Get7Seg@Data^0,c
  5151                           
  5152                           ;Display.c: 133:    break;
  5153  0015FA  EF45  F00B         	goto	l4267
  5154  0015FE                     l4255:
  5155                           
  5156                           ;Display.c: 135:    Data = 0x07;
  5157  0015FE  0E07               	movlw	7
  5158  001600  6E42               	movwf	Get7Seg@Data^0,c
  5159                           
  5160                           ;Display.c: 136:    break;
  5161  001602  EF45  F00B         	goto	l4267
  5162  001606                     l4257:
  5163                           
  5164                           ;Display.c: 138:    Data = 0x7F;
  5165  001606  0E7F               	movlw	127
  5166  001608  6E42               	movwf	Get7Seg@Data^0,c
  5167                           
  5168                           ;Display.c: 139:    break;
  5169  00160A  EF45  F00B         	goto	l4267
  5170  00160E                     l4259:
  5171                           
  5172                           ;Display.c: 141:    Data = 0x6F;
  5173  00160E  0E6F               	movlw	111
  5174  001610  6E42               	movwf	Get7Seg@Data^0,c
  5175                           
  5176                           ;Display.c: 142:    break;
  5177  001612  EF45  F00B         	goto	l4267
  5178  001616                     l4261:
  5179                           
  5180                           ;Display.c: 144:    Data = 0x00;
  5181  001616  0E00               	movlw	0
  5182  001618  6E42               	movwf	Get7Seg@Data^0,c
  5183                           
  5184                           ;Display.c: 145:    break;
  5185  00161A  EF45  F00B         	goto	l4267
  5186  00161E                     l4265:
  5187  00161E  C03E  F040         	movff	Get7Seg@Digit,??_Get7Seg
  5188  001622  C03F  F041         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5189                           
  5190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5191                           ; Switch size 1, requested type "simple"
  5192                           ; Number of cases is 1, Range of values is 0 to 0
  5193                           ; switch strategies available:
  5194                           ; Name         Instructions Cycles
  5195                           ; simple_byte            4     3 (average)
  5196                           ;	Chosen strategy is simple_byte
  5197  001626  5041               	movf	(??_Get7Seg+1)^0,w,c
  5198  001628  0A00               	xorlw	0	; case 0
  5199  00162A  B4D8               	btfsc	status,2,c
  5200  00162C  EF1A  F00B         	goto	l5445
  5201  001630  EF0B  F00B         	goto	l4261
  5202  001634                     l5445:
  5203                           
  5204                           ; Switch size 1, requested type "simple"
  5205                           ; Number of cases is 10, Range of values is 0 to 9
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte           31    16 (average)
  5209                           ;	Chosen strategy is simple_byte
  5210  001634  5040               	movf	??_Get7Seg^0,w,c
  5211  001636  0A00               	xorlw	0	; case 0
  5212  001638  B4D8               	btfsc	status,2,c
  5213  00163A  EFE3  F00A         	goto	l4241
  5214  00163E  0A01               	xorlw	1	; case 1
  5215  001640  B4D8               	btfsc	status,2,c
  5216  001642  EFE7  F00A         	goto	l4243
  5217  001646  0A03               	xorlw	3	; case 2
  5218  001648  B4D8               	btfsc	status,2,c
  5219  00164A  EFEB  F00A         	goto	l4245
  5220  00164E  0A01               	xorlw	1	; case 3
  5221  001650  B4D8               	btfsc	status,2,c
  5222  001652  EFEF  F00A         	goto	l4247
  5223  001656  0A07               	xorlw	7	; case 4
  5224  001658  B4D8               	btfsc	status,2,c
  5225  00165A  EFF3  F00A         	goto	l4249
  5226  00165E  0A01               	xorlw	1	; case 5
  5227  001660  B4D8               	btfsc	status,2,c
  5228  001662  EFF7  F00A         	goto	l4251
  5229  001666  0A03               	xorlw	3	; case 6
  5230  001668  B4D8               	btfsc	status,2,c
  5231  00166A  EFFB  F00A         	goto	l4253
  5232  00166E  0A01               	xorlw	1	; case 7
  5233  001670  B4D8               	btfsc	status,2,c
  5234  001672  EFFF  F00A         	goto	l4255
  5235  001676  0A0F               	xorlw	15	; case 8
  5236  001678  B4D8               	btfsc	status,2,c
  5237  00167A  EF03  F00B         	goto	l4257
  5238  00167E  0A01               	xorlw	1	; case 9
  5239  001680  B4D8               	btfsc	status,2,c
  5240  001682  EF07  F00B         	goto	l4259
  5241  001686  EF0B  F00B         	goto	l4261
  5242  00168A                     l4267:
  5243                           
  5244                           ;Display.c: 147:  return (Data);
  5245  00168A  5042               	movf	Get7Seg@Data^0,w,c
  5246  00168C  0012               	return		;funcret
  5247  00168E                     __end_of_Get7Seg:
  5248                           	opt callstack 0
  5249                           
  5250 ;; *************** function _Homing_Again_Auto *****************
  5251 ;; Defined at:
  5252 ;;		line 996 in file "main.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    4
  5273 ;; This function calls:
  5274 ;;		_AD_capture_BattVoltage
  5275 ;;		_MotorBREAK
  5276 ;;		_MotorON
  5277 ;;		_Read_IR
  5278 ;;		_WriteSTLED316SErr
  5279 ;;		_WriteSTLED316SMode
  5280 ;;		_delay_1ms
  5281 ;;		_readWeighingData
  5282 ;; This function is called by:
  5283 ;;		_main
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text26
  5288  000F9C                     __ptext26:
  5289                           	opt callstack 0
  5290  000F9C                     _Homing_Again_Auto:
  5291                           	opt callstack 26
  5292  000F9C                     
  5293                           ;main.c: 999:     IR_SENSORF = 0;
  5294  000F9C  0E00               	movlw	0
  5295  000F9E  6E14               	movwf	(_IR_SENSORF+1)^0,c
  5296  000FA0  0E00               	movlw	0
  5297  000FA2  6E13               	movwf	_IR_SENSORF^0,c
  5298  000FA4                     
  5299                           ;main.c: 1000:     WriteSTLED316SMode('A');
  5300  000FA4  0E41               	movlw	65
  5301  000FA6  ECED  F009         	call	_WriteSTLED316SMode
  5302  000FAA                     
  5303                           ;main.c: 1002:     if (vibration_mode == 1)
  5304  000FAA  0432               	decf	_vibration_mode^0,w,c
  5305  000FAC  A4D8               	btfss	status,2,c
  5306  000FAE  EFDB  F007         	goto	u3051
  5307  000FB2  EFDD  F007         	goto	u3050
  5308  000FB6                     u3051:
  5309  000FB6  EFF2  F007         	goto	l344
  5310  000FBA                     u3050:
  5311  000FBA                     
  5312                           ;main.c: 1003:     {;main.c: 1004:         LATCbits.LATC1 = 1;
  5313  000FBA  828B               	bsf	139,1,c	;volatile
  5314  000FBC                     
  5315                           ;main.c: 1005:         delay_1ms(Vmotor_Time);
  5316  000FBC  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5317  000FC0  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5318  000FC4  EC98  F00E         	call	_delay_1ms	;wreg free
  5319  000FC8                     
  5320                           ;main.c: 1006:         LATCbits.LATC1 = 0;
  5321  000FC8  928B               	bcf	139,1,c	;volatile
  5322  000FCA                     l4683:
  5323                           
  5324                           ;main.c: 1007:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5325  000FCA  0E04               	movlw	4
  5326  000FCC  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5327  000FCE  0E0C               	movlw	12
  5328  000FD0  6E47               	movwf	??_Homing_Again_Auto^0,c
  5329  000FD2  0E34               	movlw	52
  5330  000FD4                     u3687:
  5331  000FD4  2EE8               	decfsz	wreg,f,c
  5332  000FD6  D7FE               	bra	u3687
  5333  000FD8  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5334  000FDA  D7FC               	bra	u3687
  5335  000FDC  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5336  000FDE  D7FA               	bra	u3687
  5337                           
  5338                           ;main.c: 1008:     }
  5339  000FE0  EFF5  F007         	goto	l4687
  5340  000FE4                     l344:
  5341                           
  5342                           ;main.c: 1010:     {;main.c: 1011:         LATCbits.LATC1 = 0;
  5343  000FE4  928B               	bcf	139,1,c	;volatile
  5344  000FE6  EFE5  F007         	goto	l4683
  5345  000FEA                     l4687:
  5346                           
  5347                           ;main.c: 1015:     LATAbits.LATA2 = 1;
  5348  000FEA  8489               	bsf	137,2,c	;volatile
  5349                           
  5350                           ;main.c: 1017:     while ( Stop==0)
  5351  000FEC  EFA5  F008         	goto	l4745
  5352  000FF0                     l347:
  5353  000FF0  0004               	clrwdt		;# 
  5354  000FF2                     
  5355                           ;main.c: 1020:         readWeighingData();
  5356  000FF2  EC4C  F00D         	call	_readWeighingData	;wreg free
  5357  000FF6                     
  5358                           ;main.c: 1021:         AD_capture_BattVoltage();
  5359  000FF6  EC09  F00E         	call	_AD_capture_BattVoltage	;wreg free
  5360  000FFA                     
  5361                           ;main.c: 1022:         delay_1ms(Motor_Pause_Time);
  5362  000FFA  C01B  F03E         	movff	_Motor_Pause_Time,delay_1ms@time
  5363  000FFE  C01C  F03F         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5364  001002  EC98  F00E         	call	_delay_1ms	;wreg free
  5365  001006                     
  5366                           ;main.c: 1023:         MotorON();
  5367  001006  EC43  F00F         	call	_MotorON	;wreg free
  5368  00100A                     
  5369                           ;main.c: 1024:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5370  00100A  0E04               	movlw	4
  5371  00100C  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5372  00100E  0E8E               	movlw	142
  5373  001010  6E47               	movwf	??_Homing_Again_Auto^0,c
  5374  001012  0E12               	movlw	18
  5375  001014                     u3697:
  5376  001014  2EE8               	decfsz	wreg,f,c
  5377  001016  D7FE               	bra	u3697
  5378  001018  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5379  00101A  D7FC               	bra	u3697
  5380  00101C  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5381  00101E  D7FA               	bra	u3697
  5382  001020  D000               	nop2	
  5383  001022                     
  5384                           ;main.c: 1026:         errorcounter = 30;
  5385  001022  0E1E               	movlw	30
  5386  001024  6E52               	movwf	_errorcounter^0,c	;volatile
  5387  001026  0E00               	movlw	0
  5388  001028  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5389  00102A  0E00               	movlw	0
  5390  00102C  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5391  00102E  0E00               	movlw	0
  5392  001030  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5393  001032                     l4701:
  5394                           
  5395                           ;main.c: 1029:         {;main.c: 1030:           IR_SENSORF = Read_IR();
  5396  001032  ECE7  F00E         	call	_Read_IR	;wreg free
  5397  001036  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5398  00103A  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5399  00103E                     
  5400                           ;main.c: 1031:           if(errorcounter == 0)
  5401  00103E  5052               	movf	_errorcounter^0,w,c	;volatile
  5402  001040  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5403  001042  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5404  001044  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5405  001046  A4D8               	btfss	status,2,c
  5406  001048  EF28  F008         	goto	u3061
  5407  00104C  EF2A  F008         	goto	u3060
  5408  001050                     u3061:
  5409  001050  EF2F  F008         	goto	l4709
  5410  001054                     u3060:
  5411  001054                     
  5412                           ;main.c: 1032:           {;main.c: 1033:               WriteSTLED316SErr('1');
  5413  001054  0E31               	movlw	49
  5414  001056  EC6D  F00A         	call	_WriteSTLED316SErr
  5415  00105A                     
  5416                           ;main.c: 1034:               MotorBREAK();
  5417  00105A  EC48  F00F         	call	_MotorBREAK	;wreg free
  5418  00105E                     l4709:
  5419                           
  5420                           ;main.c: 1036:         }while(IR_SENSORF != 0);
  5421  00105E  5013               	movf	_IR_SENSORF^0,w,c
  5422  001060  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5423  001062  A4D8               	btfss	status,2,c
  5424  001064  EF36  F008         	goto	u3071
  5425  001068  EF38  F008         	goto	u3070
  5426  00106C                     u3071:
  5427  00106C  EF19  F008         	goto	l4701
  5428  001070                     u3070:
  5429  001070                     
  5430                           ;main.c: 1038:          _delay((unsigned long)((30)*(8000000/4000.0)));
  5431  001070  0E4E               	movlw	78
  5432  001072  6E47               	movwf	??_Homing_Again_Auto^0,c
  5433  001074  0EEB               	movlw	235
  5434  001076                     u3707:
  5435  001076  2EE8               	decfsz	wreg,f,c
  5436  001078  D7FE               	bra	u3707
  5437  00107A  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5438  00107C  D7FC               	bra	u3707
  5439  00107E  F000               	nop	
  5440  001080                     
  5441                           ;main.c: 1039:          errorcounter = 30;
  5442  001080  0E1E               	movlw	30
  5443  001082  6E52               	movwf	_errorcounter^0,c	;volatile
  5444  001084  0E00               	movlw	0
  5445  001086  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5446  001088  0E00               	movlw	0
  5447  00108A  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5448  00108C  0E00               	movlw	0
  5449  00108E  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5450  001090                     l4715:
  5451                           
  5452                           ;main.c: 1042:         {;main.c: 1043:           IR_SENSORF = Read_IR();
  5453  001090  ECE7  F00E         	call	_Read_IR	;wreg free
  5454  001094  C03E  F013         	movff	?_Read_IR,_IR_SENSORF
  5455  001098  C03F  F014         	movff	?_Read_IR+1,_IR_SENSORF+1
  5456  00109C                     
  5457                           ;main.c: 1044:           if(errorcounter == 0)
  5458  00109C  5052               	movf	_errorcounter^0,w,c	;volatile
  5459  00109E  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5460  0010A0  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5461  0010A2  1055               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5462  0010A4  A4D8               	btfss	status,2,c
  5463  0010A6  EF57  F008         	goto	u3081
  5464  0010AA  EF59  F008         	goto	u3080
  5465  0010AE                     u3081:
  5466  0010AE  EF5E  F008         	goto	l4723
  5467  0010B2                     u3080:
  5468  0010B2                     
  5469                           ;main.c: 1045:           {;main.c: 1046:               WriteSTLED316SErr('2');
  5470  0010B2  0E32               	movlw	50
  5471  0010B4  EC6D  F00A         	call	_WriteSTLED316SErr
  5472  0010B8                     
  5473                           ;main.c: 1047:               MotorBREAK();
  5474  0010B8  EC48  F00F         	call	_MotorBREAK	;wreg free
  5475  0010BC                     l4723:
  5476                           
  5477                           ;main.c: 1049:         }while(IR_SENSORF != 1);
  5478  0010BC  0413               	decf	_IR_SENSORF^0,w,c
  5479  0010BE  1014               	iorwf	(_IR_SENSORF+1)^0,w,c
  5480  0010C0  A4D8               	btfss	status,2,c
  5481  0010C2  EF65  F008         	goto	u3091
  5482  0010C6  EF67  F008         	goto	u3090
  5483  0010CA                     u3091:
  5484  0010CA  EF48  F008         	goto	l4715
  5485  0010CE                     u3090:
  5486  0010CE                     
  5487                           ;main.c: 1051:         errorcounter = 30;
  5488  0010CE  0E1E               	movlw	30
  5489  0010D0  6E52               	movwf	_errorcounter^0,c	;volatile
  5490  0010D2  0E00               	movlw	0
  5491  0010D4  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  5492  0010D6  0E00               	movlw	0
  5493  0010D8  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  5494  0010DA  0E00               	movlw	0
  5495  0010DC  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  5496  0010DE                     
  5497                           ;main.c: 1053:         delay_1ms(Motor_Stop_Delay_Time);
  5498  0010DE  C01F  F03E         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5499  0010E2  C020  F03F         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5500  0010E6  EC98  F00E         	call	_delay_1ms	;wreg free
  5501  0010EA                     
  5502                           ;main.c: 1054:         MotorBREAK();
  5503  0010EA  EC48  F00F         	call	_MotorBREAK	;wreg free
  5504                           
  5505                           ;main.c: 1056:         if (vibration_mode == 1)
  5506  0010EE  0432               	decf	_vibration_mode^0,w,c
  5507  0010F0  A4D8               	btfss	status,2,c
  5508  0010F2  EF7D  F008         	goto	u3101
  5509  0010F6  EF7F  F008         	goto	u3100
  5510  0010FA                     u3101:
  5511  0010FA  EF94  F008         	goto	l354
  5512  0010FE                     u3100:
  5513  0010FE                     
  5514                           ;main.c: 1057:         {;main.c: 1058:             LATCbits.LATC1 = 1;
  5515  0010FE  828B               	bsf	139,1,c	;volatile
  5516  001100                     
  5517                           ;main.c: 1059:             delay_1ms(Vmotor_Time);
  5518  001100  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5519  001104  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5520  001108  EC98  F00E         	call	_delay_1ms	;wreg free
  5521  00110C                     
  5522                           ;main.c: 1061:             LATCbits.LATC1 = 0;
  5523  00110C  928B               	bcf	139,1,c	;volatile
  5524  00110E                     
  5525                           ;main.c: 1062:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5526  00110E  0E04               	movlw	4
  5527  001110  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5528  001112  0E0C               	movlw	12
  5529  001114  6E47               	movwf	??_Homing_Again_Auto^0,c
  5530  001116  0E34               	movlw	52
  5531  001118                     u3717:
  5532  001118  2EE8               	decfsz	wreg,f,c
  5533  00111A  D7FE               	bra	u3717
  5534  00111C  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5535  00111E  D7FC               	bra	u3717
  5536  001120  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5537  001122  D7FA               	bra	u3717
  5538                           
  5539                           ;main.c: 1063:         }
  5540  001124  EF9B  F008         	goto	l4741
  5541  001128                     l354:
  5542                           
  5543                           ;main.c: 1065:         {;main.c: 1066:             LATCbits.LATC1 = 0;
  5544  001128  928B               	bcf	139,1,c	;volatile
  5545  00112A                     
  5546                           ;main.c: 1067:              delay_1ms(Vmotor_Time);
  5547  00112A  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5548  00112E  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5549  001132  EC98  F00E         	call	_delay_1ms	;wreg free
  5550  001136                     l4741:
  5551                           
  5552                           ;main.c: 1070:         if(Stop==1)
  5553  001136  0435               	decf	_Stop^0,w,c
  5554  001138  A4D8               	btfss	status,2,c
  5555  00113A  EFA1  F008         	goto	u3111
  5556  00113E  EFA3  F008         	goto	u3110
  5557  001142                     u3111:
  5558  001142  EFA5  F008         	goto	l4745
  5559  001146                     u3110:
  5560  001146  EFAD  F008         	goto	l357
  5561  00114A                     l4745:
  5562                           
  5563                           ;main.c: 1017:     while ( Stop==0)
  5564  00114A  5035               	movf	_Stop^0,w,c
  5565  00114C  B4D8               	btfsc	status,2,c
  5566  00114E  EFAB  F008         	goto	u3121
  5567  001152  EFAD  F008         	goto	u3120
  5568  001156                     u3121:
  5569  001156  EFF8  F007         	goto	l347
  5570  00115A                     u3120:
  5571  00115A                     l357:
  5572                           
  5573                           ;main.c: 1075:     LATAbits.LATA2 = 0;
  5574  00115A  9489               	bcf	137,2,c	;volatile
  5575  00115C                     
  5576                           ;main.c: 1077:     if (NUM == 0 || Stop==1)
  5577  00115C  5019               	movf	_NUM^0,w,c
  5578  00115E  101A               	iorwf	(_NUM+1)^0,w,c
  5579  001160  B4D8               	btfsc	status,2,c
  5580  001162  EFB5  F008         	goto	u3131
  5581  001166  EFB7  F008         	goto	u3130
  5582  00116A                     u3131:
  5583  00116A  EFBF  F008         	goto	l4751
  5584  00116E                     u3130:
  5585  00116E  0435               	decf	_Stop^0,w,c
  5586  001170  A4D8               	btfss	status,2,c
  5587  001172  EFBD  F008         	goto	u3141
  5588  001176  EFBF  F008         	goto	u3140
  5589  00117A                     u3141:
  5590  00117A  EFDA  F008         	goto	l4761
  5591  00117E                     u3140:
  5592  00117E                     l4751:
  5593                           
  5594                           ;main.c: 1078:     {;main.c: 1080:         if (vibration_mode == 1)
  5595  00117E  0432               	decf	_vibration_mode^0,w,c
  5596  001180  A4D8               	btfss	status,2,c
  5597  001182  EFC5  F008         	goto	u3151
  5598  001186  EFC7  F008         	goto	u3150
  5599  00118A                     u3151:
  5600  00118A  EFDA  F008         	goto	l4761
  5601  00118E                     u3150:
  5602  00118E                     
  5603                           ;main.c: 1081:         {;main.c: 1082:             LATCbits.LATC1 = 1;
  5604  00118E  828B               	bsf	139,1,c	;volatile
  5605  001190                     
  5606                           ;main.c: 1083:             delay_1ms(Vmotor_Time);
  5607  001190  C056  F03E         	movff	_Vmotor_Time,delay_1ms@time
  5608  001194  C057  F03F         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5609  001198  EC98  F00E         	call	_delay_1ms	;wreg free
  5610  00119C                     
  5611                           ;main.c: 1085:             LATCbits.LATC1 = 0;
  5612  00119C  928B               	bcf	139,1,c	;volatile
  5613  00119E                     
  5614                           ;main.c: 1086:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5615  00119E  0E04               	movlw	4
  5616  0011A0  6E48               	movwf	(??_Homing_Again_Auto+1)^0,c
  5617  0011A2  0E0C               	movlw	12
  5618  0011A4  6E47               	movwf	??_Homing_Again_Auto^0,c
  5619  0011A6  0E34               	movlw	52
  5620  0011A8                     u3727:
  5621  0011A8  2EE8               	decfsz	wreg,f,c
  5622  0011AA  D7FE               	bra	u3727
  5623  0011AC  2E47               	decfsz	??_Homing_Again_Auto^0,f,c
  5624  0011AE  D7FC               	bra	u3727
  5625  0011B0  2E48               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5626  0011B2  D7FA               	bra	u3727
  5627  0011B4                     l4761:
  5628                           
  5629                           ;main.c: 1091:     NUM = 0;
  5630  0011B4  0E00               	movlw	0
  5631  0011B6  6E1A               	movwf	(_NUM+1)^0,c
  5632  0011B8  0E00               	movlw	0
  5633  0011BA  6E19               	movwf	_NUM^0,c
  5634  0011BC                     
  5635                           ;main.c: 1092:     OpMode = AUTO_MODE;
  5636  0011BC  0E02               	movlw	2
  5637  0011BE  6E30               	movwf	_OpMode^0,c	;volatile
  5638  0011C0  0012               	return		;funcret
  5639  0011C2                     __end_of_Homing_Again_Auto:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _readWeighingData *****************
  5643 ;; Defined at:
  5644 ;;		line 1125 in file "main.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  i               2    8[COMRAM] int 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;Total ram usage:        2 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    3
  5665 ;; This function calls:
  5666 ;;		_Write1USART
  5667 ;;		_flushOut
  5668 ;; This function is called by:
  5669 ;;		_Homing_Again_Manual
  5670 ;;		_Homing_Again_Auto
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text27
  5675  001A98                     __ptext27:
  5676                           	opt callstack 0
  5677  001A98                     _readWeighingData:
  5678                           	opt callstack 26
  5679  001A98                     
  5680                           ;main.c: 1127:     int i;;main.c: 1129:     Serial_Buffer_Out[0] = 0xA5;
  5681  001A98  0EA5               	movlw	165
  5682  001A9A  0100               	movlb	0	; () banked
  5683  001A9C  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  5684                           
  5685                           ;main.c: 1130:     Serial_Buffer_Out[1] = 0x45;
  5686  001A9E  0E45               	movlw	69
  5687  001AA0  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  5688                           
  5689                           ;main.c: 1131:     Serial_Buffer_Out[2] = 0x00;
  5690  001AA2  0E00               	movlw	0
  5691  001AA4  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  5692                           
  5693                           ;main.c: 1132:     Serial_Buffer_Out[3] = 0x45;
  5694  001AA6  0E45               	movlw	69
  5695  001AA8  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  5696                           
  5697                           ;main.c: 1133:     Serial_Buffer_Out[4] = 0x5A;
  5698  001AAA  0E5A               	movlw	90
  5699  001AAC  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  5700  001AAE                     
  5701                           ; BSR set to: 0
  5702                           ;main.c: 1135:     INTCONbits.GIE=0;
  5703  001AAE  9EF2               	bcf	242,7,c	;volatile
  5704                           
  5705                           ;main.c: 1136:     for (i=0; i<5;i++)
  5706  001AB0  0E00               	movlw	0
  5707  001AB2  6E41               	movwf	(readWeighingData@i+1)^0,c
  5708  001AB4  0E00               	movlw	0
  5709  001AB6  6E40               	movwf	readWeighingData@i^0,c
  5710  001AB8                     l3039:
  5711                           
  5712                           ;main.c: 1137:     {;main.c: 1138:         Write1USART(Serial_Buffer_Out[i]);
  5713  001AB8  0E60               	movlw	low _Serial_Buffer_Out
  5714  001ABA  2440               	addwf	readWeighingData@i^0,w,c
  5715  001ABC  6ED9               	movwf	fsr2l,c
  5716  001ABE  0E00               	movlw	high _Serial_Buffer_Out
  5717  001AC0  2041               	addwfc	(readWeighingData@i+1)^0,w,c
  5718  001AC2  6EDA               	movwf	fsr2h,c
  5719  001AC4  50DF               	movf	indf2,w,c
  5720  001AC6  EC10  F00F         	call	_Write1USART
  5721  001ACA                     
  5722                           ;main.c: 1139:     }
  5723  001ACA  4A40               	infsnz	readWeighingData@i^0,f,c
  5724  001ACC  2A41               	incf	(readWeighingData@i+1)^0,f,c
  5725  001ACE  BE41               	btfsc	(readWeighingData@i+1)^0,7,c
  5726  001AD0  EF73  F00D         	goto	u1661
  5727  001AD4  5041               	movf	(readWeighingData@i+1)^0,w,c
  5728  001AD6  E109               	bnz	u1660
  5729  001AD8  0E05               	movlw	5
  5730  001ADA  5C40               	subwf	readWeighingData@i^0,w,c
  5731  001ADC  A0D8               	btfss	status,0,c
  5732  001ADE  EF73  F00D         	goto	u1661
  5733  001AE2  EF75  F00D         	goto	u1660
  5734  001AE6                     u1661:
  5735  001AE6  EF5C  F00D         	goto	l3039
  5736  001AEA                     u1660:
  5737  001AEA                     
  5738                           ;main.c: 1140:     INTCONbits.GIE=1;
  5739  001AEA  8EF2               	bsf	242,7,c	;volatile
  5740  001AEC                     
  5741                           ;main.c: 1142:     flushOut();
  5742  001AEC  EC45  F00E         	call	_flushOut	;wreg free
  5743  001AF0  0012               	return		;funcret
  5744  001AF2                     __end_of_readWeighingData:
  5745                           	opt callstack 0
  5746                           
  5747 ;; *************** function _flushOut *****************
  5748 ;; Defined at:
  5749 ;;		line 1112 in file "main.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  i               2    6[COMRAM] int 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;Total ram usage:        2 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    2
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;;		_readWeighingData
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text28
  5779  001C8A                     __ptext28:
  5780                           	opt callstack 0
  5781  001C8A                     _flushOut:
  5782                           	opt callstack 28
  5783  001C8A                     
  5784                           ;main.c: 1114:     int i;;main.c: 1116:     for(i=0; i<16; i++)
  5785  001C8A  0E00               	movlw	0
  5786  001C8C  6E3F               	movwf	(flushOut@i+1)^0,c
  5787  001C8E  0E00               	movlw	0
  5788  001C90  6E3E               	movwf	flushOut@i^0,c
  5789  001C92                     l2701:
  5790                           
  5791                           ;main.c: 1117:     {;main.c: 1118:         Serial_Buffer_Out[i]=0x00;
  5792  001C92  0E60               	movlw	low _Serial_Buffer_Out
  5793  001C94  243E               	addwf	flushOut@i^0,w,c
  5794  001C96  6ED9               	movwf	fsr2l,c
  5795  001C98  0E00               	movlw	high _Serial_Buffer_Out
  5796  001C9A  203F               	addwfc	(flushOut@i+1)^0,w,c
  5797  001C9C  6EDA               	movwf	fsr2h,c
  5798  001C9E  0E00               	movlw	0
  5799  001CA0  6EDF               	movwf	indf2,c
  5800  001CA2                     
  5801                           ;main.c: 1119:     }
  5802  001CA2  4A3E               	infsnz	flushOut@i^0,f,c
  5803  001CA4  2A3F               	incf	(flushOut@i+1)^0,f,c
  5804  001CA6  BE3F               	btfsc	(flushOut@i+1)^0,7,c
  5805  001CA8  EF5F  F00E         	goto	u1371
  5806  001CAC  503F               	movf	(flushOut@i+1)^0,w,c
  5807  001CAE  E109               	bnz	u1370
  5808  001CB0  0E10               	movlw	16
  5809  001CB2  5C3E               	subwf	flushOut@i^0,w,c
  5810  001CB4  A0D8               	btfss	status,0,c
  5811  001CB6  EF5F  F00E         	goto	u1371
  5812  001CBA  EF61  F00E         	goto	u1370
  5813  001CBE                     u1371:
  5814  001CBE  EF49  F00E         	goto	l2701
  5815  001CC2                     u1370:
  5816  001CC2  0012               	return		;funcret
  5817  001CC4                     __end_of_flushOut:
  5818                           	opt callstack 0
  5819                           
  5820 ;; *************** function _Write1USART *****************
  5821 ;; Defined at:
  5822 ;;		line 48 in file "usart.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  data            1    wreg     unsigned char 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  data            1    6[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;Total ram usage:        1 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    2
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;;		_readWeighingData
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text29
  5852  001E20                     __ptext29:
  5853                           	opt callstack 0
  5854  001E20                     _Write1USART:
  5855                           	opt callstack 28
  5856                           
  5857                           ;incstack = 0
  5858                           ;Write1USART@data stored from wreg
  5859  001E20  6E3E               	movwf	Write1USART@data^0,c
  5860  001E22                     
  5861                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  5862  001E22  C03E  FFAE         	movff	Write1USART@data,4014	;volatile
  5863  001E26                     l552:
  5864  001E26  A2AD               	btfss	173,1,c	;volatile
  5865  001E28  EF18  F00F         	goto	u1361
  5866  001E2C  EF1A  F00F         	goto	u1360
  5867  001E30                     u1361:
  5868  001E30  EF13  F00F         	goto	l552
  5869  001E34                     u1360:
  5870  001E34  0012               	return		;funcret
  5871  001E36                     __end_of_Write1USART:
  5872                           	opt callstack 0
  5873                           
  5874 ;; *************** function _WriteSTLED316SMode *****************
  5875 ;; Defined at:
  5876 ;;		line 191 in file "Display.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  msg             1    wreg     unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  msg             1   14[COMRAM] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;Total ram usage:        3 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    3
  5897 ;; This function calls:
  5898 ;;		_STLED316s_SPI_SendData
  5899 ;; This function is called by:
  5900 ;;		_Homing_Again_Auto
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text30
  5905  0013DA                     __ptext30:
  5906                           	opt callstack 0
  5907  0013DA                     _WriteSTLED316SMode:
  5908                           	opt callstack 26
  5909                           
  5910                           ;incstack = 0
  5911                           ;WriteSTLED316SMode@msg stored from wreg
  5912  0013DA  6E46               	movwf	WriteSTLED316SMode@msg^0,c
  5913  0013DC                     
  5914                           ;Display.c: 191: void WriteSTLED316SMode( char msg);Display.c: 192: {;Display.c: 193:  L
      +                          ATCbits.LATC4 = 0;
  5915  0013DC  988B               	bcf	139,4,c	;volatile
  5916  0013DE                     
  5917                           ;Display.c: 195:  STLED316s_SPI_SendData (0x00 );
  5918  0013DE  0E00               	movlw	0
  5919  0013E0  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5920  0013E4                     
  5921                           ;Display.c: 198:  LATCbits.LATC4 = 1;
  5922  0013E4  888B               	bsf	139,4,c	;volatile
  5923  0013E6                     
  5924                           ;Display.c: 200:  LATCbits.LATC4 = 0;
  5925  0013E6  988B               	bcf	139,4,c	;volatile
  5926                           
  5927                           ;Display.c: 202:  STLED316s_SPI_SendData (0x00);
  5928  0013E8  0E00               	movlw	0
  5929  0013EA  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5930                           
  5931                           ;Display.c: 204:  switch(msg)
  5932  0013EE  EF39  F00A         	goto	l4445
  5933  0013F2                     l4427:
  5934                           
  5935                           ;Display.c: 207:      STLED316s_SPI_SendData (0x79);
  5936  0013F2  0E79               	movlw	121
  5937  0013F4  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5938                           
  5939                           ;Display.c: 208:         STLED316s_SPI_SendData (0x3F);
  5940  0013F8  0E3F               	movlw	63
  5941  0013FA  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5942                           
  5943                           ;Display.c: 209:        break;
  5944  0013FE  EF66  F00A         	goto	l440
  5945  001402                     l4429:
  5946                           
  5947                           ;Display.c: 211:      STLED316s_SPI_SendData (0x3F);
  5948  001402  0E3F               	movlw	63
  5949  001404  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5950                           
  5951                           ;Display.c: 212:         STLED316s_SPI_SendData (0x73);
  5952  001408  0E73               	movlw	115
  5953  00140A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5954                           
  5955                           ;Display.c: 213:       break;
  5956  00140E  EF66  F00A         	goto	l440
  5957  001412                     l4431:
  5958                           
  5959                           ;Display.c: 215:      STLED316s_SPI_SendData (0x39);
  5960  001412  0E39               	movlw	57
  5961  001414  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5962                           
  5963                           ;Display.c: 216:         STLED316s_SPI_SendData (0x77);
  5964  001418  0E77               	movlw	119
  5965  00141A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5966                           
  5967                           ;Display.c: 217:        break;
  5968  00141E  EF66  F00A         	goto	l440
  5969  001422                     l4433:
  5970                           
  5971                           ;Display.c: 219:      STLED316s_SPI_SendData (0x00);
  5972  001422  0E00               	movlw	0
  5973  001424  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5974                           
  5975                           ;Display.c: 220:         STLED316s_SPI_SendData (0x00);
  5976  001428  0E00               	movlw	0
  5977  00142A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5978                           
  5979                           ;Display.c: 221:        break;
  5980  00142E  EF66  F00A         	goto	l440
  5981  001432                     l4435:
  5982                           
  5983                           ;Display.c: 223:      STLED316s_SPI_SendData (0x00);
  5984  001432  0E00               	movlw	0
  5985  001434  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5986                           
  5987                           ;Display.c: 224:         STLED316s_SPI_SendData (0x3F);
  5988  001438  0E3F               	movlw	63
  5989  00143A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5990                           
  5991                           ;Display.c: 225:         break;
  5992  00143E  EF66  F00A         	goto	l440
  5993  001442                     l4437:
  5994                           
  5995                           ;Display.c: 227:      STLED316s_SPI_SendData (0x79);
  5996  001442  0E79               	movlw	121
  5997  001444  EC9E  F00C         	call	_STLED316s_SPI_SendData
  5998                           
  5999                           ;Display.c: 228:         STLED316s_SPI_SendData (0x06);
  6000  001448  0E06               	movlw	6
  6001  00144A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6002                           
  6003                           ;Display.c: 229:         break;
  6004  00144E  EF66  F00A         	goto	l440
  6005  001452                     l4439:
  6006                           
  6007                           ;Display.c: 231:      STLED316s_SPI_SendData (0x77);
  6008  001452  0E77               	movlw	119
  6009  001454  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6010                           
  6011                           ;Display.c: 232:         STLED316s_SPI_SendData (0x3E);
  6012  001458  0E3E               	movlw	62
  6013  00145A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6014                           
  6015                           ;Display.c: 233:         break;
  6016  00145E  EF66  F00A         	goto	l440
  6017  001462                     l4441:
  6018                           
  6019                           ;Display.c: 235:      STLED316s_SPI_SendData (0x00);
  6020  001462  0E00               	movlw	0
  6021  001464  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6022                           
  6023                           ;Display.c: 236:         STLED316s_SPI_SendData (0x3E);
  6024  001468  0E3E               	movlw	62
  6025  00146A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6026                           
  6027                           ;Display.c: 237:         break;
  6028  00146E  EF66  F00A         	goto	l440
  6029  001472                     l4445:
  6030  001472  5046               	movf	WriteSTLED316SMode@msg^0,w,c
  6031  001474  6E44               	movwf	??_WriteSTLED316SMode^0,c
  6032  001476  6A45               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6033                           
  6034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6035                           ; Switch size 1, requested type "simple"
  6036                           ; Number of cases is 1, Range of values is 0 to 0
  6037                           ; switch strategies available:
  6038                           ; Name         Instructions Cycles
  6039                           ; simple_byte            4     3 (average)
  6040                           ;	Chosen strategy is simple_byte
  6041  001478  5045               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6042  00147A  0A00               	xorlw	0	; case 0
  6043  00147C  B4D8               	btfsc	status,2,c
  6044  00147E  EF43  F00A         	goto	l5447
  6045  001482  EF66  F00A         	goto	l440
  6046  001486                     l5447:
  6047                           
  6048                           ; Switch size 1, requested type "simple"
  6049                           ; Number of cases is 8, Range of values is 65 to 88
  6050                           ; switch strategies available:
  6051                           ; Name         Instructions Cycles
  6052                           ; simple_byte           25    13 (average)
  6053                           ;	Chosen strategy is simple_byte
  6054  001486  5044               	movf	??_WriteSTLED316SMode^0,w,c
  6055  001488  0A41               	xorlw	65	; case 65
  6056  00148A  B4D8               	btfsc	status,2,c
  6057  00148C  EF29  F00A         	goto	l4439
  6058  001490  0A02               	xorlw	2	; case 67
  6059  001492  B4D8               	btfsc	status,2,c
  6060  001494  EF09  F00A         	goto	l4431
  6061  001498  0A06               	xorlw	6	; case 69
  6062  00149A  B4D8               	btfsc	status,2,c
  6063  00149C  EFF9  F009         	goto	l4427
  6064  0014A0  0A02               	xorlw	2	; case 71
  6065  0014A2  B4D8               	btfsc	status,2,c
  6066  0014A4  EF19  F00A         	goto	l4435
  6067  0014A8  0A08               	xorlw	8	; case 79
  6068  0014AA  B4D8               	btfsc	status,2,c
  6069  0014AC  EF01  F00A         	goto	l4429
  6070  0014B0  0A1C               	xorlw	28	; case 83
  6071  0014B2  B4D8               	btfsc	status,2,c
  6072  0014B4  EF21  F00A         	goto	l4437
  6073  0014B8  0A05               	xorlw	5	; case 86
  6074  0014BA  B4D8               	btfsc	status,2,c
  6075  0014BC  EF31  F00A         	goto	l4441
  6076  0014C0  0A0E               	xorlw	14	; case 88
  6077  0014C2  B4D8               	btfsc	status,2,c
  6078  0014C4  EF11  F00A         	goto	l4433
  6079  0014C8  EF66  F00A         	goto	l440
  6080  0014CC                     l440:
  6081                           
  6082                           ;Display.c: 244:  LATCbits.LATC4 = 1;
  6083  0014CC  888B               	bsf	139,4,c	;volatile
  6084                           
  6085                           ;Display.c: 246:  LATCbits.LATC4 = 0;
  6086  0014CE  988B               	bcf	139,4,c	;volatile
  6087  0014D0                     
  6088                           ;Display.c: 248:  STLED316s_SPI_SendData ( 0x0D );
  6089  0014D0  0E0D               	movlw	13
  6090  0014D2  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6091  0014D6                     
  6092                           ;Display.c: 250:  LATCbits.LATC4 = 1;
  6093  0014D6  888B               	bsf	139,4,c	;volatile
  6094  0014D8  0012               	return		;funcret
  6095  0014DA                     __end_of_WriteSTLED316SMode:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function _WriteSTLED316SErr *****************
  6099 ;; Defined at:
  6100 ;;		line 291 in file "Display.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  msg             1    wreg     unsigned char 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  msg             1   14[COMRAM] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:        3 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    3
  6121 ;; This function calls:
  6122 ;;		_STLED316s_SPI_SendData
  6123 ;; This function is called by:
  6124 ;;		_MotorPosition_Init
  6125 ;;		_Homing_Again_Manual
  6126 ;;		_Homing_Again_Auto
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text31
  6131  0014DA                     __ptext31:
  6132                           	opt callstack 0
  6133  0014DA                     _WriteSTLED316SErr:
  6134                           	opt callstack 26
  6135                           
  6136                           ;incstack = 0
  6137                           ;WriteSTLED316SErr@msg stored from wreg
  6138  0014DA  6E46               	movwf	WriteSTLED316SErr@msg^0,c
  6139  0014DC                     
  6140                           ;Display.c: 291: void WriteSTLED316SErr( char msg);Display.c: 292: {;Display.c: 293:  LA
      +                          TCbits.LATC4 = 0;
  6141  0014DC  988B               	bcf	139,4,c	;volatile
  6142  0014DE                     
  6143                           ;Display.c: 295:  STLED316s_SPI_SendData (0x00 );
  6144  0014DE  0E00               	movlw	0
  6145  0014E0  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6146  0014E4                     
  6147                           ;Display.c: 298:  LATCbits.LATC4 = 1;
  6148  0014E4  888B               	bsf	139,4,c	;volatile
  6149  0014E6                     
  6150                           ;Display.c: 300:  LATCbits.LATC4 = 0;
  6151  0014E6  988B               	bcf	139,4,c	;volatile
  6152                           
  6153                           ;Display.c: 302:  STLED316s_SPI_SendData (0x00);
  6154  0014E8  0E00               	movlw	0
  6155  0014EA  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6156                           
  6157                           ;Display.c: 304:  switch(msg)
  6158  0014EE  EFB1  F00A         	goto	l4409
  6159  0014F2                     l4393:
  6160                           
  6161                           ;Display.c: 307:      STLED316s_SPI_SendData (0x79);
  6162  0014F2  0E79               	movlw	121
  6163  0014F4  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6164                           
  6165                           ;Display.c: 308:         STLED316s_SPI_SendData (0x77);
  6166  0014F8  0E77               	movlw	119
  6167  0014FA  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6168                           
  6169                           ;Display.c: 309:        break;
  6170  0014FE  EFDA  F00A         	goto	l459
  6171  001502                     l4395:
  6172                           
  6173                           ;Display.c: 311:      STLED316s_SPI_SendData (0x79);
  6174  001502  0E79               	movlw	121
  6175  001504  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6176                           
  6177                           ;Display.c: 312:         STLED316s_SPI_SendData (0x3F);
  6178  001508  0E3F               	movlw	63
  6179  00150A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6180                           
  6181                           ;Display.c: 313:       break;
  6182  00150E  EFDA  F00A         	goto	l459
  6183  001512                     l4397:
  6184                           
  6185                           ;Display.c: 315:      STLED316s_SPI_SendData (0x79);
  6186  001512  0E79               	movlw	121
  6187  001514  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6188                           
  6189                           ;Display.c: 316:         STLED316s_SPI_SendData (0x06);
  6190  001518  0E06               	movlw	6
  6191  00151A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6192                           
  6193                           ;Display.c: 317:        break;
  6194  00151E  EFDA  F00A         	goto	l459
  6195  001522                     l4399:
  6196                           
  6197                           ;Display.c: 319:      STLED316s_SPI_SendData (0x79);
  6198  001522  0E79               	movlw	121
  6199  001524  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6200                           
  6201                           ;Display.c: 320:         STLED316s_SPI_SendData (0x5B);
  6202  001528  0E5B               	movlw	91
  6203  00152A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6204                           
  6205                           ;Display.c: 321:        break;
  6206  00152E  EFDA  F00A         	goto	l459
  6207  001532                     l4401:
  6208                           
  6209                           ;Display.c: 323:      STLED316s_SPI_SendData (0x00);
  6210  001532  0E00               	movlw	0
  6211  001534  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6212                           
  6213                           ;Display.c: 324:         STLED316s_SPI_SendData (0x3F);
  6214  001538  0E3F               	movlw	63
  6215  00153A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6216                           
  6217                           ;Display.c: 325:         break;
  6218  00153E  EFDA  F00A         	goto	l459
  6219  001542                     l4403:
  6220                           
  6221                           ;Display.c: 327:      STLED316s_SPI_SendData (0x79);
  6222  001542  0E79               	movlw	121
  6223  001544  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6224                           
  6225                           ;Display.c: 328:         STLED316s_SPI_SendData (0x06);
  6226  001548  0E06               	movlw	6
  6227  00154A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6228                           
  6229                           ;Display.c: 329:         break;
  6230  00154E  EFDA  F00A         	goto	l459
  6231  001552                     l4405:
  6232                           
  6233                           ;Display.c: 331:      STLED316s_SPI_SendData (0x77);
  6234  001552  0E77               	movlw	119
  6235  001554  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6236                           
  6237                           ;Display.c: 332:         STLED316s_SPI_SendData (0x3E);
  6238  001558  0E3E               	movlw	62
  6239  00155A  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6240                           
  6241                           ;Display.c: 333:         break;
  6242  00155E  EFDA  F00A         	goto	l459
  6243  001562                     l4409:
  6244  001562  5046               	movf	WriteSTLED316SErr@msg^0,w,c
  6245  001564  6E44               	movwf	??_WriteSTLED316SErr^0,c
  6246  001566  6A45               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6247                           
  6248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6249                           ; Switch size 1, requested type "simple"
  6250                           ; Number of cases is 1, Range of values is 0 to 0
  6251                           ; switch strategies available:
  6252                           ; Name         Instructions Cycles
  6253                           ; simple_byte            4     3 (average)
  6254                           ;	Chosen strategy is simple_byte
  6255  001568  5045               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6256  00156A  0A00               	xorlw	0	; case 0
  6257  00156C  B4D8               	btfsc	status,2,c
  6258  00156E  EFBB  F00A         	goto	l5449
  6259  001572  EFDA  F00A         	goto	l459
  6260  001576                     l5449:
  6261                           
  6262                           ; Switch size 1, requested type "simple"
  6263                           ; Number of cases is 7, Range of values is 48 to 83
  6264                           ; switch strategies available:
  6265                           ; Name         Instructions Cycles
  6266                           ; simple_byte           22    12 (average)
  6267                           ;	Chosen strategy is simple_byte
  6268  001576  5044               	movf	??_WriteSTLED316SErr^0,w,c
  6269  001578  0A30               	xorlw	48	; case 48
  6270  00157A  B4D8               	btfsc	status,2,c
  6271  00157C  EF81  F00A         	goto	l4395
  6272  001580  0A01               	xorlw	1	; case 49
  6273  001582  B4D8               	btfsc	status,2,c
  6274  001584  EF89  F00A         	goto	l4397
  6275  001588  0A03               	xorlw	3	; case 50
  6276  00158A  B4D8               	btfsc	status,2,c
  6277  00158C  EF91  F00A         	goto	l4399
  6278  001590  0A73               	xorlw	115	; case 65
  6279  001592  B4D8               	btfsc	status,2,c
  6280  001594  EFA9  F00A         	goto	l4405
  6281  001598  0A04               	xorlw	4	; case 69
  6282  00159A  B4D8               	btfsc	status,2,c
  6283  00159C  EF79  F00A         	goto	l4393
  6284  0015A0  0A02               	xorlw	2	; case 71
  6285  0015A2  B4D8               	btfsc	status,2,c
  6286  0015A4  EF99  F00A         	goto	l4401
  6287  0015A8  0A14               	xorlw	20	; case 83
  6288  0015AA  B4D8               	btfsc	status,2,c
  6289  0015AC  EFA1  F00A         	goto	l4403
  6290  0015B0  EFDA  F00A         	goto	l459
  6291  0015B4                     l459:
  6292                           
  6293                           ;Display.c: 338:  LATCbits.LATC4 = 1;
  6294  0015B4  888B               	bsf	139,4,c	;volatile
  6295                           
  6296                           ;Display.c: 340:  LATCbits.LATC4 = 0;
  6297  0015B6  988B               	bcf	139,4,c	;volatile
  6298  0015B8                     
  6299                           ;Display.c: 342:  STLED316s_SPI_SendData ( 0x0D );
  6300  0015B8  0E0D               	movlw	13
  6301  0015BA  EC9E  F00C         	call	_STLED316s_SPI_SendData
  6302  0015BE                     
  6303                           ;Display.c: 344:  LATCbits.LATC4 = 1;
  6304  0015BE  888B               	bsf	139,4,c	;volatile
  6305  0015C0  0012               	return		;funcret
  6306  0015C2                     __end_of_WriteSTLED316SErr:
  6307                           	opt callstack 0
  6308                           
  6309 ;; *************** function _STLED316s_SPI_SendData *****************
  6310 ;; Defined at:
  6311 ;;		line 89 in file "Display.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  Data            1    wreg     unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  Data            1    8[COMRAM] unsigned char 
  6316 ;;  t               1   11[COMRAM] unsigned char 
  6317 ;;  i               1   10[COMRAM] unsigned char 
  6318 ;;  temp            1    9[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        6 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    2
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_InitSTLED316
  6339 ;;		_WriteSTLED316SData
  6340 ;;		_WriteSTLED316SMode
  6341 ;;		_WriteSTLED316SVibMode
  6342 ;;		_WriteSTLED316SErr
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text32
  6347  00193C                     __ptext32:
  6348                           	opt callstack 0
  6349  00193C                     _STLED316s_SPI_SendData:
  6350                           	opt callstack 27
  6351                           
  6352                           ;incstack = 0
  6353                           ;STLED316s_SPI_SendData@Data stored from wreg
  6354  00193C  6E40               	movwf	STLED316s_SPI_SendData@Data^0,c
  6355  00193E                     
  6356                           ;Display.c: 89: void STLED316s_SPI_SendData( unsigned char Data );Display.c: 90: {;Displ
      +                          ay.c: 91:  char i,temp,t;;Display.c: 93:  for(i = 0; i < 8 ;i ++)
  6357  00193E  0E00               	movlw	0
  6358  001940  6E42               	movwf	STLED316s_SPI_SendData@i^0,c
  6359  001942                     l405:
  6360                           
  6361                           ;Display.c: 94:  {;Display.c: 95:   LATCbits.LATC3 = 0;
  6362  001942  968B               	bcf	139,3,c	;volatile
  6363  001944                     
  6364                           ;Display.c: 96:   temp = Data & (0x1 << i);
  6365  001944  C042  F03E         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6366  001948  0E01               	movlw	1
  6367  00194A  6E3F               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6368  00194C  2A3E               	incf	??_STLED316s_SPI_SendData^0,f,c
  6369  00194E  EFAB  F00C         	goto	u2644
  6370  001952                     u2645:
  6371  001952  90D8               	bcf	status,0,c
  6372  001954  363F               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6373  001956                     u2644:
  6374  001956  2E3E               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6375  001958  EFA9  F00C         	goto	u2645
  6376  00195C  503F               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6377  00195E  1440               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6378  001960  6E41               	movwf	STLED316s_SPI_SendData@temp^0,c
  6379  001962                     
  6380                           ;Display.c: 97:   if(temp)
  6381  001962  5041               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6382  001964  B4D8               	btfsc	status,2,c
  6383  001966  EFB7  F00C         	goto	u2651
  6384  00196A  EFB9  F00C         	goto	u2650
  6385  00196E                     u2651:
  6386  00196E  EFBC  F00C         	goto	l407
  6387  001972                     u2650:
  6388  001972                     
  6389                           ;Display.c: 98:    LATCbits.LATC5 = 1;
  6390  001972  8A8B               	bsf	139,5,c	;volatile
  6391  001974  EFBD  F00C         	goto	l4215
  6392  001978                     l407:
  6393                           
  6394                           ;Display.c: 100:    LATCbits.LATC5 = 0;
  6395  001978  9A8B               	bcf	139,5,c	;volatile
  6396  00197A                     l4215:
  6397                           
  6398                           ;Display.c: 101:   for( t = 0 ; t < 5; t++);
  6399  00197A  0E00               	movlw	0
  6400  00197C  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6401  00197E                     l4221:
  6402  00197E  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6403  001980  0E04               	movlw	4
  6404  001982  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6405  001984  EFC6  F00C         	goto	u2661
  6406  001988  EFC8  F00C         	goto	u2660
  6407  00198C                     u2661:
  6408  00198C  EFBF  F00C         	goto	l4221
  6409  001990                     u2660:
  6410  001990                     
  6411                           ;Display.c: 102:   LATCbits.LATC3 = 1;
  6412  001990  868B               	bsf	139,3,c	;volatile
  6413  001992                     
  6414                           ;Display.c: 103:   for( t = 0 ; t < 5 ; t++);
  6415  001992  0E00               	movlw	0
  6416  001994  6E43               	movwf	STLED316s_SPI_SendData@t^0,c
  6417  001996                     l4231:
  6418  001996  2A43               	incf	STLED316s_SPI_SendData@t^0,f,c
  6419  001998  0E04               	movlw	4
  6420  00199A  6443               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6421  00199C  EFD2  F00C         	goto	u2671
  6422  0019A0  EFD4  F00C         	goto	u2670
  6423  0019A4                     u2671:
  6424  0019A4  EFCB  F00C         	goto	l4231
  6425  0019A8                     u2670:
  6426  0019A8                     
  6427                           ;Display.c: 104:  }
  6428  0019A8  2A42               	incf	STLED316s_SPI_SendData@i^0,f,c
  6429  0019AA  0E07               	movlw	7
  6430  0019AC  6442               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  6431  0019AE  EFDB  F00C         	goto	u2681
  6432  0019B2  EFDD  F00C         	goto	u2680
  6433  0019B6                     u2681:
  6434  0019B6  EFA1  F00C         	goto	l405
  6435  0019BA                     u2680:
  6436  0019BA  0012               	return		;funcret
  6437  0019BC                     __end_of_STLED316s_SPI_SendData:
  6438                           	opt callstack 0
  6439                           
  6440 ;; *************** function _Read_IR *****************
  6441 ;; Defined at:
  6442 ;;		line 801 in file "main.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  2    6[COMRAM] unsigned int 
  6449 ;; Registers used:
  6450 ;;		wreg, status,2
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;Total ram usage:        2 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:    2
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_MotorPosition_Init
  6467 ;;		_Homing_Again_Manual
  6468 ;;		_Homing_Again_Auto
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text33
  6473  001DCE                     __ptext33:
  6474                           	opt callstack 0
  6475  001DCE                     _Read_IR:
  6476                           	opt callstack 27
  6477  001DCE                     
  6478                           ;main.c: 804:     if(PORTAbits.RA1 == 1)
  6479  001DCE  A280               	btfss	128,1,c	;volatile
  6480  001DD0  EFEC  F00E         	goto	u1651
  6481  001DD4  EFEE  F00E         	goto	u1650
  6482  001DD8                     u1651:
  6483  001DD8  EFF4  F00E         	goto	l2983
  6484  001DDC                     u1650:
  6485  001DDC                     
  6486                           ;main.c: 805:     {;main.c: 806:         return 0;
  6487  001DDC  0E00               	movlw	0
  6488  001DDE  6E3F               	movwf	(?_Read_IR+1)^0,c
  6489  001DE0  0E00               	movlw	0
  6490  001DE2  6E3E               	movwf	?_Read_IR^0,c
  6491  001DE4  EFF8  F00E         	goto	l302
  6492  001DE8                     l2983:
  6493                           
  6494                           ;main.c: 809:     {;main.c: 810:         return 1;
  6495  001DE8  0E00               	movlw	0
  6496  001DEA  6E3F               	movwf	(?_Read_IR+1)^0,c
  6497  001DEC  0E01               	movlw	1
  6498  001DEE  6E3E               	movwf	?_Read_IR^0,c
  6499  001DF0                     l302:
  6500  001DF0  0012               	return		;funcret
  6501  001DF2                     __end_of_Read_IR:
  6502                           	opt callstack 0
  6503                           
  6504 ;; *************** function _MotorON *****************
  6505 ;; Defined at:
  6506 ;;		line 43 in file "MotorDriver.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;		None
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;Total ram usage:        0 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    3
  6527 ;; This function calls:
  6528 ;;		_Set_RG3
  6529 ;; This function is called by:
  6530 ;;		_MotorPosition_Init
  6531 ;;		_Homing_Again_Manual
  6532 ;;		_Homing_Again_Auto
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text34
  6537  001E86                     __ptext34:
  6538                           	opt callstack 0
  6539  001E86                     _MotorON:
  6540                           	opt callstack 26
  6541  001E86                     
  6542                           ;MotorDriver.c: 45:  LATGbits.LATG3 = 1;
  6543  001E86  868F               	bsf	143,3,c	;volatile
  6544                           
  6545                           ;MotorDriver.c: 46:  LATGbits.LATG4 = 1;
  6546  001E88  888F               	bsf	143,4,c	;volatile
  6547  001E8A                     
  6548                           ;MotorDriver.c: 48:  Set_RG3();
  6549  001E8A  EC59  F00F         	call	_Set_RG3	;wreg free
  6550  001E8E  0012               	return		;funcret
  6551  001E90                     __end_of_MotorON:
  6552                           	opt callstack 0
  6553                           
  6554 ;; *************** function _Set_RG3 *****************
  6555 ;; Defined at:
  6556 ;;		line 29 in file "MotorDriver.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;Total ram usage:        0 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    2
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_MotorON
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text35
  6585  001EB2                     __ptext35:
  6586                           	opt callstack 0
  6587  001EB2                     _Set_RG3:
  6588                           	opt callstack 26
  6589  001EB2                     
  6590                           ;MotorDriver.c: 33:     CCP4CON = 0x08;
  6591  001EB2  0E08               	movlw	8
  6592  001EB4  6E73               	movwf	115,c	;volatile
  6593  001EB6                     
  6594                           ;MotorDriver.c: 34:   T4CONbits.TMR4ON = 1;
  6595  001EB6  8476               	bsf	118,2,c	;volatile
  6596  001EB8  0012               	return		;funcret
  6597  001EBA                     __end_of_Set_RG3:
  6598                           	opt callstack 0
  6599                           
  6600 ;; *************** function _MotorBREAK *****************
  6601 ;; Defined at:
  6602 ;;		line 51 in file "MotorDriver.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:    3
  6623 ;; This function calls:
  6624 ;;		_Clr_RG3
  6625 ;; This function is called by:
  6626 ;;		_MotorPosition_Init
  6627 ;;		_Homing_Again_Manual
  6628 ;;		_Homing_Again_Auto
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text36
  6633  001E90                     __ptext36:
  6634                           	opt callstack 0
  6635  001E90                     _MotorBREAK:
  6636                           	opt callstack 26
  6637  001E90                     
  6638                           ;MotorDriver.c: 54:  Clr_RG3();
  6639  001E90  EC5D  F00F         	call	_Clr_RG3	;wreg free
  6640  001E94                     
  6641                           ;MotorDriver.c: 56:  LATGbits.LATG3 = 1;
  6642  001E94  868F               	bsf	143,3,c	;volatile
  6643  001E96                     
  6644                           ;MotorDriver.c: 57:  LATGbits.LATG4 = 1;
  6645  001E96  888F               	bsf	143,4,c	;volatile
  6646  001E98  0012               	return		;funcret
  6647  001E9A                     __end_of_MotorBREAK:
  6648                           	opt callstack 0
  6649                           
  6650 ;; *************** function _Clr_RG3 *****************
  6651 ;; Defined at:
  6652 ;;		line 37 in file "MotorDriver.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;Total ram usage:        0 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    2
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_MotorBREAK
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text37
  6681  001EBA                     __ptext37:
  6682                           	opt callstack 0
  6683  001EBA                     _Clr_RG3:
  6684                           	opt callstack 26
  6685  001EBA                     
  6686                           ;MotorDriver.c: 39:  CCP4CON = 0x00;
  6687  001EBA  0E00               	movlw	0
  6688  001EBC  6E73               	movwf	115,c	;volatile
  6689  001EBE                     
  6690                           ;MotorDriver.c: 40:     T4CONbits.TMR4ON = 0;
  6691  001EBE  9476               	bcf	118,2,c	;volatile
  6692  001EC0  0012               	return		;funcret
  6693  001EC2                     __end_of_Clr_RG3:
  6694                           	opt callstack 0
  6695                           
  6696 ;; *************** function _AD_capture_BattVoltage *****************
  6697 ;; Defined at:
  6698 ;;		line 1159 in file "main.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;Total ram usage:        2 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    3
  6719 ;; This function calls:
  6720 ;;		_delay_1ms
  6721 ;; This function is called by:
  6722 ;;		_main
  6723 ;;		_Homing_Again_Manual
  6724 ;;		_Homing_Again_Auto
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text38
  6729  001C12                     __ptext38:
  6730                           	opt callstack 0
  6731  001C12                     _AD_capture_BattVoltage:
  6732                           	opt callstack 26
  6733  001C12                     
  6734                           ;main.c: 1162:     ADCON0bits.CHS0=0;
  6735  001C12  94C2               	bcf	194,2,c	;volatile
  6736                           
  6737                           ;main.c: 1163:     ADCON0bits.CHS1=0;
  6738  001C14  96C2               	bcf	194,3,c	;volatile
  6739                           
  6740                           ;main.c: 1164:     ADCON0bits.CHS2=0;
  6741  001C16  98C2               	bcf	194,4,c	;volatile
  6742                           
  6743                           ;main.c: 1165:     ADCON0bits.CHS3=0;
  6744  001C18  9AC2               	bcf	194,5,c	;volatile
  6745                           
  6746                           ;main.c: 1167:  ADCON0bits.ADON=1;
  6747  001C1A  80C2               	bsf	194,0,c	;volatile
  6748  001C1C                     
  6749                           ;main.c: 1168:  delay_1ms(5);
  6750  001C1C  0E00               	movlw	0
  6751  001C1E  6E3F               	movwf	(delay_1ms@time+1)^0,c
  6752  001C20  0E05               	movlw	5
  6753  001C22  6E3E               	movwf	delay_1ms@time^0,c
  6754  001C24  EC98  F00E         	call	_delay_1ms	;wreg free
  6755  001C28                     
  6756                           ;main.c: 1169:  ADCON0bits.GO=1;
  6757  001C28  82C2               	bsf	194,1,c	;volatile
  6758  001C2A                     l383:
  6759  001C2A  B2C2               	btfsc	194,1,c	;volatile
  6760  001C2C  EF1A  F00E         	goto	u1641
  6761  001C30  EF1C  F00E         	goto	u1640
  6762  001C34                     u1641:
  6763  001C34  EF15  F00E         	goto	l383
  6764  001C38                     u1640:
  6765  001C38                     
  6766                           ;main.c: 1173:     VOLTAGE = (ADRESH*256) | (ADRESL);
  6767  001C38  50C3               	movf	195,w,c	;volatile
  6768  001C3A  CFC4 F041          	movff	4036,??_AD_capture_BattVoltage	;volatile
  6769  001C3E  6A42               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  6770  001C40  C041  F042         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  6771  001C44  6A41               	clrf	??_AD_capture_BattVoltage^0,c
  6772  001C46  1041               	iorwf	??_AD_capture_BattVoltage^0,w,c
  6773  001C48  6E11               	movwf	_VOLTAGE^0,c
  6774  001C4A  5042               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  6775  001C4C  6E12               	movwf	(_VOLTAGE+1)^0,c
  6776  001C4E  0012               	return		;funcret
  6777  001C50                     __end_of_AD_capture_BattVoltage:
  6778                           	opt callstack 0
  6779                           
  6780 ;; *************** function _delay_1ms *****************
  6781 ;; Defined at:
  6782 ;;		line 789 in file "main.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  time            2    6[COMRAM] unsigned int 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;Total ram usage:        3 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    2
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_MotorPosition_Init
  6807 ;;		_Homing_Again_Manual
  6808 ;;		_Homing_Again_Auto
  6809 ;;		_AD_capture_BattVoltage
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text39
  6814  001D30                     __ptext39:
  6815                           	opt callstack 0
  6816  001D30                     _delay_1ms:
  6817                           	opt callstack 27
  6818  001D30                     
  6819                           ;main.c: 789: void delay_1ms(unsigned int time);main.c: 790:  {;main.c: 791:    while(ti
      +                          me > 0)
  6820  001D30  EFA4  F00E         	goto	l295
  6821  001D34                     l2709:
  6822                           
  6823                           ;main.c: 792:    {;main.c: 793:        _delay((unsigned long)((1)*(8000000/4000.0)));
  6824  001D34  0E03               	movlw	3
  6825  001D36  6E40               	movwf	??_delay_1ms^0,c
  6826  001D38  0E98               	movlw	152
  6827  001D3A                     u3737:
  6828  001D3A  2EE8               	decfsz	wreg,f,c
  6829  001D3C  D7FE               	bra	u3737
  6830  001D3E  2E40               	decfsz	??_delay_1ms^0,f,c
  6831  001D40  D7FC               	bra	u3737
  6832  001D42                     
  6833                           ;main.c: 794:       time--;
  6834  001D42  063E               	decf	delay_1ms@time^0,f,c
  6835  001D44  A0D8               	btfss	status,0,c
  6836  001D46  063F               	decf	(delay_1ms@time+1)^0,f,c
  6837  001D48                     l295:
  6838                           
  6839                           ;main.c: 791:    while(time > 0)
  6840  001D48  503E               	movf	delay_1ms@time^0,w,c
  6841  001D4A  103F               	iorwf	(delay_1ms@time+1)^0,w,c
  6842  001D4C  A4D8               	btfss	status,2,c
  6843  001D4E  EFAB  F00E         	goto	u1381
  6844  001D52  EFAD  F00E         	goto	u1380
  6845  001D56                     u1381:
  6846  001D56  EF9A  F00E         	goto	l2709
  6847  001D5A                     u1380:
  6848  001D5A  0012               	return		;funcret
  6849  001D5C                     __end_of_delay_1ms:
  6850                           	opt callstack 0
  6851                           
  6852 ;; *************** function _high_isr *****************
  6853 ;; Defined at:
  6854 ;;		line 663 in file "main.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  i               1    5[COMRAM] unsigned char 
  6859 ;;  c               1    4[COMRAM] unsigned char 
  6860 ;;  Temp            1    3[COMRAM] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;Total ram usage:        5 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    1
  6877 ;; This function calls:
  6878 ;;		_Low_Power_Indicator
  6879 ;;		_Read1USART
  6880 ;;		i2_Write1USART
  6881 ;; This function is called by:
  6882 ;;		Interrupt level 2
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	intcode
  6887  000008                     __pintcode:
  6888                           	opt callstack 0
  6889  000008                     _high_isr:
  6890                           	opt callstack 25
  6891                           
  6892                           ;incstack = 0
  6893  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6894  00000A  CFD9 F039          	movff	fsr2l,??_high_isr
  6895  00000E  CFDA F03A          	movff	fsr2h,??_high_isr+1
  6896  000012                     
  6897                           ;main.c: 665:     unsigned char c, i;;main.c: 666:  unsigned char Temp;;main.c: 668:    
      +                           if ((PIR1bits.RC1IF))
  6898  000012  AA9E               	btfss	158,5,c	;volatile
  6899  000014  EF0E  F000         	goto	i2u244_41
  6900  000018  EF10  F000         	goto	i2u244_40
  6901  00001C                     i2u244_41:
  6902  00001C  EFE1  F000         	goto	i2l262
  6903  000020                     i2u244_40:
  6904  000020                     
  6905                           ;main.c: 669:  {;main.c: 671:   c=Read1USART();
  6906  000020  ECD4  F00E         	call	_Read1USART	;wreg free
  6907  000024  6E3C               	movwf	high_isr@c^0,c
  6908  000026                     
  6909                           ;main.c: 673:   if ((c == 0xA5) && ((Serial_Flag == 0)||(Busy == 1)))
  6910  000026  0EA5               	movlw	165
  6911  000028  183C               	xorwf	high_isr@c^0,w,c
  6912  00002A  A4D8               	btfss	status,2,c
  6913  00002C  EF1A  F000         	goto	i2u245_41
  6914  000030  EF1C  F000         	goto	i2u245_40
  6915  000034                     i2u245_41:
  6916  000034  EF3E  F000         	goto	i2l3933
  6917  000038                     i2u245_40:
  6918  000038  5037               	movf	_Serial_Flag^0,w,c
  6919  00003A  B4D8               	btfsc	status,2,c
  6920  00003C  EF22  F000         	goto	i2u246_41
  6921  000040  EF24  F000         	goto	i2u246_40
  6922  000044                     i2u246_41:
  6923  000044  EF2C  F000         	goto	i2l3927
  6924  000048                     i2u246_40:
  6925  000048  0433               	decf	_Busy^0,w,c
  6926  00004A  A4D8               	btfss	status,2,c
  6927  00004C  EF2A  F000         	goto	i2u247_41
  6928  000050  EF2C  F000         	goto	i2u247_40
  6929  000054                     i2u247_41:
  6930  000054  EF3E  F000         	goto	i2l3933
  6931  000058                     i2u247_40:
  6932  000058                     i2l3927:
  6933                           
  6934                           ;main.c: 674:   {;main.c: 675:    Serial_GData = 1;
  6935  000058  0E01               	movlw	1
  6936  00005A  6E36               	movwf	_Serial_GData^0,c
  6937                           
  6938                           ;main.c: 676:    Serial_Count = 0;
  6939  00005C  0E00               	movlw	0
  6940  00005E  6E2A               	movwf	(_Serial_Count+1)^0,c
  6941  000060  0E00               	movlw	0
  6942  000062  6E29               	movwf	_Serial_Count^0,c
  6943  000064                     
  6944                           ;main.c: 677:    Serial_Buffer[Serial_Count] = c;
  6945  000064  0E01               	movlw	low _Serial_Buffer
  6946  000066  2429               	addwf	_Serial_Count^0,w,c
  6947  000068  6ED9               	movwf	fsr2l,c
  6948  00006A  0E00               	movlw	high _Serial_Buffer
  6949  00006C  202A               	addwfc	(_Serial_Count+1)^0,w,c
  6950  00006E  6EDA               	movwf	fsr2h,c
  6951  000070  C03C  FFDF         	movff	high_isr@c,indf2
  6952  000074                     i2l3931:
  6953                           
  6954                           ;main.c: 678:             Serial_Count++;
  6955  000074  4A29               	infsnz	_Serial_Count^0,f,c
  6956  000076  2A2A               	incf	(_Serial_Count+1)^0,f,c
  6957                           
  6958                           ;main.c: 679:   }
  6959  000078  EFEB  F000         	goto	i2l3999
  6960  00007C                     i2l3933:
  6961  00007C  0436               	decf	_Serial_GData^0,w,c
  6962  00007E  A4D8               	btfss	status,2,c
  6963  000080  EF44  F000         	goto	i2u248_41
  6964  000084  EF46  F000         	goto	i2u248_40
  6965  000088                     i2u248_41:
  6966  000088  EFEB  F000         	goto	i2l3999
  6967  00008C                     i2u248_40:
  6968  00008C                     
  6969                           ;main.c: 681:   {;main.c: 682:    Serial_Buffer[Serial_Count] = c;
  6970  00008C  0E01               	movlw	low _Serial_Buffer
  6971  00008E  2429               	addwf	_Serial_Count^0,w,c
  6972  000090  6ED9               	movwf	fsr2l,c
  6973  000092  0E00               	movlw	high _Serial_Buffer
  6974  000094  202A               	addwfc	(_Serial_Count+1)^0,w,c
  6975  000096  6EDA               	movwf	fsr2h,c
  6976  000098  C03C  FFDF         	movff	high_isr@c,indf2
  6977  00009C                     
  6978                           ;main.c: 684:    if(Serial_Count<5)
  6979  00009C  502A               	movf	(_Serial_Count+1)^0,w,c
  6980  00009E  E107               	bnz	i2u249_41
  6981  0000A0  0E05               	movlw	5
  6982  0000A2  5C29               	subwf	_Serial_Count^0,w,c
  6983  0000A4  B0D8               	btfsc	status,0,c
  6984  0000A6  EF57  F000         	goto	i2u249_41
  6985  0000AA  EF59  F000         	goto	i2u249_40
  6986  0000AE                     i2u249_41:
  6987  0000AE  EFDD  F000         	goto	i2l3993
  6988  0000B2                     i2u249_40:
  6989  0000B2                     
  6990                           ;main.c: 685:             {;main.c: 686:                 if (c == 0x5A)
  6991  0000B2  0E5A               	movlw	90
  6992  0000B4  183C               	xorwf	high_isr@c^0,w,c
  6993  0000B6  A4D8               	btfss	status,2,c
  6994  0000B8  EF60  F000         	goto	i2u250_41
  6995  0000BC  EF62  F000         	goto	i2u250_40
  6996  0000C0                     i2u250_41:
  6997  0000C0  EF3A  F000         	goto	i2l3931
  6998  0000C4                     i2u250_40:
  6999  0000C4                     
  7000                           ;main.c: 687:                 {;main.c: 688:                     Temp = Serial_Buffer[1]
      +                           + Serial_Buffer[2];
  7001  0000C4  5002               	movf	(_Serial_Buffer+1)^0,w,c
  7002  0000C6  2403               	addwf	(_Serial_Buffer+2)^0,w,c
  7003  0000C8  6E3B               	movwf	high_isr@Temp^0,c
  7004                           
  7005                           ;main.c: 690:                     if (Temp == Serial_Buffer[3])
  7006  0000CA  503B               	movf	high_isr@Temp^0,w,c
  7007  0000CC  1804               	xorwf	(_Serial_Buffer+3)^0,w,c
  7008  0000CE  A4D8               	btfss	status,2,c
  7009  0000D0  EF6C  F000         	goto	i2u251_41
  7010  0000D4  EF6E  F000         	goto	i2u251_40
  7011  0000D8                     i2u251_41:
  7012  0000D8  EFB1  F000         	goto	i2l3973
  7013  0000DC                     i2u251_40:
  7014  0000DC                     
  7015                           ;main.c: 691:                     {;main.c: 692:                         if(Busy==0 || S
      +                          erial_Buffer[2]==0xF5)
  7016  0000DC  5033               	movf	_Busy^0,w,c
  7017  0000DE  B4D8               	btfsc	status,2,c
  7018  0000E0  EF74  F000         	goto	i2u252_41
  7019  0000E4  EF76  F000         	goto	i2u252_40
  7020  0000E8                     i2u252_41:
  7021  0000E8  EF7F  F000         	goto	i2l273
  7022  0000EC                     i2u252_40:
  7023  0000EC  0EF5               	movlw	245
  7024  0000EE  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7025  0000F0  A4D8               	btfss	status,2,c
  7026  0000F2  EF7D  F000         	goto	i2u253_41
  7027  0000F6  EF7F  F000         	goto	i2u253_40
  7028  0000FA                     i2u253_41:
  7029  0000FA  EF97  F000         	goto	i2l271
  7030  0000FE                     i2u253_40:
  7031  0000FE                     i2l273:
  7032                           
  7033                           ;main.c: 693:                         {;main.c: 694:                             INTCONb
      +                          its.GIE=0;
  7034  0000FE  9EF2               	bcf	242,7,c	;volatile
  7035  000100                     
  7036                           ;main.c: 695:                             for (i=0; i<5; i++)
  7037  000100  0E00               	movlw	0
  7038  000102  6E3D               	movwf	high_isr@i^0,c
  7039  000104                     i2l3953:
  7040                           
  7041                           ;main.c: 696:                             {;main.c: 697:                                
      +                           Write1USART(Serial_Buffer[i]);
  7042  000104  0E01               	movlw	low _Serial_Buffer
  7043  000106  243D               	addwf	high_isr@i^0,w,c
  7044  000108  6ED9               	movwf	fsr2l,c
  7045  00010A  6ADA               	clrf	fsr2h,c
  7046  00010C  0E00               	movlw	high _Serial_Buffer
  7047  00010E  22DA               	addwfc	fsr2h,f,c
  7048  000110  50DF               	movf	indf2,w,c
  7049  000112  EC1B  F00F         	call	i2_Write1USART
  7050  000116                     
  7051                           ;main.c: 698:                             }
  7052  000116  2A3D               	incf	high_isr@i^0,f,c
  7053  000118  0E04               	movlw	4
  7054  00011A  643D               	cpfsgt	high_isr@i^0,c
  7055  00011C  EF92  F000         	goto	i2u254_41
  7056  000120  EF94  F000         	goto	i2u254_40
  7057  000124                     i2u254_41:
  7058  000124  EF82  F000         	goto	i2l3953
  7059  000128                     i2u254_40:
  7060  000128                     
  7061                           ;main.c: 699:                             INTCONbits.GIE=1;
  7062  000128  8EF2               	bsf	242,7,c	;volatile
  7063                           
  7064                           ;main.c: 700:                         }
  7065  00012A  EFA7  F000         	goto	i2l3971
  7066  00012E                     i2l271:
  7067                           
  7068                           ;main.c: 702:                         {;main.c: 703:                             INTCONb
      +                          its.GIE=0;
  7069  00012E  9EF2               	bcf	242,7,c	;volatile
  7070  000130                     
  7071                           ;main.c: 704:                             for (i=0; i<5; i++)
  7072  000130  0E00               	movlw	0
  7073  000132  6E3D               	movwf	high_isr@i^0,c
  7074  000134                     i2l3965:
  7075                           
  7076                           ;main.c: 705:                             {;main.c: 706:                                
      +                           Write1USART(0x16);
  7077  000134  0E16               	movlw	22
  7078  000136  EC1B  F00F         	call	i2_Write1USART
  7079  00013A                     
  7080                           ;main.c: 707:                             }
  7081  00013A  2A3D               	incf	high_isr@i^0,f,c
  7082  00013C  0E04               	movlw	4
  7083  00013E  643D               	cpfsgt	high_isr@i^0,c
  7084  000140  EFA4  F000         	goto	i2u255_41
  7085  000144  EFA6  F000         	goto	i2u255_40
  7086  000148                     i2u255_41:
  7087  000148  EF9A  F000         	goto	i2l3965
  7088  00014C                     i2u255_40:
  7089  00014C                     
  7090                           ;main.c: 708:                             INTCONbits.GIE=1;
  7091  00014C  8EF2               	bsf	242,7,c	;volatile
  7092  00014E                     i2l3971:
  7093                           
  7094                           ;main.c: 711:                         Serial_Flag = 1;
  7095  00014E  0E01               	movlw	1
  7096  000150  6E37               	movwf	_Serial_Flag^0,c
  7097                           
  7098                           ;main.c: 712:                         Serial_Count = 0;
  7099  000152  0E00               	movlw	0
  7100  000154  6E2A               	movwf	(_Serial_Count+1)^0,c
  7101  000156  0E00               	movlw	0
  7102  000158  6E29               	movwf	_Serial_Count^0,c
  7103                           
  7104                           ;main.c: 713:                         OpMode = AUTO_MODE;
  7105  00015A  0E02               	movlw	2
  7106  00015C  6E30               	movwf	_OpMode^0,c	;volatile
  7107                           
  7108                           ;main.c: 715:                     }
  7109  00015E  EFC7  F000         	goto	i2l3987
  7110  000162                     i2l3973:
  7111                           
  7112                           ;main.c: 717:                     {;main.c: 718:                         Serial_Flag = 0
      +                          ;
  7113  000162  0E00               	movlw	0
  7114  000164  6E37               	movwf	_Serial_Flag^0,c
  7115                           
  7116                           ;main.c: 719:                         Serial_Count = 0;
  7117  000166  0E00               	movlw	0
  7118  000168  6E2A               	movwf	(_Serial_Count+1)^0,c
  7119  00016A  0E00               	movlw	0
  7120  00016C  6E29               	movwf	_Serial_Count^0,c
  7121  00016E                     
  7122                           ;main.c: 721:                         INTCONbits.GIE=0;
  7123  00016E  9EF2               	bcf	242,7,c	;volatile
  7124                           
  7125                           ;main.c: 722:                         for (i=0; i<5; i++)
  7126  000170  0E00               	movlw	0
  7127  000172  6E3D               	movwf	high_isr@i^0,c
  7128  000174                     i2l3981:
  7129                           
  7130                           ;main.c: 723:                         {;main.c: 724:                             Write1U
      +                          SART(0x15);
  7131  000174  0E15               	movlw	21
  7132  000176  EC1B  F00F         	call	i2_Write1USART
  7133  00017A                     
  7134                           ;main.c: 725:                         }
  7135  00017A  2A3D               	incf	high_isr@i^0,f,c
  7136  00017C  0E04               	movlw	4
  7137  00017E  643D               	cpfsgt	high_isr@i^0,c
  7138  000180  EFC4  F000         	goto	i2u256_41
  7139  000184  EFC6  F000         	goto	i2u256_40
  7140  000188                     i2u256_41:
  7141  000188  EFBA  F000         	goto	i2l3981
  7142  00018C                     i2u256_40:
  7143  00018C                     
  7144                           ;main.c: 726:                         INTCONbits.GIE=1;
  7145  00018C  8EF2               	bsf	242,7,c	;volatile
  7146  00018E                     i2l3987:
  7147                           
  7148                           ;main.c: 729:                     if(Serial_Buffer[2]==0xF5 && OpMode == AUTO_MODE)
  7149  00018E  0EF5               	movlw	245
  7150  000190  1803               	xorwf	(_Serial_Buffer+2)^0,w,c
  7151  000192  A4D8               	btfss	status,2,c
  7152  000194  EFCE  F000         	goto	i2u257_41
  7153  000198  EFD0  F000         	goto	i2u257_40
  7154  00019C                     i2u257_41:
  7155  00019C  EF3A  F000         	goto	i2l3931
  7156  0001A0                     i2u257_40:
  7157  0001A0  0E02               	movlw	2
  7158  0001A2  1830               	xorwf	_OpMode^0,w,c	;volatile
  7159  0001A4  A4D8               	btfss	status,2,c
  7160  0001A6  EFD7  F000         	goto	i2u258_41
  7161  0001AA  EFD9  F000         	goto	i2u258_40
  7162  0001AE                     i2u258_41:
  7163  0001AE  EF3A  F000         	goto	i2l3931
  7164  0001B2                     i2u258_40:
  7165  0001B2                     
  7166                           ;main.c: 730:                     {;main.c: 731:                         Stop = 1;
  7167  0001B2  0E01               	movlw	1
  7168  0001B4  6E35               	movwf	_Stop^0,c
  7169  0001B6  EF3A  F000         	goto	i2l3931
  7170  0001BA                     i2l3993:
  7171                           
  7172                           ;main.c: 736:             {;main.c: 737:                 Serial_GData = 0;
  7173  0001BA  0E00               	movlw	0
  7174  0001BC  6E36               	movwf	_Serial_GData^0,c
  7175  0001BE  EF3A  F000         	goto	i2l3931
  7176  0001C2                     i2l262:
  7177                           
  7178                           ;main.c: 744:     {;main.c: 745:         if (RCSTA1bits.OERR == 1)
  7179  0001C2  A2AC               	btfss	172,1,c	;volatile
  7180  0001C4  EFE6  F000         	goto	i2u259_41
  7181  0001C8  EFE8  F000         	goto	i2u259_40
  7182  0001CC                     i2u259_41:
  7183  0001CC  EFEB  F000         	goto	i2l3999
  7184  0001D0                     i2u259_40:
  7185  0001D0                     
  7186                           ;main.c: 746:         {;main.c: 747:             RCSTA1bits.OERR = 0;
  7187  0001D0  92AC               	bcf	172,1,c	;volatile
  7188                           
  7189                           ;main.c: 748:             RCSTA1bits.CREN = 0;
  7190  0001D2  98AC               	bcf	172,4,c	;volatile
  7191                           
  7192                           ;main.c: 749:             RCSTA1bits.CREN = 1;
  7193  0001D4  88AC               	bsf	172,4,c	;volatile
  7194  0001D6                     i2l3999:
  7195                           
  7196                           ;main.c: 753:     if (TMR1IF_triggered == 1)
  7197  0001D6  042B               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7198  0001D8  A4D8               	btfss	status,2,c
  7199  0001DA  EFF1  F000         	goto	i2u260_41
  7200  0001DE  EFF3  F000         	goto	i2u260_40
  7201  0001E2                     i2u260_41:
  7202  0001E2  EF39  F001         	goto	i2l4017
  7203  0001E6                     i2u260_40:
  7204  0001E6                     
  7205                           ;main.c: 754:     {;main.c: 755:         if(errorcounter >0)
  7206  0001E6  BE55               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7207  0001E8  EF00  F001         	goto	i2u261_41
  7208  0001EC  5055               	movf	(_errorcounter+3)^0,w,c	;volatile
  7209  0001EE  1054               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7210  0001F0  1053               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7211  0001F2  E108               	bnz	i2u261_40
  7212  0001F4  0452               	decf	_errorcounter^0,w,c	;volatile
  7213  0001F6  A0D8               	btfss	status,0,c
  7214  0001F8  EF00  F001         	goto	i2u261_41
  7215  0001FC  EF02  F001         	goto	i2u261_40
  7216  000200                     i2u261_41:
  7217  000200  EF0C  F001         	goto	i2l4005
  7218  000204                     i2u261_40:
  7219  000204                     
  7220                           ;main.c: 756:         {;main.c: 757:             errorcounter--;
  7221  000204  0EFF               	movlw	255
  7222  000206  2652               	addwf	_errorcounter^0,f,c	;volatile
  7223  000208  0EFF               	movlw	255
  7224  00020A  2253               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7225  00020C  0EFF               	movlw	255
  7226  00020E  2254               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7227  000210  0EFF               	movlw	255
  7228  000212  2255               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7229                           
  7230                           ;main.c: 758:         }
  7231  000214  EF14  F001         	goto	i2l4007
  7232  000218                     i2l4005:
  7233                           
  7234                           ;main.c: 760:         {;main.c: 761:             errorcounter = 0;
  7235  000218  0E00               	movlw	0
  7236  00021A  6E52               	movwf	_errorcounter^0,c	;volatile
  7237  00021C  0E00               	movlw	0
  7238  00021E  6E53               	movwf	(_errorcounter+1)^0,c	;volatile
  7239  000220  0E00               	movlw	0
  7240  000222  6E54               	movwf	(_errorcounter+2)^0,c	;volatile
  7241  000224  0E00               	movlw	0
  7242  000226  6E55               	movwf	(_errorcounter+3)^0,c	;volatile
  7243  000228                     i2l4007:
  7244                           
  7245                           ;main.c: 764:         if(LowPowerCounter >0)
  7246  000228  BE51               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7247  00022A  EF21  F001         	goto	i2u262_41
  7248  00022E  5051               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7249  000230  1050               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7250  000232  104F               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7251  000234  E108               	bnz	i2u262_40
  7252  000236  044E               	decf	_LowPowerCounter^0,w,c	;volatile
  7253  000238  A0D8               	btfss	status,0,c
  7254  00023A  EF21  F001         	goto	i2u262_41
  7255  00023E  EF23  F001         	goto	i2u262_40
  7256  000242                     i2u262_41:
  7257  000242  EF2D  F001         	goto	i2l4011
  7258  000246                     i2u262_40:
  7259  000246                     
  7260                           ;main.c: 765:         {;main.c: 766:             LowPowerCounter--;
  7261  000246  0EFF               	movlw	255
  7262  000248  264E               	addwf	_LowPowerCounter^0,f,c	;volatile
  7263  00024A  0EFF               	movlw	255
  7264  00024C  224F               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7265  00024E  0EFF               	movlw	255
  7266  000250  2250               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7267  000252  0EFF               	movlw	255
  7268  000254  2251               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7269                           
  7270                           ;main.c: 767:         }
  7271  000256  EF37  F001         	goto	i2l4015
  7272  00025A                     i2l4011:
  7273                           
  7274                           ;main.c: 769:         {;main.c: 770:             LowPowerCounter = 20;
  7275  00025A  0E14               	movlw	20
  7276  00025C  6E4E               	movwf	_LowPowerCounter^0,c	;volatile
  7277  00025E  0E00               	movlw	0
  7278  000260  6E4F               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7279  000262  0E00               	movlw	0
  7280  000264  6E50               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7281  000266  0E00               	movlw	0
  7282  000268  6E51               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7283  00026A                     
  7284                           ;main.c: 771:             Low_Power_Indicator();
  7285  00026A  EC7D  F00E         	call	_Low_Power_Indicator	;wreg free
  7286  00026E                     i2l4015:
  7287                           
  7288                           ;main.c: 774:         TMR1IF_triggered = 0;
  7289  00026E  0E00               	movlw	0
  7290  000270  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7291  000272                     i2l4017:
  7292                           
  7293                           ;main.c: 777:     if(TMR1IF)
  7294  000272  A09E               	btfss	3998,0,c	;volatile
  7295  000274  EF3E  F001         	goto	i2u263_41
  7296  000278  EF40  F001         	goto	i2u263_40
  7297  00027C                     i2u263_41:
  7298  00027C  EF47  F001         	goto	i2l292
  7299  000280                     i2u263_40:
  7300  000280                     
  7301                           ;main.c: 778:     {;main.c: 779:         TMR1 = 0x9E57;
  7302  000280  0E9E               	movlw	158
  7303  000282  6ECF               	movwf	207,c	;volatile
  7304  000284  0E57               	movlw	87
  7305  000286  6ECE               	movwf	206,c	;volatile
  7306  000288                     
  7307                           ;main.c: 780:         TMR1IF = 0;
  7308  000288  909E               	bcf	3998,0,c	;volatile
  7309                           
  7310                           ;main.c: 781:         TMR1IF_triggered = 1;
  7311  00028A  0E01               	movlw	1
  7312  00028C  6E2B               	movwf	_TMR1IF_triggered^0,c	;volatile
  7313  00028E                     i2l292:
  7314  00028E  C03A  FFDA         	movff	??_high_isr+1,fsr2h
  7315  000292  C039  FFD9         	movff	??_high_isr,fsr2l
  7316  000296  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7317  000298  0011               	retfie		f
  7318  00029A                     __end_of_high_isr:
  7319                           	opt callstack 0
  7320                           
  7321 ;; *************** function i2_Write1USART *****************
  7322 ;; Defined at:
  7323 ;;		line 48 in file "usart.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  data            1    wreg     unsigned char 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  data            1    0[COMRAM] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;Total ram usage:        1 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_high_isr
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text41
  7351  001E36                     __ptext41:
  7352                           	opt callstack 0
  7353  001E36                     i2_Write1USART:
  7354                           	opt callstack 25
  7355                           
  7356                           ;incstack = 0
  7357                           ;i2Write1USART@data stored from wreg
  7358  001E36  6E38               	movwf	i2Write1USART@data^0,c
  7359  001E38                     
  7360                           ;usart.c: 48: void Write1USART(char data);usart.c: 49: {;usart.c: 50:    TXREG1 = data;
  7361  001E38  C038  FFAE         	movff	i2Write1USART@data,4014	;volatile
  7362  001E3C                     i2l552:
  7363  001E3C  A2AD               	btfss	173,1,c	;volatile
  7364  001E3E  EF23  F00F         	goto	i2u203_41
  7365  001E42  EF25  F00F         	goto	i2u203_40
  7366  001E46                     i2u203_41:
  7367  001E46  EF1E  F00F         	goto	i2l552
  7368  001E4A                     i2u203_40:
  7369  001E4A  0012               	return		;funcret
  7370  001E4C                     __end_ofi2_Write1USART:
  7371                           	opt callstack 0
  7372                           
  7373 ;; *************** function _Read1USART *****************
  7374 ;; Defined at:
  7375 ;;		line 58 in file "usart.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  result          1    0[COMRAM] unsigned char 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      unsigned char 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;Total ram usage:        1 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_high_isr
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text42
  7403  001DA8                     __ptext42:
  7404                           	opt callstack 0
  7405  001DA8                     _Read1USART:
  7406                           	opt callstack 25
  7407  001DA8                     
  7408                           ;usart.c: 60:     char result;;usart.c: 62:     if (RCSTA1bits.OERR)
  7409  001DA8  A2AC               	btfss	172,1,c	;volatile
  7410  001DAA  EFD9  F00E         	goto	i2u70_41
  7411  001DAE  EFDB  F00E         	goto	i2u70_40
  7412  001DB2                     i2u70_41:
  7413  001DB2  EFE3  F00E         	goto	i2l558
  7414  001DB6                     i2u70_40:
  7415  001DB6                     
  7416                           ;usart.c: 63:     {;usart.c: 64:         RCSTA1bits.CREN = 0;
  7417  001DB6  98AC               	bcf	172,4,c	;volatile
  7418                           
  7419                           ;usart.c: 65:         result = RCREG1;
  7420  001DB8  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7421                           
  7422                           ;usart.c: 66:         result = RCREG1;
  7423  001DBC  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7424                           
  7425                           ;usart.c: 67:         RCSTA1bits.CREN = 1;
  7426  001DC0  88AC               	bsf	172,4,c	;volatile
  7427                           
  7428                           ;usart.c: 68:     }
  7429  001DC2  EFE5  F00E         	goto	i2l2115
  7430  001DC6                     i2l558:
  7431                           
  7432                           ;usart.c: 70:     {;usart.c: 71:         result = RCREG1;
  7433  001DC6  CFAF F038          	movff	4015,Read1USART@result	;volatile
  7434  001DCA                     i2l2115:
  7435                           
  7436                           ;usart.c: 74:     return result;
  7437  001DCA  5038               	movf	Read1USART@result^0,w,c
  7438  001DCC  0012               	return		;funcret
  7439  001DCE                     __end_of_Read1USART:
  7440                           	opt callstack 0
  7441                           
  7442 ;; *************** function _Low_Power_Indicator *****************
  7443 ;; Defined at:
  7444 ;;		line 1176 in file "main.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_high_isr
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text43
  7472  001CFA                     __ptext43:
  7473                           	opt callstack 0
  7474  001CFA                     _Low_Power_Indicator:
  7475                           	opt callstack 25
  7476  001CFA                     
  7477                           ;main.c: 1179:     if(VOLTAGE <= 0x0366)
  7478  001CFA  0E67               	movlw	103
  7479  001CFC  5C11               	subwf	_VOLTAGE^0,w,c
  7480  001CFE  0E03               	movlw	3
  7481  001D00  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7482  001D02  B0D8               	btfsc	status,0,c
  7483  001D04  EF86  F00E         	goto	i2u71_41
  7484  001D08  EF88  F00E         	goto	i2u71_40
  7485  001D0C                     i2u71_41:
  7486  001D0C  EF8B  F00E         	goto	i2l2123
  7487  001D10                     i2u71_40:
  7488  001D10                     
  7489                           ;main.c: 1180:     {;main.c: 1182:         LATDbits.LATD1=1;
  7490  001D10  828C               	bsf	140,1,c	;volatile
  7491                           
  7492                           ;main.c: 1184:     }
  7493  001D12  EF97  F00E         	goto	i2l392
  7494  001D16                     i2l2123:
  7495  001D16  0EC0               	movlw	192
  7496  001D18  5C11               	subwf	_VOLTAGE^0,w,c
  7497  001D1A  0E03               	movlw	3
  7498  001D1C  5812               	subwfb	(_VOLTAGE+1)^0,w,c
  7499  001D1E  A0D8               	btfss	status,0,c
  7500  001D20  EF94  F00E         	goto	i2u72_41
  7501  001D24  EF96  F00E         	goto	i2u72_40
  7502  001D28                     i2u72_41:
  7503  001D28  EF97  F00E         	goto	i2l392
  7504  001D2C                     i2u72_40:
  7505  001D2C                     
  7506                           ;main.c: 1186:     {;main.c: 1187:      LATDbits.LATD1=0;
  7507  001D2C  928C               	bcf	140,1,c	;volatile
  7508  001D2E                     i2l392:
  7509  001D2E  0012               	return		;funcret
  7510  001D30                     __end_of_Low_Power_Indicator:
  7511                           	opt callstack 0
  7512  0000                     
  7513                           	psect	rparam
  7514  0000                     
  7515                           	psect	temp
  7516  000059                     btemp:
  7517                           	opt callstack 0
  7518  000059                     	ds	1
  7519  0000                     int$flags	set	btemp
  7520  0000                     wtemp8	set	btemp+1
  7521  0000                     ttemp5	set	btemp+1
  7522  0000                     ttemp6	set	btemp+4
  7523  0000                     ttemp7	set	btemp+8
  7524                           tosu	equ	0xFFF
  7525                           tosh	equ	0xFFE
  7526                           tosl	equ	0xFFD
  7527                           stkptr	equ	0xFFC
  7528                           pclatu	equ	0xFFB
  7529                           pclath	equ	0xFFA
  7530                           pcl	equ	0xFF9
  7531                           tblptru	equ	0xFF8
  7532                           tblptrh	equ	0xFF7
  7533                           tblptrl	equ	0xFF6
  7534                           tablat	equ	0xFF5
  7535                           prodh	equ	0xFF4
  7536                           prodl	equ	0xFF3
  7537                           indf0	equ	0xFEF
  7538                           postinc0	equ	0xFEE
  7539                           postdec0	equ	0xFED
  7540                           preinc0	equ	0xFEC
  7541                           plusw0	equ	0xFEB
  7542                           fsr0h	equ	0xFEA
  7543                           fsr0l	equ	0xFE9
  7544                           wreg	equ	0xFE8
  7545                           indf1	equ	0xFE7
  7546                           postinc1	equ	0xFE6
  7547                           postdec1	equ	0xFE5
  7548                           preinc1	equ	0xFE4
  7549                           plusw1	equ	0xFE3
  7550                           fsr1h	equ	0xFE2
  7551                           fsr1l	equ	0xFE1
  7552                           bsr	equ	0xFE0
  7553                           indf2	equ	0xFDF
  7554                           postinc2	equ	0xFDE
  7555                           postdec2	equ	0xFDD
  7556                           preinc2	equ	0xFDC
  7557                           plusw2	equ	0xFDB
  7558                           fsr2h	equ	0xFDA
  7559                           fsr2l	equ	0xFD9
  7560                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      88
    BANK0           160      8      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_WriteSTLED316SData
    _main->_write_i2c
    _ToggleVIB_Mode->_write_i2c
    _Homing_Again_Manual->_WriteSTLED316SData

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22300
                                              6 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1873
                                             20 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     331
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2635
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2635
                                              0 BANK0      6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1418
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     548
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  2     2      0    5642
                                             17 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    2979
                                             14 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     275
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2994
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     331
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     300
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     309
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
     _Get7Seg
     _STLED316s_SPI_SendData
     ___awdiv
     ___awmod
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _write_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      28       5       25.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      58       1       93.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Sep 13 17:32:36 2021

                              _i 0015                    ??_i2c_Address 0040  
                   ___awdiv@sign 0043                    ?_InitSTLED316 0038  
                   __CFG_CP0$OFF 000000     __size_of_Low_Power_Indicator 0036  
                    i2c_Read@ack 0041                              l201 07AC  
                            l210 081A                              l202 079E  
                            l205 07EA                              l302 1DF0  
                            l230 0A4E                              l206 07DC  
                            l223 0986                              l320 0D46  
                            l312 13D8                              l240 0B74  
                            l209 0828                              l410 1990  
                            l323 0D52                              l413 19BA  
                            l405 1942                              l341 0F9A  
                            l317 1C10                              l245 0C1C  
                            l502 1DA6                              l190 06C6  
                            l407 1978                              l511 1EA8  
                            l440 14CC                              l344 0FE4  
                            l336 0F34                              l520 1CEE  
                            l192 06E0                              l168 0510  
                            l505 1EB0                              l521 1CF0  
                            l193 0736                              l362 11C0  
                            l354 1128                              l514 1E78  
                            l522 1CF8                              l194 06F6  
                            l178 0576                              l347 0FF0  
                            l435 18AE                              l611 1E6C  
                            l195 0708                              l179 057C  
                            l620 1E8E                              l372 1CC2  
                            l380 1E08                              l508 1EA0  
                            l357 115A                              l429 168C  
                            l517 1E5E                              l525 1B8C  
                            l197 0772                              l614 1EB8  
                            l454 1B3E                              l198 0764  
                            l295 1D48                              l383 1C2A  
                            l623 1E98                              l367 1C88  
                            l552 1E26                              l376 1AEA  
                            l528 1A96                              l617 1EC0  
                            l449 14D8                              l377 1AF0  
                            l705 12CC                              l298 1D5A  
                            l386 1C4E                              l467 15C0  
                            l459 15B4                              l555 1E34  
                            l549 1D80                              l399 193A  
                            l591 1A1C                              l496 1E1E  
                            l593 1A2A                              l594 1A2C  
                            l870 1800                              l857 1750  
                            _GIE 007F97                              _PR4 000F77  
                            _NUM 0019           __size_ofi2_Write1USART 0016  
                   ___awmod@sign 0043                              wreg 000FE8  
                     _TXSTA1bits 000FAD                    ??_i2c_Restart 003F  
                           l3101 19D6                             l3031 1A98  
                           l3111 19E0                             l3103 19D8  
                           l3025 1E90                             l3041 1ACA  
                           l3033 1AAE                             l3201 1E02  
                           l3121 19EA                             l3113 19E2  
                           l3105 19DA                             l3027 1E94  
                           l3043 1ACE                             l3131 19F4  
                           l3123 19EC                             l3115 19E4  
                           l3107 19DC                             l3029 1E96  
                           l3045 1AEC                             l3141 1A0E  
                           l3133 19F6                             l3125 19EE  
                           l3117 19E6                             l3109 19DE  
                           l3039 1AB8                             l3151 1A18  
                           l3143 1A10                             l3135 19F8  
                           l3127 19F0                             l3119 19E8  
                           l3153 1A1A                             l3145 1A12  
                           l3137 19FA                             l3129 19F2  
                           l5001 08FE                             l4211 1962  
                           l4203 193E                             l3147 1A14  
                           l3139 19FC                             l3091 1CD0  
                           l3083 1E9A                             l5011 0948  
                           l5003 090E                             l4221 197E  
                           l4213 1972                             l2701 1C92  
                           l4301 1704                             l3149 1A16  
                           l3181 1E60                             l3093 1CD8  
                           l3085 1E9E                             l5101 0B76  
                           l5013 0952                             l5005 091E  
                           l2711 1D42                             l4231 1996  
                           l4223 1980                             l4215 197A  
                           l2703 1CA2                             l4303 171A  
                           l4311 1730                             l3183 1E64  
                           l3191 1D5C                             l3095 1CE8  
                           l3087 1CC6                             l5111 0B9A  
                           l5031 09AC                             l5007 0922  
                           l5023 0988                             l4233 1998  
                           l4225 1992                             l4209 1944  
                           l4401 1532                             l2705 1CA6  
                           l4241 15C6                             l4313 1740  
                           l4305 1722                             l4321 1756  
                           l2801 1E56                             l3097 19BC  
                           l3185 1E66                             l3193 1D78  
                           l3089 1CCA                             l5113 0BA6  
                           l5105 0B7E                             l5041 09E0  
                           l5033 09B0                             l5025 0990  
                           l5017 096C                             l5009 0932  
                           l2707 1D30                             l2811 1EBE  
                           l4235 19A8                             l4411 15B8  
                           l4403 1542                             l4251 15EE  
                           l4243 15CE                             l4315 1748  
                           l4307 1724                             l4331 1786  
                           l4323 1764                             l3195 1DF2  
                           l2803 1E5A                             l3187 1E0A  
                           l3099 19C0                             l5115 0BB6  
                           l5123 0BDA                             l5107 0B8E  
                           l5131 0C3E                             l5051 0A50  
                           l5043 09EC                             l5035 09B8  
                           l5027 0994                             l5019 097E  
                           l2709 1D34                             l2805 1EB2  
                           l4237 19AA                             l4413 15BE  
                           l4405 1552                             l4421 13DE  
                           l4261 1616                             l4253 15F6  
                           l4245 15D6                             l4309 172A  
                           l4341 17CC                             l4333 1798  
                           l4325 176C                             l3197 1DFE  
                           l4501 1324                             l2821 11E8  
                           l2813 11C2                             l3189 1E0E  
                           l5141 0C5E                             l5133 0C4E  
                           l5125 0C1E                             l5117 0BC2  
                           l5109 0B92                             l5061 0A84  
                           l5053 0A6A                             l5045 09F8  
                           l5037 09C8                             l5029 099C  
                           l2807 1EB6                             l4431 1412  
                           l4423 13E4                             l4255 15FE  
                           l4247 15DE                             l4239 15C2  
                           l4351 17F8                             l4343 17D4  
                           l4335 17A0                             l4327 1770  
                           l4319 1752                             l3199 1E00  
                           l4511 1366                             l4503 1328  
                           l2831 1230                             l2823 11F6  
                           l2815 11C6                             l5143 0C7A  
                           l5135 0C52                             l5127 0C38  
                           l5119 0BCE                             l5071 0ACE  
                           l5063 0A94                             l5055 0A6C  
                           l5039 09D4                             l5151 0CC4  
                           l2809 1EBA                             l4409 1562  
                           l4441 1462                             l4433 1422  
                           l4425 13E6                             l4257 1606  
                           l4249 15E6                             l4265 161E  
                           l4281 16A8                             l4345 17DA  
                           l4337 17A8                             l4329 177E  
                           l4361 1844                             l4601 0DE2  
                           l4521 13A8                             l4513 137C  
                           l4505 133A                             l2841 127A  
                           l2833 1238                             l2825 1206  
                           l2817 11D4                             l5137 0C56  
                           l5129 0C3A                             l5081 0B14  
                           l5073 0AEA                             l5065 0A98  
                           l5049 0A04                             l5153 0CD4  
                           l4435 1432                             l4427 13F2  
                           l4419 13DC                             l4259 160E  
                           l4267 168A                             l4291 16CE  
                           l4283 16AC                             l4275 168E  
                           l4339 17B6                             l4347 17E0  
                           l4371 1894                             l4363 186C  
                           l4355 1802                             l4611 0E1E  
                           l4603 0DF2                             l4523 13B4  
                           l4515 1382                             l4507 134A  
                           l2851 12AC                             l2843 128A  
                           l2835 1244                             l2827 120A  
                           l2819 11E4                             l2691 1D98  
                           l4531 1BD4                             l5139 0C5C  
                           l5091 0B40                             l5083 0B18  
                           l5075 0B06                             l5067 0A9A  
                           l5059 0A74                             l5155 0CDC  
                           l4437 1442                             l4429 1402  
                           l4445 1472                             l2693 1E22  
                           l4701 1032                             l4293 16E0  
                           l4285 16BA                             l4277 1692  
                           l4349 17F0                             l4381 18AC  
                           l4373 189A                             l4365 187C  
                           l4357 183A                             l4621 0E56  
                           l4613 0E30                             l4605 0DFE  
                           l4461 18BE                             l4525 13B8  
                           l4517 1386                             l4509 135A  
                           l2853 12BC                             l2845 128C  
                           l2837 1252                             l2829 121A  
                           l4541 1C0E                             l4533 1BE4  
                           l3493 1C58                             l5085 0B1C  
                           l5077 0B0C                             l5069 0AB4  
                           l5149 0C80                             l4391 14E6  
                           l4447 14D0                             l4439 1452  
                           l2695 1C8A                             l4711 1070  
                           l4703 103E                             l4295 16E8  
                           l4287 16C2                             l4279 16A0  
                           l4375 18A2                             l4367 188C  
                           l4359 1842                             l4631 0E96  
                           l4623 0E66                             l4615 0E40  
                           l4607 0E14                             l4471 190C  
                           l4463 18E6                             l4455 18B2  
                           l4527 13CE                             l4519 1398  
                           l2847 1296                             l2839 125C  
                           l2687 1D82                             l2791 1EA6  
                           l4383 1B40                             l4535 1BEC  
                           l4551 1B06                             l4543 1AF4  
                           l3495 1C68                             l3487 1C50  
                           l5095 0B5A                             l5087 0B36  
                           l5079 0B10                             l4393 14F2  
                           l4385 14DC                             l4449 14D6  
                           l4721 10B8                             l4713 1080  
                           l4705 1054                             l4297 16F0  
                           l4289 16C6                             l4377 18A4  
                           l4369 1892                             l4641 0ED6  
                           l4633 0E98                             l4625 0E76  
                           l4617 0E4C                             l4609 0E1A  
                           l4473 190E                             l4465 18E8  
                           l4457 18B6                             l4529 13D6  
                           l2849 129C                             l2689 1D82  
                           l2785 1EAA                             l2793 1E70  
                           l4537 1BF0                             l4561 1B3C  
                           l4553 1B16                             l4545 1AF6  
                           l3497 1C6C                             l4481 1A2E  
                           l5441 0C96                             l5097 0B6C  
                           l5089 0B38                             l5433 04DA  
                           l4801 02EC                             l2971 1C38  
                           l4395 1502                             l4387 14DE  
                           l4731 10FE                             l4723 10BC  
                           l4715 1090                             l4707 105A  
                           l4299 16FE                             l4379 18A6  
                           l4643 0EE8                             l4627 0E88  
                           l4635 0EB2                             l4619 0E50  
                           l4651 0F22                             l4571 0D2C  
                           l4563 0D0C                             l4475 1916  
                           l4467 18F0                             l4459 18BC  
                           l4491 12D4                             l2787 1EAE  
                           l2795 1E74                             l4539 1BF2  
                           l4555 1B26                             l4547 1AFC  
                           l4483 1A8E                             l5443 0CF2  
                           l5435 0682                             l4811 032C  
                           l4803 0306                             l2965 1C12  
                           l4397 1512                             l4389 14E4  
                           l4741 1136                             l4733 1100  
                           l4725 10CE                             l4717 109C  
                           l4709 105E                             l5445 1634  
                           l4661 0F6A                             l4653 0F36  
                           l4645 0EF8                             l4637 0EC2  
                           l4629 0E8A                             l4581 0D5C  
                           l4565 0D1C                             l4477 1918  
                           l4469 18F2                             l4493 12EC  
                           l2797 1E4E                             l2789 1EA2  
                           l4557 1B32                             l4549 1AFE  
                           l5437 0A18                             l4901 059C  
                           l4821 0362                             l4813 0330  
                           l4805 030A                             l2967 1C1C  
                           l2983 1DE8                             l2975 1DCE  
                           l4399 1522                             l5447 1486  
                           l4751 117E                             l4735 110C  
                           l4727 10DE                             l4719 10B2  
                           l4671 0F9C                             l4663 0F76  
                           l4655 0F48                             l4639 0ED4  
                           l4647 0F0E                             l4591 0DA0  
                           l4583 0D68                             l4575 0D4C  
                           l4567 0D1E                             l4479 1938  
                           l4495 12FC                             l4487 12CE  
                           l2799 1E52                             l4559 1B34  
                           l5439 0BEE                             l4911 05D8  
                           l4903 059E                             l4831 03A4  
                           l4815 0340                             l4823 0364  
                           l4807 030C                             l2969 1C28  
                           l2977 1DDC                             l5449 1576  
                           l4753 118E                             l4761 11B4  
                           l4737 110E                             l4729 10EA  
                           l4745 114A                             l4681 0FC8  
                           l4673 0FA4                             l4665 0F78  
                           l4657 0F58                             l4593 0DB6  
                           l4585 0D6C                             l4577 0D54  
                           l4569 0D2A                             l4497 1308  
                           l4489 12D0                             l4921 0626  
                           l4913 05EA                             l4905 05A2  
                           l4841 03E2                             l4833 03AC  
                           l4825 037C                             l4817 0344  
                           l4809 032A                             l2987 1E86  
                           l4763 11BC                             l4755 1190  
                           l4747 115C                             l4739 112A  
                           l4691 0FF6                             l4683 0FCA  
                           l4675 0FAA                             l4659 0F68  
                           l4667 0F8E                             l4595 0DBC  
                           l4587 0D84                             l4579 0D58  
                           l4499 131E                             l4931 0660  
                           l4923 062C                             l4915 05FC  
                           l4907 05B4                             l4851 0424  
                           l4843 0400                             l4835 03C2  
                           l4827 0384                             l4819 0346  
                           l4771 02AA                             l2989 1E8A  
                           l4757 119C                             l4749 116E  
                           l4693 0FFA                             l4677 0FBA  
                           l4669 0F96                             l4597 0DC0  
                           l4589 0D94                             l4941 06C4  
                           l4925 0638                             l4917 0608  
                           l4909 05C6                             l4861 0456  
                           l4853 0428                             l4845 0402  
                           l4837 03D8                             l4829 0386  
                           l4781 02BC                             l4773 02AE  
                           l4765 029E                             l4759 119E  
                           l4695 1006                             l4687 0FEA  
                           l4679 0FBC                             l4599 0DD2  
                           l4951 0744                             l4943 06C8  
                           l4927 0648                             l4919 060A  
                           l4935 066C                             l4871 04A0  
                           l4863 0472                             l4855 0438  
                           l4847 0404                             l4839 03E0  
                           l4791 02D4                             l4783 02BE  
                           l4775 02B2                             l4767 02A0  
                           l4697 100A                             l4689 0FF2  
                           l4961 07D0                             l4953 0758  
                           l4945 0704                             l4929 0654  
                           l4937 06B0                             l4881 0512  
                           l4873 04AC                             l4865 0478  
                           l4857 0448                             l4849 0422  
                           l4793 02D6                             l4785 02CE  
                           l4777 02B6                             l4769 02A4  
                           l4699 1022                             l4971 084E  
                           l4963 07F8                             l4955 0780  
                           l4947 070E                             l4939 06C0  
                           l4891 054A                             l4883 0530  
                           l4875 04B8                             l4867 0488  
                           l4859 0454                             l4795 02D8  
                           l4787 02D0                             l4779 02BA  
                           l4973 0862                             l4965 080E  
                           l4957 0792                             l4949 0728  
                           l4893 054C                             l4885 0532  
                           l4869 0494                             l4797 02DA  
                           l4789 02D2                             l4991 08C4  
                           l4983 0882                             l4975 0866  
                           l4967 0830                             l4959 07BA  
                           l4895 0568                             l4887 0536  
                           l4879 04C4                             l4799 02DC  
                           l4985 0894                             l4993 08CC  
                           l4977 086A                             l4969 0840  
                           l4897 056A                             l4889 0546  
                           l4995 08DE                             l4987 08A4  
                           l4979 086E                             l4899 057E  
                           l4997 08EE                             l4989 08AC  
                           l4999 08F6                             u2020 1C88  
                           u2021 1C84                             u3000 0F1E  
                           u3001 0F1A                             u3010 0F34  
                           u3011 0F30                             u3100 10FE  
                           u3020 0F48                             u1340 1D98  
                           u3101 10FA                             u3021 0F44  
                           u1341 1D94                             u3110 1146  
                           u3030 0F58                             u1350 1DA6  
                           u3111 1142                             u3031 0F54  
                           u1351 1DA2                             u1360 1E34  
                           u3120 115A                             u3040 0F68  
                           u1440 11D4                             u3200 0448  
                           u1361 1E30                             u3121 1156  
                           u3041 0F64                             u1441 11D0  
                           u3201 0444                             u1370 1CC2  
                           u3130 116E                             u3050 0FBA  
                           u1450 11F6                             u3210 0546  
                           u1371 1CBE                             u3131 116A  
                           u3051 0FB6                             u1451 11F2  
                           u3211 0542                             u1380 1D5A  
                           u3140 117E                             u3060 1054  
                           u1460 1230                             u3300 0744  
                           u3220 05B4                             u1381 1D56  
                           u3141 117A                             u3061 1050  
                           u1461 122C                             u3301 0740  
                           u3221 05B0                             u3150 118E  
                           u3070 1070                             u1470 1252  
                           u3310 0758                             u3230 05C6  
                           u3151 118A                             u3071 106C  
                           u1471 124E                             u3311 0754  
                           u3231 05C2                             u1640 1C38  
                           u3080 10B2                             u1480 127A  
                           u3400 080E                             u3320 0772  
                           u3240 05D8                             u3160 0340  
                           u1641 1C34                             u3081 10AE  
                           u1481 1276                             u3401 080A  
                           u3321 076E                             u3241 05D4  
                           u3161 033C                             u1650 1DDC  
                           u3090 10CE                             u1490 12AC  
                           u3410 0828                             u3330 0780  
                           u3250 05EA                             u3170 03C2  
                           u1651 1DD8                             u3091 10CA  
                           u1491 12A8                             u3411 0824  
                           u3331 077C                             u3251 05E6  
                           u3171 03BE                             u1660 1AEA  
                           u2700 16BA                             u3500 09AC  
                           u3420 084E                             u3340 0792  
                           u3260 05FC                             u3180 03D8  
                           u1661 1AE6                             u2701 16B6  
                           u3501 09A8                             u3421 084A  
                           u3341 078E                             u3261 05F8  
                           u3181 03D4                             u2710 16E0  
                           u1670 1CE8                             u3510 0A84  
                           u3430 087E                             u3350 07AC  
                           u3270 06F6                             u3190 0438  
                           u2711 16DC                             u1671 1CE4  
                           u3511 0A80                             u3431 087A  
                           u3351 07A8                             u3271 06F2  
                           u3191 0434                             u2720 16FE  
                           u2800 17F0                             u1680 1A2A  
                           u3520 0A94                             u3440 0894  
                           u3360 07BA                             u3280 0704  
                           u2721 16FA                             u2801 17EC  
                           u1681 1A26                             u3521 0A90  
                           u3441 0890                             u3361 07B6  
                           u3281 0700                             u2650 1972  
                           u2730 171A                             u2810 187C  
                           u3530 0B56                             u3450 08A4  
                           u3370 07D0                             u3290 0736  
                           _PEN2 007B5A                             u2651 196E  
                           u2731 1716                             u2811 1878  
                           u3531 0B52                             u3451 08A0  
                           u3371 07CC                             u3291 0732  
                           u2660 1990                             u2644 1956  
                           u2740 1740                             u2820 188C  
                           u2900 0D1C                             u3540 0B8E  
                           u3460 08DE                             u3380 07EA  
                           u2661 198C                             u2645 1952  
                           u2741 173C                             u2821 1888  
                           u2901 0D18                             u3541 0B8A  
                           u3461 08DA                             u3381 07E6  
                           u2670 19A8                             u2750 1764  
                           u2910 0DB6                             u3550 0C4E  
                           u3470 08EE                             u3390 07F8  
                           u2671 19A4                             u2751 1760  
                           u2911 0DB2                             u3607 1340  
                           u3551 0C4A                             u3471 08EA  
                           u3391 07F4                             u2680 19BA  
                           u2760 177E                             u2920 0DD2  
                           u2840 131E                             u3480 0932  
                           u2681 19B6                             u2761 177A  
                           u2921 0DCE                             u3617 13C2  
                           u2841 131A                             u3481 092E  
                           u2690 16A0                             u2770 1798  
                           u2930 0E14                             u2850 133A  
                           u3490 0968                             u3707 1076  
                           u2691 169C                             u2771 1794  
                           u2931 0E10                             u3627 0D36  
                           u2835 18D4                             u2851 1336  
                           u3491 0964                             u2780 17B6  
                           u2940 0E30                             u2860 137C  
                           u3717 1118                             u2781 17B2  
                           u2941 0E2C                             u3637 0D76  
                           u2861 1378                             u2790 17CC  
                           u2950 0E76                             u2870 1398  
                           u3727 11A8                             u2791 17C8  
                           u2951 0E72                             u3647 0DD8  
                           u2871 1394                             u3567 02F8  
                           u2960 0E88                             u2880 1BE4  
                           u3737 1D3A                             u3657 0EA2  
                           u2961 0E84                             u2881 1BE0  
                           u3577 071A                             u2970 0EC2  
                           u2890 1B16                             u3667 0F02  
                           u2971 0EBE                             u2891 1B12  
                           u3587 0B28                             u2980 0ED4  
                           u3677 0F82                             u2981 0ED0  
                           u3597 12DE                             u2990 0EE8  
                           u3687 0FD4                             u2991 0EE4  
                           u3697 1014                             _SEN2 007B58  
                           _TMR1 000FCE                             _Busy 0033  
                           _Stop 0035                             _data 0031  
 __end_of_AD_capture_BattVoltage 1C50                             _main 029E  
                           _init 19BC                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9               _MotorPosition_Init 12CE  
                           btemp 0059                             start 029A  
                __end_of_Get7Seg 168E                    __CFG_IESO$OFF 000000  
                __end_of_Clr_RG3 1EC2      __end_of_Homing_Again_Manual 0F9C  
                   ___param_bank 000000                     high_isr@Temp 003B  
            ?_MotorPosition_Init 0038                  __end_of_Read_IR 1DF2  
                __end_of_Set_RG3 1EBA                   ??_InitSTLED316 0044  
                __end_of_MotorON 1E90                    __CFG_PLLDIV$1 000000  
                   _BAUDCON1bits 000F7E                  __end_of___aldiv 12CE  
                          ?_main 0038                            ?_init 0038  
                __end_of___awdiv 1752                            _ADRES 000FC3  
                __end_of___awmod 1802                  ___awdiv@divisor 0040  
                          _T1CON 000FCD                            _T4CON 000F76  
                 __CFG_DEBUG$OFF 000000                            _RCEN2 007B5B  
                          i2l262 01C2                            i2l271 012E  
                          i2l281 018C                            i2l273 00FE  
                          i2l275 0128                            i2l292 028E  
                          i2l278 014C                            i2l392 1D2E  
                          i2l560 1DCC                            i2l552 1E3C  
                          i2l555 1E4A                            i2l558 1DC6  
                ___awdiv@counter 0042                            _RSEN2 007B59  
                          _ETemp 0023                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TRISF 000F97                            _TRISG 000F98  
            __end_of_i2c_Address 1E60                   __CFG_FCMEN$OFF 000000  
           ??_MotorPosition_Init 0047                            _flush 1C50  
                     _Read1USART 1DA8                 _TMR1IF_triggered 002B  
                          tablat 000FF5         ??_STLED316s_SPI_SendData 003E  
            __end_of_i2c_Restart 1EA2                            ttemp5 005A  
                          ttemp6 005D                            ttemp7 0061  
                          status 000FD8                            wtemp8 005A  
                  i2_Write1USART 1E36            _WriteSTLED316SVibMode 1AF2  
                __initialization 1B8E                       _InitTimer1 1DF2  
                   __end_of_main 0D0C                     __end_of_init 1A2E  
               __end_of_i2c_Init 1E20                 __end_of_i2c_Read 1CFA  
               __end_of_i2c_Wait 1DA8                 __end_of_i2c_Stop 1EAA  
      __size_of_readWeighingData 005A                           ??_main 0086  
                         ??_init 003E                    __activetblptr 000002  
                         _ACKEN2 007B5C                           _ACKDT2 007B5D  
                         ?_flush 0038                           _ADRESH 000FC4  
                         _ADRESL 000FC3                 ___awdiv@dividend 003E  
             __size_of_i2c_Start 0008                        ??_Get7Seg 0040  
                         i2l2111 1DA8                           i2l2121 1D10  
                         i2l2113 1DB6                           i2l2123 1D16  
                         i2l2115 1DCA                           i2l2125 1D2C  
                         i2l2119 1CFA                           i2l4001 01E6  
             __size_of_i2c_Write 000C                           i2l4011 025A  
                         i2l4003 0204                           i2l4021 0288  
                         i2l4013 026A                           i2l4005 0218  
                         i2l4015 026E                           i2l4007 0228  
                         i2l4009 0246                           i2l4017 0272  
                         i2l4019 0280                   __CFG_WDTEN$OFF 000000  
                         i2l3921 0026                           i2l3499 1E38  
                         i2l3931 0074                           i2l3923 0038  
                         i2l3941 00C4                           i2l3925 0048  
                         i2l3933 007C                           i2l3917 0012  
                         i2l3943 00DC                           i2l3935 008C  
                         i2l3927 0058                           i2l3919 0020  
                         i2l3953 0104                           i2l3945 00EC  
                         i2l3937 009C                           i2l3929 0064  
                         i2l3971 014E                           i2l3955 0116  
                         i2l3947 0100                           i2l3939 00B2  
                         i2l3981 0174                           i2l3965 0134  
                         i2l3957 0118                           i2l3973 0162  
                         i2l3991 01B2                           i2l3983 017A  
                         i2l3975 016E                           i2l3967 013A  
                         i2l3959 0130                           i2l3985 017C  
                         i2l3969 013C                           i2l3993 01BA  
                         i2l3987 018E                           i2l3997 01D0  
                         i2l3989 01A0                           i2l3999 01D6  
                         _RCREG1 000FAF                        ??_Clr_RG3 003E  
                         _SPBRG1 000FB0                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                           _TRISD5 007CAD  
                         _TRISD6 007CAE                   ?i2_Write1USART 0038  
                         _TXREG1 000FAE                       _MotorBREAK 1E90  
                      ??_Read_IR 0040                        ??_Set_RG3 003E  
                read_i2c@address 0080                           _OpMode 0030  
                 __CFG_XINST$OFF 000000                        ??_MotorON 003E  
               __end_of_high_isr 029A                        ??___aldiv 0046  
                      ??___awdiv 0042                   __CFG_STVREN$ON 000000  
                      ??___awmod 0042                   _PWM_Duty_Cycle 002C  
               __end_of_flushOut 1CC4                 __end_of_read_i2c 1A98  
                    _i2c_Address 1E4C                           clear_0 1BB4  
                         clear_1 1BC0                 ___awdiv@quotient 0044  
                ___awmod@divisor 0040                  ___awmod@counter 0042  
               Read1USART@result 0038       __end_of_WriteSTLED316SData 18B0  
     __end_of_WriteSTLED316SMode 14DA                           flush@i 003E  
                  i2c_Write@data 003F                     __pdataCOMRAM 004E  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      _i2c_Restart 1E9A  
                    ?_Read1USART 0038             __end_of_InitSTLED316 193C  
                     __accesstop 0060          __end_of__initialization 1BC6  
__size_of_STLED316s_SPI_SendData 0080              _Low_Power_Indicator 1CFA  
              _WriteSTLED316SErr 14DA                    ___rparam_used 000001  
         ?_WriteSTLED316SVibMode 0038               ?_WriteSTLED316SErr 0038  
                 __pcstackCOMRAM 0038                      ?_InitTimer1 0038  
                  __end_of_flush 1C8A               __size_of_delay_1ms 002C  
              __end_of_i2c_Start 1EB2              ??_WriteSTLED316SErr 0044  
              __end_of_i2c_Write 1E7A             ?_Low_Power_Indicator 0038  
                        ??_flush 003E                        ?_i2c_Init 0038  
                      ?_i2c_Read 003F                       __pbssBANK0 0060  
                      ?_i2c_Wait 0038                  ??i2_Write1USART 0038  
                      ?_i2c_Stop 0038               __size_of_initUSART 0026  
      __end_of_WriteSTLED316SErr 15C2                    ??_Write1USART 003E  
             __size_of_initMotor 000E                      ?_MotorBREAK 0038  
        __size_of_ToggleVIB_Mode 003E                          _CCP4CON 000F73  
            __size_of_Read1USART 0026            ??_Low_Power_Indicator 0038  
         _STLED316s_SPI_SendData 193C                 _readWeighingData 1A98  
             i2c_Address@address 0040                          i2u70_40 1DB6  
                        i2u70_41 1DB2                          i2u71_40 1D10  
                        i2u71_41 1D0C                  __CFG_WDTPS$2048 000000  
                        i2u72_40 1D2C                          i2u72_41 1D28  
                        _SPBRGH1 000F7F                          _SSP2ADD 000F6E  
                        _SSP2BUF 000F6F                          _NUM_REC 0017  
            __size_of_InitTimer1 0018                          _VOLTAGE 0011  
                      ?_high_isr 0038                       ??_i2c_Init 003E  
                     ??_i2c_Read 0041                          _PWM_reg 0058  
                     ??_i2c_Wait 003E                          _Get7Seg 15C2  
    WriteSTLED316SVibMode@v_mode 0044                       ??_i2c_Stop 003F  
                        _Clr_RG3 1EBA                __end_of_delay_1ms 1D5C  
              i2Write1USART@data 0038                        ?_flushOut 0038  
                      ?_read_i2c 0080                      _Serial_Flag 0037  
             __size_of_write_i2c 004E                          _Read_IR 1DCE  
          WriteSTLED316SMode@msg 0046                          _Set_RG3 1EB2  
                        __Hparam 0000                          __Lparam 0000  
                        _MotorON 1E86              __end_of_Write1USART 1E36  
     WriteSTLED316SData@NUM_DIG0 0080       WriteSTLED316SData@NUM_DIG1 0082  
                        ___aldiv 11C2                      _Motor_Speed 0021  
                        ___awdiv 168E                          ___awmod 1752  
                   Get7Seg@Digit 003E     __size_of_Homing_Again_Manual 0290  
                        __pcinit 1B8E                          __ramtop 1000  
              __end_of_initUSART 1D82                          __ptext0 029E  
                        __ptext1 1A2E                          __ptext2 1E9A  
                        __ptext3 1CC4                          __ptext4 1D5C  
                        __ptext5 1E60                          __ptext6 19BC  
                        __ptext7 1E0A                          __ptext8 1C50  
                        __ptext9 1AF2                __end_of_initMotor 1E6E  
                      _T3CONbits 000F79              __size_of_MotorBREAK 000A  
               ___awmod@dividend 003E                 ___aldiv@dividend 003E  
                      _T4CONbits 000F76                    delay_1ms@time 003E  
              __CFG_MSSPMSK$MSK5 000000            __size_of_InitSTLED316 008C  
    __size_of_MotorPosition_Init 010C                       _pause_Time 002F  
                      _EAdd_High 0027                       ??_high_isr 0039  
           end_of_initialization 1BC6       __size_of_WriteSTLED316SErr 00E8  
           i2c_Address@l_address 0041                       ??_flushOut 003E  
                     ??_read_i2c 004C                    __Lmediumconst 0000  
        WriteSTLED316SData@data3 0084          WriteSTLED316SData@data4 0085  
               ___aldiv@quotient 0048                          postdec1 000FE5  
                        postinc0 000FEE                     ?_i2c_Address 003F  
                   _InitSTLED316 18B0                        _PORTAbits 000F80  
                      _PORTBbits 000F81                __end_of_write_i2c 1B8E  
               __CFG_CPUDIV$OSC1 000000                        _TRISCbits 000F94  
                   ?_i2c_Restart 0038         ??_AD_capture_BattVoltage 0041  
                   ??_Read1USART 0038               _WriteSTLED316SData 1802  
        ??_WriteSTLED316SVibMode 0044               _WriteSTLED316SMode 13DA  
                    _Write1USART 1E20              ?_WriteSTLED316SData 0046  
            ?_WriteSTLED316SMode 0038                     ??_InitTimer1 003E  
                 _ToggleVIB_Mode 1BD4                        _Device_ID 001D  
                    _Vmotor_Time 0056                    __pidataCOMRAM 1E7A  
             __end_of_Read1USART 1DCE                    _Serial_Buffer 0001  
                      _i2c_Start 1EAA                        _i2c_Write 1E6E  
           ??_WriteSTLED316SData 0049              start_initialization 1B8E  
           ??_WriteSTLED316SMode 0044               __end_of_InitTimer1 1E0A  
                _LowPowerCounter 004E         __end_of_readWeighingData 1AF2  
              __size_of_i2c_Init 0016                __size_of_i2c_Read 0036  
              __size_of_i2c_Wait 0026                     ??_MotorBREAK 003E  
              __size_of_i2c_Stop 0008           __end_of_ToggleVIB_Mode 1C12  
        ?_STLED316s_SPI_SendData 0038                       ?_i2c_Start 0038  
                     ?_i2c_Write 0038                      __pbssCOMRAM 0001  
             __end_of_MotorBREAK 1E9A                    __pcstackBANK0 0080  
__size_of_AD_capture_BattVoltage 003E              __CFG_CCP2MX$DEFAULT 000000  
                       ?_Get7Seg 003E              _Homing_Again_Manual 0D0C  
                       ?_Clr_RG3 0038                __size_of_high_isr 0292  
          __end_ofi2_Write1USART 1E4C                         ?_Read_IR 003E  
              __size_of_flushOut 003A                        _delay_1ms 1D30  
              __size_of_read_i2c 006A                _Homing_Again_Auto 0F9C  
                       ?_Set_RG3 0038                  ?_ToggleVIB_Mode 0038  
                       ?_MotorON 0038   __end_of_STLED316s_SPI_SendData 19BC  
    __end_of_Low_Power_Indicator 1D30               ?_Homing_Again_Auto 0038  
                      __pintcode 0008                         ?___aldiv 003E  
                       ?___awdiv 003E                         ?___awmod 003E  
           ?_Homing_Again_Manual 0038                     _errorcounter 0052  
            ??_Homing_Again_Auto 0047             __size_of_i2c_Address 0014  
           WriteSTLED316SErr@msg 0046                        _initUSART 1D5C  
                      _initMotor 1E60                      Get7Seg@Data 0042  
                 __size_of_flush 003A                  Write1USART@data 003E  
           __size_of_i2c_Restart 0008                  ___aldiv@divisor 0042  
                ___aldiv@counter 0046        __end_of_Homing_Again_Auto 11C2  
                       _LATAbits 000F89                         _EAdd_Low 0025  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATGbits 000F8F                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                       ?_delay_1ms 003E  
              readWeighingData@i 0040                         i2u203_40 1E4A  
                       i2u203_41 1E46                         i2u250_40 00C4  
                       i2u250_41 00C0                         i2u251_40 00DC  
                       i2u251_41 00D8                         i2u260_40 01E6  
                       i2u252_40 00EC                         i2u244_40 0020  
                       i2u260_41 01E2                         i2u252_41 00E8  
                       i2u244_41 001C                         i2u261_40 0204  
                       i2u253_40 00FE                         i2u245_40 0038  
                       i2u261_41 0200                         i2u253_41 00FA  
                       i2u245_41 0034                         i2u262_40 0246  
                       i2u254_40 0128                         i2u246_40 0048  
                       i2u262_41 0242                         i2u254_41 0124  
                       i2u246_41 0044                         i2u263_40 0280  
                       i2u255_40 014C                         i2u247_40 0058  
                       i2u263_41 027C                         i2u255_41 0148  
                       i2u247_41 0054                         i2u256_40 018C  
                       i2u248_40 008C                         i2u256_41 0188  
                       i2u248_41 0088                         i2u257_40 01A0  
                       i2u249_40 00B2                         i2u257_41 019C  
                       i2u249_41 00AE                         _PIR1bits 000F9E  
                       i2u258_40 01B2                         i2u258_41 01AE  
                       i2u259_40 01D0                         i2u259_41 01CC  
                       _RCONbits 000FD0           _AD_capture_BattVoltage 1C12  
                       _SSP2CON1 000F6C                         _SSP2CON2 000F6B  
                       _SSP2STAT 000F6D            ??_Homing_Again_Manual 0049  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                      high_isr@c 003C                        high_isr@i 003D  
                    ??_i2c_Start 003F                      ??_i2c_Write 003F  
     __end_of_MotorPosition_Init 13DA                       ?_initUSART 0038  
          _delay_motor_stop_time 002D                       ?_initMotor 0038  
                   _Serial_GData 0036                        _write_i2c 1B40  
                      copy_data0 1BA2           InitSTLED316@Brightness 0046  
                   _Serial_Count 0029                         _i2c_Init 1E0A  
                       _i2c_Read 1CC4                         _i2c_Wait 1D82  
                       _i2c_Stop 1EA2                 __size_of_Get7Seg 00CC  
                   ?_Write1USART 0038                 __size_of_Clr_RG3 0008  
 __size_of_WriteSTLED316SVibMode 004E    __end_of_WriteSTLED316SVibMode 1B40  
                      flushOut@i 003E                       _ANCON0bits 000FC1  
                       __Hrparam 0000                 __size_of_Read_IR 0024  
                       __Lrparam 0000                 __size_of_Set_RG3 0008  
               __size_of_MotorON 000A                 __size_of___aldiv 010C  
               __size_of___awdiv 00C4                 __size_of___awmod 00B0  
                 _vibration_mode 0032                         __ptext10 1BD4  
                       __ptext11 1B40                         __ptext20 18B0  
                       __ptext12 1E6E                         __ptext21 0D0C  
                       __ptext13 1EA2                         __ptext30 13DA  
                       __ptext22 1802                         __ptext14 1EAA  
                       __ptext31 14DA                         __ptext23 1752  
                       __ptext15 1E4C                         __ptext32 193C  
                       __ptext24 168E                         __ptext16 1D82  
                       __ptext41 1E36                         __ptext33 1DCE  
                       __ptext25 15C2                         __ptext17 11C2  
                       __ptext42 1DA8                         __ptext34 1E86  
                       __ptext26 0F9C                         __ptext18 12CE  
                       __ptext43 1CFA                         __ptext35 1EB2  
                       __ptext27 1A98                         __ptext19 1DF2  
                       __ptext36 1E90                         __ptext28 1C8A  
                       __ptext37 1EBA                         __ptext29 1E20  
                       __ptext38 1C12                         __ptext39 1D30  
                     ?_write_i2c 0080                 write_i2c@address 0080  
                       _high_isr 0008                read_i2c@read_byte 004C  
                       _flushOut 1C8A                         _read_i2c 1A2E  
                  __size_of_main 0A6E       __size_of_Homing_Again_Auto 0226  
                  __size_of_init 0072                ?_readWeighingData 0038  
                    ??_delay_1ms 0040               ??_readWeighingData 0040  
                       _vib_Time 002E            _Motor_Stop_Delay_Time 001F  
                       int$flags 0059                _Serial_Buffer_Out 0060  
     STLED316s_SPI_SendData@Data 0040                       _INTCONbits 000FF2  
                    ??_initUSART 003E      __size_of_WriteSTLED316SData 00AE  
     STLED316s_SPI_SendData@temp 0041      __size_of_WriteSTLED316SMode 0100  
                    ??_initMotor 003E             __CFG_FOSC$INTOSCPLLO 000000  
                       intlevel2 0000                     _motor_status 0034  
               ??_ToggleVIB_Mode 004C                  i2c_Address@mode 003F  
                     _RCSTA1bits 000FAC                       _OSCCONbits 000FD3  
       WriteSTLED316SData@v_mode 0048         WriteSTLED316SData@number 0046  
                     _IR_SENSORF 0013                 _Motor_Pause_Time 001B  
             _Serial_Temp_Buffer 0070          STLED316s_SPI_SendData@i 0042  
        STLED316s_SPI_SendData@t 0043                     ___aldiv@sign 0047  
                     _WDTCONbits 000FC0                      ??_write_i2c 004C  
            i2c_Read@i2cReadData 0042                    write_i2c@data 0084  
        ?_AD_capture_BattVoltage 0038             __size_of_Write1USART 0016  
