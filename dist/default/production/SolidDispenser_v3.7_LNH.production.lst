

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 17 12:26:48 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Version 2.40
    66                           ; Generated 17/11/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F65J50 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataCOMRAM
   102   0027D2                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for _errorcounter
   106   0027D2  001E               	dw	30
   107   0027D4  0000               	dw	0
   108                           
   109                           ;initializer for _Vmotor_Time
   110   0027D6  07D0               	dw	2000
   111                           
   112                           ;initializer for _PWM_reg
   113   0027D8  3F                 	db	63
   114                           
   115                           	psect	idataBANK0
   116   0027D9                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _LowPowerCounter
   120   0027D9  0014               	dw	20
   121   0027DB  0000               	dw	0
   122   000000                     _ADCON1bits	set	4033
   123   000000                     _RCREG1	set	4015
   124   000000                     _TXREG1	set	4014
   125   000000                     _SPBRGH1	set	3967
   126   000000                     _SPBRG1	set	4016
   127   000000                     _TXSTA1bits	set	4013
   128   000000                     _SSP2STAT	set	3949
   129   000000                     _SSP2ADD	set	3950
   130   000000                     _ADRESL	set	4035
   131   000000                     _ADRESH	set	4036
   132   000000                     _ADCON0bits	set	4034
   133   000000                     _ADRES	set	4035
   134   000000                     _T4CONbits	set	3958
   135   000000                     _ANCON0bits	set	4033
   136   000000                     _TRISD	set	3989
   137   000000                     _TRISC	set	3988
   138   000000                     _TRISB	set	3987
   139   000000                     _PIE1bits	set	3997
   140   000000                     _INTCONbits	set	4082
   141   000000                     _ACKEN2	set	31580
   142   000000                     _ACKDT2	set	31581
   143   000000                     _RCEN2	set	31579
   144   000000                     _PEN2	set	31578
   145   000000                     _RSEN2	set	31577
   146   000000                     _SEN2	set	31576
   147   000000                     _TRISD6	set	31918
   148   000000                     _TMR1IF	set	31984
   149   000000                     _SSP2CON2	set	3947
   150   000000                     _SSP2CON1	set	3948
   151   000000                     _PORTAbits	set	3968
   152   000000                     _PORTBbits	set	3969
   153   000000                     _LATAbits	set	3977
   154   000000                     _LATCbits	set	3979
   155   000000                     _TRISBbits	set	3987
   156   000000                     _TRISCbits	set	3988
   157   000000                     _CCP1CONbits	set	4027
   158   000000                     _WDTCONbits	set	4032
   159   000000                     _T2CONbits	set	4042
   160   000000                     _OSCCONbits	set	4051
   161   000000                     _CCPR1L	set	4028
   162   000000                     _GIE	set	32663
   163   000000                     _INTCON3bits	set	4080
   164   000000                     _TRISG	set	3992
   165   000000                     _TRISF	set	3991
   166   000000                     _TRISE	set	3990
   167   000000                     _PIR1bits	set	3998
   168   000000                     _IPR1bits	set	3999
   169   000000                     _TRISD5	set	31917
   170   000000                     _TMR1IE	set	31976
   171   000000                     _TMR1	set	4046
   172   000000                     _T1CON	set	4045
   173   000000                     _RCONbits	set	4048
   174   000000                     _PR2	set	4043
   175   000000                     _LATGbits	set	3983
   176   000000                     _TRISA	set	3986
   177   000000                     _LATDbits	set	3980
   178   000000                     _RCSTA1bits	set	4012
   179   000000                     _CCP4CON	set	3955
   180   000000                     _T4CON	set	3958
   181   000000                     _PR4	set	3959
   182   000000                     _BAUDCON1bits	set	3966
   183   000000                     _SSP2BUF	set	3951
   184   000000                     _T3CONbits	set	3961
   185                           
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189   0023B8                     __pcinit:
   190                           	callstack 0
   191   0023B8                     start_initialization:
   192                           	callstack 0
   193   0023B8                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Initialize objects allocated to BANK0 (4 bytes)
   197                           ; load TBLPTR registers with __pidataBANK0
   198   0023B8  0ED9               	movlw	low __pidataBANK0
   199   0023BA  6EF6               	movwf	tblptrl,c
   200   0023BC  0E27               	movlw	high __pidataBANK0
   201   0023BE  6EF7               	movwf	tblptrh,c
   202   0023C0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   203   0023C2  6EF8               	movwf	tblptru,c
   204   0023C4  EE00  F0A2         	lfsr	0,__pdataBANK0
   205   0023C8  EE10 F004          	lfsr	1,4
   206   0023CC                     copy_data0:
   207   0023CC  0009               	tblrd		*+
   208   0023CE  CFF5 FFEE          	movff	tablat,postinc0
   209   0023D2  50E5               	movf	postdec1,w,c
   210   0023D4  50E1               	movf	fsr1l,w,c
   211   0023D6  E1FA               	bnz	copy_data0
   212                           
   213                           ; Initialize objects allocated to COMRAM (7 bytes)
   214                           ; load TBLPTR registers with __pidataCOMRAM
   215   0023D8  0ED2               	movlw	low __pidataCOMRAM
   216   0023DA  6EF6               	movwf	tblptrl,c
   217   0023DC  0E27               	movlw	high __pidataCOMRAM
   218   0023DE  6EF7               	movwf	tblptrh,c
   219   0023E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   220   0023E2  6EF8               	movwf	tblptru,c
   221   0023E4  EE00  F050         	lfsr	0,__pdataCOMRAM
   222   0023E8  EE10 F007          	lfsr	1,7
   223   0023EC                     copy_data1:
   224   0023EC  0009               	tblrd		*+
   225   0023EE  CFF5 FFEE          	movff	tablat,postinc0
   226   0023F2  50E5               	movf	postdec1,w,c
   227   0023F4  50E1               	movf	fsr1l,w,c
   228   0023F6  E1FA               	bnz	copy_data1
   229                           
   230                           ; Clear objects allocated to BANK0 (58 bytes)
   231   0023F8  EE00  F060         	lfsr	0,__pbssBANK0
   232   0023FC  0E3A               	movlw	58
   233   0023FE                     clear_0:
   234   0023FE  6AEE               	clrf	postinc0,c
   235   002400  06E8               	decf	wreg,f,c
   236   002402  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to COMRAM (51 bytes)
   239   002404  EE00  F001         	lfsr	0,__pbssCOMRAM
   240   002408  0E33               	movlw	51
   241   00240A                     clear_1:
   242   00240A  6AEE               	clrf	postinc0,c
   243   00240C  06E8               	decf	wreg,f,c
   244   00240E  E1FD               	bnz	clear_1
   245   002410                     end_of_initialization:
   246                           	callstack 0
   247   002410                     __end_of__initialization:
   248                           	callstack 0
   249   002410  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   250   002412  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   251   002414  0E00               	movlw	low (__Lmediumconst shr (0+16))
   252   002416  6EF8               	movwf	tblptru,c
   253   002418  0100               	movlb	0
   254   00241A  EF89  F001         	goto	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMRAM
   257   000001                     __pbssCOMRAM:
   258                           	callstack 0
   259   000001                     _test_redled:
   260                           	callstack 0
   261   000001                     	ds	2
   262   000003                     _holdTimeMode:
   263                           	callstack 0
   264   000003                     	ds	2
   265   000005                     _holdTimeLeft:
   266                           	callstack 0
   267   000005                     	ds	2
   268   000007                     _holdTimeRight:
   269                           	callstack 0
   270   000007                     	ds	2
   271   000009                     _dispense:
   272                           	callstack 0
   273   000009                     	ds	2
   274   00000B                     _duty_cycle:
   275                           	callstack 0
   276   00000B                     	ds	2
   277   00000D                     _dutyCycle_reg:
   278                           	callstack 0
   279   00000D                     	ds	2
   280   00000F                     _VOLTAGE:
   281                           	callstack 0
   282   00000F                     	ds	2
   283   000011                     _IR_SENSORF:
   284                           	callstack 0
   285   000011                     	ds	2
   286   000013                     _i:
   287                           	callstack 0
   288   000013                     	ds	2
   289   000015                     _NUM_REC:
   290                           	callstack 0
   291   000015                     	ds	2
   292   000017                     _i_RUN_ZERO:
   293                           	callstack 0
   294   000017                     	ds	2
   295   000019                     _NUM:
   296                           	callstack 0
   297   000019                     	ds	2
   298   00001B                     _Motor_Pause_Time:
   299                           	callstack 0
   300   00001B                     	ds	2
   301   00001D                     _Device_ID:
   302                           	callstack 0
   303   00001D                     	ds	2
   304   00001F                     _Motor_Stop_Delay_Time:
   305                           	callstack 0
   306   00001F                     	ds	2
   307   000021                     _Motor_Speed:
   308                           	callstack 0
   309   000021                     	ds	2
   310   000023                     _ETemp:
   311                           	callstack 0
   312   000023                     	ds	2
   313   000025                     _Serial_Count:
   314                           	callstack 0
   315   000025                     	ds	2
   316   000027                     _TMR1IF_triggered:
   317                           	callstack 0
   318   000027                     	ds	1
   319   000028                     _PWM_Duty_Cycle:
   320                           	callstack 0
   321   000028                     	ds	1
   322   000029                     _delay_motor_stop_time:
   323                           	callstack 0
   324   000029                     	ds	1
   325   00002A                     _vib_Time:
   326                           	callstack 0
   327   00002A                     	ds	1
   328   00002B                     _pause_Time:
   329                           	callstack 0
   330   00002B                     	ds	1
   331   00002C                     _OpMode:
   332                           	callstack 0
   333   00002C                     	ds	1
   334   00002D                     _data:
   335                           	callstack 0
   336   00002D                     	ds	1
   337   00002E                     _vibration_mode:
   338                           	callstack 0
   339   00002E                     	ds	1
   340   00002F                     _Busy:
   341                           	callstack 0
   342   00002F                     	ds	1
   343   000030                     _motor_status:
   344                           	callstack 0
   345   000030                     	ds	1
   346   000031                     _Stop:
   347                           	callstack 0
   348   000031                     	ds	1
   349   000032                     _Serial_GData:
   350                           	callstack 0
   351   000032                     	ds	1
   352   000033                     _Serial_Flag:
   353                           	callstack 0
   354   000033                     	ds	1
   355                           
   356                           	psect	dataCOMRAM
   357   000050                     __pdataCOMRAM:
   358                           	callstack 0
   359   000050                     _errorcounter:
   360                           	callstack 0
   361   000050                     	ds	4
   362   000054                     _Vmotor_Time:
   363                           	callstack 0
   364   000054                     	ds	2
   365   000056                     _PWM_reg:
   366                           	callstack 0
   367   000056                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370   000060                     __pbssBANK0:
   371                           	callstack 0
   372   000060                     _Serial_Buffer_Out:
   373                           	callstack 0
   374   000060                     	ds	16
   375   000070                     _Serial_Temp_Buffer:
   376                           	callstack 0
   377   000070                     	ds	16
   378   000080                     _Serial_Buffer:
   379                           	callstack 0
   380   000080                     	ds	16
   381   000090                     _temp:
   382                           	callstack 0
   383   000090                     	ds	2
   384   000092                     _pwm_mode:
   385                           	callstack 0
   386   000092                     	ds	2
   387   000094                     _pwm_count:
   388                           	callstack 0
   389   000094                     	ds	2
   390   000096                     _EAdd_Low:
   391                           	callstack 0
   392   000096                     	ds	2
   393   000098                     _EAdd_High:
   394                           	callstack 0
   395   000098                     	ds	2
   396                           
   397                           	psect	dataBANK0
   398   0000A2                     __pdataBANK0:
   399                           	callstack 0
   400   0000A2                     _LowPowerCounter:
   401                           	callstack 0
   402   0000A2                     	ds	4
   403                           
   404                           	psect	cstackBANK0
   405   00009A                     __pcstackBANK0:
   406                           	callstack 0
   407   00009A                     ?_PWM_Selection:
   408                           	callstack 0
   409   00009A                     PWM_Selection@msg:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x0
   413   00009A                     	ds	2
   414   00009C                     ??_PWM_Selection:
   415                           
   416                           ; 1 bytes @ 0x2
   417   00009C                     	ds	2
   418   00009E                     PWM_Selection@dcSelected:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422   00009E                     	ds	2
   423   0000A0                     ??_main:
   424                           
   425                           ; 1 bytes @ 0x6
   426   0000A0                     	ds	2
   427                           
   428                           	psect	cstackCOMRAM
   429   000034                     __pcstackCOMRAM:
   430                           	callstack 0
   431   000034                     Read1USART@result:
   432                           	callstack 0
   433   000034                     i2Write1USART@data:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x0
   437   000034                     	ds	1
   438   000035                     ??_high_isr:
   439                           
   440                           ; 1 bytes @ 0x1
   441   000035                     	ds	4
   442   000039                     high_isr@Temp:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446   000039                     	ds	1
   447   00003A                     high_isr@c:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451   00003A                     	ds	1
   452   00003B                     high_isr@i:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x7
   456   00003B                     	ds	1
   457   00003C                     ??_STLED316s_SPI_SendData:
   458   00003C                     ??_i2c_Wait:
   459   00003C                     ?_Read_IR:
   460                           	callstack 0
   461   00003C                     ?___awdiv:
   462                           	callstack 0
   463   00003C                     ?___awmod:
   464                           	callstack 0
   465   00003C                     ?___aldiv:
   466                           	callstack 0
   467   00003C                     Write1USART@data:
   468                           	callstack 0
   469   00003C                     pwm_set@duty:
   470                           	callstack 0
   471   00003C                     delay_1ms@time:
   472                           	callstack 0
   473   00003C                     flush@i:
   474                           	callstack 0
   475   00003C                     flushOut@i:
   476                           	callstack 0
   477   00003C                     Get7Seg@Digit:
   478                           	callstack 0
   479   00003C                     ___awdiv@dividend:
   480                           	callstack 0
   481   00003C                     ___awmod@dividend:
   482                           	callstack 0
   483   00003C                     ___aldiv@dividend:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x8
   487   00003C                     	ds	1
   488   00003D                     ?_i2c_Read:
   489                           	callstack 0
   490   00003D                     i2c_Write@data:
   491                           	callstack 0
   492   00003D                     i2c_Address@mode:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x9
   496   00003D                     	ds	1
   497   00003E                     ??_pwm_set:
   498   00003E                     ??_delay_1ms:
   499   00003E                     ??_Get7Seg:
   500   00003E                     STLED316s_SPI_SendData@Data:
   501                           	callstack 0
   502   00003E                     i2c_Address@address:
   503                           	callstack 0
   504   00003E                     readWeighingData@i:
   505                           	callstack 0
   506   00003E                     ___awdiv@divisor:
   507                           	callstack 0
   508   00003E                     ___awmod@divisor:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512   00003E                     	ds	1
   513   00003F                     ??_AD_capture_BattVoltage:
   514   00003F                     STLED316s_SPI_SendData@temp:
   515                           	callstack 0
   516   00003F                     i2c_Address@l_address:
   517                           	callstack 0
   518   00003F                     i2c_Read@ack:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0xB
   522   00003F                     	ds	1
   523   000040                     STLED316s_SPI_SendData@i:
   524                           	callstack 0
   525   000040                     Get7Seg@Data:
   526                           	callstack 0
   527   000040                     i2c_Read@i2cReadData:
   528                           	callstack 0
   529   000040                     ___awdiv@counter:
   530                           	callstack 0
   531   000040                     ___awmod@counter:
   532                           	callstack 0
   533   000040                     ___aldiv@divisor:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0xC
   537   000040                     	ds	1
   538   000041                     STLED316s_SPI_SendData@t:
   539                           	callstack 0
   540   000041                     ___awdiv@sign:
   541                           	callstack 0
   542   000041                     ___awmod@sign:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xD
   546   000041                     	ds	1
   547   000042                     ??_InitSTLED316:
   548   000042                     ??_WriteSTLED316SErr:
   549   000042                     ??_WriteSTLED316SMode:
   550   000042                     WriteSTLED316SVibMode@dc_reg:
   551                           	callstack 0
   552   000042                     ___awdiv@quotient:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556   000042                     	ds	2
   557   000044                     InitSTLED316@Brightness:
   558                           	callstack 0
   559   000044                     WriteSTLED316SMode@msg:
   560                           	callstack 0
   561   000044                     WriteSTLED316SVibMode@v_mode:
   562                           	callstack 0
   563   000044                     WriteSTLED316SErr@msg:
   564                           	callstack 0
   565   000044                     ___aldiv@counter:
   566                           	callstack 0
   567   000044                     WriteSTLED316SData@number:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x10
   571   000044                     	ds	1
   572   000045                     ??_MotorPosition_Init:
   573   000045                     ??_Homing_Again_Auto:
   574   000045                     ___aldiv@sign:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x11
   578   000045                     	ds	1
   579   000046                     WriteSTLED316SData@v_mode:
   580                           	callstack 0
   581   000046                     ___aldiv@quotient:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x12
   585   000046                     	ds	1
   586   000047                     WriteSTLED316SData@NUM_DIG0:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x13
   590   000047                     	ds	2
   591   000049                     WriteSTLED316SData@NUM_DIG1:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x15
   595   000049                     	ds	1
   596   00004A                     ?_read_i2c:
   597                           	callstack 0
   598   00004A                     write_i2c@address:
   599                           	callstack 0
   600   00004A                     read_i2c@address:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x16
   604   00004A                     	ds	1
   605   00004B                     WriteSTLED316SData@data3:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x17
   609   00004B                     	ds	1
   610   00004C                     WriteSTLED316SData@data4:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x18
   614   00004C                     	ds	1
   615   00004D                     ??_Homing_Again_Manual:
   616                           
   617                           ; 1 bytes @ 0x19
   618   00004D                     	ds	1
   619   00004E                     write_i2c@data:
   620                           	callstack 0
   621   00004E                     read_i2c@read_byte:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1A
   625   00004E                     	ds	2
   626   000050                     
   627                           ; 1 bytes @ 0x1C
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 204 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels required when called: 6
   653 ;; This function calls:
   654 ;;		_AD_capture_BattVoltage
   655 ;;		_Homing_Again_Auto
   656 ;;		_Homing_Again_Manual
   657 ;;		_InitSTLED316
   658 ;;		_InitTimer1
   659 ;;		_MotorPosition_Init
   660 ;;		_PWM_Selection
   661 ;;		_ToggleVIB_Mode
   662 ;;		_Write1USART
   663 ;;		_WriteSTLED316SData
   664 ;;		_WriteSTLED316SVibMode
   665 ;;		_flush
   666 ;;		_flushOut
   667 ;;		_i2c_Init
   668 ;;		_init
   669 ;;		_initMotor
   670 ;;		_initUSART
   671 ;;		_pwm_set
   672 ;;		_read_i2c
   673 ;;		_write_i2c
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680   000312                     __ptext0:
   681                           	callstack 0
   682   000312                     _main:
   683                           	callstack 25
   684   000312                     
   685                           ;main.c: 205:     GIE = 0;
   686   000312  9EF2               	bcf	4082,7,c	;volatile
   687   000314                     
   688                           ;main.c: 206:     init();
   689   000314  EC6F  F011         	call	_init	;wreg free
   690   000318                     
   691                           ;main.c: 207:     InitSTLED316(0x77);
   692   000318  0E77               	movlw	119
   693   00031A  ECE9  F010         	call	_InitSTLED316
   694   00031E                     
   695                           ;main.c: 208:     initMotor();
   696   00031E  ECBE  F013         	call	_initMotor	;wreg free
   697   000322                     
   698                           ;main.c: 209:     i2c_Init();
   699   000322  EC93  F013         	call	_i2c_Init	;wreg free
   700   000326                     
   701                           ;main.c: 210:     initUSART();
   702   000326  EC3C  F013         	call	_initUSART	;wreg free
   703   00032A                     
   704                           ;main.c: 211:     InitTimer1();
   705   00032A  EC87  F013         	call	_InitTimer1	;wreg free
   706   00032E                     
   707                           ;main.c: 220:     OSCCONbits.IRCF0 = 0;
   708   00032E  98D3               	bcf	211,4,c	;volatile
   709   000330                     
   710                           ;main.c: 221:     OSCCONbits.IRCF1 = 0;
   711   000330  9AD3               	bcf	211,5,c	;volatile
   712   000332                     
   713                           ;main.c: 222:     OSCCONbits.IRCF2 = 0;
   714   000332  9CD3               	bcf	211,6,c	;volatile
   715   000334                     
   716                           ;main.c: 223:     OSCCONbits.SCS0 = 0;
   717   000334  90D3               	bcf	211,0,c	;volatile
   718   000336                     
   719                           ;main.c: 224:     OSCCONbits.SCS1 = 0;
   720   000336  92D3               	bcf	211,1,c	;volatile
   721   000338                     
   722                           ;main.c: 228:     TRISCbits.TRISC2 = 0;
   723   000338  9494               	bcf	148,2,c	;volatile
   724   00033A                     
   725                           ;main.c: 232:     TRISBbits.TRISB4 = 1;
   726   00033A  8893               	bsf	147,4,c	;volatile
   727   00033C                     
   728                           ;main.c: 235:     T2CONbits.T2OUTPS0 = 0;
   729   00033C  96CA               	bcf	202,3,c	;volatile
   730   00033E                     
   731                           ;main.c: 236:     T2CONbits.T2OUTPS1 = 0;
   732   00033E  98CA               	bcf	202,4,c	;volatile
   733   000340                     
   734                           ;main.c: 237:     T2CONbits.T2OUTPS2 = 0;
   735   000340  9ACA               	bcf	202,5,c	;volatile
   736   000342                     
   737                           ;main.c: 238:     T2CONbits.T2OUTPS3 = 0;
   738   000342  9CCA               	bcf	202,6,c	;volatile
   739   000344                     
   740                           ;main.c: 240:     T2CONbits.T2CKPS = 0x00;
   741   000344  0EFC               	movlw	-4
   742   000346  16CA               	andwf	202,f,c	;volatile
   743   000348                     
   744                           ;main.c: 246:     PR2 = 4;
   745   000348  0E04               	movlw	4
   746   00034A  6ECB               	movwf	203,c	;volatile
   747   00034C                     
   748                           ;main.c: 248:     CCP1CONbits.DC1B = 0;
   749   00034C  0ECF               	movlw	-49
   750   00034E  16BB               	andwf	187,f,c	;volatile
   751   000350                     
   752                           ;main.c: 249:     CCP1CONbits.CCP1M = 0x0C;
   753   000350  50BB               	movf	187,w,c	;volatile
   754   000352  0BF0               	andlw	-16
   755   000354  090C               	iorlw	12
   756   000356  6EBB               	movwf	187,c	;volatile
   757   000358                     
   758                           ;main.c: 250:     CCPR1L = 0;
   759   000358  0E00               	movlw	0
   760   00035A  6EBC               	movwf	188,c	;volatile
   761   00035C                     
   762                           ;main.c: 252:     T2CONbits.TMR2ON = 1;
   763   00035C  84CA               	bsf	202,2,c	;volatile
   764   00035E                     
   765                           ;main.c: 254:     LATCbits.LATC1 = 0;
   766   00035E  928B               	bcf	139,1,c	;volatile
   767   000360                     
   768                           ;main.c: 255:     LATAbits.LATA2 = 0;
   769   000360  9489               	bcf	137,2,c	;volatile
   770   000362                     
   771                           ;main.c: 256:     errorcounter = 30;
   772   000362  0E1E               	movlw	30
   773   000364  6E50               	movwf	_errorcounter^0,c	;volatile
   774   000366  0E00               	movlw	0
   775   000368  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
   776   00036A  0E00               	movlw	0
   777   00036C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
   778   00036E  0E00               	movlw	0
   779   000370  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
   780   000372                     
   781                           ;main.c: 259:     RCONbits.IPEN = 1;
   782   000372  8ED0               	bsf	208,7,c	;volatile
   783   000374                     
   784                           ;main.c: 262:     IPR1bits.RCIP = 1;
   785   000374  8A9F               	bsf	159,5,c	;volatile
   786   000376                     
   787                           ;main.c: 265:     INTCONbits.GIEH = 1;
   788   000376  8EF2               	bsf	242,7,c	;volatile
   789   000378                     
   790                           ;main.c: 266:     INTCONbits.GIE = 1;
   791   000378  8EF2               	bsf	242,7,c	;volatile
   792   00037A                     
   793                           ;main.c: 270:     WDTCONbits.SWDTEN = 0;
   794   00037A  90C0               	bcf	192,0,c	;volatile
   795   00037C                     
   796                           ;main.c: 271:     LATDbits.LATD0 = 1;
   797   00037C  808C               	bsf	140,0,c	;volatile
   798   00037E                     
   799                           ;main.c: 272:     LATDbits.LATD1 = 1;
   800   00037E  828C               	bsf	140,1,c	;volatile
   801   000380                     
   802                           ;main.c: 274:     WriteSTLED316SData(37, 0xFF);
   803   000380  0E00               	movlw	0
   804   000382  6E45               	movwf	(WriteSTLED316SData@number+1)^0,c
   805   000384  0E25               	movlw	37
   806   000386  6E44               	movwf	WriteSTLED316SData@number^0,c
   807   000388  0EFF               	movlw	255
   808   00038A  6E46               	movwf	WriteSTLED316SData@v_mode^0,c
   809   00038C  EC95  F010         	call	_WriteSTLED316SData	;wreg free
   810   000390                     
   811                           ;main.c: 275:     _delay((unsigned long)((500)*(8000000/4000.0)));
   812   000390  0E06               	movlw	6
   813   000392  0100               	movlb	0	; () banked
   814   000394  6FA1               	movwf	(??_main+1)& (0+255),b
   815   000396  0E13               	movlw	19
   816   000398  6FA0               	movwf	??_main& (0+255),b
   817   00039A  0EAD               	movlw	173
   818   00039C                     u4287:
   819   00039C  2EE8               	decfsz	wreg,f,c
   820   00039E  D7FE               	bra	u4287
   821   0003A0  2FA0               	decfsz	??_main& (0+255),f,b
   822   0003A2  D7FC               	bra	u4287
   823   0003A4  2FA1               	decfsz	(??_main+1)& (0+255),f,b
   824   0003A6  D7FA               	bra	u4287
   825   0003A8  D000               	nop2	
   826   0003AA                     
   827                           ;main.c: 276:     AD_capture_BattVoltage();
   828   0003AA  EC80  F012         	call	_AD_capture_BattVoltage	;wreg free
   829   0003AE                     
   830                           ;main.c: 285:     INTCONbits.GIE = 0;
   831   0003AE  9EF2               	bcf	242,7,c	;volatile
   832   0003B0                     
   833                           ;main.c: 286:     ETemp = read_i2c(0x0010);
   834   0003B0  0E10               	movlw	16
   835   0003B2  6E4A               	movwf	read_i2c@address^0,c
   836   0003B4  0E00               	movlw	0
   837   0003B6  6E4B               	movwf	(read_i2c@address+1)^0,c
   838   0003B8  0E00               	movlw	0
   839   0003BA  6E4C               	movwf	(read_i2c@address+2)^0,c
   840   0003BC  0E00               	movlw	0
   841   0003BE  6E4D               	movwf	(read_i2c@address+3)^0,c
   842   0003C0  ECA8  F011         	call	_read_i2c	;wreg free
   843   0003C4  C04A  F023         	movff	?_read_i2c,_ETemp
   844   0003C8  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
   845   0003CC                     
   846                           ;main.c: 287:     INTCONbits.GIE = 1;
   847   0003CC  8EF2               	bsf	242,7,c	;volatile
   848   0003CE                     
   849                           ;main.c: 289:     vibration_mode = ETemp & 0x00FF;
   850   0003CE  C023  F02E         	movff	_ETemp,_vibration_mode
   851   0003D2                     
   852                           ;main.c: 290:     if (vibration_mode > 1) {
   853   0003D2  0E01               	movlw	1
   854   0003D4  642E               	cpfsgt	_vibration_mode^0,c
   855   0003D6  EFEF  F001         	goto	u3681
   856   0003DA  EFF1  F001         	goto	u3680
   857   0003DE                     u3681:
   858   0003DE  EF02  F002         	goto	l5445
   859   0003E2                     u3680:
   860   0003E2                     
   861                           ;main.c: 291:         vibration_mode = 1;
   862   0003E2  0E01               	movlw	1
   863   0003E4  6E2E               	movwf	_vibration_mode^0,c
   864   0003E6                     
   865                           ;main.c: 293:         INTCONbits.GIE = 0;
   866   0003E6  9EF2               	bcf	242,7,c	;volatile
   867   0003E8                     
   868                           ;main.c: 294:         write_i2c(0x0010, vibration_mode);
   869   0003E8  0E10               	movlw	16
   870   0003EA  6E4A               	movwf	write_i2c@address^0,c
   871   0003EC  0E00               	movlw	0
   872   0003EE  6E4B               	movwf	(write_i2c@address+1)^0,c
   873   0003F0  0E00               	movlw	0
   874   0003F2  6E4C               	movwf	(write_i2c@address+2)^0,c
   875   0003F4  0E00               	movlw	0
   876   0003F6  6E4D               	movwf	(write_i2c@address+3)^0,c
   877   0003F8  C02E  F04E         	movff	_vibration_mode,write_i2c@data
   878   0003FC  6A4F               	clrf	(write_i2c@data+1)^0,c
   879   0003FE  EC3C  F012         	call	_write_i2c	;wreg free
   880   000402                     
   881                           ;main.c: 295:         INTCONbits.GIE = 1;
   882   000402  8EF2               	bsf	242,7,c	;volatile
   883   000404                     l5445:
   884                           
   885                           ;main.c: 298:     NUM = 1;
   886   000404  0E00               	movlw	0
   887   000406  6E1A               	movwf	(_NUM+1)^0,c
   888   000408  0E01               	movlw	1
   889   00040A  6E19               	movwf	_NUM^0,c
   890                           
   891                           ;main.c: 299:     WriteSTLED316SData(NUM, vibration_mode);
   892   00040C  C019  F044         	movff	_NUM,WriteSTLED316SData@number
   893   000410  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
   894   000414  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   895   000418  EC95  F010         	call	_WriteSTLED316SData	;wreg free
   896   00041C                     
   897                           ;main.c: 300:     NUM_REC = 1;
   898   00041C  0E00               	movlw	0
   899   00041E  6E16               	movwf	(_NUM_REC+1)^0,c
   900   000420  0E01               	movlw	1
   901   000422  6E15               	movwf	_NUM_REC^0,c
   902   000424                     
   903                           ;main.c: 305:     INTCONbits.GIE = 0;
   904   000424  9EF2               	bcf	242,7,c	;volatile
   905   000426                     
   906                           ;main.c: 306:     ETemp = read_i2c(0x0020);
   907   000426  0E20               	movlw	32
   908   000428  6E4A               	movwf	read_i2c@address^0,c
   909   00042A  0E00               	movlw	0
   910   00042C  6E4B               	movwf	(read_i2c@address+1)^0,c
   911   00042E  0E00               	movlw	0
   912   000430  6E4C               	movwf	(read_i2c@address+2)^0,c
   913   000432  0E00               	movlw	0
   914   000434  6E4D               	movwf	(read_i2c@address+3)^0,c
   915   000436  ECA8  F011         	call	_read_i2c	;wreg free
   916   00043A  C04A  F023         	movff	?_read_i2c,_ETemp
   917   00043E  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
   918   000442                     
   919                           ;main.c: 307:     INTCONbits.GIE = 1;
   920   000442  8EF2               	bsf	242,7,c	;volatile
   921                           
   922                           ;main.c: 309:     Device_ID = ETemp & 0x00FF;
   923   000444  5023               	movf	_ETemp^0,w,c
   924   000446  6E1D               	movwf	_Device_ID^0,c
   925   000448  6A1E               	clrf	(_Device_ID+1)^0,c
   926   00044A                     
   927                           ;main.c: 310:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   928   00044A  501E               	movf	(_Device_ID+1)^0,w,c
   929   00044C  E109               	bnz	u3690
   930   00044E  0E31               	movlw	49
   931   000450  5C1D               	subwf	_Device_ID^0,w,c
   932   000452  A0D8               	btfss	status,0,c
   933   000454  EF2E  F002         	goto	u3691
   934   000458  EF30  F002         	goto	u3690
   935   00045C                     u3691:
   936   00045C  EF3B  F002         	goto	l5459
   937   000460                     u3690:
   938   000460  501E               	movf	(_Device_ID+1)^0,w,c
   939   000462  E109               	bnz	u3700
   940   000464  0E3B               	movlw	59
   941   000466  5C1D               	subwf	_Device_ID^0,w,c
   942   000468  A0D8               	btfss	status,0,c
   943   00046A  EF39  F002         	goto	u3701
   944   00046E  EF3B  F002         	goto	u3700
   945   000472                     u3701:
   946   000472  EF4F  F002         	goto	l5467
   947   000476                     u3700:
   948   000476                     l5459:
   949                           
   950                           ;main.c: 311:         Device_ID = 0x31;
   951   000476  0E00               	movlw	0
   952   000478  6E1E               	movwf	(_Device_ID+1)^0,c
   953   00047A  0E31               	movlw	49
   954   00047C  6E1D               	movwf	_Device_ID^0,c
   955   00047E                     
   956                           ;main.c: 313:         INTCONbits.GIE = 0;
   957   00047E  9EF2               	bcf	242,7,c	;volatile
   958   000480                     
   959                           ;main.c: 314:         write_i2c(0x0020, Device_ID);
   960   000480  0E20               	movlw	32
   961   000482  6E4A               	movwf	write_i2c@address^0,c
   962   000484  0E00               	movlw	0
   963   000486  6E4B               	movwf	(write_i2c@address+1)^0,c
   964   000488  0E00               	movlw	0
   965   00048A  6E4C               	movwf	(write_i2c@address+2)^0,c
   966   00048C  0E00               	movlw	0
   967   00048E  6E4D               	movwf	(write_i2c@address+3)^0,c
   968   000490  C01D  F04E         	movff	_Device_ID,write_i2c@data
   969   000494  C01E  F04F         	movff	_Device_ID+1,write_i2c@data+1
   970   000498  EC3C  F012         	call	_write_i2c	;wreg free
   971   00049C                     
   972                           ;main.c: 315:         INTCONbits.GIE = 1;
   973   00049C  8EF2               	bsf	242,7,c	;volatile
   974   00049E                     l5467:
   975                           
   976                           ;main.c: 321:     INTCONbits.GIE = 0;
   977   00049E  9EF2               	bcf	242,7,c	;volatile
   978   0004A0                     
   979                           ;main.c: 322:     ETemp = read_i2c(0x0060);
   980   0004A0  0E60               	movlw	96
   981   0004A2  6E4A               	movwf	read_i2c@address^0,c
   982   0004A4  0E00               	movlw	0
   983   0004A6  6E4B               	movwf	(read_i2c@address+1)^0,c
   984   0004A8  0E00               	movlw	0
   985   0004AA  6E4C               	movwf	(read_i2c@address+2)^0,c
   986   0004AC  0E00               	movlw	0
   987   0004AE  6E4D               	movwf	(read_i2c@address+3)^0,c
   988   0004B0  ECA8  F011         	call	_read_i2c	;wreg free
   989   0004B4  C04A  F023         	movff	?_read_i2c,_ETemp
   990   0004B8  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
   991   0004BC                     
   992                           ;main.c: 323:     INTCONbits.GIE = 1;
   993   0004BC  8EF2               	bsf	242,7,c	;volatile
   994   0004BE                     
   995                           ;main.c: 325:     pause_Time = ETemp & 0x00FF;
   996   0004BE  C023  F02B         	movff	_ETemp,_pause_Time	;volatile
   997   0004C2                     
   998                           ;main.c: 326:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   999   0004C2  0E2F               	movlw	47
  1000   0004C4  642B               	cpfsgt	_pause_Time^0,c	;volatile
  1001   0004C6  EF67  F002         	goto	u3711
  1002   0004CA  EF69  F002         	goto	u3710
  1003   0004CE                     u3711:
  1004   0004CE  EF71  F002         	goto	l5479
  1005   0004D2                     u3710:
  1006   0004D2  0E35               	movlw	53
  1007   0004D4  642B               	cpfsgt	_pause_Time^0,c	;volatile
  1008   0004D6  EF6F  F002         	goto	u3721
  1009   0004DA  EF71  F002         	goto	u3720
  1010   0004DE                     u3721:
  1011   0004DE  EFAE  F002         	goto	l5501
  1012   0004E2                     u3720:
  1013   0004E2                     l5479:
  1014                           
  1015                           ;main.c: 327:         pause_Time = 0x30;
  1016   0004E2  0E30               	movlw	48
  1017   0004E4  6E2B               	movwf	_pause_Time^0,c	;volatile
  1018                           
  1019                           ;main.c: 328:         Motor_Pause_Time = 0;
  1020   0004E6  0E00               	movlw	0
  1021   0004E8  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1022   0004EA  0E00               	movlw	0
  1023   0004EC  6E1B               	movwf	_Motor_Pause_Time^0,c
  1024   0004EE                     
  1025                           ;main.c: 330:         INTCONbits.GIE = 0;
  1026   0004EE  9EF2               	bcf	242,7,c	;volatile
  1027   0004F0                     
  1028                           ;main.c: 331:         write_i2c(0x0060, pause_Time);
  1029   0004F0  0E60               	movlw	96
  1030   0004F2  6E4A               	movwf	write_i2c@address^0,c
  1031   0004F4  0E00               	movlw	0
  1032   0004F6  6E4B               	movwf	(write_i2c@address+1)^0,c
  1033   0004F8  0E00               	movlw	0
  1034   0004FA  6E4C               	movwf	(write_i2c@address+2)^0,c
  1035   0004FC  0E00               	movlw	0
  1036   0004FE  6E4D               	movwf	(write_i2c@address+3)^0,c
  1037   000500  C02B  F04E         	movff	_pause_Time,write_i2c@data	;volatile
  1038   000504  6A4F               	clrf	(write_i2c@data+1)^0,c
  1039   000506  EC3C  F012         	call	_write_i2c	;wreg free
  1040   00050A                     
  1041                           ;main.c: 332:         INTCONbits.GIE = 1;
  1042   00050A  8EF2               	bsf	242,7,c	;volatile
  1043                           
  1044                           ;main.c: 333:     } else {
  1045   00050C  EFD4  F002         	goto	l211
  1046   000510                     l5487:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 337:                 Motor_Pause_Time = 0;
  1050   000510  0E00               	movlw	0
  1051   000512  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1052   000514  0E00               	movlw	0
  1053   000516  6E1B               	movwf	_Motor_Pause_Time^0,c
  1054                           
  1055                           ;main.c: 338:                 pause_Time = 0x30;
  1056   000518  0E30               	movlw	48
  1057   00051A  6E2B               	movwf	_pause_Time^0,c	;volatile
  1058                           
  1059                           ;main.c: 339:                 break;
  1060   00051C  EFD4  F002         	goto	l211
  1061   000520                     l5489:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;main.c: 342:                 Motor_Pause_Time = 1000;
  1065   000520  0E03               	movlw	3
  1066   000522  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1067   000524  0EE8               	movlw	232
  1068   000526  6E1B               	movwf	_Motor_Pause_Time^0,c
  1069                           
  1070                           ;main.c: 343:                 break;
  1071   000528  EFD4  F002         	goto	l211
  1072   00052C                     l5491:
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;main.c: 346:                 Motor_Pause_Time = 2000;
  1076   00052C  0E07               	movlw	7
  1077   00052E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1078   000530  0ED0               	movlw	208
  1079   000532  6E1B               	movwf	_Motor_Pause_Time^0,c
  1080                           
  1081                           ;main.c: 347:                 break;
  1082   000534  EFD4  F002         	goto	l211
  1083   000538                     l5493:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 350:                 Motor_Pause_Time = 3000;
  1087   000538  0E0B               	movlw	11
  1088   00053A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1089   00053C  0EB8               	movlw	184
  1090   00053E  6E1B               	movwf	_Motor_Pause_Time^0,c
  1091                           
  1092                           ;main.c: 351:                 break;
  1093   000540  EFD4  F002         	goto	l211
  1094   000544                     l5495:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;main.c: 354:                 Motor_Pause_Time = 4000;
  1098   000544  0E0F               	movlw	15
  1099   000546  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1100   000548  0EA0               	movlw	160
  1101   00054A  6E1B               	movwf	_Motor_Pause_Time^0,c
  1102                           
  1103                           ;main.c: 355:                 break;
  1104   00054C  EFD4  F002         	goto	l211
  1105   000550                     l5497:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 358:                 Motor_Pause_Time = 5000;
  1109   000550  0E13               	movlw	19
  1110   000552  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  1111   000554  0E88               	movlw	136
  1112   000556  6E1B               	movwf	_Motor_Pause_Time^0,c
  1113                           
  1114                           ;main.c: 359:                 break;
  1115   000558  EFD4  F002         	goto	l211
  1116   00055C                     l5501:
  1117   00055C  502B               	movf	_pause_Time^0,w,c	;volatile
  1118   00055E  0100               	movlb	0	; () banked
  1119   000560  6FA0               	movwf	??_main& (0+255),b
  1120   000562  6BA1               	clrf	(??_main+1)& (0+255),b
  1121                           
  1122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 1, Range of values is 0 to 0
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte            4     3 (average)
  1128                           ;	Chosen strategy is simple_byte
  1129   000564  51A1               	movf	(??_main+1)& (0+255),w,b
  1130   000566  0A00               	xorlw	0	; case 0
  1131   000568  B4D8               	btfsc	status,2,c
  1132   00056A  EFB9  F002         	goto	l6273
  1133   00056E  EF88  F002         	goto	l5487
  1134   000572                     l6273:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 6, Range of values is 48 to 53
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte           19    10 (average)
  1142                           ;	Chosen strategy is simple_byte
  1143   000572  51A0               	movf	??_main& (0+255),w,b
  1144   000574  0A30               	xorlw	48	; case 48
  1145   000576  B4D8               	btfsc	status,2,c
  1146   000578  EF88  F002         	goto	l5487
  1147   00057C  0A01               	xorlw	1	; case 49
  1148   00057E  B4D8               	btfsc	status,2,c
  1149   000580  EF90  F002         	goto	l5489
  1150   000584  0A03               	xorlw	3	; case 50
  1151   000586  B4D8               	btfsc	status,2,c
  1152   000588  EF96  F002         	goto	l5491
  1153   00058C  0A01               	xorlw	1	; case 51
  1154   00058E  B4D8               	btfsc	status,2,c
  1155   000590  EF9C  F002         	goto	l5493
  1156   000594  0A07               	xorlw	7	; case 52
  1157   000596  B4D8               	btfsc	status,2,c
  1158   000598  EFA2  F002         	goto	l5495
  1159   00059C  0A01               	xorlw	1	; case 53
  1160   00059E  B4D8               	btfsc	status,2,c
  1161   0005A0  EFA8  F002         	goto	l5497
  1162   0005A4  EF88  F002         	goto	l5487
  1163   0005A8                     l211:
  1164                           
  1165                           ;main.c: 366:     INTCONbits.GIE = 0;
  1166   0005A8  9EF2               	bcf	242,7,c	;volatile
  1167   0005AA                     
  1168                           ;main.c: 367:     ETemp = read_i2c(0x0050);
  1169   0005AA  0E50               	movlw	80
  1170   0005AC  6E4A               	movwf	read_i2c@address^0,c
  1171   0005AE  0E00               	movlw	0
  1172   0005B0  6E4B               	movwf	(read_i2c@address+1)^0,c
  1173   0005B2  0E00               	movlw	0
  1174   0005B4  6E4C               	movwf	(read_i2c@address+2)^0,c
  1175   0005B6  0E00               	movlw	0
  1176   0005B8  6E4D               	movwf	(read_i2c@address+3)^0,c
  1177   0005BA  ECA8  F011         	call	_read_i2c	;wreg free
  1178   0005BE  C04A  F023         	movff	?_read_i2c,_ETemp
  1179   0005C2  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1180   0005C6                     
  1181                           ;main.c: 368:     INTCONbits.GIE = 1;
  1182   0005C6  8EF2               	bsf	242,7,c	;volatile
  1183   0005C8                     
  1184                           ;main.c: 370:     delay_motor_stop_time = ETemp & 0x00FF;
  1185   0005C8  C023  F029         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1186   0005CC                     
  1187                           ;main.c: 371:     if (delay_motor_stop_time > 0x96) {
  1188   0005CC  0E96               	movlw	150
  1189   0005CE  6429               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1190   0005D0  EFEC  F002         	goto	u3731
  1191   0005D4  EFEE  F002         	goto	u3730
  1192   0005D8                     u3731:
  1193   0005D8  EF05  F003         	goto	l221
  1194   0005DC                     u3730:
  1195   0005DC                     
  1196                           ;main.c: 372:         delay_motor_stop_time = 0x00;
  1197   0005DC  0E00               	movlw	0
  1198   0005DE  6E29               	movwf	_delay_motor_stop_time^0,c	;volatile
  1199   0005E0                     
  1200                           ;main.c: 374:         INTCONbits.GIE = 0;
  1201   0005E0  9EF2               	bcf	242,7,c	;volatile
  1202   0005E2                     
  1203                           ;main.c: 375:         write_i2c(0x0050, delay_motor_stop_time);
  1204   0005E2  0E50               	movlw	80
  1205   0005E4  6E4A               	movwf	write_i2c@address^0,c
  1206   0005E6  0E00               	movlw	0
  1207   0005E8  6E4B               	movwf	(write_i2c@address+1)^0,c
  1208   0005EA  0E00               	movlw	0
  1209   0005EC  6E4C               	movwf	(write_i2c@address+2)^0,c
  1210   0005EE  0E00               	movlw	0
  1211   0005F0  6E4D               	movwf	(write_i2c@address+3)^0,c
  1212   0005F2  C029  F04E         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1213   0005F6  6A4F               	clrf	(write_i2c@data+1)^0,c
  1214   0005F8  EC3C  F012         	call	_write_i2c	;wreg free
  1215   0005FC                     
  1216                           ;main.c: 376:         INTCONbits.GIE = 1;
  1217   0005FC  8EF2               	bsf	242,7,c	;volatile
  1218   0005FE                     
  1219                           ;main.c: 378:         Motor_Stop_Delay_Time = 0;
  1220   0005FE  0E00               	movlw	0
  1221   000600  6E20               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1222   000602  0E00               	movlw	0
  1223   000604  6E1F               	movwf	_Motor_Stop_Delay_Time^0,c
  1224                           
  1225                           ;main.c: 379:     } else {
  1226   000606  EF08  F003         	goto	l222
  1227   00060A                     l221:
  1228                           
  1229                           ;main.c: 380:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1230   00060A  C029  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1231   00060E  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1232   000610                     l222:
  1233                           
  1234                           ;main.c: 386:     INTCONbits.GIE = 0;
  1235   000610  9EF2               	bcf	242,7,c	;volatile
  1236   000612                     
  1237                           ;main.c: 387:     ETemp = read_i2c(0x0040);
  1238   000612  0E40               	movlw	64
  1239   000614  6E4A               	movwf	read_i2c@address^0,c
  1240   000616  0E00               	movlw	0
  1241   000618  6E4B               	movwf	(read_i2c@address+1)^0,c
  1242   00061A  0E00               	movlw	0
  1243   00061C  6E4C               	movwf	(read_i2c@address+2)^0,c
  1244   00061E  0E00               	movlw	0
  1245   000620  6E4D               	movwf	(read_i2c@address+3)^0,c
  1246   000622  ECA8  F011         	call	_read_i2c	;wreg free
  1247   000626  C04A  F023         	movff	?_read_i2c,_ETemp
  1248   00062A  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1249   00062E                     
  1250                           ;main.c: 388:     INTCONbits.GIE = 1;
  1251   00062E  8EF2               	bsf	242,7,c	;volatile
  1252   000630                     
  1253                           ;main.c: 389:     vib_Time = ETemp & 0x00FF;
  1254   000630  C023  F02A         	movff	_ETemp,_vib_Time	;volatile
  1255   000634                     
  1256                           ;main.c: 391:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85
  1257   000634  0E81               	movlw	129
  1258   000636  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1259   000638  B4D8               	btfsc	status,2,c
  1260   00063A  EF21  F003         	goto	u3741
  1261   00063E  EF23  F003         	goto	u3740
  1262   000642                     u3741:
  1263   000642  EF9C  F003         	goto	l5565
  1264   000646                     u3740:
  1265   000646  0E82               	movlw	130
  1266   000648  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1267   00064A  B4D8               	btfsc	status,2,c
  1268   00064C  EF2A  F003         	goto	u3751
  1269   000650  EF2C  F003         	goto	u3750
  1270   000654                     u3751:
  1271   000654  EF9C  F003         	goto	l5565
  1272   000658                     u3750:
  1273   000658  0E83               	movlw	131
  1274   00065A  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1275   00065C  B4D8               	btfsc	status,2,c
  1276   00065E  EF33  F003         	goto	u3761
  1277   000662  EF35  F003         	goto	u3760
  1278   000666                     u3761:
  1279   000666  EF9C  F003         	goto	l5565
  1280   00066A                     u3760:
  1281   00066A  0E84               	movlw	132
  1282   00066C  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1283   00066E  B4D8               	btfsc	status,2,c
  1284   000670  EF3C  F003         	goto	u3771
  1285   000674  EF3E  F003         	goto	u3770
  1286   000678                     u3771:
  1287   000678  EF9C  F003         	goto	l5565
  1288   00067C                     u3770:
  1289   00067C  0E85               	movlw	133
  1290   00067E  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1291   000680  B4D8               	btfsc	status,2,c
  1292   000682  EF45  F003         	goto	u3781
  1293   000686  EF47  F003         	goto	u3780
  1294   00068A                     u3781:
  1295   00068A  EF9C  F003         	goto	l5565
  1296   00068E                     u3780:
  1297   00068E  0E86               	movlw	134
  1298   000690  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1299   000692  B4D8               	btfsc	status,2,c
  1300   000694  EF4E  F003         	goto	u3791
  1301   000698  EF50  F003         	goto	u3790
  1302   00069C                     u3791:
  1303   00069C  EF9C  F003         	goto	l5565
  1304   0006A0                     u3790:
  1305   0006A0  0E87               	movlw	135
  1306   0006A2  182A               	xorwf	_vib_Time^0,w,c	;volatile
  1307   0006A4  B4D8               	btfsc	status,2,c
  1308   0006A6  EF57  F003         	goto	u3801
  1309   0006AA  EF59  F003         	goto	u3800
  1310   0006AE                     u3801:
  1311   0006AE  EF9C  F003         	goto	l5565
  1312   0006B2                     u3800:
  1313   0006B2                     
  1314                           ;main.c: 392:             && vib_Time != 0x86 && vib_Time != 0x87)) {;main.c: 393:      
      +                             Vmotor_Time = 2000;
  1315   0006B2  0E07               	movlw	7
  1316   0006B4  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1317   0006B6  0ED0               	movlw	208
  1318   0006B8  6E54               	movwf	_Vmotor_Time^0,c
  1319                           
  1320                           ;main.c: 394:         vib_Time = 0x82;
  1321   0006BA  0E82               	movlw	130
  1322   0006BC  6E2A               	movwf	_vib_Time^0,c	;volatile
  1323   0006BE                     
  1324                           ;main.c: 396:         INTCONbits.GIE = 0;
  1325   0006BE  9EF2               	bcf	242,7,c	;volatile
  1326   0006C0                     
  1327                           ;main.c: 397:         write_i2c(0x0040, vib_Time);
  1328   0006C0  0E40               	movlw	64
  1329   0006C2  6E4A               	movwf	write_i2c@address^0,c
  1330   0006C4  0E00               	movlw	0
  1331   0006C6  6E4B               	movwf	(write_i2c@address+1)^0,c
  1332   0006C8  0E00               	movlw	0
  1333   0006CA  6E4C               	movwf	(write_i2c@address+2)^0,c
  1334   0006CC  0E00               	movlw	0
  1335   0006CE  6E4D               	movwf	(write_i2c@address+3)^0,c
  1336   0006D0  C02A  F04E         	movff	_vib_Time,write_i2c@data	;volatile
  1337   0006D4  6A4F               	clrf	(write_i2c@data+1)^0,c
  1338   0006D6  EC3C  F012         	call	_write_i2c	;wreg free
  1339   0006DA                     
  1340                           ;main.c: 398:         INTCONbits.GIE = 1;
  1341   0006DA  8EF2               	bsf	242,7,c	;volatile
  1342                           
  1343                           ;main.c: 399:     } else {
  1344   0006DC  EFC6  F003         	goto	l5567
  1345   0006E0                     l5549:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 402:                 Vmotor_Time = 1000;
  1349   0006E0  0E03               	movlw	3
  1350   0006E2  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1351   0006E4  0EE8               	movlw	232
  1352   0006E6  6E54               	movwf	_Vmotor_Time^0,c
  1353                           
  1354                           ;main.c: 403:                 break;
  1355   0006E8  EFC6  F003         	goto	l5567
  1356   0006EC                     l5551:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 406:                 Vmotor_Time = 2000;
  1360   0006EC  0E07               	movlw	7
  1361   0006EE  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1362   0006F0  0ED0               	movlw	208
  1363   0006F2  6E54               	movwf	_Vmotor_Time^0,c
  1364                           
  1365                           ;main.c: 407:                 vib_Time = 0x82;
  1366   0006F4  0E82               	movlw	130
  1367   0006F6  6E2A               	movwf	_vib_Time^0,c	;volatile
  1368                           
  1369                           ;main.c: 408:                 break;
  1370   0006F8  EFC6  F003         	goto	l5567
  1371   0006FC                     l5553:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 410:                 Vmotor_Time = 3000;
  1375   0006FC  0E0B               	movlw	11
  1376   0006FE  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1377   000700  0EB8               	movlw	184
  1378   000702  6E54               	movwf	_Vmotor_Time^0,c
  1379                           
  1380                           ;main.c: 411:                 break;
  1381   000704  EFC6  F003         	goto	l5567
  1382   000708                     l5555:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 413:                 Vmotor_Time = 4000;
  1386   000708  0E0F               	movlw	15
  1387   00070A  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1388   00070C  0EA0               	movlw	160
  1389   00070E  6E54               	movwf	_Vmotor_Time^0,c
  1390                           
  1391                           ;main.c: 414:                 break;
  1392   000710  EFC6  F003         	goto	l5567
  1393   000714                     l5557:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;main.c: 416:                 Vmotor_Time = 5000;
  1397   000714  0E13               	movlw	19
  1398   000716  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1399   000718  0E88               	movlw	136
  1400   00071A  6E54               	movwf	_Vmotor_Time^0,c
  1401                           
  1402                           ;main.c: 417:                 break;
  1403   00071C  EFC6  F003         	goto	l5567
  1404   000720                     l5559:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;main.c: 419:                 Vmotor_Time = 800;
  1408   000720  0E03               	movlw	3
  1409   000722  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1410   000724  0E20               	movlw	32
  1411   000726  6E54               	movwf	_Vmotor_Time^0,c
  1412                           
  1413                           ;main.c: 420:                 break;
  1414   000728  EFC6  F003         	goto	l5567
  1415   00072C                     l5561:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;main.c: 422:                 Vmotor_Time = 1500;
  1419   00072C  0E05               	movlw	5
  1420   00072E  6E55               	movwf	(_Vmotor_Time+1)^0,c
  1421   000730  0EDC               	movlw	220
  1422   000732  6E54               	movwf	_Vmotor_Time^0,c
  1423                           
  1424                           ;main.c: 423:                 break;
  1425   000734  EFC6  F003         	goto	l5567
  1426   000738                     l5565:
  1427   000738  502A               	movf	_vib_Time^0,w,c	;volatile
  1428   00073A  0100               	movlb	0	; () banked
  1429   00073C  6FA0               	movwf	??_main& (0+255),b
  1430   00073E  6BA1               	clrf	(??_main+1)& (0+255),b
  1431                           
  1432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1433                           ; Switch size 1, requested type "simple"
  1434                           ; Number of cases is 1, Range of values is 0 to 0
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; simple_byte            4     3 (average)
  1438                           ;	Chosen strategy is simple_byte
  1439   000740  51A1               	movf	(??_main+1)& (0+255),w,b
  1440   000742  0A00               	xorlw	0	; case 0
  1441   000744  B4D8               	btfsc	status,2,c
  1442   000746  EFA7  F003         	goto	l6275
  1443   00074A  EF76  F003         	goto	l5551
  1444   00074E                     l6275:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 7, Range of values is 129 to 135
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte           22    12 (average)
  1452                           ;	Chosen strategy is simple_byte
  1453   00074E  51A0               	movf	??_main& (0+255),w,b
  1454   000750  0A81               	xorlw	129	; case 129
  1455   000752  B4D8               	btfsc	status,2,c
  1456   000754  EF70  F003         	goto	l5549
  1457   000758  0A03               	xorlw	3	; case 130
  1458   00075A  B4D8               	btfsc	status,2,c
  1459   00075C  EF76  F003         	goto	l5551
  1460   000760  0A01               	xorlw	1	; case 131
  1461   000762  B4D8               	btfsc	status,2,c
  1462   000764  EF7E  F003         	goto	l5553
  1463   000768  0A07               	xorlw	7	; case 132
  1464   00076A  B4D8               	btfsc	status,2,c
  1465   00076C  EF84  F003         	goto	l5555
  1466   000770  0A01               	xorlw	1	; case 133
  1467   000772  B4D8               	btfsc	status,2,c
  1468   000774  EF8A  F003         	goto	l5557
  1469   000778  0A03               	xorlw	3	; case 134
  1470   00077A  B4D8               	btfsc	status,2,c
  1471   00077C  EF90  F003         	goto	l5559
  1472   000780  0A01               	xorlw	1	; case 135
  1473   000782  B4D8               	btfsc	status,2,c
  1474   000784  EF96  F003         	goto	l5561
  1475   000788  EF76  F003         	goto	l5551
  1476   00078C                     l5567:
  1477                           
  1478                           ;main.c: 430:         PWM_reg = 0x3F;
  1479   00078C  0E3F               	movlw	63
  1480   00078E  6E56               	movwf	_PWM_reg^0,c
  1481   000790                     
  1482                           ;main.c: 432:     INTCONbits.GIE=0;
  1483   000790  9EF2               	bcf	242,7,c	;volatile
  1484   000792                     
  1485                           ;main.c: 433:     ETemp = read_i2c(0x0030);
  1486   000792  0E30               	movlw	48
  1487   000794  6E4A               	movwf	read_i2c@address^0,c
  1488   000796  0E00               	movlw	0
  1489   000798  6E4B               	movwf	(read_i2c@address+1)^0,c
  1490   00079A  0E00               	movlw	0
  1491   00079C  6E4C               	movwf	(read_i2c@address+2)^0,c
  1492   00079E  0E00               	movlw	0
  1493   0007A0  6E4D               	movwf	(read_i2c@address+3)^0,c
  1494   0007A2  ECA8  F011         	call	_read_i2c	;wreg free
  1495   0007A6  C04A  F023         	movff	?_read_i2c,_ETemp
  1496   0007AA  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1497   0007AE                     
  1498                           ;main.c: 434:     INTCONbits.GIE=1;
  1499   0007AE  8EF2               	bsf	242,7,c	;volatile
  1500   0007B0                     
  1501                           ;main.c: 436:     PWM_reg = ETemp & 0x00FF;
  1502   0007B0  C023  F056         	movff	_ETemp,_PWM_reg
  1503   0007B4                     
  1504                           ;main.c: 438:     if( (PWM_reg!=0x00 && PWM_reg!=0x3F && PWM_reg!=0x7F) )
  1505   0007B4  5056               	movf	_PWM_reg^0,w,c
  1506   0007B6  B4D8               	btfsc	status,2,c
  1507   0007B8  EFE0  F003         	goto	u3811
  1508   0007BC  EFE2  F003         	goto	u3810
  1509   0007C0                     u3811:
  1510   0007C0  EF05  F004         	goto	l5591
  1511   0007C4                     u3810:
  1512   0007C4  0E3F               	movlw	63
  1513   0007C6  1856               	xorwf	_PWM_reg^0,w,c
  1514   0007C8  B4D8               	btfsc	status,2,c
  1515   0007CA  EFE9  F003         	goto	u3821
  1516   0007CE  EFEB  F003         	goto	u3820
  1517   0007D2                     u3821:
  1518   0007D2  EF05  F004         	goto	l5591
  1519   0007D6                     u3820:
  1520   0007D6  0E7F               	movlw	127
  1521   0007D8  1856               	xorwf	_PWM_reg^0,w,c
  1522   0007DA  B4D8               	btfsc	status,2,c
  1523   0007DC  EFF2  F003         	goto	u3831
  1524   0007E0  EFF4  F003         	goto	u3830
  1525   0007E4                     u3831:
  1526   0007E4  EF05  F004         	goto	l5591
  1527   0007E8                     u3830:
  1528   0007E8                     
  1529                           ;main.c: 439:     {;main.c: 440:         PWM_reg=0x3F;
  1530   0007E8  0E3F               	movlw	63
  1531   0007EA  6E56               	movwf	_PWM_reg^0,c
  1532   0007EC                     
  1533                           ;main.c: 442:         INTCONbits.GIE=0;
  1534   0007EC  9EF2               	bcf	242,7,c	;volatile
  1535   0007EE                     
  1536                           ;main.c: 443:         write_i2c(0x0030,PWM_reg);
  1537   0007EE  0E30               	movlw	48
  1538   0007F0  6E4A               	movwf	write_i2c@address^0,c
  1539   0007F2  0E00               	movlw	0
  1540   0007F4  6E4B               	movwf	(write_i2c@address+1)^0,c
  1541   0007F6  0E00               	movlw	0
  1542   0007F8  6E4C               	movwf	(write_i2c@address+2)^0,c
  1543   0007FA  0E00               	movlw	0
  1544   0007FC  6E4D               	movwf	(write_i2c@address+3)^0,c
  1545   0007FE  C056  F04E         	movff	_PWM_reg,write_i2c@data
  1546   000802  6A4F               	clrf	(write_i2c@data+1)^0,c
  1547   000804  EC3C  F012         	call	_write_i2c	;wreg free
  1548   000808                     
  1549                           ;main.c: 444:         INTCONbits.GIE=1;
  1550   000808  8EF2               	bsf	242,7,c	;volatile
  1551   00080A                     l5591:
  1552                           
  1553                           ;main.c: 447:     errorcounter = 30;
  1554   00080A  0E1E               	movlw	30
  1555   00080C  6E50               	movwf	_errorcounter^0,c	;volatile
  1556   00080E  0E00               	movlw	0
  1557   000810  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  1558   000812  0E00               	movlw	0
  1559   000814  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  1560   000816  0E00               	movlw	0
  1561   000818  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  1562                           
  1563                           ;main.c: 448:     MotorPosition_Init();
  1564   00081A  ECFB  F00D         	call	_MotorPosition_Init	;wreg free
  1565   00081E                     
  1566                           ;main.c: 449:     LATDbits.LATD1 = 0;
  1567   00081E  928C               	bcf	140,1,c	;volatile
  1568   000820                     
  1569                           ;main.c: 454:     INTCONbits.GIE=0;
  1570   000820  9EF2               	bcf	242,7,c	;volatile
  1571                           
  1572                           ;main.c: 455:     ETemp = read_i2c(0x0070);
  1573   000822  0E70               	movlw	112
  1574   000824  6E4A               	movwf	read_i2c@address^0,c
  1575   000826  0E00               	movlw	0
  1576   000828  6E4B               	movwf	(read_i2c@address+1)^0,c
  1577   00082A  0E00               	movlw	0
  1578   00082C  6E4C               	movwf	(read_i2c@address+2)^0,c
  1579   00082E  0E00               	movlw	0
  1580   000830  6E4D               	movwf	(read_i2c@address+3)^0,c
  1581   000832  ECA8  F011         	call	_read_i2c	;wreg free
  1582   000836  C04A  F023         	movff	?_read_i2c,_ETemp
  1583   00083A  C04B  F024         	movff	?_read_i2c+1,_ETemp+1
  1584   00083E                     
  1585                           ;main.c: 457:     INTCONbits.GIE=1;
  1586   00083E  8EF2               	bsf	242,7,c	;volatile
  1587   000840                     
  1588                           ;main.c: 459:     dutyCycle_reg = ETemp & 0xFF;
  1589   000840  5023               	movf	_ETemp^0,w,c
  1590   000842  6E0D               	movwf	_dutyCycle_reg^0,c
  1591   000844  6A0E               	clrf	(_dutyCycle_reg+1)^0,c
  1592   000846                     
  1593                           ;main.c: 461:     if(dutyCycle_reg != 0x00 && dutyCycle_reg != 0x01 && dutyCycle_reg != 
      +                          0x02 && dutyCycle_reg != 0x03 && dutyCycle_reg != 0x04)
  1594   000846  500D               	movf	_dutyCycle_reg^0,w,c
  1595   000848  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1596   00084A  B4D8               	btfsc	status,2,c
  1597   00084C  EF2A  F004         	goto	u3841
  1598   000850  EF2C  F004         	goto	u3840
  1599   000854                     u3841:
  1600   000854  EF87  F004         	goto	l5633
  1601   000858                     u3840:
  1602   000858  040D               	decf	_dutyCycle_reg^0,w,c
  1603   00085A  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1604   00085C  B4D8               	btfsc	status,2,c
  1605   00085E  EF33  F004         	goto	u3851
  1606   000862  EF35  F004         	goto	u3850
  1607   000866                     u3851:
  1608   000866  EF87  F004         	goto	l5633
  1609   00086A                     u3850:
  1610   00086A  0E02               	movlw	2
  1611   00086C  180D               	xorwf	_dutyCycle_reg^0,w,c
  1612   00086E  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1613   000870  B4D8               	btfsc	status,2,c
  1614   000872  EF3D  F004         	goto	u3861
  1615   000876  EF3F  F004         	goto	u3860
  1616   00087A                     u3861:
  1617   00087A  EF87  F004         	goto	l5633
  1618   00087E                     u3860:
  1619   00087E  0E03               	movlw	3
  1620   000880  180D               	xorwf	_dutyCycle_reg^0,w,c
  1621   000882  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1622   000884  B4D8               	btfsc	status,2,c
  1623   000886  EF47  F004         	goto	u3871
  1624   00088A  EF49  F004         	goto	u3870
  1625   00088E                     u3871:
  1626   00088E  EF87  F004         	goto	l5633
  1627   000892                     u3870:
  1628   000892  0E04               	movlw	4
  1629   000894  180D               	xorwf	_dutyCycle_reg^0,w,c
  1630   000896  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  1631   000898  B4D8               	btfsc	status,2,c
  1632   00089A  EF51  F004         	goto	u3881
  1633   00089E  EF53  F004         	goto	u3880
  1634   0008A2                     u3881:
  1635   0008A2  EF87  F004         	goto	l5633
  1636   0008A6                     u3880:
  1637   0008A6                     
  1638                           ;main.c: 462:     {;main.c: 463:         dutyCycle_reg = 0x00;
  1639   0008A6  0E00               	movlw	0
  1640   0008A8  6E0E               	movwf	(_dutyCycle_reg+1)^0,c
  1641   0008AA  0E00               	movlw	0
  1642   0008AC  6E0D               	movwf	_dutyCycle_reg^0,c
  1643   0008AE                     
  1644                           ;main.c: 464:         INTCONbits.GIE=0;
  1645   0008AE  9EF2               	bcf	242,7,c	;volatile
  1646   0008B0                     
  1647                           ;main.c: 465:         write_i2c(0x0070,dutyCycle_reg);
  1648   0008B0  0E70               	movlw	112
  1649   0008B2  6E4A               	movwf	write_i2c@address^0,c
  1650   0008B4  0E00               	movlw	0
  1651   0008B6  6E4B               	movwf	(write_i2c@address+1)^0,c
  1652   0008B8  0E00               	movlw	0
  1653   0008BA  6E4C               	movwf	(write_i2c@address+2)^0,c
  1654   0008BC  0E00               	movlw	0
  1655   0008BE  6E4D               	movwf	(write_i2c@address+3)^0,c
  1656   0008C0  C00D  F04E         	movff	_dutyCycle_reg,write_i2c@data
  1657   0008C4  C00E  F04F         	movff	_dutyCycle_reg+1,write_i2c@data+1
  1658   0008C8  EC3C  F012         	call	_write_i2c	;wreg free
  1659   0008CC                     
  1660                           ;main.c: 466:         INTCONbits.GIE=1;
  1661   0008CC  8EF2               	bsf	242,7,c	;volatile
  1662                           
  1663                           ;main.c: 467:     }
  1664   0008CE  EFAA  F004         	goto	l5635
  1665   0008D2                     l5619:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 471:           duty_cycle = 0;
  1669   0008D2  0E00               	movlw	0
  1670   0008D4  6E0C               	movwf	(_duty_cycle+1)^0,c
  1671   0008D6  0E00               	movlw	0
  1672   0008D8  6E0B               	movwf	_duty_cycle^0,c
  1673                           
  1674                           ;main.c: 472:           break;
  1675   0008DA  EFAA  F004         	goto	l5635
  1676   0008DE                     l5621:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 474:           duty_cycle = 7;
  1680   0008DE  0E00               	movlw	0
  1681   0008E0  6E0C               	movwf	(_duty_cycle+1)^0,c
  1682   0008E2  0E07               	movlw	7
  1683   0008E4  6E0B               	movwf	_duty_cycle^0,c
  1684                           
  1685                           ;main.c: 475:           break;
  1686   0008E6  EFAA  F004         	goto	l5635
  1687   0008EA                     l5623:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 478:           duty_cycle = 9;
  1691   0008EA  0E00               	movlw	0
  1692   0008EC  6E0C               	movwf	(_duty_cycle+1)^0,c
  1693   0008EE  0E09               	movlw	9
  1694   0008F0  6E0B               	movwf	_duty_cycle^0,c
  1695                           
  1696                           ;main.c: 479:           break;
  1697   0008F2  EFAA  F004         	goto	l5635
  1698   0008F6                     l5625:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 481:           duty_cycle = 12;
  1702   0008F6  0E00               	movlw	0
  1703   0008F8  6E0C               	movwf	(_duty_cycle+1)^0,c
  1704   0008FA  0E0C               	movlw	12
  1705   0008FC  6E0B               	movwf	_duty_cycle^0,c
  1706                           
  1707                           ;main.c: 482:           break;
  1708   0008FE  EFAA  F004         	goto	l5635
  1709   000902                     l5627:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 484:           duty_cycle = 20;
  1713   000902  0E00               	movlw	0
  1714   000904  6E0C               	movwf	(_duty_cycle+1)^0,c
  1715   000906  0E14               	movlw	20
  1716   000908  6E0B               	movwf	_duty_cycle^0,c
  1717                           
  1718                           ;main.c: 485:           break;
  1719   00090A  EFAA  F004         	goto	l5635
  1720   00090E                     l5633:
  1721   00090E  C00D  F0A0         	movff	_dutyCycle_reg,??_main
  1722   000912  C00E  F0A1         	movff	_dutyCycle_reg+1,??_main+1
  1723                           
  1724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1725                           ; Switch size 1, requested type "simple"
  1726                           ; Number of cases is 1, Range of values is 0 to 0
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte            4     3 (average)
  1730                           ;	Chosen strategy is simple_byte
  1731   000916  0100               	movlb	0	; () banked
  1732   000918  51A1               	movf	(??_main+1)& (0+255),w,b
  1733   00091A  0A00               	xorlw	0	; case 0
  1734   00091C  B4D8               	btfsc	status,2,c
  1735   00091E  EF93  F004         	goto	l6277
  1736   000922  EF69  F004         	goto	l5619
  1737   000926                     l6277:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 5, Range of values is 0 to 4
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte           16     9 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746   000926  51A0               	movf	??_main& (0+255),w,b
  1747   000928  0A00               	xorlw	0	; case 0
  1748   00092A  B4D8               	btfsc	status,2,c
  1749   00092C  EF69  F004         	goto	l5619
  1750   000930  0A01               	xorlw	1	; case 1
  1751   000932  B4D8               	btfsc	status,2,c
  1752   000934  EF6F  F004         	goto	l5621
  1753   000938  0A03               	xorlw	3	; case 2
  1754   00093A  B4D8               	btfsc	status,2,c
  1755   00093C  EF75  F004         	goto	l5623
  1756   000940  0A01               	xorlw	1	; case 3
  1757   000942  B4D8               	btfsc	status,2,c
  1758   000944  EF7B  F004         	goto	l5625
  1759   000948  0A07               	xorlw	7	; case 4
  1760   00094A  B4D8               	btfsc	status,2,c
  1761   00094C  EF81  F004         	goto	l5627
  1762   000950  EF69  F004         	goto	l5619
  1763   000954                     l5635:
  1764                           
  1765                           ;main.c: 509:         pwm_set(duty_cycle);
  1766   000954  C00B  F03C         	movff	_duty_cycle,pwm_set@duty
  1767   000958  C00C  F03D         	movff	_duty_cycle+1,pwm_set@duty+1
  1768   00095C  EC0F  F013         	call	_pwm_set	;wreg free
  1769   000960  0004               	clrwdt		;# 
  1770   000962                     
  1771                           ;main.c: 512:         errorcounter = 30;
  1772   000962  0E1E               	movlw	30
  1773   000964  6E50               	movwf	_errorcounter^0,c	;volatile
  1774   000966  0E00               	movlw	0
  1775   000968  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  1776   00096A  0E00               	movlw	0
  1777   00096C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  1778   00096E  0E00               	movlw	0
  1779   000970  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  1780   000972                     
  1781                           ;main.c: 513:         AD_capture_BattVoltage();
  1782   000972  EC80  F012         	call	_AD_capture_BattVoltage	;wreg free
  1783                           
  1784                           ;main.c: 515:         switch (OpMode) {
  1785   000976  EF3A  F009         	goto	l5939
  1786   00097A                     l248:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 521:                 NUM = NUM_REC;
  1790   00097A  C015  F019         	movff	_NUM_REC,_NUM
  1791   00097E  C016  F01A         	movff	_NUM_REC+1,_NUM+1
  1792                           
  1793                           ;main.c: 522:                 if (PORTBbits.RB4 == 0) {
  1794   000982  B881               	btfsc	129,4,c	;volatile
  1795   000984  EFC6  F004         	goto	u3891
  1796   000988  EFC8  F004         	goto	u3890
  1797   00098C                     u3891:
  1798   00098C  EF63  F005         	goto	l5665
  1799   000990                     u3890:
  1800   000990                     l5641:
  1801                           
  1802                           ;main.c: 524:                       WriteSTLED316SVibMode(dutyCycle_reg, vibration_mode)
      +                          ;
  1803   000990  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1804   000994  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1805   000998  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1806   00099C  ECE5  F00C         	call	_WriteSTLED316SVibMode	;wreg free
  1807   0009A0                     
  1808                           ;main.c: 526:                       if (holdTimeMode >= 2000)
  1809   0009A0  BE04               	btfsc	(_holdTimeMode+1)^0,7,c
  1810   0009A2  EFDC  F004         	goto	u3901
  1811   0009A6  0ED0               	movlw	208
  1812   0009A8  5C03               	subwf	_holdTimeMode^0,w,c
  1813   0009AA  0E07               	movlw	7
  1814   0009AC  5804               	subwfb	(_holdTimeMode+1)^0,w,c
  1815   0009AE  A0D8               	btfss	status,0,c
  1816   0009B0  EFDC  F004         	goto	u3901
  1817   0009B4  EFDE  F004         	goto	u3900
  1818   0009B8                     u3901:
  1819   0009B8  EF0F  F005         	goto	l5649
  1820   0009BC                     u3900:
  1821   0009BC                     
  1822                           ;main.c: 527:                       {;main.c: 528:                         duty_cycle = 
      +                          PWM_Selection(dutyCycle_reg);
  1823   0009BC  C00D  F09A         	movff	_dutyCycle_reg,PWM_Selection@msg
  1824   0009C0  C00E  F09B         	movff	_dutyCycle_reg+1,PWM_Selection@msg+1
  1825   0009C4  EC4D  F00C         	call	_PWM_Selection	;wreg free
  1826   0009C8  C09A  F00B         	movff	?_PWM_Selection,_duty_cycle
  1827   0009CC  C09B  F00C         	movff	?_PWM_Selection+1,_duty_cycle+1
  1828                           
  1829                           ;main.c: 529:                         dutyCycle_reg = read_i2c(0x0070);
  1830   0009D0  0E70               	movlw	112
  1831   0009D2  6E4A               	movwf	read_i2c@address^0,c
  1832   0009D4  0E00               	movlw	0
  1833   0009D6  6E4B               	movwf	(read_i2c@address+1)^0,c
  1834   0009D8  0E00               	movlw	0
  1835   0009DA  6E4C               	movwf	(read_i2c@address+2)^0,c
  1836   0009DC  0E00               	movlw	0
  1837   0009DE  6E4D               	movwf	(read_i2c@address+3)^0,c
  1838   0009E0  ECA8  F011         	call	_read_i2c	;wreg free
  1839   0009E4  C04A  F00D         	movff	?_read_i2c,_dutyCycle_reg
  1840   0009E8  C04B  F00E         	movff	?_read_i2c+1,_dutyCycle_reg+1
  1841                           
  1842                           ;main.c: 530:                         ToggleVIB_Mode();
  1843   0009EC  EC61  F012         	call	_ToggleVIB_Mode	;wreg free
  1844                           
  1845                           ;main.c: 531:                         WriteSTLED316SVibMode(dutyCycle_reg, vibration_mod
      +                          e);
  1846   0009F0  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1847   0009F4  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1848   0009F8  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1849   0009FC  ECE5  F00C         	call	_WriteSTLED316SVibMode	;wreg free
  1850   000A00                     
  1851                           ;main.c: 532:                         _delay((unsigned long)((500)*(8000000/4000.0)));
  1852   000A00  0E06               	movlw	6
  1853   000A02  0100               	movlb	0	; () banked
  1854   000A04  6FA1               	movwf	(??_main+1)& (0+255),b
  1855   000A06  0E13               	movlw	19
  1856   000A08  6FA0               	movwf	??_main& (0+255),b
  1857   000A0A  0EAD               	movlw	173
  1858   000A0C                     u4297:
  1859   000A0C  2EE8               	decfsz	wreg,f,c
  1860   000A0E  D7FE               	bra	u4297
  1861   000A10  2FA0               	decfsz	??_main& (0+255),f,b
  1862   000A12  D7FC               	bra	u4297
  1863   000A14  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  1864   000A16  D7FA               	bra	u4297
  1865   000A18  D000               	nop2	
  1866                           
  1867                           ;main.c: 533:                       }
  1868   000A1A  EF4C  F005         	goto	l5663
  1869   000A1E                     l5649:
  1870   000A1E  BE04               	btfsc	(_holdTimeMode+1)^0,7,c
  1871   000A20  EF1D  F005         	goto	u3910
  1872   000A24  0ED0               	movlw	208
  1873   000A26  5C03               	subwf	_holdTimeMode^0,w,c
  1874   000A28  0E07               	movlw	7
  1875   000A2A  5804               	subwfb	(_holdTimeMode+1)^0,w,c
  1876   000A2C  B0D8               	btfsc	status,0,c
  1877   000A2E  EF1B  F005         	goto	u3911
  1878   000A32  EF1D  F005         	goto	u3910
  1879   000A36                     u3911:
  1880   000A36  EF4C  F005         	goto	l5663
  1881   000A3A                     u3910:
  1882   000A3A                     
  1883                           ;main.c: 535:                       {;main.c: 536:                         WriteSTLED316
      +                          SVibMode(dutyCycle_reg, vibration_mode);
  1884   000A3A  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1885   000A3E  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1886   000A42  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1887   000A46  ECE5  F00C         	call	_WriteSTLED316SVibMode	;wreg free
  1888   000A4A                     
  1889                           ;main.c: 537:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  1890   000A4A  0E02               	movlw	2
  1891   000A4C  0100               	movlb	0	; () banked
  1892   000A4E  6FA1               	movwf	(??_main+1)& (0+255),b
  1893   000A50  0E86               	movlw	134
  1894   000A52  6FA0               	movwf	??_main& (0+255),b
  1895   000A54  0E99               	movlw	153
  1896   000A56                     u4307:
  1897   000A56  2EE8               	decfsz	wreg,f,c
  1898   000A58  D7FE               	bra	u4307
  1899   000A5A  2FA0               	decfsz	??_main& (0+255),f,b
  1900   000A5C  D7FC               	bra	u4307
  1901   000A5E  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  1902   000A60  D7FA               	bra	u4307
  1903   000A62                     
  1904                           ;main.c: 538:                         holdTimeMode = 0;
  1905   000A62  0E00               	movlw	0
  1906   000A64  6E04               	movwf	(_holdTimeMode+1)^0,c
  1907   000A66  0E00               	movlw	0
  1908   000A68  6E03               	movwf	_holdTimeMode^0,c
  1909   000A6A  EF4C  F005         	goto	l5663
  1910   000A6E                     l5657:
  1911                           
  1912                           ;main.c: 541:                       {;main.c: 542:                         WriteSTLED316
      +                          SVibMode(dutyCycle_reg, vibration_mode);
  1913   000A6E  C00D  F042         	movff	_dutyCycle_reg,WriteSTLED316SVibMode@dc_reg
  1914   000A72  C00E  F043         	movff	_dutyCycle_reg+1,WriteSTLED316SVibMode@dc_reg+1
  1915   000A76  C02E  F044         	movff	_vibration_mode,WriteSTLED316SVibMode@v_mode
  1916   000A7A  ECE5  F00C         	call	_WriteSTLED316SVibMode	;wreg free
  1917   000A7E                     
  1918                           ;main.c: 543:                         _delay((unsigned long)((10)*(8000000/4000.0)));
  1919   000A7E  0E1A               	movlw	26
  1920   000A80  0100               	movlb	0	; () banked
  1921   000A82  6FA0               	movwf	??_main& (0+255),b
  1922   000A84  0EF8               	movlw	248
  1923   000A86                     u4317:
  1924   000A86  2EE8               	decfsz	wreg,f,c
  1925   000A88  D7FE               	bra	u4317
  1926   000A8A  2FA0               	decfsz	??_main& (0+255),f,b
  1927   000A8C  D7FC               	bra	u4317
  1928   000A8E  F000               	nop	
  1929   000A90                     
  1930                           ;main.c: 544:                         holdTimeMode += 10;
  1931   000A90  0E0A               	movlw	10
  1932   000A92  2603               	addwf	_holdTimeMode^0,f,c
  1933   000A94  0E00               	movlw	0
  1934   000A96  2204               	addwfc	(_holdTimeMode+1)^0,f,c
  1935   000A98                     l5663:
  1936                           
  1937                           ;main.c: 540:                       while(holdTimeMode < 2000)
  1938   000A98  BE04               	btfsc	(_holdTimeMode+1)^0,7,c
  1939   000A9A  EF58  F005         	goto	u3921
  1940   000A9E  0ED0               	movlw	208
  1941   000AA0  5C03               	subwf	_holdTimeMode^0,w,c
  1942   000AA2  0E07               	movlw	7
  1943   000AA4  5804               	subwfb	(_holdTimeMode+1)^0,w,c
  1944   000AA6  A0D8               	btfss	status,0,c
  1945   000AA8  EF58  F005         	goto	u3921
  1946   000AAC  EF5A  F005         	goto	u3920
  1947   000AB0                     u3921:
  1948   000AB0  EF37  F005         	goto	l5657
  1949   000AB4                     u3920:
  1950   000AB4                     
  1951                           ;main.c: 546:                     } while (PORTBbits.RB4 == 0);
  1952   000AB4  A881               	btfss	129,4,c	;volatile
  1953   000AB6  EF5F  F005         	goto	u3931
  1954   000ABA  EF61  F005         	goto	u3930
  1955   000ABE                     u3931:
  1956   000ABE  EFC8  F004         	goto	l5641
  1957   000AC2                     u3930:
  1958   000AC2  EF67  F005         	goto	l5667
  1959   000AC6                     l5665:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 549:                   holdTimeMode = 0;
  1963   000AC6  0E00               	movlw	0
  1964   000AC8  6E04               	movwf	(_holdTimeMode+1)^0,c
  1965   000ACA  0E00               	movlw	0
  1966   000ACC  6E03               	movwf	_holdTimeMode^0,c
  1967   000ACE                     l5667:
  1968                           
  1969                           ;main.c: 552:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1970   000ACE  B681               	btfsc	129,3,c	;volatile
  1971   000AD0  EF6C  F005         	goto	u3941
  1972   000AD4  EF6E  F005         	goto	u3940
  1973   000AD8                     u3941:
  1974   000AD8  EF23  F006         	goto	l5709
  1975   000ADC                     u3940:
  1976   000ADC  0E63               	movlw	99
  1977   000ADE  1819               	xorwf	_NUM^0,w,c
  1978   000AE0  101A               	iorwf	(_NUM+1)^0,w,c
  1979   000AE2  B4D8               	btfsc	status,2,c
  1980   000AE4  EF76  F005         	goto	u3951
  1981   000AE8  EF78  F005         	goto	u3950
  1982   000AEC                     u3951:
  1983   000AEC  EF23  F006         	goto	l5709
  1984   000AF0                     u3950:
  1985   000AF0                     
  1986                           ;main.c: 553:                     if(PORTBbits.RB3 == 0){
  1987   000AF0  B681               	btfsc	129,3,c	;volatile
  1988   000AF2  EF7D  F005         	goto	u3961
  1989   000AF6  EF7F  F005         	goto	u3960
  1990   000AFA                     u3961:
  1991   000AFA  EF27  F006         	goto	l5711
  1992   000AFE                     u3960:
  1993   000AFE                     
  1994                           ;main.c: 555:                       if (holdTimeRight >= 1000 && NUM <= 89)
  1995   000AFE  BE08               	btfsc	(_holdTimeRight+1)^0,7,c
  1996   000B00  EF8B  F005         	goto	u3971
  1997   000B04  0EE8               	movlw	232
  1998   000B06  5C07               	subwf	_holdTimeRight^0,w,c
  1999   000B08  0E03               	movlw	3
  2000   000B0A  5808               	subwfb	(_holdTimeRight+1)^0,w,c
  2001   000B0C  A0D8               	btfss	status,0,c
  2002   000B0E  EF8B  F005         	goto	u3971
  2003   000B12  EF8D  F005         	goto	u3970
  2004   000B16                     u3971:
  2005   000B16  EFB5  F005         	goto	l5683
  2006   000B1A                     u3970:
  2007   000B1A  501A               	movf	(_NUM+1)^0,w,c
  2008   000B1C  E107               	bnz	u3981
  2009   000B1E  0E5A               	movlw	90
  2010   000B20  5C19               	subwf	_NUM^0,w,c
  2011   000B22  B0D8               	btfsc	status,0,c
  2012   000B24  EF96  F005         	goto	u3981
  2013   000B28  EF98  F005         	goto	u3980
  2014   000B2C                     u3981:
  2015   000B2C  EFB5  F005         	goto	l5683
  2016   000B30                     u3980:
  2017   000B30                     
  2018                           ;main.c: 556:                       {;main.c: 557:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  2019   000B30  0E06               	movlw	6
  2020   000B32  0100               	movlb	0	; () banked
  2021   000B34  6FA1               	movwf	(??_main+1)& (0+255),b
  2022   000B36  0E13               	movlw	19
  2023   000B38  6FA0               	movwf	??_main& (0+255),b
  2024   000B3A  0EAD               	movlw	173
  2025   000B3C                     u4327:
  2026   000B3C  2EE8               	decfsz	wreg,f,c
  2027   000B3E  D7FE               	bra	u4327
  2028   000B40  2FA0               	decfsz	??_main& (0+255),f,b
  2029   000B42  D7FC               	bra	u4327
  2030   000B44  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2031   000B46  D7FA               	bra	u4327
  2032   000B48  D000               	nop2	
  2033   000B4A                     
  2034                           ;main.c: 558:                         NUM = NUM + 10;
  2035   000B4A  0E0A               	movlw	10
  2036   000B4C  2419               	addwf	_NUM^0,w,c
  2037   000B4E  6E19               	movwf	_NUM^0,c
  2038   000B50  0E00               	movlw	0
  2039   000B52  201A               	addwfc	(_NUM+1)^0,w,c
  2040   000B54  6E1A               	movwf	(_NUM+1)^0,c
  2041   000B56                     
  2042                           ;main.c: 559:                         WriteSTLED316SData(NUM, vibration_mode);
  2043   000B56  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2044   000B5A  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2045   000B5E  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2046   000B62  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2047                           
  2048                           ;main.c: 560:                       }
  2049   000B66  EFE1  F005         	goto	l5693
  2050   000B6A                     l5683:
  2051   000B6A  BE08               	btfsc	(_holdTimeRight+1)^0,7,c
  2052   000B6C  EFC3  F005         	goto	u3990
  2053   000B70  0EE8               	movlw	232
  2054   000B72  5C07               	subwf	_holdTimeRight^0,w,c
  2055   000B74  0E03               	movlw	3
  2056   000B76  5808               	subwfb	(_holdTimeRight+1)^0,w,c
  2057   000B78  B0D8               	btfsc	status,0,c
  2058   000B7A  EFC1  F005         	goto	u3991
  2059   000B7E  EFC3  F005         	goto	u3990
  2060   000B82                     u3991:
  2061   000B82  EFE1  F005         	goto	l5693
  2062   000B86                     u3990:
  2063   000B86                     
  2064                           ;main.c: 562:                       {;main.c: 563:                         NUM = NUM + 1
      +                          ;
  2065   000B86  0E01               	movlw	1
  2066   000B88  2419               	addwf	_NUM^0,w,c
  2067   000B8A  6E19               	movwf	_NUM^0,c
  2068   000B8C  0E00               	movlw	0
  2069   000B8E  201A               	addwfc	(_NUM+1)^0,w,c
  2070   000B90  6E1A               	movwf	(_NUM+1)^0,c
  2071   000B92                     
  2072                           ;main.c: 564:                         WriteSTLED316SData(NUM, vibration_mode);
  2073   000B92  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2074   000B96  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2075   000B9A  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2076   000B9E  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2077   000BA2                     
  2078                           ;main.c: 566:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  2079   000BA2  0E02               	movlw	2
  2080   000BA4  0100               	movlb	0	; () banked
  2081   000BA6  6FA1               	movwf	(??_main+1)& (0+255),b
  2082   000BA8  0E86               	movlw	134
  2083   000BAA  6FA0               	movwf	??_main& (0+255),b
  2084   000BAC  0E99               	movlw	153
  2085   000BAE                     u4337:
  2086   000BAE  2EE8               	decfsz	wreg,f,c
  2087   000BB0  D7FE               	bra	u4337
  2088   000BB2  2FA0               	decfsz	??_main& (0+255),f,b
  2089   000BB4  D7FC               	bra	u4337
  2090   000BB6  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2091   000BB8  D7FA               	bra	u4337
  2092   000BBA                     
  2093                           ;main.c: 567:                         holdTimeRight = 0;
  2094   000BBA  0E00               	movlw	0
  2095   000BBC  6E08               	movwf	(_holdTimeRight+1)^0,c
  2096   000BBE  0E00               	movlw	0
  2097   000BC0  6E07               	movwf	_holdTimeRight^0,c
  2098   000BC2                     l5693:
  2099                           
  2100                           ;main.c: 571:                       if(PORTBbits.RB3 == 0 && PORTAbits.RA5 == 0)
  2101   000BC2  B681               	btfsc	129,3,c	;volatile
  2102   000BC4  EFE6  F005         	goto	u4001
  2103   000BC8  EFE8  F005         	goto	u4000
  2104   000BCC                     u4001:
  2105   000BCC  EF0A  F006         	goto	l5705
  2106   000BD0                     u4000:
  2107   000BD0  BA80               	btfsc	128,5,c	;volatile
  2108   000BD2  EFED  F005         	goto	u4011
  2109   000BD6  EFEF  F005         	goto	u4010
  2110   000BDA                     u4011:
  2111   000BDA  EF0A  F006         	goto	l5705
  2112   000BDE                     u4010:
  2113   000BDE                     
  2114                           ;main.c: 572:                       {;main.c: 573:                           NUM = 0;
  2115   000BDE  0E00               	movlw	0
  2116   000BE0  6E1A               	movwf	(_NUM+1)^0,c
  2117   000BE2  0E00               	movlw	0
  2118   000BE4  6E19               	movwf	_NUM^0,c
  2119   000BE6                     
  2120                           ;main.c: 574:                           WriteSTLED316SData(NUM, vibration_mode);
  2121   000BE6  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2122   000BEA  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2123   000BEE  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2124   000BF2  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2125   000BF6  EF0A  F006         	goto	l5705
  2126   000BFA                     l5701:
  2127                           
  2128                           ;main.c: 578:                       {;main.c: 579:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  2129   000BFA  0E1A               	movlw	26
  2130   000BFC  0100               	movlb	0	; () banked
  2131   000BFE  6FA0               	movwf	??_main& (0+255),b
  2132   000C00  0EF8               	movlw	248
  2133   000C02                     u4347:
  2134   000C02  2EE8               	decfsz	wreg,f,c
  2135   000C04  D7FE               	bra	u4347
  2136   000C06  2FA0               	decfsz	??_main& (0+255),f,b
  2137   000C08  D7FC               	bra	u4347
  2138   000C0A  F000               	nop	
  2139   000C0C                     
  2140                           ;main.c: 580:                         holdTimeRight += 10;
  2141   000C0C  0E0A               	movlw	10
  2142   000C0E  2607               	addwf	_holdTimeRight^0,f,c
  2143   000C10  0E00               	movlw	0
  2144   000C12  2208               	addwfc	(_holdTimeRight+1)^0,f,c
  2145   000C14                     l5705:
  2146                           
  2147                           ;main.c: 577:                       while(PORTBbits.RB3 == 0 && holdTimeRight < 1000)
  2148   000C14  B681               	btfsc	129,3,c	;volatile
  2149   000C16  EF0F  F006         	goto	u4021
  2150   000C1A  EF11  F006         	goto	u4020
  2151   000C1E                     u4021:
  2152   000C1E  EF21  F006         	goto	l260
  2153   000C22                     u4020:
  2154   000C22  BE08               	btfsc	(_holdTimeRight+1)^0,7,c
  2155   000C24  EF1D  F006         	goto	u4031
  2156   000C28  0EE8               	movlw	232
  2157   000C2A  5C07               	subwf	_holdTimeRight^0,w,c
  2158   000C2C  0E03               	movlw	3
  2159   000C2E  5808               	subwfb	(_holdTimeRight+1)^0,w,c
  2160   000C30  A0D8               	btfss	status,0,c
  2161   000C32  EF1D  F006         	goto	u4031
  2162   000C36  EF1F  F006         	goto	u4030
  2163   000C3A                     u4031:
  2164   000C3A  EFFD  F005         	goto	l5701
  2165   000C3E                     u4030:
  2166   000C3E  EF27  F006         	goto	l5711
  2167   000C42                     l260:
  2168                           
  2169                           ;main.c: 583:                 }
  2170   000C42  EF27  F006         	goto	l5711
  2171   000C46                     l5709:
  2172                           
  2173                           ;main.c: 585:                   holdTimeRight = 0;
  2174   000C46  0E00               	movlw	0
  2175   000C48  6E08               	movwf	(_holdTimeRight+1)^0,c
  2176   000C4A  0E00               	movlw	0
  2177   000C4C  6E07               	movwf	_holdTimeRight^0,c
  2178   000C4E                     l5711:
  2179                           
  2180                           ;main.c: 588:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  2181   000C4E  BA80               	btfsc	128,5,c	;volatile
  2182   000C50  EF2C  F006         	goto	u4041
  2183   000C54  EF2E  F006         	goto	u4040
  2184   000C58                     u4041:
  2185   000C58  EFE2  F006         	goto	l5753
  2186   000C5C                     u4040:
  2187   000C5C  5019               	movf	_NUM^0,w,c
  2188   000C5E  101A               	iorwf	(_NUM+1)^0,w,c
  2189   000C60  B4D8               	btfsc	status,2,c
  2190   000C62  EF35  F006         	goto	u4051
  2191   000C66  EF37  F006         	goto	u4050
  2192   000C6A                     u4051:
  2193   000C6A  EFE2  F006         	goto	l5753
  2194   000C6E                     u4050:
  2195   000C6E                     
  2196                           ;main.c: 589:                     if(PORTAbits.RA5 == 0){
  2197   000C6E  BA80               	btfsc	128,5,c	;volatile
  2198   000C70  EF3C  F006         	goto	u4061
  2199   000C74  EF3E  F006         	goto	u4060
  2200   000C78                     u4061:
  2201   000C78  EFE6  F006         	goto	l5755
  2202   000C7C                     u4060:
  2203   000C7C                     
  2204                           ;main.c: 591:                       if (holdTimeLeft >= 1000 && NUM >= 10)
  2205   000C7C  BE06               	btfsc	(_holdTimeLeft+1)^0,7,c
  2206   000C7E  EF4A  F006         	goto	u4071
  2207   000C82  0EE8               	movlw	232
  2208   000C84  5C05               	subwf	_holdTimeLeft^0,w,c
  2209   000C86  0E03               	movlw	3
  2210   000C88  5806               	subwfb	(_holdTimeLeft+1)^0,w,c
  2211   000C8A  A0D8               	btfss	status,0,c
  2212   000C8C  EF4A  F006         	goto	u4071
  2213   000C90  EF4C  F006         	goto	u4070
  2214   000C94                     u4071:
  2215   000C94  EF74  F006         	goto	l5727
  2216   000C98                     u4070:
  2217   000C98  501A               	movf	(_NUM+1)^0,w,c
  2218   000C9A  E109               	bnz	u4080
  2219   000C9C  0E0A               	movlw	10
  2220   000C9E  5C19               	subwf	_NUM^0,w,c
  2221   000CA0  A0D8               	btfss	status,0,c
  2222   000CA2  EF55  F006         	goto	u4081
  2223   000CA6  EF57  F006         	goto	u4080
  2224   000CAA                     u4081:
  2225   000CAA  EF74  F006         	goto	l5727
  2226   000CAE                     u4080:
  2227   000CAE                     
  2228                           ;main.c: 592:                       {;main.c: 593:                         _delay((unsig
      +                          ned long)((500)*(8000000/4000.0)));
  2229   000CAE  0E06               	movlw	6
  2230   000CB0  0100               	movlb	0	; () banked
  2231   000CB2  6FA1               	movwf	(??_main+1)& (0+255),b
  2232   000CB4  0E13               	movlw	19
  2233   000CB6  6FA0               	movwf	??_main& (0+255),b
  2234   000CB8  0EAD               	movlw	173
  2235   000CBA                     u4357:
  2236   000CBA  2EE8               	decfsz	wreg,f,c
  2237   000CBC  D7FE               	bra	u4357
  2238   000CBE  2FA0               	decfsz	??_main& (0+255),f,b
  2239   000CC0  D7FC               	bra	u4357
  2240   000CC2  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2241   000CC4  D7FA               	bra	u4357
  2242   000CC6  D000               	nop2	
  2243   000CC8                     
  2244                           ;main.c: 594:                         NUM = NUM - 10;
  2245   000CC8  0EF6               	movlw	246
  2246   000CCA  2419               	addwf	_NUM^0,w,c
  2247   000CCC  6E19               	movwf	_NUM^0,c
  2248   000CCE  0EFF               	movlw	255
  2249   000CD0  201A               	addwfc	(_NUM+1)^0,w,c
  2250   000CD2  6E1A               	movwf	(_NUM+1)^0,c
  2251   000CD4                     
  2252                           ;main.c: 595:                         WriteSTLED316SData(NUM, vibration_mode);
  2253   000CD4  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2254   000CD8  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2255   000CDC  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2256   000CE0  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2257                           
  2258                           ;main.c: 596:                       }
  2259   000CE4  EFA0  F006         	goto	l5737
  2260   000CE8                     l5727:
  2261   000CE8  BE06               	btfsc	(_holdTimeLeft+1)^0,7,c
  2262   000CEA  EF82  F006         	goto	u4090
  2263   000CEE  0EE8               	movlw	232
  2264   000CF0  5C05               	subwf	_holdTimeLeft^0,w,c
  2265   000CF2  0E03               	movlw	3
  2266   000CF4  5806               	subwfb	(_holdTimeLeft+1)^0,w,c
  2267   000CF6  B0D8               	btfsc	status,0,c
  2268   000CF8  EF80  F006         	goto	u4091
  2269   000CFC  EF82  F006         	goto	u4090
  2270   000D00                     u4091:
  2271   000D00  EFA0  F006         	goto	l5737
  2272   000D04                     u4090:
  2273   000D04                     
  2274                           ;main.c: 598:                       {;main.c: 599:                         NUM = NUM - 1
      +                          ;
  2275   000D04  0EFF               	movlw	255
  2276   000D06  2419               	addwf	_NUM^0,w,c
  2277   000D08  6E19               	movwf	_NUM^0,c
  2278   000D0A  0EFF               	movlw	255
  2279   000D0C  201A               	addwfc	(_NUM+1)^0,w,c
  2280   000D0E  6E1A               	movwf	(_NUM+1)^0,c
  2281   000D10                     
  2282                           ;main.c: 600:                         WriteSTLED316SData(NUM, vibration_mode);
  2283   000D10  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2284   000D14  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2285   000D18  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2286   000D1C  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2287   000D20                     
  2288                           ;main.c: 602:                         _delay((unsigned long)((150)*(8000000/4000.0)));
  2289   000D20  0E02               	movlw	2
  2290   000D22  0100               	movlb	0	; () banked
  2291   000D24  6FA1               	movwf	(??_main+1)& (0+255),b
  2292   000D26  0E86               	movlw	134
  2293   000D28  6FA0               	movwf	??_main& (0+255),b
  2294   000D2A  0E99               	movlw	153
  2295   000D2C                     u4367:
  2296   000D2C  2EE8               	decfsz	wreg,f,c
  2297   000D2E  D7FE               	bra	u4367
  2298   000D30  2FA0               	decfsz	??_main& (0+255),f,b
  2299   000D32  D7FC               	bra	u4367
  2300   000D34  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2301   000D36  D7FA               	bra	u4367
  2302   000D38                     
  2303                           ;main.c: 603:                         holdTimeLeft = 0;
  2304   000D38  0E00               	movlw	0
  2305   000D3A  6E06               	movwf	(_holdTimeLeft+1)^0,c
  2306   000D3C  0E00               	movlw	0
  2307   000D3E  6E05               	movwf	_holdTimeLeft^0,c
  2308   000D40                     l5737:
  2309                           
  2310                           ;main.c: 607:                       if(PORTAbits.RA5 == 0 && PORTBbits.RB3 == 0)
  2311   000D40  BA80               	btfsc	128,5,c	;volatile
  2312   000D42  EFA5  F006         	goto	u4101
  2313   000D46  EFA7  F006         	goto	u4100
  2314   000D4A                     u4101:
  2315   000D4A  EFC9  F006         	goto	l5749
  2316   000D4E                     u4100:
  2317   000D4E  B681               	btfsc	129,3,c	;volatile
  2318   000D50  EFAC  F006         	goto	u4111
  2319   000D54  EFAE  F006         	goto	u4110
  2320   000D58                     u4111:
  2321   000D58  EFC9  F006         	goto	l5749
  2322   000D5C                     u4110:
  2323   000D5C                     
  2324                           ;main.c: 608:                       {;main.c: 609:                           NUM = 0;
  2325   000D5C  0E00               	movlw	0
  2326   000D5E  6E1A               	movwf	(_NUM+1)^0,c
  2327   000D60  0E00               	movlw	0
  2328   000D62  6E19               	movwf	_NUM^0,c
  2329   000D64                     
  2330                           ;main.c: 610:                           WriteSTLED316SData(NUM, vibration_mode);
  2331   000D64  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2332   000D68  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2333   000D6C  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2334   000D70  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2335   000D74  EFC9  F006         	goto	l5749
  2336   000D78                     l5745:
  2337                           
  2338                           ;main.c: 613:                       {;main.c: 614:                         _delay((unsig
      +                          ned long)((10)*(8000000/4000.0)));
  2339   000D78  0E1A               	movlw	26
  2340   000D7A  0100               	movlb	0	; () banked
  2341   000D7C  6FA0               	movwf	??_main& (0+255),b
  2342   000D7E  0EF8               	movlw	248
  2343   000D80                     u4377:
  2344   000D80  2EE8               	decfsz	wreg,f,c
  2345   000D82  D7FE               	bra	u4377
  2346   000D84  2FA0               	decfsz	??_main& (0+255),f,b
  2347   000D86  D7FC               	bra	u4377
  2348   000D88  F000               	nop	
  2349   000D8A                     
  2350                           ;main.c: 615:                         holdTimeLeft += 10;
  2351   000D8A  0E0A               	movlw	10
  2352   000D8C  2605               	addwf	_holdTimeLeft^0,f,c
  2353   000D8E  0E00               	movlw	0
  2354   000D90  2206               	addwfc	(_holdTimeLeft+1)^0,f,c
  2355   000D92                     l5749:
  2356                           
  2357                           ;main.c: 612:                       while(PORTAbits.RA5 == 0 && holdTimeLeft < 1000)
  2358   000D92  BA80               	btfsc	128,5,c	;volatile
  2359   000D94  EFCE  F006         	goto	u4121
  2360   000D98  EFD0  F006         	goto	u4120
  2361   000D9C                     u4121:
  2362   000D9C  EFE0  F006         	goto	l272
  2363   000DA0                     u4120:
  2364   000DA0  BE06               	btfsc	(_holdTimeLeft+1)^0,7,c
  2365   000DA2  EFDC  F006         	goto	u4131
  2366   000DA6  0EE8               	movlw	232
  2367   000DA8  5C05               	subwf	_holdTimeLeft^0,w,c
  2368   000DAA  0E03               	movlw	3
  2369   000DAC  5806               	subwfb	(_holdTimeLeft+1)^0,w,c
  2370   000DAE  A0D8               	btfss	status,0,c
  2371   000DB0  EFDC  F006         	goto	u4131
  2372   000DB4  EFDE  F006         	goto	u4130
  2373   000DB8                     u4131:
  2374   000DB8  EFBC  F006         	goto	l5745
  2375   000DBC                     u4130:
  2376   000DBC  EFE6  F006         	goto	l5755
  2377   000DC0                     l272:
  2378                           
  2379                           ;main.c: 618:                 }
  2380   000DC0  EFE6  F006         	goto	l5755
  2381   000DC4                     l5753:
  2382                           
  2383                           ;main.c: 620:                   holdTimeLeft = 0;
  2384   000DC4  0E00               	movlw	0
  2385   000DC6  6E06               	movwf	(_holdTimeLeft+1)^0,c
  2386   000DC8  0E00               	movlw	0
  2387   000DCA  6E05               	movwf	_holdTimeLeft^0,c
  2388   000DCC                     l5755:
  2389                           
  2390                           ;main.c: 633:                 NUM_REC = NUM;
  2391   000DCC  C019  F015         	movff	_NUM,_NUM_REC
  2392   000DD0  C01A  F016         	movff	_NUM+1,_NUM_REC+1
  2393   000DD4                     
  2394                           ;main.c: 634:                 WriteSTLED316SData(NUM, vibration_mode);
  2395   000DD4  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2396   000DD8  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2397   000DDC  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2398   000DE0  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2399   000DE4                     
  2400                           ;main.c: 637:                 if(dispense == 1)
  2401   000DE4  0409               	decf	_dispense^0,w,c
  2402   000DE6  100A               	iorwf	(_dispense+1)^0,w,c
  2403   000DE8  A4D8               	btfss	status,2,c
  2404   000DEA  EFF9  F006         	goto	u4141
  2405   000DEE  EFFB  F006         	goto	u4140
  2406   000DF2                     u4141:
  2407   000DF2  EF0B  F007         	goto	l5769
  2408   000DF6                     u4140:
  2409   000DF6                     
  2410                           ;main.c: 638:                 {;main.c: 639:                     Busy = 1;
  2411   000DF6  0E01               	movlw	1
  2412   000DF8  6E2F               	movwf	_Busy^0,c
  2413                           
  2414                           ;main.c: 640:                     errorcounter = 30;
  2415   000DFA  0E1E               	movlw	30
  2416   000DFC  6E50               	movwf	_errorcounter^0,c	;volatile
  2417   000DFE  0E00               	movlw	0
  2418   000E00  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  2419   000E02  0E00               	movlw	0
  2420   000E04  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  2421   000E06  0E00               	movlw	0
  2422   000E08  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  2423   000E0A                     
  2424                           ;main.c: 641:                     Homing_Again_Manual();
  2425   000E0A  EC52  F009         	call	_Homing_Again_Manual	;wreg free
  2426   000E0E                     
  2427                           ;main.c: 642:                     Stop = 0;
  2428   000E0E  0E00               	movlw	0
  2429   000E10  6E31               	movwf	_Stop^0,c
  2430   000E12                     
  2431                           ;main.c: 643:                     Busy = 0;
  2432   000E12  0E00               	movlw	0
  2433   000E14  6E2F               	movwf	_Busy^0,c
  2434   000E16                     l5769:
  2435                           
  2436                           ;main.c: 657:                 if (Serial_Flag == 1) {
  2437   000E16  0433               	decf	_Serial_Flag^0,w,c
  2438   000E18  A4D8               	btfss	status,2,c
  2439   000E1A  EF11  F007         	goto	u4151
  2440   000E1E  EF13  F007         	goto	u4150
  2441   000E22                     u4151:
  2442   000E22  EF36  F009         	goto	l5937
  2443   000E26                     u4150:
  2444   000E26  EF0C  F009         	goto	l5933
  2445   000E2A                     l5773:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;main.c: 662:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  2449   000E2A  0EF1               	movlw	241
  2450   000E2C  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2451   000E2E  A4D8               	btfss	status,2,c
  2452   000E30  EF1C  F007         	goto	u4161
  2453   000E34  EF1E  F007         	goto	u4160
  2454   000E38                     u4161:
  2455   000E38  EF3A  F007         	goto	l5783
  2456   000E3C                     u4160:
  2457   000E3C                     
  2458                           ; BSR set to: 0
  2459   000E3C  502F               	movf	_Busy^0,w,c
  2460   000E3E  A4D8               	btfss	status,2,c
  2461   000E40  EF24  F007         	goto	u4171
  2462   000E44  EF26  F007         	goto	u4170
  2463   000E48                     u4171:
  2464   000E48  EF3A  F007         	goto	l5783
  2465   000E4C                     u4170:
  2466   000E4C                     
  2467                           ; BSR set to: 0
  2468                           ;main.c: 663:                             {;main.c: 664:                                
      +                           Stop = 0;
  2469   000E4C  0E00               	movlw	0
  2470   000E4E  6E31               	movwf	_Stop^0,c
  2471                           
  2472                           ;main.c: 665:                                 Busy = 1;
  2473   000E50  0E01               	movlw	1
  2474   000E52  6E2F               	movwf	_Busy^0,c
  2475   000E54                     
  2476                           ; BSR set to: 0
  2477                           ;main.c: 666:                                 NUM = NUM_REC;
  2478   000E54  C015  F019         	movff	_NUM_REC,_NUM
  2479   000E58  C016  F01A         	movff	_NUM_REC+1,_NUM+1
  2480                           
  2481                           ;main.c: 668:                                 errorcounter = 30;
  2482   000E5C  0E1E               	movlw	30
  2483   000E5E  6E50               	movwf	_errorcounter^0,c	;volatile
  2484   000E60  0E00               	movlw	0
  2485   000E62  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  2486   000E64  0E00               	movlw	0
  2487   000E66  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  2488   000E68  0E00               	movlw	0
  2489   000E6A  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  2490   000E6C                     
  2491                           ; BSR set to: 0
  2492                           ;main.c: 669:                                 Homing_Again_Auto();
  2493   000E6C  EC3A  F00B         	call	_Homing_Again_Auto	;wreg free
  2494                           
  2495                           ;main.c: 671:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  2496   000E70  EF98  F007         	goto	l5813
  2497   000E74                     l5783:
  2498                           
  2499                           ; BSR set to: 0
  2500   000E74  0EF2               	movlw	242
  2501   000E76  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  2502   000E78  A4D8               	btfss	status,2,c
  2503   000E7A  EF41  F007         	goto	u4181
  2504   000E7E  EF43  F007         	goto	u4180
  2505   000E82                     u4181:
  2506   000E82  EF98  F007         	goto	l5813
  2507   000E86                     u4180:
  2508   000E86                     
  2509                           ; BSR set to: 0
  2510   000E86  502F               	movf	_Busy^0,w,c
  2511   000E88  A4D8               	btfss	status,2,c
  2512   000E8A  EF49  F007         	goto	u4191
  2513   000E8E  EF4B  F007         	goto	u4190
  2514   000E92                     u4191:
  2515   000E92  EF98  F007         	goto	l5813
  2516   000E96                     u4190:
  2517   000E96                     
  2518                           ; BSR set to: 0
  2519                           ;main.c: 672:                             {;main.c: 673:                                
      +                           Stop = 0;
  2520   000E96  0E00               	movlw	0
  2521   000E98  6E31               	movwf	_Stop^0,c
  2522                           
  2523                           ;main.c: 674:                                 Busy = 1;
  2524   000E9A  0E01               	movlw	1
  2525   000E9C  6E2F               	movwf	_Busy^0,c
  2526   000E9E                     
  2527                           ; BSR set to: 0
  2528                           ;main.c: 675:                                 NUM = NUM_REC;
  2529   000E9E  C015  F019         	movff	_NUM_REC,_NUM
  2530   000EA2  C016  F01A         	movff	_NUM_REC+1,_NUM+1
  2531   000EA6                     
  2532                           ; BSR set to: 0
  2533                           ;main.c: 676:                                 WriteSTLED316SData(NUM, vibration_mode);
  2534   000EA6  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  2535   000EAA  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  2536   000EAE  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  2537   000EB2  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  2538   000EB6                     
  2539                           ;main.c: 678:                                 errorcounter = 30;
  2540   000EB6  0E1E               	movlw	30
  2541   000EB8  6E50               	movwf	_errorcounter^0,c	;volatile
  2542   000EBA  0E00               	movlw	0
  2543   000EBC  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  2544   000EBE  0E00               	movlw	0
  2545   000EC0  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  2546   000EC2  0E00               	movlw	0
  2547   000EC4  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  2548   000EC6                     
  2549                           ;main.c: 679:                                 Homing_Again_Manual();
  2550   000EC6  EC52  F009         	call	_Homing_Again_Manual	;wreg free
  2551   000ECA                     
  2552                           ;main.c: 682:                                 if (Stop == 0) {
  2553   000ECA  5031               	movf	_Stop^0,w,c
  2554   000ECC  A4D8               	btfss	status,2,c
  2555   000ECE  EF6B  F007         	goto	u4201
  2556   000ED2  EF6D  F007         	goto	u4200
  2557   000ED6                     u4201:
  2558   000ED6  EF98  F007         	goto	l5813
  2559   000EDA                     u4200:
  2560   000EDA                     
  2561                           ;main.c: 683:                                     Serial_Buffer_Out[0] = 0xA5;
  2562   000EDA  0EA5               	movlw	165
  2563   000EDC  0100               	movlb	0	; () banked
  2564   000EDE  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2565                           
  2566                           ;main.c: 684:                                     Serial_Buffer_Out[1] = 0x44;
  2567   000EE0  0E44               	movlw	68
  2568   000EE2  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  2569                           
  2570                           ;main.c: 685:                                     Serial_Buffer_Out[2] = 0xF9;
  2571   000EE4  0EF9               	movlw	249
  2572   000EE6  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  2573                           
  2574                           ;main.c: 686:                                     Serial_Buffer_Out[3] = 0X3D;
  2575   000EE8  0E3D               	movlw	61
  2576   000EEA  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  2577                           
  2578                           ;main.c: 687:                                     Serial_Buffer_Out[4] = 0x5A;
  2579   000EEC  0E5A               	movlw	90
  2580   000EEE  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  2581   000EF0                     
  2582                           ; BSR set to: 0
  2583                           ;main.c: 689:                                     INTCONbits.GIE = 0;
  2584   000EF0  9EF2               	bcf	242,7,c	;volatile
  2585                           
  2586                           ;main.c: 690:                                     for (i = 0; i < 5; i++) {
  2587   000EF2  0E00               	movlw	0
  2588   000EF4  6E14               	movwf	(_i+1)^0,c
  2589   000EF6  0E00               	movlw	0
  2590   000EF8  6E13               	movwf	_i^0,c
  2591   000EFA                     l5803:
  2592   000EFA  5014               	movf	(_i+1)^0,w,c
  2593   000EFC  E109               	bnz	u4210
  2594   000EFE  0E05               	movlw	5
  2595   000F00  5C13               	subwf	_i^0,w,c
  2596   000F02  A0D8               	btfss	status,0,c
  2597   000F04  EF86  F007         	goto	u4211
  2598   000F08  EF88  F007         	goto	u4210
  2599   000F0C                     u4211:
  2600   000F0C  EF8A  F007         	goto	l5807
  2601   000F10                     u4210:
  2602   000F10  EF97  F007         	goto	l293
  2603   000F14                     l5807:
  2604                           
  2605                           ;main.c: 691:                                         Write1USART(Serial_Buffer_Out[i]);
  2606   000F14  0E60               	movlw	low _Serial_Buffer_Out
  2607   000F16  2413               	addwf	_i^0,w,c
  2608   000F18  6ED9               	movwf	fsr2l,c
  2609   000F1A  0E00               	movlw	high _Serial_Buffer_Out
  2610   000F1C  2014               	addwfc	(_i+1)^0,w,c
  2611   000F1E  6EDA               	movwf	fsr2h,c
  2612   000F20  50DF               	movf	indf2,w,c
  2613   000F22  EC9E  F013         	call	_Write1USART
  2614   000F26                     
  2615                           ;main.c: 692:                                     }
  2616   000F26  4A13               	infsnz	_i^0,f,c
  2617   000F28  2A14               	incf	(_i+1)^0,f,c
  2618   000F2A  EF7D  F007         	goto	l5803
  2619   000F2E                     l293:
  2620                           
  2621                           ;main.c: 693:                                     INTCONbits.GIE = 1;
  2622   000F2E  8EF2               	bsf	242,7,c	;volatile
  2623   000F30                     l5813:
  2624                           
  2625                           ;main.c: 697:                             flush();
  2626   000F30  EC9F  F012         	call	_flush	;wreg free
  2627                           
  2628                           ;main.c: 698:                             flushOut();
  2629   000F34  ECBC  F012         	call	_flushOut	;wreg free
  2630   000F38                     
  2631                           ;main.c: 699:                             Stop = 0;
  2632   000F38  0E00               	movlw	0
  2633   000F3A  6E31               	movwf	_Stop^0,c
  2634   000F3C                     l5817:
  2635                           
  2636                           ;main.c: 700:                             Busy = 0;
  2637   000F3C  0E00               	movlw	0
  2638   000F3E  6E2F               	movwf	_Busy^0,c
  2639                           
  2640                           ;main.c: 701:                             break;
  2641   000F40  EF2E  F009         	goto	l5935
  2642   000F44                     l5819:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;main.c: 706:                             if (Busy == 0) {
  2646   000F44  502F               	movf	_Busy^0,w,c
  2647   000F46  A4D8               	btfss	status,2,c
  2648   000F48  EFA8  F007         	goto	u4221
  2649   000F4C  EFAA  F007         	goto	u4220
  2650   000F50                     u4221:
  2651   000F50  EF2E  F009         	goto	l5935
  2652   000F54                     u4220:
  2653   000F54                     
  2654                           ; BSR set to: 0
  2655                           ;main.c: 707:                                 Busy = 1;
  2656   000F54  0E01               	movlw	1
  2657   000F56  6E2F               	movwf	_Busy^0,c
  2658   000F58                     
  2659                           ; BSR set to: 0
  2660                           ;main.c: 711:                                 pause_Time = Serial_Buffer[2];
  2661   000F58  C082  F02B         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  2662                           
  2663                           ;main.c: 712:                                 switch (pause_Time) {
  2664   000F5C  EFD6  F007         	goto	l5839
  2665   000F60                     l5825:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;main.c: 715:                                         Motor_Pause_Time = 0;
  2669   000F60  0E00               	movlw	0
  2670   000F62  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2671   000F64  0E00               	movlw	0
  2672   000F66  6E1B               	movwf	_Motor_Pause_Time^0,c
  2673                           
  2674                           ;main.c: 716:                                         pause_Time = 0x30;
  2675   000F68  0E30               	movlw	48
  2676   000F6A  6E2B               	movwf	_pause_Time^0,c	;volatile
  2677                           
  2678                           ;main.c: 717:                                         break;
  2679   000F6C  EFFB  F007         	goto	l300
  2680   000F70                     l5827:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 720:                                         Motor_Pause_Time = 1000;
  2684   000F70  0E03               	movlw	3
  2685   000F72  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2686   000F74  0EE8               	movlw	232
  2687   000F76  6E1B               	movwf	_Motor_Pause_Time^0,c
  2688                           
  2689                           ;main.c: 721:                                         break;
  2690   000F78  EFFB  F007         	goto	l300
  2691   000F7C                     l5829:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;main.c: 724:                                         Motor_Pause_Time = 2000;
  2695   000F7C  0E07               	movlw	7
  2696   000F7E  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2697   000F80  0ED0               	movlw	208
  2698   000F82  6E1B               	movwf	_Motor_Pause_Time^0,c
  2699                           
  2700                           ;main.c: 725:                                         break;
  2701   000F84  EFFB  F007         	goto	l300
  2702   000F88                     l5831:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;main.c: 728:                                         Motor_Pause_Time = 3000;
  2706   000F88  0E0B               	movlw	11
  2707   000F8A  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2708   000F8C  0EB8               	movlw	184
  2709   000F8E  6E1B               	movwf	_Motor_Pause_Time^0,c
  2710                           
  2711                           ;main.c: 729:                                         break;
  2712   000F90  EFFB  F007         	goto	l300
  2713   000F94                     l5833:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;main.c: 732:                                         Motor_Pause_Time = 4000;
  2717   000F94  0E0F               	movlw	15
  2718   000F96  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2719   000F98  0EA0               	movlw	160
  2720   000F9A  6E1B               	movwf	_Motor_Pause_Time^0,c
  2721                           
  2722                           ;main.c: 733:                                         break;
  2723   000F9C  EFFB  F007         	goto	l300
  2724   000FA0                     l5835:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;main.c: 736:                                         Motor_Pause_Time = 5000;
  2728   000FA0  0E13               	movlw	19
  2729   000FA2  6E1C               	movwf	(_Motor_Pause_Time+1)^0,c
  2730   000FA4  0E88               	movlw	136
  2731   000FA6  6E1B               	movwf	_Motor_Pause_Time^0,c
  2732                           
  2733                           ;main.c: 737:                                         break;
  2734   000FA8  EFFB  F007         	goto	l300
  2735   000FAC                     l5839:
  2736                           
  2737                           ; BSR set to: 0
  2738   000FAC  502B               	movf	_pause_Time^0,w,c	;volatile
  2739   000FAE  6FA0               	movwf	??_main& (0+255),b
  2740   000FB0  6BA1               	clrf	(??_main+1)& (0+255),b
  2741                           
  2742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2743                           ; Switch size 1, requested type "simple"
  2744                           ; Number of cases is 1, Range of values is 0 to 0
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte            4     3 (average)
  2748                           ;	Chosen strategy is simple_byte
  2749   000FB2  51A1               	movf	(??_main+1)& (0+255),w,b
  2750   000FB4  0A00               	xorlw	0	; case 0
  2751   000FB6  B4D8               	btfsc	status,2,c
  2752   000FB8  EFE0  F007         	goto	l6279
  2753   000FBC  EFB0  F007         	goto	l5825
  2754   000FC0                     l6279:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 6, Range of values is 48 to 53
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte           19    10 (average)
  2762                           ;	Chosen strategy is simple_byte
  2763   000FC0  51A0               	movf	??_main& (0+255),w,b
  2764   000FC2  0A30               	xorlw	48	; case 48
  2765   000FC4  B4D8               	btfsc	status,2,c
  2766   000FC6  EFB0  F007         	goto	l5825
  2767   000FCA  0A01               	xorlw	1	; case 49
  2768   000FCC  B4D8               	btfsc	status,2,c
  2769   000FCE  EFB8  F007         	goto	l5827
  2770   000FD2  0A03               	xorlw	3	; case 50
  2771   000FD4  B4D8               	btfsc	status,2,c
  2772   000FD6  EFBE  F007         	goto	l5829
  2773   000FDA  0A01               	xorlw	1	; case 51
  2774   000FDC  B4D8               	btfsc	status,2,c
  2775   000FDE  EFC4  F007         	goto	l5831
  2776   000FE2  0A07               	xorlw	7	; case 52
  2777   000FE4  B4D8               	btfsc	status,2,c
  2778   000FE6  EFCA  F007         	goto	l5833
  2779   000FEA  0A01               	xorlw	1	; case 53
  2780   000FEC  B4D8               	btfsc	status,2,c
  2781   000FEE  EFD0  F007         	goto	l5835
  2782   000FF2  EFB0  F007         	goto	l5825
  2783   000FF6                     l300:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;main.c: 742:                                 INTCONbits.GIE = 0;
  2787   000FF6  9EF2               	bcf	242,7,c	;volatile
  2788   000FF8                     
  2789                           ; BSR set to: 0
  2790                           ;main.c: 743:                                 write_i2c(0x0060, pause_Time);
  2791   000FF8  0E60               	movlw	96
  2792   000FFA  6E4A               	movwf	write_i2c@address^0,c
  2793   000FFC  0E00               	movlw	0
  2794   000FFE  6E4B               	movwf	(write_i2c@address+1)^0,c
  2795   001000  0E00               	movlw	0
  2796   001002  6E4C               	movwf	(write_i2c@address+2)^0,c
  2797   001004  0E00               	movlw	0
  2798   001006  6E4D               	movwf	(write_i2c@address+3)^0,c
  2799   001008  C02B  F04E         	movff	_pause_Time,write_i2c@data	;volatile
  2800   00100C  6A4F               	clrf	(write_i2c@data+1)^0,c
  2801   00100E  EC3C  F012         	call	_write_i2c	;wreg free
  2802   001012                     
  2803                           ;main.c: 744:                                 INTCONbits.GIE = 1;
  2804   001012  8EF2               	bsf	242,7,c	;volatile
  2805   001014                     
  2806                           ;main.c: 746:                                 flush();
  2807   001014  EC9F  F012         	call	_flush	;wreg free
  2808   001018  EF9E  F007         	goto	l5817
  2809   00101C                     l5849:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;main.c: 754:                             if (Busy == 0) {
  2813   00101C  502F               	movf	_Busy^0,w,c
  2814   00101E  A4D8               	btfss	status,2,c
  2815   001020  EF14  F008         	goto	u4231
  2816   001024  EF16  F008         	goto	u4230
  2817   001028                     u4231:
  2818   001028  EF2E  F009         	goto	l5935
  2819   00102C                     u4230:
  2820   00102C                     
  2821                           ; BSR set to: 0
  2822                           ;main.c: 755:                                 if (Serial_Buffer[2] == 0x00) {
  2823   00102C  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  2824   00102E  A4D8               	btfss	status,2,c
  2825   001030  EF1C  F008         	goto	u4241
  2826   001034  EF1E  F008         	goto	u4240
  2827   001038                     u4241:
  2828   001038  EF88  F008         	goto	l5885
  2829   00103C                     u4240:
  2830   00103C                     
  2831                           ; BSR set to: 0
  2832                           ;main.c: 756:                                     Busy = 1;
  2833   00103C  0E01               	movlw	1
  2834   00103E  6E2F               	movwf	_Busy^0,c
  2835   001040                     
  2836                           ; BSR set to: 0
  2837                           ;main.c: 759:                                     pause_Time = read_i2c(0x0060);
  2838   001040  0E60               	movlw	96
  2839   001042  6E4A               	movwf	read_i2c@address^0,c
  2840   001044  0E00               	movlw	0
  2841   001046  6E4B               	movwf	(read_i2c@address+1)^0,c
  2842   001048  0E00               	movlw	0
  2843   00104A  6E4C               	movwf	(read_i2c@address+2)^0,c
  2844   00104C  0E00               	movlw	0
  2845   00104E  6E4D               	movwf	(read_i2c@address+3)^0,c
  2846   001050  ECA8  F011         	call	_read_i2c	;wreg free
  2847   001054  504A               	movf	?_read_i2c^0,w,c
  2848   001056  6E2B               	movwf	_pause_Time^0,c	;volatile
  2849   001058                     
  2850                           ;main.c: 760:                                     vib_Time = read_i2c(0x0040);
  2851   001058  0E40               	movlw	64
  2852   00105A  6E4A               	movwf	read_i2c@address^0,c
  2853   00105C  0E00               	movlw	0
  2854   00105E  6E4B               	movwf	(read_i2c@address+1)^0,c
  2855   001060  0E00               	movlw	0
  2856   001062  6E4C               	movwf	(read_i2c@address+2)^0,c
  2857   001064  0E00               	movlw	0
  2858   001066  6E4D               	movwf	(read_i2c@address+3)^0,c
  2859   001068  ECA8  F011         	call	_read_i2c	;wreg free
  2860   00106C  504A               	movf	?_read_i2c^0,w,c
  2861   00106E  6E2A               	movwf	_vib_Time^0,c	;volatile
  2862   001070                     
  2863                           ;main.c: 761:                                     Motor_Speed = read_i2c(0x0030);
  2864   001070  0E30               	movlw	48
  2865   001072  6E4A               	movwf	read_i2c@address^0,c
  2866   001074  0E00               	movlw	0
  2867   001076  6E4B               	movwf	(read_i2c@address+1)^0,c
  2868   001078  0E00               	movlw	0
  2869   00107A  6E4C               	movwf	(read_i2c@address+2)^0,c
  2870   00107C  0E00               	movlw	0
  2871   00107E  6E4D               	movwf	(read_i2c@address+3)^0,c
  2872   001080  ECA8  F011         	call	_read_i2c	;wreg free
  2873   001084  C04A  F021         	movff	?_read_i2c,_Motor_Speed
  2874   001088  C04B  F022         	movff	?_read_i2c+1,_Motor_Speed+1
  2875   00108C                     
  2876                           ;main.c: 762:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  2877   00108C  0E50               	movlw	80
  2878   00108E  6E4A               	movwf	read_i2c@address^0,c
  2879   001090  0E00               	movlw	0
  2880   001092  6E4B               	movwf	(read_i2c@address+1)^0,c
  2881   001094  0E00               	movlw	0
  2882   001096  6E4C               	movwf	(read_i2c@address+2)^0,c
  2883   001098  0E00               	movlw	0
  2884   00109A  6E4D               	movwf	(read_i2c@address+3)^0,c
  2885   00109C  ECA8  F011         	call	_read_i2c	;wreg free
  2886   0010A0  504A               	movf	?_read_i2c^0,w,c
  2887   0010A2  6E29               	movwf	_delay_motor_stop_time^0,c	;volatile
  2888                           
  2889                           ;main.c: 765:                                     Serial_Buffer_Out[0] = 0x51;
  2890   0010A4  0E51               	movlw	81
  2891   0010A6  0100               	movlb	0	; () banked
  2892   0010A8  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  2893   0010AA                     
  2894                           ; BSR set to: 0
  2895                           ;main.c: 766:                                     Serial_Buffer_Out[1] = pause_Time;
  2896   0010AA  C02B  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  2897   0010AE                     
  2898                           ; BSR set to: 0
  2899                           ;main.c: 767:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2900   0010AE  C021  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2901   0010B2                     
  2902                           ; BSR set to: 0
  2903                           ;main.c: 768:                                     Serial_Buffer_Out[3] = vib_Time;
  2904   0010B2  C02A  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2905   0010B6                     
  2906                           ; BSR set to: 0
  2907                           ;main.c: 769:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2908   0010B6  C029  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2909   0010BA                     
  2910                           ; BSR set to: 0
  2911                           ;main.c: 771:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2912   0010BA  0E02               	movlw	2
  2913   0010BC  0100               	movlb	0	; () banked
  2914   0010BE  6FA1               	movwf	(??_main+1)& (0+255),b
  2915   0010C0  0E04               	movlw	4
  2916   0010C2  6FA0               	movwf	??_main& (0+255),b
  2917   0010C4  0EBA               	movlw	186
  2918   0010C6                     u4387:
  2919   0010C6  2EE8               	decfsz	wreg,f,c
  2920   0010C8  D7FE               	bra	u4387
  2921   0010CA  2FA0               	decfsz	??_main& (0+255),f,b
  2922   0010CC  D7FC               	bra	u4387
  2923   0010CE  2FA1               	decfsz	(??_main+1)& (0+255),f,b
  2924   0010D0  D7FA               	bra	u4387
  2925   0010D2  F000               	nop	
  2926   0010D4                     
  2927                           ;main.c: 774:                                     for (i = 0; i < 5; i++) {
  2928   0010D4  0E00               	movlw	0
  2929   0010D6  6E14               	movwf	(_i+1)^0,c
  2930   0010D8  0E00               	movlw	0
  2931   0010DA  6E13               	movwf	_i^0,c
  2932   0010DC                     l5875:
  2933   0010DC  5014               	movf	(_i+1)^0,w,c
  2934   0010DE  E109               	bnz	u4250
  2935   0010E0  0E05               	movlw	5
  2936   0010E2  5C13               	subwf	_i^0,w,c
  2937   0010E4  A0D8               	btfss	status,0,c
  2938   0010E6  EF77  F008         	goto	u4251
  2939   0010EA  EF79  F008         	goto	u4250
  2940   0010EE                     u4251:
  2941   0010EE  EF7B  F008         	goto	l5879
  2942   0010F2                     u4250:
  2943   0010F2  EF88  F008         	goto	l5885
  2944   0010F6                     l5879:
  2945                           
  2946                           ;main.c: 775:                                         Write1USART(Serial_Buffer_Out[i]);
  2947   0010F6  0E60               	movlw	low _Serial_Buffer_Out
  2948   0010F8  2413               	addwf	_i^0,w,c
  2949   0010FA  6ED9               	movwf	fsr2l,c
  2950   0010FC  0E00               	movlw	high _Serial_Buffer_Out
  2951   0010FE  2014               	addwfc	(_i+1)^0,w,c
  2952   001100  6EDA               	movwf	fsr2h,c
  2953   001102  50DF               	movf	indf2,w,c
  2954   001104  EC9E  F013         	call	_Write1USART
  2955   001108                     
  2956                           ;main.c: 776:                                     }
  2957   001108  4A13               	infsnz	_i^0,f,c
  2958   00110A  2A14               	incf	(_i+1)^0,f,c
  2959   00110C  EF6E  F008         	goto	l5875
  2960   001110                     l5885:
  2961                           
  2962                           ;main.c: 779:                                 flushOut();
  2963   001110  ECBC  F012         	call	_flushOut	;wreg free
  2964   001114  EF9E  F007         	goto	l5817
  2965   001118                     l5889:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;main.c: 816:                             if (Busy == 0) {
  2969   001118  502F               	movf	_Busy^0,w,c
  2970   00111A  A4D8               	btfss	status,2,c
  2971   00111C  EF92  F008         	goto	u4261
  2972   001120  EF94  F008         	goto	u4260
  2973   001124                     u4261:
  2974   001124  EFEC  F008         	goto	l5915
  2975   001128                     u4260:
  2976   001128                     
  2977                           ; BSR set to: 0
  2978                           ;main.c: 817:                                 Busy = 1;
  2979   001128  0E01               	movlw	1
  2980   00112A  6E2F               	movwf	_Busy^0,c
  2981   00112C                     
  2982                           ; BSR set to: 0
  2983                           ;main.c: 818:                                 vib_Time = Serial_Buffer[2];
  2984   00112C  C082  F02A         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2985                           
  2986                           ;main.c: 820:                                 switch (vib_Time) {
  2987   001130  EFBA  F008         	goto	l5907
  2988   001134                     l5895:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;main.c: 822:                                         Vmotor_Time = 1000;
  2992   001134  0E03               	movlw	3
  2993   001136  6E55               	movwf	(_Vmotor_Time+1)^0,c
  2994   001138  0EE8               	movlw	232
  2995   00113A  6E54               	movwf	_Vmotor_Time^0,c
  2996                           
  2997                           ;main.c: 823:                                         break;
  2998   00113C  EFDB  F008         	goto	l315
  2999   001140                     l5897:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;main.c: 827:                                         Vmotor_Time = 2000;
  3003   001140  0E07               	movlw	7
  3004   001142  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3005   001144  0ED0               	movlw	208
  3006   001146  6E54               	movwf	_Vmotor_Time^0,c
  3007                           
  3008                           ;main.c: 828:                                         vib_Time = 0x82;
  3009   001148  0E82               	movlw	130
  3010   00114A  6E2A               	movwf	_vib_Time^0,c	;volatile
  3011                           
  3012                           ;main.c: 829:                                         break;
  3013   00114C  EFDB  F008         	goto	l315
  3014   001150                     l5899:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 832:                                         Vmotor_Time = 3000;
  3018   001150  0E0B               	movlw	11
  3019   001152  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3020   001154  0EB8               	movlw	184
  3021   001156  6E54               	movwf	_Vmotor_Time^0,c
  3022                           
  3023                           ;main.c: 833:                                         break;
  3024   001158  EFDB  F008         	goto	l315
  3025   00115C                     l5901:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;main.c: 836:                                         Vmotor_Time = 4000;
  3029   00115C  0E0F               	movlw	15
  3030   00115E  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3031   001160  0EA0               	movlw	160
  3032   001162  6E54               	movwf	_Vmotor_Time^0,c
  3033                           
  3034                           ;main.c: 837:                                         break;
  3035   001164  EFDB  F008         	goto	l315
  3036   001168                     l5903:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;main.c: 840:                                         Vmotor_Time = 5000;
  3040   001168  0E13               	movlw	19
  3041   00116A  6E55               	movwf	(_Vmotor_Time+1)^0,c
  3042   00116C  0E88               	movlw	136
  3043   00116E  6E54               	movwf	_Vmotor_Time^0,c
  3044                           
  3045                           ;main.c: 841:                                         break;
  3046   001170  EFDB  F008         	goto	l315
  3047   001174                     l5907:
  3048                           
  3049                           ; BSR set to: 0
  3050   001174  502A               	movf	_vib_Time^0,w,c	;volatile
  3051   001176  6FA0               	movwf	??_main& (0+255),b
  3052   001178  6BA1               	clrf	(??_main+1)& (0+255),b
  3053                           
  3054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3055                           ; Switch size 1, requested type "simple"
  3056                           ; Number of cases is 1, Range of values is 0 to 0
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            4     3 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061   00117A  51A1               	movf	(??_main+1)& (0+255),w,b
  3062   00117C  0A00               	xorlw	0	; case 0
  3063   00117E  B4D8               	btfsc	status,2,c
  3064   001180  EFC4  F008         	goto	l6281
  3065   001184  EFA0  F008         	goto	l5897
  3066   001188                     l6281:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ; Switch size 1, requested type "simple"
  3070                           ; Number of cases is 5, Range of values is 129 to 133
  3071                           ; switch strategies available:
  3072                           ; Name         Instructions Cycles
  3073                           ; simple_byte           16     9 (average)
  3074                           ;	Chosen strategy is simple_byte
  3075   001188  51A0               	movf	??_main& (0+255),w,b
  3076   00118A  0A81               	xorlw	129	; case 129
  3077   00118C  B4D8               	btfsc	status,2,c
  3078   00118E  EF9A  F008         	goto	l5895
  3079   001192  0A03               	xorlw	3	; case 130
  3080   001194  B4D8               	btfsc	status,2,c
  3081   001196  EFA0  F008         	goto	l5897
  3082   00119A  0A01               	xorlw	1	; case 131
  3083   00119C  B4D8               	btfsc	status,2,c
  3084   00119E  EFA8  F008         	goto	l5899
  3085   0011A2  0A07               	xorlw	7	; case 132
  3086   0011A4  B4D8               	btfsc	status,2,c
  3087   0011A6  EFAE  F008         	goto	l5901
  3088   0011AA  0A01               	xorlw	1	; case 133
  3089   0011AC  B4D8               	btfsc	status,2,c
  3090   0011AE  EFB4  F008         	goto	l5903
  3091   0011B2  EFA0  F008         	goto	l5897
  3092   0011B6                     l315:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;main.c: 843:                                 INTCONbits.GIE = 0;
  3096   0011B6  9EF2               	bcf	242,7,c	;volatile
  3097   0011B8                     
  3098                           ; BSR set to: 0
  3099                           ;main.c: 844:                                 write_i2c(0x0040, vib_Time);
  3100   0011B8  0E40               	movlw	64
  3101   0011BA  6E4A               	movwf	write_i2c@address^0,c
  3102   0011BC  0E00               	movlw	0
  3103   0011BE  6E4B               	movwf	(write_i2c@address+1)^0,c
  3104   0011C0  0E00               	movlw	0
  3105   0011C2  6E4C               	movwf	(write_i2c@address+2)^0,c
  3106   0011C4  0E00               	movlw	0
  3107   0011C6  6E4D               	movwf	(write_i2c@address+3)^0,c
  3108   0011C8  C02A  F04E         	movff	_vib_Time,write_i2c@data	;volatile
  3109   0011CC  6A4F               	clrf	(write_i2c@data+1)^0,c
  3110   0011CE  EC3C  F012         	call	_write_i2c	;wreg free
  3111   0011D2                     
  3112                           ;main.c: 845:                                 INTCONbits.GIE = 1;
  3113   0011D2  8EF2               	bsf	242,7,c	;volatile
  3114   0011D4                     
  3115                           ;main.c: 847:                                 Busy = 0;
  3116   0011D4  0E00               	movlw	0
  3117   0011D6  6E2F               	movwf	_Busy^0,c
  3118   0011D8                     l5915:
  3119                           
  3120                           ;main.c: 852:                             if (Busy == 0) {
  3121   0011D8  502F               	movf	_Busy^0,w,c
  3122   0011DA  A4D8               	btfss	status,2,c
  3123   0011DC  EFF2  F008         	goto	u4271
  3124   0011E0  EFF4  F008         	goto	u4270
  3125   0011E4                     u4271:
  3126   0011E4  EF2E  F009         	goto	l5935
  3127   0011E8                     u4270:
  3128   0011E8                     
  3129                           ;main.c: 853:                                 Busy = 1;
  3130   0011E8  0E01               	movlw	1
  3131   0011EA  6E2F               	movwf	_Busy^0,c
  3132   0011EC                     
  3133                           ;main.c: 854:                                 delay_motor_stop_time = Serial_Buffer[2];
  3134   0011EC  C082  F029         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  3135   0011F0                     
  3136                           ;main.c: 855:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  3137   0011F0  C029  F01F         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  3138   0011F4  6A20               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  3139   0011F6                     
  3140                           ;main.c: 857:                                 INTCONbits.GIE = 0;
  3141   0011F6  9EF2               	bcf	242,7,c	;volatile
  3142   0011F8                     
  3143                           ;main.c: 858:                                 write_i2c(0x0050, delay_motor_stop_time);
  3144   0011F8  0E50               	movlw	80
  3145   0011FA  6E4A               	movwf	write_i2c@address^0,c
  3146   0011FC  0E00               	movlw	0
  3147   0011FE  6E4B               	movwf	(write_i2c@address+1)^0,c
  3148   001200  0E00               	movlw	0
  3149   001202  6E4C               	movwf	(write_i2c@address+2)^0,c
  3150   001204  0E00               	movlw	0
  3151   001206  6E4D               	movwf	(write_i2c@address+3)^0,c
  3152   001208  C029  F04E         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  3153   00120C  6A4F               	clrf	(write_i2c@data+1)^0,c
  3154   00120E  EC3C  F012         	call	_write_i2c	;wreg free
  3155   001212                     
  3156                           ;main.c: 859:                                 INTCONbits.GIE = 1;
  3157   001212  8EF2               	bsf	242,7,c	;volatile
  3158   001214  EF9E  F007         	goto	l5817
  3159   001218                     l5933:
  3160   001218  0100               	movlb	0	; () banked
  3161   00121A  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  3162   00121C  6FA0               	movwf	??_main& (0+255),b
  3163   00121E  6BA1               	clrf	(??_main+1)& (0+255),b
  3164                           
  3165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 1, Range of values is 0 to 0
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            4     3 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172   001220  51A1               	movf	(??_main+1)& (0+255),w,b
  3173   001222  0A00               	xorlw	0	; case 0
  3174   001224  B4D8               	btfsc	status,2,c
  3175   001226  EF17  F009         	goto	l6283
  3176   00122A  EF2E  F009         	goto	l5935
  3177   00122E                     l6283:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ; Switch size 1, requested type "simple"
  3181                           ; Number of cases is 5, Range of values is 35 to 102
  3182                           ; switch strategies available:
  3183                           ; Name         Instructions Cycles
  3184                           ; simple_byte           16     9 (average)
  3185                           ;	Chosen strategy is simple_byte
  3186   00122E  51A0               	movf	??_main& (0+255),w,b
  3187   001230  0A23               	xorlw	35	; case 35
  3188   001232  B4D8               	btfsc	status,2,c
  3189   001234  EFA2  F007         	goto	l5819
  3190   001238  0A67               	xorlw	103	; case 68
  3191   00123A  B4D8               	btfsc	status,2,c
  3192   00123C  EF15  F007         	goto	l5773
  3193   001240  0A15               	xorlw	21	; case 81
  3194   001242  B4D8               	btfsc	status,2,c
  3195   001244  EF0E  F008         	goto	l5849
  3196   001248  0A34               	xorlw	52	; case 101
  3197   00124A  B4D8               	btfsc	status,2,c
  3198   00124C  EF8C  F008         	goto	l5889
  3199   001250  0A03               	xorlw	3	; case 102
  3200   001252  B4D8               	btfsc	status,2,c
  3201   001254  EFEC  F008         	goto	l5915
  3202   001258  EF2E  F009         	goto	l5935
  3203   00125C                     l5935:
  3204                           
  3205                           ;main.c: 868:                     Serial_Flag = 0;
  3206   00125C  0E00               	movlw	0
  3207   00125E  6E33               	movwf	_Serial_Flag^0,c
  3208                           
  3209                           ;main.c: 869:                     Serial_GData = 0;
  3210   001260  0E00               	movlw	0
  3211   001262  6E32               	movwf	_Serial_GData^0,c
  3212                           
  3213                           ;main.c: 870:                     OpMode = MANUAL_MODE;
  3214   001264  0E00               	movlw	0
  3215   001266  6E2C               	movwf	_OpMode^0,c	;volatile
  3216                           
  3217                           ;main.c: 871:                 } else {
  3218   001268  EFAA  F004         	goto	l5635
  3219   00126C                     l5937:
  3220                           
  3221                           ;main.c: 872:                     OpMode = MANUAL_MODE;
  3222   00126C  0E00               	movlw	0
  3223   00126E  6E2C               	movwf	_OpMode^0,c	;volatile
  3224   001270  EFAA  F004         	goto	l5635
  3225   001274                     l5939:
  3226   001274  502C               	movf	_OpMode^0,w,c	;volatile
  3227   001276  0100               	movlb	0	; () banked
  3228   001278  6FA0               	movwf	??_main& (0+255),b
  3229   00127A  6BA1               	clrf	(??_main+1)& (0+255),b
  3230                           
  3231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3232                           ; Switch size 1, requested type "simple"
  3233                           ; Number of cases is 1, Range of values is 0 to 0
  3234                           ; switch strategies available:
  3235                           ; Name         Instructions Cycles
  3236                           ; simple_byte            4     3 (average)
  3237                           ;	Chosen strategy is simple_byte
  3238   00127C  51A1               	movf	(??_main+1)& (0+255),w,b
  3239   00127E  0A00               	xorlw	0	; case 0
  3240   001280  B4D8               	btfsc	status,2,c
  3241   001282  EF45  F009         	goto	l6285
  3242   001286  EFAA  F004         	goto	l5635
  3243   00128A                     l6285:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 2, Range of values is 0 to 2
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte            7     4 (average)
  3251                           ;	Chosen strategy is simple_byte
  3252   00128A  51A0               	movf	??_main& (0+255),w,b
  3253   00128C  0A00               	xorlw	0	; case 0
  3254   00128E  B4D8               	btfsc	status,2,c
  3255   001290  EFBD  F004         	goto	l248
  3256   001294  0A02               	xorlw	2	; case 2
  3257   001296  B4D8               	btfsc	status,2,c
  3258   001298  EF0B  F007         	goto	l5769
  3259   00129C  EFAA  F004         	goto	l5635
  3260   0012A0  EF87  F001         	goto	start
  3261   0012A4                     __end_of_main:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _read_i2c *****************
  3265 ;; Defined at:
  3266 ;;		line 120 in file "i2c.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  address         4   22[COMRAM] long 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  read_byte       2   26[COMRAM] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2   22[COMRAM] int 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;Total ram usage:        6 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 4
  3287 ;; This function calls:
  3288 ;;		___aldiv
  3289 ;;		_i2c_Address
  3290 ;;		_i2c_Read
  3291 ;;		_i2c_Restart
  3292 ;;		_i2c_Start
  3293 ;;		_i2c_Stop
  3294 ;;		_i2c_Write
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text1
  3301   002350                     __ptext1:
  3302                           	callstack 0
  3303   002350                     _read_i2c:
  3304                           	callstack 26
  3305   002350                     
  3306                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  3307   002350  ECDD  F013         	call	_i2c_Start	;wreg free
  3308                           
  3309                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  3310   002354  0E00               	movlw	0
  3311   002356  6E3D               	movwf	i2c_Address@mode^0,c
  3312   002358  0EA0               	movlw	160
  3313   00235A  ECB4  F013         	call	_i2c_Address
  3314                           
  3315                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  3316   00235E  C04A  F03C         	movff	read_i2c@address,___aldiv@dividend
  3317   002362  C04B  F03D         	movff	read_i2c@address+1,___aldiv@dividend+1
  3318   002366  C04C  F03E         	movff	read_i2c@address+2,___aldiv@dividend+2
  3319   00236A  C04D  F03F         	movff	read_i2c@address+3,___aldiv@dividend+3
  3320   00236E  0E00               	movlw	0
  3321   002370  6E40               	movwf	___aldiv@divisor^0,c
  3322   002372  0E01               	movlw	1
  3323   002374  6E41               	movwf	(___aldiv@divisor+1)^0,c
  3324   002376  0E00               	movlw	0
  3325   002378  6E42               	movwf	(___aldiv@divisor+2)^0,c
  3326   00237A  0E00               	movlw	0
  3327   00237C  6E43               	movwf	(___aldiv@divisor+3)^0,c
  3328   00237E  EC75  F00D         	call	___aldiv	;wreg free
  3329   002382  503C               	movf	?___aldiv^0,w,c
  3330   002384  ECC5  F013         	call	_i2c_Write
  3331                           
  3332                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  3333   002388  504A               	movf	read_i2c@address^0,w,c
  3334   00238A  ECC5  F013         	call	_i2c_Write
  3335                           
  3336                           ;i2c.c: 128:     i2c_Restart();
  3337   00238E  ECD5  F013         	call	_i2c_Restart	;wreg free
  3338                           
  3339                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  3340   002392  0E01               	movlw	1
  3341   002394  6E3D               	movwf	i2c_Address@mode^0,c
  3342   002396  0EA0               	movlw	160
  3343   002398  ECB4  F013         	call	_i2c_Address
  3344                           
  3345                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  3346   00239C  0E00               	movlw	0
  3347   00239E  ECD9  F012         	call	_i2c_Read
  3348   0023A2  C03D  F04E         	movff	?_i2c_Read,read_i2c@read_byte
  3349   0023A6  C03E  F04F         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  3350                           
  3351                           ;i2c.c: 134:     i2c_Stop();
  3352   0023AA  ECD9  F013         	call	_i2c_Stop	;wreg free
  3353   0023AE                     
  3354                           ;i2c.c: 135:     return (read_byte);
  3355   0023AE  C04E  F04A         	movff	read_i2c@read_byte,?_read_i2c
  3356   0023B2  C04F  F04B         	movff	read_i2c@read_byte+1,?_read_i2c+1
  3357   0023B6  0012               	return		;funcret
  3358   0023B8                     __end_of_read_i2c:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _i2c_Restart *****************
  3362 ;; Defined at:
  3363 ;;		line 56 in file "i2c.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 3
  3384 ;; This function calls:
  3385 ;;		_i2c_Wait
  3386 ;; This function is called by:
  3387 ;;		_read_i2c
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text2
  3392   0027AA                     __ptext2:
  3393                           	callstack 0
  3394   0027AA                     _i2c_Restart:
  3395                           	callstack 26
  3396   0027AA                     
  3397                           ;i2c.c: 57:     i2c_Wait();
  3398   0027AA  EC4F  F013         	call	_i2c_Wait	;wreg free
  3399   0027AE                     
  3400                           ;i2c.c: 58:     RSEN2 = 1;
  3401   0027AE  826B               	bsf	3947,1,c	;volatile
  3402   0027B0  0012               	return		;funcret
  3403   0027B2                     __end_of_i2c_Restart:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _i2c_Read *****************
  3407 ;; Defined at:
  3408 ;;		line 89 in file "i2c.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  ack             1    wreg     unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  ack             1   11[COMRAM] unsigned char 
  3413 ;;  i2cReadData     1   12[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  2    9[COMRAM] int 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        4 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 3
  3430 ;; This function calls:
  3431 ;;		_i2c_Wait
  3432 ;; This function is called by:
  3433 ;;		_read_i2c
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text3
  3438   0025B2                     __ptext3:
  3439                           	callstack 0
  3440   0025B2                     _i2c_Read:
  3441                           	callstack 26
  3442                           
  3443                           ;incstack = 0
  3444                           ;i2c_Read@ack stored from wreg
  3445   0025B2  6E3F               	movwf	i2c_Read@ack^0,c
  3446   0025B4                     
  3447                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  3448   0025B4  EC4F  F013         	call	_i2c_Wait	;wreg free
  3449   0025B8                     
  3450                           ;i2c.c: 96:     RCEN2 = 1;
  3451   0025B8  866B               	bsf	3947,3,c	;volatile
  3452                           
  3453                           ;i2c.c: 97:     i2c_Wait();
  3454   0025BA  EC4F  F013         	call	_i2c_Wait	;wreg free
  3455   0025BE                     
  3456                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  3457   0025BE  CF6F F040          	movff	3951,i2c_Read@i2cReadData	;volatile
  3458                           
  3459                           ;i2c.c: 99:     i2c_Wait();
  3460   0025C2  EC4F  F013         	call	_i2c_Wait	;wreg free
  3461   0025C6                     
  3462                           ;i2c.c: 100:     if (ack)
  3463   0025C6  503F               	movf	i2c_Read@ack^0,w,c
  3464   0025C8  B4D8               	btfsc	status,2,c
  3465   0025CA  EFE9  F012         	goto	u3661
  3466   0025CE  EFEB  F012         	goto	u3660
  3467   0025D2                     u3661:
  3468   0025D2  EFEE  F012         	goto	l628
  3469   0025D6                     u3660:
  3470   0025D6                     
  3471                           ;i2c.c: 101:         ACKDT2 = 0;
  3472   0025D6  9A6B               	bcf	3947,5,c	;volatile
  3473   0025D8  EFEF  F012         	goto	l629
  3474   0025DC                     l628:
  3475                           
  3476                           ;i2c.c: 103:         ACKDT2 = 1;
  3477   0025DC  8A6B               	bsf	3947,5,c	;volatile
  3478   0025DE                     l629:
  3479                           
  3480                           ;i2c.c: 104:     ACKEN2 = 1;
  3481   0025DE  886B               	bsf	3947,4,c	;volatile
  3482                           
  3483                           ;i2c.c: 106:     return ( i2cReadData);
  3484   0025E0  C040  F03D         	movff	i2c_Read@i2cReadData,?_i2c_Read
  3485   0025E4  6A3E               	clrf	(?_i2c_Read+1)^0,c
  3486   0025E6  0012               	return		;funcret
  3487   0025E8                     __end_of_i2c_Read:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _pwm_set *****************
  3491 ;; Defined at:
  3492 ;;		line 196 in file "main.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  duty            2    8[COMRAM] unsigned short 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;Total ram usage:        4 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 2
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text4
  3521   00261E                     __ptext4:
  3522                           	callstack 0
  3523   00261E                     _pwm_set:
  3524                           	callstack 28
  3525   00261E                     
  3526                           ;main.c: 197:     CCP1CONbits.DC1B = (uint8_t)(duty & 0x0003);
  3527   00261E  C03C  F03E         	movff	pwm_set@duty,??_pwm_set
  3528   002622  0E03               	movlw	3
  3529   002624  163E               	andwf	??_pwm_set^0,f,c
  3530   002626  3A3E               	swapf	??_pwm_set^0,f,c
  3531   002628  50BB               	movf	187,w,c	;volatile
  3532   00262A  183E               	xorwf	??_pwm_set^0,w,c
  3533   00262C  0BCF               	andlw	-49
  3534   00262E  183E               	xorwf	??_pwm_set^0,w,c
  3535   002630  6EBB               	movwf	187,c	;volatile
  3536                           
  3537                           ;main.c: 198:     CCPR1L = (uint8_t)(duty >> 2);
  3538   002632  C03C  F03E         	movff	pwm_set@duty,??_pwm_set
  3539   002636  C03D  F03F         	movff	pwm_set@duty+1,??_pwm_set+1
  3540   00263A  90D8               	bcf	status,0,c
  3541   00263C  323F               	rrcf	(??_pwm_set+1)^0,f,c
  3542   00263E  323E               	rrcf	??_pwm_set^0,f,c
  3543   002640  90D8               	bcf	status,0,c
  3544   002642  323F               	rrcf	(??_pwm_set+1)^0,f,c
  3545   002644  323E               	rrcf	??_pwm_set^0,f,c
  3546   002646  503E               	movf	??_pwm_set^0,w,c
  3547   002648  6EBC               	movwf	188,c	;volatile
  3548   00264A  0012               	return		;funcret
  3549   00264C                     __end_of_pwm_set:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _initUSART *****************
  3553 ;; Defined at:
  3554 ;;		line 20 in file "usart.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 2
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text5
  3583   002678                     __ptext5:
  3584                           	callstack 0
  3585   002678                     _initUSART:
  3586                           	callstack 28
  3587   002678                     
  3588                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  3589   002678  9C94               	bcf	148,6,c	;volatile
  3590                           
  3591                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  3592   00267A  8E94               	bsf	148,7,c	;volatile
  3593                           
  3594                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  3595   00267C  98AD               	bcf	173,4,c	;volatile
  3596                           
  3597                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  3598   00267E  9CAD               	bcf	173,6,c	;volatile
  3599                           
  3600                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  3601   002680  8AAD               	bsf	173,5,c	;volatile
  3602                           
  3603                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  3604   002682  9CAC               	bcf	172,6,c	;volatile
  3605                           
  3606                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  3607   002684  88AC               	bsf	172,4,c	;volatile
  3608                           
  3609                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  3610   002686  9EAD               	bcf	173,7,c	;volatile
  3611                           
  3612                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  3613   002688  86AC               	bsf	172,3,c	;volatile
  3614                           
  3615                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  3616   00268A  8EAC               	bsf	172,7,c	;volatile
  3617                           
  3618                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  3619   00268C  967E               	bcf	126,3,c	;volatile
  3620                           
  3621                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  3622   00268E  84AD               	bsf	173,2,c	;volatile
  3623                           
  3624                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  3625   002690  8A9D               	bsf	157,5,c	;volatile
  3626                           
  3627                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  3628   002692  989D               	bcf	157,4,c	;volatile
  3629   002694                     
  3630                           ;usart.c: 39:     SPBRG1 = 25;
  3631   002694  0E19               	movlw	25
  3632   002696  6EB0               	movwf	176,c	;volatile
  3633                           
  3634                           ;usart.c: 40:     SPBRGH1 = 0;
  3635   002698  0E00               	movlw	0
  3636   00269A  6E7F               	movwf	127,c	;volatile
  3637   00269C  0012               	return		;funcret
  3638   00269E                     __end_of_initUSART:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _initMotor *****************
  3642 ;; Defined at:
  3643 ;;		line 21 in file "MotorDriver.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 2
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text6
  3672   00277C                     __ptext6:
  3673                           	callstack 0
  3674   00277C                     _initMotor:
  3675                           	callstack 28
  3676   00277C                     
  3677                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  3678   00277C  0EC7               	movlw	199
  3679   00277E  6E77               	movwf	119,c	;volatile
  3680   002780                     
  3681                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  3682   002780  9679               	bcf	121,3,c	;volatile
  3683   002782                     
  3684                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  3685   002782  8C79               	bsf	121,6,c	;volatile
  3686                           
  3687                           ;MotorDriver.c: 25:     T4CON = 0x00;
  3688   002784  0E00               	movlw	0
  3689   002786  6E76               	movwf	118,c	;volatile
  3690   002788  0012               	return		;funcret
  3691   00278A                     __end_of_initMotor:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function _init *****************
  3695 ;; Defined at:
  3696 ;;		line 18 in file "IO.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 2
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text7
  3725   0022DE                     __ptext7:
  3726                           	callstack 0
  3727   0022DE                     _init:
  3728                           	callstack 28
  3729   0022DE                     
  3730                           ;IO.c: 19:     TRISA = 0xFB;
  3731   0022DE  0EFB               	movlw	251
  3732   0022E0  6E92               	movwf	146,c	;volatile
  3733   0022E2                     
  3734                           ;IO.c: 20:     TRISB = 0XFF;
  3735   0022E2  6893               	setf	147,c	;volatile
  3736                           
  3737                           ;IO.c: 21:     TRISC = 0X84;
  3738   0022E4  0E84               	movlw	132
  3739   0022E6  6E94               	movwf	148,c	;volatile
  3740                           
  3741                           ;IO.c: 22:     TRISD = 0XC0;
  3742   0022E8  0EC0               	movlw	192
  3743   0022EA  6E95               	movwf	149,c	;volatile
  3744                           
  3745                           ;IO.c: 23:     TRISE = 0X00;
  3746   0022EC  0E00               	movlw	0
  3747   0022EE  6E96               	movwf	150,c	;volatile
  3748                           
  3749                           ;IO.c: 24:     TRISF = 0X00;
  3750   0022F0  0E00               	movlw	0
  3751   0022F2  6E97               	movwf	151,c	;volatile
  3752                           
  3753                           ;IO.c: 25:     TRISG = 0X05;
  3754   0022F4  0E05               	movlw	5
  3755   0022F6  6E98               	movwf	152,c	;volatile
  3756   0022F8                     
  3757                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  3758   0022F8  9EC2               	bcf	194,7,c	;volatile
  3759   0022FA                     
  3760                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  3761   0022FA  9CC2               	bcf	194,6,c	;volatile
  3762   0022FC                     
  3763                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  3764   0022FC  90C2               	bcf	194,0,c	;volatile
  3765   0022FE                     
  3766                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  3767   0022FE  8EC1               	bsf	193,7,c	;volatile
  3768   002300                     
  3769                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  3770   002300  9CC1               	bcf	193,6,c	;volatile
  3771   002302                     
  3772                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  3773   002302  9AC1               	bcf	193,5,c	;volatile
  3774   002304                     
  3775                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  3776   002304  88C1               	bsf	193,4,c	;volatile
  3777   002306                     
  3778                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  3779   002306  96C1               	bcf	193,3,c	;volatile
  3780   002308                     
  3781                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  3782   002308  84C1               	bsf	193,2,c	;volatile
  3783   00230A                     
  3784                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  3785   00230A  92C1               	bcf	193,1,c	;volatile
  3786   00230C                     
  3787                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  3788   00230C  90C1               	bcf	193,0,c	;volatile
  3789   00230E                     
  3790                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  3791   00230E  88C0               	bsf	192,4,c	;volatile
  3792   002310                     
  3793                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  3794   002310  90C1               	bcf	193,0,c	;volatile
  3795   002312                     
  3796                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  3797   002312  82C1               	bsf	193,1,c	;volatile
  3798   002314                     
  3799                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  3800   002314  84C1               	bsf	193,2,c	;volatile
  3801   002316                     
  3802                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  3803   002316  86C1               	bsf	193,3,c	;volatile
  3804   002318                     
  3805                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  3806   002318  88C1               	bsf	193,4,c	;volatile
  3807   00231A                     
  3808                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  3809   00231A  8EC1               	bsf	193,7,c	;volatile
  3810   00231C                     
  3811                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  3812   00231C  98C0               	bcf	192,4,c	;volatile
  3813   00231E                     
  3814                           ;IO.c: 60:     INTCONbits.GIE = 1;
  3815   00231E  8EF2               	bsf	242,7,c	;volatile
  3816                           
  3817                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  3818   002320  0E03               	movlw	3
  3819   002322  12D3               	iorwf	211,f,c	;volatile
  3820                           
  3821                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  3822   002324  0E70               	movlw	112
  3823   002326  12D3               	iorwf	211,f,c	;volatile
  3824                           
  3825                           ;IO.c: 68:     ADRES = 0;
  3826   002328  0E00               	movlw	0
  3827   00232A  6EC4               	movwf	196,c	;volatile
  3828   00232C  0E00               	movlw	0
  3829   00232E  6EC3               	movwf	195,c	;volatile
  3830   002330                     
  3831                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  3832   002330  94C2               	bcf	194,2,c	;volatile
  3833   002332                     
  3834                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  3835   002332  96C2               	bcf	194,3,c	;volatile
  3836   002334                     
  3837                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  3838   002334  98C2               	bcf	194,4,c	;volatile
  3839   002336                     
  3840                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  3841   002336  9AC2               	bcf	194,5,c	;volatile
  3842   002338                     
  3843                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  3844   002338  8CC1               	bsf	193,6,c	;volatile
  3845   00233A                     
  3846                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  3847   00233A  80C2               	bsf	194,0,c	;volatile
  3848   00233C                     
  3849                           ;IO.c: 78:     ADCON0bits.GO = 1;
  3850   00233C  82C2               	bsf	194,1,c	;volatile
  3851   00233E                     l699:
  3852                           
  3853                           ;IO.c: 79:     while (ADCON0bits.GO) {
  3854   00233E  B2C2               	btfsc	194,1,c	;volatile
  3855   002340  EFA4  F011         	goto	u2141
  3856   002344  EFA6  F011         	goto	u2140
  3857   002348                     u2141:
  3858   002348  EF9F  F011         	goto	l699
  3859   00234C                     u2140:
  3860   00234C                     
  3861                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  3862   00234C  9CC1               	bcf	193,6,c	;volatile
  3863   00234E  0012               	return		;funcret
  3864   002350                     __end_of_init:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _i2c_Init *****************
  3868 ;; Defined at:
  3869 ;;		line 25 in file "i2c.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text8
  3898   002726                     __ptext8:
  3899                           	callstack 0
  3900   002726                     _i2c_Init:
  3901                           	callstack 28
  3902   002726                     
  3903                           ;i2c.c: 29:     TRISD5 = 1;
  3904   002726  8A95               	bsf	3989,5,c	;volatile
  3905                           
  3906                           ;i2c.c: 30:     TRISD6 = 1;
  3907   002728  8C95               	bsf	3989,6,c	;volatile
  3908   00272A                     
  3909                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  3910   00272A  0E28               	movlw	40
  3911   00272C  6E6C               	movwf	108,c	;volatile
  3912                           
  3913                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  3914   00272E  0E00               	movlw	0
  3915   002730  6E6B               	movwf	107,c	;volatile
  3916                           
  3917                           ;i2c.c: 35:     SSP2ADD = 39;
  3918   002732  0E27               	movlw	39
  3919   002734  6E6E               	movwf	110,c	;volatile
  3920                           
  3921                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  3922   002736  0EC0               	movlw	192
  3923   002738  6E6D               	movwf	109,c	;volatile
  3924   00273A  0012               	return		;funcret
  3925   00273C                     __end_of_i2c_Init:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _flush *****************
  3929 ;; Defined at:
  3930 ;;		line 1353 in file "main.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  i               2    8[COMRAM] int 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;Total ram usage:        2 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text9
  3959   00253E                     __ptext9:
  3960                           	callstack 0
  3961   00253E                     _flush:
  3962                           	callstack 28
  3963   00253E                     
  3964                           ;main.c: 1354:     int i;;main.c: 1356:     for (i = 0; i < 16; i++) {
  3965   00253E  0E00               	movlw	0
  3966   002540  6E3D               	movwf	(flush@i+1)^0,c
  3967   002542  0E00               	movlw	0
  3968   002544  6E3C               	movwf	flush@i^0,c
  3969   002546                     l4047:
  3970                           
  3971                           ;main.c: 1357:         Serial_Buffer[i] = 0x00;
  3972   002546  0E80               	movlw	low _Serial_Buffer
  3973   002548  243C               	addwf	flush@i^0,w,c
  3974   00254A  6ED9               	movwf	fsr2l,c
  3975   00254C  0E00               	movlw	high _Serial_Buffer
  3976   00254E  203D               	addwfc	(flush@i+1)^0,w,c
  3977   002550  6EDA               	movwf	fsr2h,c
  3978   002552  0E00               	movlw	0
  3979   002554  6EDF               	movwf	indf2,c
  3980   002556                     
  3981                           ;main.c: 1358:     }
  3982   002556  4A3C               	infsnz	flush@i^0,f,c
  3983   002558  2A3D               	incf	(flush@i+1)^0,f,c
  3984   00255A  BE3D               	btfsc	(flush@i+1)^0,7,c
  3985   00255C  EFB9  F012         	goto	u2681
  3986   002560  503D               	movf	(flush@i+1)^0,w,c
  3987   002562  E109               	bnz	u2680
  3988   002564  0E10               	movlw	16
  3989   002566  5C3C               	subwf	flush@i^0,w,c
  3990   002568  A0D8               	btfss	status,0,c
  3991   00256A  EFB9  F012         	goto	u2681
  3992   00256E  EFBB  F012         	goto	u2680
  3993   002572                     u2681:
  3994   002572  EFA3  F012         	goto	l4047
  3995   002576                     u2680:
  3996   002576  0012               	return		;funcret
  3997   002578                     __end_of_flush:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _WriteSTLED316SVibMode *****************
  4001 ;; Defined at:
  4002 ;;		line 244 in file "Display.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  dc_reg          2   14[COMRAM] unsigned int 
  4005 ;;  v_mode          1   16[COMRAM] unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		_STLED316s_SPI_SendData
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text10
  4032   0019CA                     __ptext10:
  4033                           	callstack 0
  4034   0019CA                     _WriteSTLED316SVibMode:
  4035                           	callstack 27
  4036   0019CA                     
  4037                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  4038   0019CA  988B               	bcf	139,4,c	;volatile
  4039   0019CC                     
  4040                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  4041   0019CC  0E00               	movlw	0
  4042   0019CE  EC2F  F011         	call	_STLED316s_SPI_SendData
  4043   0019D2                     
  4044                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  4045   0019D2  888B               	bsf	139,4,c	;volatile
  4046   0019D4                     
  4047                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  4048   0019D4  988B               	bcf	139,4,c	;volatile
  4049                           
  4050                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  4051   0019D6  0E00               	movlw	0
  4052   0019D8  EC2F  F011         	call	_STLED316s_SPI_SendData
  4053   0019DC                     
  4054                           ;Display.c: 261:     if (v_mode == 1 && dc_reg == 0x01) {
  4055   0019DC  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4056   0019DE  A4D8               	btfss	status,2,c
  4057   0019E0  EFF4  F00C         	goto	u2201
  4058   0019E4  EFF6  F00C         	goto	u2200
  4059   0019E8                     u2201:
  4060   0019E8  EF07  F00D         	goto	l3717
  4061   0019EC                     u2200:
  4062   0019EC  0442               	decf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4063   0019EE  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4064   0019F0  A4D8               	btfss	status,2,c
  4065   0019F2  EFFD  F00C         	goto	u2211
  4066   0019F6  EFFF  F00C         	goto	u2210
  4067   0019FA                     u2211:
  4068   0019FA  EF07  F00D         	goto	l3717
  4069   0019FE                     u2210:
  4070   0019FE                     
  4071                           ;Display.c: 262:         STLED316s_SPI_SendData(0x3E);
  4072   0019FE  0E3E               	movlw	62
  4073   001A00  EC2F  F011         	call	_STLED316s_SPI_SendData
  4074                           
  4075                           ;Display.c: 263:         STLED316s_SPI_SendData(0x86);
  4076   001A04  0E86               	movlw	134
  4077   001A06  EC2F  F011         	call	_STLED316s_SPI_SendData
  4078                           
  4079                           ;Display.c: 264:     }
  4080   001A0A  EF6E  F00D         	goto	l3741
  4081   001A0E                     l3717:
  4082   001A0E  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4083   001A10  A4D8               	btfss	status,2,c
  4084   001A12  EF0D  F00D         	goto	u2221
  4085   001A16  EF0F  F00D         	goto	u2220
  4086   001A1A                     u2221:
  4087   001A1A  EF21  F00D         	goto	l3723
  4088   001A1E                     u2220:
  4089   001A1E  0E02               	movlw	2
  4090   001A20  1842               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4091   001A22  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4092   001A24  A4D8               	btfss	status,2,c
  4093   001A26  EF17  F00D         	goto	u2231
  4094   001A2A  EF19  F00D         	goto	u2230
  4095   001A2E                     u2231:
  4096   001A2E  EF21  F00D         	goto	l3723
  4097   001A32                     u2230:
  4098   001A32                     
  4099                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  4100   001A32  0E3E               	movlw	62
  4101   001A34  EC2F  F011         	call	_STLED316s_SPI_SendData
  4102                           
  4103                           ;Display.c: 267:         STLED316s_SPI_SendData(0xDB);
  4104   001A38  0EDB               	movlw	219
  4105   001A3A  EC2F  F011         	call	_STLED316s_SPI_SendData
  4106                           
  4107                           ;Display.c: 268:     }
  4108   001A3E  EF6E  F00D         	goto	l3741
  4109   001A42                     l3723:
  4110   001A42  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4111   001A44  A4D8               	btfss	status,2,c
  4112   001A46  EF27  F00D         	goto	u2241
  4113   001A4A  EF29  F00D         	goto	u2240
  4114   001A4E                     u2241:
  4115   001A4E  EF3B  F00D         	goto	l3729
  4116   001A52                     u2240:
  4117   001A52  0E03               	movlw	3
  4118   001A54  1842               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4119   001A56  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4120   001A58  A4D8               	btfss	status,2,c
  4121   001A5A  EF31  F00D         	goto	u2251
  4122   001A5E  EF33  F00D         	goto	u2250
  4123   001A62                     u2251:
  4124   001A62  EF3B  F00D         	goto	l3729
  4125   001A66                     u2250:
  4126   001A66                     
  4127                           ;Display.c: 270:         STLED316s_SPI_SendData(0x3E);
  4128   001A66  0E3E               	movlw	62
  4129   001A68  EC2F  F011         	call	_STLED316s_SPI_SendData
  4130                           
  4131                           ;Display.c: 271:         STLED316s_SPI_SendData(0xCF);
  4132   001A6C  0ECF               	movlw	207
  4133   001A6E  EC2F  F011         	call	_STLED316s_SPI_SendData
  4134                           
  4135                           ;Display.c: 272:     }
  4136   001A72  EF6E  F00D         	goto	l3741
  4137   001A76                     l3729:
  4138   001A76  0444               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  4139   001A78  A4D8               	btfss	status,2,c
  4140   001A7A  EF41  F00D         	goto	u2261
  4141   001A7E  EF43  F00D         	goto	u2260
  4142   001A82                     u2261:
  4143   001A82  EF55  F00D         	goto	l3735
  4144   001A86                     u2260:
  4145   001A86  0E04               	movlw	4
  4146   001A88  1842               	xorwf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4147   001A8A  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4148   001A8C  A4D8               	btfss	status,2,c
  4149   001A8E  EF4B  F00D         	goto	u2271
  4150   001A92  EF4D  F00D         	goto	u2270
  4151   001A96                     u2271:
  4152   001A96  EF55  F00D         	goto	l3735
  4153   001A9A                     u2270:
  4154   001A9A                     
  4155                           ;Display.c: 274:         STLED316s_SPI_SendData(0x3E);
  4156   001A9A  0E3E               	movlw	62
  4157   001A9C  EC2F  F011         	call	_STLED316s_SPI_SendData
  4158                           
  4159                           ;Display.c: 275:         STLED316s_SPI_SendData(0xE6);
  4160   001AA0  0EE6               	movlw	230
  4161   001AA2  EC2F  F011         	call	_STLED316s_SPI_SendData
  4162                           
  4163                           ;Display.c: 276:     }
  4164   001AA6  EF6E  F00D         	goto	l3741
  4165   001AAA                     l3735:
  4166   001AAA  5044               	movf	WriteSTLED316SVibMode@v_mode^0,w,c
  4167   001AAC  A4D8               	btfss	status,2,c
  4168   001AAE  EF5B  F00D         	goto	u2281
  4169   001AB2  EF5D  F00D         	goto	u2280
  4170   001AB6                     u2281:
  4171   001AB6  EF6E  F00D         	goto	l556
  4172   001ABA                     u2280:
  4173   001ABA  5042               	movf	WriteSTLED316SVibMode@dc_reg^0,w,c
  4174   001ABC  1043               	iorwf	(WriteSTLED316SVibMode@dc_reg+1)^0,w,c
  4175   001ABE  A4D8               	btfss	status,2,c
  4176   001AC0  EF64  F00D         	goto	u2291
  4177   001AC4  EF66  F00D         	goto	u2290
  4178   001AC8                     u2291:
  4179   001AC8  EF6E  F00D         	goto	l556
  4180   001ACC                     u2290:
  4181   001ACC                     
  4182                           ;Display.c: 278:         STLED316s_SPI_SendData(0x3E);
  4183   001ACC  0E3E               	movlw	62
  4184   001ACE  EC2F  F011         	call	_STLED316s_SPI_SendData
  4185                           
  4186                           ;Display.c: 279:         STLED316s_SPI_SendData(0xBF);
  4187   001AD2  0EBF               	movlw	191
  4188   001AD4  EC2F  F011         	call	_STLED316s_SPI_SendData
  4189   001AD8  EF6E  F00D         	goto	l3741
  4190   001ADC                     l556:
  4191   001ADC                     l3741:
  4192                           
  4193                           ;Display.c: 282:     LATCbits.LATC4 = 1;
  4194   001ADC  888B               	bsf	139,4,c	;volatile
  4195   001ADE                     
  4196                           ;Display.c: 284:     LATCbits.LATC4 = 0;
  4197   001ADE  988B               	bcf	139,4,c	;volatile
  4198                           
  4199                           ;Display.c: 286:     STLED316s_SPI_SendData(0x0D);
  4200   001AE0  0E0D               	movlw	13
  4201   001AE2  EC2F  F011         	call	_STLED316s_SPI_SendData
  4202   001AE6                     
  4203                           ;Display.c: 288:     LATCbits.LATC4 = 1;
  4204   001AE6  888B               	bsf	139,4,c	;volatile
  4205   001AE8  0012               	return		;funcret
  4206   001AEA                     __end_of_WriteSTLED316SVibMode:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _ToggleVIB_Mode *****************
  4210 ;; Defined at:
  4211 ;;		line 1069 in file "main.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 5
  4232 ;; This function calls:
  4233 ;;		_write_i2c
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text11
  4240   0024C2                     __ptext11:
  4241                           	callstack 0
  4242   0024C2                     _ToggleVIB_Mode:
  4243                           	callstack 25
  4244   0024C2                     
  4245                           ;main.c: 1071:     if (dutyCycle_reg == 0x00)
  4246   0024C2  500D               	movf	_dutyCycle_reg^0,w,c
  4247   0024C4  100E               	iorwf	(_dutyCycle_reg+1)^0,w,c
  4248   0024C6  A4D8               	btfss	status,2,c
  4249   0024C8  EF68  F012         	goto	u3671
  4250   0024CC  EF6A  F012         	goto	u3670
  4251   0024D0                     u3671:
  4252   0024D0  EF6E  F012         	goto	l5345
  4253   0024D4                     u3670:
  4254   0024D4                     
  4255                           ;main.c: 1072:         vibration_mode = 0;
  4256   0024D4  0E00               	movlw	0
  4257   0024D6  6E2E               	movwf	_vibration_mode^0,c
  4258   0024D8  EF70  F012         	goto	l5347
  4259   0024DC                     l5345:
  4260                           
  4261                           ;main.c: 1074:         vibration_mode = 1;
  4262   0024DC  0E01               	movlw	1
  4263   0024DE  6E2E               	movwf	_vibration_mode^0,c
  4264   0024E0                     l5347:
  4265                           
  4266                           ;main.c: 1081:     INTCONbits.GIE = 0;
  4267   0024E0  9EF2               	bcf	242,7,c	;volatile
  4268   0024E2                     
  4269                           ;main.c: 1082:     write_i2c(0x0010, vibration_mode);
  4270   0024E2  0E10               	movlw	16
  4271   0024E4  6E4A               	movwf	write_i2c@address^0,c
  4272   0024E6  0E00               	movlw	0
  4273   0024E8  6E4B               	movwf	(write_i2c@address+1)^0,c
  4274   0024EA  0E00               	movlw	0
  4275   0024EC  6E4C               	movwf	(write_i2c@address+2)^0,c
  4276   0024EE  0E00               	movlw	0
  4277   0024F0  6E4D               	movwf	(write_i2c@address+3)^0,c
  4278   0024F2  C02E  F04E         	movff	_vibration_mode,write_i2c@data
  4279   0024F6  6A4F               	clrf	(write_i2c@data+1)^0,c
  4280   0024F8  EC3C  F012         	call	_write_i2c	;wreg free
  4281   0024FC                     
  4282                           ;main.c: 1083:     INTCONbits.GIE = 1;
  4283   0024FC  8EF2               	bsf	242,7,c	;volatile
  4284   0024FE  0012               	return		;funcret
  4285   002500                     __end_of_ToggleVIB_Mode:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function _PWM_Selection *****************
  4289 ;; Defined at:
  4290 ;;		line 1442 in file "main.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  msg             2    0[BANK0 ] unsigned int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  dcSelected      2    4[BANK0 ] int 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  2    0[BANK0 ] unsigned int 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;Total ram usage:        6 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 5
  4311 ;; This function calls:
  4312 ;;		_write_i2c
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text12
  4319   00189A                     __ptext12:
  4320                           	callstack 0
  4321   00189A                     _PWM_Selection:
  4322                           	callstack 25
  4323   00189A                     
  4324                           ;main.c: 1443:     int dcSelected;;main.c: 1444:     switch(msg){
  4325   00189A  EFBD  F00C         	goto	l5335
  4326   00189E                     l5293:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;main.c: 1446:             dcSelected = 7;
  4330   00189E  0E00               	movlw	0
  4331   0018A0  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4332   0018A2  0E07               	movlw	7
  4333   0018A4  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4334   0018A6                     
  4335                           ; BSR set to: 0
  4336                           ;main.c: 1447:             INTCONbits.GIE = 0;
  4337   0018A6  9EF2               	bcf	242,7,c	;volatile
  4338   0018A8                     
  4339                           ; BSR set to: 0
  4340                           ;main.c: 1448:             write_i2c(0x0070, 0x01);
  4341   0018A8  0E70               	movlw	112
  4342   0018AA  6E4A               	movwf	write_i2c@address^0,c
  4343   0018AC  0E00               	movlw	0
  4344   0018AE  6E4B               	movwf	(write_i2c@address+1)^0,c
  4345   0018B0  0E00               	movlw	0
  4346   0018B2  6E4C               	movwf	(write_i2c@address+2)^0,c
  4347   0018B4  0E00               	movlw	0
  4348   0018B6  6E4D               	movwf	(write_i2c@address+3)^0,c
  4349   0018B8  0E00               	movlw	0
  4350   0018BA  6E4F               	movwf	(write_i2c@data+1)^0,c
  4351   0018BC  0E01               	movlw	1
  4352   0018BE  6E4E               	movwf	write_i2c@data^0,c
  4353   0018C0  EC3C  F012         	call	_write_i2c	;wreg free
  4354   0018C4                     
  4355                           ;main.c: 1449:             INTCONbits.GIE = 1;
  4356   0018C4  8EF2               	bsf	242,7,c	;volatile
  4357                           
  4358                           ;main.c: 1450:             break;
  4359   0018C6  EFE0  F00C         	goto	l482
  4360   0018CA                     l5301:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;main.c: 1452:             dcSelected = 9;
  4364   0018CA  0E00               	movlw	0
  4365   0018CC  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4366   0018CE  0E09               	movlw	9
  4367   0018D0  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4368   0018D2                     
  4369                           ; BSR set to: 0
  4370                           ;main.c: 1453:             INTCONbits.GIE = 0;
  4371   0018D2  9EF2               	bcf	242,7,c	;volatile
  4372   0018D4                     
  4373                           ; BSR set to: 0
  4374                           ;main.c: 1454:             write_i2c(0x0070, 0x02);
  4375   0018D4  0E70               	movlw	112
  4376   0018D6  6E4A               	movwf	write_i2c@address^0,c
  4377   0018D8  0E00               	movlw	0
  4378   0018DA  6E4B               	movwf	(write_i2c@address+1)^0,c
  4379   0018DC  0E00               	movlw	0
  4380   0018DE  6E4C               	movwf	(write_i2c@address+2)^0,c
  4381   0018E0  0E00               	movlw	0
  4382   0018E2  6E4D               	movwf	(write_i2c@address+3)^0,c
  4383   0018E4  0E00               	movlw	0
  4384   0018E6  6E4F               	movwf	(write_i2c@data+1)^0,c
  4385   0018E8  0E02               	movlw	2
  4386   0018EA  6E4E               	movwf	write_i2c@data^0,c
  4387   0018EC  EC3C  F012         	call	_write_i2c	;wreg free
  4388   0018F0                     
  4389                           ;main.c: 1455:             INTCONbits.GIE = 1;
  4390   0018F0  8EF2               	bsf	242,7,c	;volatile
  4391                           
  4392                           ;main.c: 1456:             break;
  4393   0018F2  EFE0  F00C         	goto	l482
  4394   0018F6                     l5309:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;main.c: 1458:             dcSelected = 12;
  4398   0018F6  0E00               	movlw	0
  4399   0018F8  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4400   0018FA  0E0C               	movlw	12
  4401   0018FC  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4402   0018FE                     
  4403                           ; BSR set to: 0
  4404                           ;main.c: 1459:             INTCONbits.GIE = 0;
  4405   0018FE  9EF2               	bcf	242,7,c	;volatile
  4406   001900                     
  4407                           ; BSR set to: 0
  4408                           ;main.c: 1460:             write_i2c(0x0070, 0x03);
  4409   001900  0E70               	movlw	112
  4410   001902  6E4A               	movwf	write_i2c@address^0,c
  4411   001904  0E00               	movlw	0
  4412   001906  6E4B               	movwf	(write_i2c@address+1)^0,c
  4413   001908  0E00               	movlw	0
  4414   00190A  6E4C               	movwf	(write_i2c@address+2)^0,c
  4415   00190C  0E00               	movlw	0
  4416   00190E  6E4D               	movwf	(write_i2c@address+3)^0,c
  4417   001910  0E00               	movlw	0
  4418   001912  6E4F               	movwf	(write_i2c@data+1)^0,c
  4419   001914  0E03               	movlw	3
  4420   001916  6E4E               	movwf	write_i2c@data^0,c
  4421   001918  EC3C  F012         	call	_write_i2c	;wreg free
  4422   00191C                     
  4423                           ;main.c: 1461:             INTCONbits.GIE = 1;
  4424   00191C  8EF2               	bsf	242,7,c	;volatile
  4425                           
  4426                           ;main.c: 1462:             break;
  4427   00191E  EFE0  F00C         	goto	l482
  4428   001922                     l5317:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;main.c: 1464:             dcSelected = 20;
  4432   001922  0E00               	movlw	0
  4433   001924  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4434   001926  0E14               	movlw	20
  4435   001928  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4436   00192A                     
  4437                           ; BSR set to: 0
  4438                           ;main.c: 1465:             INTCONbits.GIE = 0;
  4439   00192A  9EF2               	bcf	242,7,c	;volatile
  4440   00192C                     
  4441                           ; BSR set to: 0
  4442                           ;main.c: 1466:             write_i2c(0x0070, 0x04);
  4443   00192C  0E70               	movlw	112
  4444   00192E  6E4A               	movwf	write_i2c@address^0,c
  4445   001930  0E00               	movlw	0
  4446   001932  6E4B               	movwf	(write_i2c@address+1)^0,c
  4447   001934  0E00               	movlw	0
  4448   001936  6E4C               	movwf	(write_i2c@address+2)^0,c
  4449   001938  0E00               	movlw	0
  4450   00193A  6E4D               	movwf	(write_i2c@address+3)^0,c
  4451   00193C  0E00               	movlw	0
  4452   00193E  6E4F               	movwf	(write_i2c@data+1)^0,c
  4453   001940  0E04               	movlw	4
  4454   001942  6E4E               	movwf	write_i2c@data^0,c
  4455   001944  EC3C  F012         	call	_write_i2c	;wreg free
  4456   001948                     
  4457                           ;main.c: 1467:             INTCONbits.GIE = 1;
  4458   001948  8EF2               	bsf	242,7,c	;volatile
  4459                           
  4460                           ;main.c: 1468:             break;
  4461   00194A  EFE0  F00C         	goto	l482
  4462   00194E                     l5325:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;main.c: 1470:             dcSelected = 0;
  4466   00194E  0E00               	movlw	0
  4467   001950  6F9F               	movwf	(PWM_Selection@dcSelected+1)& (0+255),b
  4468   001952  0E00               	movlw	0
  4469   001954  6F9E               	movwf	PWM_Selection@dcSelected& (0+255),b
  4470   001956                     
  4471                           ; BSR set to: 0
  4472                           ;main.c: 1471:             INTCONbits.GIE = 0;
  4473   001956  9EF2               	bcf	242,7,c	;volatile
  4474   001958                     
  4475                           ; BSR set to: 0
  4476                           ;main.c: 1472:             write_i2c(0x0070, 0x00);
  4477   001958  0E70               	movlw	112
  4478   00195A  6E4A               	movwf	write_i2c@address^0,c
  4479   00195C  0E00               	movlw	0
  4480   00195E  6E4B               	movwf	(write_i2c@address+1)^0,c
  4481   001960  0E00               	movlw	0
  4482   001962  6E4C               	movwf	(write_i2c@address+2)^0,c
  4483   001964  0E00               	movlw	0
  4484   001966  6E4D               	movwf	(write_i2c@address+3)^0,c
  4485   001968  0E00               	movlw	0
  4486   00196A  6E4F               	movwf	(write_i2c@data+1)^0,c
  4487   00196C  0E00               	movlw	0
  4488   00196E  6E4E               	movwf	write_i2c@data^0,c
  4489   001970  EC3C  F012         	call	_write_i2c	;wreg free
  4490   001974                     
  4491                           ;main.c: 1473:             INTCONbits.GIE = 1;
  4492   001974  8EF2               	bsf	242,7,c	;volatile
  4493                           
  4494                           ;main.c: 1474:             break;
  4495   001976  EFE0  F00C         	goto	l482
  4496   00197A                     l5335:
  4497   00197A  C09A  F09C         	movff	PWM_Selection@msg,??_PWM_Selection
  4498   00197E  C09B  F09D         	movff	PWM_Selection@msg+1,??_PWM_Selection+1
  4499                           
  4500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4501                           ; Switch size 1, requested type "simple"
  4502                           ; Number of cases is 1, Range of values is 0 to 0
  4503                           ; switch strategies available:
  4504                           ; Name         Instructions Cycles
  4505                           ; simple_byte            4     3 (average)
  4506                           ;	Chosen strategy is simple_byte
  4507   001982  0100               	movlb	0	; () banked
  4508   001984  519D               	movf	(??_PWM_Selection+1)& (0+255),w,b
  4509   001986  0A00               	xorlw	0	; case 0
  4510   001988  B4D8               	btfsc	status,2,c
  4511   00198A  EFC9  F00C         	goto	l6287
  4512   00198E  EFE0  F00C         	goto	l482
  4513   001992                     l6287:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ; Switch size 1, requested type "simple"
  4517                           ; Number of cases is 5, Range of values is 0 to 4
  4518                           ; switch strategies available:
  4519                           ; Name         Instructions Cycles
  4520                           ; simple_byte           16     9 (average)
  4521                           ;	Chosen strategy is simple_byte
  4522   001992  519C               	movf	??_PWM_Selection& (0+255),w,b
  4523   001994  0A00               	xorlw	0	; case 0
  4524   001996  B4D8               	btfsc	status,2,c
  4525   001998  EF4F  F00C         	goto	l5293
  4526   00199C  0A01               	xorlw	1	; case 1
  4527   00199E  B4D8               	btfsc	status,2,c
  4528   0019A0  EF65  F00C         	goto	l5301
  4529   0019A4  0A03               	xorlw	3	; case 2
  4530   0019A6  B4D8               	btfsc	status,2,c
  4531   0019A8  EF7B  F00C         	goto	l5309
  4532   0019AC  0A01               	xorlw	1	; case 3
  4533   0019AE  B4D8               	btfsc	status,2,c
  4534   0019B0  EF91  F00C         	goto	l5317
  4535   0019B4  0A07               	xorlw	7	; case 4
  4536   0019B6  B4D8               	btfsc	status,2,c
  4537   0019B8  EFA7  F00C         	goto	l5325
  4538   0019BC  EFE0  F00C         	goto	l482
  4539   0019C0                     l482:
  4540                           
  4541                           ;main.c: 1478:     return(dcSelected);
  4542   0019C0  C09E  F09A         	movff	PWM_Selection@dcSelected,?_PWM_Selection
  4543   0019C4  C09F  F09B         	movff	PWM_Selection@dcSelected+1,?_PWM_Selection+1
  4544   0019C8  0012               	return		;funcret
  4545   0019CA                     __end_of_PWM_Selection:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _write_i2c *****************
  4549 ;; Defined at:
  4550 ;;		line 109 in file "i2c.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  address         4   22[COMRAM] long 
  4553 ;;  data            2   26[COMRAM] int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        6 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 4
  4572 ;; This function calls:
  4573 ;;		___aldiv
  4574 ;;		_i2c_Address
  4575 ;;		_i2c_Start
  4576 ;;		_i2c_Stop
  4577 ;;		_i2c_Write
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;;		_ToggleVIB_Mode
  4581 ;;		_PWM_Selection
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text13
  4586   002478                     __ptext13:
  4587                           	callstack 0
  4588   002478                     _write_i2c:
  4589                           	callstack 26
  4590   002478                     
  4591                           ;i2c.c: 110:     i2c_Start();
  4592   002478  ECDD  F013         	call	_i2c_Start	;wreg free
  4593                           
  4594                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  4595   00247C  0E00               	movlw	0
  4596   00247E  6E3D               	movwf	i2c_Address@mode^0,c
  4597   002480  0EA0               	movlw	160
  4598   002482  ECB4  F013         	call	_i2c_Address
  4599                           
  4600                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  4601   002486  C04A  F03C         	movff	write_i2c@address,___aldiv@dividend
  4602   00248A  C04B  F03D         	movff	write_i2c@address+1,___aldiv@dividend+1
  4603   00248E  C04C  F03E         	movff	write_i2c@address+2,___aldiv@dividend+2
  4604   002492  C04D  F03F         	movff	write_i2c@address+3,___aldiv@dividend+3
  4605   002496  0E00               	movlw	0
  4606   002498  6E40               	movwf	___aldiv@divisor^0,c
  4607   00249A  0E01               	movlw	1
  4608   00249C  6E41               	movwf	(___aldiv@divisor+1)^0,c
  4609   00249E  0E00               	movlw	0
  4610   0024A0  6E42               	movwf	(___aldiv@divisor+2)^0,c
  4611   0024A2  0E00               	movlw	0
  4612   0024A4  6E43               	movwf	(___aldiv@divisor+3)^0,c
  4613   0024A6  EC75  F00D         	call	___aldiv	;wreg free
  4614   0024AA  503C               	movf	?___aldiv^0,w,c
  4615   0024AC  ECC5  F013         	call	_i2c_Write
  4616                           
  4617                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  4618   0024B0  504A               	movf	write_i2c@address^0,w,c
  4619   0024B2  ECC5  F013         	call	_i2c_Write
  4620                           
  4621                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  4622   0024B6  504E               	movf	write_i2c@data^0,w,c
  4623   0024B8  ECC5  F013         	call	_i2c_Write
  4624                           
  4625                           ;i2c.c: 115:     i2c_Stop();
  4626   0024BC  ECD9  F013         	call	_i2c_Stop	;wreg free
  4627   0024C0  0012               	return		;funcret
  4628   0024C2                     __end_of_write_i2c:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _i2c_Write *****************
  4632 ;; Defined at:
  4633 ;;		line 70 in file "i2c.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  data            1    wreg     unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  data            1    9[COMRAM] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;Total ram usage:        1 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 3
  4654 ;; This function calls:
  4655 ;;		_i2c_Wait
  4656 ;; This function is called by:
  4657 ;;		_write_i2c
  4658 ;;		_read_i2c
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text14
  4663   00278A                     __ptext14:
  4664                           	callstack 0
  4665   00278A                     _i2c_Write:
  4666                           	callstack 26
  4667                           
  4668                           ;incstack = 0
  4669                           ;i2c_Write@data stored from wreg
  4670   00278A  6E3D               	movwf	i2c_Write@data^0,c
  4671   00278C                     
  4672                           ;i2c.c: 71:     i2c_Wait();
  4673   00278C  EC4F  F013         	call	_i2c_Wait	;wreg free
  4674   002790                     
  4675                           ;i2c.c: 72:     SSP2BUF = data;
  4676   002790  C03D  FF6F         	movff	i2c_Write@data,3951	;volatile
  4677   002794  0012               	return		;funcret
  4678   002796                     __end_of_i2c_Write:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _i2c_Stop *****************
  4682 ;; Defined at:
  4683 ;;		line 63 in file "i2c.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 3
  4704 ;; This function calls:
  4705 ;;		_i2c_Wait
  4706 ;; This function is called by:
  4707 ;;		_write_i2c
  4708 ;;		_read_i2c
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text15
  4713   0027B2                     __ptext15:
  4714                           	callstack 0
  4715   0027B2                     _i2c_Stop:
  4716                           	callstack 26
  4717   0027B2                     
  4718                           ;i2c.c: 64:     i2c_Wait();
  4719   0027B2  EC4F  F013         	call	_i2c_Wait	;wreg free
  4720   0027B6                     
  4721                           ;i2c.c: 65:     PEN2 = 1;
  4722   0027B6  846B               	bsf	3947,2,c	;volatile
  4723   0027B8  0012               	return		;funcret
  4724   0027BA                     __end_of_i2c_Stop:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _i2c_Start *****************
  4728 ;; Defined at:
  4729 ;;		line 49 in file "i2c.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 3
  4750 ;; This function calls:
  4751 ;;		_i2c_Wait
  4752 ;; This function is called by:
  4753 ;;		_write_i2c
  4754 ;;		_read_i2c
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text16
  4759   0027BA                     __ptext16:
  4760                           	callstack 0
  4761   0027BA                     _i2c_Start:
  4762                           	callstack 26
  4763   0027BA                     
  4764                           ;i2c.c: 50:     i2c_Wait();
  4765   0027BA  EC4F  F013         	call	_i2c_Wait	;wreg free
  4766   0027BE                     
  4767                           ;i2c.c: 51:     SEN2 = 1;
  4768   0027BE  806B               	bsf	3947,0,c	;volatile
  4769   0027C0  0012               	return		;funcret
  4770   0027C2                     __end_of_i2c_Start:
  4771                           	callstack 0
  4772                           
  4773 ;; *************** function _i2c_Address *****************
  4774 ;; Defined at:
  4775 ;;		line 78 in file "i2c.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  address         1    wreg     unsigned char 
  4778 ;;  mode            1    9[COMRAM] unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  address         1   10[COMRAM] unsigned char 
  4781 ;;  l_address       1   11[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;Total ram usage:        3 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 3
  4798 ;; This function calls:
  4799 ;;		_i2c_Wait
  4800 ;; This function is called by:
  4801 ;;		_write_i2c
  4802 ;;		_read_i2c
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text17
  4807   002768                     __ptext17:
  4808                           	callstack 0
  4809   002768                     _i2c_Address:
  4810                           	callstack 26
  4811                           
  4812                           ;incstack = 0
  4813                           ;i2c_Address@address stored from wreg
  4814   002768  6E3E               	movwf	i2c_Address@address^0,c
  4815   00276A                     
  4816                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  4817   00276A  C03E  F03F         	movff	i2c_Address@address,i2c_Address@l_address
  4818   00276E                     
  4819                           ;i2c.c: 82:     l_address += mode;
  4820   00276E  503D               	movf	i2c_Address@mode^0,w,c
  4821   002770  263F               	addwf	i2c_Address@l_address^0,f,c
  4822   002772                     
  4823                           ;i2c.c: 83:     i2c_Wait();
  4824   002772  EC4F  F013         	call	_i2c_Wait	;wreg free
  4825   002776                     
  4826                           ;i2c.c: 84:     SSP2BUF = l_address;
  4827   002776  C03F  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  4828   00277A  0012               	return		;funcret
  4829   00277C                     __end_of_i2c_Address:
  4830                           	callstack 0
  4831                           
  4832 ;; *************** function _i2c_Wait *****************
  4833 ;; Defined at:
  4834 ;;		line 43 in file "i2c.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;Total ram usage:        1 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 2
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_i2c_Start
  4859 ;;		_i2c_Restart
  4860 ;;		_i2c_Stop
  4861 ;;		_i2c_Write
  4862 ;;		_i2c_Address
  4863 ;;		_i2c_Read
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text18
  4868   00269E                     __ptext18:
  4869                           	callstack 0
  4870   00269E                     _i2c_Wait:
  4871                           	callstack 26
  4872   00269E                     l5201:
  4873   00269E  CF6B F03C          	movff	3947,??_i2c_Wait	;volatile
  4874   0026A2  0E1F               	movlw	31
  4875   0026A4  163C               	andwf	??_i2c_Wait^0,f,c
  4876   0026A6  A4D8               	btfss	status,2,c
  4877   0026A8  EF58  F013         	goto	u3581
  4878   0026AC  EF5A  F013         	goto	u3580
  4879   0026B0                     u3581:
  4880   0026B0  EF4F  F013         	goto	l5201
  4881   0026B4                     u3580:
  4882   0026B4  B46D               	btfsc	109,2,c	;volatile
  4883   0026B6  EF5F  F013         	goto	u3591
  4884   0026BA  EF61  F013         	goto	u3590
  4885   0026BE                     u3591:
  4886   0026BE  EF4F  F013         	goto	l5201
  4887   0026C2                     u3590:
  4888   0026C2  0012               	return		;funcret
  4889   0026C4                     __end_of_i2c_Wait:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function ___aldiv *****************
  4893 ;; Defined at:
  4894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  dividend        4    8[COMRAM] long 
  4897 ;;  divisor         4   12[COMRAM] long 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  quotient        4   18[COMRAM] long 
  4900 ;;  sign            1   17[COMRAM] unsigned char 
  4901 ;;  counter         1   16[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  4    8[COMRAM] long 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4911 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;Total ram usage:       14 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 2
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_write_i2c
  4922 ;;		_read_i2c
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text19
  4927   001AEA                     __ptext19:
  4928                           	callstack 0
  4929   001AEA                     ___aldiv:
  4930                           	callstack 27
  4931   001AEA  0E00               	movlw	0
  4932   001AEC  6E45               	movwf	___aldiv@sign^0,c
  4933   001AEE  BE43               	btfsc	(___aldiv@divisor+3)^0,7,c
  4934   001AF0  EF7E  F00D         	goto	u3600
  4935   001AF4  EF7C  F00D         	goto	u3601
  4936   001AF8                     u3601:
  4937   001AF8  EF88  F00D         	goto	l5233
  4938   001AFC                     u3600:
  4939   001AFC  1E43               	comf	(___aldiv@divisor+3)^0,f,c
  4940   001AFE  1E42               	comf	(___aldiv@divisor+2)^0,f,c
  4941   001B00  1E41               	comf	(___aldiv@divisor+1)^0,f,c
  4942   001B02  6C40               	negf	___aldiv@divisor^0,c
  4943   001B04  0E00               	movlw	0
  4944   001B06  2241               	addwfc	(___aldiv@divisor+1)^0,f,c
  4945   001B08  2242               	addwfc	(___aldiv@divisor+2)^0,f,c
  4946   001B0A  2243               	addwfc	(___aldiv@divisor+3)^0,f,c
  4947   001B0C  0E01               	movlw	1
  4948   001B0E  6E45               	movwf	___aldiv@sign^0,c
  4949   001B10                     l5233:
  4950   001B10  BE3F               	btfsc	(___aldiv@dividend+3)^0,7,c
  4951   001B12  EF8F  F00D         	goto	u3610
  4952   001B16  EF8D  F00D         	goto	u3611
  4953   001B1A                     u3611:
  4954   001B1A  EF99  F00D         	goto	l5239
  4955   001B1E                     u3610:
  4956   001B1E  1E3F               	comf	(___aldiv@dividend+3)^0,f,c
  4957   001B20  1E3E               	comf	(___aldiv@dividend+2)^0,f,c
  4958   001B22  1E3D               	comf	(___aldiv@dividend+1)^0,f,c
  4959   001B24  6C3C               	negf	___aldiv@dividend^0,c
  4960   001B26  0E00               	movlw	0
  4961   001B28  223D               	addwfc	(___aldiv@dividend+1)^0,f,c
  4962   001B2A  223E               	addwfc	(___aldiv@dividend+2)^0,f,c
  4963   001B2C  223F               	addwfc	(___aldiv@dividend+3)^0,f,c
  4964   001B2E  0E01               	movlw	1
  4965   001B30  1A45               	xorwf	___aldiv@sign^0,f,c
  4966   001B32                     l5239:
  4967   001B32  0E00               	movlw	0
  4968   001B34  6E46               	movwf	___aldiv@quotient^0,c
  4969   001B36  0E00               	movlw	0
  4970   001B38  6E47               	movwf	(___aldiv@quotient+1)^0,c
  4971   001B3A  0E00               	movlw	0
  4972   001B3C  6E48               	movwf	(___aldiv@quotient+2)^0,c
  4973   001B3E  0E00               	movlw	0
  4974   001B40  6E49               	movwf	(___aldiv@quotient+3)^0,c
  4975   001B42  5040               	movf	___aldiv@divisor^0,w,c
  4976   001B44  1041               	iorwf	(___aldiv@divisor+1)^0,w,c
  4977   001B46  1042               	iorwf	(___aldiv@divisor+2)^0,w,c
  4978   001B48  1043               	iorwf	(___aldiv@divisor+3)^0,w,c
  4979   001B4A  B4D8               	btfsc	status,2,c
  4980   001B4C  EFAA  F00D         	goto	u3621
  4981   001B50  EFAC  F00D         	goto	u3620
  4982   001B54                     u3621:
  4983   001B54  EFE2  F00D         	goto	l5261
  4984   001B58                     u3620:
  4985   001B58  0E01               	movlw	1
  4986   001B5A  6E44               	movwf	___aldiv@counter^0,c
  4987   001B5C  EFB6  F00D         	goto	l5247
  4988   001B60                     l5245:
  4989   001B60  90D8               	bcf	status,0,c
  4990   001B62  3640               	rlcf	___aldiv@divisor^0,f,c
  4991   001B64  3641               	rlcf	(___aldiv@divisor+1)^0,f,c
  4992   001B66  3642               	rlcf	(___aldiv@divisor+2)^0,f,c
  4993   001B68  3643               	rlcf	(___aldiv@divisor+3)^0,f,c
  4994   001B6A  2A44               	incf	___aldiv@counter^0,f,c
  4995   001B6C                     l5247:
  4996   001B6C  AE43               	btfss	(___aldiv@divisor+3)^0,7,c
  4997   001B6E  EFBB  F00D         	goto	u3631
  4998   001B72  EFBD  F00D         	goto	u3630
  4999   001B76                     u3631:
  5000   001B76  EFB0  F00D         	goto	l5245
  5001   001B7A                     u3630:
  5002   001B7A                     l5249:
  5003   001B7A  90D8               	bcf	status,0,c
  5004   001B7C  3646               	rlcf	___aldiv@quotient^0,f,c
  5005   001B7E  3647               	rlcf	(___aldiv@quotient+1)^0,f,c
  5006   001B80  3648               	rlcf	(___aldiv@quotient+2)^0,f,c
  5007   001B82  3649               	rlcf	(___aldiv@quotient+3)^0,f,c
  5008   001B84  5040               	movf	___aldiv@divisor^0,w,c
  5009   001B86  5C3C               	subwf	___aldiv@dividend^0,w,c
  5010   001B88  5041               	movf	(___aldiv@divisor+1)^0,w,c
  5011   001B8A  583D               	subwfb	(___aldiv@dividend+1)^0,w,c
  5012   001B8C  5042               	movf	(___aldiv@divisor+2)^0,w,c
  5013   001B8E  583E               	subwfb	(___aldiv@dividend+2)^0,w,c
  5014   001B90  5043               	movf	(___aldiv@divisor+3)^0,w,c
  5015   001B92  583F               	subwfb	(___aldiv@dividend+3)^0,w,c
  5016   001B94  A0D8               	btfss	status,0,c
  5017   001B96  EFCF  F00D         	goto	u3641
  5018   001B9A  EFD1  F00D         	goto	u3640
  5019   001B9E                     u3641:
  5020   001B9E  EFDA  F00D         	goto	l5257
  5021   001BA2                     u3640:
  5022   001BA2  5040               	movf	___aldiv@divisor^0,w,c
  5023   001BA4  5E3C               	subwf	___aldiv@dividend^0,f,c
  5024   001BA6  5041               	movf	(___aldiv@divisor+1)^0,w,c
  5025   001BA8  5A3D               	subwfb	(___aldiv@dividend+1)^0,f,c
  5026   001BAA  5042               	movf	(___aldiv@divisor+2)^0,w,c
  5027   001BAC  5A3E               	subwfb	(___aldiv@dividend+2)^0,f,c
  5028   001BAE  5043               	movf	(___aldiv@divisor+3)^0,w,c
  5029   001BB0  5A3F               	subwfb	(___aldiv@dividend+3)^0,f,c
  5030   001BB2  8046               	bsf	___aldiv@quotient^0,0,c
  5031   001BB4                     l5257:
  5032   001BB4  90D8               	bcf	status,0,c
  5033   001BB6  3243               	rrcf	(___aldiv@divisor+3)^0,f,c
  5034   001BB8  3242               	rrcf	(___aldiv@divisor+2)^0,f,c
  5035   001BBA  3241               	rrcf	(___aldiv@divisor+1)^0,f,c
  5036   001BBC  3240               	rrcf	___aldiv@divisor^0,f,c
  5037   001BBE  2E44               	decfsz	___aldiv@counter^0,f,c
  5038   001BC0  EFBD  F00D         	goto	l5249
  5039   001BC4                     l5261:
  5040   001BC4  5045               	movf	___aldiv@sign^0,w,c
  5041   001BC6  B4D8               	btfsc	status,2,c
  5042   001BC8  EFE8  F00D         	goto	u3651
  5043   001BCC  EFEA  F00D         	goto	u3650
  5044   001BD0                     u3651:
  5045   001BD0  EFF2  F00D         	goto	l5265
  5046   001BD4                     u3650:
  5047   001BD4  1E49               	comf	(___aldiv@quotient+3)^0,f,c
  5048   001BD6  1E48               	comf	(___aldiv@quotient+2)^0,f,c
  5049   001BD8  1E47               	comf	(___aldiv@quotient+1)^0,f,c
  5050   001BDA  6C46               	negf	___aldiv@quotient^0,c
  5051   001BDC  0E00               	movlw	0
  5052   001BDE  2247               	addwfc	(___aldiv@quotient+1)^0,f,c
  5053   001BE0  2248               	addwfc	(___aldiv@quotient+2)^0,f,c
  5054   001BE2  2249               	addwfc	(___aldiv@quotient+3)^0,f,c
  5055   001BE4                     l5265:
  5056   001BE4  C046  F03C         	movff	___aldiv@quotient,?___aldiv
  5057   001BE8  C047  F03D         	movff	___aldiv@quotient+1,?___aldiv+1
  5058   001BEC  C048  F03E         	movff	___aldiv@quotient+2,?___aldiv+2
  5059   001BF0  C049  F03F         	movff	___aldiv@quotient+3,?___aldiv+3
  5060   001BF4  0012               	return		;funcret
  5061   001BF6                     __end_of___aldiv:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function _MotorPosition_Init *****************
  5065 ;; Defined at:
  5066 ;;		line 1029 in file "main.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;Total ram usage:        2 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 4
  5087 ;; This function calls:
  5088 ;;		_MotorBREAK
  5089 ;;		_MotorON
  5090 ;;		_Read_IR
  5091 ;;		_WriteSTLED316SErr
  5092 ;;		_delay_1ms
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text20
  5099   001BF6                     __ptext20:
  5100                           	callstack 0
  5101   001BF6                     _MotorPosition_Init:
  5102                           	callstack 26
  5103   001BF6                     
  5104                           ;main.c: 1030:     LATAbits.LATA2 = 1;
  5105   001BF6  8489               	bsf	137,2,c	;volatile
  5106   001BF8                     
  5107                           ;main.c: 1031:     MotorON();
  5108   001BF8  ECCB  F013         	call	_MotorON	;wreg free
  5109   001BFC                     
  5110                           ;main.c: 1032:     _delay((unsigned long)((350)*(8000000/4000.0)));
  5111   001BFC  0E04               	movlw	4
  5112   001BFE  6E46               	movwf	(??_MotorPosition_Init+1)^0,c
  5113   001C00  0E8E               	movlw	142
  5114   001C02  6E45               	movwf	??_MotorPosition_Init^0,c
  5115   001C04  0E12               	movlw	18
  5116   001C06                     u4397:
  5117   001C06  2EE8               	decfsz	wreg,f,c
  5118   001C08  D7FE               	bra	u4397
  5119   001C0A  2E45               	decfsz	??_MotorPosition_Init^0,f,c
  5120   001C0C  D7FC               	bra	u4397
  5121   001C0E  2E46               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  5122   001C10  D7FA               	bra	u4397
  5123   001C12  D000               	nop2	
  5124   001C14                     
  5125                           ;main.c: 1033:     errorcounter = 30;
  5126   001C14  0E1E               	movlw	30
  5127   001C16  6E50               	movwf	_errorcounter^0,c	;volatile
  5128   001C18  0E00               	movlw	0
  5129   001C1A  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5130   001C1C  0E00               	movlw	0
  5131   001C1E  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5132   001C20  0E00               	movlw	0
  5133   001C22  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5134   001C24                     l3667:
  5135                           
  5136                           ;main.c: 1036:         IR_SENSORF = Read_IR();
  5137   001C24  EC75  F013         	call	_Read_IR	;wreg free
  5138   001C28  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5139   001C2C  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5140   001C30                     
  5141                           ;main.c: 1037:         if (errorcounter == 0) {
  5142   001C30  5050               	movf	_errorcounter^0,w,c	;volatile
  5143   001C32  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5144   001C34  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5145   001C36  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5146   001C38  A4D8               	btfss	status,2,c
  5147   001C3A  EF21  F00E         	goto	u2161
  5148   001C3E  EF23  F00E         	goto	u2160
  5149   001C42                     u2161:
  5150   001C42  EF28  F00E         	goto	l3675
  5151   001C46                     u2160:
  5152   001C46                     
  5153                           ;main.c: 1038:             WriteSTLED316SErr('1');
  5154   001C46  0E31               	movlw	49
  5155   001C48  EC01  F00F         	call	_WriteSTLED316SErr
  5156   001C4C                     
  5157                           ;main.c: 1039:             MotorBREAK();
  5158   001C4C  ECD0  F013         	call	_MotorBREAK	;wreg free
  5159   001C50                     l3675:
  5160                           
  5161                           ;main.c: 1042:     } while (IR_SENSORF != 0);
  5162   001C50  5011               	movf	_IR_SENSORF^0,w,c
  5163   001C52  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5164   001C54  A4D8               	btfss	status,2,c
  5165   001C56  EF2F  F00E         	goto	u2171
  5166   001C5A  EF31  F00E         	goto	u2170
  5167   001C5E                     u2171:
  5168   001C5E  EF12  F00E         	goto	l3667
  5169   001C62                     u2170:
  5170   001C62                     
  5171                           ;main.c: 1044:     _delay((unsigned long)((30)*(8000000/4000.0)));
  5172   001C62  0E4E               	movlw	78
  5173   001C64  6E45               	movwf	??_MotorPosition_Init^0,c
  5174   001C66  0EEB               	movlw	235
  5175   001C68                     u4407:
  5176   001C68  2EE8               	decfsz	wreg,f,c
  5177   001C6A  D7FE               	bra	u4407
  5178   001C6C  2E45               	decfsz	??_MotorPosition_Init^0,f,c
  5179   001C6E  D7FC               	bra	u4407
  5180   001C70  F000               	nop	
  5181   001C72                     
  5182                           ;main.c: 1045:     errorcounter = 30;
  5183   001C72  0E1E               	movlw	30
  5184   001C74  6E50               	movwf	_errorcounter^0,c	;volatile
  5185   001C76  0E00               	movlw	0
  5186   001C78  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5187   001C7A  0E00               	movlw	0
  5188   001C7C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5189   001C7E  0E00               	movlw	0
  5190   001C80  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5191   001C82                     l3681:
  5192                           
  5193                           ;main.c: 1047:         IR_SENSORF = Read_IR();
  5194   001C82  EC75  F013         	call	_Read_IR	;wreg free
  5195   001C86  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5196   001C8A  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5197   001C8E                     
  5198                           ;main.c: 1048:         if (errorcounter == 0) {
  5199   001C8E  5050               	movf	_errorcounter^0,w,c	;volatile
  5200   001C90  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5201   001C92  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5202   001C94  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5203   001C96  A4D8               	btfss	status,2,c
  5204   001C98  EF50  F00E         	goto	u2181
  5205   001C9C  EF52  F00E         	goto	u2180
  5206   001CA0                     u2181:
  5207   001CA0  EF57  F00E         	goto	l3689
  5208   001CA4                     u2180:
  5209   001CA4                     
  5210                           ;main.c: 1049:             WriteSTLED316SErr('2');
  5211   001CA4  0E32               	movlw	50
  5212   001CA6  EC01  F00F         	call	_WriteSTLED316SErr
  5213   001CAA                     
  5214                           ;main.c: 1050:             MotorBREAK();
  5215   001CAA  ECD0  F013         	call	_MotorBREAK	;wreg free
  5216   001CAE                     l3689:
  5217                           
  5218                           ;main.c: 1053:     } while (IR_SENSORF != 1);
  5219   001CAE  0411               	decf	_IR_SENSORF^0,w,c
  5220   001CB0  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5221   001CB2  A4D8               	btfss	status,2,c
  5222   001CB4  EF5E  F00E         	goto	u2191
  5223   001CB8  EF60  F00E         	goto	u2190
  5224   001CBC                     u2191:
  5225   001CBC  EF41  F00E         	goto	l3681
  5226   001CC0                     u2190:
  5227   001CC0                     
  5228                           ;main.c: 1055:     errorcounter = 30;
  5229   001CC0  0E1E               	movlw	30
  5230   001CC2  6E50               	movwf	_errorcounter^0,c	;volatile
  5231   001CC4  0E00               	movlw	0
  5232   001CC6  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5233   001CC8  0E00               	movlw	0
  5234   001CCA  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5235   001CCC  0E00               	movlw	0
  5236   001CCE  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5237   001CD0                     
  5238                           ;main.c: 1057:     delay_1ms(Motor_Stop_Delay_Time);
  5239   001CD0  C01F  F03C         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5240   001CD4  C020  F03D         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5241   001CD8  EC26  F013         	call	_delay_1ms	;wreg free
  5242   001CDC                     
  5243                           ;main.c: 1058:     MotorBREAK();
  5244   001CDC  ECD0  F013         	call	_MotorBREAK	;wreg free
  5245   001CE0                     
  5246                           ;main.c: 1059:     _delay((unsigned long)((500)*(8000000/4000.0)));
  5247   001CE0  0E06               	movlw	6
  5248   001CE2  6E46               	movwf	(??_MotorPosition_Init+1)^0,c
  5249   001CE4  0E13               	movlw	19
  5250   001CE6  6E45               	movwf	??_MotorPosition_Init^0,c
  5251   001CE8  0EAE               	movlw	174
  5252   001CEA                     u4417:
  5253   001CEA  2EE8               	decfsz	wreg,f,c
  5254   001CEC  D7FE               	bra	u4417
  5255   001CEE  2E45               	decfsz	??_MotorPosition_Init^0,f,c
  5256   001CF0  D7FC               	bra	u4417
  5257   001CF2  2E46               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  5258   001CF4  D7FA               	bra	u4417
  5259   001CF6                     
  5260                           ;main.c: 1060:     IR_SENSORF = 0;
  5261   001CF6  0E00               	movlw	0
  5262   001CF8  6E12               	movwf	(_IR_SENSORF+1)^0,c
  5263   001CFA  0E00               	movlw	0
  5264   001CFC  6E11               	movwf	_IR_SENSORF^0,c
  5265   001CFE                     
  5266                           ;main.c: 1062:     LATAbits.LATA2 = 0;
  5267   001CFE  9489               	bcf	137,2,c	;volatile
  5268   001D00  0012               	return		;funcret
  5269   001D02                     __end_of_MotorPosition_Init:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function _InitTimer1 *****************
  5273 ;; Defined at:
  5274 ;;		line 1393 in file "main.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text21
  5303   00270E                     __ptext21:
  5304                           	callstack 0
  5305   00270E                     _InitTimer1:
  5306                           	callstack 28
  5307   00270E                     
  5308                           ;main.c: 1394:     T1CON = 0b00110001;
  5309   00270E  0E31               	movlw	49
  5310   002710  6ECD               	movwf	205,c	;volatile
  5311                           
  5312                           ;main.c: 1397:     TMR1 = 0x9E57;
  5313   002712  0E9E               	movlw	158
  5314   002714  6ECF               	movwf	207,c	;volatile
  5315   002716  0E57               	movlw	87
  5316   002718  6ECE               	movwf	206,c	;volatile
  5317   00271A                     
  5318                           ;main.c: 1398:     TMR1IF = 0;
  5319   00271A  909E               	bcf	3998,0,c	;volatile
  5320   00271C                     
  5321                           ;main.c: 1399:     TMR1IE = 1;
  5322   00271C  809D               	bsf	3997,0,c	;volatile
  5323   00271E                     
  5324                           ;main.c: 1400:     IPR1bits.TMR1IP = 1;
  5325   00271E  809F               	bsf	159,0,c	;volatile
  5326                           
  5327                           ;main.c: 1402:     TMR1IF_triggered = 0;
  5328   002720  0E00               	movlw	0
  5329   002722  6E27               	movwf	_TMR1IF_triggered^0,c	;volatile
  5330   002724  0012               	return		;funcret
  5331   002726                     __end_of_InitTimer1:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _InitSTLED316 *****************
  5335 ;; Defined at:
  5336 ;;		line 14 in file "Display.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  Brightness      1    wreg     unsigned char 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  Brightness      1   16[COMRAM] unsigned char 
  5341 ;;  i               2    0        int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        3 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 3
  5358 ;; This function calls:
  5359 ;;		_STLED316s_SPI_SendData
  5360 ;; This function is called by:
  5361 ;;		_main
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text22
  5366   0021D2                     __ptext22:
  5367                           	callstack 0
  5368   0021D2                     _InitSTLED316:
  5369                           	callstack 27
  5370                           
  5371                           ;incstack = 0
  5372                           ;InitSTLED316@Brightness stored from wreg
  5373   0021D2  6E44               	movwf	InitSTLED316@Brightness^0,c
  5374   0021D4                     
  5375                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  5376   0021D4  888B               	bsf	139,4,c	;volatile
  5377                           
  5378                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  5379   0021D6  988B               	bcf	139,4,c	;volatile
  5380   0021D8                     
  5381                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  5382   0021D8  0E30               	movlw	48
  5383   0021DA  EC2F  F011         	call	_STLED316s_SPI_SendData
  5384   0021DE                     
  5385                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  5386   0021DE  888B               	bsf	139,4,c	;volatile
  5387   0021E0                     
  5388                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  5389   0021E0  988B               	bcf	139,4,c	;volatile
  5390                           
  5391                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  5392   0021E2  0E30               	movlw	48
  5393   0021E4  EC2F  F011         	call	_STLED316s_SPI_SendData
  5394                           
  5395                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  5396   0021E8  C044  F042         	movff	InitSTLED316@Brightness,??_InitSTLED316
  5397   0021EC  3A42               	swapf	??_InitSTLED316^0,f,c
  5398   0021EE  0E0F               	movlw	15
  5399   0021F0  1642               	andwf	??_InitSTLED316^0,f,c
  5400   0021F2  0E05               	movlw	5
  5401   0021F4  6E43               	movwf	(??_InitSTLED316+1)^0,c
  5402   0021F6                     u2155:
  5403   0021F6  90D8               	bcf	status,0,c
  5404   0021F8  3642               	rlcf	??_InitSTLED316^0,f,c
  5405   0021FA  2E43               	decfsz	(??_InitSTLED316+1)^0,f,c
  5406   0021FC  EFFB  F010         	goto	u2155
  5407   002200  5042               	movf	??_InitSTLED316^0,w,c
  5408   002202  0905               	iorlw	5
  5409   002204  EC2F  F011         	call	_STLED316s_SPI_SendData
  5410   002208                     
  5411                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  5412   002208  888B               	bsf	139,4,c	;volatile
  5413   00220A                     
  5414                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  5415   00220A  988B               	bcf	139,4,c	;volatile
  5416                           
  5417                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  5418   00220C  0E11               	movlw	17
  5419   00220E  EC2F  F011         	call	_STLED316s_SPI_SendData
  5420   002212                     
  5421                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  5422   002212  888B               	bsf	139,4,c	;volatile
  5423   002214                     
  5424                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  5425   002214  988B               	bcf	139,4,c	;volatile
  5426                           
  5427                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  5428   002216  0E11               	movlw	17
  5429   002218  EC2F  F011         	call	_STLED316s_SPI_SendData
  5430                           
  5431                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  5432   00221C  5044               	movf	InitSTLED316@Brightness^0,w,c
  5433   00221E  EC2F  F011         	call	_STLED316s_SPI_SendData
  5434                           
  5435                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  5436   002222  5044               	movf	InitSTLED316@Brightness^0,w,c
  5437   002224  EC2F  F011         	call	_STLED316s_SPI_SendData
  5438                           
  5439                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  5440   002228  5044               	movf	InitSTLED316@Brightness^0,w,c
  5441   00222A  EC2F  F011         	call	_STLED316s_SPI_SendData
  5442   00222E                     
  5443                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  5444   00222E  888B               	bsf	139,4,c	;volatile
  5445   002230                     
  5446                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  5447   002230  988B               	bcf	139,4,c	;volatile
  5448                           
  5449                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5450   002232  0E18               	movlw	24
  5451   002234  EC2F  F011         	call	_STLED316s_SPI_SendData
  5452   002238                     
  5453                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  5454   002238  888B               	bsf	139,4,c	;volatile
  5455   00223A                     
  5456                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  5457   00223A  988B               	bcf	139,4,c	;volatile
  5458                           
  5459                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  5460   00223C  0E18               	movlw	24
  5461   00223E  EC2F  F011         	call	_STLED316s_SPI_SendData
  5462                           
  5463                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  5464   002242  5044               	movf	InitSTLED316@Brightness^0,w,c
  5465   002244  EC2F  F011         	call	_STLED316s_SPI_SendData
  5466                           
  5467                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  5468   002248  5044               	movf	InitSTLED316@Brightness^0,w,c
  5469   00224A  EC2F  F011         	call	_STLED316s_SPI_SendData
  5470                           
  5471                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  5472   00224E  5044               	movf	InitSTLED316@Brightness^0,w,c
  5473   002250  EC2F  F011         	call	_STLED316s_SPI_SendData
  5474                           
  5475                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  5476   002254  5044               	movf	InitSTLED316@Brightness^0,w,c
  5477   002256  EC2F  F011         	call	_STLED316s_SPI_SendData
  5478   00225A                     
  5479                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  5480   00225A  888B               	bsf	139,4,c	;volatile
  5481   00225C  0012               	return		;funcret
  5482   00225E                     __end_of_InitSTLED316:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function _Homing_Again_Manual *****************
  5486 ;; Defined at:
  5487 ;;		line 1091 in file "main.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  NUMInit         2    0        int 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        2 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 4
  5508 ;; This function calls:
  5509 ;;		_AD_capture_BattVoltage
  5510 ;;		_MotorBREAK
  5511 ;;		_MotorON
  5512 ;;		_Read_IR
  5513 ;;		_WriteSTLED316SData
  5514 ;;		_WriteSTLED316SErr
  5515 ;;		_delay_1ms
  5516 ;;		_readWeighingData
  5517 ;; This function is called by:
  5518 ;;		_main
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text23
  5523   0012A4                     __ptext23:
  5524                           	callstack 0
  5525   0012A4                     _Homing_Again_Manual:
  5526                           	callstack 26
  5527   0012A4                     
  5528                           ;main.c: 1093:     while (NUM > 0 || i_RUN_ZERO == 1) {
  5529   0012A4  EF18  F00B         	goto	l3941
  5530   0012A8                     l3811:
  5531                           
  5532                           ;main.c: 1095:     if (vibration_mode == 1) {
  5533   0012A8  042E               	decf	_vibration_mode^0,w,c
  5534   0012AA  A4D8               	btfss	status,2,c
  5535   0012AC  EF5A  F009         	goto	u2311
  5536   0012B0  EF5C  F009         	goto	u2310
  5537   0012B4                     u2311:
  5538   0012B4  EF71  F009         	goto	l396
  5539   0012B8                     u2310:
  5540   0012B8                     
  5541                           ;main.c: 1096:         LATCbits.LATC1 = 1;
  5542   0012B8  828B               	bsf	139,1,c	;volatile
  5543   0012BA                     
  5544                           ;main.c: 1097:         delay_1ms(Vmotor_Time);
  5545   0012BA  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  5546   0012BE  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5547   0012C2  EC26  F013         	call	_delay_1ms	;wreg free
  5548   0012C6                     
  5549                           ;main.c: 1098:         LATCbits.LATC1 = 0;
  5550   0012C6  928B               	bcf	139,1,c	;volatile
  5551   0012C8                     l3819:
  5552                           
  5553                           ;main.c: 1099:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5554   0012C8  0E04               	movlw	4
  5555   0012CA  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5556   0012CC  0E0C               	movlw	12
  5557   0012CE  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5558   0012D0  0E34               	movlw	52
  5559   0012D2                     u4427:
  5560   0012D2  2EE8               	decfsz	wreg,f,c
  5561   0012D4  D7FE               	bra	u4427
  5562   0012D6  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5563   0012D8  D7FC               	bra	u4427
  5564   0012DA  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5565   0012DC  D7FA               	bra	u4427
  5566                           
  5567                           ;main.c: 1100:     } else {
  5568   0012DE  EF74  F009         	goto	l3823
  5569   0012E2                     l396:
  5570                           
  5571                           ;main.c: 1101:         LATCbits.LATC1 = 0;
  5572   0012E2  928B               	bcf	139,1,c	;volatile
  5573   0012E4  EF64  F009         	goto	l3819
  5574   0012E8                     l3823:
  5575                           
  5576                           ;main.c: 1105:     LATAbits.LATA2 = 1;
  5577   0012E8  8489               	bsf	137,2,c	;volatile
  5578   0012EA                     
  5579                           ;main.c: 1108:     if (NUM == 0) {
  5580   0012EA  5019               	movf	_NUM^0,w,c
  5581   0012EC  101A               	iorwf	(_NUM+1)^0,w,c
  5582   0012EE  A4D8               	btfss	status,2,c
  5583   0012F0  EF7C  F009         	goto	u2321
  5584   0012F4  EF7E  F009         	goto	u2320
  5585   0012F8                     u2321:
  5586   0012F8  EF84  F009         	goto	l3831
  5587   0012FC                     u2320:
  5588   0012FC                     
  5589                           ;main.c: 1109:         i_RUN_ZERO = 1;
  5590   0012FC  0E00               	movlw	0
  5591   0012FE  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  5592   001300  0E01               	movlw	1
  5593   001302  6E17               	movwf	_i_RUN_ZERO^0,c
  5594                           
  5595                           ;main.c: 1110:     }
  5596   001304  EF88  F009         	goto	l399
  5597   001308                     l3831:
  5598                           
  5599                           ;main.c: 1112:     {;main.c: 1113:         i_RUN_ZERO = 0;
  5600   001308  0E00               	movlw	0
  5601   00130A  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  5602   00130C  0E00               	movlw	0
  5603   00130E  6E17               	movwf	_i_RUN_ZERO^0,c
  5604   001310                     l399:
  5605   001310  0004               	clrwdt		;# 
  5606   001312                     
  5607                           ;main.c: 1119:         readWeighingData();
  5608   001312  EC0F  F012         	call	_readWeighingData	;wreg free
  5609   001316                     
  5610                           ;main.c: 1120:         AD_capture_BattVoltage();
  5611   001316  EC80  F012         	call	_AD_capture_BattVoltage	;wreg free
  5612   00131A                     
  5613                           ;main.c: 1121:         delay_1ms(Motor_Pause_Time);
  5614   00131A  C01B  F03C         	movff	_Motor_Pause_Time,delay_1ms@time
  5615   00131E  C01C  F03D         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5616   001322  EC26  F013         	call	_delay_1ms	;wreg free
  5617   001326                     
  5618                           ;main.c: 1122:         MotorON();
  5619   001326  ECCB  F013         	call	_MotorON	;wreg free
  5620   00132A                     
  5621                           ;main.c: 1124:         _delay((unsigned long)((150)*(8000000/4000.0)));
  5622   00132A  0E02               	movlw	2
  5623   00132C  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5624   00132E  0E86               	movlw	134
  5625   001330  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5626   001332  0E99               	movlw	153
  5627   001334                     u4437:
  5628   001334  2EE8               	decfsz	wreg,f,c
  5629   001336  D7FE               	bra	u4437
  5630   001338  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5631   00133A  D7FC               	bra	u4437
  5632   00133C  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5633   00133E  D7FA               	bra	u4437
  5634   001340  F000               	nop	
  5635   001342                     
  5636                           ;main.c: 1125:         errorcounter = 30;
  5637   001342  0E1E               	movlw	30
  5638   001344  6E50               	movwf	_errorcounter^0,c	;volatile
  5639   001346  0E00               	movlw	0
  5640   001348  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5641   00134A  0E00               	movlw	0
  5642   00134C  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5643   00134E  0E00               	movlw	0
  5644   001350  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5645   001352                     l3845:
  5646                           
  5647                           ;main.c: 1129:             IR_SENSORF = Read_IR();
  5648   001352  EC75  F013         	call	_Read_IR	;wreg free
  5649   001356  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5650   00135A  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5651   00135E                     
  5652                           ;main.c: 1130:             if (errorcounter == 0) {
  5653   00135E  5050               	movf	_errorcounter^0,w,c	;volatile
  5654   001360  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5655   001362  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5656   001364  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5657   001366  A4D8               	btfss	status,2,c
  5658   001368  EFB8  F009         	goto	u2331
  5659   00136C  EFBA  F009         	goto	u2330
  5660   001370                     u2331:
  5661   001370  EFBF  F009         	goto	l3853
  5662   001374                     u2330:
  5663   001374                     
  5664                           ;main.c: 1131:                 WriteSTLED316SErr('1');
  5665   001374  0E31               	movlw	49
  5666   001376  EC01  F00F         	call	_WriteSTLED316SErr
  5667   00137A                     
  5668                           ;main.c: 1132:                 MotorBREAK();
  5669   00137A  ECD0  F013         	call	_MotorBREAK	;wreg free
  5670   00137E                     l3853:
  5671                           
  5672                           ;main.c: 1135:         } while (IR_SENSORF != 0);
  5673   00137E  5011               	movf	_IR_SENSORF^0,w,c
  5674   001380  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5675   001382  A4D8               	btfss	status,2,c
  5676   001384  EFC6  F009         	goto	u2341
  5677   001388  EFC8  F009         	goto	u2340
  5678   00138C                     u2341:
  5679   00138C  EFA9  F009         	goto	l3845
  5680   001390                     u2340:
  5681   001390                     
  5682                           ;main.c: 1137:         _delay((unsigned long)((30)*(8000000/4000.0)));
  5683   001390  0E4E               	movlw	78
  5684   001392  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5685   001394  0EEB               	movlw	235
  5686   001396                     u4447:
  5687   001396  2EE8               	decfsz	wreg,f,c
  5688   001398  D7FE               	bra	u4447
  5689   00139A  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5690   00139C  D7FC               	bra	u4447
  5691   00139E  F000               	nop	
  5692   0013A0                     
  5693                           ;main.c: 1139:         errorcounter = 30;
  5694   0013A0  0E1E               	movlw	30
  5695   0013A2  6E50               	movwf	_errorcounter^0,c	;volatile
  5696   0013A4  0E00               	movlw	0
  5697   0013A6  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5698   0013A8  0E00               	movlw	0
  5699   0013AA  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5700   0013AC  0E00               	movlw	0
  5701   0013AE  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5702   0013B0                     l3859:
  5703                           
  5704                           ;main.c: 1142:             IR_SENSORF = Read_IR();
  5705   0013B0  EC75  F013         	call	_Read_IR	;wreg free
  5706   0013B4  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  5707   0013B8  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  5708   0013BC                     
  5709                           ;main.c: 1143:             if (errorcounter == 0) {
  5710   0013BC  5050               	movf	_errorcounter^0,w,c	;volatile
  5711   0013BE  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5712   0013C0  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5713   0013C2  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5714   0013C4  A4D8               	btfss	status,2,c
  5715   0013C6  EFE7  F009         	goto	u2351
  5716   0013CA  EFE9  F009         	goto	u2350
  5717   0013CE                     u2351:
  5718   0013CE  EFEE  F009         	goto	l3867
  5719   0013D2                     u2350:
  5720   0013D2                     
  5721                           ;main.c: 1144:                 WriteSTLED316SErr('2');
  5722   0013D2  0E32               	movlw	50
  5723   0013D4  EC01  F00F         	call	_WriteSTLED316SErr
  5724   0013D8                     
  5725                           ;main.c: 1145:                 MotorBREAK();
  5726   0013D8  ECD0  F013         	call	_MotorBREAK	;wreg free
  5727   0013DC                     l3867:
  5728                           
  5729                           ;main.c: 1147:         } while (IR_SENSORF != 1);
  5730   0013DC  0411               	decf	_IR_SENSORF^0,w,c
  5731   0013DE  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  5732   0013E0  A4D8               	btfss	status,2,c
  5733   0013E2  EFF5  F009         	goto	u2361
  5734   0013E6  EFF7  F009         	goto	u2360
  5735   0013EA                     u2361:
  5736   0013EA  EFD8  F009         	goto	l3859
  5737   0013EE                     u2360:
  5738   0013EE                     
  5739                           ;main.c: 1150:         errorcounter = 30;
  5740   0013EE  0E1E               	movlw	30
  5741   0013F0  6E50               	movwf	_errorcounter^0,c	;volatile
  5742   0013F2  0E00               	movlw	0
  5743   0013F4  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  5744   0013F6  0E00               	movlw	0
  5745   0013F8  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  5746   0013FA  0E00               	movlw	0
  5747   0013FC  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  5748   0013FE                     
  5749                           ;main.c: 1151:         delay_1ms(Motor_Stop_Delay_Time);
  5750   0013FE  C01F  F03C         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5751   001402  C020  F03D         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5752   001406  EC26  F013         	call	_delay_1ms	;wreg free
  5753   00140A                     
  5754                           ;main.c: 1152:         MotorBREAK();
  5755   00140A  ECD0  F013         	call	_MotorBREAK	;wreg free
  5756                           
  5757                           ;main.c: 1163:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  5758   00140E  042E               	decf	_vibration_mode^0,w,c
  5759   001410  A4D8               	btfss	status,2,c
  5760   001412  EF0D  F00A         	goto	u2371
  5761   001416  EF0F  F00A         	goto	u2370
  5762   00141A                     u2371:
  5763   00141A  EF36  F00A         	goto	l3885
  5764   00141E                     u2370:
  5765   00141E  5019               	movf	_NUM^0,w,c
  5766   001420  101A               	iorwf	(_NUM+1)^0,w,c
  5767   001422  A4D8               	btfss	status,2,c
  5768   001424  EF16  F00A         	goto	u2381
  5769   001428  EF18  F00A         	goto	u2380
  5770   00142C                     u2381:
  5771   00142C  EF21  F00A         	goto	l408
  5772   001430                     u2380:
  5773   001430  0417               	decf	_i_RUN_ZERO^0,w,c
  5774   001432  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5775   001434  A4D8               	btfss	status,2,c
  5776   001436  EF1F  F00A         	goto	u2391
  5777   00143A  EF21  F00A         	goto	u2390
  5778   00143E                     u2391:
  5779   00143E  EF36  F00A         	goto	l3885
  5780   001442                     u2390:
  5781   001442                     l408:
  5782                           
  5783                           ;main.c: 1164:             LATCbits.LATC1 = 1;
  5784   001442  828B               	bsf	139,1,c	;volatile
  5785   001444                     
  5786                           ;main.c: 1165:             delay_1ms(Vmotor_Time);
  5787   001444  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  5788   001448  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5789   00144C  EC26  F013         	call	_delay_1ms	;wreg free
  5790   001450                     
  5791                           ;main.c: 1166:             LATCbits.LATC1 = 0;
  5792   001450  928B               	bcf	139,1,c	;volatile
  5793   001452                     
  5794                           ;main.c: 1167:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5795   001452  0E04               	movlw	4
  5796   001454  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5797   001456  0E0C               	movlw	12
  5798   001458  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5799   00145A  0E34               	movlw	52
  5800   00145C                     u4457:
  5801   00145C  2EE8               	decfsz	wreg,f,c
  5802   00145E  D7FE               	bra	u4457
  5803   001460  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5804   001462  D7FC               	bra	u4457
  5805   001464  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5806   001466  D7FA               	bra	u4457
  5807                           
  5808                           ;main.c: 1169:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) 
      +                          {
  5809   001468  EF76  F00A         	goto	l3899
  5810   00146C                     l3885:
  5811   00146C  502E               	movf	_vibration_mode^0,w,c
  5812   00146E  A4D8               	btfss	status,2,c
  5813   001470  EF3C  F00A         	goto	u2401
  5814   001474  EF3E  F00A         	goto	u2400
  5815   001478                     u2401:
  5816   001478  EF76  F00A         	goto	l3899
  5817   00147C                     u2400:
  5818   00147C  5019               	movf	_NUM^0,w,c
  5819   00147E  101A               	iorwf	(_NUM+1)^0,w,c
  5820   001480  A4D8               	btfss	status,2,c
  5821   001482  EF45  F00A         	goto	u2411
  5822   001486  EF47  F00A         	goto	u2410
  5823   00148A                     u2411:
  5824   00148A  EF50  F00A         	goto	l412
  5825   00148E                     u2410:
  5826   00148E  0417               	decf	_i_RUN_ZERO^0,w,c
  5827   001490  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5828   001492  A4D8               	btfss	status,2,c
  5829   001494  EF4E  F00A         	goto	u2421
  5830   001498  EF50  F00A         	goto	u2420
  5831   00149C                     u2421:
  5832   00149C  EF76  F00A         	goto	l3899
  5833   0014A0                     u2420:
  5834   0014A0                     l412:
  5835                           
  5836                           ;main.c: 1170:             LATCbits.LATC1 = 0;
  5837   0014A0  928B               	bcf	139,1,c	;volatile
  5838   0014A2                     
  5839                           ;main.c: 1171:             if (NUM != 0 || i_RUN_ZERO == 1) {
  5840   0014A2  5019               	movf	_NUM^0,w,c
  5841   0014A4  101A               	iorwf	(_NUM+1)^0,w,c
  5842   0014A6  A4D8               	btfss	status,2,c
  5843   0014A8  EF58  F00A         	goto	u2431
  5844   0014AC  EF5A  F00A         	goto	u2430
  5845   0014B0                     u2431:
  5846   0014B0  EF63  F00A         	goto	l3895
  5847   0014B4                     u2430:
  5848   0014B4  0417               	decf	_i_RUN_ZERO^0,w,c
  5849   0014B6  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5850   0014B8  A4D8               	btfss	status,2,c
  5851   0014BA  EF61  F00A         	goto	u2441
  5852   0014BE  EF63  F00A         	goto	u2440
  5853   0014C2                     u2441:
  5854   0014C2  EF6B  F00A         	goto	l3897
  5855   0014C6                     u2440:
  5856   0014C6                     l3895:
  5857                           
  5858                           ;main.c: 1172:                 delay_1ms(Vmotor_Time);
  5859   0014C6  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  5860   0014CA  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5861   0014CE  EC26  F013         	call	_delay_1ms	;wreg free
  5862                           
  5863                           ;main.c: 1173:             } else {
  5864   0014D2  EF76  F00A         	goto	l3899
  5865   0014D6                     l3897:
  5866                           
  5867                           ;main.c: 1174:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  5868   0014D6  0E06               	movlw	6
  5869   0014D8  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5870   0014DA  0E13               	movlw	19
  5871   0014DC  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5872   0014DE  0EAE               	movlw	174
  5873   0014E0                     u4467:
  5874   0014E0  2EE8               	decfsz	wreg,f,c
  5875   0014E2  D7FE               	bra	u4467
  5876   0014E4  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5877   0014E6  D7FC               	bra	u4467
  5878   0014E8  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5879   0014EA  D7FA               	bra	u4467
  5880   0014EC                     l3899:
  5881                           
  5882                           ;main.c: 1181:         if (NUM > 0 && i_RUN_ZERO != 1) {
  5883   0014EC  5019               	movf	_NUM^0,w,c
  5884   0014EE  101A               	iorwf	(_NUM+1)^0,w,c
  5885   0014F0  B4D8               	btfsc	status,2,c
  5886   0014F2  EF7D  F00A         	goto	u2451
  5887   0014F6  EF7F  F00A         	goto	u2450
  5888   0014FA                     u2451:
  5889   0014FA  EF8B  F00A         	goto	l3905
  5890   0014FE                     u2450:
  5891   0014FE  0417               	decf	_i_RUN_ZERO^0,w,c
  5892   001500  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5893   001502  B4D8               	btfsc	status,2,c
  5894   001504  EF86  F00A         	goto	u2461
  5895   001508  EF88  F00A         	goto	u2460
  5896   00150C                     u2461:
  5897   00150C  EF8B  F00A         	goto	l3905
  5898   001510                     u2460:
  5899   001510                     
  5900                           ;main.c: 1182:             NUM--;
  5901   001510  0619               	decf	_NUM^0,f,c
  5902   001512  A0D8               	btfss	status,0,c
  5903   001514  061A               	decf	(_NUM+1)^0,f,c
  5904   001516                     l3905:
  5905                           
  5906                           ;main.c: 1185:         WriteSTLED316SData(NUM, vibration_mode);
  5907   001516  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  5908   00151A  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  5909   00151E  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5910   001522  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  5911   001526                     
  5912                           ;main.c: 1191:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  5913   001526  0E15               	movlw	21
  5914   001528  6E4E               	movwf	(??_Homing_Again_Manual+1)^0,c
  5915   00152A  0E4B               	movlw	75
  5916   00152C  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5917   00152E  0EBE               	movlw	190
  5918   001530                     u4477:
  5919   001530  2EE8               	decfsz	wreg,f,c
  5920   001532  D7FE               	bra	u4477
  5921   001534  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5922   001536  D7FC               	bra	u4477
  5923   001538  2E4E               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  5924   00153A  D7FA               	bra	u4477
  5925   00153C  D000               	nop2	
  5926   00153E                     
  5927                           ;main.c: 1199:         if (Stop == 1)
  5928   00153E  0431               	decf	_Stop^0,w,c
  5929   001540  A4D8               	btfss	status,2,c
  5930   001542  EFA5  F00A         	goto	u2471
  5931   001546  EFA7  F00A         	goto	u2470
  5932   00154A                     u2471:
  5933   00154A  EFD4  F00A         	goto	l3923
  5934   00154E                     u2470:
  5935   00154E  EF2A  F00B         	goto	l419
  5936   001552                     l3913:
  5937                           
  5938                           ;main.c: 1214:             i_RUN_ZERO = 2;
  5939   001552  0E00               	movlw	0
  5940   001554  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  5941   001556  0E02               	movlw	2
  5942   001558  6E17               	movwf	_i_RUN_ZERO^0,c
  5943   00155A                     
  5944                           ;main.c: 1215:             WriteSTLED316SData(NUM, !vibration_mode);
  5945   00155A  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  5946   00155E  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  5947   001562  502E               	movf	_vibration_mode^0,w,c
  5948   001564  B4D8               	btfsc	status,2,c
  5949   001566  EFB7  F00A         	goto	u2481
  5950   00156A  EFBA  F00A         	goto	u2480
  5951   00156E                     u2481:
  5952   00156E  0E01               	movlw	1
  5953   001570  EFBB  F00A         	goto	u2490
  5954   001574                     u2480:
  5955   001574  0E00               	movlw	0
  5956   001576                     u2490:
  5957   001576  6E46               	movwf	WriteSTLED316SData@v_mode^0,c
  5958   001578  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  5959   00157C                     
  5960                           ;main.c: 1216:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5961   00157C  0E82               	movlw	130
  5962   00157E  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5963   001580  0EDE               	movlw	222
  5964   001582                     u4487:
  5965   001582  2EE8               	decfsz	wreg,f,c
  5966   001584  D7FE               	bra	u4487
  5967   001586  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5968   001588  D7FC               	bra	u4487
  5969   00158A                     
  5970                           ;main.c: 1217:             WriteSTLED316SData(NUM, vibration_mode);
  5971   00158A  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  5972   00158E  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  5973   001592  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  5974   001596  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  5975   00159A                     
  5976                           ;main.c: 1218:             _delay((unsigned long)((50)*(8000000/4000.0)));
  5977   00159A  0E82               	movlw	130
  5978   00159C  6E4D               	movwf	??_Homing_Again_Manual^0,c
  5979   00159E  0EDE               	movlw	222
  5980   0015A0                     u4497:
  5981   0015A0  2EE8               	decfsz	wreg,f,c
  5982   0015A2  D7FE               	bra	u4497
  5983   0015A4  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  5984   0015A6  D7FC               	bra	u4497
  5985   0015A8                     l3923:
  5986                           
  5987                           ;main.c: 1213:         while (dispense == 0 && (i_RUN_ZERO == 1 || i_RUN_ZERO == 0)) {
  5988   0015A8  5009               	movf	_dispense^0,w,c
  5989   0015AA  100A               	iorwf	(_dispense+1)^0,w,c
  5990   0015AC  A4D8               	btfss	status,2,c
  5991   0015AE  EFDB  F00A         	goto	u2501
  5992   0015B2  EFDD  F00A         	goto	u2500
  5993   0015B6                     u2501:
  5994   0015B6  EFEF  F00A         	goto	l3929
  5995   0015BA                     u2500:
  5996   0015BA  0417               	decf	_i_RUN_ZERO^0,w,c
  5997   0015BC  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  5998   0015BE  B4D8               	btfsc	status,2,c
  5999   0015C0  EFE4  F00A         	goto	u2511
  6000   0015C4  EFE6  F00A         	goto	u2510
  6001   0015C8                     u2511:
  6002   0015C8  EFA9  F00A         	goto	l3913
  6003   0015CC                     u2510:
  6004   0015CC  5017               	movf	_i_RUN_ZERO^0,w,c
  6005   0015CE  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  6006   0015D0  B4D8               	btfsc	status,2,c
  6007   0015D2  EFED  F00A         	goto	u2521
  6008   0015D6  EFEF  F00A         	goto	u2520
  6009   0015DA                     u2521:
  6010   0015DA  EFA9  F00A         	goto	l3913
  6011   0015DE                     u2520:
  6012   0015DE                     l3929:
  6013                           
  6014                           ;main.c: 1225:         WriteSTLED316SData(NUM, vibration_mode);
  6015   0015DE  C019  F044         	movff	_NUM,WriteSTLED316SData@number
  6016   0015E2  C01A  F045         	movff	_NUM+1,WriteSTLED316SData@number+1
  6017   0015E6  C02E  F046         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  6018   0015EA  EC95  F010         	call	_WriteSTLED316SData	;wreg free
  6019   0015EE                     
  6020                           ;main.c: 1227:         if(dispense == 0 && NUM != 0)
  6021   0015EE  5009               	movf	_dispense^0,w,c
  6022   0015F0  100A               	iorwf	(_dispense+1)^0,w,c
  6023   0015F2  A4D8               	btfss	status,2,c
  6024   0015F4  EFFE  F00A         	goto	u2531
  6025   0015F8  EF00  F00B         	goto	u2530
  6026   0015FC                     u2531:
  6027   0015FC  EF11  F00B         	goto	l3939
  6028   001600                     u2530:
  6029   001600  5019               	movf	_NUM^0,w,c
  6030   001602  101A               	iorwf	(_NUM+1)^0,w,c
  6031   001604  B4D8               	btfsc	status,2,c
  6032   001606  EF07  F00B         	goto	u2541
  6033   00160A  EF09  F00B         	goto	u2540
  6034   00160E                     u2541:
  6035   00160E  EF11  F00B         	goto	l3939
  6036   001612                     u2540:
  6037   001612                     
  6038                           ;main.c: 1228:         {;main.c: 1229:             NUM_REC = NUM;
  6039   001612  C019  F015         	movff	_NUM,_NUM_REC
  6040   001616  C01A  F016         	movff	_NUM+1,_NUM_REC+1
  6041   00161A                     
  6042                           ;main.c: 1230:             NUM = 0;
  6043   00161A  0E00               	movlw	0
  6044   00161C  6E1A               	movwf	(_NUM+1)^0,c
  6045   00161E  0E00               	movlw	0
  6046   001620  6E19               	movwf	_NUM^0,c
  6047   001622                     l3939:
  6048                           
  6049                           ;main.c: 1232:         _delay((unsigned long)((50)*(8000000/4000.0)));
  6050   001622  0E82               	movlw	130
  6051   001624  6E4D               	movwf	??_Homing_Again_Manual^0,c
  6052   001626  0EDE               	movlw	222
  6053   001628                     u4507:
  6054   001628  2EE8               	decfsz	wreg,f,c
  6055   00162A  D7FE               	bra	u4507
  6056   00162C  2E4D               	decfsz	??_Homing_Again_Manual^0,f,c
  6057   00162E  D7FC               	bra	u4507
  6058   001630                     l3941:
  6059                           
  6060                           ;main.c: 1093:     while (NUM > 0 || i_RUN_ZERO == 1) {
  6061   001630  5019               	movf	_NUM^0,w,c
  6062   001632  101A               	iorwf	(_NUM+1)^0,w,c
  6063   001634  A4D8               	btfss	status,2,c
  6064   001636  EF1F  F00B         	goto	u2551
  6065   00163A  EF21  F00B         	goto	u2550
  6066   00163E                     u2551:
  6067   00163E  EF54  F009         	goto	l3811
  6068   001642                     u2550:
  6069   001642  0417               	decf	_i_RUN_ZERO^0,w,c
  6070   001644  1018               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  6071   001646  B4D8               	btfsc	status,2,c
  6072   001648  EF28  F00B         	goto	u2561
  6073   00164C  EF2A  F00B         	goto	u2560
  6074   001650                     u2561:
  6075   001650  EF54  F009         	goto	l3811
  6076   001654                     u2560:
  6077   001654                     l419:
  6078                           
  6079                           ;main.c: 1236:     LATAbits.LATA2 = 0;
  6080   001654  9489               	bcf	137,2,c	;volatile
  6081   001656                     
  6082                           ;main.c: 1252:     i_RUN_ZERO = 0;
  6083   001656  0E00               	movlw	0
  6084   001658  6E18               	movwf	(_i_RUN_ZERO+1)^0,c
  6085   00165A  0E00               	movlw	0
  6086   00165C  6E17               	movwf	_i_RUN_ZERO^0,c
  6087                           
  6088                           ;main.c: 1253:     NUM = 0;
  6089   00165E  0E00               	movlw	0
  6090   001660  6E1A               	movwf	(_NUM+1)^0,c
  6091   001662  0E00               	movlw	0
  6092   001664  6E19               	movwf	_NUM^0,c
  6093                           
  6094                           ;main.c: 1255:     dispense = 0;
  6095   001666  0E00               	movlw	0
  6096   001668  6E0A               	movwf	(_dispense+1)^0,c
  6097   00166A  0E00               	movlw	0
  6098   00166C  6E09               	movwf	_dispense^0,c
  6099                           
  6100                           ;main.c: 1256:     OpMode = MANUAL_MODE;
  6101   00166E  0E00               	movlw	0
  6102   001670  6E2C               	movwf	_OpMode^0,c	;volatile
  6103   001672  0012               	return		;funcret
  6104   001674                     __end_of_Homing_Again_Manual:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function _WriteSTLED316SData *****************
  6108 ;; Defined at:
  6109 ;;		line 145 in file "Display.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  number          2   16[COMRAM] int 
  6112 ;;  v_mode          1   18[COMRAM] unsigned char 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  NUM_DIG1        2   21[COMRAM] int 
  6115 ;;  NUM_DIG0        2   19[COMRAM] int 
  6116 ;;  data4           1   24[COMRAM] unsigned char 
  6117 ;;  data3           1   23[COMRAM] unsigned char 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;Total ram usage:        9 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 3
  6134 ;; This function calls:
  6135 ;;		_Get7Seg
  6136 ;;		_STLED316s_SPI_SendData
  6137 ;;		___awdiv
  6138 ;;		___awmod
  6139 ;; This function is called by:
  6140 ;;		_main
  6141 ;;		_Homing_Again_Manual
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text24
  6146   00212A                     __ptext24:
  6147                           	callstack 0
  6148   00212A                     _WriteSTLED316SData:
  6149                           	callstack 27
  6150   00212A                     
  6151                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  6152   00212A  C044  F03C         	movff	WriteSTLED316SData@number,___awmod@dividend
  6153   00212E  C045  F03D         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  6154   002132  0E00               	movlw	0
  6155   002134  6E3F               	movwf	(___awmod@divisor+1)^0,c
  6156   002136  0E0A               	movlw	10
  6157   002138  6E3E               	movwf	___awmod@divisor^0,c
  6158   00213A  EC3D  F010         	call	___awmod	;wreg free
  6159   00213E  C03C  F047         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  6160   002142  C03D  F048         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  6161                           
  6162                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  6163   002146  C044  F03C         	movff	WriteSTLED316SData@number,___awdiv@dividend
  6164   00214A  C045  F03D         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  6165   00214E  0E00               	movlw	0
  6166   002150  6E3F               	movwf	(___awdiv@divisor+1)^0,c
  6167   002152  0E0A               	movlw	10
  6168   002154  6E3E               	movwf	___awdiv@divisor^0,c
  6169   002156  ECDB  F00F         	call	___awdiv	;wreg free
  6170   00215A  C03C  F049         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  6171   00215E  C03D  F04A         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  6172   002162                     
  6173                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  6174   002162  988B               	bcf	139,4,c	;volatile
  6175                           
  6176                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  6177   002164  0E00               	movlw	0
  6178   002166  EC2F  F011         	call	_STLED316s_SPI_SendData
  6179   00216A                     
  6180                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  6181   00216A  888B               	bsf	139,4,c	;volatile
  6182   00216C                     
  6183                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  6184   00216C  988B               	bcf	139,4,c	;volatile
  6185                           
  6186                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  6187   00216E  0E00               	movlw	0
  6188   002170  EC2F  F011         	call	_STLED316s_SPI_SendData
  6189                           
  6190                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  6191   002174  C049  F03C         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  6192   002178  C04A  F03D         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  6193   00217C  EC75  F00F         	call	_Get7Seg	;wreg free
  6194   002180  6E4C               	movwf	WriteSTLED316SData@data4^0,c
  6195                           
  6196                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  6197   002182  C047  F03C         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  6198   002186  C048  F03D         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  6199   00218A  EC75  F00F         	call	_Get7Seg	;wreg free
  6200   00218E  6E4B               	movwf	WriteSTLED316SData@data3^0,c
  6201   002190                     
  6202                           ;Display.c: 165:     if (v_mode) {
  6203   002190  5046               	movf	WriteSTLED316SData@v_mode^0,w,c
  6204   002192  B4D8               	btfsc	status,2,c
  6205   002194  EFCE  F010         	goto	u2081
  6206   002198  EFD0  F010         	goto	u2080
  6207   00219C                     u2081:
  6208   00219C  EFDC  F010         	goto	l3401
  6209   0021A0                     u2080:
  6210   0021A0                     
  6211                           ;Display.c: 166:         if (v_mode == 0xFF)
  6212   0021A0  2846               	incf	WriteSTLED316SData@v_mode^0,w,c
  6213   0021A2  A4D8               	btfss	status,2,c
  6214   0021A4  EFD6  F010         	goto	u2091
  6215   0021A8  EFD8  F010         	goto	u2090
  6216   0021AC                     u2091:
  6217   0021AC  EFDB  F010         	goto	l3399
  6218   0021B0                     u2090:
  6219   0021B0                     
  6220                           ;Display.c: 167:             data4 |= 0x80;
  6221   0021B0  8E4C               	bsf	WriteSTLED316SData@data4^0,7,c
  6222   0021B2  EFDC  F010         	goto	l3401
  6223   0021B6                     l3399:
  6224                           
  6225                           ;Display.c: 169:             data3 |= 0x80;
  6226   0021B6  8E4B               	bsf	WriteSTLED316SData@data3^0,7,c
  6227   0021B8                     l3401:
  6228                           
  6229                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  6230   0021B8  504C               	movf	WriteSTLED316SData@data4^0,w,c
  6231   0021BA  EC2F  F011         	call	_STLED316s_SPI_SendData
  6232   0021BE                     
  6233                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  6234   0021BE  504B               	movf	WriteSTLED316SData@data3^0,w,c
  6235   0021C0  EC2F  F011         	call	_STLED316s_SPI_SendData
  6236   0021C4                     
  6237                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  6238   0021C4  888B               	bsf	139,4,c	;volatile
  6239   0021C6                     
  6240                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  6241   0021C6  988B               	bcf	139,4,c	;volatile
  6242   0021C8                     
  6243                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  6244   0021C8  0E0D               	movlw	13
  6245   0021CA  EC2F  F011         	call	_STLED316s_SPI_SendData
  6246   0021CE                     
  6247                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  6248   0021CE  888B               	bsf	139,4,c	;volatile
  6249   0021D0  0012               	return		;funcret
  6250   0021D2                     __end_of_WriteSTLED316SData:
  6251                           	callstack 0
  6252                           
  6253 ;; *************** function ___awmod *****************
  6254 ;; Defined at:
  6255 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  dividend        2    8[COMRAM] int 
  6258 ;;  divisor         2   10[COMRAM] int 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  sign            1   13[COMRAM] unsigned char 
  6261 ;;  counter         1   12[COMRAM] unsigned char 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  2    8[COMRAM] int 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;Total ram usage:        6 bytes
  6276 ;; Hardware stack levels used: 1
  6277 ;; Hardware stack levels required when called: 2
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_WriteSTLED316SData
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text25
  6286   00207A                     __ptext25:
  6287                           	callstack 0
  6288   00207A                     ___awmod:
  6289                           	callstack 27
  6290   00207A  0E00               	movlw	0
  6291   00207C  6E41               	movwf	___awmod@sign^0,c
  6292   00207E  BE3D               	btfsc	(___awmod@dividend+1)^0,7,c
  6293   002080  EF46  F010         	goto	u2020
  6294   002084  EF44  F010         	goto	u2021
  6295   002088                     u2021:
  6296   002088  EF4C  F010         	goto	l3357
  6297   00208C                     u2020:
  6298   00208C  6C3C               	negf	___awmod@dividend^0,c
  6299   00208E  1E3D               	comf	(___awmod@dividend+1)^0,f,c
  6300   002090  B0D8               	btfsc	status,0,c
  6301   002092  2A3D               	incf	(___awmod@dividend+1)^0,f,c
  6302   002094  0E01               	movlw	1
  6303   002096  6E41               	movwf	___awmod@sign^0,c
  6304   002098                     l3357:
  6305   002098  BE3F               	btfsc	(___awmod@divisor+1)^0,7,c
  6306   00209A  EF53  F010         	goto	u2030
  6307   00209E  EF51  F010         	goto	u2031
  6308   0020A2                     u2031:
  6309   0020A2  EF57  F010         	goto	l3361
  6310   0020A6                     u2030:
  6311   0020A6  6C3E               	negf	___awmod@divisor^0,c
  6312   0020A8  1E3F               	comf	(___awmod@divisor+1)^0,f,c
  6313   0020AA  B0D8               	btfsc	status,0,c
  6314   0020AC  2A3F               	incf	(___awmod@divisor+1)^0,f,c
  6315   0020AE                     l3361:
  6316   0020AE  503E               	movf	___awmod@divisor^0,w,c
  6317   0020B0  103F               	iorwf	(___awmod@divisor+1)^0,w,c
  6318   0020B2  B4D8               	btfsc	status,2,c
  6319   0020B4  EF5E  F010         	goto	u2041
  6320   0020B8  EF60  F010         	goto	u2040
  6321   0020BC                     u2041:
  6322   0020BC  EF84  F010         	goto	l3377
  6323   0020C0                     u2040:
  6324   0020C0  0E01               	movlw	1
  6325   0020C2  6E40               	movwf	___awmod@counter^0,c
  6326   0020C4  EF68  F010         	goto	l3367
  6327   0020C8                     l3365:
  6328   0020C8  90D8               	bcf	status,0,c
  6329   0020CA  363E               	rlcf	___awmod@divisor^0,f,c
  6330   0020CC  363F               	rlcf	(___awmod@divisor+1)^0,f,c
  6331   0020CE  2A40               	incf	___awmod@counter^0,f,c
  6332   0020D0                     l3367:
  6333   0020D0  AE3F               	btfss	(___awmod@divisor+1)^0,7,c
  6334   0020D2  EF6D  F010         	goto	u2051
  6335   0020D6  EF6F  F010         	goto	u2050
  6336   0020DA                     u2051:
  6337   0020DA  EF64  F010         	goto	l3365
  6338   0020DE                     u2050:
  6339   0020DE                     l3369:
  6340   0020DE  503E               	movf	___awmod@divisor^0,w,c
  6341   0020E0  5C3C               	subwf	___awmod@dividend^0,w,c
  6342   0020E2  503F               	movf	(___awmod@divisor+1)^0,w,c
  6343   0020E4  583D               	subwfb	(___awmod@dividend+1)^0,w,c
  6344   0020E6  A0D8               	btfss	status,0,c
  6345   0020E8  EF78  F010         	goto	u2061
  6346   0020EC  EF7A  F010         	goto	u2060
  6347   0020F0                     u2061:
  6348   0020F0  EF7E  F010         	goto	l3373
  6349   0020F4                     u2060:
  6350   0020F4  503E               	movf	___awmod@divisor^0,w,c
  6351   0020F6  5E3C               	subwf	___awmod@dividend^0,f,c
  6352   0020F8  503F               	movf	(___awmod@divisor+1)^0,w,c
  6353   0020FA  5A3D               	subwfb	(___awmod@dividend+1)^0,f,c
  6354   0020FC                     l3373:
  6355   0020FC  90D8               	bcf	status,0,c
  6356   0020FE  323F               	rrcf	(___awmod@divisor+1)^0,f,c
  6357   002100  323E               	rrcf	___awmod@divisor^0,f,c
  6358   002102  2E40               	decfsz	___awmod@counter^0,f,c
  6359   002104  EF6F  F010         	goto	l3369
  6360   002108                     l3377:
  6361   002108  5041               	movf	___awmod@sign^0,w,c
  6362   00210A  B4D8               	btfsc	status,2,c
  6363   00210C  EF8A  F010         	goto	u2071
  6364   002110  EF8C  F010         	goto	u2070
  6365   002114                     u2071:
  6366   002114  EF90  F010         	goto	l3381
  6367   002118                     u2070:
  6368   002118  6C3C               	negf	___awmod@dividend^0,c
  6369   00211A  1E3D               	comf	(___awmod@dividend+1)^0,f,c
  6370   00211C  B0D8               	btfsc	status,0,c
  6371   00211E  2A3D               	incf	(___awmod@dividend+1)^0,f,c
  6372   002120                     l3381:
  6373   002120  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6374   002124  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6375   002128  0012               	return		;funcret
  6376   00212A                     __end_of___awmod:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function ___awdiv *****************
  6380 ;; Defined at:
  6381 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  dividend        2    8[COMRAM] int 
  6384 ;;  divisor         2   10[COMRAM] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  quotient        2   14[COMRAM] int 
  6387 ;;  sign            1   13[COMRAM] unsigned char 
  6388 ;;  counter         1   12[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    8[COMRAM] int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;Total ram usage:        8 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 2
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_WriteSTLED316SData
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text26
  6413   001FB6                     __ptext26:
  6414                           	callstack 0
  6415   001FB6                     ___awdiv:
  6416                           	callstack 27
  6417   001FB6  0E00               	movlw	0
  6418   001FB8  6E41               	movwf	___awdiv@sign^0,c
  6419   001FBA  BE3F               	btfsc	(___awdiv@divisor+1)^0,7,c
  6420   001FBC  EFE4  F00F         	goto	u1960
  6421   001FC0  EFE2  F00F         	goto	u1961
  6422   001FC4                     u1961:
  6423   001FC4  EFEA  F00F         	goto	l3313
  6424   001FC8                     u1960:
  6425   001FC8  6C3E               	negf	___awdiv@divisor^0,c
  6426   001FCA  1E3F               	comf	(___awdiv@divisor+1)^0,f,c
  6427   001FCC  B0D8               	btfsc	status,0,c
  6428   001FCE  2A3F               	incf	(___awdiv@divisor+1)^0,f,c
  6429   001FD0  0E01               	movlw	1
  6430   001FD2  6E41               	movwf	___awdiv@sign^0,c
  6431   001FD4                     l3313:
  6432   001FD4  BE3D               	btfsc	(___awdiv@dividend+1)^0,7,c
  6433   001FD6  EFF1  F00F         	goto	u1970
  6434   001FDA  EFEF  F00F         	goto	u1971
  6435   001FDE                     u1971:
  6436   001FDE  EFF7  F00F         	goto	l3319
  6437   001FE2                     u1970:
  6438   001FE2  6C3C               	negf	___awdiv@dividend^0,c
  6439   001FE4  1E3D               	comf	(___awdiv@dividend+1)^0,f,c
  6440   001FE6  B0D8               	btfsc	status,0,c
  6441   001FE8  2A3D               	incf	(___awdiv@dividend+1)^0,f,c
  6442   001FEA  0E01               	movlw	1
  6443   001FEC  1A41               	xorwf	___awdiv@sign^0,f,c
  6444   001FEE                     l3319:
  6445   001FEE  0E00               	movlw	0
  6446   001FF0  6E43               	movwf	(___awdiv@quotient+1)^0,c
  6447   001FF2  0E00               	movlw	0
  6448   001FF4  6E42               	movwf	___awdiv@quotient^0,c
  6449   001FF6  503E               	movf	___awdiv@divisor^0,w,c
  6450   001FF8  103F               	iorwf	(___awdiv@divisor+1)^0,w,c
  6451   001FFA  B4D8               	btfsc	status,2,c
  6452   001FFC  EF02  F010         	goto	u1981
  6453   002000  EF04  F010         	goto	u1980
  6454   002004                     u1981:
  6455   002004  EF2C  F010         	goto	l3341
  6456   002008                     u1980:
  6457   002008  0E01               	movlw	1
  6458   00200A  6E40               	movwf	___awdiv@counter^0,c
  6459   00200C  EF0C  F010         	goto	l3327
  6460   002010                     l3325:
  6461   002010  90D8               	bcf	status,0,c
  6462   002012  363E               	rlcf	___awdiv@divisor^0,f,c
  6463   002014  363F               	rlcf	(___awdiv@divisor+1)^0,f,c
  6464   002016  2A40               	incf	___awdiv@counter^0,f,c
  6465   002018                     l3327:
  6466   002018  AE3F               	btfss	(___awdiv@divisor+1)^0,7,c
  6467   00201A  EF11  F010         	goto	u1991
  6468   00201E  EF13  F010         	goto	u1990
  6469   002022                     u1991:
  6470   002022  EF08  F010         	goto	l3325
  6471   002026                     u1990:
  6472   002026                     l3329:
  6473   002026  90D8               	bcf	status,0,c
  6474   002028  3642               	rlcf	___awdiv@quotient^0,f,c
  6475   00202A  3643               	rlcf	(___awdiv@quotient+1)^0,f,c
  6476   00202C  503E               	movf	___awdiv@divisor^0,w,c
  6477   00202E  5C3C               	subwf	___awdiv@dividend^0,w,c
  6478   002030  503F               	movf	(___awdiv@divisor+1)^0,w,c
  6479   002032  583D               	subwfb	(___awdiv@dividend+1)^0,w,c
  6480   002034  A0D8               	btfss	status,0,c
  6481   002036  EF1F  F010         	goto	u2001
  6482   00203A  EF21  F010         	goto	u2000
  6483   00203E                     u2001:
  6484   00203E  EF26  F010         	goto	l3337
  6485   002042                     u2000:
  6486   002042  503E               	movf	___awdiv@divisor^0,w,c
  6487   002044  5E3C               	subwf	___awdiv@dividend^0,f,c
  6488   002046  503F               	movf	(___awdiv@divisor+1)^0,w,c
  6489   002048  5A3D               	subwfb	(___awdiv@dividend+1)^0,f,c
  6490   00204A  8042               	bsf	___awdiv@quotient^0,0,c
  6491   00204C                     l3337:
  6492   00204C  90D8               	bcf	status,0,c
  6493   00204E  323F               	rrcf	(___awdiv@divisor+1)^0,f,c
  6494   002050  323E               	rrcf	___awdiv@divisor^0,f,c
  6495   002052  2E40               	decfsz	___awdiv@counter^0,f,c
  6496   002054  EF13  F010         	goto	l3329
  6497   002058                     l3341:
  6498   002058  5041               	movf	___awdiv@sign^0,w,c
  6499   00205A  B4D8               	btfsc	status,2,c
  6500   00205C  EF32  F010         	goto	u2011
  6501   002060  EF34  F010         	goto	u2010
  6502   002064                     u2011:
  6503   002064  EF38  F010         	goto	l3345
  6504   002068                     u2010:
  6505   002068  6C42               	negf	___awdiv@quotient^0,c
  6506   00206A  1E43               	comf	(___awdiv@quotient+1)^0,f,c
  6507   00206C  B0D8               	btfsc	status,0,c
  6508   00206E  2A43               	incf	(___awdiv@quotient+1)^0,f,c
  6509   002070                     l3345:
  6510   002070  C042  F03C         	movff	___awdiv@quotient,?___awdiv
  6511   002074  C043  F03D         	movff	___awdiv@quotient+1,?___awdiv+1
  6512   002078  0012               	return		;funcret
  6513   00207A                     __end_of___awdiv:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function _Get7Seg *****************
  6517 ;; Defined at:
  6518 ;;		line 104 in file "Display.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  Digit           2    8[COMRAM] int 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  Data            1   12[COMRAM] unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      unsigned char 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;Total ram usage:        5 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 2
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_WriteSTLED316SData
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text27
  6547   001EEA                     __ptext27:
  6548                           	callstack 0
  6549   001EEA                     _Get7Seg:
  6550                           	callstack 27
  6551   001EEA                     
  6552                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  6553   001EEA  EFA3  F00F         	goto	l3223
  6554   001EEE                     l3199:
  6555                           
  6556                           ;Display.c: 109:             Data = 0x3F;
  6557   001EEE  0E3F               	movlw	63
  6558   001EF0  6E40               	movwf	Get7Seg@Data^0,c
  6559                           
  6560                           ;Display.c: 110:             break;
  6561   001EF2  EFD9  F00F         	goto	l3225
  6562   001EF6                     l3201:
  6563                           
  6564                           ;Display.c: 112:             Data = 0x06;
  6565   001EF6  0E06               	movlw	6
  6566   001EF8  6E40               	movwf	Get7Seg@Data^0,c
  6567                           
  6568                           ;Display.c: 113:             break;
  6569   001EFA  EFD9  F00F         	goto	l3225
  6570   001EFE                     l3203:
  6571                           
  6572                           ;Display.c: 115:             Data = 0x5B;
  6573   001EFE  0E5B               	movlw	91
  6574   001F00  6E40               	movwf	Get7Seg@Data^0,c
  6575                           
  6576                           ;Display.c: 116:             break;
  6577   001F02  EFD9  F00F         	goto	l3225
  6578   001F06                     l3205:
  6579                           
  6580                           ;Display.c: 118:             Data = 0x4F;
  6581   001F06  0E4F               	movlw	79
  6582   001F08  6E40               	movwf	Get7Seg@Data^0,c
  6583                           
  6584                           ;Display.c: 119:             break;
  6585   001F0A  EFD9  F00F         	goto	l3225
  6586   001F0E                     l3207:
  6587                           
  6588                           ;Display.c: 121:             Data = 0x66;
  6589   001F0E  0E66               	movlw	102
  6590   001F10  6E40               	movwf	Get7Seg@Data^0,c
  6591                           
  6592                           ;Display.c: 122:             break;
  6593   001F12  EFD9  F00F         	goto	l3225
  6594   001F16                     l3209:
  6595                           
  6596                           ;Display.c: 124:             Data = 0x6D;
  6597   001F16  0E6D               	movlw	109
  6598   001F18  6E40               	movwf	Get7Seg@Data^0,c
  6599                           
  6600                           ;Display.c: 125:             break;
  6601   001F1A  EFD9  F00F         	goto	l3225
  6602   001F1E                     l3211:
  6603                           
  6604                           ;Display.c: 127:             Data = 0x7D;
  6605   001F1E  0E7D               	movlw	125
  6606   001F20  6E40               	movwf	Get7Seg@Data^0,c
  6607                           
  6608                           ;Display.c: 128:             break;
  6609   001F22  EFD9  F00F         	goto	l3225
  6610   001F26                     l3213:
  6611                           
  6612                           ;Display.c: 130:             Data = 0x07;
  6613   001F26  0E07               	movlw	7
  6614   001F28  6E40               	movwf	Get7Seg@Data^0,c
  6615                           
  6616                           ;Display.c: 131:             break;
  6617   001F2A  EFD9  F00F         	goto	l3225
  6618   001F2E                     l3215:
  6619                           
  6620                           ;Display.c: 133:             Data = 0x7F;
  6621   001F2E  0E7F               	movlw	127
  6622   001F30  6E40               	movwf	Get7Seg@Data^0,c
  6623                           
  6624                           ;Display.c: 134:             break;
  6625   001F32  EFD9  F00F         	goto	l3225
  6626   001F36                     l3217:
  6627                           
  6628                           ;Display.c: 136:             Data = 0x6F;
  6629   001F36  0E6F               	movlw	111
  6630   001F38  6E40               	movwf	Get7Seg@Data^0,c
  6631                           
  6632                           ;Display.c: 137:             break;
  6633   001F3A  EFD9  F00F         	goto	l3225
  6634   001F3E                     l3219:
  6635                           
  6636                           ;Display.c: 139:             Data = 0x00;
  6637   001F3E  0E00               	movlw	0
  6638   001F40  6E40               	movwf	Get7Seg@Data^0,c
  6639                           
  6640                           ;Display.c: 140:             break;
  6641   001F42  EFD9  F00F         	goto	l3225
  6642   001F46                     l3223:
  6643   001F46  C03C  F03E         	movff	Get7Seg@Digit,??_Get7Seg
  6644   001F4A  C03D  F03F         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  6645                           
  6646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6647                           ; Switch size 1, requested type "simple"
  6648                           ; Number of cases is 1, Range of values is 0 to 0
  6649                           ; switch strategies available:
  6650                           ; Name         Instructions Cycles
  6651                           ; simple_byte            4     3 (average)
  6652                           ;	Chosen strategy is simple_byte
  6653   001F4E  503F               	movf	(??_Get7Seg+1)^0,w,c
  6654   001F50  0A00               	xorlw	0	; case 0
  6655   001F52  B4D8               	btfsc	status,2,c
  6656   001F54  EFAE  F00F         	goto	l6289
  6657   001F58  EF9F  F00F         	goto	l3219
  6658   001F5C                     l6289:
  6659                           
  6660                           ; Switch size 1, requested type "simple"
  6661                           ; Number of cases is 10, Range of values is 0 to 9
  6662                           ; switch strategies available:
  6663                           ; Name         Instructions Cycles
  6664                           ; simple_byte           31    16 (average)
  6665                           ;	Chosen strategy is simple_byte
  6666   001F5C  503E               	movf	??_Get7Seg^0,w,c
  6667   001F5E  0A00               	xorlw	0	; case 0
  6668   001F60  B4D8               	btfsc	status,2,c
  6669   001F62  EF77  F00F         	goto	l3199
  6670   001F66  0A01               	xorlw	1	; case 1
  6671   001F68  B4D8               	btfsc	status,2,c
  6672   001F6A  EF7B  F00F         	goto	l3201
  6673   001F6E  0A03               	xorlw	3	; case 2
  6674   001F70  B4D8               	btfsc	status,2,c
  6675   001F72  EF7F  F00F         	goto	l3203
  6676   001F76  0A01               	xorlw	1	; case 3
  6677   001F78  B4D8               	btfsc	status,2,c
  6678   001F7A  EF83  F00F         	goto	l3205
  6679   001F7E  0A07               	xorlw	7	; case 4
  6680   001F80  B4D8               	btfsc	status,2,c
  6681   001F82  EF87  F00F         	goto	l3207
  6682   001F86  0A01               	xorlw	1	; case 5
  6683   001F88  B4D8               	btfsc	status,2,c
  6684   001F8A  EF8B  F00F         	goto	l3209
  6685   001F8E  0A03               	xorlw	3	; case 6
  6686   001F90  B4D8               	btfsc	status,2,c
  6687   001F92  EF8F  F00F         	goto	l3211
  6688   001F96  0A01               	xorlw	1	; case 7
  6689   001F98  B4D8               	btfsc	status,2,c
  6690   001F9A  EF93  F00F         	goto	l3213
  6691   001F9E  0A0F               	xorlw	15	; case 8
  6692   001FA0  B4D8               	btfsc	status,2,c
  6693   001FA2  EF97  F00F         	goto	l3215
  6694   001FA6  0A01               	xorlw	1	; case 9
  6695   001FA8  B4D8               	btfsc	status,2,c
  6696   001FAA  EF9B  F00F         	goto	l3217
  6697   001FAE  EF9F  F00F         	goto	l3219
  6698   001FB2                     l3225:
  6699                           
  6700                           ;Display.c: 142:     return (Data);
  6701   001FB2  5040               	movf	Get7Seg@Data^0,w,c
  6702   001FB4  0012               	return		;funcret
  6703   001FB6                     __end_of_Get7Seg:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _Homing_Again_Auto *****************
  6707 ;; Defined at:
  6708 ;;		line 1263 in file "main.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;Total ram usage:        2 bytes
  6727 ;; Hardware stack levels used: 1
  6728 ;; Hardware stack levels required when called: 4
  6729 ;; This function calls:
  6730 ;;		_AD_capture_BattVoltage
  6731 ;;		_MotorBREAK
  6732 ;;		_MotorON
  6733 ;;		_Read_IR
  6734 ;;		_WriteSTLED316SErr
  6735 ;;		_WriteSTLED316SMode
  6736 ;;		_delay_1ms
  6737 ;;		_readWeighingData
  6738 ;; This function is called by:
  6739 ;;		_main
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text28
  6744   001674                     __ptext28:
  6745                           	callstack 0
  6746   001674                     _Homing_Again_Auto:
  6747                           	callstack 26
  6748   001674                     
  6749                           ;main.c: 1265:     IR_SENSORF = 0;
  6750   001674  0E00               	movlw	0
  6751   001676  6E12               	movwf	(_IR_SENSORF+1)^0,c
  6752   001678  0E00               	movlw	0
  6753   00167A  6E11               	movwf	_IR_SENSORF^0,c
  6754   00167C                     
  6755                           ;main.c: 1266:     WriteSTLED316SMode('A');
  6756   00167C  0E41               	movlw	65
  6757   00167E  EC81  F00E         	call	_WriteSTLED316SMode
  6758   001682                     
  6759                           ;main.c: 1268:     if (vibration_mode == 1) {
  6760   001682  042E               	decf	_vibration_mode^0,w,c
  6761   001684  A4D8               	btfss	status,2,c
  6762   001686  EF47  F00B         	goto	u2571
  6763   00168A  EF49  F00B         	goto	u2570
  6764   00168E                     u2571:
  6765   00168E  EF5E  F00B         	goto	l429
  6766   001692                     u2570:
  6767   001692                     
  6768                           ;main.c: 1269:         LATCbits.LATC1 = 1;
  6769   001692  828B               	bsf	139,1,c	;volatile
  6770   001694                     
  6771                           ;main.c: 1270:         delay_1ms(Vmotor_Time);
  6772   001694  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  6773   001698  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6774   00169C  EC26  F013         	call	_delay_1ms	;wreg free
  6775   0016A0                     
  6776                           ;main.c: 1271:         LATCbits.LATC1 = 0;
  6777   0016A0  928B               	bcf	139,1,c	;volatile
  6778   0016A2                     l3959:
  6779                           
  6780                           ;main.c: 1272:         _delay((unsigned long)((300)*(8000000/4000.0)));
  6781   0016A2  0E04               	movlw	4
  6782   0016A4  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  6783   0016A6  0E0C               	movlw	12
  6784   0016A8  6E45               	movwf	??_Homing_Again_Auto^0,c
  6785   0016AA  0E34               	movlw	52
  6786   0016AC                     u4517:
  6787   0016AC  2EE8               	decfsz	wreg,f,c
  6788   0016AE  D7FE               	bra	u4517
  6789   0016B0  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  6790   0016B2  D7FC               	bra	u4517
  6791   0016B4  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6792   0016B6  D7FA               	bra	u4517
  6793                           
  6794                           ;main.c: 1273:     } else {
  6795   0016B8  EF61  F00B         	goto	l3963
  6796   0016BC                     l429:
  6797                           
  6798                           ;main.c: 1274:         LATCbits.LATC1 = 0;
  6799   0016BC  928B               	bcf	139,1,c	;volatile
  6800   0016BE  EF51  F00B         	goto	l3959
  6801   0016C2                     l3963:
  6802                           
  6803                           ;main.c: 1278:     LATAbits.LATA2 = 1;
  6804   0016C2  8489               	bsf	137,2,c	;volatile
  6805                           
  6806                           ;main.c: 1280:     while (Stop == 0) {
  6807   0016C4  EF11  F00C         	goto	l4021
  6808   0016C8                     l432:
  6809   0016C8  0004               	clrwdt		;# 
  6810   0016CA                     
  6811                           ;main.c: 1282:         readWeighingData();
  6812   0016CA  EC0F  F012         	call	_readWeighingData	;wreg free
  6813   0016CE                     
  6814                           ;main.c: 1283:         AD_capture_BattVoltage();
  6815   0016CE  EC80  F012         	call	_AD_capture_BattVoltage	;wreg free
  6816   0016D2                     
  6817                           ;main.c: 1284:         delay_1ms(Motor_Pause_Time);
  6818   0016D2  C01B  F03C         	movff	_Motor_Pause_Time,delay_1ms@time
  6819   0016D6  C01C  F03D         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  6820   0016DA  EC26  F013         	call	_delay_1ms	;wreg free
  6821   0016DE                     
  6822                           ;main.c: 1285:         MotorON();
  6823   0016DE  ECCB  F013         	call	_MotorON	;wreg free
  6824   0016E2                     
  6825                           ;main.c: 1287:         _delay((unsigned long)((150)*(8000000/4000.0)));
  6826   0016E2  0E02               	movlw	2
  6827   0016E4  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  6828   0016E6  0E86               	movlw	134
  6829   0016E8  6E45               	movwf	??_Homing_Again_Auto^0,c
  6830   0016EA  0E99               	movlw	153
  6831   0016EC                     u4527:
  6832   0016EC  2EE8               	decfsz	wreg,f,c
  6833   0016EE  D7FE               	bra	u4527
  6834   0016F0  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  6835   0016F2  D7FC               	bra	u4527
  6836   0016F4  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6837   0016F6  D7FA               	bra	u4527
  6838   0016F8  F000               	nop	
  6839   0016FA                     
  6840                           ;main.c: 1289:         errorcounter = 30;
  6841   0016FA  0E1E               	movlw	30
  6842   0016FC  6E50               	movwf	_errorcounter^0,c	;volatile
  6843   0016FE  0E00               	movlw	0
  6844   001700  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  6845   001702  0E00               	movlw	0
  6846   001704  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  6847   001706  0E00               	movlw	0
  6848   001708  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  6849   00170A                     l3977:
  6850                           
  6851                           ;main.c: 1292:             IR_SENSORF = Read_IR();
  6852   00170A  EC75  F013         	call	_Read_IR	;wreg free
  6853   00170E  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  6854   001712  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  6855   001716                     
  6856                           ;main.c: 1293:             if (errorcounter == 0) {
  6857   001716  5050               	movf	_errorcounter^0,w,c	;volatile
  6858   001718  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6859   00171A  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6860   00171C  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6861   00171E  A4D8               	btfss	status,2,c
  6862   001720  EF94  F00B         	goto	u2581
  6863   001724  EF96  F00B         	goto	u2580
  6864   001728                     u2581:
  6865   001728  EF9B  F00B         	goto	l3985
  6866   00172C                     u2580:
  6867   00172C                     
  6868                           ;main.c: 1294:                 WriteSTLED316SErr('1');
  6869   00172C  0E31               	movlw	49
  6870   00172E  EC01  F00F         	call	_WriteSTLED316SErr
  6871   001732                     
  6872                           ;main.c: 1295:                 MotorBREAK();
  6873   001732  ECD0  F013         	call	_MotorBREAK	;wreg free
  6874   001736                     l3985:
  6875                           
  6876                           ;main.c: 1297:         } while (IR_SENSORF != 0);
  6877   001736  5011               	movf	_IR_SENSORF^0,w,c
  6878   001738  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  6879   00173A  A4D8               	btfss	status,2,c
  6880   00173C  EFA2  F00B         	goto	u2591
  6881   001740  EFA4  F00B         	goto	u2590
  6882   001744                     u2591:
  6883   001744  EF85  F00B         	goto	l3977
  6884   001748                     u2590:
  6885   001748                     
  6886                           ;main.c: 1299:         _delay((unsigned long)((30)*(8000000/4000.0)));
  6887   001748  0E4E               	movlw	78
  6888   00174A  6E45               	movwf	??_Homing_Again_Auto^0,c
  6889   00174C  0EEB               	movlw	235
  6890   00174E                     u4537:
  6891   00174E  2EE8               	decfsz	wreg,f,c
  6892   001750  D7FE               	bra	u4537
  6893   001752  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  6894   001754  D7FC               	bra	u4537
  6895   001756  F000               	nop	
  6896   001758                     
  6897                           ;main.c: 1300:         errorcounter = 30;
  6898   001758  0E1E               	movlw	30
  6899   00175A  6E50               	movwf	_errorcounter^0,c	;volatile
  6900   00175C  0E00               	movlw	0
  6901   00175E  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  6902   001760  0E00               	movlw	0
  6903   001762  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  6904   001764  0E00               	movlw	0
  6905   001766  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  6906   001768                     l3991:
  6907                           
  6908                           ;main.c: 1303:             IR_SENSORF = Read_IR();
  6909   001768  EC75  F013         	call	_Read_IR	;wreg free
  6910   00176C  C03C  F011         	movff	?_Read_IR,_IR_SENSORF
  6911   001770  C03D  F012         	movff	?_Read_IR+1,_IR_SENSORF+1
  6912   001774                     
  6913                           ;main.c: 1304:             if (errorcounter == 0) {
  6914   001774  5050               	movf	_errorcounter^0,w,c	;volatile
  6915   001776  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  6916   001778  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  6917   00177A  1053               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  6918   00177C  A4D8               	btfss	status,2,c
  6919   00177E  EFC3  F00B         	goto	u2601
  6920   001782  EFC5  F00B         	goto	u2600
  6921   001786                     u2601:
  6922   001786  EFCA  F00B         	goto	l3999
  6923   00178A                     u2600:
  6924   00178A                     
  6925                           ;main.c: 1305:                 WriteSTLED316SErr('2');
  6926   00178A  0E32               	movlw	50
  6927   00178C  EC01  F00F         	call	_WriteSTLED316SErr
  6928   001790                     
  6929                           ;main.c: 1306:                 MotorBREAK();
  6930   001790  ECD0  F013         	call	_MotorBREAK	;wreg free
  6931   001794                     l3999:
  6932                           
  6933                           ;main.c: 1308:         } while (IR_SENSORF != 1);
  6934   001794  0411               	decf	_IR_SENSORF^0,w,c
  6935   001796  1012               	iorwf	(_IR_SENSORF+1)^0,w,c
  6936   001798  A4D8               	btfss	status,2,c
  6937   00179A  EFD1  F00B         	goto	u2611
  6938   00179E  EFD3  F00B         	goto	u2610
  6939   0017A2                     u2611:
  6940   0017A2  EFB4  F00B         	goto	l3991
  6941   0017A6                     u2610:
  6942   0017A6                     
  6943                           ;main.c: 1310:         errorcounter = 30;
  6944   0017A6  0E1E               	movlw	30
  6945   0017A8  6E50               	movwf	_errorcounter^0,c	;volatile
  6946   0017AA  0E00               	movlw	0
  6947   0017AC  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  6948   0017AE  0E00               	movlw	0
  6949   0017B0  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  6950   0017B2  0E00               	movlw	0
  6951   0017B4  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  6952   0017B6                     
  6953                           ;main.c: 1312:         delay_1ms(Motor_Stop_Delay_Time);
  6954   0017B6  C01F  F03C         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  6955   0017BA  C020  F03D         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  6956   0017BE  EC26  F013         	call	_delay_1ms	;wreg free
  6957   0017C2                     
  6958                           ;main.c: 1313:         MotorBREAK();
  6959   0017C2  ECD0  F013         	call	_MotorBREAK	;wreg free
  6960                           
  6961                           ;main.c: 1315:         if (vibration_mode == 1) {
  6962   0017C6  042E               	decf	_vibration_mode^0,w,c
  6963   0017C8  A4D8               	btfss	status,2,c
  6964   0017CA  EFE9  F00B         	goto	u2621
  6965   0017CE  EFEB  F00B         	goto	u2620
  6966   0017D2                     u2621:
  6967   0017D2  EF00  F00C         	goto	l439
  6968   0017D6                     u2620:
  6969   0017D6                     
  6970                           ;main.c: 1316:             LATCbits.LATC1 = 1;
  6971   0017D6  828B               	bsf	139,1,c	;volatile
  6972   0017D8                     
  6973                           ;main.c: 1317:             delay_1ms(Vmotor_Time);
  6974   0017D8  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  6975   0017DC  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  6976   0017E0  EC26  F013         	call	_delay_1ms	;wreg free
  6977   0017E4                     
  6978                           ;main.c: 1319:             LATCbits.LATC1 = 0;
  6979   0017E4  928B               	bcf	139,1,c	;volatile
  6980   0017E6                     
  6981                           ;main.c: 1320:             _delay((unsigned long)((300)*(8000000/4000.0)));
  6982   0017E6  0E04               	movlw	4
  6983   0017E8  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  6984   0017EA  0E0C               	movlw	12
  6985   0017EC  6E45               	movwf	??_Homing_Again_Auto^0,c
  6986   0017EE  0E34               	movlw	52
  6987   0017F0                     u4547:
  6988   0017F0  2EE8               	decfsz	wreg,f,c
  6989   0017F2  D7FE               	bra	u4547
  6990   0017F4  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  6991   0017F6  D7FC               	bra	u4547
  6992   0017F8  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  6993   0017FA  D7FA               	bra	u4547
  6994                           
  6995                           ;main.c: 1321:         } else {
  6996   0017FC  EF07  F00C         	goto	l4017
  6997   001800                     l439:
  6998                           
  6999                           ;main.c: 1322:             LATCbits.LATC1 = 0;
  7000   001800  928B               	bcf	139,1,c	;volatile
  7001   001802                     
  7002                           ;main.c: 1323:             delay_1ms(Vmotor_Time);
  7003   001802  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  7004   001806  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  7005   00180A  EC26  F013         	call	_delay_1ms	;wreg free
  7006   00180E                     l4017:
  7007                           
  7008                           ;main.c: 1326:         if (Stop == 1)
  7009   00180E  0431               	decf	_Stop^0,w,c
  7010   001810  A4D8               	btfss	status,2,c
  7011   001812  EF0D  F00C         	goto	u2631
  7012   001816  EF0F  F00C         	goto	u2630
  7013   00181A                     u2631:
  7014   00181A  EF11  F00C         	goto	l4021
  7015   00181E                     u2630:
  7016   00181E  EF19  F00C         	goto	l442
  7017   001822                     l4021:
  7018                           
  7019                           ;main.c: 1280:     while (Stop == 0) {
  7020   001822  5031               	movf	_Stop^0,w,c
  7021   001824  B4D8               	btfsc	status,2,c
  7022   001826  EF17  F00C         	goto	u2641
  7023   00182A  EF19  F00C         	goto	u2640
  7024   00182E                     u2641:
  7025   00182E  EF64  F00B         	goto	l432
  7026   001832                     u2640:
  7027   001832                     l442:
  7028                           
  7029                           ;main.c: 1331:     LATAbits.LATA2 = 0;
  7030   001832  9489               	bcf	137,2,c	;volatile
  7031   001834                     
  7032                           ;main.c: 1333:     if (NUM == 0 || Stop == 1) {
  7033   001834  5019               	movf	_NUM^0,w,c
  7034   001836  101A               	iorwf	(_NUM+1)^0,w,c
  7035   001838  B4D8               	btfsc	status,2,c
  7036   00183A  EF21  F00C         	goto	u2651
  7037   00183E  EF23  F00C         	goto	u2650
  7038   001842                     u2651:
  7039   001842  EF2B  F00C         	goto	l4027
  7040   001846                     u2650:
  7041   001846  0431               	decf	_Stop^0,w,c
  7042   001848  A4D8               	btfss	status,2,c
  7043   00184A  EF29  F00C         	goto	u2661
  7044   00184E  EF2B  F00C         	goto	u2660
  7045   001852                     u2661:
  7046   001852  EF46  F00C         	goto	l4037
  7047   001856                     u2660:
  7048   001856                     l4027:
  7049                           
  7050                           ;main.c: 1335:         if (vibration_mode == 1) {
  7051   001856  042E               	decf	_vibration_mode^0,w,c
  7052   001858  A4D8               	btfss	status,2,c
  7053   00185A  EF31  F00C         	goto	u2671
  7054   00185E  EF33  F00C         	goto	u2670
  7055   001862                     u2671:
  7056   001862  EF46  F00C         	goto	l4037
  7057   001866                     u2670:
  7058   001866                     
  7059                           ;main.c: 1336:             LATCbits.LATC1 = 1;
  7060   001866  828B               	bsf	139,1,c	;volatile
  7061   001868                     
  7062                           ;main.c: 1337:             delay_1ms(Vmotor_Time);
  7063   001868  C054  F03C         	movff	_Vmotor_Time,delay_1ms@time
  7064   00186C  C055  F03D         	movff	_Vmotor_Time+1,delay_1ms@time+1
  7065   001870  EC26  F013         	call	_delay_1ms	;wreg free
  7066   001874                     
  7067                           ;main.c: 1339:             LATCbits.LATC1 = 0;
  7068   001874  928B               	bcf	139,1,c	;volatile
  7069   001876                     
  7070                           ;main.c: 1340:             _delay((unsigned long)((300)*(8000000/4000.0)));
  7071   001876  0E04               	movlw	4
  7072   001878  6E46               	movwf	(??_Homing_Again_Auto+1)^0,c
  7073   00187A  0E0C               	movlw	12
  7074   00187C  6E45               	movwf	??_Homing_Again_Auto^0,c
  7075   00187E  0E34               	movlw	52
  7076   001880                     u4557:
  7077   001880  2EE8               	decfsz	wreg,f,c
  7078   001882  D7FE               	bra	u4557
  7079   001884  2E45               	decfsz	??_Homing_Again_Auto^0,f,c
  7080   001886  D7FC               	bra	u4557
  7081   001888  2E46               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  7082   00188A  D7FA               	bra	u4557
  7083   00188C                     l4037:
  7084                           
  7085                           ;main.c: 1345:     NUM = 0;
  7086   00188C  0E00               	movlw	0
  7087   00188E  6E1A               	movwf	(_NUM+1)^0,c
  7088   001890  0E00               	movlw	0
  7089   001892  6E19               	movwf	_NUM^0,c
  7090   001894                     
  7091                           ;main.c: 1346:     OpMode = AUTO_MODE;
  7092   001894  0E02               	movlw	2
  7093   001896  6E2C               	movwf	_OpMode^0,c	;volatile
  7094   001898  0012               	return		;funcret
  7095   00189A                     __end_of_Homing_Again_Auto:
  7096                           	callstack 0
  7097                           
  7098 ;; *************** function _readWeighingData *****************
  7099 ;; Defined at:
  7100 ;;		line 1375 in file "main.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  i               2   10[COMRAM] int 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        2 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; Hardware stack levels required when called: 3
  7121 ;; This function calls:
  7122 ;;		_Write1USART
  7123 ;;		_flushOut
  7124 ;; This function is called by:
  7125 ;;		_Homing_Again_Manual
  7126 ;;		_Homing_Again_Auto
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text29
  7131   00241E                     __ptext29:
  7132                           	callstack 0
  7133   00241E                     _readWeighingData:
  7134                           	callstack 26
  7135   00241E                     
  7136                           ;main.c: 1376:     int i;;main.c: 1378:     Serial_Buffer_Out[0] = 0xA5;
  7137   00241E  0EA5               	movlw	165
  7138   002420  0100               	movlb	0	; () banked
  7139   002422  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  7140                           
  7141                           ;main.c: 1379:     Serial_Buffer_Out[1] = 0x45;
  7142   002424  0E45               	movlw	69
  7143   002426  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  7144                           
  7145                           ;main.c: 1380:     Serial_Buffer_Out[2] = 0x00;
  7146   002428  0E00               	movlw	0
  7147   00242A  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  7148                           
  7149                           ;main.c: 1381:     Serial_Buffer_Out[3] = 0x45;
  7150   00242C  0E45               	movlw	69
  7151   00242E  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  7152                           
  7153                           ;main.c: 1382:     Serial_Buffer_Out[4] = 0x5A;
  7154   002430  0E5A               	movlw	90
  7155   002432  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  7156   002434                     
  7157                           ; BSR set to: 0
  7158                           ;main.c: 1384:     INTCONbits.GIE = 0;
  7159   002434  9EF2               	bcf	242,7,c	;volatile
  7160                           
  7161                           ;main.c: 1385:     for (i = 0; i < 5; i++) {
  7162   002436  0E00               	movlw	0
  7163   002438  6E3F               	movwf	(readWeighingData@i+1)^0,c
  7164   00243A  0E00               	movlw	0
  7165   00243C  6E3E               	movwf	readWeighingData@i^0,c
  7166   00243E                     l3487:
  7167                           
  7168                           ;main.c: 1386:         Write1USART(Serial_Buffer_Out[i]);
  7169   00243E  0E60               	movlw	low _Serial_Buffer_Out
  7170   002440  243E               	addwf	readWeighingData@i^0,w,c
  7171   002442  6ED9               	movwf	fsr2l,c
  7172   002444  0E00               	movlw	high _Serial_Buffer_Out
  7173   002446  203F               	addwfc	(readWeighingData@i+1)^0,w,c
  7174   002448  6EDA               	movwf	fsr2h,c
  7175   00244A  50DF               	movf	indf2,w,c
  7176   00244C  EC9E  F013         	call	_Write1USART
  7177   002450                     
  7178                           ;main.c: 1387:     }
  7179   002450  4A3E               	infsnz	readWeighingData@i^0,f,c
  7180   002452  2A3F               	incf	(readWeighingData@i+1)^0,f,c
  7181   002454  BE3F               	btfsc	(readWeighingData@i+1)^0,7,c
  7182   002456  EF36  F012         	goto	u2121
  7183   00245A  503F               	movf	(readWeighingData@i+1)^0,w,c
  7184   00245C  E109               	bnz	u2120
  7185   00245E  0E05               	movlw	5
  7186   002460  5C3E               	subwf	readWeighingData@i^0,w,c
  7187   002462  A0D8               	btfss	status,0,c
  7188   002464  EF36  F012         	goto	u2121
  7189   002468  EF38  F012         	goto	u2120
  7190   00246C                     u2121:
  7191   00246C  EF1F  F012         	goto	l3487
  7192   002470                     u2120:
  7193   002470                     
  7194                           ;main.c: 1388:     INTCONbits.GIE = 1;
  7195   002470  8EF2               	bsf	242,7,c	;volatile
  7196   002472                     
  7197                           ;main.c: 1390:     flushOut();
  7198   002472  ECBC  F012         	call	_flushOut	;wreg free
  7199   002476  0012               	return		;funcret
  7200   002478                     __end_of_readWeighingData:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function _flushOut *****************
  7204 ;; Defined at:
  7205 ;;		line 1364 in file "main.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  i               2    8[COMRAM] int 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;Total ram usage:        2 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 2
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_main
  7230 ;;		_readWeighingData
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text30
  7235   002578                     __ptext30:
  7236                           	callstack 0
  7237   002578                     _flushOut:
  7238                           	callstack 28
  7239   002578                     
  7240                           ;main.c: 1365:     int i;;main.c: 1367:     for (i = 0; i < 16; i++) {
  7241   002578  0E00               	movlw	0
  7242   00257A  6E3D               	movwf	(flushOut@i+1)^0,c
  7243   00257C  0E00               	movlw	0
  7244   00257E  6E3C               	movwf	flushOut@i^0,c
  7245   002580                     l3149:
  7246                           
  7247                           ;main.c: 1368:         Serial_Buffer_Out[i] = 0x00;
  7248   002580  0E60               	movlw	low _Serial_Buffer_Out
  7249   002582  243C               	addwf	flushOut@i^0,w,c
  7250   002584  6ED9               	movwf	fsr2l,c
  7251   002586  0E00               	movlw	high _Serial_Buffer_Out
  7252   002588  203D               	addwfc	(flushOut@i+1)^0,w,c
  7253   00258A  6EDA               	movwf	fsr2h,c
  7254   00258C  0E00               	movlw	0
  7255   00258E  6EDF               	movwf	indf2,c
  7256   002590                     
  7257                           ;main.c: 1369:     }
  7258   002590  4A3C               	infsnz	flushOut@i^0,f,c
  7259   002592  2A3D               	incf	(flushOut@i+1)^0,f,c
  7260   002594  BE3D               	btfsc	(flushOut@i+1)^0,7,c
  7261   002596  EFD6  F012         	goto	u1831
  7262   00259A  503D               	movf	(flushOut@i+1)^0,w,c
  7263   00259C  E109               	bnz	u1830
  7264   00259E  0E10               	movlw	16
  7265   0025A0  5C3C               	subwf	flushOut@i^0,w,c
  7266   0025A2  A0D8               	btfss	status,0,c
  7267   0025A4  EFD6  F012         	goto	u1831
  7268   0025A8  EFD8  F012         	goto	u1830
  7269   0025AC                     u1831:
  7270   0025AC  EFC0  F012         	goto	l3149
  7271   0025B0                     u1830:
  7272   0025B0  0012               	return		;funcret
  7273   0025B2                     __end_of_flushOut:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _Write1USART *****************
  7277 ;; Defined at:
  7278 ;;		line 47 in file "usart.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  data            1    wreg     unsigned char 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  data            1    8[COMRAM] unsigned char 
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;Total ram usage:        1 bytes
  7297 ;; Hardware stack levels used: 1
  7298 ;; Hardware stack levels required when called: 2
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_main
  7303 ;;		_readWeighingData
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text31
  7308   00273C                     __ptext31:
  7309                           	callstack 0
  7310   00273C                     _Write1USART:
  7311                           	callstack 28
  7312                           
  7313                           ;incstack = 0
  7314                           ;Write1USART@data stored from wreg
  7315   00273C  6E3C               	movwf	Write1USART@data^0,c
  7316   00273E                     
  7317                           ;usart.c: 48:     TXREG1 = data;
  7318   00273E  C03C  FFAE         	movff	Write1USART@data,4014	;volatile
  7319   002742                     l660:
  7320   002742  A2AD               	btfss	173,1,c	;volatile
  7321   002744  EFA6  F013         	goto	u1821
  7322   002748  EFA8  F013         	goto	u1820
  7323   00274C                     u1821:
  7324   00274C  EFA1  F013         	goto	l660
  7325   002750                     u1820:
  7326   002750  0012               	return		;funcret
  7327   002752                     __end_of_Write1USART:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function _WriteSTLED316SMode *****************
  7331 ;; Defined at:
  7332 ;;		line 184 in file "Display.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  msg             1    wreg     unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  msg             1   16[COMRAM] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;Total ram usage:        3 bytes
  7351 ;; Hardware stack levels used: 1
  7352 ;; Hardware stack levels required when called: 3
  7353 ;; This function calls:
  7354 ;;		_STLED316s_SPI_SendData
  7355 ;; This function is called by:
  7356 ;;		_Homing_Again_Auto
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text32
  7361   001D02                     __ptext32:
  7362                           	callstack 0
  7363   001D02                     _WriteSTLED316SMode:
  7364                           	callstack 26
  7365                           
  7366                           ;incstack = 0
  7367                           ;WriteSTLED316SMode@msg stored from wreg
  7368   001D02  6E44               	movwf	WriteSTLED316SMode@msg^0,c
  7369   001D04                     
  7370                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  7371   001D04  988B               	bcf	139,4,c	;volatile
  7372   001D06                     
  7373                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  7374   001D06  0E00               	movlw	0
  7375   001D08  EC2F  F011         	call	_STLED316s_SPI_SendData
  7376   001D0C                     
  7377                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  7378   001D0C  888B               	bsf	139,4,c	;volatile
  7379   001D0E                     
  7380                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  7381   001D0E  988B               	bcf	139,4,c	;volatile
  7382                           
  7383                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  7384   001D10  0E00               	movlw	0
  7385   001D12  EC2F  F011         	call	_STLED316s_SPI_SendData
  7386                           
  7387                           ;Display.c: 196:     switch (msg) {
  7388   001D16  EFCD  F00E         	goto	l3521
  7389   001D1A                     l3503:
  7390                           
  7391                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  7392   001D1A  0E79               	movlw	121
  7393   001D1C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7394                           
  7395                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  7396   001D20  0E3F               	movlw	63
  7397   001D22  EC2F  F011         	call	_STLED316s_SPI_SendData
  7398                           
  7399                           ;Display.c: 200:             break;
  7400   001D26  EFFA  F00E         	goto	l541
  7401   001D2A                     l3505:
  7402                           
  7403                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  7404   001D2A  0E3F               	movlw	63
  7405   001D2C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7406                           
  7407                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  7408   001D30  0E73               	movlw	115
  7409   001D32  EC2F  F011         	call	_STLED316s_SPI_SendData
  7410                           
  7411                           ;Display.c: 204:             break;
  7412   001D36  EFFA  F00E         	goto	l541
  7413   001D3A                     l3507:
  7414                           
  7415                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  7416   001D3A  0E39               	movlw	57
  7417   001D3C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7418                           
  7419                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  7420   001D40  0E77               	movlw	119
  7421   001D42  EC2F  F011         	call	_STLED316s_SPI_SendData
  7422                           
  7423                           ;Display.c: 208:             break;
  7424   001D46  EFFA  F00E         	goto	l541
  7425   001D4A                     l3509:
  7426                           
  7427                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  7428   001D4A  0E00               	movlw	0
  7429   001D4C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7430                           
  7431                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  7432   001D50  0E00               	movlw	0
  7433   001D52  EC2F  F011         	call	_STLED316s_SPI_SendData
  7434                           
  7435                           ;Display.c: 212:             break;
  7436   001D56  EFFA  F00E         	goto	l541
  7437   001D5A                     l3511:
  7438                           
  7439                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  7440   001D5A  0E00               	movlw	0
  7441   001D5C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7442                           
  7443                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  7444   001D60  0E3F               	movlw	63
  7445   001D62  EC2F  F011         	call	_STLED316s_SPI_SendData
  7446                           
  7447                           ;Display.c: 216:             break;
  7448   001D66  EFFA  F00E         	goto	l541
  7449   001D6A                     l3513:
  7450                           
  7451                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  7452   001D6A  0E79               	movlw	121
  7453   001D6C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7454                           
  7455                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  7456   001D70  0E06               	movlw	6
  7457   001D72  EC2F  F011         	call	_STLED316s_SPI_SendData
  7458                           
  7459                           ;Display.c: 220:             break;
  7460   001D76  EFFA  F00E         	goto	l541
  7461   001D7A                     l3515:
  7462                           
  7463                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  7464   001D7A  0E77               	movlw	119
  7465   001D7C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7466                           
  7467                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  7468   001D80  0E3E               	movlw	62
  7469   001D82  EC2F  F011         	call	_STLED316s_SPI_SendData
  7470                           
  7471                           ;Display.c: 224:             break;
  7472   001D86  EFFA  F00E         	goto	l541
  7473   001D8A                     l3517:
  7474                           
  7475                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  7476   001D8A  0E00               	movlw	0
  7477   001D8C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7478                           
  7479                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  7480   001D90  0E3E               	movlw	62
  7481   001D92  EC2F  F011         	call	_STLED316s_SPI_SendData
  7482                           
  7483                           ;Display.c: 228:             break;
  7484   001D96  EFFA  F00E         	goto	l541
  7485   001D9A                     l3521:
  7486   001D9A  5044               	movf	WriteSTLED316SMode@msg^0,w,c
  7487   001D9C  6E42               	movwf	??_WriteSTLED316SMode^0,c
  7488   001D9E  6A43               	clrf	(??_WriteSTLED316SMode+1)^0,c
  7489                           
  7490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7491                           ; Switch size 1, requested type "simple"
  7492                           ; Number of cases is 1, Range of values is 0 to 0
  7493                           ; switch strategies available:
  7494                           ; Name         Instructions Cycles
  7495                           ; simple_byte            4     3 (average)
  7496                           ;	Chosen strategy is simple_byte
  7497   001DA0  5043               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  7498   001DA2  0A00               	xorlw	0	; case 0
  7499   001DA4  B4D8               	btfsc	status,2,c
  7500   001DA6  EFD7  F00E         	goto	l6291
  7501   001DAA  EFFA  F00E         	goto	l541
  7502   001DAE                     l6291:
  7503                           
  7504                           ; Switch size 1, requested type "simple"
  7505                           ; Number of cases is 8, Range of values is 65 to 88
  7506                           ; switch strategies available:
  7507                           ; Name         Instructions Cycles
  7508                           ; simple_byte           25    13 (average)
  7509                           ;	Chosen strategy is simple_byte
  7510   001DAE  5042               	movf	??_WriteSTLED316SMode^0,w,c
  7511   001DB0  0A41               	xorlw	65	; case 65
  7512   001DB2  B4D8               	btfsc	status,2,c
  7513   001DB4  EFBD  F00E         	goto	l3515
  7514   001DB8  0A02               	xorlw	2	; case 67
  7515   001DBA  B4D8               	btfsc	status,2,c
  7516   001DBC  EF9D  F00E         	goto	l3507
  7517   001DC0  0A06               	xorlw	6	; case 69
  7518   001DC2  B4D8               	btfsc	status,2,c
  7519   001DC4  EF8D  F00E         	goto	l3503
  7520   001DC8  0A02               	xorlw	2	; case 71
  7521   001DCA  B4D8               	btfsc	status,2,c
  7522   001DCC  EFAD  F00E         	goto	l3511
  7523   001DD0  0A08               	xorlw	8	; case 79
  7524   001DD2  B4D8               	btfsc	status,2,c
  7525   001DD4  EF95  F00E         	goto	l3505
  7526   001DD8  0A1C               	xorlw	28	; case 83
  7527   001DDA  B4D8               	btfsc	status,2,c
  7528   001DDC  EFB5  F00E         	goto	l3513
  7529   001DE0  0A05               	xorlw	5	; case 86
  7530   001DE2  B4D8               	btfsc	status,2,c
  7531   001DE4  EFC5  F00E         	goto	l3517
  7532   001DE8  0A0E               	xorlw	14	; case 88
  7533   001DEA  B4D8               	btfsc	status,2,c
  7534   001DEC  EFA5  F00E         	goto	l3509
  7535   001DF0  EFFA  F00E         	goto	l541
  7536   001DF4                     l541:
  7537                           
  7538                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  7539   001DF4  888B               	bsf	139,4,c	;volatile
  7540                           
  7541                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  7542   001DF6  988B               	bcf	139,4,c	;volatile
  7543   001DF8                     
  7544                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  7545   001DF8  0E0D               	movlw	13
  7546   001DFA  EC2F  F011         	call	_STLED316s_SPI_SendData
  7547   001DFE                     
  7548                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  7549   001DFE  888B               	bsf	139,4,c	;volatile
  7550   001E00  0012               	return		;funcret
  7551   001E02                     __end_of_WriteSTLED316SMode:
  7552                           	callstack 0
  7553                           
  7554 ;; *************** function _WriteSTLED316SErr *****************
  7555 ;; Defined at:
  7556 ;;		line 291 in file "Display.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  msg             1    wreg     unsigned char 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  msg             1   16[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;Total ram usage:        3 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 3
  7577 ;; This function calls:
  7578 ;;		_STLED316s_SPI_SendData
  7579 ;; This function is called by:
  7580 ;;		_MotorPosition_Init
  7581 ;;		_Homing_Again_Manual
  7582 ;;		_Homing_Again_Auto
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text33
  7587   001E02                     __ptext33:
  7588                           	callstack 0
  7589   001E02                     _WriteSTLED316SErr:
  7590                           	callstack 26
  7591                           
  7592                           ;incstack = 0
  7593                           ;WriteSTLED316SErr@msg stored from wreg
  7594   001E02  6E44               	movwf	WriteSTLED316SErr@msg^0,c
  7595   001E04                     
  7596                           ;Display.c: 292:     LATCbits.LATC4 = 0;
  7597   001E04  988B               	bcf	139,4,c	;volatile
  7598   001E06                     
  7599                           ;Display.c: 294:     STLED316s_SPI_SendData(0x00);
  7600   001E06  0E00               	movlw	0
  7601   001E08  EC2F  F011         	call	_STLED316s_SPI_SendData
  7602   001E0C                     
  7603                           ;Display.c: 297:     LATCbits.LATC4 = 1;
  7604   001E0C  888B               	bsf	139,4,c	;volatile
  7605   001E0E                     
  7606                           ;Display.c: 299:     LATCbits.LATC4 = 0;
  7607   001E0E  988B               	bcf	139,4,c	;volatile
  7608                           
  7609                           ;Display.c: 301:     STLED316s_SPI_SendData(0x00);
  7610   001E10  0E00               	movlw	0
  7611   001E12  EC2F  F011         	call	_STLED316s_SPI_SendData
  7612                           
  7613                           ;Display.c: 303:     switch (msg) {
  7614   001E16  EF45  F00F         	goto	l3463
  7615   001E1A                     l3447:
  7616                           
  7617                           ;Display.c: 305:             STLED316s_SPI_SendData(0x79);
  7618   001E1A  0E79               	movlw	121
  7619   001E1C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7620                           
  7621                           ;Display.c: 306:             STLED316s_SPI_SendData(0x77);
  7622   001E20  0E77               	movlw	119
  7623   001E22  EC2F  F011         	call	_STLED316s_SPI_SendData
  7624                           
  7625                           ;Display.c: 307:             break;
  7626   001E26  EF6E  F00F         	goto	l567
  7627   001E2A                     l3449:
  7628                           
  7629                           ;Display.c: 309:             STLED316s_SPI_SendData(0x79);
  7630   001E2A  0E79               	movlw	121
  7631   001E2C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7632                           
  7633                           ;Display.c: 310:             STLED316s_SPI_SendData(0x3F);
  7634   001E30  0E3F               	movlw	63
  7635   001E32  EC2F  F011         	call	_STLED316s_SPI_SendData
  7636                           
  7637                           ;Display.c: 311:             break;
  7638   001E36  EF6E  F00F         	goto	l567
  7639   001E3A                     l3451:
  7640                           
  7641                           ;Display.c: 313:             STLED316s_SPI_SendData(0x79);
  7642   001E3A  0E79               	movlw	121
  7643   001E3C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7644                           
  7645                           ;Display.c: 314:             STLED316s_SPI_SendData(0x06);
  7646   001E40  0E06               	movlw	6
  7647   001E42  EC2F  F011         	call	_STLED316s_SPI_SendData
  7648                           
  7649                           ;Display.c: 315:             break;
  7650   001E46  EF6E  F00F         	goto	l567
  7651   001E4A                     l3453:
  7652                           
  7653                           ;Display.c: 317:             STLED316s_SPI_SendData(0x79);
  7654   001E4A  0E79               	movlw	121
  7655   001E4C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7656                           
  7657                           ;Display.c: 318:             STLED316s_SPI_SendData(0x5B);
  7658   001E50  0E5B               	movlw	91
  7659   001E52  EC2F  F011         	call	_STLED316s_SPI_SendData
  7660                           
  7661                           ;Display.c: 319:             break;
  7662   001E56  EF6E  F00F         	goto	l567
  7663   001E5A                     l3455:
  7664                           
  7665                           ;Display.c: 321:             STLED316s_SPI_SendData(0x00);
  7666   001E5A  0E00               	movlw	0
  7667   001E5C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7668                           
  7669                           ;Display.c: 322:             STLED316s_SPI_SendData(0x3F);
  7670   001E60  0E3F               	movlw	63
  7671   001E62  EC2F  F011         	call	_STLED316s_SPI_SendData
  7672                           
  7673                           ;Display.c: 323:             break;
  7674   001E66  EF6E  F00F         	goto	l567
  7675   001E6A                     l3457:
  7676                           
  7677                           ;Display.c: 325:             STLED316s_SPI_SendData(0x79);
  7678   001E6A  0E79               	movlw	121
  7679   001E6C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7680                           
  7681                           ;Display.c: 326:             STLED316s_SPI_SendData(0x06);
  7682   001E70  0E06               	movlw	6
  7683   001E72  EC2F  F011         	call	_STLED316s_SPI_SendData
  7684                           
  7685                           ;Display.c: 327:             break;
  7686   001E76  EF6E  F00F         	goto	l567
  7687   001E7A                     l3459:
  7688                           
  7689                           ;Display.c: 329:             STLED316s_SPI_SendData(0x77);
  7690   001E7A  0E77               	movlw	119
  7691   001E7C  EC2F  F011         	call	_STLED316s_SPI_SendData
  7692                           
  7693                           ;Display.c: 330:             STLED316s_SPI_SendData(0x3E);
  7694   001E80  0E3E               	movlw	62
  7695   001E82  EC2F  F011         	call	_STLED316s_SPI_SendData
  7696                           
  7697                           ;Display.c: 331:             break;
  7698   001E86  EF6E  F00F         	goto	l567
  7699   001E8A                     l3463:
  7700   001E8A  5044               	movf	WriteSTLED316SErr@msg^0,w,c
  7701   001E8C  6E42               	movwf	??_WriteSTLED316SErr^0,c
  7702   001E8E  6A43               	clrf	(??_WriteSTLED316SErr+1)^0,c
  7703                           
  7704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7705                           ; Switch size 1, requested type "simple"
  7706                           ; Number of cases is 1, Range of values is 0 to 0
  7707                           ; switch strategies available:
  7708                           ; Name         Instructions Cycles
  7709                           ; simple_byte            4     3 (average)
  7710                           ;	Chosen strategy is simple_byte
  7711   001E90  5043               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  7712   001E92  0A00               	xorlw	0	; case 0
  7713   001E94  B4D8               	btfsc	status,2,c
  7714   001E96  EF4F  F00F         	goto	l6293
  7715   001E9A  EF6E  F00F         	goto	l567
  7716   001E9E                     l6293:
  7717                           
  7718                           ; Switch size 1, requested type "simple"
  7719                           ; Number of cases is 7, Range of values is 48 to 83
  7720                           ; switch strategies available:
  7721                           ; Name         Instructions Cycles
  7722                           ; simple_byte           22    12 (average)
  7723                           ;	Chosen strategy is simple_byte
  7724   001E9E  5042               	movf	??_WriteSTLED316SErr^0,w,c
  7725   001EA0  0A30               	xorlw	48	; case 48
  7726   001EA2  B4D8               	btfsc	status,2,c
  7727   001EA4  EF15  F00F         	goto	l3449
  7728   001EA8  0A01               	xorlw	1	; case 49
  7729   001EAA  B4D8               	btfsc	status,2,c
  7730   001EAC  EF1D  F00F         	goto	l3451
  7731   001EB0  0A03               	xorlw	3	; case 50
  7732   001EB2  B4D8               	btfsc	status,2,c
  7733   001EB4  EF25  F00F         	goto	l3453
  7734   001EB8  0A73               	xorlw	115	; case 65
  7735   001EBA  B4D8               	btfsc	status,2,c
  7736   001EBC  EF3D  F00F         	goto	l3459
  7737   001EC0  0A04               	xorlw	4	; case 69
  7738   001EC2  B4D8               	btfsc	status,2,c
  7739   001EC4  EF0D  F00F         	goto	l3447
  7740   001EC8  0A02               	xorlw	2	; case 71
  7741   001ECA  B4D8               	btfsc	status,2,c
  7742   001ECC  EF2D  F00F         	goto	l3455
  7743   001ED0  0A14               	xorlw	20	; case 83
  7744   001ED2  B4D8               	btfsc	status,2,c
  7745   001ED4  EF35  F00F         	goto	l3457
  7746   001ED8  EF6E  F00F         	goto	l567
  7747   001EDC                     l567:
  7748                           
  7749                           ;Display.c: 336:     LATCbits.LATC4 = 1;
  7750   001EDC  888B               	bsf	139,4,c	;volatile
  7751                           
  7752                           ;Display.c: 338:     LATCbits.LATC4 = 0;
  7753   001EDE  988B               	bcf	139,4,c	;volatile
  7754   001EE0                     
  7755                           ;Display.c: 340:     STLED316s_SPI_SendData(0x0D);
  7756   001EE0  0E0D               	movlw	13
  7757   001EE2  EC2F  F011         	call	_STLED316s_SPI_SendData
  7758   001EE6                     
  7759                           ;Display.c: 342:     LATCbits.LATC4 = 1;
  7760   001EE6  888B               	bsf	139,4,c	;volatile
  7761   001EE8  0012               	return		;funcret
  7762   001EEA                     __end_of_WriteSTLED316SErr:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _STLED316s_SPI_SendData *****************
  7766 ;; Defined at:
  7767 ;;		line 88 in file "Display.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  Data            1    wreg     unsigned char 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  Data            1   10[COMRAM] unsigned char 
  7772 ;;  t               1   13[COMRAM] unsigned char 
  7773 ;;  i               1   12[COMRAM] unsigned char 
  7774 ;;  temp            1   11[COMRAM] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;Total ram usage:        6 bytes
  7789 ;; Hardware stack levels used: 1
  7790 ;; Hardware stack levels required when called: 2
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_InitSTLED316
  7795 ;;		_WriteSTLED316SData
  7796 ;;		_WriteSTLED316SMode
  7797 ;;		_WriteSTLED316SVibMode
  7798 ;;		_WriteSTLED316SErr
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text34
  7803   00225E                     __ptext34:
  7804                           	callstack 0
  7805   00225E                     _STLED316s_SPI_SendData:
  7806                           	callstack 27
  7807                           
  7808                           ;incstack = 0
  7809                           ;STLED316s_SPI_SendData@Data stored from wreg
  7810   00225E  6E3E               	movwf	STLED316s_SPI_SendData@Data^0,c
  7811   002260                     
  7812                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  7813   002260  0E00               	movlw	0
  7814   002262  6E40               	movwf	STLED316s_SPI_SendData@i^0,c
  7815   002264                     l506:
  7816                           
  7817                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  7818   002264  968B               	bcf	139,3,c	;volatile
  7819   002266                     
  7820                           ;Display.c: 93:         temp = Data & (0x1 << i);
  7821   002266  C040  F03C         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  7822   00226A  0E01               	movlw	1
  7823   00226C  6E3D               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  7824   00226E  2A3C               	incf	??_STLED316s_SPI_SendData^0,f,c
  7825   002270  EF3C  F011         	goto	u1854
  7826   002274                     u1855:
  7827   002274  90D8               	bcf	status,0,c
  7828   002276  363D               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  7829   002278                     u1854:
  7830   002278  2E3C               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  7831   00227A  EF3A  F011         	goto	u1855
  7832   00227E  503D               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  7833   002280  143E               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  7834   002282  6E3F               	movwf	STLED316s_SPI_SendData@temp^0,c
  7835   002284                     
  7836                           ;Display.c: 94:         if (temp)
  7837   002284  503F               	movf	STLED316s_SPI_SendData@temp^0,w,c
  7838   002286  B4D8               	btfsc	status,2,c
  7839   002288  EF48  F011         	goto	u1861
  7840   00228C  EF4A  F011         	goto	u1860
  7841   002290                     u1861:
  7842   002290  EF4D  F011         	goto	l508
  7843   002294                     u1860:
  7844   002294                     
  7845                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  7846   002294  8A8B               	bsf	139,5,c	;volatile
  7847   002296  EF4E  F011         	goto	l3173
  7848   00229A                     l508:
  7849                           
  7850                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  7851   00229A  9A8B               	bcf	139,5,c	;volatile
  7852   00229C                     l3173:
  7853                           
  7854                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  7855   00229C  0E00               	movlw	0
  7856   00229E  6E41               	movwf	STLED316s_SPI_SendData@t^0,c
  7857   0022A0                     l3179:
  7858   0022A0  2A41               	incf	STLED316s_SPI_SendData@t^0,f,c
  7859   0022A2  0E04               	movlw	4
  7860   0022A4  6441               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7861   0022A6  EF57  F011         	goto	u1871
  7862   0022AA  EF59  F011         	goto	u1870
  7863   0022AE                     u1871:
  7864   0022AE  EF50  F011         	goto	l3179
  7865   0022B2                     u1870:
  7866   0022B2                     
  7867                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  7868   0022B2  868B               	bsf	139,3,c	;volatile
  7869   0022B4                     
  7870                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  7871   0022B4  0E00               	movlw	0
  7872   0022B6  6E41               	movwf	STLED316s_SPI_SendData@t^0,c
  7873   0022B8                     l3189:
  7874   0022B8  2A41               	incf	STLED316s_SPI_SendData@t^0,f,c
  7875   0022BA  0E04               	movlw	4
  7876   0022BC  6441               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  7877   0022BE  EF63  F011         	goto	u1881
  7878   0022C2  EF65  F011         	goto	u1880
  7879   0022C6                     u1881:
  7880   0022C6  EF5C  F011         	goto	l3189
  7881   0022CA                     u1880:
  7882   0022CA                     
  7883                           ;Display.c: 101:     }
  7884   0022CA  2A40               	incf	STLED316s_SPI_SendData@i^0,f,c
  7885   0022CC  0E07               	movlw	7
  7886   0022CE  6440               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  7887   0022D0  EF6C  F011         	goto	u1891
  7888   0022D4  EF6E  F011         	goto	u1890
  7889   0022D8                     u1891:
  7890   0022D8  EF32  F011         	goto	l506
  7891   0022DC                     u1890:
  7892   0022DC  0012               	return		;funcret
  7893   0022DE                     __end_of_STLED316s_SPI_SendData:
  7894                           	callstack 0
  7895                           
  7896 ;; *************** function _Read_IR *****************
  7897 ;; Defined at:
  7898 ;;		line 1014 in file "main.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  2    8[COMRAM] unsigned int 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;Total ram usage:        2 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; Hardware stack levels required when called: 2
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_MotorPosition_Init
  7923 ;;		_Homing_Again_Manual
  7924 ;;		_Homing_Again_Auto
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text35
  7929   0026EA                     __ptext35:
  7930                           	callstack 0
  7931   0026EA                     _Read_IR:
  7932                           	callstack 27
  7933   0026EA                     
  7934                           ;main.c: 1016:     if (PORTAbits.RA1 == 1)
  7935   0026EA  A280               	btfss	128,1,c	;volatile
  7936   0026EC  EF7A  F013         	goto	u2111
  7937   0026F0  EF7C  F013         	goto	u2110
  7938   0026F4                     u2111:
  7939   0026F4  EF82  F013         	goto	l3431
  7940   0026F8                     u2110:
  7941   0026F8                     
  7942                           ;main.c: 1017:     {;main.c: 1018:         return 0;
  7943   0026F8  0E00               	movlw	0
  7944   0026FA  6E3D               	movwf	(?_Read_IR+1)^0,c
  7945   0026FC  0E00               	movlw	0
  7946   0026FE  6E3C               	movwf	?_Read_IR^0,c
  7947   002700  EF86  F013         	goto	l376
  7948   002704                     l3431:
  7949                           
  7950                           ;main.c: 1020:     {;main.c: 1021:         return 1;
  7951   002704  0E00               	movlw	0
  7952   002706  6E3D               	movwf	(?_Read_IR+1)^0,c
  7953   002708  0E01               	movlw	1
  7954   00270A  6E3C               	movwf	?_Read_IR^0,c
  7955   00270C                     l376:
  7956   00270C  0012               	return		;funcret
  7957   00270E                     __end_of_Read_IR:
  7958                           	callstack 0
  7959                           
  7960 ;; *************** function _MotorON *****************
  7961 ;; Defined at:
  7962 ;;		line 40 in file "MotorDriver.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;		None
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;Total ram usage:        0 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; Hardware stack levels required when called: 3
  7983 ;; This function calls:
  7984 ;;		_Set_RG3
  7985 ;; This function is called by:
  7986 ;;		_MotorPosition_Init
  7987 ;;		_Homing_Again_Manual
  7988 ;;		_Homing_Again_Auto
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text36
  7993   002796                     __ptext36:
  7994                           	callstack 0
  7995   002796                     _MotorON:
  7996                           	callstack 26
  7997   002796                     
  7998                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
  7999   002796  868F               	bsf	143,3,c	;volatile
  8000                           
  8001                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
  8002   002798  888F               	bsf	143,4,c	;volatile
  8003   00279A                     
  8004                           ;MotorDriver.c: 44:     Set_RG3();
  8005   00279A  ECE1  F013         	call	_Set_RG3	;wreg free
  8006   00279E  0012               	return		;funcret
  8007   0027A0                     __end_of_MotorON:
  8008                           	callstack 0
  8009                           
  8010 ;; *************** function _Set_RG3 *****************
  8011 ;; Defined at:
  8012 ;;		line 28 in file "MotorDriver.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;Total ram usage:        0 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 2
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_MotorON
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text37
  8041   0027C2                     __ptext37:
  8042                           	callstack 0
  8043   0027C2                     _Set_RG3:
  8044                           	callstack 26
  8045   0027C2                     
  8046                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
  8047   0027C2  0E08               	movlw	8
  8048   0027C4  6E73               	movwf	115,c	;volatile
  8049   0027C6                     
  8050                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
  8051   0027C6  8476               	bsf	118,2,c	;volatile
  8052   0027C8  0012               	return		;funcret
  8053   0027CA                     __end_of_Set_RG3:
  8054                           	callstack 0
  8055                           
  8056 ;; *************** function _MotorBREAK *****************
  8057 ;; Defined at:
  8058 ;;		line 47 in file "MotorDriver.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;		None
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;		None
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;Total ram usage:        0 bytes
  8077 ;; Hardware stack levels used: 1
  8078 ;; Hardware stack levels required when called: 3
  8079 ;; This function calls:
  8080 ;;		_Clr_RG3
  8081 ;; This function is called by:
  8082 ;;		_MotorPosition_Init
  8083 ;;		_Homing_Again_Manual
  8084 ;;		_Homing_Again_Auto
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text38
  8089   0027A0                     __ptext38:
  8090                           	callstack 0
  8091   0027A0                     _MotorBREAK:
  8092                           	callstack 26
  8093   0027A0                     
  8094                           ;MotorDriver.c: 49:     Clr_RG3();
  8095   0027A0  ECE5  F013         	call	_Clr_RG3	;wreg free
  8096   0027A4                     
  8097                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
  8098   0027A4  868F               	bsf	143,3,c	;volatile
  8099   0027A6                     
  8100                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
  8101   0027A6  888F               	bsf	143,4,c	;volatile
  8102   0027A8  0012               	return		;funcret
  8103   0027AA                     __end_of_MotorBREAK:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _Clr_RG3 *****************
  8107 ;; Defined at:
  8108 ;;		line 35 in file "MotorDriver.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 2
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_MotorBREAK
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text39
  8137   0027CA                     __ptext39:
  8138                           	callstack 0
  8139   0027CA                     _Clr_RG3:
  8140                           	callstack 26
  8141   0027CA                     
  8142                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
  8143   0027CA  0E00               	movlw	0
  8144   0027CC  6E73               	movwf	115,c	;volatile
  8145   0027CE                     
  8146                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
  8147   0027CE  9476               	bcf	118,2,c	;volatile
  8148   0027D0  0012               	return		;funcret
  8149   0027D2                     __end_of_Clr_RG3:
  8150                           	callstack 0
  8151                           
  8152 ;; *************** function _AD_capture_BattVoltage *****************
  8153 ;; Defined at:
  8154 ;;		line 1407 in file "main.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      void 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;Total ram usage:        2 bytes
  8173 ;; Hardware stack levels used: 1
  8174 ;; Hardware stack levels required when called: 3
  8175 ;; This function calls:
  8176 ;;		_delay_1ms
  8177 ;; This function is called by:
  8178 ;;		_main
  8179 ;;		_Homing_Again_Manual
  8180 ;;		_Homing_Again_Auto
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text40
  8185   002500                     __ptext40:
  8186                           	callstack 0
  8187   002500                     _AD_capture_BattVoltage:
  8188                           	callstack 26
  8189   002500                     
  8190                           ;main.c: 1409:     ADCON0bits.CHS0 = 0;
  8191   002500  94C2               	bcf	194,2,c	;volatile
  8192                           
  8193                           ;main.c: 1410:     ADCON0bits.CHS1 = 0;
  8194   002502  96C2               	bcf	194,3,c	;volatile
  8195                           
  8196                           ;main.c: 1411:     ADCON0bits.CHS2 = 0;
  8197   002504  98C2               	bcf	194,4,c	;volatile
  8198                           
  8199                           ;main.c: 1412:     ADCON0bits.CHS3 = 0;
  8200   002506  9AC2               	bcf	194,5,c	;volatile
  8201                           
  8202                           ;main.c: 1414:     ADCON0bits.ADON = 1;
  8203   002508  80C2               	bsf	194,0,c	;volatile
  8204   00250A                     
  8205                           ;main.c: 1415:     delay_1ms(5);
  8206   00250A  0E00               	movlw	0
  8207   00250C  6E3D               	movwf	(delay_1ms@time+1)^0,c
  8208   00250E  0E05               	movlw	5
  8209   002510  6E3C               	movwf	delay_1ms@time^0,c
  8210   002512  EC26  F013         	call	_delay_1ms	;wreg free
  8211   002516                     
  8212                           ;main.c: 1416:     ADCON0bits.GO = 1;
  8213   002516  82C2               	bsf	194,1,c	;volatile
  8214   002518                     l468:
  8215                           
  8216                           ;main.c: 1418:     while (ADCON0bits.GO == 1) {
  8217   002518  B2C2               	btfsc	194,1,c	;volatile
  8218   00251A  EF91  F012         	goto	u2101
  8219   00251E  EF93  F012         	goto	u2100
  8220   002522                     u2101:
  8221   002522  EF8C  F012         	goto	l468
  8222   002526                     u2100:
  8223   002526                     
  8224                           ;main.c: 1422:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  8225   002526  50C3               	movf	195,w,c	;volatile
  8226   002528  CFC4 F03F          	movff	4036,??_AD_capture_BattVoltage	;volatile
  8227   00252C  6A40               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  8228   00252E  C03F  F040         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  8229   002532  6A3F               	clrf	??_AD_capture_BattVoltage^0,c
  8230   002534  103F               	iorwf	??_AD_capture_BattVoltage^0,w,c
  8231   002536  6E0F               	movwf	_VOLTAGE^0,c
  8232   002538  5040               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  8233   00253A  6E10               	movwf	(_VOLTAGE+1)^0,c
  8234   00253C  0012               	return		;funcret
  8235   00253E                     __end_of_AD_capture_BattVoltage:
  8236                           	callstack 0
  8237                           
  8238 ;; *************** function _delay_1ms *****************
  8239 ;; Defined at:
  8240 ;;		line 1004 in file "main.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  time            2    8[COMRAM] unsigned int 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;Total ram usage:        3 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 2
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_MotorPosition_Init
  8265 ;;		_Homing_Again_Manual
  8266 ;;		_Homing_Again_Auto
  8267 ;;		_AD_capture_BattVoltage
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text41
  8272   00264C                     __ptext41:
  8273                           	callstack 0
  8274   00264C                     _delay_1ms:
  8275                           	callstack 27
  8276   00264C                     
  8277                           ;main.c: 1005:     while (time > 0) {
  8278   00264C  EF32  F013         	goto	l369
  8279   002650                     l3157:
  8280                           
  8281                           ;main.c: 1006:         _delay((unsigned long)((1)*(8000000/4000.0)));
  8282   002650  0E03               	movlw	3
  8283   002652  6E3E               	movwf	??_delay_1ms^0,c
  8284   002654  0E98               	movlw	152
  8285   002656                     u4567:
  8286   002656  2EE8               	decfsz	wreg,f,c
  8287   002658  D7FE               	bra	u4567
  8288   00265A  2E3E               	decfsz	??_delay_1ms^0,f,c
  8289   00265C  D7FC               	bra	u4567
  8290   00265E                     
  8291                           ;main.c: 1007:         time--;
  8292   00265E  063C               	decf	delay_1ms@time^0,f,c
  8293   002660  A0D8               	btfss	status,0,c
  8294   002662  063D               	decf	(delay_1ms@time+1)^0,f,c
  8295   002664                     l369:
  8296                           
  8297                           ;main.c: 1005:     while (time > 0) {
  8298   002664  503C               	movf	delay_1ms@time^0,w,c
  8299   002666  103D               	iorwf	(delay_1ms@time+1)^0,w,c
  8300   002668  A4D8               	btfss	status,2,c
  8301   00266A  EF39  F013         	goto	u1841
  8302   00266E  EF3B  F013         	goto	u1840
  8303   002672                     u1841:
  8304   002672  EF28  F013         	goto	l3157
  8305   002676                     u1840:
  8306   002676  0012               	return		;funcret
  8307   002678                     __end_of_delay_1ms:
  8308                           	callstack 0
  8309                           
  8310 ;; *************** function _high_isr *****************
  8311 ;; Defined at:
  8312 ;;		line 886 in file "main.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  i               1    7[COMRAM] unsigned char 
  8317 ;;  c               1    6[COMRAM] unsigned char 
  8318 ;;  Temp            1    5[COMRAM] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      void 
  8321 ;; Registers used:
  8322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;Total ram usage:        7 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; Hardware stack levels required when called: 1
  8335 ;; This function calls:
  8336 ;;		_Low_Power_Indicator
  8337 ;;		_Read1USART
  8338 ;;		i2_Write1USART
  8339 ;; This function is called by:
  8340 ;;		Interrupt level 2
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	intcode
  8345   000008                     __pintcode:
  8346                           	callstack 0
  8347   000008                     _high_isr:
  8348                           	callstack 25
  8349                           
  8350                           ;incstack = 0
  8351   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8352   00000A  CFD9 F037          	movff	fsr2l,??_high_isr+2
  8353   00000E  CFDA F038          	movff	fsr2h,??_high_isr+3
  8354   000012                     
  8355                           ;main.c: 887:     unsigned char c, i;;main.c: 888:     unsigned char Temp;;main.c: 890: 
      +                              if ((PIR1bits.RC1IF))
  8356   000012  AA9E               	btfss	158,5,c	;volatile
  8357   000014  EF0E  F000         	goto	i2u333_41
  8358   000018  EF10  F000         	goto	i2u333_40
  8359   00001C                     i2u333_41:
  8360   00001C  EFDD  F000         	goto	i2l332
  8361   000020                     i2u333_40:
  8362   000020                     
  8363                           ;main.c: 891:     {;main.c: 893:         c = Read1USART();
  8364   000020  EC62  F013         	call	_Read1USART	;wreg free
  8365   000024  6E3A               	movwf	high_isr@c^0,c
  8366   000026                     
  8367                           ;main.c: 895:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  8368   000026  0EA5               	movlw	165
  8369   000028  183A               	xorwf	high_isr@c^0,w,c
  8370   00002A  A4D8               	btfss	status,2,c
  8371   00002C  EF1A  F000         	goto	i2u334_41
  8372   000030  EF1C  F000         	goto	i2u334_40
  8373   000034                     i2u334_41:
  8374   000034  EF3E  F000         	goto	i2l4731
  8375   000038                     i2u334_40:
  8376   000038  5033               	movf	_Serial_Flag^0,w,c
  8377   00003A  B4D8               	btfsc	status,2,c
  8378   00003C  EF22  F000         	goto	i2u335_41
  8379   000040  EF24  F000         	goto	i2u335_40
  8380   000044                     i2u335_41:
  8381   000044  EF2C  F000         	goto	i2l4725
  8382   000048                     i2u335_40:
  8383   000048  042F               	decf	_Busy^0,w,c
  8384   00004A  A4D8               	btfss	status,2,c
  8385   00004C  EF2A  F000         	goto	i2u336_41
  8386   000050  EF2C  F000         	goto	i2u336_40
  8387   000054                     i2u336_41:
  8388   000054  EF3E  F000         	goto	i2l4731
  8389   000058                     i2u336_40:
  8390   000058                     i2l4725:
  8391                           
  8392                           ;main.c: 896:             Serial_GData = 1;
  8393   000058  0E01               	movlw	1
  8394   00005A  6E32               	movwf	_Serial_GData^0,c
  8395                           
  8396                           ;main.c: 897:             Serial_Count = 0;
  8397   00005C  0E00               	movlw	0
  8398   00005E  6E26               	movwf	(_Serial_Count+1)^0,c
  8399   000060  0E00               	movlw	0
  8400   000062  6E25               	movwf	_Serial_Count^0,c
  8401   000064                     
  8402                           ;main.c: 898:             Serial_Buffer[Serial_Count] = c;
  8403   000064  0E80               	movlw	low _Serial_Buffer
  8404   000066  2425               	addwf	_Serial_Count^0,w,c
  8405   000068  6ED9               	movwf	fsr2l,c
  8406   00006A  0E00               	movlw	high _Serial_Buffer
  8407   00006C  2026               	addwfc	(_Serial_Count+1)^0,w,c
  8408   00006E  6EDA               	movwf	fsr2h,c
  8409   000070  C03A  FFDF         	movff	high_isr@c,indf2
  8410   000074                     i2l4729:
  8411                           
  8412                           ;main.c: 899:             Serial_Count++;
  8413   000074  4A25               	infsnz	_Serial_Count^0,f,c
  8414   000076  2A26               	incf	(_Serial_Count+1)^0,f,c
  8415                           
  8416                           ;main.c: 900:         } else if (Serial_GData == 1) {
  8417   000078  EFE7  F000         	goto	i2l4795
  8418   00007C                     i2l4731:
  8419   00007C  0432               	decf	_Serial_GData^0,w,c
  8420   00007E  A4D8               	btfss	status,2,c
  8421   000080  EF44  F000         	goto	i2u337_41
  8422   000084  EF46  F000         	goto	i2u337_40
  8423   000088                     i2u337_41:
  8424   000088  EFE7  F000         	goto	i2l4795
  8425   00008C                     i2u337_40:
  8426   00008C                     
  8427                           ;main.c: 901:             Serial_Buffer[Serial_Count] = c;
  8428   00008C  0E80               	movlw	low _Serial_Buffer
  8429   00008E  2425               	addwf	_Serial_Count^0,w,c
  8430   000090  6ED9               	movwf	fsr2l,c
  8431   000092  0E00               	movlw	high _Serial_Buffer
  8432   000094  2026               	addwfc	(_Serial_Count+1)^0,w,c
  8433   000096  6EDA               	movwf	fsr2h,c
  8434   000098  C03A  FFDF         	movff	high_isr@c,indf2
  8435   00009C                     
  8436                           ;main.c: 903:             if (Serial_Count < 5) {
  8437   00009C  5026               	movf	(_Serial_Count+1)^0,w,c
  8438   00009E  E107               	bnz	i2u338_41
  8439   0000A0  0E05               	movlw	5
  8440   0000A2  5C25               	subwf	_Serial_Count^0,w,c
  8441   0000A4  B0D8               	btfsc	status,0,c
  8442   0000A6  EF57  F000         	goto	i2u338_41
  8443   0000AA  EF59  F000         	goto	i2u338_40
  8444   0000AE                     i2u338_41:
  8445   0000AE  EFD9  F000         	goto	i2l4789
  8446   0000B2                     i2u338_40:
  8447   0000B2                     
  8448                           ;main.c: 904:                 if (c == 0x5A) {
  8449   0000B2  0E5A               	movlw	90
  8450   0000B4  183A               	xorwf	high_isr@c^0,w,c
  8451   0000B6  A4D8               	btfss	status,2,c
  8452   0000B8  EF60  F000         	goto	i2u339_41
  8453   0000BC  EF62  F000         	goto	i2u339_40
  8454   0000C0                     i2u339_41:
  8455   0000C0  EF3A  F000         	goto	i2l4729
  8456   0000C4                     i2u339_40:
  8457   0000C4                     
  8458                           ;main.c: 905:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  8459   0000C4  0100               	movlb	0	; () banked
  8460   0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  8461   0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  8462   0000CA  6E39               	movwf	high_isr@Temp^0,c
  8463                           
  8464                           ;main.c: 907:                     if (Temp == Serial_Buffer[3]) {
  8465   0000CC  5039               	movf	high_isr@Temp^0,w,c
  8466   0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  8467   0000D0  A4D8               	btfss	status,2,c
  8468   0000D2  EF6D  F000         	goto	i2u340_41
  8469   0000D6  EF6F  F000         	goto	i2u340_40
  8470   0000DA                     i2u340_41:
  8471   0000DA  EFAE  F000         	goto	i2l4771
  8472   0000DE                     i2u340_40:
  8473   0000DE                     
  8474                           ; BSR set to: 0
  8475                           ;main.c: 908:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  8476   0000DE  502F               	movf	_Busy^0,w,c
  8477   0000E0  B4D8               	btfsc	status,2,c
  8478   0000E2  EF75  F000         	goto	i2u341_41
  8479   0000E6  EF77  F000         	goto	i2u341_40
  8480   0000EA                     i2u341_41:
  8481   0000EA  EF80  F000         	goto	i2l4745
  8482   0000EE                     i2u341_40:
  8483   0000EE                     
  8484                           ; BSR set to: 0
  8485   0000EE  0EF5               	movlw	245
  8486   0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8487   0000F2  A4D8               	btfss	status,2,c
  8488   0000F4  EF7E  F000         	goto	i2u342_41
  8489   0000F8  EF80  F000         	goto	i2u342_40
  8490   0000FC                     i2u342_41:
  8491   0000FC  EF96  F000         	goto	i2l4757
  8492   000100                     i2u342_40:
  8493   000100                     i2l4745:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;main.c: 910:                             for (i = 0; i < 5; i++) {
  8497   000100  0E00               	movlw	0
  8498   000102  6E3B               	movwf	high_isr@i^0,c
  8499   000104                     i2l4751:
  8500                           
  8501                           ;main.c: 911:                                 Write1USART(Serial_Buffer[i]);
  8502   000104  0E80               	movlw	low _Serial_Buffer
  8503   000106  243B               	addwf	high_isr@i^0,w,c
  8504   000108  6ED9               	movwf	fsr2l,c
  8505   00010A  6ADA               	clrf	fsr2h,c
  8506   00010C  0E00               	movlw	high _Serial_Buffer
  8507   00010E  22DA               	addwfc	fsr2h,f,c
  8508   000110  50DF               	movf	indf2,w,c
  8509   000112  ECA9  F013         	call	i2_Write1USART
  8510   000116                     
  8511                           ;main.c: 912:                             }
  8512   000116  2A3B               	incf	high_isr@i^0,f,c
  8513   000118  0E04               	movlw	4
  8514   00011A  643B               	cpfsgt	high_isr@i^0,c
  8515   00011C  EF92  F000         	goto	i2u343_41
  8516   000120  EF94  F000         	goto	i2u343_40
  8517   000124                     i2u343_41:
  8518   000124  EF82  F000         	goto	i2l4751
  8519   000128                     i2u343_40:
  8520   000128  EFA4  F000         	goto	i2l4769
  8521   00012C                     i2l4757:
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;main.c: 916:                             for (i = 0; i < 5; i++) {
  8525   00012C  0E00               	movlw	0
  8526   00012E  6E3B               	movwf	high_isr@i^0,c
  8527   000130                     i2l4763:
  8528                           
  8529                           ;main.c: 917:                                 Write1USART(0x16);
  8530   000130  0E16               	movlw	22
  8531   000132  ECA9  F013         	call	i2_Write1USART
  8532   000136                     
  8533                           ;main.c: 918:                             }
  8534   000136  2A3B               	incf	high_isr@i^0,f,c
  8535   000138  0E04               	movlw	4
  8536   00013A  643B               	cpfsgt	high_isr@i^0,c
  8537   00013C  EFA2  F000         	goto	i2u344_41
  8538   000140  EFA4  F000         	goto	i2u344_40
  8539   000144                     i2u344_41:
  8540   000144  EF98  F000         	goto	i2l4763
  8541   000148                     i2u344_40:
  8542   000148                     i2l4769:
  8543                           
  8544                           ;main.c: 922:                         Serial_Flag = 1;
  8545   000148  0E01               	movlw	1
  8546   00014A  6E33               	movwf	_Serial_Flag^0,c
  8547                           
  8548                           ;main.c: 923:                         Serial_Count = 0;
  8549   00014C  0E00               	movlw	0
  8550   00014E  6E26               	movwf	(_Serial_Count+1)^0,c
  8551   000150  0E00               	movlw	0
  8552   000152  6E25               	movwf	_Serial_Count^0,c
  8553                           
  8554                           ;main.c: 924:                         OpMode = AUTO_MODE;
  8555   000154  0E02               	movlw	2
  8556   000156  6E2C               	movwf	_OpMode^0,c	;volatile
  8557                           
  8558                           ;main.c: 926:                     } else {
  8559   000158  EFC2  F000         	goto	i2l4783
  8560   00015C                     i2l4771:
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;main.c: 927:                         Serial_Flag = 0;
  8564   00015C  0E00               	movlw	0
  8565   00015E  6E33               	movwf	_Serial_Flag^0,c
  8566                           
  8567                           ;main.c: 928:                         Serial_Count = 0;
  8568   000160  0E00               	movlw	0
  8569   000162  6E26               	movwf	(_Serial_Count+1)^0,c
  8570   000164  0E00               	movlw	0
  8571   000166  6E25               	movwf	_Serial_Count^0,c
  8572                           
  8573                           ;main.c: 931:                         for (i = 0; i < 5; i++) {
  8574   000168  0E00               	movlw	0
  8575   00016A  6E3B               	movwf	high_isr@i^0,c
  8576   00016C                     i2l4777:
  8577                           
  8578                           ;main.c: 932:                             Write1USART(0x15);
  8579   00016C  0E15               	movlw	21
  8580   00016E  ECA9  F013         	call	i2_Write1USART
  8581   000172                     
  8582                           ;main.c: 933:                         }
  8583   000172  2A3B               	incf	high_isr@i^0,f,c
  8584   000174  0E04               	movlw	4
  8585   000176  643B               	cpfsgt	high_isr@i^0,c
  8586   000178  EFC0  F000         	goto	i2u345_41
  8587   00017C  EFC2  F000         	goto	i2u345_40
  8588   000180                     i2u345_41:
  8589   000180  EFB6  F000         	goto	i2l4777
  8590   000184                     i2u345_40:
  8591   000184                     i2l4783:
  8592                           
  8593                           ;main.c: 937:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  8594   000184  0EF5               	movlw	245
  8595   000186  0100               	movlb	0	; () banked
  8596   000188  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8597   00018A  A4D8               	btfss	status,2,c
  8598   00018C  EFCA  F000         	goto	i2u346_41
  8599   000190  EFCC  F000         	goto	i2u346_40
  8600   000194                     i2u346_41:
  8601   000194  EF3A  F000         	goto	i2l4729
  8602   000198                     i2u346_40:
  8603   000198                     
  8604                           ; BSR set to: 0
  8605   000198  0E02               	movlw	2
  8606   00019A  182C               	xorwf	_OpMode^0,w,c	;volatile
  8607   00019C  A4D8               	btfss	status,2,c
  8608   00019E  EFD3  F000         	goto	i2u347_41
  8609   0001A2  EFD5  F000         	goto	i2u347_40
  8610   0001A6                     i2u347_41:
  8611   0001A6  EF3A  F000         	goto	i2l4729
  8612   0001AA                     i2u347_40:
  8613   0001AA                     
  8614                           ; BSR set to: 0
  8615                           ;main.c: 938:                         Stop = 1;
  8616   0001AA  0E01               	movlw	1
  8617   0001AC  6E31               	movwf	_Stop^0,c
  8618   0001AE  EF3A  F000         	goto	i2l4729
  8619   0001B2                     i2l4789:
  8620                           
  8621                           ;main.c: 942:                 Serial_GData = 0;
  8622   0001B2  0E00               	movlw	0
  8623   0001B4  6E32               	movwf	_Serial_GData^0,c
  8624   0001B6  EF3A  F000         	goto	i2l4729
  8625   0001BA                     i2l332:
  8626                           
  8627                           ;main.c: 948:         if (RCSTA1bits.OERR == 1) {
  8628   0001BA  A2AC               	btfss	172,1,c	;volatile
  8629   0001BC  EFE2  F000         	goto	i2u348_41
  8630   0001C0  EFE4  F000         	goto	i2u348_40
  8631   0001C4                     i2u348_41:
  8632   0001C4  EFE7  F000         	goto	i2l4795
  8633   0001C8                     i2u348_40:
  8634   0001C8                     
  8635                           ;main.c: 949:             RCSTA1bits.OERR = 0;
  8636   0001C8  92AC               	bcf	172,1,c	;volatile
  8637                           
  8638                           ;main.c: 950:             RCSTA1bits.CREN = 0;
  8639   0001CA  98AC               	bcf	172,4,c	;volatile
  8640                           
  8641                           ;main.c: 951:             RCSTA1bits.CREN = 1;
  8642   0001CC  88AC               	bsf	172,4,c	;volatile
  8643   0001CE                     i2l4795:
  8644                           
  8645                           ;main.c: 955:     if (TMR1IF_triggered == 1) {
  8646   0001CE  0427               	decf	_TMR1IF_triggered^0,w,c	;volatile
  8647   0001D0  A4D8               	btfss	status,2,c
  8648   0001D2  EFED  F000         	goto	i2u349_41
  8649   0001D6  EFEF  F000         	goto	i2u349_40
  8650   0001DA                     i2u349_41:
  8651   0001DA  EF36  F001         	goto	i2l4813
  8652   0001DE                     i2u349_40:
  8653   0001DE                     
  8654                           ;main.c: 956:         if (errorcounter > 0) {
  8655   0001DE  BE53               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  8656   0001E0  EFFC  F000         	goto	i2u350_41
  8657   0001E4  5053               	movf	(_errorcounter+3)^0,w,c	;volatile
  8658   0001E6  1052               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  8659   0001E8  1051               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  8660   0001EA  E108               	bnz	i2u350_40
  8661   0001EC  0450               	decf	_errorcounter^0,w,c	;volatile
  8662   0001EE  A0D8               	btfss	status,0,c
  8663   0001F0  EFFC  F000         	goto	i2u350_41
  8664   0001F4  EFFE  F000         	goto	i2u350_40
  8665   0001F8                     i2u350_41:
  8666   0001F8  EF08  F001         	goto	i2l4801
  8667   0001FC                     i2u350_40:
  8668   0001FC                     
  8669                           ;main.c: 957:             errorcounter--;
  8670   0001FC  0EFF               	movlw	255
  8671   0001FE  2650               	addwf	_errorcounter^0,f,c	;volatile
  8672   000200  0EFF               	movlw	255
  8673   000202  2251               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  8674   000204  0EFF               	movlw	255
  8675   000206  2252               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  8676   000208  0EFF               	movlw	255
  8677   00020A  2253               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  8678                           
  8679                           ;main.c: 958:         } else {
  8680   00020C  EF10  F001         	goto	i2l4803
  8681   000210                     i2l4801:
  8682                           
  8683                           ;main.c: 959:             errorcounter = 0;
  8684   000210  0E00               	movlw	0
  8685   000212  6E50               	movwf	_errorcounter^0,c	;volatile
  8686   000214  0E00               	movlw	0
  8687   000216  6E51               	movwf	(_errorcounter+1)^0,c	;volatile
  8688   000218  0E00               	movlw	0
  8689   00021A  6E52               	movwf	(_errorcounter+2)^0,c	;volatile
  8690   00021C  0E00               	movlw	0
  8691   00021E  6E53               	movwf	(_errorcounter+3)^0,c	;volatile
  8692   000220                     i2l4803:
  8693                           
  8694                           ;main.c: 962:         if (LowPowerCounter > 0) {
  8695   000220  0100               	movlb	0	; () banked
  8696   000222  BFA5               	btfsc	(_LowPowerCounter+3)& (0+255),7,b	;volatile
  8697   000224  EF1E  F001         	goto	i2u351_41
  8698   000228  51A5               	movf	(_LowPowerCounter+3)& (0+255),w,b	;volatile
  8699   00022A  11A4               	iorwf	(_LowPowerCounter+2)& (0+255),w,b	;volatile
  8700   00022C  11A3               	iorwf	(_LowPowerCounter+1)& (0+255),w,b	;volatile
  8701   00022E  E108               	bnz	i2u351_40
  8702   000230  05A2               	decf	_LowPowerCounter& (0+255),w,b	;volatile
  8703   000232  A0D8               	btfss	status,0,c
  8704   000234  EF1E  F001         	goto	i2u351_41
  8705   000238  EF20  F001         	goto	i2u351_40
  8706   00023C                     i2u351_41:
  8707   00023C  EF2A  F001         	goto	i2l4807
  8708   000240                     i2u351_40:
  8709   000240                     
  8710                           ; BSR set to: 0
  8711                           ;main.c: 963:             LowPowerCounter--;
  8712   000240  0EFF               	movlw	255
  8713   000242  27A2               	addwf	_LowPowerCounter& (0+255),f,b	;volatile
  8714   000244  0EFF               	movlw	255
  8715   000246  23A3               	addwfc	(_LowPowerCounter+1)& (0+255),f,b	;volatile
  8716   000248  0EFF               	movlw	255
  8717   00024A  23A4               	addwfc	(_LowPowerCounter+2)& (0+255),f,b	;volatile
  8718   00024C  0EFF               	movlw	255
  8719   00024E  23A5               	addwfc	(_LowPowerCounter+3)& (0+255),f,b	;volatile
  8720                           
  8721                           ;main.c: 964:         } else {
  8722   000250  EF34  F001         	goto	i2l4811
  8723   000254                     i2l4807:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;main.c: 965:             LowPowerCounter = 20;
  8727   000254  0E14               	movlw	20
  8728   000256  6FA2               	movwf	_LowPowerCounter& (0+255),b	;volatile
  8729   000258  0E00               	movlw	0
  8730   00025A  6FA3               	movwf	(_LowPowerCounter+1)& (0+255),b	;volatile
  8731   00025C  0E00               	movlw	0
  8732   00025E  6FA4               	movwf	(_LowPowerCounter+2)& (0+255),b	;volatile
  8733   000260  0E00               	movlw	0
  8734   000262  6FA5               	movwf	(_LowPowerCounter+3)& (0+255),b	;volatile
  8735   000264                     
  8736                           ; BSR set to: 0
  8737                           ;main.c: 966:             Low_Power_Indicator();
  8738   000264  ECF4  F012         	call	_Low_Power_Indicator	;wreg free
  8739   000268                     i2l4811:
  8740                           
  8741                           ;main.c: 969:         TMR1IF_triggered = 0;
  8742   000268  0E00               	movlw	0
  8743   00026A  6E27               	movwf	_TMR1IF_triggered^0,c	;volatile
  8744   00026C                     i2l4813:
  8745                           
  8746                           ;main.c: 972:     if (TMR1IF) {
  8747   00026C  A09E               	btfss	3998,0,c	;volatile
  8748   00026E  EF3B  F001         	goto	i2u352_41
  8749   000272  EF3D  F001         	goto	i2u352_40
  8750   000276                     i2u352_41:
  8751   000276  EF44  F001         	goto	i2l4819
  8752   00027A                     i2u352_40:
  8753   00027A                     
  8754                           ;main.c: 973:         TMR1 = 0x9E57;
  8755   00027A  0E9E               	movlw	158
  8756   00027C  6ECF               	movwf	207,c	;volatile
  8757   00027E  0E57               	movlw	87
  8758   000280  6ECE               	movwf	206,c	;volatile
  8759   000282                     
  8760                           ;main.c: 974:         TMR1IF = 0;
  8761   000282  909E               	bcf	3998,0,c	;volatile
  8762                           
  8763                           ;main.c: 975:         TMR1IF_triggered = 1;
  8764   000284  0E01               	movlw	1
  8765   000286  6E27               	movwf	_TMR1IF_triggered^0,c	;volatile
  8766   000288                     i2l4819:
  8767                           
  8768                           ;main.c: 980:     if(INTCON3bits.INT2F == 1) {
  8769   000288  A2F0               	btfss	240,1,c	;volatile
  8770   00028A  EF49  F001         	goto	i2u353_41
  8771   00028E  EF4B  F001         	goto	i2u353_40
  8772   000292                     i2u353_41:
  8773   000292  EF81  F001         	goto	i2l366
  8774   000296                     i2u353_40:
  8775   000296                     
  8776                           ;main.c: 983:       _delay((unsigned long)((500)*(8000000/4000.0)));
  8777   000296  0E06               	movlw	6
  8778   000298  6E36               	movwf	(??_high_isr+1)^0,c
  8779   00029A  0E13               	movlw	19
  8780   00029C  6E35               	movwf	??_high_isr^0,c
  8781   00029E  0EAE               	movlw	174
  8782   0002A0                     i2u457_47:
  8783   0002A0  2EE8               	decfsz	wreg,f,c
  8784   0002A2  D7FE               	bra	i2u457_47
  8785   0002A4  2E35               	decfsz	??_high_isr^0,f,c
  8786   0002A6  D7FC               	bra	i2u457_47
  8787   0002A8  2E36               	decfsz	(??_high_isr+1)^0,f,c
  8788   0002AA  D7FA               	bra	i2u457_47
  8789   0002AC                     
  8790                           ;main.c: 985:       if (dispense == 0 && PORTBbits.RB4 != 0)
  8791   0002AC  5009               	movf	_dispense^0,w,c
  8792   0002AE  100A               	iorwf	(_dispense+1)^0,w,c
  8793   0002B0  A4D8               	btfss	status,2,c
  8794   0002B2  EF5D  F001         	goto	i2u354_41
  8795   0002B6  EF5F  F001         	goto	i2u354_40
  8796   0002BA                     i2u354_41:
  8797   0002BA  EF6C  F001         	goto	i2l4829
  8798   0002BE                     i2u354_40:
  8799   0002BE  A881               	btfss	129,4,c	;volatile
  8800   0002C0  EF64  F001         	goto	i2u355_41
  8801   0002C4  EF66  F001         	goto	i2u355_40
  8802   0002C8                     i2u355_41:
  8803   0002C8  EF6C  F001         	goto	i2l4829
  8804   0002CC                     i2u355_40:
  8805   0002CC                     
  8806                           ;main.c: 986:       {;main.c: 988:         dispense = 1;
  8807   0002CC  0E00               	movlw	0
  8808   0002CE  6E0A               	movwf	(_dispense+1)^0,c
  8809   0002D0  0E01               	movlw	1
  8810   0002D2  6E09               	movwf	_dispense^0,c
  8811                           
  8812                           ;main.c: 989:       }
  8813   0002D4  EF80  F001         	goto	i2l4835
  8814   0002D8                     i2l4829:
  8815   0002D8  0409               	decf	_dispense^0,w,c
  8816   0002DA  100A               	iorwf	(_dispense+1)^0,w,c
  8817   0002DC  A4D8               	btfss	status,2,c
  8818   0002DE  EF73  F001         	goto	i2u356_41
  8819   0002E2  EF75  F001         	goto	i2u356_40
  8820   0002E6                     i2u356_41:
  8821   0002E6  EF80  F001         	goto	i2l4835
  8822   0002EA                     i2u356_40:
  8823   0002EA  A881               	btfss	129,4,c	;volatile
  8824   0002EC  EF7A  F001         	goto	i2u357_41
  8825   0002F0  EF7C  F001         	goto	i2u357_40
  8826   0002F4                     i2u357_41:
  8827   0002F4  EF80  F001         	goto	i2l4835
  8828   0002F8                     i2u357_40:
  8829   0002F8                     
  8830                           ;main.c: 991:       {;main.c: 993:         dispense = 0;
  8831   0002F8  0E00               	movlw	0
  8832   0002FA  6E0A               	movwf	(_dispense+1)^0,c
  8833   0002FC  0E00               	movlw	0
  8834   0002FE  6E09               	movwf	_dispense^0,c
  8835   000300                     i2l4835:
  8836                           
  8837                           ;main.c: 996:       INTCON3bits.INT2F = 0;
  8838   000300  92F0               	bcf	240,1,c	;volatile
  8839   000302                     i2l366:
  8840   000302  C038  FFDA         	movff	??_high_isr+3,fsr2h
  8841   000306  C037  FFD9         	movff	??_high_isr+2,fsr2l
  8842   00030A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8843   00030C  0011               	retfie		f
  8844   00030E                     __end_of_high_isr:
  8845                           	callstack 0
  8846                           
  8847 ;; *************** function i2_Write1USART *****************
  8848 ;; Defined at:
  8849 ;;		line 47 in file "usart.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  data            1    wreg     unsigned char 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  data            1    0[COMRAM] unsigned char 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8867 ;;Total ram usage:        1 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_high_isr
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text43
  8877   002752                     __ptext43:
  8878                           	callstack 0
  8879   002752                     i2_Write1USART:
  8880                           	callstack 25
  8881                           
  8882                           ;incstack = 0
  8883                           ;i2Write1USART@data stored from wreg
  8884   002752  6E34               	movwf	i2Write1USART@data^0,c
  8885   002754                     
  8886                           ;usart.c: 48:     TXREG1 = data;
  8887   002754  C034  FFAE         	movff	i2Write1USART@data,4014	;volatile
  8888   002758                     i2l660:
  8889   002758  A2AD               	btfss	173,1,c	;volatile
  8890   00275A  EFB1  F013         	goto	i2u272_41
  8891   00275E  EFB3  F013         	goto	i2u272_40
  8892   002762                     i2u272_41:
  8893   002762  EFAC  F013         	goto	i2l660
  8894   002766                     i2u272_40:
  8895   002766  0012               	return		;funcret
  8896   002768                     __end_ofi2_Write1USART:
  8897                           	callstack 0
  8898                           
  8899 ;; *************** function _Read1USART *****************
  8900 ;; Defined at:
  8901 ;;		line 56 in file "usart.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;  result          1    0[COMRAM] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      unsigned char 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;Total ram usage:        1 bytes
  8920 ;; Hardware stack levels used: 1
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_high_isr
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text44
  8929   0026C4                     __ptext44:
  8930                           	callstack 0
  8931   0026C4                     _Read1USART:
  8932                           	callstack 25
  8933   0026C4                     
  8934                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  8935   0026C4  A2AC               	btfss	172,1,c	;volatile
  8936   0026C6  EF67  F013         	goto	i2u269_41
  8937   0026CA  EF69  F013         	goto	i2u269_40
  8938   0026CE                     i2u269_41:
  8939   0026CE  EF71  F013         	goto	i2l666
  8940   0026D2                     i2u269_40:
  8941   0026D2                     
  8942                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  8943   0026D2  98AC               	bcf	172,4,c	;volatile
  8944                           
  8945                           ;usart.c: 61:         result = RCREG1;
  8946   0026D4  CFAF F034          	movff	4015,Read1USART@result	;volatile
  8947                           
  8948                           ;usart.c: 62:         result = RCREG1;
  8949   0026D8  CFAF F034          	movff	4015,Read1USART@result	;volatile
  8950                           
  8951                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  8952   0026DC  88AC               	bsf	172,4,c	;volatile
  8953                           
  8954                           ;usart.c: 64:     } else {
  8955   0026DE  EF73  F013         	goto	i2l4057
  8956   0026E2                     i2l666:
  8957                           
  8958                           ;usart.c: 65:         result = RCREG1;
  8959   0026E2  CFAF F034          	movff	4015,Read1USART@result	;volatile
  8960   0026E6                     i2l4057:
  8961                           
  8962                           ;usart.c: 68:     return result;
  8963   0026E6  5034               	movf	Read1USART@result^0,w,c
  8964   0026E8  0012               	return		;funcret
  8965   0026EA                     __end_of_Read1USART:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _Low_Power_Indicator *****************
  8969 ;; Defined at:
  8970 ;;		line 1425 in file "main.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;Total ram usage:        0 bytes
  8989 ;; Hardware stack levels used: 1
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_high_isr
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text45
  8998   0025E8                     __ptext45:
  8999                           	callstack 0
  9000   0025E8                     _Low_Power_Indicator:
  9001                           	callstack 25
  9002   0025E8                     
  9003                           ;main.c: 1427:     if (VOLTAGE <= 0x0366)
  9004   0025E8  0E67               	movlw	103
  9005   0025EA  5C0F               	subwf	_VOLTAGE^0,w,c
  9006   0025EC  0E03               	movlw	3
  9007   0025EE  5810               	subwfb	(_VOLTAGE+1)^0,w,c
  9008   0025F0  B0D8               	btfsc	status,0,c
  9009   0025F2  EFFD  F012         	goto	i2u270_41
  9010   0025F6  EFFF  F012         	goto	i2u270_40
  9011   0025FA                     i2u270_41:
  9012   0025FA  EF02  F013         	goto	i2l4065
  9013   0025FE                     i2u270_40:
  9014   0025FE                     
  9015                           ;main.c: 1428:     {;main.c: 1430:         LATDbits.LATD1 = 1;
  9016   0025FE  828C               	bsf	140,1,c	;volatile
  9017                           
  9018                           ;main.c: 1432:     } else if (VOLTAGE >= 0x03C0)
  9019   002600  EF0E  F013         	goto	i2l477
  9020   002604                     i2l4065:
  9021   002604  0EC0               	movlw	192
  9022   002606  5C0F               	subwf	_VOLTAGE^0,w,c
  9023   002608  0E03               	movlw	3
  9024   00260A  5810               	subwfb	(_VOLTAGE+1)^0,w,c
  9025   00260C  A0D8               	btfss	status,0,c
  9026   00260E  EF0B  F013         	goto	i2u271_41
  9027   002612  EF0D  F013         	goto	i2u271_40
  9028   002616                     i2u271_41:
  9029   002616  EF0E  F013         	goto	i2l477
  9030   00261A                     i2u271_40:
  9031   00261A                     
  9032                           ;main.c: 1433:     {;main.c: 1434:         LATDbits.LATD1 = 0;
  9033   00261A  928C               	bcf	140,1,c	;volatile
  9034   00261C                     i2l477:
  9035   00261C  0012               	return		;funcret
  9036   00261E                     __end_of_Low_Power_Indicator:
  9037                           	callstack 0
  9038   000000                     
  9039                           	psect	rparam
  9040   000000                     
  9041                           	psect	temp
  9042   000057                     btemp:
  9043                           	callstack 0
  9044   000057                     	ds	1
  9045   000000                     int$flags	set	btemp
  9046   000000                     wtemp8	set	btemp+1
  9047   000000                     ttemp5	set	btemp+1
  9048   000000                     ttemp6	set	btemp+4
  9049   000000                     ttemp7	set	btemp+8
  9050                           
  9051                           	psect	config
  9052                           
  9053                           ;Config register CONFIG1L @ 0x7FF8
  9054                           ;	Watchdog Timer Enable bit
  9055                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  9056                           ;	PLL Prescaler Selection bits
  9057                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9058                           ;	Stack Overflow/Underflow Reset Enable bit
  9059                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  9060                           ;	Extended Instruction Set Enable bit
  9061                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9062                           ;	Background Debugger Enable bit
  9063                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  9064   007FF8                     	org	32760
  9065   007FF8  AE                 	db	174
  9066                           
  9067                           ;Config register CONFIG1H @ 0x7FF9
  9068                           ;	CPU System Clock Postscaler
  9069                           ;	CPUDIV = OSC1, No CPU system clock divide
  9070                           ;	Code Protection bit
  9071                           ;	CP0 = OFF, Program memory is not code-protected
  9072   007FF9                     	org	32761
  9073   007FF9  F7                 	db	247
  9074                           
  9075                           ;Config register CONFIG2L @ 0x7FFA
  9076                           ;	Oscillator Selection bits
  9077                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  9078                           ;	Fail-Safe Clock Monitor Enable bit
  9079                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9080                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  9081                           ;	IESO = OFF, Two-Speed Start-up disabled
  9082   007FFA                     	org	32762
  9083   007FFA  03                 	db	3
  9084                           
  9085                           ;Config register CONFIG2H @ 0x7FFB
  9086                           ;	Watchdog Timer Postscaler Select bits
  9087                           ;	WDTPS = 2048, 1:2048
  9088   007FFB                     	org	32763
  9089   007FFB  FB                 	db	251
  9090                           
  9091                           ;Config register CONFIG3L @ 0x7FFC
  9092                           ;	unspecified, using default values
  9093   007FFC                     	org	32764
  9094   007FFC  F8                 	db	248
  9095                           
  9096                           ;Config register CONFIG3H @ 0x7FFD
  9097                           ;	ECCP2 MUX bit
  9098                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  9099                           ;	MSSP Address Masking Mode Select bit
  9100                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  9101   007FFD                     	org	32765
  9102   007FFD  F1                 	db	241
  9103                           tosu	equ	0xFFF
  9104                           tosh	equ	0xFFE
  9105                           tosl	equ	0xFFD
  9106                           stkptr	equ	0xFFC
  9107                           pclatu	equ	0xFFB
  9108                           pclath	equ	0xFFA
  9109                           pcl	equ	0xFF9
  9110                           tblptru	equ	0xFF8
  9111                           tblptrh	equ	0xFF7
  9112                           tblptrl	equ	0xFF6
  9113                           tablat	equ	0xFF5
  9114                           prodh	equ	0xFF4
  9115                           prodl	equ	0xFF3
  9116                           indf0	equ	0xFEF
  9117                           postinc0	equ	0xFEE
  9118                           postdec0	equ	0xFED
  9119                           preinc0	equ	0xFEC
  9120                           plusw0	equ	0xFEB
  9121                           fsr0h	equ	0xFEA
  9122                           fsr0l	equ	0xFE9
  9123                           wreg	equ	0xFE8
  9124                           indf1	equ	0xFE7
  9125                           postinc1	equ	0xFE6
  9126                           postdec1	equ	0xFE5
  9127                           preinc1	equ	0xFE4
  9128                           plusw1	equ	0xFE3
  9129                           fsr1h	equ	0xFE2
  9130                           fsr1l	equ	0xFE1
  9131                           bsr	equ	0xFE0
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           preinc2	equ	0xFDC
  9136                           plusw2	equ	0xFDB
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      86
    BANK0           160      8      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _main->_write_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _PWM_Selection->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    _main->_PWM_Selection

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31374
                                              6 BANK0      2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                      _PWM_Selection
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                            _pwm_set
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    2446
                                             22 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      65
                                              9 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _pwm_set                                              4     2      2     120
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                3     0      3    1033
                                             14 COMRAM     3     0      3
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    4178
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _PWM_Selection                                        6     4      2    4345
                                              0 BANK0      6     4      2
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    4178
                                             22 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      31
                                              9 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     369
                                              9 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                              8 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1238
                                             17 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             14 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  4     4      0    6030
                                             25 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    3622
                                             16 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              8 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2634
                                             17 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                             10 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             14 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             14 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              8 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1011
                                             11 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1011
                                              8 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             7     7      0     319
                                              1 COMRAM     7     7      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
     _delay_1ms
     _readWeighingData
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
     _MotorON
     _Read_IR
     _WriteSTLED316SErr
     _delay_1ms
   _PWM_Selection
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _ToggleVIB_Mode
     _write_i2c
   _Write1USART
   _WriteSTLED316SData
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _pwm_set
   _read_i2c
     ___aldiv
     _i2c_Address
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _write_i2c

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      56        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      56       1       91.5%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRllllll     2B      0       0      55        0.0%
BITBIGSFRhlhl       1C      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhl        C      0       0      45        0.0%
BITBIGSFRlhhhh       A      0       0      44        0.0%
BITBIGSFRllllh       7      0       0      50        0.0%
BITBIGSFRhlllhh      5      0       0      42        0.0%
BITBIGSFRlllllh      4      0       0      51        0.0%
BITBIGSFRlhl         4      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      54        0.0%
BITBIGSFRhllll       3      0       0      43        0.0%
BITBIGSFRllhh        2      0       0      47        0.0%
BITBIGSFRlllllh      2      0       0      53        0.0%
BITBIGSFRhllhh       2      0       0      40        0.0%
BITBIGSFRllhl        2      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      52        0.0%
BITBIGSFRhlhh        1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      49        0.0%
BITBIGSFRhllhl       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      30        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 17 12:26:48 2024

                             _i 0013                   ??_i2c_Address 003E                    ___awdiv@sign 0041  
                 ?_InitSTLED316 0034                     i2c_Read@ack 003F                             l211 05A8  
                           l300 0FF6                             l221 060A                             l222 0610  
                           l315 11B6                             l412 14A0                             l500 225C  
                           l260 0C42                             l511 22B2                             l432 16C8  
                           l408 1442                             l272 0DC0                             l256 0AB4  
                           l248 097A                             l514 22DC                             l506 2264  
                           l442 1832                             l530 1FB4                             l426 1672  
                           l610 26C2                             l419 1654                             l372 2676  
                           l508 229A                             l452 2576                             l604 273A  
                           l541 1DF4                             l461 2470                             l429 16BC  
                           l613 27C0                             l701 234C                             l293 0F2E  
                           l550 1E00                             l462 2476                             l622 2794  
                           l702 234E                             l630 25E6                             l471 253C  
                           l447 1898                             l439 1800                             l391 24FE  
                           l199 264A                             l376 270C                             l536 21D0  
                           l616 27B0                             l369 2664                             l457 25B0  
                           l465 2724                             l625 277A                             l633 24C0  
                           l722 27C8                             l386 1D00                             l482 19C0  
                           l562 1AE8                             l731 27A8                             l619 27B8  
                           l468 2518                             l660 2742                             l396 12E2  
                           l556 1ADC                             l628 25DC                             l636 23B6  
                           l725 27D0                             l813 1BF4                             l629 25DE  
                           l575 1EE8                             l567 1EDC                             l663 2750  
                           l399 1310                             l719 2788                             l728 279E  
                           l488 19C8                             l657 269C                             l699 233E  
                           l965 2078                             l978 2128                             _GIE 007F97  
                           _PR2 000FCB                             _PR4 000F77                             _NUM 0019  
                  ___awmod@sign 0041                             wreg 000FE8                      _TXSTA1bits 000FAD  
                 ??_i2c_Restart 003D                            l4001 17A6                            l3201 1EF6  
                          l4011 17E4                            l4003 17B6                            l3211 1F1E  
                          l3203 1EFE                            l3141 273E                            l4013 17E6  
                          l4005 17C2                            l4021 1822                            l3213 1F26  
                          l3205 1F06                            l3151 2590                            l3143 2578  
                          l4031 1868                            l4023 1834                            l4015 1802  
                          l4007 17D6                            l3215 1F2E                            l3207 1F0E  
                          l3223 1F46                            l3311 1FD0                            l3161 2260  
                          l3153 2594                            l4033 1874                            l4025 1846  
                          l4017 180E                            l4009 17D8                            l3217 1F36  
                          l3209 1F16                            l3225 1FB2                            l3321 1FF6  
                          l3313 1FD4                            l3305 1FB6                            l3401 21B8  
                          l4041 253E                            l3155 264C                            l3171 2294  
                          l4035 1876                            l4027 1856                            l3219 1F3E  
                          l3331 202C                            l3323 2008                            l3315 1FE2  
                          l3307 1FBA                            l3411 21CE                            l3403 21BE  
                          l4051 255A                            l3157 2650                            l3413 2500  
                          l3253 27C2                            l3181 22A2                            l3173 229C  
                          l3501 1D0E                            l3149 2580                            l4029 1866  
                          l4037 188C                            l3333 2042                            l3325 2010  
                          l3341 2058                            l3317 1FEA                            l3309 1FC8  
                          l3405 21C4                            l3159 265E                            l3415 250A  
                          l3255 27C6                            l3431 2704                            l3423 26EA  
                          l3191 22BA                            l3183 22B4                            l3167 2266  
                          l3511 1D5A                            l3503 1D1A                            l4039 1894  
                          l3343 2068                            l3335 204A                            l3327 2018  
                          l3319 1FEE                            l3351 207E                            l3407 21C6  
                          l4047 2546                            l3417 2516                            l3257 27CA  
                          l3425 26F8                            l3193 22CA                            l3169 2284  
                          l3441 1E06                            l3513 1D6A                            l3505 1D2A  
                          l3521 1D9A                            l3345 2070                            l3337 204C  
                          l3329 2026                            l3361 20AE                            l3353 208C  
                          l3409 21C8                            l5201 269E                            l4049 2556  
                          l3601 233A                            l3419 2526                            l3259 27CE  
                          l3435 2796                            l3195 22CC                            l3179 22A0  
                          l3451 1E3A                            l3443 1E0C                            l3523 1DF8  
                          l3515 1D7A                            l3507 1D3A                            l3339 2052  
                          l3371 20F4                            l3363 20C0                            l3355 2094  
                          l3611 21E0                            l5203 26B4                            l5211 27B6  
                          l3603 233C                            l3437 279A                            l3189 22B8  
                          l3453 1E4A                            l3445 1E0E                            l3525 1DFE  
                          l3517 1D8A                            l3509 1D4A                            l3197 1EEA  
                          l3381 2120                            l3373 20FC                            l3365 20C8  
                          l3357 2098                            l3349 207A                            l3621 222E  
                          l3613 2208                            l3605 21D4                            l3701 1CFE  
                          l5221 2772                            l5205 27BA                            l5213 278C  
                          l5301 18CA                            l3455 1E5A                            l3447 1E1A  
                          l3463 1E8A                            l3439 1E04                            l3199 1EEE  
                          l3375 2102                            l3367 20D0                            l3359 20A6  
                          l3391 216C                            l3623 2230                            l3615 220A  
                          l3607 21D8                            l5231 1B0C                            l5223 2776  
                          l5207 27BE                            l5215 2790                            l5311 18FE  
                          l5303 18D2                            l3711 19DC                            l3703 19CA  
                          l3551 22F8                            l3631 277C                            l3473 27A0  
                          l3465 1EE0                            l3457 1E6A                            l3449 1E2A  
                          l3481 2434                            l3369 20DE                            l3377 2108  
                          l3393 2190                            l3385 212A                            l3625 2238  
                          l3617 2212                            l3609 21DE                            l5241 1B42  
                          l5233 1B10                            l5225 1AEA                            l5217 276A  
                          l5209 27B2                            l5321 192C                            l5313 1900  
                          l5305 18D4                            l3721 1A32                            l3713 19EC  
                          l3705 19CC                            l3561 2302                            l3553 22FA  
                          l3633 2780                            l3641 2678                            l3545 261E  
                          l5401 035E                            l3475 27A4                            l3467 1EE6  
                          l3459 1E7A                            l3491 2454                            l3379 2118  
                          l3395 21A0                            l3387 2162                            l3811 12A8  
                          l3627 223A                            l3619 2214                            l3651 271E  
                          l5251 1B84                            l5243 1B58                            l5235 1B1E  
                          l5227 1AEE                            l5219 276E                            l5331 1974  
                          l5323 1948                            l5315 191C                            l5307 18F0  
                          l3731 1A86                            l3723 1A42                            l3715 19FE  
                          l3707 19D2                            l3571 230C                            l3563 2304  
                          l3555 22FC                            l3547 22DE                            l3635 2782  
                          l3643 2694                            l5411 0376                            l5403 0360  
                          l3477 27A6                            l3493 2472                            l3397 21B0  
                          l3389 216A                            l3901 14FE                            l3813 12B8  
                          l3629 225A                            l3645 270E                            l3661 1BF8  
                          l5253 1BA2                            l5245 1B60                            l5261 1BC4  
                          l5237 1B2E                            l5229 1AFC                            l5325 194E  
                          l5317 1922                            l5309 18F6                            l5341 24C2  
                          l3733 1A9A                            l3725 1A52                            l3741 1ADC  
                          l3717 1A0E                            l3709 19D4                            l3637 2726  
                          l3581 2316                            l3573 230E                            l3565 2306  
                          l3557 22FE                            l3549 22E2                            l5501 055C  
                          l5421 0380                            l5413 0378                            l5405 0362  
                          l3495 1D04                            l3487 243E                            l3479 241E  
                          l3399 21B6                            l3903 1510                            l3831 1308  
                          l3823 12E8                            l3815 12BA                            l3647 271A  
                          l3671 1C46                            l3663 1BFC                            l5263 1BD4  
                          l5255 1BB2                            l5247 1B6C                            l5239 1B32  
                          l5327 1956                            l5319 192A                            l5335 197A  
                          l5351 24FC                            l5343 24D4                            l3743 1ADE  
                          l3735 1AAA                            l3727 1A66                            l3719 1A1E  
                          l3639 272A                            l3591 2330                            l3583 2318  
                          l3575 2310                            l3567 2308                            l3559 2300  
                          l5271 27AA                            l5511 05DC                            l5503 05AA  
                          l5431 03CC                            l5423 0390                            l5415 037A  
                          l5407 0372                            l3497 1D06                            l3489 2450  
                          l3921 159A                            l3913 1552                            l3905 1516  
                          l3841 132A                            l3833 1312                            l3825 12EA  
                          l3817 12C6                            l3809 12A4                            l3649 271C  
                          l3681 1C82                            l3673 1C4C                            l3665 1C14  
                          l5265 1BE4                            l5257 1BB4                            l5249 1B7A  
                          l5329 1958                            l5345 24DC                            l3745 1AE6  
                          l3737 1ABA                            l3729 1A76                            l3593 2332  
                          l3585 231A                            l3577 2312                            l3569 230A  
                          l5281 25C6                            l5273 27AE                            l5601 0846  
                          l5521 0612                            l5513 05E0                            l5505 05C6  
                          l5441 03E8                            l5433 03CE                            l5425 03AA  
                          l5417 037C                            l5409 0374                            l5361 0322  
                          l5353 0312                            l3499 1D0C                            l3931 15EE  
                          l3915 155A                            l3923 15A8                            l3907 1526  
                          l3851 137A                            l3843 1342                            l3835 1316  
                          l3827 12EA                            l3819 12C8                            l3691 1CC0  
                          l3683 1C8E                            l3675 1C50                            l3667 1C24  
                          l3659 1BF6                            l5259 1BBE                            l5291 189A  
                          l5347 24E0                            l3739 1ACC                            l3595 2334  
                          l3587 231C                            l3579 2314                            l5283 25D6  
                          l5275 25B4                            l5611 08A6                            l5603 0858  
                          l5531 0658                            l5523 062E                            l5515 05E2  
                          l5507 05C8                            l5451 0426                            l5443 0402  
                          l5435 03D2                            l5427 03AE                            l5419 037E  
                          l5371 0332                            l5363 0326                            l5355 0314  
                          l3933 1600                            l3925 15BA                            l3917 157C  
                          l3909 153E                            l3861 13BC                            l3853 137E  
                          l3845 1352                            l3837 131A                            l3829 12FC  
                          l3941 1630                            l3693 1CD0                            l3685 1CA4  
                          l3677 1C62                            l3669 1C30                            l5269 2478  
                          l5293 189E                            l5349 24E2                            l3597 2336  
                          l3589 231E                            l5277 25B8                            l5285 2350  
                          l5701 0BFA                            l5621 08DE                            l5613 08AE  
                          l5605 086A                            l5541 06B2                            l5533 066A  
                          l5525 0630                            l5517 05FC                            l5509 05CC  
                          l5461 047E                            l5453 0442                            l5437 03E2  
                          l5445 0404                            l5429 03B0                            l5381 033C  
                          l5373 0334                            l5365 032A                            l5357 0318  
                          l3951 1682                            l3943 1642                            l3935 1612  
                          l3927 15CC                            l3919 158A                            l3871 13FE  
                          l3863 13D2                            l3855 1390                            l3847 135E  
                          l3839 1326                            l3695 1CDC                            l3687 1CAA  
                          l3679 1C72                            l5199 269E                            l5295 18A6  
                          l3599 2338                            l5279 25BE                            l5287 23AE  
                          l5703 0C0C                            l5711 0C4E                            l5623 08EA  
                          l5615 08B0                            l5607 087E                            l5551 06EC  
                          l5543 06BE                            l5535 067C                            l5527 0634  
                          l5519 05FE                            l5471 04BC                            l5463 0480  
                          l5455 044A                            l5447 041C                            l5439 03E6  
                          l5391 0348                            l5383 033E                            l5375 0336  
                          l5367 032E                            l5359 031E                            l3953 1692  
                          l3945 1656                            l3937 161A                            l3929 15DE  
                          l3881 1450                            l3873 140A                            l3865 13D8  
                          l3857 13A0                            l3849 1374                            l3697 1CE0  
                          l3689 1CAE                            l5297 18A8                            l6281 1188  
                          l5801 0EF0                            l5721 0CAE                            l5713 0C5C  
                          l5705 0C14                            l5641 0990                            l5625 08F6  
                          l5617 08CC                            l5609 0892                            l5633 090E  
                          l5561 072C                            l5553 06FC                            l5545 06C0  
                          l5537 068E                            l5529 0646                            l6273 0572  
                          l5481 04EE                            l5473 04BE                            l5465 049C  
                          l5457 0460                            l5449 0424                            l5393 034C  
                          l5385 0340                            l5377 0338                            l5369 0330  
                          l6291 1DAE                            l3971 16DE                            l3963 16C2  
                          l3955 1694                            l3947 1674                            l3939 1622  
                          l3891 14A2                            l3883 1452                            l3875 141E  
                          l3867 13DC                            l3859 13B0                            l3699 1CF6  
                          l5299 18C4                            l6283 122E                            l5803 0EFA  
                          l5731 0D10                            l5723 0CC8                            l5715 0C6E  
                          l5707 0C22                            l5651 0A3A                            l5643 09A0  
                          l5627 0902                            l5619 08D2                            l5635 0954  
                          l5571 0792                            l6275 074E                            l5555 0708  
                          l5547 06DA                            l5539 06A0                            l5491 052C  
                          l5483 04F0                            l5475 04C2                            l5467 049E  
                          l5459 0476                            l5395 0350                            l5387 0342  
                          l5379 033A                            l6293 1E9E                            l3981 172C  
                          l3973 16E2                            l3965 16CA                            l3957 16A0  
                          l3949 167C                            l3893 14B4                            l3877 1430  
                          l3885 146C                            l3869 13EE                            l6285 128A  
                          l5901 115C                            l5821 0F54                            l5813 0F30  
                          l5741 0D5C                            l5733 0D20                            l5725 0CD4  
                          l5717 0C7C                            l5709 0C46                            l5661 0A90  
                          l5653 0A4A                            l5645 09BC                            l5637 0962  
                          l6277 0926                            l5581 07D6                            l5573 07AE  
                          l5557 0714                            l5549 06E0                            l5565 0738  
                          l5493 0538                            l5485 050A                            l5477 04D2  
                          l5469 04A0                            l5397 0358                            l5389 0344  
                          l3991 1768                            l3983 1732                            l3975 16FA  
                          l3967 16CE                            l3959 16A2                            l3895 14C6  
                          l3887 147C                            l3879 1444                            l6287 1992  
                          l5911 11D2                            l5903 1168                            l6279 0FC0  
                          l5831 0F88                            l5823 0F58                            l5815 0F38  
                          l5807 0F14                            l5751 0DA0                            l5743 0D64  
                          l5735 0D38                            l5719 0C98                            l5727 0CE8  
                          l5671 0AF0                            l5655 0A62                            l5663 0A98  
                          l5647 0A00                            l5639 0972                            l5583 07E8  
                          l5591 080A                            l5575 07B0                            l5559 0720  
                          l5567 078C                            l5495 0544                            l5487 0510  
                          l5479 04E2                            l5399 035C                            l3993 1774  
                          l3985 1736                            l3977 170A                            l3969 16D2  
                          l6289 1F5C                            l3897 14D6                            l3889 148E  
                          l5921 11F0                            l5913 11D4                            l5841 0FF8  
                          l5833 0F94                            l5825 0F60                            l5817 0F3C  
                          l5809 0F26                            l5761 0DF6                            l5745 0D78  
                          l5729 0D04                            l5737 0D40                            l5753 0DC4  
                          l5681 0B56                            l5673 0AFE                            l5657 0A6E  
                          l5649 0A1E                            l5665 0AC6                            l5593 081E  
                          l5585 07EC                            l5577 07B4                            l5569 0790  
                          l5497 0550                            l5489 0520                            l3995 178A  
                          l3987 1748                            l3979 1716                            l3899 14EC  
                          l5923 11F6                            l5907 1174                            l5915 11D8  
                          l5851 102C                            l5843 1012                            l5835 0FA0  
                          l5827 0F70                            l5819 0F44                            l5763 0E0A  
                          l5747 0D8A                            l5739 0D4E                            l5755 0DCC  
                          l5691 0BBA                            l5675 0B1A                            l5683 0B6A  
                          l5667 0ACE                            l5659 0A7E                            l5595 0820  
                          l5587 07EE                            l5579 07C4                            l3997 1790  
                          l3989 1758                            l5925 11F8                            l5917 11E8  
                          l5909 11B8                            l5861 108C                            l5853 103C  
                          l5845 1014                            l5829 0F7C                            l5781 0E6C  
                          l5773 0E2A                            l5933 1218                            l5765 0E0E  
                          l5757 0DD4                            l5749 0D92                            l5685 0B86  
                          l5693 0BC2                            l5677 0B30                            l5669 0ADC  
                          l5597 083E                            l5589 0808                            l3999 1794  
                          l5927 1212                            l5919 11EC                            l5871 10BA  
                          l5863 10AA                            l5855 1040                            l5839 0FAC  
                          l5935 125C                            l5791 0EA6                            l5775 0E3C  
                          l5783 0E74                            l5767 0E12                            l5759 0DE4  
                          l5695 0BD0                            l5687 0B92                            l5679 0B4A  
                          l5599 0840                            l5881 1108                            l5873 10D4  
                          l5865 10AE                            l5857 1058                            l5849 101C  
                          l5793 0EB6                            l5785 0E86                            l5777 0E4C  
                          l5937 126C                            l5769 0E16                            l5697 0BDE  
                          l5689 0BA2                            l5891 1128                            l5875 10DC  
                          l5867 10B2                            l5859 1070                            l5795 0EC6  
                          l5787 0E96                            l5779 0E54                            l5699 0BE6  
                          l5939 1274                            l5893 112C                            l5869 10B6  
                          l5885 1110                            l5797 0ECA                            l5789 0E9E  
                          l5895 1134                            l5879 10F6                            l5799 0EDA  
                          l5897 1140                            l5889 1118                            l5899 1150  
                          u2000 2042                            u2001 203E                            u2010 2068  
                          u2011 2064                            u2100 2526                            u2020 208C  
                          u2101 2522                            u2021 2088                            u2110 26F8  
                          u2030 20A6                            u2111 26F4                            u2031 20A2  
                          u2120 2470                            u2040 20C0                            u2200 19EC  
                          u2121 246C                            u2041 20BC                            u2201 19E8  
                          u2050 20DE                            u2210 19FE                            u2051 20DA  
                          u2211 19FA                            u2060 20F4                            u2220 1A1E  
                          u2140 234C                            u2061 20F0                            u2221 1A1A  
                          u2141 2348                            u2070 2118                            u2310 12B8  
                          u2230 1A32                            u2071 2114                            u2311 12B4  
                          u2231 1A2E                            u2080 21A0                            u2400 147C  
                          u2320 12FC                            u2160 1C46                            u2240 1A52  
                          u4000 0BD0                            u2081 219C                            u2401 1478  
                          u2321 12F8                            u2161 1C42                            u2241 1A4E  
                          u4001 0BCC                            u2090 21B0                            u2410 148E  
                          u2330 1374                            u2170 1C62                            u2250 1A66  
                          u4010 0BDE                            u2091 21AC                            u2411 148A  
                          u2331 1370                            u2155 21F6                            u2171 1C5E  
                          u2251 1A62                            u4011 0BDA                            u2500 15BA  
                          u2420 14A0                            u2340 1390                            u2180 1CA4  
                          u2260 1A86                            u4100 0D4E                            u4020 0C22  
                          u2501 15B6                            u2421 149C                            u2341 138C  
                          u2181 1CA0                            u2261 1A82                            u4101 0D4A  
                          u4021 0C1E                            u2510 15CC                            u2430 14B4  
                          u2350 13D2                            u2190 1CC0                            u2270 1A9A  
                          u4110 0D5C                            u4030 0C3E                            u2511 15C8  
                          u2431 14B0                            u2351 13CE                            u2191 1CBC  
                          u2271 1A96                            u4111 0D58                            u4031 0C3A  
                          u2600 178A                            u2520 15DE                            u2440 14C6  
                          u2360 13EE                            u2280 1ABA                            u4200 0EDA  
                          u4120 0DA0                            u4040 0C5C                            u2601 1786  
                          u2521 15DA                            u2441 14C2                            u2361 13EA  
                          u2281 1AB6                            u4201 0ED6                            u4121 0D9C  
                          u4041 0C58                            u2610 17A6                            u2530 1600  
                          u2450 14FE                            u2370 141E                            u2290 1ACC  
                          u4210 0F10                            u4130 0DBC                            u4050 0C6E  
                          u2611 17A2                            u2531 15FC                            u2451 14FA  
                          u2371 141A                            u2291 1AC8                            u4211 0F0C  
                          u4131 0DB8                            u4051 0C6A                            u1820 2750  
                          u2620 17D6                            u2540 1612                            u2460 1510  
                          u2380 1430                            u4220 0F54                            u4140 0DF6  
                          u4060 0C7C                            u1821 274C                            u2621 17D2  
                          u2541 160E                            u2461 150C                            u2381 142C  
                          u4221 0F50                            u4141 0DF2                            u4061 0C78  
                          u1830 25B0                            u2630 181E                            u2550 1642  
                          u2470 154E                            u2390 1442                            u4230 102C  
                          u4150 0E26                            u4070 0C98                            u1831 25AC  
                          u2631 181A                            u2551 163E                            u2471 154A  
                          u2391 143E                            u4231 1028                            u4151 0E22  
                          u4071 0C94                            u1840 2676                            u2640 1832  
                          u2560 1654                            u2480 1574                            u3600 1AFC  
                          u4240 103C                            u4160 0E3C                            u4080 0CAE  
                          u1841 2672                            u2641 182E                            u2561 1650  
                          u2481 156E                            u3601 1AF8                            u4241 1038  
                          u4161 0E38                            u4081 0CAA                            u2650 1846  
                          u2570 1692                            u2490 1576                            u3610 1B1E  
                          u4250 10F2                            u4170 0E4C                            u4090 0D04  
                          _PEN2 007B5A                            u2651 1842                            u2571 168E  
                          u3611 1B1A                            u4251 10EE                            u4171 0E48  
                          u4091 0D00                            u4307 0A56                            u1860 2294  
                          u2660 1856                            u2580 172C                            u3620 1B58  
                          u4260 1128                            u4180 0E86                            u3700 0476  
                          u1861 2290                            u2661 1852                            u2581 1728  
                          u3621 1B54                            u4261 1124                            u4181 0E82  
                          u4317 0A86                            u3701 0472                            u1870 22B2  
                          u1854 2278                            u2670 1866                            u2590 1748  
                          u3630 1B7A                            u4270 11E8                            u4190 0E96  
                          u3710 04D2                            u1871 22AE                            u1855 2274  
                          u2671 1862                            u2591 1744                            u4407 1C68  
                          u3631 1B76                            u4271 11E4                            u4191 0E92  
                          u4327 0B3C                            u3711 04CE                            u1880 22CA  
                          u1960 1FC8                            u3640 1BA2                            u2680 2576  
                          u3800 06B2                            u3720 04E2                            u1881 22C6  
                          u1961 1FC4                            u4417 1CEA                            u3641 1B9E  
                          u2681 2572                            u4337 0BAE                            u3801 06AE  
                          u3721 04DE                            u1890 22DC                            u1970 1FE2  
                          u3650 1BD4                            u3810 07C4                            u3730 05DC  
                          u1891 22D8                            u1971 1FDE                            u4507 1628  
                          u4427 12D2                            u3651 1BD0                            u4347 0C02  
                          u3811 07C0                            u3731 05D8                            u1980 2008  
                          u3580 26B4                            u3660 25D6                            u3900 09BC  
                          u3820 07D6                            u3740 0646                            u4517 16AC  
                          u1981 2004                            u4437 1334                            u3581 26B0  
                          u3661 25D2                            u4357 0CBA                            u3901 09B8  
                          u3821 07D2                            u3741 0642                            u1990 2026  
                          u3590 26C2                            u3670 24D4                            u3910 0A3A  
                          u3830 07E8                            u3750 0658                            u4527 16EC  
                          u1991 2022                            u4447 1396                            u3591 26BE  
                          u3671 24D0                            u4367 0D2C                            u3911 0A36  
                          u3831 07E4                            u3751 0654                            u4287 039C  
                          u3920 0AB4                            u3840 0858                            u3760 066A  
                          u3680 03E2                            u4537 174E                            u4457 145C  
                          u4377 0D80                            u3921 0AB0                            u4297 0A0C  
                          u3841 0854                            u3761 0666                            u3681 03DE  
                          u3930 0AC2                            u3850 086A                            u3770 067C  
                          u3690 0460                            u4547 17F0                            u4467 14E0  
                          u4387 10C6                            u3931 0ABE                            u3851 0866  
                          u3771 0678                            u3691 045C                            u3940 0ADC  
                          u3860 087E                            u3780 068E                            u4557 1880  
                          u4477 1530                            u4397 1C06                            u3941 0AD8  
                          u3861 087A                            u3781 068A                            u3950 0AF0  
                          u3870 0892                            u3790 06A0                            u4567 2656  
                          u4487 1582                            u3951 0AEC                            u3871 088E  
                          u3791 069C                            u3960 0AFE                            u3880 08A6  
                          u4497 15A0                            u3961 0AFA                            u3881 08A2  
                          u3970 0B1A                            u3890 0990                            _SEN2 007B58  
                          u3971 0B16                            u3891 098C                            u3980 0B30  
                          u3981 0B2C                            u3990 0B86                            u3991 0B82  
                          _TMR1 000FCE                            _Busy 002F                            _Stop 0031  
                          _data 002D  __end_of_AD_capture_BattVoltage 253E                            _main 0312  
                          _init 22DE                            _temp 0090                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
            _MotorPosition_Init 1BF6                            btemp 0057                            start 030E  
               __end_of_Get7Seg 1FB6                 __end_of_Clr_RG3 27D2     __end_of_Homing_Again_Manual 1674  
                  ___param_bank 000000                    high_isr@Temp 0039             ?_MotorPosition_Init 0034  
               __end_of_Read_IR 270E                 __end_of_Set_RG3 27CA                  ??_InitSTLED316 0042  
               __end_of_MotorON 27A0                    _BAUDCON1bits 000F7E                 __end_of___aldiv 1BF6  
                         ?_main 0034                           ?_init 0034                 __end_of___awdiv 207A  
                         _ADRES 000FC3                 __end_of___awmod 212A                 ___awdiv@divisor 003E  
                         _T1CON 000FCD                           _T4CON 000F76                           _RCEN2 007B5B  
                         i2l332 01BA                           i2l366 0302                           i2l660 2758  
                         i2l477 261C                           i2l663 2766                           i2l666 26E2  
                         i2l668 26E8                 ___awdiv@counter 0040                           _RSEN2 007B59  
                         _ETemp 0023                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TRISF 000F97                           _TRISG 000F98             __end_of_i2c_Address 277C  
          ??_MotorPosition_Init 0045                           _flush 253E                      _Read1USART 26C4  
              _TMR1IF_triggered 0027                           tablat 000FF5        ??_STLED316s_SPI_SendData 003C  
               __end_of_pwm_set 264C             __end_of_i2c_Restart 27B2                           ttemp5 0058  
                         ttemp6 005B                           ttemp7 005F                           status 000FD8  
                         wtemp8 0058                   _PWM_Selection 189A                PWM_Selection@msg 009A  
                 i2_Write1USART 2752           _WriteSTLED316SVibMode 19CA                 __initialization 23B8  
                 _holdTimeRight 0007                      _InitTimer1 270E                    __end_of_main 12A4  
                  __end_of_init 2350                __end_of_i2c_Init 273C                __end_of_i2c_Read 25E8  
              __end_of_i2c_Wait 26C4                __end_of_i2c_Stop 27BA                          ??_main 00A0  
                        ??_init 003C                   __activetblptr 000002                          _ACKEN2 007B5C  
                        _ACKDT2 007B5D                          ?_flush 0034                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR1L 000FBC                ___awdiv@dividend 003C  
                     ??_Get7Seg 003E                          i2l4061 25E8                          i2l4053 26C4  
                        i2l4063 25FE                          i2l4055 26D2                          i2l4065 2604  
                        i2l4057 26E6                          i2l4067 261A                          i2l4069 2754  
                        i2l4801 0210                          i2l4721 0038                          i2l4811 0268  
                        i2l4803 0220                          i2l4723 0048                          i2l4731 007C  
                        i2l4715 0012                          i2l4821 0296                          i2l4805 0240  
                        i2l4813 026C                          i2l4741 00DE                          i2l4733 008C  
                        i2l4725 0058                          i2l4717 0020                          i2l4831 02EA  
                        i2l4823 02AC                          i2l4815 027A                          i2l4807 0254  
                        i2l4751 0104                          i2l4743 00EE                          i2l4735 009C  
                        i2l4727 0064                          i2l4719 0026                          i2l4833 02F8  
                        i2l4825 02BE                          i2l4817 0282                          i2l4809 0264  
                        i2l4753 0116                          i2l4745 0100                          i2l4737 00B2  
                        i2l4729 0074                          i2l4835 0300                          i2l4827 02CC  
                        i2l4819 0288                          i2l4763 0130                          i2l4755 0118  
                        i2l4771 015C                          i2l4739 00C4                          i2l4829 02D8  
                        i2l4781 0174                          i2l4765 0136                          i2l4757 012C  
                        i2l4783 0184                          i2l4767 0138                          i2l4793 01C8  
                        i2l4785 0198                          i2l4777 016C                          i2l4769 0148  
                        i2l4787 01AA                          i2l4779 0172                          i2l4795 01CE  
                        i2l4797 01DE                          i2l4789 01B2                          i2l4799 01FC  
                        _RCREG1 000FAF                       ??_Clr_RG3 003C                          _SPBRG1 000FB0  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                  ?_PWM_Selection 009A  
                        _TRISD5 007CAD                          _TRISD6 007CAE                  ?i2_Write1USART 0034  
                        _TXREG1 000FAE                      _MotorBREAK 27A0                       ??_Read_IR 003E  
                     ??_Set_RG3 003C                 read_i2c@address 004A                          _OpMode 002C  
                     ??_MotorON 003C                __end_of_high_isr 030E                       ??___aldiv 0044  
                     ??___awdiv 0040                       ??___awmod 0040                  _PWM_Duty_Cycle 0028  
              __end_of_flushOut 25B2                __end_of_read_i2c 23B8                     _i2c_Address 2768  
                        clear_0 23FE                          clear_1 240A                ___awdiv@quotient 0042  
               ___awmod@divisor 003E                          isa$std 000001                 ___awmod@counter 0040  
              Read1USART@result 0034      __end_of_WriteSTLED316SData 21D2      __end_of_WriteSTLED316SMode 1E02  
                        flush@i 003C                   i2c_Write@data 003D                    __pdataCOMRAM 0050  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   _i2c_Restart 27AA                       ??_pwm_set 003E                     ?_Read1USART 0034  
          __end_of_InitSTLED316 225E                      __accesstop 0060                      _i_RUN_ZERO 0017  
       __end_of__initialization 2410             _Low_Power_Indicator 25E8               _WriteSTLED316SErr 1E02  
                 ___rparam_used 000001          ?_WriteSTLED316SVibMode 0042              ?_WriteSTLED316SErr 0034  
                __pcstackCOMRAM 0034                     ?_InitTimer1 0034                    __pidataBANK0 27D9  
                 __end_of_flush 2578               __end_of_i2c_Start 27C2             ??_WriteSTLED316SErr 0042  
             __end_of_i2c_Write 2796            ?_Low_Power_Indicator 0034                         ??_flush 003C  
                     ?_i2c_Init 0034                       ?_i2c_Read 003D                 ??_PWM_Selection 009C  
                    __pbssBANK0 0060                       ?_i2c_Wait 0034                 ??i2_Write1USART 0034  
                     ?_i2c_Stop 0034       __end_of_WriteSTLED316SErr 1EEA                   ??_Write1USART 003C  
                   ?_MotorBREAK 0034                   _dutyCycle_reg 000D                         _CCP4CON 000F73  
         ??_Low_Power_Indicator 0034          _STLED316s_SPI_SendData 225E                _readWeighingData 241E  
            i2c_Address@address 003E                         _SPBRGH1 000F7F     WriteSTLED316SVibMode@dc_reg 0042  
                       _SSP2ADD 000F6E                         _SSP2BUF 000F6F                         _NUM_REC 0015  
                       _VOLTAGE 000F                       ?_high_isr 0034                      ??_i2c_Init 003C  
                    ??_i2c_Read 003F                         _PWM_reg 0056                      ??_i2c_Wait 003C  
                       _Get7Seg 1EEA     WriteSTLED316SVibMode@v_mode 0044                      ??_i2c_Stop 003D  
                       _Clr_RG3 27CA               __end_of_delay_1ms 2678               i2Write1USART@data 0034  
                     ?_flushOut 0034                       ?_read_i2c 004A                     _Serial_Flag 0033  
                       _Read_IR 26EA           WriteSTLED316SMode@msg 0044                         _Set_RG3 27C2  
                       __Hparam 0000                         __Lparam 0000                         _MotorON 2796  
           __end_of_Write1USART 2752      WriteSTLED316SData@NUM_DIG0 0047      WriteSTLED316SData@NUM_DIG1 0049  
                       ___aldiv 1AEA                     _Motor_Speed 0021                         ___awdiv 1FB6  
                       ___awmod 207A                    Get7Seg@Digit 003C                         __pcinit 23B8  
                       __ramtop 1000               __end_of_initUSART 269E                         __ptext0 0312  
                       __ptext1 2350                         __ptext2 27AA                         __ptext3 25B2  
                       __ptext4 261E                         __ptext5 2678                         __ptext6 277C  
                       __ptext7 22DE                         __ptext8 2726                         __ptext9 253E  
             __end_of_initMotor 278A                       _T2CONbits 000FCA                       _T3CONbits 000F79  
              ___awmod@dividend 003C                      _duty_cycle 000B                ___aldiv@dividend 003C  
                     _T4CONbits 000F76                   delay_1ms@time 003C                         _pwm_set 261E  
                    _pause_Time 002B                       _EAdd_High 0098                      ??_high_isr 0035  
          end_of_initialization 2410            i2c_Address@l_address 003F                      ??_flushOut 003C  
                    ??_read_i2c 004E                   __Lmediumconst 0000         WriteSTLED316SData@data3 004B  
       WriteSTLED316SData@data4 004C                ___aldiv@quotient 0046                         postdec1 000FE5  
                       postinc0 000FEE                    ?_i2c_Address 003D                    _InitSTLED316 21D2  
                     _PORTAbits 000F80                       _PORTBbits 000F81               __end_of_write_i2c 24C2  
                     _TRISBbits 000F93                       _TRISCbits 000F94                    ?_i2c_Restart 0034  
      ??_AD_capture_BattVoltage 003F                    ??_Read1USART 0034              _WriteSTLED316SData 212A  
       ??_WriteSTLED316SVibMode 0045              _WriteSTLED316SMode 1D02                     _Write1USART 273C  
                   _CCP1CONbits 000FBB             ?_WriteSTLED316SData 0044             ?_WriteSTLED316SMode 0034  
                  ??_InitTimer1 003C                  _ToggleVIB_Mode 24C2                       _Device_ID 001D  
                   _Vmotor_Time 0054                   __pidataCOMRAM 27D2              __end_of_Read1USART 26EA  
                 _Serial_Buffer 0080                       _i2c_Start 27BA                       _i2c_Write 278A  
          ??_WriteSTLED316SData 0047             start_initialization 23B8            ??_WriteSTLED316SMode 0042  
                  _holdTimeLeft 0005                    _holdTimeMode 0003              __end_of_InitTimer1 2726  
               _LowPowerCounter 00A2        __end_of_readWeighingData 2478                     pwm_set@duty 003C  
                  ??_MotorBREAK 003C          __end_of_ToggleVIB_Mode 2500         ?_STLED316s_SPI_SendData 0034  
                   __pdataBANK0 00A2                      ?_i2c_Start 0034                      ?_i2c_Write 0034  
                   __pbssCOMRAM 0001              __end_of_MotorBREAK 27AA                   __pcstackBANK0 009A  
                      ?_Get7Seg 003C             _Homing_Again_Manual 12A4                        ?_Clr_RG3 0034  
         __end_of_PWM_Selection 19CA           __end_ofi2_Write1USART 2768                        ?_Read_IR 003C  
                     _delay_1ms 264C               _Homing_Again_Auto 1674                        ?_Set_RG3 0034  
               ?_ToggleVIB_Mode 0034                        ?_MotorON 0034  __end_of_STLED316s_SPI_SendData 22DE  
       PWM_Selection@dcSelected 009E     __end_of_Low_Power_Indicator 261E              ?_Homing_Again_Auto 0034  
                     __pintcode 0008                        ?___aldiv 003C                        ?___awdiv 003C  
                      ?___awmod 003C            ?_Homing_Again_Manual 0034                    _errorcounter 0050  
           ??_Homing_Again_Auto 0045            WriteSTLED316SErr@msg 0044                       _initUSART 2678  
                     _initMotor 277C                     Get7Seg@Data 0040                        ?_pwm_set 003C  
               Write1USART@data 003C                 ___aldiv@divisor 0040                 ___aldiv@counter 0044  
     __end_of_Homing_Again_Auto 189A                        _LATAbits 000F89                        _EAdd_Low 0096  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATGbits 000F8F  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                      ?_delay_1ms 003C  
             readWeighingData@i 003E                        i2u340_40 00DE                        i2u340_41 00DA  
                      i2u341_40 00EE                        i2u333_40 0020                        i2u341_41 00EA  
                      i2u333_41 001C                        i2u270_40 25FE                        i2u350_40 01FC  
                      i2u342_40 0100                        i2u334_40 0038                        i2u270_41 25FA  
                      i2u350_41 01F8                        i2u342_41 00FC                        i2u334_41 0034  
                      i2u271_40 261A                        i2u351_40 0240                        i2u343_40 0128  
                      i2u335_40 0048                        i2u271_41 2616                        i2u351_41 023C  
                      i2u343_41 0124                        i2u335_41 0044                        i2u272_40 2766  
                      i2u352_40 027A                        i2u344_40 0148                        i2u336_40 0058  
                      i2u272_41 2762                        i2u352_41 0276                        i2u344_41 0144  
                      i2u336_41 0054                        i2u353_40 0296                        i2u345_40 0184  
                      i2u337_40 008C                        i2u353_41 0292                        i2u345_41 0180  
                      i2u337_41 0088                        _PIR1bits 000F9E                        i2u354_40 02BE  
                      i2u346_40 0198                        i2u338_40 00B2                        i2u354_41 02BA  
                      i2u346_41 0194                        i2u338_41 00AE                        i2u355_40 02CC  
                      i2u347_40 01AA                        i2u339_40 00C4                        i2u355_41 02C8  
                      i2u347_41 01A6                        i2u339_41 00C0                        i2u356_40 02EA  
                      i2u348_40 01C8                        i2u356_41 02E6                        i2u348_41 01C4  
                      i2u269_40 26D2                        i2u357_40 02F8                        i2u349_40 01DE  
                      i2u269_41 26CE                        i2u357_41 02F4                        i2u349_41 01DA  
                      i2u457_47 02A0                        _RCONbits 000FD0          _AD_capture_BattVoltage 2500  
                      _SSP2CON1 000F6C                        _SSP2CON2 000F6B                        _SSP2STAT 000F6D  
         ??_Homing_Again_Manual 004D                       _pwm_count 0094                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                       high_isr@c 003A                       high_isr@i 003B  
                   ??_i2c_Start 003D                     ??_i2c_Write 003D      __end_of_MotorPosition_Init 1D02  
                    ?_initUSART 0034           _delay_motor_stop_time 0029                      ?_initMotor 0034  
                  _Serial_GData 0032                       _write_i2c 2478                     _INTCON3bits 000FF0  
                     copy_data0 23CC                       copy_data1 23EC          InitSTLED316@Brightness 0044  
                  _Serial_Count 0025                        _i2c_Init 2726                        _i2c_Read 25B2  
                      _i2c_Wait 269E                        _i2c_Stop 27B2                    ?_Write1USART 0034  
 __end_of_WriteSTLED316SVibMode 1AEA                       flushOut@i 003C                      _ANCON0bits 000FC1  
                      __Hrparam 0000                        __Lrparam 0000                  _vibration_mode 002E  
                      __ptext10 19CA                        __ptext11 24C2                        __ptext20 1BF6  
                      __ptext12 189A                        __ptext21 270E                        __ptext13 2478  
                      __ptext30 2578                        __ptext22 21D2                        __ptext14 278A  
                      __ptext31 273C                        __ptext23 12A4                        __ptext15 27B2  
                      __ptext40 2500                        __ptext32 1D02                        __ptext24 212A  
                      __ptext16 27BA                        __ptext41 264C                        __ptext33 1E02  
                      __ptext25 207A                        __ptext17 2768                        __ptext34 225E  
                      __ptext26 1FB6                        __ptext18 269E                        __ptext43 2752  
                      __ptext35 26EA                        __ptext27 1EEA                        __ptext19 1AEA  
                      __ptext44 26C4                        __ptext36 2796                        __ptext28 1674  
                      __ptext45 25E8                        __ptext37 27C2                        __ptext29 241E  
                      __ptext38 27A0                        __ptext39 27CA                      ?_write_i2c 004A  
              write_i2c@address 004A                        _high_isr 0008                        _dispense 0009  
             read_i2c@read_byte 004E                        _flushOut 2578                        _read_i2c 2350  
             ?_readWeighingData 0034                     ??_delay_1ms 003E              ??_readWeighingData 003E  
                      _vib_Time 002A           _Motor_Stop_Delay_Time 001F                        isa$xinst 000000  
                      int$flags 0057                        _pwm_mode 0092               _Serial_Buffer_Out 0060  
    STLED316s_SPI_SendData@Data 003E                      _INTCONbits 000FF2                     ??_initUSART 003C  
    STLED316s_SPI_SendData@temp 003F                     ??_initMotor 003C                        intlevel2 0000  
                  _motor_status 0030                ??_ToggleVIB_Mode 0050                 i2c_Address@mode 003D  
                    _RCSTA1bits 000FAC                      _OSCCONbits 000FD3        WriteSTLED316SData@v_mode 0046  
      WriteSTLED316SData@number 0044                      _IR_SENSORF 0011                _Motor_Pause_Time 001B  
            _Serial_Temp_Buffer 0070         STLED316s_SPI_SendData@i 0040         STLED316s_SPI_SendData@t 0041  
                  ___aldiv@sign 0045                      _WDTCONbits 000FC0                     ??_write_i2c 0050  
           i2c_Read@i2cReadData 0040                   write_i2c@data 004E                     _test_redled 0001  
       ?_AD_capture_BattVoltage 0034  
