

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 16 14:06:31 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.31
    61                           ; Generated 13/10/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F65J50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001F7A                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _LowPowerCounter
   101  001F7A  0014               	dw	20
   102  001F7C  0000               	dw	0
   103                           
   104                           ;initializer for _errorcounter
   105  001F7E  001E               	dw	30
   106  001F80  0000               	dw	0
   107                           
   108                           ;initializer for _Vmotor_Time
   109  001F82  07D0               	dw	2000
   110                           
   111                           ;initializer for _PWM_reg
   112  001F84  3F                 	db	63
   113  0000                     _ADRES	set	4035
   114  0000                     _TMR1	set	4046
   115  0000                     _LATGbits	set	3983
   116  0000                     _T4CONbits	set	3958
   117  0000                     _CCP4CON	set	3955
   118  0000                     _T4CON	set	3958
   119  0000                     _T3CONbits	set	3961
   120  0000                     _PR4	set	3959
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _ANCON0bits	set	4033
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _TRISG	set	3992
   125  0000                     _TRISF	set	3991
   126  0000                     _TRISE	set	3990
   127  0000                     _TRISD	set	3989
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _RCREG1	set	4015
   132  0000                     _TXREG1	set	4014
   133  0000                     _SPBRGH1	set	3967
   134  0000                     _SPBRG1	set	4016
   135  0000                     _PIE1bits	set	3997
   136  0000                     _BAUDCON1bits	set	3966
   137  0000                     _TXSTA1bits	set	4013
   138  0000                     _TRISCbits	set	3988
   139  0000                     _SSP2BUF	set	3951
   140  0000                     _SSP2STAT	set	3949
   141  0000                     _SSP2ADD	set	3950
   142  0000                     _SSP2CON2	set	3947
   143  0000                     _SSP2CON1	set	3948
   144  0000                     _ADRESL	set	4035
   145  0000                     _ADRESH	set	4036
   146  0000                     _ADCON0bits	set	4034
   147  0000                     _T1CON	set	4045
   148  0000                     _RCSTA1bits	set	4012
   149  0000                     _PIR1bits	set	3998
   150  0000                     _PORTAbits	set	3968
   151  0000                     _PORTBbits	set	3969
   152  0000                     _LATDbits	set	3980
   153  0000                     _WDTCONbits	set	4032
   154  0000                     _INTCONbits	set	4082
   155  0000                     _IPR1bits	set	3999
   156  0000                     _RCONbits	set	4048
   157  0000                     _LATAbits	set	3977
   158  0000                     _LATCbits	set	3979
   159  0000                     _ACKEN2	set	31580
   160  0000                     _ACKDT2	set	31581
   161  0000                     _RCEN2	set	31579
   162  0000                     _PEN2	set	31578
   163  0000                     _RSEN2	set	31577
   164  0000                     _SEN2	set	31576
   165  0000                     _TRISD6	set	31918
   166  0000                     _TRISD5	set	31917
   167  0000                     _TMR1IE	set	31976
   168  0000                     _TMR1IF	set	31984
   169  0000                     _GIE	set	32663
   170                           
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174  001C90                     __pcinit:
   175                           	callstack 0
   176  001C90                     start_initialization:
   177                           	callstack 0
   178  001C90                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (11 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  001C90  0E7A               	movlw	low __pidataCOMRAM
   184  001C92  6EF6               	movwf	tblptrl,c
   185  001C94  0E1F               	movlw	high __pidataCOMRAM
   186  001C96  6EF7               	movwf	tblptrh,c
   187  001C98  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001C9A  6EF8               	movwf	tblptru,c
   189  001C9C  EE00  F046         	lfsr	0,__pdataCOMRAM
   190  001CA0  EE10 F00B          	lfsr	1,11
   191  001CA4                     copy_data0:
   192  001CA4  0009               	tblrd		*+
   193  001CA6  CFF5 FFEE          	movff	tablat,postinc0
   194  001CAA  50E5               	movf	postdec1,w,c
   195  001CAC  50E1               	movf	fsr1l,w,c
   196  001CAE  E1FA               	bnz	copy_data0
   197                           
   198                           ; Clear objects allocated to BANK0 (48 bytes)
   199  001CB0  EE00  F060         	lfsr	0,__pbssBANK0
   200  001CB4  0E30               	movlw	48
   201  001CB6                     clear_0:
   202  001CB6  6AEE               	clrf	postinc0,c
   203  001CB8  06E8               	decf	wreg,f,c
   204  001CBA  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to COMRAM (41 bytes)
   207  001CBC  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  001CC0  0E29               	movlw	41
   209  001CC2                     clear_1:
   210  001CC2  6AEE               	clrf	postinc0,c
   211  001CC4  06E8               	decf	wreg,f,c
   212  001CC6  E1FD               	bnz	clear_1
   213  001CC8                     end_of_initialization:
   214                           	callstack 0
   215  001CC8                     __end_of__initialization:
   216                           	callstack 0
   217  001CC8  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  001CCA  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  001CCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  001CCE  6EF8               	movwf	tblptru,c
   221  001CD0  0100               	movlb	0
   222  001CD2  EF51  F001         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  000001                     __pbssCOMRAM:
   226                           	callstack 0
   227  000001                     _VOLTAGE:
   228                           	callstack 0
   229  000001                     	ds	2
   230  000003                     _IR_SENSORF:
   231                           	callstack 0
   232  000003                     	ds	2
   233  000005                     _i:
   234                           	callstack 0
   235  000005                     	ds	2
   236  000007                     _NUM_REC:
   237                           	callstack 0
   238  000007                     	ds	2
   239  000009                     _i_RUN_ZERO:
   240                           	callstack 0
   241  000009                     	ds	2
   242  00000B                     _NUM:
   243                           	callstack 0
   244  00000B                     	ds	2
   245  00000D                     _Motor_Pause_Time:
   246                           	callstack 0
   247  00000D                     	ds	2
   248  00000F                     _Device_ID:
   249                           	callstack 0
   250  00000F                     	ds	2
   251  000011                     _Motor_Stop_Delay_Time:
   252                           	callstack 0
   253  000011                     	ds	2
   254  000013                     _Motor_Speed:
   255                           	callstack 0
   256  000013                     	ds	2
   257  000015                     _ETemp:
   258                           	callstack 0
   259  000015                     	ds	2
   260  000017                     _EAdd_Low:
   261                           	callstack 0
   262  000017                     	ds	2
   263  000019                     _EAdd_High:
   264                           	callstack 0
   265  000019                     	ds	2
   266  00001B                     _Serial_Count:
   267                           	callstack 0
   268  00001B                     	ds	2
   269  00001D                     _TMR1IF_triggered:
   270                           	callstack 0
   271  00001D                     	ds	1
   272  00001E                     _PWM_Duty_Cycle:
   273                           	callstack 0
   274  00001E                     	ds	1
   275  00001F                     _delay_motor_stop_time:
   276                           	callstack 0
   277  00001F                     	ds	1
   278  000020                     _vib_Time:
   279                           	callstack 0
   280  000020                     	ds	1
   281  000021                     _pause_Time:
   282                           	callstack 0
   283  000021                     	ds	1
   284  000022                     _OpMode:
   285                           	callstack 0
   286  000022                     	ds	1
   287  000023                     _data:
   288                           	callstack 0
   289  000023                     	ds	1
   290  000024                     _vibration_mode:
   291                           	callstack 0
   292  000024                     	ds	1
   293  000025                     _Busy:
   294                           	callstack 0
   295  000025                     	ds	1
   296  000026                     _motor_status:
   297                           	callstack 0
   298  000026                     	ds	1
   299  000027                     _Stop:
   300                           	callstack 0
   301  000027                     	ds	1
   302  000028                     _Serial_GData:
   303                           	callstack 0
   304  000028                     	ds	1
   305  000029                     _Serial_Flag:
   306                           	callstack 0
   307  000029                     	ds	1
   308                           
   309                           	psect	dataCOMRAM
   310  000046                     __pdataCOMRAM:
   311                           	callstack 0
   312  000046                     _LowPowerCounter:
   313                           	callstack 0
   314  000046                     	ds	4
   315  00004A                     _errorcounter:
   316                           	callstack 0
   317  00004A                     	ds	4
   318  00004E                     _Vmotor_Time:
   319                           	callstack 0
   320  00004E                     	ds	2
   321  000050                     _PWM_reg:
   322                           	callstack 0
   323  000050                     	ds	1
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	callstack 0
   328  000060                     _Serial_Buffer_Out:
   329                           	callstack 0
   330  000060                     	ds	16
   331  000070                     _Serial_Temp_Buffer:
   332                           	callstack 0
   333  000070                     	ds	16
   334  000080                     _Serial_Buffer:
   335                           	callstack 0
   336  000080                     	ds	16
   337                           
   338                           	psect	cstackCOMRAM
   339  00002A                     __pcstackCOMRAM:
   340                           	callstack 0
   341  00002A                     Read1USART@result:
   342                           	callstack 0
   343  00002A                     i2Write1USART@data:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x0
   347  00002A                     	ds	1
   348  00002B                     ??_high_isr:
   349                           
   350                           ; 1 bytes @ 0x1
   351  00002B                     	ds	2
   352  00002D                     high_isr@Temp:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x3
   356  00002D                     	ds	1
   357  00002E                     high_isr@c:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x4
   361  00002E                     	ds	1
   362  00002F                     high_isr@i:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x5
   366  00002F                     	ds	1
   367  000030                     ??_STLED316s_SPI_SendData:
   368  000030                     ??_i2c_Wait:
   369  000030                     ?_Read_IR:
   370                           	callstack 0
   371  000030                     ?___awdiv:
   372                           	callstack 0
   373  000030                     ?___awmod:
   374                           	callstack 0
   375  000030                     ?___aldiv:
   376                           	callstack 0
   377  000030                     Write1USART@data:
   378                           	callstack 0
   379  000030                     delay_1ms@time:
   380                           	callstack 0
   381  000030                     flush@i:
   382                           	callstack 0
   383  000030                     flushOut@i:
   384                           	callstack 0
   385  000030                     Get7Seg@Digit:
   386                           	callstack 0
   387  000030                     ___awdiv@dividend:
   388                           	callstack 0
   389  000030                     ___awmod@dividend:
   390                           	callstack 0
   391  000030                     ___aldiv@dividend:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x6
   395  000030                     	ds	1
   396  000031                     ?_i2c_Read:
   397                           	callstack 0
   398  000031                     i2c_Write@data:
   399                           	callstack 0
   400  000031                     i2c_Address@mode:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x7
   404  000031                     	ds	1
   405  000032                     ??_delay_1ms:
   406  000032                     ??_Get7Seg:
   407  000032                     STLED316s_SPI_SendData@Data:
   408                           	callstack 0
   409  000032                     i2c_Address@address:
   410                           	callstack 0
   411  000032                     readWeighingData@i:
   412                           	callstack 0
   413  000032                     ___awdiv@divisor:
   414                           	callstack 0
   415  000032                     ___awmod@divisor:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419  000032                     	ds	1
   420  000033                     ??_AD_capture_BattVoltage:
   421  000033                     STLED316s_SPI_SendData@temp:
   422                           	callstack 0
   423  000033                     i2c_Address@l_address:
   424                           	callstack 0
   425  000033                     i2c_Read@ack:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x9
   429  000033                     	ds	1
   430  000034                     STLED316s_SPI_SendData@i:
   431                           	callstack 0
   432  000034                     Get7Seg@Data:
   433                           	callstack 0
   434  000034                     i2c_Read@i2cReadData:
   435                           	callstack 0
   436  000034                     ___awdiv@counter:
   437                           	callstack 0
   438  000034                     ___awmod@counter:
   439                           	callstack 0
   440  000034                     ___aldiv@divisor:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0xA
   444  000034                     	ds	1
   445  000035                     STLED316s_SPI_SendData@t:
   446                           	callstack 0
   447  000035                     ___awdiv@sign:
   448                           	callstack 0
   449  000035                     ___awmod@sign:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xB
   453  000035                     	ds	1
   454  000036                     ??_InitSTLED316:
   455  000036                     ??_WriteSTLED316SErr:
   456  000036                     ??_WriteSTLED316SMode:
   457  000036                     WriteSTLED316SVibMode@v_mode:
   458                           	callstack 0
   459  000036                     ___awdiv@quotient:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xC
   463  000036                     	ds	2
   464  000038                     InitSTLED316@Brightness:
   465                           	callstack 0
   466  000038                     WriteSTLED316SMode@msg:
   467                           	callstack 0
   468  000038                     WriteSTLED316SErr@msg:
   469                           	callstack 0
   470  000038                     ___aldiv@counter:
   471                           	callstack 0
   472  000038                     WriteSTLED316SData@number:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xE
   476  000038                     	ds	1
   477  000039                     ??_MotorPosition_Init:
   478  000039                     ??_Homing_Again_Auto:
   479  000039                     ___aldiv@sign:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xF
   483  000039                     	ds	1
   484  00003A                     WriteSTLED316SData@v_mode:
   485                           	callstack 0
   486  00003A                     ___aldiv@quotient:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x10
   490  00003A                     	ds	1
   491  00003B                     WriteSTLED316SData@NUM_DIG0:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x11
   495  00003B                     	ds	2
   496  00003D                     WriteSTLED316SData@NUM_DIG1:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x13
   500  00003D                     	ds	1
   501  00003E                     ?_read_i2c:
   502                           	callstack 0
   503  00003E                     write_i2c@address:
   504                           	callstack 0
   505  00003E                     read_i2c@address:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x14
   509  00003E                     	ds	1
   510  00003F                     WriteSTLED316SData@data3:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x15
   514  00003F                     	ds	1
   515  000040                     WriteSTLED316SData@data4:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x16
   519  000040                     	ds	1
   520  000041                     ??_Homing_Again_Manual:
   521                           
   522                           ; 1 bytes @ 0x17
   523  000041                     	ds	1
   524  000042                     write_i2c@data:
   525                           	callstack 0
   526  000042                     read_i2c@read_byte:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x18
   530  000042                     	ds	2
   531  000044                     ??_main:
   532                           
   533                           ; 1 bytes @ 0x1A
   534  000044                     	ds	2
   535                           
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 126 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;Total ram usage:        2 bytes
   560 ;; Hardware stack levels required when called:    6
   561 ;; This function calls:
   562 ;;		_AD_capture_BattVoltage
   563 ;;		_Homing_Again_Auto
   564 ;;		_Homing_Again_Manual
   565 ;;		_InitSTLED316
   566 ;;		_InitTimer1
   567 ;;		_MotorPosition_Init
   568 ;;		_ToggleVIB_Mode
   569 ;;		_Write1USART
   570 ;;		_WriteSTLED316SData
   571 ;;		_WriteSTLED316SVibMode
   572 ;;		_flush
   573 ;;		_flushOut
   574 ;;		_i2c_Init
   575 ;;		_init
   576 ;;		_initMotor
   577 ;;		_initUSART
   578 ;;		_read_i2c
   579 ;;		_write_i2c
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text0
   586  0002A2                     __ptext0:
   587                           	callstack 0
   588  0002A2                     _main:
   589                           	callstack 25
   590  0002A2                     
   591                           ;main.c: 127:     GIE = 0;
   592  0002A2  9EF2               	bcf	4082,7,c	;volatile
   593  0002A4                     
   594                           ;main.c: 128:     init();
   595  0002A4  EC62  F00D         	call	_init	;wreg free
   596  0002A8                     
   597                           ;main.c: 129:     InitSTLED316(0x77);
   598  0002A8  0E77               	movlw	119
   599  0002AA  ECDC  F00C         	call	_InitSTLED316
   600  0002AE                     
   601                           ;main.c: 130:     initMotor();
   602  0002AE  ECB0  F00F         	call	_initMotor	;wreg free
   603  0002B2                     
   604                           ;main.c: 131:     i2c_Init();
   605  0002B2  EC85  F00F         	call	_i2c_Init	;wreg free
   606  0002B6                     
   607                           ;main.c: 132:     initUSART();
   608  0002B6  EC2E  F00F         	call	_initUSART	;wreg free
   609  0002BA                     
   610                           ;main.c: 133:     InitTimer1();
   611  0002BA  EC79  F00F         	call	_InitTimer1	;wreg free
   612  0002BE                     
   613                           ;main.c: 135:     LATCbits.LATC1 = 0;
   614  0002BE  928B               	bcf	139,1,c	;volatile
   615  0002C0                     
   616                           ;main.c: 136:     LATAbits.LATA2 = 0;
   617  0002C0  9489               	bcf	137,2,c	;volatile
   618  0002C2                     
   619                           ;main.c: 137:     errorcounter = 30;
   620  0002C2  0E1E               	movlw	30
   621  0002C4  6E4A               	movwf	_errorcounter^0,c	;volatile
   622  0002C6  0E00               	movlw	0
   623  0002C8  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
   624  0002CA  0E00               	movlw	0
   625  0002CC  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
   626  0002CE  0E00               	movlw	0
   627  0002D0  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
   628  0002D2                     
   629                           ;main.c: 141:     RCONbits.IPEN = 1;
   630  0002D2  8ED0               	bsf	208,7,c	;volatile
   631  0002D4                     
   632                           ;main.c: 144:     IPR1bits.RCIP = 1;
   633  0002D4  8A9F               	bsf	159,5,c	;volatile
   634  0002D6                     
   635                           ;main.c: 147:     INTCONbits.GIEH = 1;
   636  0002D6  8EF2               	bsf	242,7,c	;volatile
   637  0002D8                     
   638                           ;main.c: 148:     INTCONbits.GIE = 1;
   639  0002D8  8EF2               	bsf	242,7,c	;volatile
   640  0002DA                     
   641                           ;main.c: 153:     WDTCONbits.SWDTEN = 0;
   642  0002DA  90C0               	bcf	192,0,c	;volatile
   643  0002DC                     
   644                           ;main.c: 155:     LATDbits.LATD0 = 1;
   645  0002DC  808C               	bsf	140,0,c	;volatile
   646  0002DE                     
   647                           ;main.c: 156:     LATDbits.LATD1 = 1;
   648  0002DE  828C               	bsf	140,1,c	;volatile
   649  0002E0                     
   650                           ;main.c: 158:     WriteSTLED316SData(35, 0xFF);
   651  0002E0  0E00               	movlw	0
   652  0002E2  6E39               	movwf	(WriteSTLED316SData@number+1)^0,c
   653  0002E4  0E23               	movlw	35
   654  0002E6  6E38               	movwf	WriteSTLED316SData@number^0,c
   655  0002E8  0EFF               	movlw	255
   656  0002EA  6E3A               	movwf	WriteSTLED316SData@v_mode^0,c
   657  0002EC  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
   658  0002F0                     
   659                           ;main.c: 159:     _delay((unsigned long)((500)*(8000000/4000.0)));
   660  0002F0  0E06               	movlw	6
   661  0002F2  6E45               	movwf	(??_main+1)^0,c
   662  0002F4  0E13               	movlw	19
   663  0002F6  6E44               	movwf	??_main^0,c
   664  0002F8  0EAE               	movlw	174
   665  0002FA                     u2917:
   666  0002FA  2EE8               	decfsz	wreg,f,c
   667  0002FC  D7FE               	bra	u2917
   668  0002FE  2E44               	decfsz	??_main^0,f,c
   669  000300  D7FC               	bra	u2917
   670  000302  2E45               	decfsz	(??_main+1)^0,f,c
   671  000304  D7FA               	bra	u2917
   672  000306                     
   673                           ;main.c: 160:     AD_capture_BattVoltage();
   674  000306  EC6B  F00E         	call	_AD_capture_BattVoltage	;wreg free
   675  00030A                     
   676                           ;main.c: 168:     INTCONbits.GIE = 0;
   677  00030A  9EF2               	bcf	242,7,c	;volatile
   678  00030C                     
   679                           ;main.c: 169:     ETemp = read_i2c(0x0010);
   680  00030C  0E10               	movlw	16
   681  00030E  6E3E               	movwf	read_i2c@address^0,c
   682  000310  0E00               	movlw	0
   683  000312  6E3F               	movwf	(read_i2c@address+1)^0,c
   684  000314  0E00               	movlw	0
   685  000316  6E40               	movwf	(read_i2c@address+2)^0,c
   686  000318  0E00               	movlw	0
   687  00031A  6E41               	movwf	(read_i2c@address+3)^0,c
   688  00031C  EC9B  F00D         	call	_read_i2c	;wreg free
   689  000320  C03E  F015         	movff	?_read_i2c,_ETemp
   690  000324  C03F  F016         	movff	?_read_i2c+1,_ETemp+1
   691  000328                     
   692                           ;main.c: 170:     INTCONbits.GIE = 1;
   693  000328  8EF2               	bsf	242,7,c	;volatile
   694  00032A                     
   695                           ;main.c: 172:     vibration_mode = ETemp & 0x00FF;
   696  00032A  C015  F024         	movff	_ETemp,_vibration_mode
   697  00032E                     
   698                           ;main.c: 173:     if (vibration_mode > 1) {
   699  00032E  0E01               	movlw	1
   700  000330  6424               	cpfsgt	_vibration_mode^0,c
   701  000332  EF9D  F001         	goto	u2311
   702  000336  EF9F  F001         	goto	u2310
   703  00033A                     u2311:
   704  00033A  EFB0  F001         	goto	l3654
   705  00033E                     u2310:
   706  00033E                     
   707                           ;main.c: 174:         vibration_mode = 1;
   708  00033E  0E01               	movlw	1
   709  000340  6E24               	movwf	_vibration_mode^0,c
   710  000342                     
   711                           ;main.c: 176:         INTCONbits.GIE = 0;
   712  000342  9EF2               	bcf	242,7,c	;volatile
   713  000344                     
   714                           ;main.c: 177:         write_i2c(0x0010, vibration_mode);
   715  000344  0E10               	movlw	16
   716  000346  6E3E               	movwf	write_i2c@address^0,c
   717  000348  0E00               	movlw	0
   718  00034A  6E3F               	movwf	(write_i2c@address+1)^0,c
   719  00034C  0E00               	movlw	0
   720  00034E  6E40               	movwf	(write_i2c@address+2)^0,c
   721  000350  0E00               	movlw	0
   722  000352  6E41               	movwf	(write_i2c@address+3)^0,c
   723  000354  C024  F042         	movff	_vibration_mode,write_i2c@data
   724  000358  6A43               	clrf	(write_i2c@data+1)^0,c
   725  00035A  EC23  F00E         	call	_write_i2c	;wreg free
   726  00035E                     
   727                           ;main.c: 178:         INTCONbits.GIE = 1;
   728  00035E  8EF2               	bsf	242,7,c	;volatile
   729  000360                     l3654:
   730                           
   731                           ;main.c: 181:     NUM = 1;
   732  000360  0E00               	movlw	0
   733  000362  6E0C               	movwf	(_NUM+1)^0,c
   734  000364  0E01               	movlw	1
   735  000366  6E0B               	movwf	_NUM^0,c
   736                           
   737                           ;main.c: 182:     WriteSTLED316SData(NUM, vibration_mode);
   738  000368  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
   739  00036C  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
   740  000370  C024  F03A         	movff	_vibration_mode,WriteSTLED316SData@v_mode
   741  000374  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
   742  000378                     
   743                           ;main.c: 183:     NUM_REC = 1;
   744  000378  0E00               	movlw	0
   745  00037A  6E08               	movwf	(_NUM_REC+1)^0,c
   746  00037C  0E01               	movlw	1
   747  00037E  6E07               	movwf	_NUM_REC^0,c
   748  000380                     
   749                           ;main.c: 188:     INTCONbits.GIE = 0;
   750  000380  9EF2               	bcf	242,7,c	;volatile
   751  000382                     
   752                           ;main.c: 189:     ETemp = read_i2c(0x0020);
   753  000382  0E20               	movlw	32
   754  000384  6E3E               	movwf	read_i2c@address^0,c
   755  000386  0E00               	movlw	0
   756  000388  6E3F               	movwf	(read_i2c@address+1)^0,c
   757  00038A  0E00               	movlw	0
   758  00038C  6E40               	movwf	(read_i2c@address+2)^0,c
   759  00038E  0E00               	movlw	0
   760  000390  6E41               	movwf	(read_i2c@address+3)^0,c
   761  000392  EC9B  F00D         	call	_read_i2c	;wreg free
   762  000396  C03E  F015         	movff	?_read_i2c,_ETemp
   763  00039A  C03F  F016         	movff	?_read_i2c+1,_ETemp+1
   764  00039E                     
   765                           ;main.c: 190:     INTCONbits.GIE = 1;
   766  00039E  8EF2               	bsf	242,7,c	;volatile
   767                           
   768                           ;main.c: 192:     Device_ID = ETemp & 0x00FF;
   769  0003A0  5015               	movf	_ETemp^0,w,c
   770  0003A2  6E0F               	movwf	_Device_ID^0,c
   771  0003A4  6A10               	clrf	(_Device_ID+1)^0,c
   772  0003A6                     
   773                           ;main.c: 193:     if (Device_ID < 0x31 || Device_ID > 0x3A) {
   774  0003A6  5010               	movf	(_Device_ID+1)^0,w,c
   775  0003A8  E109               	bnz	u2320
   776  0003AA  0E31               	movlw	49
   777  0003AC  5C0F               	subwf	_Device_ID^0,w,c
   778  0003AE  A0D8               	btfss	status,0,c
   779  0003B0  EFDC  F001         	goto	u2321
   780  0003B4  EFDE  F001         	goto	u2320
   781  0003B8                     u2321:
   782  0003B8  EFE9  F001         	goto	l3668
   783  0003BC                     u2320:
   784  0003BC  5010               	movf	(_Device_ID+1)^0,w,c
   785  0003BE  E109               	bnz	u2330
   786  0003C0  0E3B               	movlw	59
   787  0003C2  5C0F               	subwf	_Device_ID^0,w,c
   788  0003C4  A0D8               	btfss	status,0,c
   789  0003C6  EFE7  F001         	goto	u2331
   790  0003CA  EFE9  F001         	goto	u2330
   791  0003CE                     u2331:
   792  0003CE  EFFD  F001         	goto	l3676
   793  0003D2                     u2330:
   794  0003D2                     l3668:
   795                           
   796                           ;main.c: 194:         Device_ID = 0x31;
   797  0003D2  0E00               	movlw	0
   798  0003D4  6E10               	movwf	(_Device_ID+1)^0,c
   799  0003D6  0E31               	movlw	49
   800  0003D8  6E0F               	movwf	_Device_ID^0,c
   801  0003DA                     
   802                           ;main.c: 196:         INTCONbits.GIE = 0;
   803  0003DA  9EF2               	bcf	242,7,c	;volatile
   804  0003DC                     
   805                           ;main.c: 197:         write_i2c(0x0020, Device_ID);
   806  0003DC  0E20               	movlw	32
   807  0003DE  6E3E               	movwf	write_i2c@address^0,c
   808  0003E0  0E00               	movlw	0
   809  0003E2  6E3F               	movwf	(write_i2c@address+1)^0,c
   810  0003E4  0E00               	movlw	0
   811  0003E6  6E40               	movwf	(write_i2c@address+2)^0,c
   812  0003E8  0E00               	movlw	0
   813  0003EA  6E41               	movwf	(write_i2c@address+3)^0,c
   814  0003EC  C00F  F042         	movff	_Device_ID,write_i2c@data
   815  0003F0  C010  F043         	movff	_Device_ID+1,write_i2c@data+1
   816  0003F4  EC23  F00E         	call	_write_i2c	;wreg free
   817  0003F8                     
   818                           ;main.c: 198:         INTCONbits.GIE = 1;
   819  0003F8  8EF2               	bsf	242,7,c	;volatile
   820  0003FA                     l3676:
   821                           
   822                           ;main.c: 204:     INTCONbits.GIE = 0;
   823  0003FA  9EF2               	bcf	242,7,c	;volatile
   824  0003FC                     
   825                           ;main.c: 205:     ETemp = read_i2c(0x0060);
   826  0003FC  0E60               	movlw	96
   827  0003FE  6E3E               	movwf	read_i2c@address^0,c
   828  000400  0E00               	movlw	0
   829  000402  6E3F               	movwf	(read_i2c@address+1)^0,c
   830  000404  0E00               	movlw	0
   831  000406  6E40               	movwf	(read_i2c@address+2)^0,c
   832  000408  0E00               	movlw	0
   833  00040A  6E41               	movwf	(read_i2c@address+3)^0,c
   834  00040C  EC9B  F00D         	call	_read_i2c	;wreg free
   835  000410  C03E  F015         	movff	?_read_i2c,_ETemp
   836  000414  C03F  F016         	movff	?_read_i2c+1,_ETemp+1
   837  000418                     
   838                           ;main.c: 206:     INTCONbits.GIE = 1;
   839  000418  8EF2               	bsf	242,7,c	;volatile
   840  00041A                     
   841                           ;main.c: 208:     pause_Time = ETemp & 0x00FF;
   842  00041A  C015  F021         	movff	_ETemp,_pause_Time	;volatile
   843  00041E                     
   844                           ;main.c: 209:     if (pause_Time < 0x30 || pause_Time > 0x35) {
   845  00041E  0E2F               	movlw	47
   846  000420  6421               	cpfsgt	_pause_Time^0,c	;volatile
   847  000422  EF15  F002         	goto	u2341
   848  000426  EF17  F002         	goto	u2340
   849  00042A                     u2341:
   850  00042A  EF1F  F002         	goto	l3688
   851  00042E                     u2340:
   852  00042E  0E35               	movlw	53
   853  000430  6421               	cpfsgt	_pause_Time^0,c	;volatile
   854  000432  EF1D  F002         	goto	u2351
   855  000436  EF1F  F002         	goto	u2350
   856  00043A                     u2351:
   857  00043A  EF5C  F002         	goto	l3710
   858  00043E                     u2350:
   859  00043E                     l3688:
   860                           
   861                           ;main.c: 210:         pause_Time = 0x30;
   862  00043E  0E30               	movlw	48
   863  000440  6E21               	movwf	_pause_Time^0,c	;volatile
   864                           
   865                           ;main.c: 211:         Motor_Pause_Time = 0;
   866  000442  0E00               	movlw	0
   867  000444  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   868  000446  0E00               	movlw	0
   869  000448  6E0D               	movwf	_Motor_Pause_Time^0,c
   870  00044A                     
   871                           ;main.c: 213:         INTCONbits.GIE = 0;
   872  00044A  9EF2               	bcf	242,7,c	;volatile
   873  00044C                     
   874                           ;main.c: 214:         write_i2c(0x0060, pause_Time);
   875  00044C  0E60               	movlw	96
   876  00044E  6E3E               	movwf	write_i2c@address^0,c
   877  000450  0E00               	movlw	0
   878  000452  6E3F               	movwf	(write_i2c@address+1)^0,c
   879  000454  0E00               	movlw	0
   880  000456  6E40               	movwf	(write_i2c@address+2)^0,c
   881  000458  0E00               	movlw	0
   882  00045A  6E41               	movwf	(write_i2c@address+3)^0,c
   883  00045C  C021  F042         	movff	_pause_Time,write_i2c@data	;volatile
   884  000460  6A43               	clrf	(write_i2c@data+1)^0,c
   885  000462  EC23  F00E         	call	_write_i2c	;wreg free
   886  000466                     
   887                           ;main.c: 215:         INTCONbits.GIE = 1;
   888  000466  8EF2               	bsf	242,7,c	;volatile
   889                           
   890                           ;main.c: 216:     } else {
   891  000468  EF81  F002         	goto	l170
   892  00046C                     l3696:
   893                           
   894                           ;main.c: 220:                 Motor_Pause_Time = 0;
   895  00046C  0E00               	movlw	0
   896  00046E  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   897  000470  0E00               	movlw	0
   898  000472  6E0D               	movwf	_Motor_Pause_Time^0,c
   899                           
   900                           ;main.c: 221:                 pause_Time = 0x30;
   901  000474  0E30               	movlw	48
   902  000476  6E21               	movwf	_pause_Time^0,c	;volatile
   903                           
   904                           ;main.c: 222:                 break;
   905  000478  EF81  F002         	goto	l170
   906  00047C                     l3698:
   907                           
   908                           ;main.c: 225:                 Motor_Pause_Time = 1000;
   909  00047C  0E03               	movlw	3
   910  00047E  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   911  000480  0EE8               	movlw	232
   912  000482  6E0D               	movwf	_Motor_Pause_Time^0,c
   913                           
   914                           ;main.c: 226:                 break;
   915  000484  EF81  F002         	goto	l170
   916  000488                     l3700:
   917                           
   918                           ;main.c: 229:                 Motor_Pause_Time = 2000;
   919  000488  0E07               	movlw	7
   920  00048A  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   921  00048C  0ED0               	movlw	208
   922  00048E  6E0D               	movwf	_Motor_Pause_Time^0,c
   923                           
   924                           ;main.c: 230:                 break;
   925  000490  EF81  F002         	goto	l170
   926  000494                     l3702:
   927                           
   928                           ;main.c: 233:                 Motor_Pause_Time = 3000;
   929  000494  0E0B               	movlw	11
   930  000496  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   931  000498  0EB8               	movlw	184
   932  00049A  6E0D               	movwf	_Motor_Pause_Time^0,c
   933                           
   934                           ;main.c: 234:                 break;
   935  00049C  EF81  F002         	goto	l170
   936  0004A0                     l3704:
   937                           
   938                           ;main.c: 237:                 Motor_Pause_Time = 4000;
   939  0004A0  0E0F               	movlw	15
   940  0004A2  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   941  0004A4  0EA0               	movlw	160
   942  0004A6  6E0D               	movwf	_Motor_Pause_Time^0,c
   943                           
   944                           ;main.c: 238:                 break;
   945  0004A8  EF81  F002         	goto	l170
   946  0004AC                     l3706:
   947                           
   948                           ;main.c: 241:                 Motor_Pause_Time = 5000;
   949  0004AC  0E13               	movlw	19
   950  0004AE  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
   951  0004B0  0E88               	movlw	136
   952  0004B2  6E0D               	movwf	_Motor_Pause_Time^0,c
   953                           
   954                           ;main.c: 242:                 break;
   955  0004B4  EF81  F002         	goto	l170
   956  0004B8                     l3710:
   957  0004B8  5021               	movf	_pause_Time^0,w,c	;volatile
   958  0004BA  6E44               	movwf	??_main^0,c
   959  0004BC  6A45               	clrf	(??_main+1)^0,c
   960                           
   961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   962                           ; Switch size 1, requested type "simple"
   963                           ; Number of cases is 1, Range of values is 0 to 0
   964                           ; switch strategies available:
   965                           ; Name         Instructions Cycles
   966                           ; simple_byte            4     3 (average)
   967                           ;	Chosen strategy is simple_byte
   968  0004BE  5045               	movf	(??_main+1)^0,w,c
   969  0004C0  0A00               	xorlw	0	; case 0
   970  0004C2  B4D8               	btfsc	status,2,c
   971  0004C4  EF66  F002         	goto	l4442
   972  0004C8  EF36  F002         	goto	l3696
   973  0004CC                     l4442:
   974                           
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 6, Range of values is 48 to 53
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte           19    10 (average)
   980                           ;	Chosen strategy is simple_byte
   981  0004CC  5044               	movf	??_main^0,w,c
   982  0004CE  0A30               	xorlw	48	; case 48
   983  0004D0  B4D8               	btfsc	status,2,c
   984  0004D2  EF36  F002         	goto	l3696
   985  0004D6  0A01               	xorlw	1	; case 49
   986  0004D8  B4D8               	btfsc	status,2,c
   987  0004DA  EF3E  F002         	goto	l3698
   988  0004DE  0A03               	xorlw	3	; case 50
   989  0004E0  B4D8               	btfsc	status,2,c
   990  0004E2  EF44  F002         	goto	l3700
   991  0004E6  0A01               	xorlw	1	; case 51
   992  0004E8  B4D8               	btfsc	status,2,c
   993  0004EA  EF4A  F002         	goto	l3702
   994  0004EE  0A07               	xorlw	7	; case 52
   995  0004F0  B4D8               	btfsc	status,2,c
   996  0004F2  EF50  F002         	goto	l3704
   997  0004F6  0A01               	xorlw	1	; case 53
   998  0004F8  B4D8               	btfsc	status,2,c
   999  0004FA  EF56  F002         	goto	l3706
  1000  0004FE  EF36  F002         	goto	l3696
  1001  000502                     l170:
  1002                           
  1003                           ;main.c: 249:     INTCONbits.GIE = 0;
  1004  000502  9EF2               	bcf	242,7,c	;volatile
  1005  000504                     
  1006                           ;main.c: 250:     ETemp = read_i2c(0x0050);
  1007  000504  0E50               	movlw	80
  1008  000506  6E3E               	movwf	read_i2c@address^0,c
  1009  000508  0E00               	movlw	0
  1010  00050A  6E3F               	movwf	(read_i2c@address+1)^0,c
  1011  00050C  0E00               	movlw	0
  1012  00050E  6E40               	movwf	(read_i2c@address+2)^0,c
  1013  000510  0E00               	movlw	0
  1014  000512  6E41               	movwf	(read_i2c@address+3)^0,c
  1015  000514  EC9B  F00D         	call	_read_i2c	;wreg free
  1016  000518  C03E  F015         	movff	?_read_i2c,_ETemp
  1017  00051C  C03F  F016         	movff	?_read_i2c+1,_ETemp+1
  1018  000520                     
  1019                           ;main.c: 251:     INTCONbits.GIE = 1;
  1020  000520  8EF2               	bsf	242,7,c	;volatile
  1021  000522                     
  1022                           ;main.c: 253:     delay_motor_stop_time = ETemp & 0x00FF;
  1023  000522  C015  F01F         	movff	_ETemp,_delay_motor_stop_time	;volatile
  1024  000526                     
  1025                           ;main.c: 254:     if (delay_motor_stop_time > 0x96) {
  1026  000526  0E96               	movlw	150
  1027  000528  641F               	cpfsgt	_delay_motor_stop_time^0,c	;volatile
  1028  00052A  EF99  F002         	goto	u2361
  1029  00052E  EF9B  F002         	goto	u2360
  1030  000532                     u2361:
  1031  000532  EFB2  F002         	goto	l180
  1032  000536                     u2360:
  1033  000536                     
  1034                           ;main.c: 255:         delay_motor_stop_time = 0x00;
  1035  000536  0E00               	movlw	0
  1036  000538  6E1F               	movwf	_delay_motor_stop_time^0,c	;volatile
  1037  00053A                     
  1038                           ;main.c: 257:         INTCONbits.GIE = 0;
  1039  00053A  9EF2               	bcf	242,7,c	;volatile
  1040  00053C                     
  1041                           ;main.c: 258:         write_i2c(0x0050, delay_motor_stop_time);
  1042  00053C  0E50               	movlw	80
  1043  00053E  6E3E               	movwf	write_i2c@address^0,c
  1044  000540  0E00               	movlw	0
  1045  000542  6E3F               	movwf	(write_i2c@address+1)^0,c
  1046  000544  0E00               	movlw	0
  1047  000546  6E40               	movwf	(write_i2c@address+2)^0,c
  1048  000548  0E00               	movlw	0
  1049  00054A  6E41               	movwf	(write_i2c@address+3)^0,c
  1050  00054C  C01F  F042         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  1051  000550  6A43               	clrf	(write_i2c@data+1)^0,c
  1052  000552  EC23  F00E         	call	_write_i2c	;wreg free
  1053  000556                     
  1054                           ;main.c: 259:         INTCONbits.GIE = 1;
  1055  000556  8EF2               	bsf	242,7,c	;volatile
  1056  000558                     
  1057                           ;main.c: 261:         Motor_Stop_Delay_Time = 0;
  1058  000558  0E00               	movlw	0
  1059  00055A  6E12               	movwf	(_Motor_Stop_Delay_Time+1)^0,c
  1060  00055C  0E00               	movlw	0
  1061  00055E  6E11               	movwf	_Motor_Stop_Delay_Time^0,c
  1062                           
  1063                           ;main.c: 262:     } else {
  1064  000560  EFB5  F002         	goto	l181
  1065  000564                     l180:
  1066                           
  1067                           ;main.c: 263:         Motor_Stop_Delay_Time = delay_motor_stop_time;
  1068  000564  C01F  F011         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  1069  000568  6A12               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  1070  00056A                     l181:
  1071                           
  1072                           ;main.c: 269:     INTCONbits.GIE = 0;
  1073  00056A  9EF2               	bcf	242,7,c	;volatile
  1074  00056C                     
  1075                           ;main.c: 270:     ETemp = read_i2c(0x0040);
  1076  00056C  0E40               	movlw	64
  1077  00056E  6E3E               	movwf	read_i2c@address^0,c
  1078  000570  0E00               	movlw	0
  1079  000572  6E3F               	movwf	(read_i2c@address+1)^0,c
  1080  000574  0E00               	movlw	0
  1081  000576  6E40               	movwf	(read_i2c@address+2)^0,c
  1082  000578  0E00               	movlw	0
  1083  00057A  6E41               	movwf	(read_i2c@address+3)^0,c
  1084  00057C  EC9B  F00D         	call	_read_i2c	;wreg free
  1085  000580  C03E  F015         	movff	?_read_i2c,_ETemp
  1086  000584  C03F  F016         	movff	?_read_i2c+1,_ETemp+1
  1087  000588                     
  1088                           ;main.c: 271:     INTCONbits.GIE = 1
  1089  000588  8EF2               	bsf	242,7,c	;volatile
  1090  00058A                     
  1091                           ;main.c: 273:     vib_Time = ETemp & 0x00FF;
  1092  00058A  C015  F020         	movff	_ETemp,_vib_Time	;volatile
  1093  00058E                     
  1094                           ;main.c: 274:     if ((vib_Time != 0x81 && vib_Time != 0x82 && vib_Time != 0x83 && vib_T
      +                          ime != 0x84 && vib_Time != 0x85)) {
  1095  00058E  0E81               	movlw	129
  1096  000590  1820               	xorwf	_vib_Time^0,w,c	;volatile
  1097  000592  B4D8               	btfsc	status,2,c
  1098  000594  EFCE  F002         	goto	u2371
  1099  000598  EFD0  F002         	goto	u2370
  1100  00059C                     u2371:
  1101  00059C  EF2B  F003         	goto	l3766
  1102  0005A0                     u2370:
  1103  0005A0  0E82               	movlw	130
  1104  0005A2  1820               	xorwf	_vib_Time^0,w,c	;volatile
  1105  0005A4  B4D8               	btfsc	status,2,c
  1106  0005A6  EFD7  F002         	goto	u2381
  1107  0005AA  EFD9  F002         	goto	u2380
  1108  0005AE                     u2381:
  1109  0005AE  EF2B  F003         	goto	l3766
  1110  0005B2                     u2380:
  1111  0005B2  0E83               	movlw	131
  1112  0005B4  1820               	xorwf	_vib_Time^0,w,c	;volatile
  1113  0005B6  B4D8               	btfsc	status,2,c
  1114  0005B8  EFE0  F002         	goto	u2391
  1115  0005BC  EFE2  F002         	goto	u2390
  1116  0005C0                     u2391:
  1117  0005C0  EF2B  F003         	goto	l3766
  1118  0005C4                     u2390:
  1119  0005C4  0E84               	movlw	132
  1120  0005C6  1820               	xorwf	_vib_Time^0,w,c	;volatile
  1121  0005C8  B4D8               	btfsc	status,2,c
  1122  0005CA  EFE9  F002         	goto	u2401
  1123  0005CE  EFEB  F002         	goto	u2400
  1124  0005D2                     u2401:
  1125  0005D2  EF2B  F003         	goto	l3766
  1126  0005D6                     u2400:
  1127  0005D6  0E85               	movlw	133
  1128  0005D8  1820               	xorwf	_vib_Time^0,w,c	;volatile
  1129  0005DA  B4D8               	btfsc	status,2,c
  1130  0005DC  EFF2  F002         	goto	u2411
  1131  0005E0  EFF4  F002         	goto	u2410
  1132  0005E4                     u2411:
  1133  0005E4  EF2B  F003         	goto	l3766
  1134  0005E8                     u2410:
  1135  0005E8                     
  1136                           ;main.c: 275:         Vmotor_Time = 2000;
  1137  0005E8  0E07               	movlw	7
  1138  0005EA  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  1139  0005EC  0ED0               	movlw	208
  1140  0005EE  6E4E               	movwf	_Vmotor_Time^0,c
  1141                           
  1142                           ;main.c: 276:         vib_Time = 0x82;
  1143  0005F0  0E82               	movlw	130
  1144  0005F2  6E20               	movwf	_vib_Time^0,c	;volatile
  1145  0005F4                     
  1146                           ;main.c: 278:         INTCONbits.GIE = 0;
  1147  0005F4  9EF2               	bcf	242,7,c	;volatile
  1148  0005F6                     
  1149                           ;main.c: 279:         write_i2c(0x0040, vib_Time);
  1150  0005F6  0E40               	movlw	64
  1151  0005F8  6E3E               	movwf	write_i2c@address^0,c
  1152  0005FA  0E00               	movlw	0
  1153  0005FC  6E3F               	movwf	(write_i2c@address+1)^0,c
  1154  0005FE  0E00               	movlw	0
  1155  000600  6E40               	movwf	(write_i2c@address+2)^0,c
  1156  000602  0E00               	movlw	0
  1157  000604  6E41               	movwf	(write_i2c@address+3)^0,c
  1158  000606  C020  F042         	movff	_vib_Time,write_i2c@data	;volatile
  1159  00060A  6A43               	clrf	(write_i2c@data+1)^0,c
  1160  00060C  EC23  F00E         	call	_write_i2c	;wreg free
  1161  000610                     
  1162                           ;main.c: 280:         INTCONbits.GIE = 1;
  1163  000610  8EF2               	bsf	242,7,c	;volatile
  1164                           
  1165                           ;main.c: 281:     } else {
  1166  000612  EF4C  F003         	goto	l3768
  1167  000616                     l3754:
  1168                           
  1169                           ;main.c: 284:                 Vmotor_Time = 1000;
  1170  000616  0E03               	movlw	3
  1171  000618  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  1172  00061A  0EE8               	movlw	232
  1173  00061C  6E4E               	movwf	_Vmotor_Time^0,c
  1174                           
  1175                           ;main.c: 285:                 break;
  1176  00061E  EF4C  F003         	goto	l3768
  1177  000622                     l3756:
  1178                           
  1179                           ;main.c: 288:                 Vmotor_Time = 2000;
  1180  000622  0E07               	movlw	7
  1181  000624  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  1182  000626  0ED0               	movlw	208
  1183  000628  6E4E               	movwf	_Vmotor_Time^0,c
  1184                           
  1185                           ;main.c: 289:                 vib_Time = 0x82;
  1186  00062A  0E82               	movlw	130
  1187  00062C  6E20               	movwf	_vib_Time^0,c	;volatile
  1188                           
  1189                           ;main.c: 290:                 break;
  1190  00062E  EF4C  F003         	goto	l3768
  1191  000632                     l3758:
  1192                           
  1193                           ;main.c: 292:                 Vmotor_Time = 3000;
  1194  000632  0E0B               	movlw	11
  1195  000634  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  1196  000636  0EB8               	movlw	184
  1197  000638  6E4E               	movwf	_Vmotor_Time^0,c
  1198                           
  1199                           ;main.c: 293:                 break;
  1200  00063A  EF4C  F003         	goto	l3768
  1201  00063E                     l3760:
  1202                           
  1203                           ;main.c: 295:                 Vmotor_Time = 4000;
  1204  00063E  0E0F               	movlw	15
  1205  000640  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  1206  000642  0EA0               	movlw	160
  1207  000644  6E4E               	movwf	_Vmotor_Time^0,c
  1208                           
  1209                           ;main.c: 296:                 break;
  1210  000646  EF4C  F003         	goto	l3768
  1211  00064A                     l3762:
  1212                           
  1213                           ;main.c: 298:                 Vmotor_Time = 5000;
  1214  00064A  0E13               	movlw	19
  1215  00064C  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  1216  00064E  0E88               	movlw	136
  1217  000650  6E4E               	movwf	_Vmotor_Time^0,c
  1218                           
  1219                           ;main.c: 299:                 break;
  1220  000652  EF4C  F003         	goto	l3768
  1221  000656                     l3766:
  1222  000656  5020               	movf	_vib_Time^0,w,c	;volatile
  1223  000658  6E44               	movwf	??_main^0,c
  1224  00065A  6A45               	clrf	(??_main+1)^0,c
  1225                           
  1226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1227                           ; Switch size 1, requested type "simple"
  1228                           ; Number of cases is 1, Range of values is 0 to 0
  1229                           ; switch strategies available:
  1230                           ; Name         Instructions Cycles
  1231                           ; simple_byte            4     3 (average)
  1232                           ;	Chosen strategy is simple_byte
  1233  00065C  5045               	movf	(??_main+1)^0,w,c
  1234  00065E  0A00               	xorlw	0	; case 0
  1235  000660  B4D8               	btfsc	status,2,c
  1236  000662  EF35  F003         	goto	l4444
  1237  000666  EF11  F003         	goto	l3756
  1238  00066A                     l4444:
  1239                           
  1240                           ; Switch size 1, requested type "simple"
  1241                           ; Number of cases is 5, Range of values is 129 to 133
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte           16     9 (average)
  1245                           ;	Chosen strategy is simple_byte
  1246  00066A  5044               	movf	??_main^0,w,c
  1247  00066C  0A81               	xorlw	129	; case 129
  1248  00066E  B4D8               	btfsc	status,2,c
  1249  000670  EF0B  F003         	goto	l3754
  1250  000674  0A03               	xorlw	3	; case 130
  1251  000676  B4D8               	btfsc	status,2,c
  1252  000678  EF11  F003         	goto	l3756
  1253  00067C  0A01               	xorlw	1	; case 131
  1254  00067E  B4D8               	btfsc	status,2,c
  1255  000680  EF19  F003         	goto	l3758
  1256  000684  0A07               	xorlw	7	; case 132
  1257  000686  B4D8               	btfsc	status,2,c
  1258  000688  EF1F  F003         	goto	l3760
  1259  00068C  0A01               	xorlw	1	; case 133
  1260  00068E  B4D8               	btfsc	status,2,c
  1261  000690  EF25  F003         	goto	l3762
  1262  000694  EF11  F003         	goto	l3756
  1263  000698                     l3768:
  1264                           
  1265                           ;main.c: 323:     errorcounter = 30;
  1266  000698  0E1E               	movlw	30
  1267  00069A  6E4A               	movwf	_errorcounter^0,c	;volatile
  1268  00069C  0E00               	movlw	0
  1269  00069E  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  1270  0006A0  0E00               	movlw	0
  1271  0006A2  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  1272  0006A4  0E00               	movlw	0
  1273  0006A6  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  1274  0006A8                     
  1275                           ;main.c: 324:     MotorPosition_Init();
  1276  0006A8  ECEE  F009         	call	_MotorPosition_Init	;wreg free
  1277  0006AC                     
  1278                           ;main.c: 325:     LATDbits.LATD1 = 0;
  1279  0006AC  928C               	bcf	140,1,c	;volatile
  1280  0006AE                     l192:
  1281  0006AE  0004               	clrwdt		;# 
  1282  0006B0                     
  1283                           ;main.c: 332:         errorcounter = 30;
  1284  0006B0  0E1E               	movlw	30
  1285  0006B2  6E4A               	movwf	_errorcounter^0,c	;volatile
  1286  0006B4  0E00               	movlw	0
  1287  0006B6  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  1288  0006B8  0E00               	movlw	0
  1289  0006BA  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  1290  0006BC  0E00               	movlw	0
  1291  0006BE  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  1292                           
  1293                           ;main.c: 333:         AD_capture_BattVoltage();
  1294  0006C0  EC6B  F00E         	call	_AD_capture_BattVoltage	;wreg free
  1295                           
  1296                           ;main.c: 335:         switch (OpMode) {
  1297  0006C4  EF5C  F006         	goto	l3986
  1298  0006C8                     l194:
  1299                           
  1300                           ;main.c: 341:                 NUM = NUM_REC;
  1301  0006C8  C007  F00B         	movff	_NUM_REC,_NUM
  1302  0006CC  C008  F00C         	movff	_NUM_REC+1,_NUM+1
  1303                           
  1304                           ;main.c: 343:                 if (PORTBbits.RB4 == 0) {
  1305  0006D0  B881               	btfsc	129,4,c	;volatile
  1306  0006D2  EF6D  F003         	goto	u2421
  1307  0006D6  EF6F  F003         	goto	u2420
  1308  0006DA                     u2421:
  1309  0006DA  EF8E  F003         	goto	l195
  1310  0006DE                     u2420:
  1311  0006DE                     l196:
  1312                           
  1313                           ;main.c: 345:                         if (PORTBbits.RB2 == 0) {
  1314  0006DE  B481               	btfsc	129,2,c	;volatile
  1315  0006E0  EF74  F003         	goto	u2431
  1316  0006E4  EF76  F003         	goto	u2430
  1317  0006E8                     u2431:
  1318  0006E8  EF78  F003         	goto	l197
  1319  0006EC                     u2430:
  1320  0006EC                     
  1321                           ;main.c: 346:                             ToggleVIB_Mode();
  1322  0006EC  EC8A  F00E         	call	_ToggleVIB_Mode	;wreg free
  1323  0006F0                     l197:
  1324                           
  1325                           ;main.c: 349:                         WriteSTLED316SVibMode(vibration_mode);
  1326  0006F0  5024               	movf	_vibration_mode^0,w,c
  1327  0006F2  ECFC  F00D         	call	_WriteSTLED316SVibMode
  1328  0006F6                     
  1329                           ;main.c: 350:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  1330  0006F6  0E02               	movlw	2
  1331  0006F8  6E45               	movwf	(??_main+1)^0,c
  1332  0006FA  0E04               	movlw	4
  1333  0006FC  6E44               	movwf	??_main^0,c
  1334  0006FE  0EBA               	movlw	186
  1335  000700                     u2927:
  1336  000700  2EE8               	decfsz	wreg,f,c
  1337  000702  D7FE               	bra	u2927
  1338  000704  2E44               	decfsz	??_main^0,f,c
  1339  000706  D7FC               	bra	u2927
  1340  000708  2E45               	decfsz	(??_main+1)^0,f,c
  1341  00070A  D7FA               	bra	u2927
  1342  00070C  D000               	nop2	
  1343  00070E                     
  1344                           ;main.c: 352:                     } while (PORTBbits.RB4 == 0);
  1345  00070E  A881               	btfss	129,4,c	;volatile
  1346  000710  EF8C  F003         	goto	u2441
  1347  000714  EF8E  F003         	goto	u2440
  1348  000718                     u2441:
  1349  000718  EF6F  F003         	goto	l196
  1350  00071C                     u2440:
  1351  00071C                     l195:
  1352                           
  1353                           ;main.c: 355:                 if ((PORTBbits.RB3 == 0) && NUM != 99) {
  1354  00071C  B681               	btfsc	129,3,c	;volatile
  1355  00071E  EF93  F003         	goto	u2451
  1356  000722  EF95  F003         	goto	u2450
  1357  000726                     u2451:
  1358  000726  EFAC  F003         	goto	l199
  1359  00072A                     u2450:
  1360  00072A  0E63               	movlw	99
  1361  00072C  180B               	xorwf	_NUM^0,w,c
  1362  00072E  100C               	iorwf	(_NUM+1)^0,w,c
  1363  000730  B4D8               	btfsc	status,2,c
  1364  000732  EF9D  F003         	goto	u2461
  1365  000736  EF9F  F003         	goto	u2460
  1366  00073A                     u2461:
  1367  00073A  EFAC  F003         	goto	l199
  1368  00073E                     u2460:
  1369  00073E                     
  1370                           ;main.c: 356:                     NUM = NUM + 1;
  1371  00073E  0E01               	movlw	1
  1372  000740  240B               	addwf	_NUM^0,w,c
  1373  000742  6E0B               	movwf	_NUM^0,c
  1374  000744  0E00               	movlw	0
  1375  000746  200C               	addwfc	(_NUM+1)^0,w,c
  1376  000748  6E0C               	movwf	(_NUM+1)^0,c
  1377  00074A                     l200:
  1378  00074A  A681               	btfss	129,3,c	;volatile
  1379  00074C  EFAA  F003         	goto	u2471
  1380  000750  EFAC  F003         	goto	u2470
  1381  000754                     u2471:
  1382  000754  EFA5  F003         	goto	l200
  1383  000758                     u2470:
  1384  000758                     l199:
  1385                           
  1386                           ;main.c: 360:                 if (PORTAbits.RA5 == 0 && NUM != 0) {
  1387  000758  BA80               	btfsc	128,5,c	;volatile
  1388  00075A  EFB1  F003         	goto	u2481
  1389  00075E  EFB3  F003         	goto	u2480
  1390  000762                     u2481:
  1391  000762  EFC9  F003         	goto	l203
  1392  000766                     u2480:
  1393  000766  500B               	movf	_NUM^0,w,c
  1394  000768  100C               	iorwf	(_NUM+1)^0,w,c
  1395  00076A  B4D8               	btfsc	status,2,c
  1396  00076C  EFBA  F003         	goto	u2491
  1397  000770  EFBC  F003         	goto	u2490
  1398  000774                     u2491:
  1399  000774  EFC9  F003         	goto	l203
  1400  000778                     u2490:
  1401  000778                     
  1402                           ;main.c: 361:                     NUM = NUM - 1;
  1403  000778  0EFF               	movlw	255
  1404  00077A  240B               	addwf	_NUM^0,w,c
  1405  00077C  6E0B               	movwf	_NUM^0,c
  1406  00077E  0EFF               	movlw	255
  1407  000780  200C               	addwfc	(_NUM+1)^0,w,c
  1408  000782  6E0C               	movwf	(_NUM+1)^0,c
  1409  000784                     l204:
  1410  000784  AA80               	btfss	128,5,c	;volatile
  1411  000786  EFC7  F003         	goto	u2501
  1412  00078A  EFC9  F003         	goto	u2500
  1413  00078E                     u2501:
  1414  00078E  EFC2  F003         	goto	l204
  1415  000792                     u2500:
  1416  000792                     l203:
  1417                           
  1418                           ;main.c: 365:                 if (PORTAbits.RA4 == 0 && NUM <= 89) {
  1419  000792  B880               	btfsc	128,4,c	;volatile
  1420  000794  EFCE  F003         	goto	u2511
  1421  000798  EFD0  F003         	goto	u2510
  1422  00079C                     u2511:
  1423  00079C  EFE8  F003         	goto	l207
  1424  0007A0                     u2510:
  1425  0007A0  500C               	movf	(_NUM+1)^0,w,c
  1426  0007A2  E107               	bnz	u2521
  1427  0007A4  0E5A               	movlw	90
  1428  0007A6  5C0B               	subwf	_NUM^0,w,c
  1429  0007A8  B0D8               	btfsc	status,0,c
  1430  0007AA  EFD9  F003         	goto	u2521
  1431  0007AE  EFDB  F003         	goto	u2520
  1432  0007B2                     u2521:
  1433  0007B2  EFE8  F003         	goto	l207
  1434  0007B6                     u2520:
  1435  0007B6                     
  1436                           ;main.c: 366:                     NUM = NUM + 10;
  1437  0007B6  0E0A               	movlw	10
  1438  0007B8  240B               	addwf	_NUM^0,w,c
  1439  0007BA  6E0B               	movwf	_NUM^0,c
  1440  0007BC  0E00               	movlw	0
  1441  0007BE  200C               	addwfc	(_NUM+1)^0,w,c
  1442  0007C0  6E0C               	movwf	(_NUM+1)^0,c
  1443  0007C2                     l208:
  1444  0007C2  A880               	btfss	128,4,c	;volatile
  1445  0007C4  EFE6  F003         	goto	u2531
  1446  0007C8  EFE8  F003         	goto	u2530
  1447  0007CC                     u2531:
  1448  0007CC  EFE1  F003         	goto	l208
  1449  0007D0                     u2530:
  1450  0007D0                     l207:
  1451                           
  1452                           ;main.c: 370:                 if (PORTAbits.RA3 == 0 && NUM >= 10) {
  1453  0007D0  B680               	btfsc	128,3,c	;volatile
  1454  0007D2  EFED  F003         	goto	u2541
  1455  0007D6  EFEF  F003         	goto	u2540
  1456  0007DA                     u2541:
  1457  0007DA  EF07  F004         	goto	l211
  1458  0007DE                     u2540:
  1459  0007DE  500C               	movf	(_NUM+1)^0,w,c
  1460  0007E0  E109               	bnz	u2550
  1461  0007E2  0E0A               	movlw	10
  1462  0007E4  5C0B               	subwf	_NUM^0,w,c
  1463  0007E6  A0D8               	btfss	status,0,c
  1464  0007E8  EFF8  F003         	goto	u2551
  1465  0007EC  EFFA  F003         	goto	u2550
  1466  0007F0                     u2551:
  1467  0007F0  EF07  F004         	goto	l211
  1468  0007F4                     u2550:
  1469  0007F4                     
  1470                           ;main.c: 371:                     NUM = NUM - 10;
  1471  0007F4  0EF6               	movlw	246
  1472  0007F6  240B               	addwf	_NUM^0,w,c
  1473  0007F8  6E0B               	movwf	_NUM^0,c
  1474  0007FA  0EFF               	movlw	255
  1475  0007FC  200C               	addwfc	(_NUM+1)^0,w,c
  1476  0007FE  6E0C               	movwf	(_NUM+1)^0,c
  1477  000800                     l212:
  1478  000800  A680               	btfss	128,3,c	;volatile
  1479  000802  EF05  F004         	goto	u2561
  1480  000806  EF07  F004         	goto	u2560
  1481  00080A                     u2561:
  1482  00080A  EF00  F004         	goto	l212
  1483  00080E                     u2560:
  1484  00080E                     l211:
  1485                           
  1486                           ;main.c: 375:                 NUM_REC = NUM;
  1487  00080E  C00B  F007         	movff	_NUM,_NUM_REC
  1488  000812  C00C  F008         	movff	_NUM+1,_NUM_REC+1
  1489  000816                     
  1490                           ;main.c: 376:                 WriteSTLED316SData(NUM, vibration_mode);
  1491  000816  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
  1492  00081A  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
  1493  00081E  C024  F03A         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1494  000822  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
  1495  000826                     
  1496                           ;main.c: 378:                 if (PORTBbits.RB2 == 0)
  1497  000826  B481               	btfsc	129,2,c	;volatile
  1498  000828  EF18  F004         	goto	u2571
  1499  00082C  EF1A  F004         	goto	u2570
  1500  000830                     u2571:
  1501  000830  EF2A  F004         	goto	l3810
  1502  000834                     u2570:
  1503  000834                     
  1504                           ;main.c: 379:                 {;main.c: 380:                     Busy = 1;
  1505  000834  0E01               	movlw	1
  1506  000836  6E25               	movwf	_Busy^0,c
  1507                           
  1508                           ;main.c: 381:                     errorcounter = 30;
  1509  000838  0E1E               	movlw	30
  1510  00083A  6E4A               	movwf	_errorcounter^0,c	;volatile
  1511  00083C  0E00               	movlw	0
  1512  00083E  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  1513  000840  0E00               	movlw	0
  1514  000842  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  1515  000844  0E00               	movlw	0
  1516  000846  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  1517  000848                     
  1518                           ;main.c: 382:                     Homing_Again_Manual();
  1519  000848  EC73  F006         	call	_Homing_Again_Manual	;wreg free
  1520  00084C                     
  1521                           ;main.c: 383:                     Stop = 0;
  1522  00084C  0E00               	movlw	0
  1523  00084E  6E27               	movwf	_Stop^0,c
  1524  000850                     
  1525                           ;main.c: 384:                     Busy = 0;
  1526  000850  0E00               	movlw	0
  1527  000852  6E25               	movwf	_Busy^0,c
  1528  000854                     l3810:
  1529                           
  1530                           ;main.c: 398:                 if (Serial_Flag == 1) {
  1531  000854  0429               	decf	_Serial_Flag^0,w,c
  1532  000856  A4D8               	btfss	status,2,c
  1533  000858  EF30  F004         	goto	u2581
  1534  00085C  EF32  F004         	goto	u2580
  1535  000860                     u2581:
  1536  000860  EF58  F006         	goto	l3984
  1537  000864                     u2580:
  1538  000864  EF2E  F006         	goto	l3980
  1539  000868                     l3814:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 403:                             if (Serial_Buffer[2] == 0xF1 && Busy == 0)
  1543  000868  0EF1               	movlw	241
  1544  00086A  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  1545  00086C  A4D8               	btfss	status,2,c
  1546  00086E  EF3B  F004         	goto	u2591
  1547  000872  EF3D  F004         	goto	u2590
  1548  000876                     u2591:
  1549  000876  EF59  F004         	goto	l3824
  1550  00087A                     u2590:
  1551  00087A                     
  1552                           ; BSR set to: 0
  1553  00087A  5025               	movf	_Busy^0,w,c
  1554  00087C  A4D8               	btfss	status,2,c
  1555  00087E  EF43  F004         	goto	u2601
  1556  000882  EF45  F004         	goto	u2600
  1557  000886                     u2601:
  1558  000886  EF59  F004         	goto	l3824
  1559  00088A                     u2600:
  1560  00088A                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 404:                             {;main.c: 405:                                
      +                           Stop = 0;
  1563  00088A  0E00               	movlw	0
  1564  00088C  6E27               	movwf	_Stop^0,c
  1565                           
  1566                           ;main.c: 406:                                 Busy = 1;
  1567  00088E  0E01               	movlw	1
  1568  000890  6E25               	movwf	_Busy^0,c
  1569  000892                     
  1570                           ; BSR set to: 0
  1571                           ;main.c: 407:                                 NUM = NUM_REC;
  1572  000892  C007  F00B         	movff	_NUM_REC,_NUM
  1573  000896  C008  F00C         	movff	_NUM_REC+1,_NUM+1
  1574                           
  1575                           ;main.c: 409:                                 errorcounter = 30;
  1576  00089A  0E1E               	movlw	30
  1577  00089C  6E4A               	movwf	_errorcounter^0,c	;volatile
  1578  00089E  0E00               	movlw	0
  1579  0008A0  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  1580  0008A2  0E00               	movlw	0
  1581  0008A4  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  1582  0008A6  0E00               	movlw	0
  1583  0008A8  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  1584  0008AA                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 410:                                 Homing_Again_Auto();
  1587  0008AA  EC55  F008         	call	_Homing_Again_Auto	;wreg free
  1588                           
  1589                           ;main.c: 412:                             } else if (Serial_Buffer[2] == 0xF2 && Busy ==
      +                           0)
  1590  0008AE  EFB7  F004         	goto	l3854
  1591  0008B2                     l3824:
  1592                           
  1593                           ; BSR set to: 0
  1594  0008B2  0EF2               	movlw	242
  1595  0008B4  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  1596  0008B6  A4D8               	btfss	status,2,c
  1597  0008B8  EF60  F004         	goto	u2611
  1598  0008BC  EF62  F004         	goto	u2610
  1599  0008C0                     u2611:
  1600  0008C0  EFB7  F004         	goto	l3854
  1601  0008C4                     u2610:
  1602  0008C4                     
  1603                           ; BSR set to: 0
  1604  0008C4  5025               	movf	_Busy^0,w,c
  1605  0008C6  A4D8               	btfss	status,2,c
  1606  0008C8  EF68  F004         	goto	u2621
  1607  0008CC  EF6A  F004         	goto	u2620
  1608  0008D0                     u2621:
  1609  0008D0  EFB7  F004         	goto	l3854
  1610  0008D4                     u2620:
  1611  0008D4                     
  1612                           ; BSR set to: 0
  1613                           ;main.c: 413:                             {;main.c: 414:                                
      +                           Stop = 0;
  1614  0008D4  0E00               	movlw	0
  1615  0008D6  6E27               	movwf	_Stop^0,c
  1616                           
  1617                           ;main.c: 415:                                 Busy = 1;
  1618  0008D8  0E01               	movlw	1
  1619  0008DA  6E25               	movwf	_Busy^0,c
  1620  0008DC                     
  1621                           ; BSR set to: 0
  1622                           ;main.c: 416:                                 NUM = NUM_REC;
  1623  0008DC  C007  F00B         	movff	_NUM_REC,_NUM
  1624  0008E0  C008  F00C         	movff	_NUM_REC+1,_NUM+1
  1625  0008E4                     
  1626                           ; BSR set to: 0
  1627                           ;main.c: 417:                                 WriteSTLED316SData(NUM, vibration_mode);
  1628  0008E4  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
  1629  0008E8  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
  1630  0008EC  C024  F03A         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  1631  0008F0  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
  1632  0008F4                     
  1633                           ;main.c: 419:                                 errorcounter = 30;
  1634  0008F4  0E1E               	movlw	30
  1635  0008F6  6E4A               	movwf	_errorcounter^0,c	;volatile
  1636  0008F8  0E00               	movlw	0
  1637  0008FA  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  1638  0008FC  0E00               	movlw	0
  1639  0008FE  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  1640  000900  0E00               	movlw	0
  1641  000902  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  1642  000904                     
  1643                           ;main.c: 420:                                 Homing_Again_Manual();
  1644  000904  EC73  F006         	call	_Homing_Again_Manual	;wreg free
  1645  000908                     
  1646                           ;main.c: 423:                                 if (Stop == 0) {
  1647  000908  5027               	movf	_Stop^0,w,c
  1648  00090A  A4D8               	btfss	status,2,c
  1649  00090C  EF8A  F004         	goto	u2631
  1650  000910  EF8C  F004         	goto	u2630
  1651  000914                     u2631:
  1652  000914  EFB7  F004         	goto	l3854
  1653  000918                     u2630:
  1654  000918                     
  1655                           ;main.c: 424:                                     Serial_Buffer_Out[0] = 0xA5;
  1656  000918  0EA5               	movlw	165
  1657  00091A  0100               	movlb	0	; () banked
  1658  00091C  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1659                           
  1660                           ;main.c: 425:                                     Serial_Buffer_Out[1] = 0x44;
  1661  00091E  0E44               	movlw	68
  1662  000920  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  1663                           
  1664                           ;main.c: 426:                                     Serial_Buffer_Out[2] = 0xF9;
  1665  000922  0EF9               	movlw	249
  1666  000924  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  1667                           
  1668                           ;main.c: 427:                                     Serial_Buffer_Out[3] = 0X3D;
  1669  000926  0E3D               	movlw	61
  1670  000928  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  1671                           
  1672                           ;main.c: 428:                                     Serial_Buffer_Out[4] = 0x5A;
  1673  00092A  0E5A               	movlw	90
  1674  00092C  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  1675  00092E                     
  1676                           ; BSR set to: 0
  1677                           ;main.c: 430:                                     INTCONbits.GIE = 0;
  1678  00092E  9EF2               	bcf	242,7,c	;volatile
  1679                           
  1680                           ;main.c: 431:                                     for (i = 0; i < 5; i++) {
  1681  000930  0E00               	movlw	0
  1682  000932  6E06               	movwf	(_i+1)^0,c
  1683  000934  0E00               	movlw	0
  1684  000936  6E05               	movwf	_i^0,c
  1685  000938                     l3844:
  1686  000938  5006               	movf	(_i+1)^0,w,c
  1687  00093A  E109               	bnz	u2640
  1688  00093C  0E05               	movlw	5
  1689  00093E  5C05               	subwf	_i^0,w,c
  1690  000940  A0D8               	btfss	status,0,c
  1691  000942  EFA5  F004         	goto	u2641
  1692  000946  EFA7  F004         	goto	u2640
  1693  00094A                     u2641:
  1694  00094A  EFA9  F004         	goto	l3848
  1695  00094E                     u2640:
  1696  00094E  EFB6  F004         	goto	l225
  1697  000952                     l3848:
  1698                           
  1699                           ;main.c: 432:                                         Write1USART(Serial_Buffer_Out[i]);
  1700  000952  0E60               	movlw	low _Serial_Buffer_Out
  1701  000954  2405               	addwf	_i^0,w,c
  1702  000956  6ED9               	movwf	fsr2l,c
  1703  000958  0E00               	movlw	high _Serial_Buffer_Out
  1704  00095A  2006               	addwfc	(_i+1)^0,w,c
  1705  00095C  6EDA               	movwf	fsr2h,c
  1706  00095E  50DF               	movf	indf2,w,c
  1707  000960  EC90  F00F         	call	_Write1USART
  1708  000964                     
  1709                           ;main.c: 433:                                     }
  1710  000964  4A05               	infsnz	_i^0,f,c
  1711  000966  2A06               	incf	(_i+1)^0,f,c
  1712  000968  EF9C  F004         	goto	l3844
  1713  00096C                     l225:
  1714                           
  1715                           ;main.c: 434:                                     INTCONbits.GIE = 1;
  1716  00096C  8EF2               	bsf	242,7,c	;volatile
  1717  00096E                     l3854:
  1718                           
  1719                           ;main.c: 438:                             flush();
  1720  00096E  ECA8  F00E         	call	_flush	;wreg free
  1721                           
  1722                           ;main.c: 439:                             flushOut();
  1723  000972  ECC5  F00E         	call	_flushOut	;wreg free
  1724  000976                     
  1725                           ;main.c: 440:                             Stop = 0;
  1726  000976  0E00               	movlw	0
  1727  000978  6E27               	movwf	_Stop^0,c
  1728  00097A                     l3858:
  1729                           
  1730                           ;main.c: 441:                             Busy = 0;
  1731  00097A  0E00               	movlw	0
  1732  00097C  6E25               	movwf	_Busy^0,c
  1733                           
  1734                           ;main.c: 442:                             break;
  1735  00097E  EF50  F006         	goto	l3982
  1736  000982                     l3860:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;main.c: 447:                             if (Busy == 0) {
  1740  000982  5025               	movf	_Busy^0,w,c
  1741  000984  A4D8               	btfss	status,2,c
  1742  000986  EFC7  F004         	goto	u2651
  1743  00098A  EFC9  F004         	goto	u2650
  1744  00098E                     u2651:
  1745  00098E  EF50  F006         	goto	l3982
  1746  000992                     u2650:
  1747  000992                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 448:                                 Busy = 1;
  1750  000992  0E01               	movlw	1
  1751  000994  6E25               	movwf	_Busy^0,c
  1752  000996                     
  1753                           ; BSR set to: 0
  1754                           ;main.c: 452:                                 pause_Time = Serial_Buffer[2];
  1755  000996  C082  F021         	movff	_Serial_Buffer+2,_pause_Time	;volatile
  1756                           
  1757                           ;main.c: 453:                                 switch (pause_Time) {
  1758  00099A  EFF5  F004         	goto	l3880
  1759  00099E                     l3866:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;main.c: 456:                                         Motor_Pause_Time = 0;
  1763  00099E  0E00               	movlw	0
  1764  0009A0  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
  1765  0009A2  0E00               	movlw	0
  1766  0009A4  6E0D               	movwf	_Motor_Pause_Time^0,c
  1767                           
  1768                           ;main.c: 457:                                         pause_Time = 0x30;
  1769  0009A6  0E30               	movlw	48
  1770  0009A8  6E21               	movwf	_pause_Time^0,c	;volatile
  1771                           
  1772                           ;main.c: 458:                                         break;
  1773  0009AA  EF1A  F005         	goto	l232
  1774  0009AE                     l3868:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 461:                                         Motor_Pause_Time = 1000;
  1778  0009AE  0E03               	movlw	3
  1779  0009B0  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
  1780  0009B2  0EE8               	movlw	232
  1781  0009B4  6E0D               	movwf	_Motor_Pause_Time^0,c
  1782                           
  1783                           ;main.c: 462:                                         break;
  1784  0009B6  EF1A  F005         	goto	l232
  1785  0009BA                     l3870:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 465:                                         Motor_Pause_Time = 2000;
  1789  0009BA  0E07               	movlw	7
  1790  0009BC  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
  1791  0009BE  0ED0               	movlw	208
  1792  0009C0  6E0D               	movwf	_Motor_Pause_Time^0,c
  1793                           
  1794                           ;main.c: 466:                                         break;
  1795  0009C2  EF1A  F005         	goto	l232
  1796  0009C6                     l3872:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;main.c: 469:                                         Motor_Pause_Time = 3000;
  1800  0009C6  0E0B               	movlw	11
  1801  0009C8  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
  1802  0009CA  0EB8               	movlw	184
  1803  0009CC  6E0D               	movwf	_Motor_Pause_Time^0,c
  1804                           
  1805                           ;main.c: 470:                                         break;
  1806  0009CE  EF1A  F005         	goto	l232
  1807  0009D2                     l3874:
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;main.c: 473:                                         Motor_Pause_Time = 4000;
  1811  0009D2  0E0F               	movlw	15
  1812  0009D4  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
  1813  0009D6  0EA0               	movlw	160
  1814  0009D8  6E0D               	movwf	_Motor_Pause_Time^0,c
  1815                           
  1816                           ;main.c: 474:                                         break;
  1817  0009DA  EF1A  F005         	goto	l232
  1818  0009DE                     l3876:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;main.c: 477:                                         Motor_Pause_Time = 5000;
  1822  0009DE  0E13               	movlw	19
  1823  0009E0  6E0E               	movwf	(_Motor_Pause_Time+1)^0,c
  1824  0009E2  0E88               	movlw	136
  1825  0009E4  6E0D               	movwf	_Motor_Pause_Time^0,c
  1826                           
  1827                           ;main.c: 478:                                         break;
  1828  0009E6  EF1A  F005         	goto	l232
  1829  0009EA                     l3880:
  1830                           
  1831                           ; BSR set to: 0
  1832  0009EA  5021               	movf	_pause_Time^0,w,c	;volatile
  1833  0009EC  6E44               	movwf	??_main^0,c
  1834  0009EE  6A45               	clrf	(??_main+1)^0,c
  1835                           
  1836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1837                           ; Switch size 1, requested type "simple"
  1838                           ; Number of cases is 1, Range of values is 0 to 0
  1839                           ; switch strategies available:
  1840                           ; Name         Instructions Cycles
  1841                           ; simple_byte            4     3 (average)
  1842                           ;	Chosen strategy is simple_byte
  1843  0009F0  5045               	movf	(??_main+1)^0,w,c
  1844  0009F2  0A00               	xorlw	0	; case 0
  1845  0009F4  B4D8               	btfsc	status,2,c
  1846  0009F6  EFFF  F004         	goto	l4446
  1847  0009FA  EFCF  F004         	goto	l3866
  1848  0009FE                     l4446:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ; Switch size 1, requested type "simple"
  1852                           ; Number of cases is 6, Range of values is 48 to 53
  1853                           ; switch strategies available:
  1854                           ; Name         Instructions Cycles
  1855                           ; simple_byte           19    10 (average)
  1856                           ;	Chosen strategy is simple_byte
  1857  0009FE  5044               	movf	??_main^0,w,c
  1858  000A00  0A30               	xorlw	48	; case 48
  1859  000A02  B4D8               	btfsc	status,2,c
  1860  000A04  EFCF  F004         	goto	l3866
  1861  000A08  0A01               	xorlw	1	; case 49
  1862  000A0A  B4D8               	btfsc	status,2,c
  1863  000A0C  EFD7  F004         	goto	l3868
  1864  000A10  0A03               	xorlw	3	; case 50
  1865  000A12  B4D8               	btfsc	status,2,c
  1866  000A14  EFDD  F004         	goto	l3870
  1867  000A18  0A01               	xorlw	1	; case 51
  1868  000A1A  B4D8               	btfsc	status,2,c
  1869  000A1C  EFE3  F004         	goto	l3872
  1870  000A20  0A07               	xorlw	7	; case 52
  1871  000A22  B4D8               	btfsc	status,2,c
  1872  000A24  EFE9  F004         	goto	l3874
  1873  000A28  0A01               	xorlw	1	; case 53
  1874  000A2A  B4D8               	btfsc	status,2,c
  1875  000A2C  EFEF  F004         	goto	l3876
  1876  000A30  EFCF  F004         	goto	l3866
  1877  000A34                     l232:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 483:                                 INTCONbits.GIE = 0;
  1881  000A34  9EF2               	bcf	242,7,c	;volatile
  1882  000A36                     
  1883                           ; BSR set to: 0
  1884                           ;main.c: 484:                                 write_i2c(0x0060, pause_Time);
  1885  000A36  0E60               	movlw	96
  1886  000A38  6E3E               	movwf	write_i2c@address^0,c
  1887  000A3A  0E00               	movlw	0
  1888  000A3C  6E3F               	movwf	(write_i2c@address+1)^0,c
  1889  000A3E  0E00               	movlw	0
  1890  000A40  6E40               	movwf	(write_i2c@address+2)^0,c
  1891  000A42  0E00               	movlw	0
  1892  000A44  6E41               	movwf	(write_i2c@address+3)^0,c
  1893  000A46  C021  F042         	movff	_pause_Time,write_i2c@data	;volatile
  1894  000A4A  6A43               	clrf	(write_i2c@data+1)^0,c
  1895  000A4C  EC23  F00E         	call	_write_i2c	;wreg free
  1896  000A50                     
  1897                           ;main.c: 485:                                 INTCONbits.GIE = 1;
  1898  000A50  8EF2               	bsf	242,7,c	;volatile
  1899  000A52                     
  1900                           ;main.c: 487:                                 flush();
  1901  000A52  ECA8  F00E         	call	_flush	;wreg free
  1902  000A56  EFBD  F004         	goto	l3858
  1903  000A5A                     l3890:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 495:                             if (Busy == 0) {
  1907  000A5A  5025               	movf	_Busy^0,w,c
  1908  000A5C  A4D8               	btfss	status,2,c
  1909  000A5E  EF33  F005         	goto	u2661
  1910  000A62  EF35  F005         	goto	u2660
  1911  000A66                     u2661:
  1912  000A66  EF50  F006         	goto	l3982
  1913  000A6A                     u2660:
  1914  000A6A                     
  1915                           ; BSR set to: 0
  1916                           ;main.c: 496:                                 if (Serial_Buffer[2] == 0x00) {
  1917  000A6A  5182               	movf	(_Serial_Buffer+2)& (0+255),w,b
  1918  000A6C  A4D8               	btfss	status,2,c
  1919  000A6E  EF3B  F005         	goto	u2671
  1920  000A72  EF3D  F005         	goto	u2670
  1921  000A76                     u2671:
  1922  000A76  EFAA  F005         	goto	l3932
  1923  000A7A                     u2670:
  1924  000A7A                     
  1925                           ; BSR set to: 0
  1926                           ;main.c: 497:                                     Busy = 1;
  1927  000A7A  0E01               	movlw	1
  1928  000A7C  6E25               	movwf	_Busy^0,c
  1929  000A7E                     
  1930                           ; BSR set to: 0
  1931                           ;main.c: 499:                                     INTCONbits.GIE = 0;
  1932  000A7E  9EF2               	bcf	242,7,c	;volatile
  1933  000A80                     
  1934                           ; BSR set to: 0
  1935                           ;main.c: 500:                                     pause_Time = read_i2c(0x0060);
  1936  000A80  0E60               	movlw	96
  1937  000A82  6E3E               	movwf	read_i2c@address^0,c
  1938  000A84  0E00               	movlw	0
  1939  000A86  6E3F               	movwf	(read_i2c@address+1)^0,c
  1940  000A88  0E00               	movlw	0
  1941  000A8A  6E40               	movwf	(read_i2c@address+2)^0,c
  1942  000A8C  0E00               	movlw	0
  1943  000A8E  6E41               	movwf	(read_i2c@address+3)^0,c
  1944  000A90  EC9B  F00D         	call	_read_i2c	;wreg free
  1945  000A94  503E               	movf	?_read_i2c^0,w,c
  1946  000A96  6E21               	movwf	_pause_Time^0,c	;volatile
  1947  000A98                     
  1948                           ;main.c: 501:                                     vib_Time = read_i2c(0x0040);
  1949  000A98  0E40               	movlw	64
  1950  000A9A  6E3E               	movwf	read_i2c@address^0,c
  1951  000A9C  0E00               	movlw	0
  1952  000A9E  6E3F               	movwf	(read_i2c@address+1)^0,c
  1953  000AA0  0E00               	movlw	0
  1954  000AA2  6E40               	movwf	(read_i2c@address+2)^0,c
  1955  000AA4  0E00               	movlw	0
  1956  000AA6  6E41               	movwf	(read_i2c@address+3)^0,c
  1957  000AA8  EC9B  F00D         	call	_read_i2c	;wreg free
  1958  000AAC  503E               	movf	?_read_i2c^0,w,c
  1959  000AAE  6E20               	movwf	_vib_Time^0,c	;volatile
  1960  000AB0                     
  1961                           ;main.c: 502:                                     Motor_Speed = read_i2c(0x0030);
  1962  000AB0  0E30               	movlw	48
  1963  000AB2  6E3E               	movwf	read_i2c@address^0,c
  1964  000AB4  0E00               	movlw	0
  1965  000AB6  6E3F               	movwf	(read_i2c@address+1)^0,c
  1966  000AB8  0E00               	movlw	0
  1967  000ABA  6E40               	movwf	(read_i2c@address+2)^0,c
  1968  000ABC  0E00               	movlw	0
  1969  000ABE  6E41               	movwf	(read_i2c@address+3)^0,c
  1970  000AC0  EC9B  F00D         	call	_read_i2c	;wreg free
  1971  000AC4  C03E  F013         	movff	?_read_i2c,_Motor_Speed
  1972  000AC8  C03F  F014         	movff	?_read_i2c+1,_Motor_Speed+1
  1973  000ACC                     
  1974                           ;main.c: 503:                                     delay_motor_stop_time = read_i2c(0x005
      +                          0);
  1975  000ACC  0E50               	movlw	80
  1976  000ACE  6E3E               	movwf	read_i2c@address^0,c
  1977  000AD0  0E00               	movlw	0
  1978  000AD2  6E3F               	movwf	(read_i2c@address+1)^0,c
  1979  000AD4  0E00               	movlw	0
  1980  000AD6  6E40               	movwf	(read_i2c@address+2)^0,c
  1981  000AD8  0E00               	movlw	0
  1982  000ADA  6E41               	movwf	(read_i2c@address+3)^0,c
  1983  000ADC  EC9B  F00D         	call	_read_i2c	;wreg free
  1984  000AE0  503E               	movf	?_read_i2c^0,w,c
  1985  000AE2  6E1F               	movwf	_delay_motor_stop_time^0,c	;volatile
  1986  000AE4                     
  1987                           ;main.c: 504:                                     INTCONbits.GIE = 1;
  1988  000AE4  8EF2               	bsf	242,7,c	;volatile
  1989                           
  1990                           ;main.c: 506:                                     Serial_Buffer_Out[0] = 0x51;
  1991  000AE6  0E51               	movlw	81
  1992  000AE8  0100               	movlb	0	; () banked
  1993  000AEA  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1994  000AEC                     
  1995                           ; BSR set to: 0
  1996                           ;main.c: 507:                                     Serial_Buffer_Out[1] = pause_Time;
  1997  000AEC  C021  F061         	movff	_pause_Time,_Serial_Buffer_Out+1	;volatile
  1998  000AF0                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 508:                                     Serial_Buffer_Out[2] = Motor_Speed;
  2001  000AF0  C013  F062         	movff	_Motor_Speed,_Serial_Buffer_Out+2
  2002  000AF4                     
  2003                           ; BSR set to: 0
  2004                           ;main.c: 509:                                     Serial_Buffer_Out[3] = vib_Time;
  2005  000AF4  C020  F063         	movff	_vib_Time,_Serial_Buffer_Out+3	;volatile
  2006  000AF8                     
  2007                           ; BSR set to: 0
  2008                           ;main.c: 510:                                     Serial_Buffer_Out[4] = delay_motor_sto
      +                          p_time;
  2009  000AF8  C01F  F064         	movff	_delay_motor_stop_time,_Serial_Buffer_Out+4	;volatile
  2010  000AFC                     
  2011                           ; BSR set to: 0
  2012                           ;main.c: 512:                                     _delay((unsigned long)((100)*(8000000/
      +                          4000.0)));
  2013  000AFC  0E02               	movlw	2
  2014  000AFE  6E45               	movwf	(??_main+1)^0,c
  2015  000B00  0E04               	movlw	4
  2016  000B02  6E44               	movwf	??_main^0,c
  2017  000B04  0EBA               	movlw	186
  2018  000B06                     u2937:
  2019  000B06  2EE8               	decfsz	wreg,f,c
  2020  000B08  D7FE               	bra	u2937
  2021  000B0A  2E44               	decfsz	??_main^0,f,c
  2022  000B0C  D7FC               	bra	u2937
  2023  000B0E  2E45               	decfsz	(??_main+1)^0,f,c
  2024  000B10  D7FA               	bra	u2937
  2025  000B12  D000               	nop2	
  2026  000B14                     
  2027                           ;main.c: 514:                                     INTCONbits.GIE = 0;
  2028  000B14  9EF2               	bcf	242,7,c	;volatile
  2029  000B16                     
  2030                           ;main.c: 515:                                     for (i = 0; i < 5; i++) {
  2031  000B16  0E00               	movlw	0
  2032  000B18  6E06               	movwf	(_i+1)^0,c
  2033  000B1A  0E00               	movlw	0
  2034  000B1C  6E05               	movwf	_i^0,c
  2035  000B1E                     l3922:
  2036  000B1E  5006               	movf	(_i+1)^0,w,c
  2037  000B20  E109               	bnz	u2680
  2038  000B22  0E05               	movlw	5
  2039  000B24  5C05               	subwf	_i^0,w,c
  2040  000B26  A0D8               	btfss	status,0,c
  2041  000B28  EF98  F005         	goto	u2681
  2042  000B2C  EF9A  F005         	goto	u2680
  2043  000B30                     u2681:
  2044  000B30  EF9C  F005         	goto	l3926
  2045  000B34                     u2680:
  2046  000B34  EFA9  F005         	goto	l242
  2047  000B38                     l3926:
  2048                           
  2049                           ;main.c: 516:                                         Write1USART(Serial_Buffer_Out[i]);
  2050  000B38  0E60               	movlw	low _Serial_Buffer_Out
  2051  000B3A  2405               	addwf	_i^0,w,c
  2052  000B3C  6ED9               	movwf	fsr2l,c
  2053  000B3E  0E00               	movlw	high _Serial_Buffer_Out
  2054  000B40  2006               	addwfc	(_i+1)^0,w,c
  2055  000B42  6EDA               	movwf	fsr2h,c
  2056  000B44  50DF               	movf	indf2,w,c
  2057  000B46  EC90  F00F         	call	_Write1USART
  2058  000B4A                     
  2059                           ;main.c: 517:                                     }
  2060  000B4A  4A05               	infsnz	_i^0,f,c
  2061  000B4C  2A06               	incf	(_i+1)^0,f,c
  2062  000B4E  EF8F  F005         	goto	l3922
  2063  000B52                     l242:
  2064                           
  2065                           ;main.c: 518:                                     INTCONbits.GIE = 1;
  2066  000B52  8EF2               	bsf	242,7,c	;volatile
  2067  000B54                     l3932:
  2068                           
  2069                           ;main.c: 520:                                 flushOut();
  2070  000B54  ECC5  F00E         	call	_flushOut	;wreg free
  2071  000B58  EFBD  F004         	goto	l3858
  2072  000B5C                     l3936:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 557:                             if (Busy == 0) {
  2076  000B5C  5025               	movf	_Busy^0,w,c
  2077  000B5E  A4D8               	btfss	status,2,c
  2078  000B60  EFB4  F005         	goto	u2691
  2079  000B64  EFB6  F005         	goto	u2690
  2080  000B68                     u2691:
  2081  000B68  EF0E  F006         	goto	l3962
  2082  000B6C                     u2690:
  2083  000B6C                     
  2084                           ; BSR set to: 0
  2085                           ;main.c: 558:                                 Busy = 1;
  2086  000B6C  0E01               	movlw	1
  2087  000B6E  6E25               	movwf	_Busy^0,c
  2088  000B70                     
  2089                           ; BSR set to: 0
  2090                           ;main.c: 559:                                 vib_Time = Serial_Buffer[2];
  2091  000B70  C082  F020         	movff	_Serial_Buffer+2,_vib_Time	;volatile
  2092                           
  2093                           ;main.c: 561:                                 switch (vib_Time) {
  2094  000B74  EFDC  F005         	goto	l3954
  2095  000B78                     l3942:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;main.c: 563:                                         Vmotor_Time = 1000;
  2099  000B78  0E03               	movlw	3
  2100  000B7A  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  2101  000B7C  0EE8               	movlw	232
  2102  000B7E  6E4E               	movwf	_Vmotor_Time^0,c
  2103                           
  2104                           ;main.c: 564:                                         break;
  2105  000B80  EFFD  F005         	goto	l247
  2106  000B84                     l3944:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 568:                                         Vmotor_Time = 2000;
  2110  000B84  0E07               	movlw	7
  2111  000B86  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  2112  000B88  0ED0               	movlw	208
  2113  000B8A  6E4E               	movwf	_Vmotor_Time^0,c
  2114                           
  2115                           ;main.c: 569:                                         vib_Time = 0x82;
  2116  000B8C  0E82               	movlw	130
  2117  000B8E  6E20               	movwf	_vib_Time^0,c	;volatile
  2118                           
  2119                           ;main.c: 570:                                         break;
  2120  000B90  EFFD  F005         	goto	l247
  2121  000B94                     l3946:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 573:                                         Vmotor_Time = 3000;
  2125  000B94  0E0B               	movlw	11
  2126  000B96  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  2127  000B98  0EB8               	movlw	184
  2128  000B9A  6E4E               	movwf	_Vmotor_Time^0,c
  2129                           
  2130                           ;main.c: 574:                                         break;
  2131  000B9C  EFFD  F005         	goto	l247
  2132  000BA0                     l3948:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 577:                                         Vmotor_Time = 4000;
  2136  000BA0  0E0F               	movlw	15
  2137  000BA2  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  2138  000BA4  0EA0               	movlw	160
  2139  000BA6  6E4E               	movwf	_Vmotor_Time^0,c
  2140                           
  2141                           ;main.c: 578:                                         break;
  2142  000BA8  EFFD  F005         	goto	l247
  2143  000BAC                     l3950:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;main.c: 581:                                         Vmotor_Time = 5000;
  2147  000BAC  0E13               	movlw	19
  2148  000BAE  6E4F               	movwf	(_Vmotor_Time+1)^0,c
  2149  000BB0  0E88               	movlw	136
  2150  000BB2  6E4E               	movwf	_Vmotor_Time^0,c
  2151                           
  2152                           ;main.c: 582:                                         break;
  2153  000BB4  EFFD  F005         	goto	l247
  2154  000BB8                     l3954:
  2155                           
  2156                           ; BSR set to: 0
  2157  000BB8  5020               	movf	_vib_Time^0,w,c	;volatile
  2158  000BBA  6E44               	movwf	??_main^0,c
  2159  000BBC  6A45               	clrf	(??_main+1)^0,c
  2160                           
  2161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2162                           ; Switch size 1, requested type "simple"
  2163                           ; Number of cases is 1, Range of values is 0 to 0
  2164                           ; switch strategies available:
  2165                           ; Name         Instructions Cycles
  2166                           ; simple_byte            4     3 (average)
  2167                           ;	Chosen strategy is simple_byte
  2168  000BBE  5045               	movf	(??_main+1)^0,w,c
  2169  000BC0  0A00               	xorlw	0	; case 0
  2170  000BC2  B4D8               	btfsc	status,2,c
  2171  000BC4  EFE6  F005         	goto	l4448
  2172  000BC8  EFC2  F005         	goto	l3944
  2173  000BCC                     l4448:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ; Switch size 1, requested type "simple"
  2177                           ; Number of cases is 5, Range of values is 129 to 133
  2178                           ; switch strategies available:
  2179                           ; Name         Instructions Cycles
  2180                           ; simple_byte           16     9 (average)
  2181                           ;	Chosen strategy is simple_byte
  2182  000BCC  5044               	movf	??_main^0,w,c
  2183  000BCE  0A81               	xorlw	129	; case 129
  2184  000BD0  B4D8               	btfsc	status,2,c
  2185  000BD2  EFBC  F005         	goto	l3942
  2186  000BD6  0A03               	xorlw	3	; case 130
  2187  000BD8  B4D8               	btfsc	status,2,c
  2188  000BDA  EFC2  F005         	goto	l3944
  2189  000BDE  0A01               	xorlw	1	; case 131
  2190  000BE0  B4D8               	btfsc	status,2,c
  2191  000BE2  EFCA  F005         	goto	l3946
  2192  000BE6  0A07               	xorlw	7	; case 132
  2193  000BE8  B4D8               	btfsc	status,2,c
  2194  000BEA  EFD0  F005         	goto	l3948
  2195  000BEE  0A01               	xorlw	1	; case 133
  2196  000BF0  B4D8               	btfsc	status,2,c
  2197  000BF2  EFD6  F005         	goto	l3950
  2198  000BF6  EFC2  F005         	goto	l3944
  2199  000BFA                     l247:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;main.c: 584:                                 INTCONbits.GIE = 0;
  2203  000BFA  9EF2               	bcf	242,7,c	;volatile
  2204  000BFC                     
  2205                           ; BSR set to: 0
  2206                           ;main.c: 585:                                 write_i2c(0x0040, vib_Time);
  2207  000BFC  0E40               	movlw	64
  2208  000BFE  6E3E               	movwf	write_i2c@address^0,c
  2209  000C00  0E00               	movlw	0
  2210  000C02  6E3F               	movwf	(write_i2c@address+1)^0,c
  2211  000C04  0E00               	movlw	0
  2212  000C06  6E40               	movwf	(write_i2c@address+2)^0,c
  2213  000C08  0E00               	movlw	0
  2214  000C0A  6E41               	movwf	(write_i2c@address+3)^0,c
  2215  000C0C  C020  F042         	movff	_vib_Time,write_i2c@data	;volatile
  2216  000C10  6A43               	clrf	(write_i2c@data+1)^0,c
  2217  000C12  EC23  F00E         	call	_write_i2c	;wreg free
  2218  000C16                     
  2219                           ;main.c: 586:                                 INTCONbits.GIE = 1;
  2220  000C16  8EF2               	bsf	242,7,c	;volatile
  2221  000C18                     
  2222                           ;main.c: 588:                                 Busy = 0;
  2223  000C18  0E00               	movlw	0
  2224  000C1A  6E25               	movwf	_Busy^0,c
  2225  000C1C                     l3962:
  2226                           
  2227                           ;main.c: 593:                             if (Busy == 0) {
  2228  000C1C  5025               	movf	_Busy^0,w,c
  2229  000C1E  A4D8               	btfss	status,2,c
  2230  000C20  EF14  F006         	goto	u2701
  2231  000C24  EF16  F006         	goto	u2700
  2232  000C28                     u2701:
  2233  000C28  EF50  F006         	goto	l3982
  2234  000C2C                     u2700:
  2235  000C2C                     
  2236                           ;main.c: 594:                                 Busy = 1;
  2237  000C2C  0E01               	movlw	1
  2238  000C2E  6E25               	movwf	_Busy^0,c
  2239  000C30                     
  2240                           ;main.c: 595:                                 delay_motor_stop_time = Serial_Buffer[2];
  2241  000C30  C082  F01F         	movff	_Serial_Buffer+2,_delay_motor_stop_time	;volatile
  2242  000C34                     
  2243                           ;main.c: 596:                                 Motor_Stop_Delay_Time = delay_motor_stop_t
      +                          ime;
  2244  000C34  C01F  F011         	movff	_delay_motor_stop_time,_Motor_Stop_Delay_Time	;volatile
  2245  000C38  6A12               	clrf	(_Motor_Stop_Delay_Time+1)^0,c
  2246  000C3A                     
  2247                           ;main.c: 598:                                 INTCONbits.GIE = 0;
  2248  000C3A  9EF2               	bcf	242,7,c	;volatile
  2249  000C3C                     
  2250                           ;main.c: 599:                                 write_i2c(0x0050, delay_motor_stop_time);
  2251  000C3C  0E50               	movlw	80
  2252  000C3E  6E3E               	movwf	write_i2c@address^0,c
  2253  000C40  0E00               	movlw	0
  2254  000C42  6E3F               	movwf	(write_i2c@address+1)^0,c
  2255  000C44  0E00               	movlw	0
  2256  000C46  6E40               	movwf	(write_i2c@address+2)^0,c
  2257  000C48  0E00               	movlw	0
  2258  000C4A  6E41               	movwf	(write_i2c@address+3)^0,c
  2259  000C4C  C01F  F042         	movff	_delay_motor_stop_time,write_i2c@data	;volatile
  2260  000C50  6A43               	clrf	(write_i2c@data+1)^0,c
  2261  000C52  EC23  F00E         	call	_write_i2c	;wreg free
  2262  000C56                     
  2263                           ;main.c: 600:                                 INTCONbits.GIE = 1;
  2264  000C56  8EF2               	bsf	242,7,c	;volatile
  2265  000C58  EFBD  F004         	goto	l3858
  2266  000C5C                     l3980:
  2267  000C5C  0100               	movlb	0	; () banked
  2268  000C5E  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  2269  000C60  6E44               	movwf	??_main^0,c
  2270  000C62  6A45               	clrf	(??_main+1)^0,c
  2271                           
  2272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2273                           ; Switch size 1, requested type "simple"
  2274                           ; Number of cases is 1, Range of values is 0 to 0
  2275                           ; switch strategies available:
  2276                           ; Name         Instructions Cycles
  2277                           ; simple_byte            4     3 (average)
  2278                           ;	Chosen strategy is simple_byte
  2279  000C64  5045               	movf	(??_main+1)^0,w,c
  2280  000C66  0A00               	xorlw	0	; case 0
  2281  000C68  B4D8               	btfsc	status,2,c
  2282  000C6A  EF39  F006         	goto	l4450
  2283  000C6E  EF50  F006         	goto	l3982
  2284  000C72                     l4450:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ; Switch size 1, requested type "simple"
  2288                           ; Number of cases is 5, Range of values is 35 to 102
  2289                           ; switch strategies available:
  2290                           ; Name         Instructions Cycles
  2291                           ; simple_byte           16     9 (average)
  2292                           ;	Chosen strategy is simple_byte
  2293  000C72  5044               	movf	??_main^0,w,c
  2294  000C74  0A23               	xorlw	35	; case 35
  2295  000C76  B4D8               	btfsc	status,2,c
  2296  000C78  EFC1  F004         	goto	l3860
  2297  000C7C  0A67               	xorlw	103	; case 68
  2298  000C7E  B4D8               	btfsc	status,2,c
  2299  000C80  EF34  F004         	goto	l3814
  2300  000C84  0A15               	xorlw	21	; case 81
  2301  000C86  B4D8               	btfsc	status,2,c
  2302  000C88  EF2D  F005         	goto	l3890
  2303  000C8C  0A34               	xorlw	52	; case 101
  2304  000C8E  B4D8               	btfsc	status,2,c
  2305  000C90  EFAE  F005         	goto	l3936
  2306  000C94  0A03               	xorlw	3	; case 102
  2307  000C96  B4D8               	btfsc	status,2,c
  2308  000C98  EF0E  F006         	goto	l3962
  2309  000C9C  EF50  F006         	goto	l3982
  2310  000CA0                     l3982:
  2311                           
  2312                           ;main.c: 609:                     Serial_Flag = 0;
  2313  000CA0  0E00               	movlw	0
  2314  000CA2  6E29               	movwf	_Serial_Flag^0,c
  2315                           
  2316                           ;main.c: 610:                     Serial_GData = 0;
  2317  000CA4  0E00               	movlw	0
  2318  000CA6  6E28               	movwf	_Serial_GData^0,c
  2319                           
  2320                           ;main.c: 611:                     OpMode = MANUAL_MODE;
  2321  000CA8  0E00               	movlw	0
  2322  000CAA  6E22               	movwf	_OpMode^0,c	;volatile
  2323                           
  2324                           ;main.c: 612:                 } else {
  2325  000CAC  EF57  F003         	goto	l192
  2326  000CB0                     l3984:
  2327                           
  2328                           ;main.c: 613:                     OpMode = MANUAL_MODE;
  2329  000CB0  0E00               	movlw	0
  2330  000CB2  6E22               	movwf	_OpMode^0,c	;volatile
  2331  000CB4  EF57  F003         	goto	l192
  2332  000CB8                     l3986:
  2333  000CB8  5022               	movf	_OpMode^0,w,c	;volatile
  2334  000CBA  6E44               	movwf	??_main^0,c
  2335  000CBC  6A45               	clrf	(??_main+1)^0,c
  2336                           
  2337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 1, Range of values is 0 to 0
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            4     3 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344  000CBE  5045               	movf	(??_main+1)^0,w,c
  2345  000CC0  0A00               	xorlw	0	; case 0
  2346  000CC2  B4D8               	btfsc	status,2,c
  2347  000CC4  EF66  F006         	goto	l4452
  2348  000CC8  EF57  F003         	goto	l192
  2349  000CCC                     l4452:
  2350                           
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 2, Range of values is 0 to 2
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte            7     4 (average)
  2356                           ;	Chosen strategy is simple_byte
  2357  000CCC  5044               	movf	??_main^0,w,c
  2358  000CCE  0A00               	xorlw	0	; case 0
  2359  000CD0  B4D8               	btfsc	status,2,c
  2360  000CD2  EF64  F003         	goto	l194
  2361  000CD6  0A02               	xorlw	2	; case 2
  2362  000CD8  B4D8               	btfsc	status,2,c
  2363  000CDA  EF2A  F004         	goto	l3810
  2364  000CDE  EF57  F003         	goto	l192
  2365  000CE2  EF4F  F001         	goto	start
  2366  000CE6                     __end_of_main:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _read_i2c *****************
  2370 ;; Defined at:
  2371 ;;		line 120 in file "i2c.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  address         4   20[COMRAM] long 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  read_byte       2   24[COMRAM] int 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2   20[COMRAM] int 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;Total ram usage:        6 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    4
  2392 ;; This function calls:
  2393 ;;		___aldiv
  2394 ;;		_i2c_Address
  2395 ;;		_i2c_Read
  2396 ;;		_i2c_Restart
  2397 ;;		_i2c_Start
  2398 ;;		_i2c_Stop
  2399 ;;		_i2c_Write
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text1
  2406  001B36                     __ptext1:
  2407                           	callstack 0
  2408  001B36                     _read_i2c:
  2409                           	callstack 26
  2410  001B36                     
  2411                           ;i2c.c: 121:     int read_byte;;i2c.c: 124:     i2c_Start();
  2412  001B36  ECD5  F00F         	call	_i2c_Start	;wreg free
  2413                           
  2414                           ;i2c.c: 125:     i2c_Address(0xA0, 0);
  2415  001B3A  0E00               	movlw	0
  2416  001B3C  6E31               	movwf	i2c_Address@mode^0,c
  2417  001B3E  0EA0               	movlw	160
  2418  001B40  ECA6  F00F         	call	_i2c_Address
  2419                           
  2420                           ;i2c.c: 126:     i2c_Write((unsigned char) (address / 0x100));
  2421  001B44  C03E  F030         	movff	read_i2c@address,___aldiv@dividend
  2422  001B48  C03F  F031         	movff	read_i2c@address+1,___aldiv@dividend+1
  2423  001B4C  C040  F032         	movff	read_i2c@address+2,___aldiv@dividend+2
  2424  001B50  C041  F033         	movff	read_i2c@address+3,___aldiv@dividend+3
  2425  001B54  0E00               	movlw	0
  2426  001B56  6E34               	movwf	___aldiv@divisor^0,c
  2427  001B58  0E01               	movlw	1
  2428  001B5A  6E35               	movwf	(___aldiv@divisor+1)^0,c
  2429  001B5C  0E00               	movlw	0
  2430  001B5E  6E36               	movwf	(___aldiv@divisor+2)^0,c
  2431  001B60  0E00               	movlw	0
  2432  001B62  6E37               	movwf	(___aldiv@divisor+3)^0,c
  2433  001B64  EC68  F009         	call	___aldiv	;wreg free
  2434  001B68  5030               	movf	?___aldiv^0,w,c
  2435  001B6A  ECB7  F00F         	call	_i2c_Write
  2436                           
  2437                           ;i2c.c: 127:     i2c_Write((unsigned char) (address & 0xFF));
  2438  001B6E  503E               	movf	read_i2c@address^0,w,c
  2439  001B70  ECB7  F00F         	call	_i2c_Write
  2440                           
  2441                           ;i2c.c: 128:     i2c_Restart();
  2442  001B74  ECCD  F00F         	call	_i2c_Restart	;wreg free
  2443                           
  2444                           ;i2c.c: 129:     i2c_Address(0xA0, 1);
  2445  001B78  0E01               	movlw	1
  2446  001B7A  6E31               	movwf	i2c_Address@mode^0,c
  2447  001B7C  0EA0               	movlw	160
  2448  001B7E  ECA6  F00F         	call	_i2c_Address
  2449                           
  2450                           ;i2c.c: 130:     read_byte = i2c_Read(0);
  2451  001B82  0E00               	movlw	0
  2452  001B84  ECE2  F00E         	call	_i2c_Read
  2453  001B88  C031  F042         	movff	?_i2c_Read,read_i2c@read_byte
  2454  001B8C  C032  F043         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  2455                           
  2456                           ;i2c.c: 134:     i2c_Stop();
  2457  001B90  ECD1  F00F         	call	_i2c_Stop	;wreg free
  2458  001B94                     
  2459                           ;i2c.c: 135:     return (read_byte);
  2460  001B94  C042  F03E         	movff	read_i2c@read_byte,?_read_i2c
  2461  001B98  C043  F03F         	movff	read_i2c@read_byte+1,?_read_i2c+1
  2462  001B9C  0012               	return		;funcret
  2463  001B9E                     __end_of_read_i2c:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _i2c_Restart *****************
  2467 ;; Defined at:
  2468 ;;		line 56 in file "i2c.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    3
  2489 ;; This function calls:
  2490 ;;		_i2c_Wait
  2491 ;; This function is called by:
  2492 ;;		_read_i2c
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text2
  2497  001F9A                     __ptext2:
  2498                           	callstack 0
  2499  001F9A                     _i2c_Restart:
  2500                           	callstack 26
  2501  001F9A                     
  2502                           ;i2c.c: 57:     i2c_Wait();
  2503  001F9A  EC41  F00F         	call	_i2c_Wait	;wreg free
  2504  001F9E                     
  2505                           ;i2c.c: 58:     RSEN2 = 1;
  2506  001F9E  826B               	bsf	3947,1,c	;volatile
  2507  001FA0  0012               	return		;funcret
  2508  001FA2                     __end_of_i2c_Restart:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _i2c_Read *****************
  2512 ;; Defined at:
  2513 ;;		line 89 in file "i2c.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  ack             1    wreg     unsigned char 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  ack             1    9[COMRAM] unsigned char 
  2518 ;;  i2cReadData     1   10[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    7[COMRAM] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;Total ram usage:        4 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    3
  2535 ;; This function calls:
  2536 ;;		_i2c_Wait
  2537 ;; This function is called by:
  2538 ;;		_read_i2c
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text3
  2543  001DC4                     __ptext3:
  2544                           	callstack 0
  2545  001DC4                     _i2c_Read:
  2546                           	callstack 26
  2547                           
  2548                           ;incstack = 0
  2549                           ;i2c_Read@ack stored from wreg
  2550  001DC4  6E33               	movwf	i2c_Read@ack^0,c
  2551  001DC6                     
  2552                           ;i2c.c: 93:     unsigned char i2cReadData;;i2c.c: 95:     i2c_Wait();
  2553  001DC6  EC41  F00F         	call	_i2c_Wait	;wreg free
  2554  001DCA                     
  2555                           ;i2c.c: 96:     RCEN2 = 1;
  2556  001DCA  866B               	bsf	3947,3,c	;volatile
  2557                           
  2558                           ;i2c.c: 97:     i2c_Wait();
  2559  001DCC  EC41  F00F         	call	_i2c_Wait	;wreg free
  2560  001DD0                     
  2561                           ;i2c.c: 98:     i2cReadData = SSP2BUF;
  2562  001DD0  CF6F F034          	movff	3951,i2c_Read@i2cReadData	;volatile
  2563                           
  2564                           ;i2c.c: 99:     i2c_Wait();
  2565  001DD4  EC41  F00F         	call	_i2c_Wait	;wreg free
  2566  001DD8                     
  2567                           ;i2c.c: 100:     if (ack)
  2568  001DD8  5033               	movf	i2c_Read@ack^0,w,c
  2569  001DDA  B4D8               	btfsc	status,2,c
  2570  001DDC  EFF2  F00E         	goto	u1791
  2571  001DE0  EFF4  F00E         	goto	u1790
  2572  001DE4                     u1791:
  2573  001DE4  EFF7  F00E         	goto	l535
  2574  001DE8                     u1790:
  2575  001DE8                     
  2576                           ;i2c.c: 101:         ACKDT2 = 0;
  2577  001DE8  9A6B               	bcf	3947,5,c	;volatile
  2578  001DEA  EFF8  F00E         	goto	l536
  2579  001DEE                     l535:
  2580                           
  2581                           ;i2c.c: 103:         ACKDT2 = 1;
  2582  001DEE  8A6B               	bsf	3947,5,c	;volatile
  2583  001DF0                     l536:
  2584                           
  2585                           ;i2c.c: 104:     ACKEN2 = 1;
  2586  001DF0  886B               	bsf	3947,4,c	;volatile
  2587                           
  2588                           ;i2c.c: 106:     return ( i2cReadData);
  2589  001DF2  C034  F031         	movff	i2c_Read@i2cReadData,?_i2c_Read
  2590  001DF6  6A32               	clrf	(?_i2c_Read+1)^0,c
  2591  001DF8  0012               	return		;funcret
  2592  001DFA                     __end_of_i2c_Read:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _initUSART *****************
  2596 ;; Defined at:
  2597 ;;		line 20 in file "usart.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    2
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text4
  2626  001E5C                     __ptext4:
  2627                           	callstack 0
  2628  001E5C                     _initUSART:
  2629                           	callstack 28
  2630  001E5C                     
  2631                           ;usart.c: 22:     TRISCbits.TRISC6 = 0;
  2632  001E5C  9C94               	bcf	148,6,c	;volatile
  2633                           
  2634                           ;usart.c: 23:     TRISCbits.TRISC7 = 1;
  2635  001E5E  8E94               	bsf	148,7,c	;volatile
  2636                           
  2637                           ;usart.c: 24:     TXSTA1bits.SYNC = 0;
  2638  001E60  98AD               	bcf	173,4,c	;volatile
  2639                           
  2640                           ;usart.c: 25:     TXSTA1bits.TX9 = 0;
  2641  001E62  9CAD               	bcf	173,6,c	;volatile
  2642                           
  2643                           ;usart.c: 26:     TXSTA1bits.TXEN = 1;
  2644  001E64  8AAD               	bsf	173,5,c	;volatile
  2645                           
  2646                           ;usart.c: 27:     RCSTA1bits.RX9 = 0;
  2647  001E66  9CAC               	bcf	172,6,c	;volatile
  2648                           
  2649                           ;usart.c: 28:     RCSTA1bits.CREN = 1;
  2650  001E68  88AC               	bsf	172,4,c	;volatile
  2651                           
  2652                           ;usart.c: 29:     TXSTA1bits.CSRC = 0;
  2653  001E6A  9EAD               	bcf	173,7,c	;volatile
  2654                           
  2655                           ;usart.c: 30:     RCSTA1bits.ADDEN = 1;
  2656  001E6C  86AC               	bsf	172,3,c	;volatile
  2657                           
  2658                           ;usart.c: 31:     RCSTA1bits.SPEN = 1;
  2659  001E6E  8EAC               	bsf	172,7,c	;volatile
  2660                           
  2661                           ;usart.c: 34:     BAUDCON1bits.BRG16 = 0;
  2662  001E70  967E               	bcf	126,3,c	;volatile
  2663                           
  2664                           ;usart.c: 35:     TXSTA1bits.BRGH = 1;
  2665  001E72  84AD               	bsf	173,2,c	;volatile
  2666                           
  2667                           ;usart.c: 36:     PIE1bits.RC1IE = 1;
  2668  001E74  8A9D               	bsf	157,5,c	;volatile
  2669                           
  2670                           ;usart.c: 37:     PIE1bits.TX1IE = 0;
  2671  001E76  989D               	bcf	157,4,c	;volatile
  2672  001E78                     
  2673                           ;usart.c: 39:     SPBRG1 = 25;
  2674  001E78  0E19               	movlw	25
  2675  001E7A  6EB0               	movwf	176,c	;volatile
  2676                           
  2677                           ;usart.c: 40:     SPBRGH1 = 0;
  2678  001E7C  0E00               	movlw	0
  2679  001E7E  6E7F               	movwf	127,c	;volatile
  2680  001E80  0012               	return		;funcret
  2681  001E82                     __end_of_initUSART:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _initMotor *****************
  2685 ;; Defined at:
  2686 ;;		line 21 in file "MotorDriver.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text5
  2715  001F60                     __ptext5:
  2716                           	callstack 0
  2717  001F60                     _initMotor:
  2718                           	callstack 28
  2719  001F60                     
  2720                           ;MotorDriver.c: 22:     PR4 = 0xC7;
  2721  001F60  0EC7               	movlw	199
  2722  001F62  6E77               	movwf	119,c	;volatile
  2723  001F64                     
  2724                           ;MotorDriver.c: 23:     T3CONbits.T3CCP1 = 0;
  2725  001F64  9679               	bcf	121,3,c	;volatile
  2726  001F66                     
  2727                           ;MotorDriver.c: 24:     T3CONbits.T3CCP2 = 1;
  2728  001F66  8C79               	bsf	121,6,c	;volatile
  2729                           
  2730                           ;MotorDriver.c: 25:     T4CON = 0x00;
  2731  001F68  0E00               	movlw	0
  2732  001F6A  6E76               	movwf	118,c	;volatile
  2733  001F6C  0012               	return		;funcret
  2734  001F6E                     __end_of_initMotor:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _init *****************
  2738 ;; Defined at:
  2739 ;;		line 18 in file "IO.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    2
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text6
  2768  001AC4                     __ptext6:
  2769                           	callstack 0
  2770  001AC4                     _init:
  2771                           	callstack 28
  2772  001AC4                     
  2773                           ;IO.c: 19:     TRISA = 0xFB;
  2774  001AC4  0EFB               	movlw	251
  2775  001AC6  6E92               	movwf	146,c	;volatile
  2776  001AC8                     
  2777                           ;IO.c: 20:     TRISB = 0XFF;
  2778  001AC8  6893               	setf	147,c	;volatile
  2779                           
  2780                           ;IO.c: 21:     TRISC = 0X84;
  2781  001ACA  0E84               	movlw	132
  2782  001ACC  6E94               	movwf	148,c	;volatile
  2783                           
  2784                           ;IO.c: 22:     TRISD = 0XC0;
  2785  001ACE  0EC0               	movlw	192
  2786  001AD0  6E95               	movwf	149,c	;volatile
  2787                           
  2788                           ;IO.c: 23:     TRISE = 0X00;
  2789  001AD2  0E00               	movlw	0
  2790  001AD4  6E96               	movwf	150,c	;volatile
  2791                           
  2792                           ;IO.c: 24:     TRISF = 0X00;
  2793  001AD6  0E00               	movlw	0
  2794  001AD8  6E97               	movwf	151,c	;volatile
  2795                           
  2796                           ;IO.c: 25:     TRISG = 0X05;
  2797  001ADA  0E05               	movlw	5
  2798  001ADC  6E98               	movwf	152,c	;volatile
  2799  001ADE                     
  2800                           ;IO.c: 28:     ADCON0bits.VCFG1 = 0;
  2801  001ADE  9EC2               	bcf	194,7,c	;volatile
  2802  001AE0                     
  2803                           ;IO.c: 29:     ADCON0bits.VCFG0 = 0;
  2804  001AE0  9CC2               	bcf	194,6,c	;volatile
  2805  001AE2                     
  2806                           ;IO.c: 30:     ADCON0bits.ADON = 0;
  2807  001AE2  90C2               	bcf	194,0,c	;volatile
  2808  001AE4                     
  2809                           ;IO.c: 33:     ADCON1bits.ADFM = 1;
  2810  001AE4  8EC1               	bsf	193,7,c	;volatile
  2811  001AE6                     
  2812                           ;IO.c: 34:     ADCON1bits.ADCAL = 0;
  2813  001AE6  9CC1               	bcf	193,6,c	;volatile
  2814  001AE8                     
  2815                           ;IO.c: 35:     ADCON1bits.ACQT2 = 0;
  2816  001AE8  9AC1               	bcf	193,5,c	;volatile
  2817  001AEA                     
  2818                           ;IO.c: 36:     ADCON1bits.ACQT1 = 1;
  2819  001AEA  88C1               	bsf	193,4,c	;volatile
  2820  001AEC                     
  2821                           ;IO.c: 37:     ADCON1bits.ACQT0 = 0;
  2822  001AEC  96C1               	bcf	193,3,c	;volatile
  2823  001AEE                     
  2824                           ;IO.c: 38:     ADCON1bits.ADCS2 = 1;
  2825  001AEE  84C1               	bsf	193,2,c	;volatile
  2826  001AF0                     
  2827                           ;IO.c: 39:     ADCON1bits.ADCS1 = 0;
  2828  001AF0  92C1               	bcf	193,1,c	;volatile
  2829  001AF2                     
  2830                           ;IO.c: 40:     ADCON1bits.ADCS0 = 0;
  2831  001AF2  90C1               	bcf	193,0,c	;volatile
  2832  001AF4                     
  2833                           ;IO.c: 45:     WDTCONbits.ADSHR = 1;
  2834  001AF4  88C0               	bsf	192,4,c	;volatile
  2835  001AF6                     
  2836                           ;IO.c: 51:     ANCON0bits.PCFG0 = 0;
  2837  001AF6  90C1               	bcf	193,0,c	;volatile
  2838  001AF8                     
  2839                           ;IO.c: 52:     ANCON0bits.PCFG1 = 1;
  2840  001AF8  82C1               	bsf	193,1,c	;volatile
  2841  001AFA                     
  2842                           ;IO.c: 53:     ANCON0bits.PCFG2 = 1;
  2843  001AFA  84C1               	bsf	193,2,c	;volatile
  2844  001AFC                     
  2845                           ;IO.c: 54:     ANCON0bits.PCFG3 = 1;
  2846  001AFC  86C1               	bsf	193,3,c	;volatile
  2847  001AFE                     
  2848                           ;IO.c: 55:     ANCON0bits.PCFG4 = 1;
  2849  001AFE  88C1               	bsf	193,4,c	;volatile
  2850  001B00                     
  2851                           ;IO.c: 56:     ANCON0bits.PCFG7 = 1;
  2852  001B00  8EC1               	bsf	193,7,c	;volatile
  2853  001B02                     
  2854                           ;IO.c: 58:     WDTCONbits.ADSHR = 0;
  2855  001B02  98C0               	bcf	192,4,c	;volatile
  2856  001B04                     
  2857                           ;IO.c: 60:     INTCONbits.GIE = 1;
  2858  001B04  8EF2               	bsf	242,7,c	;volatile
  2859                           
  2860                           ;IO.c: 65:     OSCCONbits.SCS = 0b11;
  2861  001B06  0E03               	movlw	3
  2862  001B08  12D3               	iorwf	211,f,c	;volatile
  2863                           
  2864                           ;IO.c: 66:     OSCCONbits.IRCF = 0b111;
  2865  001B0A  0E70               	movlw	112
  2866  001B0C  12D3               	iorwf	211,f,c	;volatile
  2867                           
  2868                           ;IO.c: 68:     ADRES = 0;
  2869  001B0E  0E00               	movlw	0
  2870  001B10  6EC4               	movwf	196,c	;volatile
  2871  001B12  0E00               	movlw	0
  2872  001B14  6EC3               	movwf	195,c	;volatile
  2873  001B16                     
  2874                           ;IO.c: 71:     ADCON0bits.CHS0 = 0;
  2875  001B16  94C2               	bcf	194,2,c	;volatile
  2876  001B18                     
  2877                           ;IO.c: 72:     ADCON0bits.CHS1 = 0;
  2878  001B18  96C2               	bcf	194,3,c	;volatile
  2879  001B1A                     
  2880                           ;IO.c: 73:     ADCON0bits.CHS2 = 0;
  2881  001B1A  98C2               	bcf	194,4,c	;volatile
  2882  001B1C                     
  2883                           ;IO.c: 74:     ADCON0bits.CHS3 = 0;
  2884  001B1C  9AC2               	bcf	194,5,c	;volatile
  2885  001B1E                     
  2886                           ;IO.c: 75:     ADCON1bits.ADCAL = 1;
  2887  001B1E  8CC1               	bsf	193,6,c	;volatile
  2888  001B20                     
  2889                           ;IO.c: 76:     ADCON0bits.ADON = 1;
  2890  001B20  80C2               	bsf	194,0,c	;volatile
  2891  001B22                     
  2892                           ;IO.c: 78:     ADCON0bits.GO = 1;
  2893  001B22  82C2               	bsf	194,1,c	;volatile
  2894  001B24                     l606:
  2895                           
  2896                           ;IO.c: 79:     while (ADCON0bits.GO) {
  2897  001B24  B2C2               	btfsc	194,1,c	;volatile
  2898  001B26  EF97  F00D         	goto	u1801
  2899  001B2A  EF99  F00D         	goto	u1800
  2900  001B2E                     u1801:
  2901  001B2E  EF92  F00D         	goto	l606
  2902  001B32                     u1800:
  2903  001B32                     
  2904                           ;IO.c: 82:     ADCON1bits.ADCAL = 0;
  2905  001B32  9CC1               	bcf	193,6,c	;volatile
  2906  001B34  0012               	return		;funcret
  2907  001B36                     __end_of_init:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _i2c_Init *****************
  2911 ;; Defined at:
  2912 ;;		line 25 in file "i2c.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    2
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text7
  2941  001F0A                     __ptext7:
  2942                           	callstack 0
  2943  001F0A                     _i2c_Init:
  2944                           	callstack 28
  2945  001F0A                     
  2946                           ;i2c.c: 29:     TRISD5 = 1;
  2947  001F0A  8A95               	bsf	3989,5,c	;volatile
  2948                           
  2949                           ;i2c.c: 30:     TRISD6 = 1;
  2950  001F0C  8C95               	bsf	3989,6,c	;volatile
  2951  001F0E                     
  2952                           ;i2c.c: 32:     SSP2CON1 = 0b00101000;
  2953  001F0E  0E28               	movlw	40
  2954  001F10  6E6C               	movwf	108,c	;volatile
  2955                           
  2956                           ;i2c.c: 33:     SSP2CON2 = 0x00;
  2957  001F12  0E00               	movlw	0
  2958  001F14  6E6B               	movwf	107,c	;volatile
  2959                           
  2960                           ;i2c.c: 35:     SSP2ADD = 39;
  2961  001F16  0E27               	movlw	39
  2962  001F18  6E6E               	movwf	110,c	;volatile
  2963                           
  2964                           ;i2c.c: 37:     SSP2STAT = 0b11000000;
  2965  001F1A  0EC0               	movlw	192
  2966  001F1C  6E6D               	movwf	109,c	;volatile
  2967  001F1E  0012               	return		;funcret
  2968  001F20                     __end_of_i2c_Init:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function _flush *****************
  2972 ;; Defined at:
  2973 ;;		line 1008 in file "main.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  i               2    6[COMRAM] int 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;Total ram usage:        2 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text8
  3002  001D50                     __ptext8:
  3003                           	callstack 0
  3004  001D50                     _flush:
  3005                           	callstack 28
  3006  001D50                     
  3007                           ;main.c: 1009:     int i;;main.c: 1011:     for (i = 0; i < 16; i++) {
  3008  001D50  0E00               	movlw	0
  3009  001D52  6E31               	movwf	(flush@i+1)^0,c
  3010  001D54  0E00               	movlw	0
  3011  001D56  6E30               	movwf	flush@i^0,c
  3012  001D58                     l3572:
  3013                           
  3014                           ;main.c: 1012:         Serial_Buffer[i] = 0x00;
  3015  001D58  0E80               	movlw	low _Serial_Buffer
  3016  001D5A  2430               	addwf	flush@i^0,w,c
  3017  001D5C  6ED9               	movwf	fsr2l,c
  3018  001D5E  0E00               	movlw	high _Serial_Buffer
  3019  001D60  2031               	addwfc	(flush@i+1)^0,w,c
  3020  001D62  6EDA               	movwf	fsr2h,c
  3021  001D64  0E00               	movlw	0
  3022  001D66  6EDF               	movwf	indf2,c
  3023  001D68                     
  3024                           ;main.c: 1013:     }
  3025  001D68  4A30               	infsnz	flush@i^0,f,c
  3026  001D6A  2A31               	incf	(flush@i+1)^0,f,c
  3027  001D6C  BE31               	btfsc	(flush@i+1)^0,7,c
  3028  001D6E  EFC2  F00E         	goto	u2261
  3029  001D72  5031               	movf	(flush@i+1)^0,w,c
  3030  001D74  E109               	bnz	u2260
  3031  001D76  0E10               	movlw	16
  3032  001D78  5C30               	subwf	flush@i^0,w,c
  3033  001D7A  A0D8               	btfss	status,0,c
  3034  001D7C  EFC2  F00E         	goto	u2261
  3035  001D80  EFC4  F00E         	goto	u2260
  3036  001D84                     u2261:
  3037  001D84  EFAC  F00E         	goto	l3572
  3038  001D88                     u2260:
  3039  001D88  0012               	return		;funcret
  3040  001D8A                     __end_of_flush:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _WriteSTLED316SVibMode *****************
  3044 ;; Defined at:
  3045 ;;		line 244 in file "Display.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  v_mode          1    wreg     unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  v_mode          1   12[COMRAM] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;Total ram usage:        1 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    3
  3066 ;; This function calls:
  3067 ;;		_STLED316s_SPI_SendData
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text9
  3074  001BF8                     __ptext9:
  3075                           	callstack 0
  3076  001BF8                     _WriteSTLED316SVibMode:
  3077                           	callstack 27
  3078                           
  3079                           ;incstack = 0
  3080                           ;WriteSTLED316SVibMode@v_mode stored from wreg
  3081  001BF8  6E36               	movwf	WriteSTLED316SVibMode@v_mode^0,c
  3082  001BFA                     
  3083                           ;Display.c: 246:     LATCbits.LATC4 = 0;
  3084  001BFA  988B               	bcf	139,4,c	;volatile
  3085  001BFC                     
  3086                           ;Display.c: 248:     STLED316s_SPI_SendData(0x00);
  3087  001BFC  0E00               	movlw	0
  3088  001BFE  EC22  F00D         	call	_STLED316s_SPI_SendData
  3089  001C02                     
  3090                           ;Display.c: 251:     LATCbits.LATC4 = 1;
  3091  001C02  888B               	bsf	139,4,c	;volatile
  3092  001C04                     
  3093                           ;Display.c: 253:     LATCbits.LATC4 = 0;
  3094  001C04  988B               	bcf	139,4,c	;volatile
  3095                           
  3096                           ;Display.c: 255:     STLED316s_SPI_SendData(0x00);
  3097  001C06  0E00               	movlw	0
  3098  001C08  EC22  F00D         	call	_STLED316s_SPI_SendData
  3099  001C0C                     
  3100                           ;Display.c: 261:     if (v_mode == 1) {
  3101  001C0C  0436               	decf	WriteSTLED316SVibMode@v_mode^0,w,c
  3102  001C0E  A4D8               	btfss	status,2,c
  3103  001C10  EF0C  F00E         	goto	u1871
  3104  001C14  EF0E  F00E         	goto	u1870
  3105  001C18                     u1871:
  3106  001C18  EF16  F00E         	goto	l3324
  3107  001C1C                     u1870:
  3108  001C1C                     
  3109                           ;Display.c: 262:         STLED316s_SPI_SendData(0x00);
  3110  001C1C  0E00               	movlw	0
  3111  001C1E  EC22  F00D         	call	_STLED316s_SPI_SendData
  3112                           
  3113                           ;Display.c: 263:         STLED316s_SPI_SendData(0xBE);
  3114  001C22  0EBE               	movlw	190
  3115  001C24  EC22  F00D         	call	_STLED316s_SPI_SendData
  3116                           
  3117                           ;Display.c: 264:     } else {
  3118  001C28  EF1C  F00E         	goto	l3326
  3119  001C2C                     l3324:
  3120                           
  3121                           ;Display.c: 265:         STLED316s_SPI_SendData(0x00);
  3122  001C2C  0E00               	movlw	0
  3123  001C2E  EC22  F00D         	call	_STLED316s_SPI_SendData
  3124                           
  3125                           ;Display.c: 266:         STLED316s_SPI_SendData(0x3E);
  3126  001C32  0E3E               	movlw	62
  3127  001C34  EC22  F00D         	call	_STLED316s_SPI_SendData
  3128  001C38                     l3326:
  3129                           
  3130                           ;Display.c: 269:     LATCbits.LATC4 = 1;
  3131  001C38  888B               	bsf	139,4,c	;volatile
  3132  001C3A                     
  3133                           ;Display.c: 271:     LATCbits.LATC4 = 0;
  3134  001C3A  988B               	bcf	139,4,c	;volatile
  3135                           
  3136                           ;Display.c: 273:     STLED316s_SPI_SendData(0x0D);
  3137  001C3C  0E0D               	movlw	13
  3138  001C3E  EC22  F00D         	call	_STLED316s_SPI_SendData
  3139  001C42                     
  3140                           ;Display.c: 275:     LATCbits.LATC4 = 1;
  3141  001C42  888B               	bsf	139,4,c	;volatile
  3142  001C44  0012               	return		;funcret
  3143  001C46                     __end_of_WriteSTLED316SVibMode:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _ToggleVIB_Mode *****************
  3147 ;; Defined at:
  3148 ;;		line 789 in file "main.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    5
  3169 ;; This function calls:
  3170 ;;		_write_i2c
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text10
  3177  001D14                     __ptext10:
  3178                           	callstack 0
  3179  001D14                     _ToggleVIB_Mode:
  3180                           	callstack 25
  3181  001D14                     
  3182                           ;main.c: 790:     if (vibration_mode)
  3183  001D14  5024               	movf	_vibration_mode^0,w,c
  3184  001D16  B4D8               	btfsc	status,2,c
  3185  001D18  EF90  F00E         	goto	u1861
  3186  001D1C  EF92  F00E         	goto	u1860
  3187  001D20                     u1861:
  3188  001D20  EF96  F00E         	goto	l3304
  3189  001D24                     u1860:
  3190  001D24                     
  3191                           ;main.c: 791:         vibration_mode = 0;
  3192  001D24  0E00               	movlw	0
  3193  001D26  6E24               	movwf	_vibration_mode^0,c
  3194  001D28  EF98  F00E         	goto	l3306
  3195  001D2C                     l3304:
  3196                           
  3197                           ;main.c: 793:         vibration_mode = 1;
  3198  001D2C  0E01               	movlw	1
  3199  001D2E  6E24               	movwf	_vibration_mode^0,c
  3200  001D30                     l3306:
  3201                           
  3202                           ;main.c: 800:     INTCONbits.GIE = 0;
  3203  001D30  9EF2               	bcf	242,7,c	;volatile
  3204  001D32                     
  3205                           ;main.c: 801:     write_i2c(0x0010, vibration_mode);
  3206  001D32  0E10               	movlw	16
  3207  001D34  6E3E               	movwf	write_i2c@address^0,c
  3208  001D36  0E00               	movlw	0
  3209  001D38  6E3F               	movwf	(write_i2c@address+1)^0,c
  3210  001D3A  0E00               	movlw	0
  3211  001D3C  6E40               	movwf	(write_i2c@address+2)^0,c
  3212  001D3E  0E00               	movlw	0
  3213  001D40  6E41               	movwf	(write_i2c@address+3)^0,c
  3214  001D42  C024  F042         	movff	_vibration_mode,write_i2c@data
  3215  001D46  6A43               	clrf	(write_i2c@data+1)^0,c
  3216  001D48  EC23  F00E         	call	_write_i2c	;wreg free
  3217  001D4C                     
  3218                           ;main.c: 802:     INTCONbits.GIE = 1;
  3219  001D4C  8EF2               	bsf	242,7,c	;volatile
  3220  001D4E  0012               	return		;funcret
  3221  001D50                     __end_of_ToggleVIB_Mode:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _write_i2c *****************
  3225 ;; Defined at:
  3226 ;;		line 109 in file "i2c.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  address         4   20[COMRAM] long 
  3229 ;;  data            2   24[COMRAM] int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3241 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;Total ram usage:        6 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    4
  3248 ;; This function calls:
  3249 ;;		___aldiv
  3250 ;;		_i2c_Address
  3251 ;;		_i2c_Start
  3252 ;;		_i2c_Stop
  3253 ;;		_i2c_Write
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;;		_ToggleVIB_Mode
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text11
  3261  001C46                     __ptext11:
  3262                           	callstack 0
  3263  001C46                     _write_i2c:
  3264                           	callstack 26
  3265  001C46                     
  3266                           ;i2c.c: 110:     i2c_Start();
  3267  001C46  ECD5  F00F         	call	_i2c_Start	;wreg free
  3268                           
  3269                           ;i2c.c: 111:     i2c_Address(0xA0, 0);
  3270  001C4A  0E00               	movlw	0
  3271  001C4C  6E31               	movwf	i2c_Address@mode^0,c
  3272  001C4E  0EA0               	movlw	160
  3273  001C50  ECA6  F00F         	call	_i2c_Address
  3274                           
  3275                           ;i2c.c: 112:     i2c_Write((unsigned char) (address / 0x100));
  3276  001C54  C03E  F030         	movff	write_i2c@address,___aldiv@dividend
  3277  001C58  C03F  F031         	movff	write_i2c@address+1,___aldiv@dividend+1
  3278  001C5C  C040  F032         	movff	write_i2c@address+2,___aldiv@dividend+2
  3279  001C60  C041  F033         	movff	write_i2c@address+3,___aldiv@dividend+3
  3280  001C64  0E00               	movlw	0
  3281  001C66  6E34               	movwf	___aldiv@divisor^0,c
  3282  001C68  0E01               	movlw	1
  3283  001C6A  6E35               	movwf	(___aldiv@divisor+1)^0,c
  3284  001C6C  0E00               	movlw	0
  3285  001C6E  6E36               	movwf	(___aldiv@divisor+2)^0,c
  3286  001C70  0E00               	movlw	0
  3287  001C72  6E37               	movwf	(___aldiv@divisor+3)^0,c
  3288  001C74  EC68  F009         	call	___aldiv	;wreg free
  3289  001C78  5030               	movf	?___aldiv^0,w,c
  3290  001C7A  ECB7  F00F         	call	_i2c_Write
  3291                           
  3292                           ;i2c.c: 113:     i2c_Write((unsigned char) (address & 0xFF));
  3293  001C7E  503E               	movf	write_i2c@address^0,w,c
  3294  001C80  ECB7  F00F         	call	_i2c_Write
  3295                           
  3296                           ;i2c.c: 114:     i2c_Write((unsigned char) data);
  3297  001C84  5042               	movf	write_i2c@data^0,w,c
  3298  001C86  ECB7  F00F         	call	_i2c_Write
  3299                           
  3300                           ;i2c.c: 115:     i2c_Stop();
  3301  001C8A  ECD1  F00F         	call	_i2c_Stop	;wreg free
  3302  001C8E  0012               	return		;funcret
  3303  001C90                     __end_of_write_i2c:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _i2c_Write *****************
  3307 ;; Defined at:
  3308 ;;		line 70 in file "i2c.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  data            1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  data            1    7[COMRAM] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        1 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    3
  3329 ;; This function calls:
  3330 ;;		_i2c_Wait
  3331 ;; This function is called by:
  3332 ;;		_write_i2c
  3333 ;;		_read_i2c
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text12
  3338  001F6E                     __ptext12:
  3339                           	callstack 0
  3340  001F6E                     _i2c_Write:
  3341                           	callstack 26
  3342                           
  3343                           ;incstack = 0
  3344                           ;i2c_Write@data stored from wreg
  3345  001F6E  6E31               	movwf	i2c_Write@data^0,c
  3346  001F70                     
  3347                           ;i2c.c: 71:     i2c_Wait();
  3348  001F70  EC41  F00F         	call	_i2c_Wait	;wreg free
  3349  001F74                     
  3350                           ;i2c.c: 72:     SSP2BUF = data;
  3351  001F74  C031  FF6F         	movff	i2c_Write@data,3951	;volatile
  3352  001F78  0012               	return		;funcret
  3353  001F7A                     __end_of_i2c_Write:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _i2c_Stop *****************
  3357 ;; Defined at:
  3358 ;;		line 63 in file "i2c.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    3
  3379 ;; This function calls:
  3380 ;;		_i2c_Wait
  3381 ;; This function is called by:
  3382 ;;		_write_i2c
  3383 ;;		_read_i2c
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text13
  3388  001FA2                     __ptext13:
  3389                           	callstack 0
  3390  001FA2                     _i2c_Stop:
  3391                           	callstack 26
  3392  001FA2                     
  3393                           ;i2c.c: 64:     i2c_Wait();
  3394  001FA2  EC41  F00F         	call	_i2c_Wait	;wreg free
  3395  001FA6                     
  3396                           ;i2c.c: 65:     PEN2 = 1;
  3397  001FA6  846B               	bsf	3947,2,c	;volatile
  3398  001FA8  0012               	return		;funcret
  3399  001FAA                     __end_of_i2c_Stop:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _i2c_Start *****************
  3403 ;; Defined at:
  3404 ;;		line 49 in file "i2c.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    3
  3425 ;; This function calls:
  3426 ;;		_i2c_Wait
  3427 ;; This function is called by:
  3428 ;;		_write_i2c
  3429 ;;		_read_i2c
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text14
  3434  001FAA                     __ptext14:
  3435                           	callstack 0
  3436  001FAA                     _i2c_Start:
  3437                           	callstack 26
  3438  001FAA                     
  3439                           ;i2c.c: 50:     i2c_Wait();
  3440  001FAA  EC41  F00F         	call	_i2c_Wait	;wreg free
  3441  001FAE                     
  3442                           ;i2c.c: 51:     SEN2 = 1;
  3443  001FAE  806B               	bsf	3947,0,c	;volatile
  3444  001FB0  0012               	return		;funcret
  3445  001FB2                     __end_of_i2c_Start:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function _i2c_Address *****************
  3449 ;; Defined at:
  3450 ;;		line 78 in file "i2c.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  address         1    wreg     unsigned char 
  3453 ;;  mode            1    7[COMRAM] unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  address         1    8[COMRAM] unsigned char 
  3456 ;;  l_address       1    9[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        3 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    3
  3473 ;; This function calls:
  3474 ;;		_i2c_Wait
  3475 ;; This function is called by:
  3476 ;;		_write_i2c
  3477 ;;		_read_i2c
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text15
  3482  001F4C                     __ptext15:
  3483                           	callstack 0
  3484  001F4C                     _i2c_Address:
  3485                           	callstack 26
  3486                           
  3487                           ;incstack = 0
  3488                           ;i2c_Address@address stored from wreg
  3489  001F4C  6E32               	movwf	i2c_Address@address^0,c
  3490  001F4E                     
  3491                           ;i2c.c: 79:     unsigned char l_address;;i2c.c: 81:     l_address = address;
  3492  001F4E  C032  F033         	movff	i2c_Address@address,i2c_Address@l_address
  3493  001F52                     
  3494                           ;i2c.c: 82:     l_address += mode;
  3495  001F52  5031               	movf	i2c_Address@mode^0,w,c
  3496  001F54  2633               	addwf	i2c_Address@l_address^0,f,c
  3497  001F56                     
  3498                           ;i2c.c: 83:     i2c_Wait();
  3499  001F56  EC41  F00F         	call	_i2c_Wait	;wreg free
  3500  001F5A                     
  3501                           ;i2c.c: 84:     SSP2BUF = l_address;
  3502  001F5A  C033  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  3503  001F5E  0012               	return		;funcret
  3504  001F60                     __end_of_i2c_Address:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _i2c_Wait *****************
  3508 ;; Defined at:
  3509 ;;		line 43 in file "i2c.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;Total ram usage:        1 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    2
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_i2c_Start
  3534 ;;		_i2c_Restart
  3535 ;;		_i2c_Stop
  3536 ;;		_i2c_Write
  3537 ;;		_i2c_Address
  3538 ;;		_i2c_Read
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text16
  3543  001E82                     __ptext16:
  3544                           	callstack 0
  3545  001E82                     _i2c_Wait:
  3546                           	callstack 26
  3547  001E82                     l2736:
  3548  001E82  CF6B F030          	movff	3947,??_i2c_Wait	;volatile
  3549  001E86  0E1F               	movlw	31
  3550  001E88  1630               	andwf	??_i2c_Wait^0,f,c
  3551  001E8A  A4D8               	btfss	status,2,c
  3552  001E8C  EF4A  F00F         	goto	u1461
  3553  001E90  EF4C  F00F         	goto	u1460
  3554  001E94                     u1461:
  3555  001E94  EF41  F00F         	goto	l2736
  3556  001E98                     u1460:
  3557  001E98  B46D               	btfsc	109,2,c	;volatile
  3558  001E9A  EF51  F00F         	goto	u1471
  3559  001E9E  EF53  F00F         	goto	u1470
  3560  001EA2                     u1471:
  3561  001EA2  EF41  F00F         	goto	l2736
  3562  001EA6                     u1470:
  3563  001EA6  0012               	return		;funcret
  3564  001EA8                     __end_of_i2c_Wait:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function ___aldiv *****************
  3568 ;; Defined at:
  3569 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aldiv.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  dividend        4    6[COMRAM] long 
  3572 ;;  divisor         4   10[COMRAM] long 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  quotient        4   16[COMRAM] long 
  3575 ;;  sign            1   15[COMRAM] unsigned char 
  3576 ;;  counter         1   14[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  4    6[COMRAM] long 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3586 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;Total ram usage:       14 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    2
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_write_i2c
  3597 ;;		_read_i2c
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text17
  3602  0012D0                     __ptext17:
  3603                           	callstack 0
  3604  0012D0                     ___aldiv:
  3605                           	callstack 27
  3606  0012D0  0E00               	movlw	0
  3607  0012D2  6E39               	movwf	___aldiv@sign^0,c
  3608  0012D4  BE37               	btfsc	(___aldiv@divisor+3)^0,7,c
  3609  0012D6  EF71  F009         	goto	u1560
  3610  0012DA  EF6F  F009         	goto	u1561
  3611  0012DE                     u1561:
  3612  0012DE  EF7B  F009         	goto	l2868
  3613  0012E2                     u1560:
  3614  0012E2  1E37               	comf	(___aldiv@divisor+3)^0,f,c
  3615  0012E4  1E36               	comf	(___aldiv@divisor+2)^0,f,c
  3616  0012E6  1E35               	comf	(___aldiv@divisor+1)^0,f,c
  3617  0012E8  6C34               	negf	___aldiv@divisor^0,c
  3618  0012EA  0E00               	movlw	0
  3619  0012EC  2235               	addwfc	(___aldiv@divisor+1)^0,f,c
  3620  0012EE  2236               	addwfc	(___aldiv@divisor+2)^0,f,c
  3621  0012F0  2237               	addwfc	(___aldiv@divisor+3)^0,f,c
  3622  0012F2  0E01               	movlw	1
  3623  0012F4  6E39               	movwf	___aldiv@sign^0,c
  3624  0012F6                     l2868:
  3625  0012F6  BE33               	btfsc	(___aldiv@dividend+3)^0,7,c
  3626  0012F8  EF82  F009         	goto	u1570
  3627  0012FC  EF80  F009         	goto	u1571
  3628  001300                     u1571:
  3629  001300  EF8C  F009         	goto	l2874
  3630  001304                     u1570:
  3631  001304  1E33               	comf	(___aldiv@dividend+3)^0,f,c
  3632  001306  1E32               	comf	(___aldiv@dividend+2)^0,f,c
  3633  001308  1E31               	comf	(___aldiv@dividend+1)^0,f,c
  3634  00130A  6C30               	negf	___aldiv@dividend^0,c
  3635  00130C  0E00               	movlw	0
  3636  00130E  2231               	addwfc	(___aldiv@dividend+1)^0,f,c
  3637  001310  2232               	addwfc	(___aldiv@dividend+2)^0,f,c
  3638  001312  2233               	addwfc	(___aldiv@dividend+3)^0,f,c
  3639  001314  0E01               	movlw	1
  3640  001316  1A39               	xorwf	___aldiv@sign^0,f,c
  3641  001318                     l2874:
  3642  001318  0E00               	movlw	0
  3643  00131A  6E3A               	movwf	___aldiv@quotient^0,c
  3644  00131C  0E00               	movlw	0
  3645  00131E  6E3B               	movwf	(___aldiv@quotient+1)^0,c
  3646  001320  0E00               	movlw	0
  3647  001322  6E3C               	movwf	(___aldiv@quotient+2)^0,c
  3648  001324  0E00               	movlw	0
  3649  001326  6E3D               	movwf	(___aldiv@quotient+3)^0,c
  3650  001328  5034               	movf	___aldiv@divisor^0,w,c
  3651  00132A  1035               	iorwf	(___aldiv@divisor+1)^0,w,c
  3652  00132C  1036               	iorwf	(___aldiv@divisor+2)^0,w,c
  3653  00132E  1037               	iorwf	(___aldiv@divisor+3)^0,w,c
  3654  001330  B4D8               	btfsc	status,2,c
  3655  001332  EF9D  F009         	goto	u1581
  3656  001336  EF9F  F009         	goto	u1580
  3657  00133A                     u1581:
  3658  00133A  EFD5  F009         	goto	l2896
  3659  00133E                     u1580:
  3660  00133E  0E01               	movlw	1
  3661  001340  6E38               	movwf	___aldiv@counter^0,c
  3662  001342  EFA9  F009         	goto	l2882
  3663  001346                     l2880:
  3664  001346  90D8               	bcf	status,0,c
  3665  001348  3634               	rlcf	___aldiv@divisor^0,f,c
  3666  00134A  3635               	rlcf	(___aldiv@divisor+1)^0,f,c
  3667  00134C  3636               	rlcf	(___aldiv@divisor+2)^0,f,c
  3668  00134E  3637               	rlcf	(___aldiv@divisor+3)^0,f,c
  3669  001350  2A38               	incf	___aldiv@counter^0,f,c
  3670  001352                     l2882:
  3671  001352  AE37               	btfss	(___aldiv@divisor+3)^0,7,c
  3672  001354  EFAE  F009         	goto	u1591
  3673  001358  EFB0  F009         	goto	u1590
  3674  00135C                     u1591:
  3675  00135C  EFA3  F009         	goto	l2880
  3676  001360                     u1590:
  3677  001360                     l2884:
  3678  001360  90D8               	bcf	status,0,c
  3679  001362  363A               	rlcf	___aldiv@quotient^0,f,c
  3680  001364  363B               	rlcf	(___aldiv@quotient+1)^0,f,c
  3681  001366  363C               	rlcf	(___aldiv@quotient+2)^0,f,c
  3682  001368  363D               	rlcf	(___aldiv@quotient+3)^0,f,c
  3683  00136A  5034               	movf	___aldiv@divisor^0,w,c
  3684  00136C  5C30               	subwf	___aldiv@dividend^0,w,c
  3685  00136E  5035               	movf	(___aldiv@divisor+1)^0,w,c
  3686  001370  5831               	subwfb	(___aldiv@dividend+1)^0,w,c
  3687  001372  5036               	movf	(___aldiv@divisor+2)^0,w,c
  3688  001374  5832               	subwfb	(___aldiv@dividend+2)^0,w,c
  3689  001376  5037               	movf	(___aldiv@divisor+3)^0,w,c
  3690  001378  5833               	subwfb	(___aldiv@dividend+3)^0,w,c
  3691  00137A  A0D8               	btfss	status,0,c
  3692  00137C  EFC2  F009         	goto	u1601
  3693  001380  EFC4  F009         	goto	u1600
  3694  001384                     u1601:
  3695  001384  EFCD  F009         	goto	l2892
  3696  001388                     u1600:
  3697  001388  5034               	movf	___aldiv@divisor^0,w,c
  3698  00138A  5E30               	subwf	___aldiv@dividend^0,f,c
  3699  00138C  5035               	movf	(___aldiv@divisor+1)^0,w,c
  3700  00138E  5A31               	subwfb	(___aldiv@dividend+1)^0,f,c
  3701  001390  5036               	movf	(___aldiv@divisor+2)^0,w,c
  3702  001392  5A32               	subwfb	(___aldiv@dividend+2)^0,f,c
  3703  001394  5037               	movf	(___aldiv@divisor+3)^0,w,c
  3704  001396  5A33               	subwfb	(___aldiv@dividend+3)^0,f,c
  3705  001398  803A               	bsf	___aldiv@quotient^0,0,c
  3706  00139A                     l2892:
  3707  00139A  90D8               	bcf	status,0,c
  3708  00139C  3237               	rrcf	(___aldiv@divisor+3)^0,f,c
  3709  00139E  3236               	rrcf	(___aldiv@divisor+2)^0,f,c
  3710  0013A0  3235               	rrcf	(___aldiv@divisor+1)^0,f,c
  3711  0013A2  3234               	rrcf	___aldiv@divisor^0,f,c
  3712  0013A4  2E38               	decfsz	___aldiv@counter^0,f,c
  3713  0013A6  EFB0  F009         	goto	l2884
  3714  0013AA                     l2896:
  3715  0013AA  5039               	movf	___aldiv@sign^0,w,c
  3716  0013AC  B4D8               	btfsc	status,2,c
  3717  0013AE  EFDB  F009         	goto	u1611
  3718  0013B2  EFDD  F009         	goto	u1610
  3719  0013B6                     u1611:
  3720  0013B6  EFE5  F009         	goto	l2900
  3721  0013BA                     u1610:
  3722  0013BA  1E3D               	comf	(___aldiv@quotient+3)^0,f,c
  3723  0013BC  1E3C               	comf	(___aldiv@quotient+2)^0,f,c
  3724  0013BE  1E3B               	comf	(___aldiv@quotient+1)^0,f,c
  3725  0013C0  6C3A               	negf	___aldiv@quotient^0,c
  3726  0013C2  0E00               	movlw	0
  3727  0013C4  223B               	addwfc	(___aldiv@quotient+1)^0,f,c
  3728  0013C6  223C               	addwfc	(___aldiv@quotient+2)^0,f,c
  3729  0013C8  223D               	addwfc	(___aldiv@quotient+3)^0,f,c
  3730  0013CA                     l2900:
  3731  0013CA  C03A  F030         	movff	___aldiv@quotient,?___aldiv
  3732  0013CE  C03B  F031         	movff	___aldiv@quotient+1,?___aldiv+1
  3733  0013D2  C03C  F032         	movff	___aldiv@quotient+2,?___aldiv+2
  3734  0013D6  C03D  F033         	movff	___aldiv@quotient+3,?___aldiv+3
  3735  0013DA  0012               	return		;funcret
  3736  0013DC                     __end_of___aldiv:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function _MotorPosition_Init *****************
  3740 ;; Defined at:
  3741 ;;		line 749 in file "main.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;Total ram usage:        2 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    4
  3762 ;; This function calls:
  3763 ;;		_MotorBREAK
  3764 ;;		_MotorON
  3765 ;;		_Read_IR
  3766 ;;		_WriteSTLED316SErr
  3767 ;;		_delay_1ms
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text18
  3774  0013DC                     __ptext18:
  3775                           	callstack 0
  3776  0013DC                     _MotorPosition_Init:
  3777                           	callstack 26
  3778  0013DC                     
  3779                           ;main.c: 750:     LATAbits.LATA2 = 1;
  3780  0013DC  8489               	bsf	137,2,c	;volatile
  3781  0013DE                     
  3782                           ;main.c: 751:     MotorON();
  3783  0013DE  ECC3  F00F         	call	_MotorON	;wreg free
  3784  0013E2                     
  3785                           ;main.c: 752:     _delay((unsigned long)((350)*(8000000/4000.0)));
  3786  0013E2  0E04               	movlw	4
  3787  0013E4  6E3A               	movwf	(??_MotorPosition_Init+1)^0,c
  3788  0013E6  0E8E               	movlw	142
  3789  0013E8  6E39               	movwf	??_MotorPosition_Init^0,c
  3790  0013EA  0E12               	movlw	18
  3791  0013EC                     u2947:
  3792  0013EC  2EE8               	decfsz	wreg,f,c
  3793  0013EE  D7FE               	bra	u2947
  3794  0013F0  2E39               	decfsz	??_MotorPosition_Init^0,f,c
  3795  0013F2  D7FC               	bra	u2947
  3796  0013F4  2E3A               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  3797  0013F6  D7FA               	bra	u2947
  3798  0013F8  D000               	nop2	
  3799  0013FA                     
  3800                           ;main.c: 753:     errorcounter = 30;
  3801  0013FA  0E1E               	movlw	30
  3802  0013FC  6E4A               	movwf	_errorcounter^0,c	;volatile
  3803  0013FE  0E00               	movlw	0
  3804  001400  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  3805  001402  0E00               	movlw	0
  3806  001404  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  3807  001406  0E00               	movlw	0
  3808  001408  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  3809  00140A                     l3264:
  3810                           
  3811                           ;main.c: 756:         IR_SENSORF = Read_IR();
  3812  00140A  EC67  F00F         	call	_Read_IR	;wreg free
  3813  00140E  C030  F003         	movff	?_Read_IR,_IR_SENSORF
  3814  001412  C031  F004         	movff	?_Read_IR+1,_IR_SENSORF+1
  3815  001416                     
  3816                           ;main.c: 757:         if (errorcounter == 0) {
  3817  001416  504A               	movf	_errorcounter^0,w,c	;volatile
  3818  001418  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  3819  00141A  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  3820  00141C  104D               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  3821  00141E  A4D8               	btfss	status,2,c
  3822  001420  EF14  F00A         	goto	u1821
  3823  001424  EF16  F00A         	goto	u1820
  3824  001428                     u1821:
  3825  001428  EF1B  F00A         	goto	l3272
  3826  00142C                     u1820:
  3827  00142C                     
  3828                           ;main.c: 758:             WriteSTLED316SErr('1');
  3829  00142C  0E31               	movlw	49
  3830  00142E  ECF4  F00A         	call	_WriteSTLED316SErr
  3831  001432                     
  3832                           ;main.c: 759:             MotorBREAK();
  3833  001432  ECC8  F00F         	call	_MotorBREAK	;wreg free
  3834  001436                     l3272:
  3835                           
  3836                           ;main.c: 762:     } while (IR_SENSORF != 0);
  3837  001436  5003               	movf	_IR_SENSORF^0,w,c
  3838  001438  1004               	iorwf	(_IR_SENSORF+1)^0,w,c
  3839  00143A  A4D8               	btfss	status,2,c
  3840  00143C  EF22  F00A         	goto	u1831
  3841  001440  EF24  F00A         	goto	u1830
  3842  001444                     u1831:
  3843  001444  EF05  F00A         	goto	l3264
  3844  001448                     u1830:
  3845  001448                     
  3846                           ;main.c: 764:     _delay((unsigned long)((30)*(8000000/4000.0)));
  3847  001448  0E4E               	movlw	78
  3848  00144A  6E39               	movwf	??_MotorPosition_Init^0,c
  3849  00144C  0EEB               	movlw	235
  3850  00144E                     u2957:
  3851  00144E  2EE8               	decfsz	wreg,f,c
  3852  001450  D7FE               	bra	u2957
  3853  001452  2E39               	decfsz	??_MotorPosition_Init^0,f,c
  3854  001454  D7FC               	bra	u2957
  3855  001456  F000               	nop	
  3856  001458                     
  3857                           ;main.c: 765:     errorcounter = 30;
  3858  001458  0E1E               	movlw	30
  3859  00145A  6E4A               	movwf	_errorcounter^0,c	;volatile
  3860  00145C  0E00               	movlw	0
  3861  00145E  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  3862  001460  0E00               	movlw	0
  3863  001462  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  3864  001464  0E00               	movlw	0
  3865  001466  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  3866  001468                     l3278:
  3867                           
  3868                           ;main.c: 767:         IR_SENSORF = Read_IR();
  3869  001468  EC67  F00F         	call	_Read_IR	;wreg free
  3870  00146C  C030  F003         	movff	?_Read_IR,_IR_SENSORF
  3871  001470  C031  F004         	movff	?_Read_IR+1,_IR_SENSORF+1
  3872  001474                     
  3873                           ;main.c: 768:         if (errorcounter == 0) {
  3874  001474  504A               	movf	_errorcounter^0,w,c	;volatile
  3875  001476  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  3876  001478  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  3877  00147A  104D               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  3878  00147C  A4D8               	btfss	status,2,c
  3879  00147E  EF43  F00A         	goto	u1841
  3880  001482  EF45  F00A         	goto	u1840
  3881  001486                     u1841:
  3882  001486  EF4A  F00A         	goto	l3286
  3883  00148A                     u1840:
  3884  00148A                     
  3885                           ;main.c: 769:             WriteSTLED316SErr('2');
  3886  00148A  0E32               	movlw	50
  3887  00148C  ECF4  F00A         	call	_WriteSTLED316SErr
  3888  001490                     
  3889                           ;main.c: 770:             MotorBREAK();
  3890  001490  ECC8  F00F         	call	_MotorBREAK	;wreg free
  3891  001494                     l3286:
  3892                           
  3893                           ;main.c: 773:     } while (IR_SENSORF != 1);
  3894  001494  0403               	decf	_IR_SENSORF^0,w,c
  3895  001496  1004               	iorwf	(_IR_SENSORF+1)^0,w,c
  3896  001498  A4D8               	btfss	status,2,c
  3897  00149A  EF51  F00A         	goto	u1851
  3898  00149E  EF53  F00A         	goto	u1850
  3899  0014A2                     u1851:
  3900  0014A2  EF34  F00A         	goto	l3278
  3901  0014A6                     u1850:
  3902  0014A6                     
  3903                           ;main.c: 775:     errorcounter = 30;
  3904  0014A6  0E1E               	movlw	30
  3905  0014A8  6E4A               	movwf	_errorcounter^0,c	;volatile
  3906  0014AA  0E00               	movlw	0
  3907  0014AC  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  3908  0014AE  0E00               	movlw	0
  3909  0014B0  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  3910  0014B2  0E00               	movlw	0
  3911  0014B4  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  3912  0014B6                     
  3913                           ;main.c: 777:     delay_1ms(Motor_Stop_Delay_Time);
  3914  0014B6  C011  F030         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  3915  0014BA  C012  F031         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  3916  0014BE  EC18  F00F         	call	_delay_1ms	;wreg free
  3917  0014C2                     
  3918                           ;main.c: 778:     MotorBREAK();
  3919  0014C2  ECC8  F00F         	call	_MotorBREAK	;wreg free
  3920  0014C6                     
  3921                           ;main.c: 779:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3922  0014C6  0E06               	movlw	6
  3923  0014C8  6E3A               	movwf	(??_MotorPosition_Init+1)^0,c
  3924  0014CA  0E13               	movlw	19
  3925  0014CC  6E39               	movwf	??_MotorPosition_Init^0,c
  3926  0014CE  0EAE               	movlw	174
  3927  0014D0                     u2967:
  3928  0014D0  2EE8               	decfsz	wreg,f,c
  3929  0014D2  D7FE               	bra	u2967
  3930  0014D4  2E39               	decfsz	??_MotorPosition_Init^0,f,c
  3931  0014D6  D7FC               	bra	u2967
  3932  0014D8  2E3A               	decfsz	(??_MotorPosition_Init+1)^0,f,c
  3933  0014DA  D7FA               	bra	u2967
  3934  0014DC                     
  3935                           ;main.c: 780:     IR_SENSORF = 0;
  3936  0014DC  0E00               	movlw	0
  3937  0014DE  6E04               	movwf	(_IR_SENSORF+1)^0,c
  3938  0014E0  0E00               	movlw	0
  3939  0014E2  6E03               	movwf	_IR_SENSORF^0,c
  3940  0014E4                     
  3941                           ;main.c: 782:     LATAbits.LATA2 = 0;
  3942  0014E4  9489               	bcf	137,2,c	;volatile
  3943  0014E6  0012               	return		;funcret
  3944  0014E8                     __end_of_MotorPosition_Init:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _InitTimer1 *****************
  3948 ;; Defined at:
  3949 ;;		line 1048 in file "main.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    2
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text19
  3978  001EF2                     __ptext19:
  3979                           	callstack 0
  3980  001EF2                     _InitTimer1:
  3981                           	callstack 28
  3982  001EF2                     
  3983                           ;main.c: 1049:     T1CON = 0b00110001;
  3984  001EF2  0E31               	movlw	49
  3985  001EF4  6ECD               	movwf	205,c	;volatile
  3986                           
  3987                           ;main.c: 1052:     TMR1 = 0x9E57;
  3988  001EF6  0E9E               	movlw	158
  3989  001EF8  6ECF               	movwf	207,c	;volatile
  3990  001EFA  0E57               	movlw	87
  3991  001EFC  6ECE               	movwf	206,c	;volatile
  3992  001EFE                     
  3993                           ;main.c: 1053:     TMR1IF = 0;
  3994  001EFE  909E               	bcf	3998,0,c	;volatile
  3995  001F00                     
  3996                           ;main.c: 1054:     TMR1IE = 1;
  3997  001F00  809D               	bsf	3997,0,c	;volatile
  3998  001F02                     
  3999                           ;main.c: 1055:     IPR1bits.TMR1IP = 1;
  4000  001F02  809F               	bsf	159,0,c	;volatile
  4001                           
  4002                           ;main.c: 1057:     TMR1IF_triggered = 0;
  4003  001F04  0E00               	movlw	0
  4004  001F06  6E1D               	movwf	_TMR1IF_triggered^0,c	;volatile
  4005  001F08  0012               	return		;funcret
  4006  001F0A                     __end_of_InitTimer1:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _InitSTLED316 *****************
  4010 ;; Defined at:
  4011 ;;		line 14 in file "Display.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  Brightness      1    wreg     unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  Brightness      1   14[COMRAM] unsigned char 
  4016 ;;  i               2    0        int 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;Total ram usage:        3 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    3
  4033 ;; This function calls:
  4034 ;;		_STLED316s_SPI_SendData
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text20
  4041  0019B8                     __ptext20:
  4042                           	callstack 0
  4043  0019B8                     _InitSTLED316:
  4044                           	callstack 27
  4045                           
  4046                           ;incstack = 0
  4047                           ;InitSTLED316@Brightness stored from wreg
  4048  0019B8  6E38               	movwf	InitSTLED316@Brightness^0,c
  4049  0019BA                     
  4050                           ;Display.c: 14: void InitSTLED316(unsigned char Brightness);Display.c: 15: {;Display.c: 
      +                          16:     int i;;Display.c: 18:     LATCbits.LATC4 = 1;
  4051  0019BA  888B               	bsf	139,4,c	;volatile
  4052                           
  4053                           ;Display.c: 20:     LATCbits.LATC4 = 0;
  4054  0019BC  988B               	bcf	139,4,c	;volatile
  4055  0019BE                     
  4056                           ;Display.c: 22:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4057  0019BE  0E30               	movlw	48
  4058  0019C0  EC22  F00D         	call	_STLED316s_SPI_SendData
  4059  0019C4                     
  4060                           ;Display.c: 25:     LATCbits.LATC4 = 1;
  4061  0019C4  888B               	bsf	139,4,c	;volatile
  4062  0019C6                     
  4063                           ;Display.c: 27:     LATCbits.LATC4 = 0;
  4064  0019C6  988B               	bcf	139,4,c	;volatile
  4065                           
  4066                           ;Display.c: 30:     STLED316s_SPI_SendData(0x00 + (0x02 << 3) + 0x20 + 0x00);
  4067  0019C8  0E30               	movlw	48
  4068  0019CA  EC22  F00D         	call	_STLED316s_SPI_SendData
  4069                           
  4070                           ;Display.c: 32:     STLED316s_SPI_SendData(((Brightness >> 4) << 5) | 0x00 | 0x5);
  4071  0019CE  C038  F036         	movff	InitSTLED316@Brightness,??_InitSTLED316
  4072  0019D2  3A36               	swapf	??_InitSTLED316^0,f,c
  4073  0019D4  0E0F               	movlw	15
  4074  0019D6  1636               	andwf	??_InitSTLED316^0,f,c
  4075  0019D8  0E05               	movlw	5
  4076  0019DA  6E37               	movwf	(??_InitSTLED316+1)^0,c
  4077  0019DC                     u1815:
  4078  0019DC  90D8               	bcf	status,0,c
  4079  0019DE  3636               	rlcf	??_InitSTLED316^0,f,c
  4080  0019E0  2E37               	decfsz	(??_InitSTLED316+1)^0,f,c
  4081  0019E2  EFEE  F00C         	goto	u1815
  4082  0019E6  5036               	movf	??_InitSTLED316^0,w,c
  4083  0019E8  0905               	iorlw	5
  4084  0019EA  EC22  F00D         	call	_STLED316s_SPI_SendData
  4085  0019EE                     
  4086                           ;Display.c: 34:     LATCbits.LATC4 = 1;
  4087  0019EE  888B               	bsf	139,4,c	;volatile
  4088  0019F0                     
  4089                           ;Display.c: 36:     LATCbits.LATC4 = 0;
  4090  0019F0  988B               	bcf	139,4,c	;volatile
  4091                           
  4092                           ;Display.c: 39:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4093  0019F2  0E11               	movlw	17
  4094  0019F4  EC22  F00D         	call	_STLED316s_SPI_SendData
  4095  0019F8                     
  4096                           ;Display.c: 45:     LATCbits.LATC4 = 1;
  4097  0019F8  888B               	bsf	139,4,c	;volatile
  4098  0019FA                     
  4099                           ;Display.c: 47:     LATCbits.LATC4 = 0;
  4100  0019FA  988B               	bcf	139,4,c	;volatile
  4101                           
  4102                           ;Display.c: 50:     STLED316s_SPI_SendData((0x02 << 3) + 0x01 + 0x00 + 0x00);
  4103  0019FC  0E11               	movlw	17
  4104  0019FE  EC22  F00D         	call	_STLED316s_SPI_SendData
  4105                           
  4106                           ;Display.c: 52:     STLED316s_SPI_SendData(Brightness);
  4107  001A02  5038               	movf	InitSTLED316@Brightness^0,w,c
  4108  001A04  EC22  F00D         	call	_STLED316s_SPI_SendData
  4109                           
  4110                           ;Display.c: 53:     STLED316s_SPI_SendData(Brightness);
  4111  001A08  5038               	movf	InitSTLED316@Brightness^0,w,c
  4112  001A0A  EC22  F00D         	call	_STLED316s_SPI_SendData
  4113                           
  4114                           ;Display.c: 54:     STLED316s_SPI_SendData(Brightness);
  4115  001A0E  5038               	movf	InitSTLED316@Brightness^0,w,c
  4116  001A10  EC22  F00D         	call	_STLED316s_SPI_SendData
  4117  001A14                     
  4118                           ;Display.c: 58:     LATCbits.LATC4 = 1;
  4119  001A14  888B               	bsf	139,4,c	;volatile
  4120  001A16                     
  4121                           ;Display.c: 60:     LATCbits.LATC4 = 0;
  4122  001A16  988B               	bcf	139,4,c	;volatile
  4123                           
  4124                           ;Display.c: 63:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  4125  001A18  0E18               	movlw	24
  4126  001A1A  EC22  F00D         	call	_STLED316s_SPI_SendData
  4127  001A1E                     
  4128                           ;Display.c: 66:     LATCbits.LATC4 = 1;
  4129  001A1E  888B               	bsf	139,4,c	;volatile
  4130  001A20                     
  4131                           ;Display.c: 68:     LATCbits.LATC4 = 0;
  4132  001A20  988B               	bcf	139,4,c	;volatile
  4133                           
  4134                           ;Display.c: 70:     STLED316s_SPI_SendData((0x03 << 3) + 0x00 + 0x00 + 0x00);
  4135  001A22  0E18               	movlw	24
  4136  001A24  EC22  F00D         	call	_STLED316s_SPI_SendData
  4137                           
  4138                           ;Display.c: 72:     STLED316s_SPI_SendData(Brightness);
  4139  001A28  5038               	movf	InitSTLED316@Brightness^0,w,c
  4140  001A2A  EC22  F00D         	call	_STLED316s_SPI_SendData
  4141                           
  4142                           ;Display.c: 73:     STLED316s_SPI_SendData(Brightness);
  4143  001A2E  5038               	movf	InitSTLED316@Brightness^0,w,c
  4144  001A30  EC22  F00D         	call	_STLED316s_SPI_SendData
  4145                           
  4146                           ;Display.c: 74:     STLED316s_SPI_SendData(Brightness);
  4147  001A34  5038               	movf	InitSTLED316@Brightness^0,w,c
  4148  001A36  EC22  F00D         	call	_STLED316s_SPI_SendData
  4149                           
  4150                           ;Display.c: 75:     STLED316s_SPI_SendData(Brightness);
  4151  001A3A  5038               	movf	InitSTLED316@Brightness^0,w,c
  4152  001A3C  EC22  F00D         	call	_STLED316s_SPI_SendData
  4153  001A40                     
  4154                           ;Display.c: 79:     LATCbits.LATC4 = 1;
  4155  001A40  888B               	bsf	139,4,c	;volatile
  4156  001A42  0012               	return		;funcret
  4157  001A44                     __end_of_InitSTLED316:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _Homing_Again_Manual *****************
  4161 ;; Defined at:
  4162 ;;		line 810 in file "main.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;Total ram usage:        2 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    4
  4183 ;; This function calls:
  4184 ;;		_AD_capture_BattVoltage
  4185 ;;		_MotorBREAK
  4186 ;;		_MotorON
  4187 ;;		_Read_IR
  4188 ;;		_WriteSTLED316SData
  4189 ;;		_WriteSTLED316SErr
  4190 ;;		_delay_1ms
  4191 ;;		_readWeighingData
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text21
  4198  000CE6                     __ptext21:
  4199                           	callstack 0
  4200  000CE6                     _Homing_Again_Manual:
  4201                           	callstack 26
  4202  000CE6                     
  4203                           ;main.c: 812:     if (vibration_mode == 1) {
  4204  000CE6  0424               	decf	_vibration_mode^0,w,c
  4205  000CE8  A4D8               	btfss	status,2,c
  4206  000CEA  EF79  F006         	goto	u1881
  4207  000CEE  EF7B  F006         	goto	u1880
  4208  000CF2                     u1881:
  4209  000CF2  EF90  F006         	goto	l322
  4210  000CF6                     u1880:
  4211  000CF6                     
  4212                           ;main.c: 813:         LATCbits.LATC1 = 1;
  4213  000CF6  828B               	bsf	139,1,c	;volatile
  4214  000CF8                     
  4215                           ;main.c: 814:         delay_1ms(Vmotor_Time);
  4216  000CF8  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  4217  000CFC  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4218  000D00  EC18  F00F         	call	_delay_1ms	;wreg free
  4219  000D04                     
  4220                           ;main.c: 815:         LATCbits.LATC1 = 0;
  4221  000D04  928B               	bcf	139,1,c	;volatile
  4222  000D06                     l3340:
  4223                           
  4224                           ;main.c: 816:         _delay((unsigned long)((300)*(8000000/4000.0)));
  4225  000D06  0E04               	movlw	4
  4226  000D08  6E42               	movwf	(??_Homing_Again_Manual+1)^0,c
  4227  000D0A  0E0C               	movlw	12
  4228  000D0C  6E41               	movwf	??_Homing_Again_Manual^0,c
  4229  000D0E  0E34               	movlw	52
  4230  000D10                     u2977:
  4231  000D10  2EE8               	decfsz	wreg,f,c
  4232  000D12  D7FE               	bra	u2977
  4233  000D14  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4234  000D16  D7FC               	bra	u2977
  4235  000D18  2E42               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4236  000D1A  D7FA               	bra	u2977
  4237                           
  4238                           ;main.c: 817:     } else {
  4239  000D1C  EF93  F006         	goto	l3344
  4240  000D20                     l322:
  4241                           
  4242                           ;main.c: 818:         LATCbits.LATC1 = 0;
  4243  000D20  928B               	bcf	139,1,c	;volatile
  4244  000D22  EF83  F006         	goto	l3340
  4245  000D26                     l3344:
  4246                           
  4247                           ;main.c: 822:     LATAbits.LATA2 = 1;
  4248  000D26  8489               	bsf	137,2,c	;volatile
  4249  000D28                     
  4250                           ;main.c: 824:     if (NUM == 0) {
  4251  000D28  500B               	movf	_NUM^0,w,c
  4252  000D2A  100C               	iorwf	(_NUM+1)^0,w,c
  4253  000D2C  A4D8               	btfss	status,2,c
  4254  000D2E  EF9B  F006         	goto	u1891
  4255  000D32  EF9D  F006         	goto	u1890
  4256  000D36                     u1891:
  4257  000D36  EF02  F008         	goto	l3446
  4258  000D3A                     u1890:
  4259  000D3A                     
  4260                           ;main.c: 825:         i_RUN_ZERO = 1;
  4261  000D3A  0E00               	movlw	0
  4262  000D3C  6E0A               	movwf	(_i_RUN_ZERO+1)^0,c
  4263  000D3E  0E01               	movlw	1
  4264  000D40  6E09               	movwf	_i_RUN_ZERO^0,c
  4265  000D42  EF02  F008         	goto	l3446
  4266  000D46                     l326:
  4267  000D46  0004               	clrwdt		;# 
  4268  000D48                     
  4269                           ;main.c: 830:         readWeighingData();
  4270  000D48  ECCF  F00D         	call	_readWeighingData	;wreg free
  4271  000D4C                     
  4272                           ;main.c: 831:         AD_capture_BattVoltage();
  4273  000D4C  EC6B  F00E         	call	_AD_capture_BattVoltage	;wreg free
  4274  000D50                     
  4275                           ;main.c: 832:         delay_1ms(Motor_Pause_Time);
  4276  000D50  C00D  F030         	movff	_Motor_Pause_Time,delay_1ms@time
  4277  000D54  C00E  F031         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  4278  000D58  EC18  F00F         	call	_delay_1ms	;wreg free
  4279  000D5C                     
  4280                           ;main.c: 833:         MotorON();
  4281  000D5C  ECC3  F00F         	call	_MotorON	;wreg free
  4282  000D60                     
  4283                           ;main.c: 834:         _delay((unsigned long)((350)*(8000000/4000.0)));
  4284  000D60  0E04               	movlw	4
  4285  000D62  6E42               	movwf	(??_Homing_Again_Manual+1)^0,c
  4286  000D64  0E8E               	movlw	142
  4287  000D66  6E41               	movwf	??_Homing_Again_Manual^0,c
  4288  000D68  0E12               	movlw	18
  4289  000D6A                     u2987:
  4290  000D6A  2EE8               	decfsz	wreg,f,c
  4291  000D6C  D7FE               	bra	u2987
  4292  000D6E  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4293  000D70  D7FC               	bra	u2987
  4294  000D72  2E42               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4295  000D74  D7FA               	bra	u2987
  4296  000D76  D000               	nop2	
  4297  000D78                     
  4298                           ;main.c: 835:         errorcounter = 30;
  4299  000D78  0E1E               	movlw	30
  4300  000D7A  6E4A               	movwf	_errorcounter^0,c	;volatile
  4301  000D7C  0E00               	movlw	0
  4302  000D7E  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  4303  000D80  0E00               	movlw	0
  4304  000D82  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  4305  000D84  0E00               	movlw	0
  4306  000D86  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  4307  000D88                     l3362:
  4308                           
  4309                           ;main.c: 838:             IR_SENSORF = Read_IR();
  4310  000D88  EC67  F00F         	call	_Read_IR	;wreg free
  4311  000D8C  C030  F003         	movff	?_Read_IR,_IR_SENSORF
  4312  000D90  C031  F004         	movff	?_Read_IR+1,_IR_SENSORF+1
  4313  000D94                     
  4314                           ;main.c: 839:             if (errorcounter == 0) {
  4315  000D94  504A               	movf	_errorcounter^0,w,c	;volatile
  4316  000D96  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4317  000D98  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4318  000D9A  104D               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4319  000D9C  A4D8               	btfss	status,2,c
  4320  000D9E  EFD3  F006         	goto	u1901
  4321  000DA2  EFD5  F006         	goto	u1900
  4322  000DA6                     u1901:
  4323  000DA6  EFDA  F006         	goto	l3370
  4324  000DAA                     u1900:
  4325  000DAA                     
  4326                           ;main.c: 840:                 WriteSTLED316SErr('1');
  4327  000DAA  0E31               	movlw	49
  4328  000DAC  ECF4  F00A         	call	_WriteSTLED316SErr
  4329  000DB0                     
  4330                           ;main.c: 841:                 MotorBREAK();
  4331  000DB0  ECC8  F00F         	call	_MotorBREAK	;wreg free
  4332  000DB4                     l3370:
  4333                           
  4334                           ;main.c: 844:         } while (IR_SENSORF != 0);
  4335  000DB4  5003               	movf	_IR_SENSORF^0,w,c
  4336  000DB6  1004               	iorwf	(_IR_SENSORF+1)^0,w,c
  4337  000DB8  A4D8               	btfss	status,2,c
  4338  000DBA  EFE1  F006         	goto	u1911
  4339  000DBE  EFE3  F006         	goto	u1910
  4340  000DC2                     u1911:
  4341  000DC2  EFC4  F006         	goto	l3362
  4342  000DC6                     u1910:
  4343  000DC6                     
  4344                           ;main.c: 846:         _delay((unsigned long)((30)*(8000000/4000.0)));
  4345  000DC6  0E4E               	movlw	78
  4346  000DC8  6E41               	movwf	??_Homing_Again_Manual^0,c
  4347  000DCA  0EEB               	movlw	235
  4348  000DCC                     u2997:
  4349  000DCC  2EE8               	decfsz	wreg,f,c
  4350  000DCE  D7FE               	bra	u2997
  4351  000DD0  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4352  000DD2  D7FC               	bra	u2997
  4353  000DD4  F000               	nop	
  4354  000DD6                     
  4355                           ;main.c: 848:         errorcounter = 30;
  4356  000DD6  0E1E               	movlw	30
  4357  000DD8  6E4A               	movwf	_errorcounter^0,c	;volatile
  4358  000DDA  0E00               	movlw	0
  4359  000DDC  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  4360  000DDE  0E00               	movlw	0
  4361  000DE0  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  4362  000DE2  0E00               	movlw	0
  4363  000DE4  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  4364  000DE6                     l3376:
  4365                           
  4366                           ;main.c: 851:             IR_SENSORF = Read_IR();
  4367  000DE6  EC67  F00F         	call	_Read_IR	;wreg free
  4368  000DEA  C030  F003         	movff	?_Read_IR,_IR_SENSORF
  4369  000DEE  C031  F004         	movff	?_Read_IR+1,_IR_SENSORF+1
  4370  000DF2                     
  4371                           ;main.c: 852:             if (errorcounter == 0) {
  4372  000DF2  504A               	movf	_errorcounter^0,w,c	;volatile
  4373  000DF4  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  4374  000DF6  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  4375  000DF8  104D               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  4376  000DFA  A4D8               	btfss	status,2,c
  4377  000DFC  EF02  F007         	goto	u1921
  4378  000E00  EF04  F007         	goto	u1920
  4379  000E04                     u1921:
  4380  000E04  EF09  F007         	goto	l3384
  4381  000E08                     u1920:
  4382  000E08                     
  4383                           ;main.c: 853:                 WriteSTLED316SErr('2');
  4384  000E08  0E32               	movlw	50
  4385  000E0A  ECF4  F00A         	call	_WriteSTLED316SErr
  4386  000E0E                     
  4387                           ;main.c: 854:                 MotorBREAK();
  4388  000E0E  ECC8  F00F         	call	_MotorBREAK	;wreg free
  4389  000E12                     l3384:
  4390                           
  4391                           ;main.c: 856:         } while (IR_SENSORF != 1);
  4392  000E12  0403               	decf	_IR_SENSORF^0,w,c
  4393  000E14  1004               	iorwf	(_IR_SENSORF+1)^0,w,c
  4394  000E16  A4D8               	btfss	status,2,c
  4395  000E18  EF10  F007         	goto	u1931
  4396  000E1C  EF12  F007         	goto	u1930
  4397  000E20                     u1931:
  4398  000E20  EFF3  F006         	goto	l3376
  4399  000E24                     u1930:
  4400  000E24                     
  4401                           ;main.c: 858:         errorcounter = 30;
  4402  000E24  0E1E               	movlw	30
  4403  000E26  6E4A               	movwf	_errorcounter^0,c	;volatile
  4404  000E28  0E00               	movlw	0
  4405  000E2A  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  4406  000E2C  0E00               	movlw	0
  4407  000E2E  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  4408  000E30  0E00               	movlw	0
  4409  000E32  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  4410  000E34                     
  4411                           ;main.c: 859:         delay_1ms(Motor_Stop_Delay_Time);
  4412  000E34  C011  F030         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  4413  000E38  C012  F031         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  4414  000E3C  EC18  F00F         	call	_delay_1ms	;wreg free
  4415  000E40                     
  4416                           ;main.c: 860:         MotorBREAK();
  4417  000E40  ECC8  F00F         	call	_MotorBREAK	;wreg free
  4418                           
  4419                           ;main.c: 862:         if (NUM > 0 && i_RUN_ZERO != 1) {
  4420  000E44  500B               	movf	_NUM^0,w,c
  4421  000E46  100C               	iorwf	(_NUM+1)^0,w,c
  4422  000E48  B4D8               	btfsc	status,2,c
  4423  000E4A  EF29  F007         	goto	u1941
  4424  000E4E  EF2B  F007         	goto	u1940
  4425  000E52                     u1941:
  4426  000E52  EF37  F007         	goto	l3396
  4427  000E56                     u1940:
  4428  000E56  0409               	decf	_i_RUN_ZERO^0,w,c
  4429  000E58  100A               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4430  000E5A  B4D8               	btfsc	status,2,c
  4431  000E5C  EF32  F007         	goto	u1951
  4432  000E60  EF34  F007         	goto	u1950
  4433  000E64                     u1951:
  4434  000E64  EF37  F007         	goto	l3396
  4435  000E68                     u1950:
  4436  000E68                     
  4437                           ;main.c: 863:             NUM--;
  4438  000E68  060B               	decf	_NUM^0,f,c
  4439  000E6A  A0D8               	btfss	status,0,c
  4440  000E6C  060C               	decf	(_NUM+1)^0,f,c
  4441  000E6E                     l3396:
  4442                           
  4443                           ;main.c: 866:         WriteSTLED316SData(NUM, vibration_mode);
  4444  000E6E  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
  4445  000E72  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
  4446  000E76  C024  F03A         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4447  000E7A  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
  4448  000E7E                     
  4449                           ;main.c: 868:         if (vibration_mode == 1 && (NUM != 0 || i_RUN_ZERO == 1)) {
  4450  000E7E  0424               	decf	_vibration_mode^0,w,c
  4451  000E80  A4D8               	btfss	status,2,c
  4452  000E82  EF45  F007         	goto	u1961
  4453  000E86  EF47  F007         	goto	u1960
  4454  000E8A                     u1961:
  4455  000E8A  EF6E  F007         	goto	l3410
  4456  000E8E                     u1960:
  4457  000E8E  500B               	movf	_NUM^0,w,c
  4458  000E90  100C               	iorwf	(_NUM+1)^0,w,c
  4459  000E92  A4D8               	btfss	status,2,c
  4460  000E94  EF4E  F007         	goto	u1971
  4461  000E98  EF50  F007         	goto	u1970
  4462  000E9C                     u1971:
  4463  000E9C  EF59  F007         	goto	l336
  4464  000EA0                     u1970:
  4465  000EA0  0409               	decf	_i_RUN_ZERO^0,w,c
  4466  000EA2  100A               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4467  000EA4  A4D8               	btfss	status,2,c
  4468  000EA6  EF57  F007         	goto	u1981
  4469  000EAA  EF59  F007         	goto	u1980
  4470  000EAE                     u1981:
  4471  000EAE  EF6E  F007         	goto	l3410
  4472  000EB2                     u1980:
  4473  000EB2                     l336:
  4474                           
  4475                           ;main.c: 869:             LATCbits.LATC1 = 1;
  4476  000EB2  828B               	bsf	139,1,c	;volatile
  4477  000EB4                     
  4478                           ;main.c: 870:             delay_1ms(Vmotor_Time);
  4479  000EB4  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  4480  000EB8  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4481  000EBC  EC18  F00F         	call	_delay_1ms	;wreg free
  4482  000EC0                     
  4483                           ;main.c: 872:             LATCbits.LATC1 = 0;
  4484  000EC0  928B               	bcf	139,1,c	;volatile
  4485  000EC2                     
  4486                           ;main.c: 873:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4487  000EC2  0E04               	movlw	4
  4488  000EC4  6E42               	movwf	(??_Homing_Again_Manual+1)^0,c
  4489  000EC6  0E0C               	movlw	12
  4490  000EC8  6E41               	movwf	??_Homing_Again_Manual^0,c
  4491  000ECA  0E34               	movlw	52
  4492  000ECC                     u3007:
  4493  000ECC  2EE8               	decfsz	wreg,f,c
  4494  000ECE  D7FE               	bra	u3007
  4495  000ED0  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4496  000ED2  D7FC               	bra	u3007
  4497  000ED4  2E42               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4498  000ED6  D7FA               	bra	u3007
  4499                           
  4500                           ;main.c: 874:         } else if (vibration_mode == 0 && (NUM != 0 || i_RUN_ZERO == 1)) {
  4501  000ED8  EFAE  F007         	goto	l3424
  4502  000EDC                     l3410:
  4503  000EDC  5024               	movf	_vibration_mode^0,w,c
  4504  000EDE  A4D8               	btfss	status,2,c
  4505  000EE0  EF74  F007         	goto	u1991
  4506  000EE4  EF76  F007         	goto	u1990
  4507  000EE8                     u1991:
  4508  000EE8  EFAE  F007         	goto	l3424
  4509  000EEC                     u1990:
  4510  000EEC  500B               	movf	_NUM^0,w,c
  4511  000EEE  100C               	iorwf	(_NUM+1)^0,w,c
  4512  000EF0  A4D8               	btfss	status,2,c
  4513  000EF2  EF7D  F007         	goto	u2001
  4514  000EF6  EF7F  F007         	goto	u2000
  4515  000EFA                     u2001:
  4516  000EFA  EF88  F007         	goto	l340
  4517  000EFE                     u2000:
  4518  000EFE  0409               	decf	_i_RUN_ZERO^0,w,c
  4519  000F00  100A               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4520  000F02  A4D8               	btfss	status,2,c
  4521  000F04  EF86  F007         	goto	u2011
  4522  000F08  EF88  F007         	goto	u2010
  4523  000F0C                     u2011:
  4524  000F0C  EFAE  F007         	goto	l3424
  4525  000F10                     u2010:
  4526  000F10                     l340:
  4527                           
  4528                           ;main.c: 875:             LATCbits.LATC1 = 0;
  4529  000F10  928B               	bcf	139,1,c	;volatile
  4530  000F12                     
  4531                           ;main.c: 876:             if (NUM != 0 || i_RUN_ZERO == 1) {
  4532  000F12  500B               	movf	_NUM^0,w,c
  4533  000F14  100C               	iorwf	(_NUM+1)^0,w,c
  4534  000F16  A4D8               	btfss	status,2,c
  4535  000F18  EF90  F007         	goto	u2021
  4536  000F1C  EF92  F007         	goto	u2020
  4537  000F20                     u2021:
  4538  000F20  EF9B  F007         	goto	l3420
  4539  000F24                     u2020:
  4540  000F24  0409               	decf	_i_RUN_ZERO^0,w,c
  4541  000F26  100A               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4542  000F28  A4D8               	btfss	status,2,c
  4543  000F2A  EF99  F007         	goto	u2031
  4544  000F2E  EF9B  F007         	goto	u2030
  4545  000F32                     u2031:
  4546  000F32  EFA3  F007         	goto	l3422
  4547  000F36                     u2030:
  4548  000F36                     l3420:
  4549                           
  4550                           ;main.c: 877:                 delay_1ms(Vmotor_Time);
  4551  000F36  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  4552  000F3A  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4553  000F3E  EC18  F00F         	call	_delay_1ms	;wreg free
  4554                           
  4555                           ;main.c: 878:             } else {
  4556  000F42  EFAE  F007         	goto	l3424
  4557  000F46                     l3422:
  4558                           
  4559                           ;main.c: 879:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  4560  000F46  0E06               	movlw	6
  4561  000F48  6E42               	movwf	(??_Homing_Again_Manual+1)^0,c
  4562  000F4A  0E13               	movlw	19
  4563  000F4C  6E41               	movwf	??_Homing_Again_Manual^0,c
  4564  000F4E  0EAE               	movlw	174
  4565  000F50                     u3017:
  4566  000F50  2EE8               	decfsz	wreg,f,c
  4567  000F52  D7FE               	bra	u3017
  4568  000F54  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4569  000F56  D7FC               	bra	u3017
  4570  000F58  2E42               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4571  000F5A  D7FA               	bra	u3017
  4572  000F5C                     l3424:
  4573                           
  4574                           ;main.c: 883:         if (Stop == 1)
  4575  000F5C  0427               	decf	_Stop^0,w,c
  4576  000F5E  A4D8               	btfss	status,2,c
  4577  000F60  EFB4  F007         	goto	u2041
  4578  000F64  EFB6  F007         	goto	u2040
  4579  000F68                     u2041:
  4580  000F68  EFE3  F007         	goto	l3438
  4581  000F6C                     u2040:
  4582  000F6C  EF14  F008         	goto	l346
  4583  000F70                     l3428:
  4584                           
  4585                           ;main.c: 887:             i_RUN_ZERO = 2;
  4586  000F70  0E00               	movlw	0
  4587  000F72  6E0A               	movwf	(_i_RUN_ZERO+1)^0,c
  4588  000F74  0E02               	movlw	2
  4589  000F76  6E09               	movwf	_i_RUN_ZERO^0,c
  4590  000F78                     
  4591                           ;main.c: 888:             WriteSTLED316SData(NUM, !vibration_mode);
  4592  000F78  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
  4593  000F7C  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
  4594  000F80  5024               	movf	_vibration_mode^0,w,c
  4595  000F82  B4D8               	btfsc	status,2,c
  4596  000F84  EFC6  F007         	goto	u2051
  4597  000F88  EFC9  F007         	goto	u2050
  4598  000F8C                     u2051:
  4599  000F8C  0E01               	movlw	1
  4600  000F8E  EFCA  F007         	goto	u2060
  4601  000F92                     u2050:
  4602  000F92  0E00               	movlw	0
  4603  000F94                     u2060:
  4604  000F94  6E3A               	movwf	WriteSTLED316SData@v_mode^0,c
  4605  000F96  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
  4606  000F9A                     
  4607                           ;main.c: 889:             _delay((unsigned long)((50)*(8000000/4000.0)));
  4608  000F9A  0E82               	movlw	130
  4609  000F9C  6E41               	movwf	??_Homing_Again_Manual^0,c
  4610  000F9E  0EDE               	movlw	222
  4611  000FA0                     u3027:
  4612  000FA0  2EE8               	decfsz	wreg,f,c
  4613  000FA2  D7FE               	bra	u3027
  4614  000FA4  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4615  000FA6  D7FC               	bra	u3027
  4616  000FA8                     
  4617                           ;main.c: 890:             WriteSTLED316SData(NUM, vibration_mode);
  4618  000FA8  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
  4619  000FAC  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
  4620  000FB0  C024  F03A         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4621  000FB4  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
  4622  000FB8                     
  4623                           ;main.c: 891:             _delay((unsigned long)((50)*(8000000/4000.0)));
  4624  000FB8  0E82               	movlw	130
  4625  000FBA  6E41               	movwf	??_Homing_Again_Manual^0,c
  4626  000FBC  0EDE               	movlw	222
  4627  000FBE                     u3037:
  4628  000FBE  2EE8               	decfsz	wreg,f,c
  4629  000FC0  D7FE               	bra	u3037
  4630  000FC2  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4631  000FC4  D7FC               	bra	u3037
  4632  000FC6                     l3438:
  4633                           
  4634                           ;main.c: 886:         while (!PORTBbits.RB2 && NUM == 0) {
  4635  000FC6  B481               	btfsc	129,2,c	;volatile
  4636  000FC8  EFE8  F007         	goto	u2071
  4637  000FCC  EFEA  F007         	goto	u2070
  4638  000FD0                     u2071:
  4639  000FD0  EFF3  F007         	goto	l3442
  4640  000FD4                     u2070:
  4641  000FD4  500B               	movf	_NUM^0,w,c
  4642  000FD6  100C               	iorwf	(_NUM+1)^0,w,c
  4643  000FD8  B4D8               	btfsc	status,2,c
  4644  000FDA  EFF1  F007         	goto	u2081
  4645  000FDE  EFF3  F007         	goto	u2080
  4646  000FE2                     u2081:
  4647  000FE2  EFB8  F007         	goto	l3428
  4648  000FE6                     u2080:
  4649  000FE6                     l3442:
  4650                           
  4651                           ;main.c: 893:         WriteSTLED316SData(NUM, vibration_mode);
  4652  000FE6  C00B  F038         	movff	_NUM,WriteSTLED316SData@number
  4653  000FEA  C00C  F039         	movff	_NUM+1,WriteSTLED316SData@number+1
  4654  000FEE  C024  F03A         	movff	_vibration_mode,WriteSTLED316SData@v_mode
  4655  000FF2  EC88  F00C         	call	_WriteSTLED316SData	;wreg free
  4656  000FF6                     
  4657                           ;main.c: 894:         _delay((unsigned long)((50)*(8000000/4000.0)));
  4658  000FF6  0E82               	movlw	130
  4659  000FF8  6E41               	movwf	??_Homing_Again_Manual^0,c
  4660  000FFA  0EDE               	movlw	222
  4661  000FFC                     u3047:
  4662  000FFC  2EE8               	decfsz	wreg,f,c
  4663  000FFE  D7FE               	bra	u3047
  4664  001000  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4665  001002  D7FC               	bra	u3047
  4666  001004                     l3446:
  4667                           
  4668                           ;main.c: 828:     while (NUM > 0 || i_RUN_ZERO == 1) {
  4669  001004  500B               	movf	_NUM^0,w,c
  4670  001006  100C               	iorwf	(_NUM+1)^0,w,c
  4671  001008  A4D8               	btfss	status,2,c
  4672  00100A  EF09  F008         	goto	u2091
  4673  00100E  EF0B  F008         	goto	u2090
  4674  001012                     u2091:
  4675  001012  EFA3  F006         	goto	l326
  4676  001016                     u2090:
  4677  001016  0409               	decf	_i_RUN_ZERO^0,w,c
  4678  001018  100A               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4679  00101A  B4D8               	btfsc	status,2,c
  4680  00101C  EF12  F008         	goto	u2101
  4681  001020  EF14  F008         	goto	u2100
  4682  001024                     u2101:
  4683  001024  EFA3  F006         	goto	l326
  4684  001028                     u2100:
  4685  001028                     l346:
  4686                           
  4687                           ;main.c: 897:     LATAbits.LATA2 = 0;
  4688  001028  9489               	bcf	137,2,c	;volatile
  4689  00102A                     
  4690                           ;main.c: 899:     if ((NUM == 0 || Stop == 1) && i_RUN_ZERO == 0) {
  4691  00102A  500B               	movf	_NUM^0,w,c
  4692  00102C  100C               	iorwf	(_NUM+1)^0,w,c
  4693  00102E  B4D8               	btfsc	status,2,c
  4694  001030  EF1C  F008         	goto	u2111
  4695  001034  EF1E  F008         	goto	u2110
  4696  001038                     u2111:
  4697  001038  EF26  F008         	goto	l3454
  4698  00103C                     u2110:
  4699  00103C  0427               	decf	_Stop^0,w,c
  4700  00103E  A4D8               	btfss	status,2,c
  4701  001040  EF24  F008         	goto	u2121
  4702  001044  EF26  F008         	goto	u2120
  4703  001048                     u2121:
  4704  001048  EF4A  F008         	goto	l3466
  4705  00104C                     u2120:
  4706  00104C                     l3454:
  4707  00104C  5009               	movf	_i_RUN_ZERO^0,w,c
  4708  00104E  100A               	iorwf	(_i_RUN_ZERO+1)^0,w,c
  4709  001050  A4D8               	btfss	status,2,c
  4710  001052  EF2D  F008         	goto	u2131
  4711  001056  EF2F  F008         	goto	u2130
  4712  00105A                     u2131:
  4713  00105A  EF4A  F008         	goto	l3466
  4714  00105E                     u2130:
  4715  00105E                     
  4716                           ;main.c: 901:         if (vibration_mode == 1) {
  4717  00105E  0424               	decf	_vibration_mode^0,w,c
  4718  001060  A4D8               	btfss	status,2,c
  4719  001062  EF35  F008         	goto	u2141
  4720  001066  EF37  F008         	goto	u2140
  4721  00106A                     u2141:
  4722  00106A  EF4A  F008         	goto	l3466
  4723  00106E                     u2140:
  4724  00106E                     
  4725                           ;main.c: 902:             LATCbits.LATC1 = 1;
  4726  00106E  828B               	bsf	139,1,c	;volatile
  4727  001070                     
  4728                           ;main.c: 903:             delay_1ms(Vmotor_Time);
  4729  001070  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  4730  001074  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  4731  001078  EC18  F00F         	call	_delay_1ms	;wreg free
  4732  00107C                     
  4733                           ;main.c: 905:             LATCbits.LATC1 = 0;
  4734  00107C  928B               	bcf	139,1,c	;volatile
  4735  00107E                     
  4736                           ;main.c: 906:             _delay((unsigned long)((300)*(8000000/4000.0)));
  4737  00107E  0E04               	movlw	4
  4738  001080  6E42               	movwf	(??_Homing_Again_Manual+1)^0,c
  4739  001082  0E0C               	movlw	12
  4740  001084  6E41               	movwf	??_Homing_Again_Manual^0,c
  4741  001086  0E34               	movlw	52
  4742  001088                     u3057:
  4743  001088  2EE8               	decfsz	wreg,f,c
  4744  00108A  D7FE               	bra	u3057
  4745  00108C  2E41               	decfsz	??_Homing_Again_Manual^0,f,c
  4746  00108E  D7FC               	bra	u3057
  4747  001090  2E42               	decfsz	(??_Homing_Again_Manual+1)^0,f,c
  4748  001092  D7FA               	bra	u3057
  4749  001094                     l3466:
  4750                           
  4751                           ;main.c: 910:     i_RUN_ZERO = 0;
  4752  001094  0E00               	movlw	0
  4753  001096  6E0A               	movwf	(_i_RUN_ZERO+1)^0,c
  4754  001098  0E00               	movlw	0
  4755  00109A  6E09               	movwf	_i_RUN_ZERO^0,c
  4756  00109C                     
  4757                           ;main.c: 911:     NUM = 0;
  4758  00109C  0E00               	movlw	0
  4759  00109E  6E0C               	movwf	(_NUM+1)^0,c
  4760  0010A0  0E00               	movlw	0
  4761  0010A2  6E0B               	movwf	_NUM^0,c
  4762  0010A4                     
  4763                           ;main.c: 912:     OpMode = MANUAL_MODE;
  4764  0010A4  0E00               	movlw	0
  4765  0010A6  6E22               	movwf	_OpMode^0,c	;volatile
  4766  0010A8  0012               	return		;funcret
  4767  0010AA                     __end_of_Homing_Again_Manual:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _WriteSTLED316SData *****************
  4771 ;; Defined at:
  4772 ;;		line 145 in file "Display.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  number          2   14[COMRAM] int 
  4775 ;;  v_mode          1   16[COMRAM] unsigned char 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  NUM_DIG1        2   19[COMRAM] int 
  4778 ;;  NUM_DIG0        2   17[COMRAM] int 
  4779 ;;  data4           1   22[COMRAM] unsigned char 
  4780 ;;  data3           1   21[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        9 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    3
  4797 ;; This function calls:
  4798 ;;		_Get7Seg
  4799 ;;		_STLED316s_SPI_SendData
  4800 ;;		___awdiv
  4801 ;;		___awmod
  4802 ;; This function is called by:
  4803 ;;		_main
  4804 ;;		_Homing_Again_Manual
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text22
  4809  001910                     __ptext22:
  4810                           	callstack 0
  4811  001910                     _WriteSTLED316SData:
  4812                           	callstack 27
  4813  001910                     
  4814                           ;Display.c: 146:     unsigned char data3, data4;;Display.c: 147:     int NUM_DIG0, NUM_D
      +                          IG1;;Display.c: 149:     NUM_DIG0 = (int) number % 10;
  4815  001910  C038  F030         	movff	WriteSTLED316SData@number,___awmod@dividend
  4816  001914  C039  F031         	movff	WriteSTLED316SData@number+1,___awmod@dividend+1
  4817  001918  0E00               	movlw	0
  4818  00191A  6E33               	movwf	(___awmod@divisor+1)^0,c
  4819  00191C  0E0A               	movlw	10
  4820  00191E  6E32               	movwf	___awmod@divisor^0,c
  4821  001920  EC30  F00C         	call	___awmod	;wreg free
  4822  001924  C030  F03B         	movff	?___awmod,WriteSTLED316SData@NUM_DIG0
  4823  001928  C031  F03C         	movff	?___awmod+1,WriteSTLED316SData@NUM_DIG0+1
  4824                           
  4825                           ;Display.c: 150:     NUM_DIG1 = (int) number / 10;
  4826  00192C  C038  F030         	movff	WriteSTLED316SData@number,___awdiv@dividend
  4827  001930  C039  F031         	movff	WriteSTLED316SData@number+1,___awdiv@dividend+1
  4828  001934  0E00               	movlw	0
  4829  001936  6E33               	movwf	(___awdiv@divisor+1)^0,c
  4830  001938  0E0A               	movlw	10
  4831  00193A  6E32               	movwf	___awdiv@divisor^0,c
  4832  00193C  ECCE  F00B         	call	___awdiv	;wreg free
  4833  001940  C030  F03D         	movff	?___awdiv,WriteSTLED316SData@NUM_DIG1
  4834  001944  C031  F03E         	movff	?___awdiv+1,WriteSTLED316SData@NUM_DIG1+1
  4835  001948                     
  4836                           ;Display.c: 152:     LATCbits.LATC4 = 0;
  4837  001948  988B               	bcf	139,4,c	;volatile
  4838                           
  4839                           ;Display.c: 154:     STLED316s_SPI_SendData(0x00);
  4840  00194A  0E00               	movlw	0
  4841  00194C  EC22  F00D         	call	_STLED316s_SPI_SendData
  4842  001950                     
  4843                           ;Display.c: 156:     LATCbits.LATC4 = 1;
  4844  001950  888B               	bsf	139,4,c	;volatile
  4845  001952                     
  4846                           ;Display.c: 158:     LATCbits.LATC4 = 0;
  4847  001952  988B               	bcf	139,4,c	;volatile
  4848                           
  4849                           ;Display.c: 160:     STLED316s_SPI_SendData(0x00);
  4850  001954  0E00               	movlw	0
  4851  001956  EC22  F00D         	call	_STLED316s_SPI_SendData
  4852                           
  4853                           ;Display.c: 162:     data4 = Get7Seg(NUM_DIG1);
  4854  00195A  C03D  F030         	movff	WriteSTLED316SData@NUM_DIG1,Get7Seg@Digit
  4855  00195E  C03E  F031         	movff	WriteSTLED316SData@NUM_DIG1+1,Get7Seg@Digit+1
  4856  001962  EC68  F00B         	call	_Get7Seg	;wreg free
  4857  001966  6E40               	movwf	WriteSTLED316SData@data4^0,c
  4858                           
  4859                           ;Display.c: 163:     data3 = Get7Seg(NUM_DIG0);
  4860  001968  C03B  F030         	movff	WriteSTLED316SData@NUM_DIG0,Get7Seg@Digit
  4861  00196C  C03C  F031         	movff	WriteSTLED316SData@NUM_DIG0+1,Get7Seg@Digit+1
  4862  001970  EC68  F00B         	call	_Get7Seg	;wreg free
  4863  001974  6E3F               	movwf	WriteSTLED316SData@data3^0,c
  4864  001976                     
  4865                           ;Display.c: 165:     if (v_mode) {
  4866  001976  503A               	movf	WriteSTLED316SData@v_mode^0,w,c
  4867  001978  B4D8               	btfsc	status,2,c
  4868  00197A  EFC1  F00C         	goto	u1741
  4869  00197E  EFC3  F00C         	goto	u1740
  4870  001982                     u1741:
  4871  001982  EFCF  F00C         	goto	l3000
  4872  001986                     u1740:
  4873  001986                     
  4874                           ;Display.c: 166:         if (v_mode == 0xFF)
  4875  001986  283A               	incf	WriteSTLED316SData@v_mode^0,w,c
  4876  001988  A4D8               	btfss	status,2,c
  4877  00198A  EFC9  F00C         	goto	u1751
  4878  00198E  EFCB  F00C         	goto	u1750
  4879  001992                     u1751:
  4880  001992  EFCE  F00C         	goto	l2998
  4881  001996                     u1750:
  4882  001996                     
  4883                           ;Display.c: 167:             data4 |= 0x80;
  4884  001996  8E40               	bsf	WriteSTLED316SData@data4^0,7,c
  4885  001998  EFCF  F00C         	goto	l3000
  4886  00199C                     l2998:
  4887                           
  4888                           ;Display.c: 169:             data3 |= 0x80;
  4889  00199C  8E3F               	bsf	WriteSTLED316SData@data3^0,7,c
  4890  00199E                     l3000:
  4891                           
  4892                           ;Display.c: 172:     STLED316s_SPI_SendData(data4);
  4893  00199E  5040               	movf	WriteSTLED316SData@data4^0,w,c
  4894  0019A0  EC22  F00D         	call	_STLED316s_SPI_SendData
  4895  0019A4                     
  4896                           ;Display.c: 173:     STLED316s_SPI_SendData(data3);
  4897  0019A4  503F               	movf	WriteSTLED316SData@data3^0,w,c
  4898  0019A6  EC22  F00D         	call	_STLED316s_SPI_SendData
  4899  0019AA                     
  4900                           ;Display.c: 175:     LATCbits.LATC4 = 1;
  4901  0019AA  888B               	bsf	139,4,c	;volatile
  4902  0019AC                     
  4903                           ;Display.c: 177:     LATCbits.LATC4 = 0;
  4904  0019AC  988B               	bcf	139,4,c	;volatile
  4905  0019AE                     
  4906                           ;Display.c: 179:     STLED316s_SPI_SendData(0x0D);
  4907  0019AE  0E0D               	movlw	13
  4908  0019B0  EC22  F00D         	call	_STLED316s_SPI_SendData
  4909  0019B4                     
  4910                           ;Display.c: 181:     LATCbits.LATC4 = 1;
  4911  0019B4  888B               	bsf	139,4,c	;volatile
  4912  0019B6  0012               	return		;funcret
  4913  0019B8                     __end_of_WriteSTLED316SData:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function ___awmod *****************
  4917 ;; Defined at:
  4918 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  dividend        2    6[COMRAM] int 
  4921 ;;  divisor         2    8[COMRAM] int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  sign            1   11[COMRAM] unsigned char 
  4924 ;;  counter         1   10[COMRAM] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2    6[COMRAM] int 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:        6 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    2
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_WriteSTLED316SData
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text23
  4949  001860                     __ptext23:
  4950                           	callstack 0
  4951  001860                     ___awmod:
  4952                           	callstack 27
  4953  001860  0E00               	movlw	0
  4954  001862  6E35               	movwf	___awmod@sign^0,c
  4955  001864  BE31               	btfsc	(___awmod@dividend+1)^0,7,c
  4956  001866  EF39  F00C         	goto	u1680
  4957  00186A  EF37  F00C         	goto	u1681
  4958  00186E                     u1681:
  4959  00186E  EF3F  F00C         	goto	l2956
  4960  001872                     u1680:
  4961  001872  6C30               	negf	___awmod@dividend^0,c
  4962  001874  1E31               	comf	(___awmod@dividend+1)^0,f,c
  4963  001876  B0D8               	btfsc	status,0,c
  4964  001878  2A31               	incf	(___awmod@dividend+1)^0,f,c
  4965  00187A  0E01               	movlw	1
  4966  00187C  6E35               	movwf	___awmod@sign^0,c
  4967  00187E                     l2956:
  4968  00187E  BE33               	btfsc	(___awmod@divisor+1)^0,7,c
  4969  001880  EF46  F00C         	goto	u1690
  4970  001884  EF44  F00C         	goto	u1691
  4971  001888                     u1691:
  4972  001888  EF4A  F00C         	goto	l2960
  4973  00188C                     u1690:
  4974  00188C  6C32               	negf	___awmod@divisor^0,c
  4975  00188E  1E33               	comf	(___awmod@divisor+1)^0,f,c
  4976  001890  B0D8               	btfsc	status,0,c
  4977  001892  2A33               	incf	(___awmod@divisor+1)^0,f,c
  4978  001894                     l2960:
  4979  001894  5032               	movf	___awmod@divisor^0,w,c
  4980  001896  1033               	iorwf	(___awmod@divisor+1)^0,w,c
  4981  001898  B4D8               	btfsc	status,2,c
  4982  00189A  EF51  F00C         	goto	u1701
  4983  00189E  EF53  F00C         	goto	u1700
  4984  0018A2                     u1701:
  4985  0018A2  EF77  F00C         	goto	l2976
  4986  0018A6                     u1700:
  4987  0018A6  0E01               	movlw	1
  4988  0018A8  6E34               	movwf	___awmod@counter^0,c
  4989  0018AA  EF5B  F00C         	goto	l2966
  4990  0018AE                     l2964:
  4991  0018AE  90D8               	bcf	status,0,c
  4992  0018B0  3632               	rlcf	___awmod@divisor^0,f,c
  4993  0018B2  3633               	rlcf	(___awmod@divisor+1)^0,f,c
  4994  0018B4  2A34               	incf	___awmod@counter^0,f,c
  4995  0018B6                     l2966:
  4996  0018B6  AE33               	btfss	(___awmod@divisor+1)^0,7,c
  4997  0018B8  EF60  F00C         	goto	u1711
  4998  0018BC  EF62  F00C         	goto	u1710
  4999  0018C0                     u1711:
  5000  0018C0  EF57  F00C         	goto	l2964
  5001  0018C4                     u1710:
  5002  0018C4                     l2968:
  5003  0018C4  5032               	movf	___awmod@divisor^0,w,c
  5004  0018C6  5C30               	subwf	___awmod@dividend^0,w,c
  5005  0018C8  5033               	movf	(___awmod@divisor+1)^0,w,c
  5006  0018CA  5831               	subwfb	(___awmod@dividend+1)^0,w,c
  5007  0018CC  A0D8               	btfss	status,0,c
  5008  0018CE  EF6B  F00C         	goto	u1721
  5009  0018D2  EF6D  F00C         	goto	u1720
  5010  0018D6                     u1721:
  5011  0018D6  EF71  F00C         	goto	l2972
  5012  0018DA                     u1720:
  5013  0018DA  5032               	movf	___awmod@divisor^0,w,c
  5014  0018DC  5E30               	subwf	___awmod@dividend^0,f,c
  5015  0018DE  5033               	movf	(___awmod@divisor+1)^0,w,c
  5016  0018E0  5A31               	subwfb	(___awmod@dividend+1)^0,f,c
  5017  0018E2                     l2972:
  5018  0018E2  90D8               	bcf	status,0,c
  5019  0018E4  3233               	rrcf	(___awmod@divisor+1)^0,f,c
  5020  0018E6  3232               	rrcf	___awmod@divisor^0,f,c
  5021  0018E8  2E34               	decfsz	___awmod@counter^0,f,c
  5022  0018EA  EF62  F00C         	goto	l2968
  5023  0018EE                     l2976:
  5024  0018EE  5035               	movf	___awmod@sign^0,w,c
  5025  0018F0  B4D8               	btfsc	status,2,c
  5026  0018F2  EF7D  F00C         	goto	u1731
  5027  0018F6  EF7F  F00C         	goto	u1730
  5028  0018FA                     u1731:
  5029  0018FA  EF83  F00C         	goto	l2980
  5030  0018FE                     u1730:
  5031  0018FE  6C30               	negf	___awmod@dividend^0,c
  5032  001900  1E31               	comf	(___awmod@dividend+1)^0,f,c
  5033  001902  B0D8               	btfsc	status,0,c
  5034  001904  2A31               	incf	(___awmod@dividend+1)^0,f,c
  5035  001906                     l2980:
  5036  001906  C030  F030         	movff	___awmod@dividend,?___awmod
  5037  00190A  C031  F031         	movff	___awmod@dividend+1,?___awmod+1
  5038  00190E  0012               	return		;funcret
  5039  001910                     __end_of___awmod:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function ___awdiv *****************
  5043 ;; Defined at:
  5044 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  dividend        2    6[COMRAM] int 
  5047 ;;  divisor         2    8[COMRAM] int 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  quotient        2   12[COMRAM] int 
  5050 ;;  sign            1   11[COMRAM] unsigned char 
  5051 ;;  counter         1   10[COMRAM] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  2    6[COMRAM] int 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;Total ram usage:        8 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    2
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_WriteSTLED316SData
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text24
  5076  00179C                     __ptext24:
  5077                           	callstack 0
  5078  00179C                     ___awdiv:
  5079                           	callstack 27
  5080  00179C  0E00               	movlw	0
  5081  00179E  6E35               	movwf	___awdiv@sign^0,c
  5082  0017A0  BE33               	btfsc	(___awdiv@divisor+1)^0,7,c
  5083  0017A2  EFD7  F00B         	goto	u1620
  5084  0017A6  EFD5  F00B         	goto	u1621
  5085  0017AA                     u1621:
  5086  0017AA  EFDD  F00B         	goto	l2912
  5087  0017AE                     u1620:
  5088  0017AE  6C32               	negf	___awdiv@divisor^0,c
  5089  0017B0  1E33               	comf	(___awdiv@divisor+1)^0,f,c
  5090  0017B2  B0D8               	btfsc	status,0,c
  5091  0017B4  2A33               	incf	(___awdiv@divisor+1)^0,f,c
  5092  0017B6  0E01               	movlw	1
  5093  0017B8  6E35               	movwf	___awdiv@sign^0,c
  5094  0017BA                     l2912:
  5095  0017BA  BE31               	btfsc	(___awdiv@dividend+1)^0,7,c
  5096  0017BC  EFE4  F00B         	goto	u1630
  5097  0017C0  EFE2  F00B         	goto	u1631
  5098  0017C4                     u1631:
  5099  0017C4  EFEA  F00B         	goto	l2918
  5100  0017C8                     u1630:
  5101  0017C8  6C30               	negf	___awdiv@dividend^0,c
  5102  0017CA  1E31               	comf	(___awdiv@dividend+1)^0,f,c
  5103  0017CC  B0D8               	btfsc	status,0,c
  5104  0017CE  2A31               	incf	(___awdiv@dividend+1)^0,f,c
  5105  0017D0  0E01               	movlw	1
  5106  0017D2  1A35               	xorwf	___awdiv@sign^0,f,c
  5107  0017D4                     l2918:
  5108  0017D4  0E00               	movlw	0
  5109  0017D6  6E37               	movwf	(___awdiv@quotient+1)^0,c
  5110  0017D8  0E00               	movlw	0
  5111  0017DA  6E36               	movwf	___awdiv@quotient^0,c
  5112  0017DC  5032               	movf	___awdiv@divisor^0,w,c
  5113  0017DE  1033               	iorwf	(___awdiv@divisor+1)^0,w,c
  5114  0017E0  B4D8               	btfsc	status,2,c
  5115  0017E2  EFF5  F00B         	goto	u1641
  5116  0017E6  EFF7  F00B         	goto	u1640
  5117  0017EA                     u1641:
  5118  0017EA  EF1F  F00C         	goto	l2940
  5119  0017EE                     u1640:
  5120  0017EE  0E01               	movlw	1
  5121  0017F0  6E34               	movwf	___awdiv@counter^0,c
  5122  0017F2  EFFF  F00B         	goto	l2926
  5123  0017F6                     l2924:
  5124  0017F6  90D8               	bcf	status,0,c
  5125  0017F8  3632               	rlcf	___awdiv@divisor^0,f,c
  5126  0017FA  3633               	rlcf	(___awdiv@divisor+1)^0,f,c
  5127  0017FC  2A34               	incf	___awdiv@counter^0,f,c
  5128  0017FE                     l2926:
  5129  0017FE  AE33               	btfss	(___awdiv@divisor+1)^0,7,c
  5130  001800  EF04  F00C         	goto	u1651
  5131  001804  EF06  F00C         	goto	u1650
  5132  001808                     u1651:
  5133  001808  EFFB  F00B         	goto	l2924
  5134  00180C                     u1650:
  5135  00180C                     l2928:
  5136  00180C  90D8               	bcf	status,0,c
  5137  00180E  3636               	rlcf	___awdiv@quotient^0,f,c
  5138  001810  3637               	rlcf	(___awdiv@quotient+1)^0,f,c
  5139  001812  5032               	movf	___awdiv@divisor^0,w,c
  5140  001814  5C30               	subwf	___awdiv@dividend^0,w,c
  5141  001816  5033               	movf	(___awdiv@divisor+1)^0,w,c
  5142  001818  5831               	subwfb	(___awdiv@dividend+1)^0,w,c
  5143  00181A  A0D8               	btfss	status,0,c
  5144  00181C  EF12  F00C         	goto	u1661
  5145  001820  EF14  F00C         	goto	u1660
  5146  001824                     u1661:
  5147  001824  EF19  F00C         	goto	l2936
  5148  001828                     u1660:
  5149  001828  5032               	movf	___awdiv@divisor^0,w,c
  5150  00182A  5E30               	subwf	___awdiv@dividend^0,f,c
  5151  00182C  5033               	movf	(___awdiv@divisor+1)^0,w,c
  5152  00182E  5A31               	subwfb	(___awdiv@dividend+1)^0,f,c
  5153  001830  8036               	bsf	___awdiv@quotient^0,0,c
  5154  001832                     l2936:
  5155  001832  90D8               	bcf	status,0,c
  5156  001834  3233               	rrcf	(___awdiv@divisor+1)^0,f,c
  5157  001836  3232               	rrcf	___awdiv@divisor^0,f,c
  5158  001838  2E34               	decfsz	___awdiv@counter^0,f,c
  5159  00183A  EF06  F00C         	goto	l2928
  5160  00183E                     l2940:
  5161  00183E  5035               	movf	___awdiv@sign^0,w,c
  5162  001840  B4D8               	btfsc	status,2,c
  5163  001842  EF25  F00C         	goto	u1671
  5164  001846  EF27  F00C         	goto	u1670
  5165  00184A                     u1671:
  5166  00184A  EF2B  F00C         	goto	l2944
  5167  00184E                     u1670:
  5168  00184E  6C36               	negf	___awdiv@quotient^0,c
  5169  001850  1E37               	comf	(___awdiv@quotient+1)^0,f,c
  5170  001852  B0D8               	btfsc	status,0,c
  5171  001854  2A37               	incf	(___awdiv@quotient+1)^0,f,c
  5172  001856                     l2944:
  5173  001856  C036  F030         	movff	___awdiv@quotient,?___awdiv
  5174  00185A  C037  F031         	movff	___awdiv@quotient+1,?___awdiv+1
  5175  00185E  0012               	return		;funcret
  5176  001860                     __end_of___awdiv:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _Get7Seg *****************
  5180 ;; Defined at:
  5181 ;;		line 104 in file "Display.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  Digit           2    6[COMRAM] int 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  Data            1   10[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      unsigned char 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        5 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    2
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_WriteSTLED316SData
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text25
  5210  0016D0                     __ptext25:
  5211                           	callstack 0
  5212  0016D0                     _Get7Seg:
  5213                           	callstack 27
  5214  0016D0                     
  5215                           ;Display.c: 105:     unsigned char Data;;Display.c: 107:     switch (Digit) {
  5216  0016D0  EF96  F00B         	goto	l2822
  5217  0016D4                     l2798:
  5218                           
  5219                           ;Display.c: 109:             Data = 0x3F;
  5220  0016D4  0E3F               	movlw	63
  5221  0016D6  6E34               	movwf	Get7Seg@Data^0,c
  5222                           
  5223                           ;Display.c: 110:             break;
  5224  0016D8  EFCC  F00B         	goto	l2824
  5225  0016DC                     l2800:
  5226                           
  5227                           ;Display.c: 112:             Data = 0x06;
  5228  0016DC  0E06               	movlw	6
  5229  0016DE  6E34               	movwf	Get7Seg@Data^0,c
  5230                           
  5231                           ;Display.c: 113:             break;
  5232  0016E0  EFCC  F00B         	goto	l2824
  5233  0016E4                     l2802:
  5234                           
  5235                           ;Display.c: 115:             Data = 0x5B;
  5236  0016E4  0E5B               	movlw	91
  5237  0016E6  6E34               	movwf	Get7Seg@Data^0,c
  5238                           
  5239                           ;Display.c: 116:             break;
  5240  0016E8  EFCC  F00B         	goto	l2824
  5241  0016EC                     l2804:
  5242                           
  5243                           ;Display.c: 118:             Data = 0x4F;
  5244  0016EC  0E4F               	movlw	79
  5245  0016EE  6E34               	movwf	Get7Seg@Data^0,c
  5246                           
  5247                           ;Display.c: 119:             break;
  5248  0016F0  EFCC  F00B         	goto	l2824
  5249  0016F4                     l2806:
  5250                           
  5251                           ;Display.c: 121:             Data = 0x66;
  5252  0016F4  0E66               	movlw	102
  5253  0016F6  6E34               	movwf	Get7Seg@Data^0,c
  5254                           
  5255                           ;Display.c: 122:             break;
  5256  0016F8  EFCC  F00B         	goto	l2824
  5257  0016FC                     l2808:
  5258                           
  5259                           ;Display.c: 124:             Data = 0x6D;
  5260  0016FC  0E6D               	movlw	109
  5261  0016FE  6E34               	movwf	Get7Seg@Data^0,c
  5262                           
  5263                           ;Display.c: 125:             break;
  5264  001700  EFCC  F00B         	goto	l2824
  5265  001704                     l2810:
  5266                           
  5267                           ;Display.c: 127:             Data = 0x7D;
  5268  001704  0E7D               	movlw	125
  5269  001706  6E34               	movwf	Get7Seg@Data^0,c
  5270                           
  5271                           ;Display.c: 128:             break;
  5272  001708  EFCC  F00B         	goto	l2824
  5273  00170C                     l2812:
  5274                           
  5275                           ;Display.c: 130:             Data = 0x07;
  5276  00170C  0E07               	movlw	7
  5277  00170E  6E34               	movwf	Get7Seg@Data^0,c
  5278                           
  5279                           ;Display.c: 131:             break;
  5280  001710  EFCC  F00B         	goto	l2824
  5281  001714                     l2814:
  5282                           
  5283                           ;Display.c: 133:             Data = 0x7F;
  5284  001714  0E7F               	movlw	127
  5285  001716  6E34               	movwf	Get7Seg@Data^0,c
  5286                           
  5287                           ;Display.c: 134:             break;
  5288  001718  EFCC  F00B         	goto	l2824
  5289  00171C                     l2816:
  5290                           
  5291                           ;Display.c: 136:             Data = 0x6F;
  5292  00171C  0E6F               	movlw	111
  5293  00171E  6E34               	movwf	Get7Seg@Data^0,c
  5294                           
  5295                           ;Display.c: 137:             break;
  5296  001720  EFCC  F00B         	goto	l2824
  5297  001724                     l2818:
  5298                           
  5299                           ;Display.c: 139:             Data = 0x00;
  5300  001724  0E00               	movlw	0
  5301  001726  6E34               	movwf	Get7Seg@Data^0,c
  5302                           
  5303                           ;Display.c: 140:             break;
  5304  001728  EFCC  F00B         	goto	l2824
  5305  00172C                     l2822:
  5306  00172C  C030  F032         	movff	Get7Seg@Digit,??_Get7Seg
  5307  001730  C031  F033         	movff	Get7Seg@Digit+1,??_Get7Seg+1
  5308                           
  5309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5310                           ; Switch size 1, requested type "simple"
  5311                           ; Number of cases is 1, Range of values is 0 to 0
  5312                           ; switch strategies available:
  5313                           ; Name         Instructions Cycles
  5314                           ; simple_byte            4     3 (average)
  5315                           ;	Chosen strategy is simple_byte
  5316  001734  5033               	movf	(??_Get7Seg+1)^0,w,c
  5317  001736  0A00               	xorlw	0	; case 0
  5318  001738  B4D8               	btfsc	status,2,c
  5319  00173A  EFA1  F00B         	goto	l4454
  5320  00173E  EF92  F00B         	goto	l2818
  5321  001742                     l4454:
  5322                           
  5323                           ; Switch size 1, requested type "simple"
  5324                           ; Number of cases is 10, Range of values is 0 to 9
  5325                           ; switch strategies available:
  5326                           ; Name         Instructions Cycles
  5327                           ; simple_byte           31    16 (average)
  5328                           ;	Chosen strategy is simple_byte
  5329  001742  5032               	movf	??_Get7Seg^0,w,c
  5330  001744  0A00               	xorlw	0	; case 0
  5331  001746  B4D8               	btfsc	status,2,c
  5332  001748  EF6A  F00B         	goto	l2798
  5333  00174C  0A01               	xorlw	1	; case 1
  5334  00174E  B4D8               	btfsc	status,2,c
  5335  001750  EF6E  F00B         	goto	l2800
  5336  001754  0A03               	xorlw	3	; case 2
  5337  001756  B4D8               	btfsc	status,2,c
  5338  001758  EF72  F00B         	goto	l2802
  5339  00175C  0A01               	xorlw	1	; case 3
  5340  00175E  B4D8               	btfsc	status,2,c
  5341  001760  EF76  F00B         	goto	l2804
  5342  001764  0A07               	xorlw	7	; case 4
  5343  001766  B4D8               	btfsc	status,2,c
  5344  001768  EF7A  F00B         	goto	l2806
  5345  00176C  0A01               	xorlw	1	; case 5
  5346  00176E  B4D8               	btfsc	status,2,c
  5347  001770  EF7E  F00B         	goto	l2808
  5348  001774  0A03               	xorlw	3	; case 6
  5349  001776  B4D8               	btfsc	status,2,c
  5350  001778  EF82  F00B         	goto	l2810
  5351  00177C  0A01               	xorlw	1	; case 7
  5352  00177E  B4D8               	btfsc	status,2,c
  5353  001780  EF86  F00B         	goto	l2812
  5354  001784  0A0F               	xorlw	15	; case 8
  5355  001786  B4D8               	btfsc	status,2,c
  5356  001788  EF8A  F00B         	goto	l2814
  5357  00178C  0A01               	xorlw	1	; case 9
  5358  00178E  B4D8               	btfsc	status,2,c
  5359  001790  EF8E  F00B         	goto	l2816
  5360  001794  EF92  F00B         	goto	l2818
  5361  001798                     l2824:
  5362                           
  5363                           ;Display.c: 142:     return (Data);
  5364  001798  5034               	movf	Get7Seg@Data^0,w,c
  5365  00179A  0012               	return		;funcret
  5366  00179C                     __end_of_Get7Seg:
  5367                           	callstack 0
  5368                           
  5369 ;; *************** function _Homing_Again_Auto *****************
  5370 ;; Defined at:
  5371 ;;		line 919 in file "main.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      void 
  5378 ;; Registers used:
  5379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;Total ram usage:        2 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    4
  5392 ;; This function calls:
  5393 ;;		_AD_capture_BattVoltage
  5394 ;;		_MotorBREAK
  5395 ;;		_MotorON
  5396 ;;		_Read_IR
  5397 ;;		_WriteSTLED316SErr
  5398 ;;		_WriteSTLED316SMode
  5399 ;;		_delay_1ms
  5400 ;;		_readWeighingData
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text26
  5407  0010AA                     __ptext26:
  5408                           	callstack 0
  5409  0010AA                     _Homing_Again_Auto:
  5410                           	callstack 26
  5411  0010AA                     
  5412                           ;main.c: 921:     IR_SENSORF = 0;
  5413  0010AA  0E00               	movlw	0
  5414  0010AC  6E04               	movwf	(_IR_SENSORF+1)^0,c
  5415  0010AE  0E00               	movlw	0
  5416  0010B0  6E03               	movwf	_IR_SENSORF^0,c
  5417  0010B2                     
  5418                           ;main.c: 922:     WriteSTLED316SMode('A');
  5419  0010B2  0E41               	movlw	65
  5420  0010B4  EC74  F00A         	call	_WriteSTLED316SMode
  5421  0010B8                     
  5422                           ;main.c: 924:     if (vibration_mode == 1) {
  5423  0010B8  0424               	decf	_vibration_mode^0,w,c
  5424  0010BA  A4D8               	btfss	status,2,c
  5425  0010BC  EF62  F008         	goto	u2151
  5426  0010C0  EF64  F008         	goto	u2150
  5427  0010C4                     u2151:
  5428  0010C4  EF79  F008         	goto	l359
  5429  0010C8                     u2150:
  5430  0010C8                     
  5431                           ;main.c: 925:         LATCbits.LATC1 = 1;
  5432  0010C8  828B               	bsf	139,1,c	;volatile
  5433  0010CA                     
  5434                           ;main.c: 926:         delay_1ms(Vmotor_Time);
  5435  0010CA  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  5436  0010CE  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5437  0010D2  EC18  F00F         	call	_delay_1ms	;wreg free
  5438  0010D6                     
  5439                           ;main.c: 927:         LATCbits.LATC1 = 0;
  5440  0010D6  928B               	bcf	139,1,c	;volatile
  5441  0010D8                     l3484:
  5442                           
  5443                           ;main.c: 928:         _delay((unsigned long)((300)*(8000000/4000.0)));
  5444  0010D8  0E04               	movlw	4
  5445  0010DA  6E3A               	movwf	(??_Homing_Again_Auto+1)^0,c
  5446  0010DC  0E0C               	movlw	12
  5447  0010DE  6E39               	movwf	??_Homing_Again_Auto^0,c
  5448  0010E0  0E34               	movlw	52
  5449  0010E2                     u3067:
  5450  0010E2  2EE8               	decfsz	wreg,f,c
  5451  0010E4  D7FE               	bra	u3067
  5452  0010E6  2E39               	decfsz	??_Homing_Again_Auto^0,f,c
  5453  0010E8  D7FC               	bra	u3067
  5454  0010EA  2E3A               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5455  0010EC  D7FA               	bra	u3067
  5456                           
  5457                           ;main.c: 929:     } else {
  5458  0010EE  EF7C  F008         	goto	l3488
  5459  0010F2                     l359:
  5460                           
  5461                           ;main.c: 930:         LATCbits.LATC1 = 0;
  5462  0010F2  928B               	bcf	139,1,c	;volatile
  5463  0010F4  EF6C  F008         	goto	l3484
  5464  0010F8                     l3488:
  5465                           
  5466                           ;main.c: 934:     LATAbits.LATA2 = 1;
  5467  0010F8  8489               	bsf	137,2,c	;volatile
  5468                           
  5469                           ;main.c: 936:     while (Stop == 0) {
  5470  0010FA  EF2C  F009         	goto	l3546
  5471  0010FE                     l362:
  5472  0010FE  0004               	clrwdt		;# 
  5473  001100                     
  5474                           ;main.c: 938:         readWeighingData();
  5475  001100  ECCF  F00D         	call	_readWeighingData	;wreg free
  5476  001104                     
  5477                           ;main.c: 939:         AD_capture_BattVoltage();
  5478  001104  EC6B  F00E         	call	_AD_capture_BattVoltage	;wreg free
  5479  001108                     
  5480                           ;main.c: 940:         delay_1ms(Motor_Pause_Time);
  5481  001108  C00D  F030         	movff	_Motor_Pause_Time,delay_1ms@time
  5482  00110C  C00E  F031         	movff	_Motor_Pause_Time+1,delay_1ms@time+1
  5483  001110  EC18  F00F         	call	_delay_1ms	;wreg free
  5484  001114                     
  5485                           ;main.c: 941:         MotorON();
  5486  001114  ECC3  F00F         	call	_MotorON	;wreg free
  5487  001118                     
  5488                           ;main.c: 942:         _delay((unsigned long)((350)*(8000000/4000.0)));
  5489  001118  0E04               	movlw	4
  5490  00111A  6E3A               	movwf	(??_Homing_Again_Auto+1)^0,c
  5491  00111C  0E8E               	movlw	142
  5492  00111E  6E39               	movwf	??_Homing_Again_Auto^0,c
  5493  001120  0E12               	movlw	18
  5494  001122                     u3077:
  5495  001122  2EE8               	decfsz	wreg,f,c
  5496  001124  D7FE               	bra	u3077
  5497  001126  2E39               	decfsz	??_Homing_Again_Auto^0,f,c
  5498  001128  D7FC               	bra	u3077
  5499  00112A  2E3A               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5500  00112C  D7FA               	bra	u3077
  5501  00112E  D000               	nop2	
  5502  001130                     
  5503                           ;main.c: 944:         errorcounter = 30;
  5504  001130  0E1E               	movlw	30
  5505  001132  6E4A               	movwf	_errorcounter^0,c	;volatile
  5506  001134  0E00               	movlw	0
  5507  001136  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  5508  001138  0E00               	movlw	0
  5509  00113A  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  5510  00113C  0E00               	movlw	0
  5511  00113E  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  5512  001140                     l3502:
  5513                           
  5514                           ;main.c: 947:             IR_SENSORF = Read_IR();
  5515  001140  EC67  F00F         	call	_Read_IR	;wreg free
  5516  001144  C030  F003         	movff	?_Read_IR,_IR_SENSORF
  5517  001148  C031  F004         	movff	?_Read_IR+1,_IR_SENSORF+1
  5518  00114C                     
  5519                           ;main.c: 948:             if (errorcounter == 0) {
  5520  00114C  504A               	movf	_errorcounter^0,w,c	;volatile
  5521  00114E  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5522  001150  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5523  001152  104D               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5524  001154  A4D8               	btfss	status,2,c
  5525  001156  EFAF  F008         	goto	u2161
  5526  00115A  EFB1  F008         	goto	u2160
  5527  00115E                     u2161:
  5528  00115E  EFB6  F008         	goto	l3510
  5529  001162                     u2160:
  5530  001162                     
  5531                           ;main.c: 949:                 WriteSTLED316SErr('1');
  5532  001162  0E31               	movlw	49
  5533  001164  ECF4  F00A         	call	_WriteSTLED316SErr
  5534  001168                     
  5535                           ;main.c: 950:                 MotorBREAK();
  5536  001168  ECC8  F00F         	call	_MotorBREAK	;wreg free
  5537  00116C                     l3510:
  5538                           
  5539                           ;main.c: 952:         } while (IR_SENSORF != 0);
  5540  00116C  5003               	movf	_IR_SENSORF^0,w,c
  5541  00116E  1004               	iorwf	(_IR_SENSORF+1)^0,w,c
  5542  001170  A4D8               	btfss	status,2,c
  5543  001172  EFBD  F008         	goto	u2171
  5544  001176  EFBF  F008         	goto	u2170
  5545  00117A                     u2171:
  5546  00117A  EFA0  F008         	goto	l3502
  5547  00117E                     u2170:
  5548  00117E                     
  5549                           ;main.c: 954:         _delay((unsigned long)((30)*(8000000/4000.0)));
  5550  00117E  0E4E               	movlw	78
  5551  001180  6E39               	movwf	??_Homing_Again_Auto^0,c
  5552  001182  0EEB               	movlw	235
  5553  001184                     u3087:
  5554  001184  2EE8               	decfsz	wreg,f,c
  5555  001186  D7FE               	bra	u3087
  5556  001188  2E39               	decfsz	??_Homing_Again_Auto^0,f,c
  5557  00118A  D7FC               	bra	u3087
  5558  00118C  F000               	nop	
  5559  00118E                     
  5560                           ;main.c: 955:         errorcounter = 30;
  5561  00118E  0E1E               	movlw	30
  5562  001190  6E4A               	movwf	_errorcounter^0,c	;volatile
  5563  001192  0E00               	movlw	0
  5564  001194  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  5565  001196  0E00               	movlw	0
  5566  001198  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  5567  00119A  0E00               	movlw	0
  5568  00119C  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  5569  00119E                     l3516:
  5570                           
  5571                           ;main.c: 958:             IR_SENSORF = Read_IR();
  5572  00119E  EC67  F00F         	call	_Read_IR	;wreg free
  5573  0011A2  C030  F003         	movff	?_Read_IR,_IR_SENSORF
  5574  0011A6  C031  F004         	movff	?_Read_IR+1,_IR_SENSORF+1
  5575  0011AA                     
  5576                           ;main.c: 959:             if (errorcounter == 0) {
  5577  0011AA  504A               	movf	_errorcounter^0,w,c	;volatile
  5578  0011AC  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  5579  0011AE  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  5580  0011B0  104D               	iorwf	(_errorcounter+3)^0,w,c	;volatile
  5581  0011B2  A4D8               	btfss	status,2,c
  5582  0011B4  EFDE  F008         	goto	u2181
  5583  0011B8  EFE0  F008         	goto	u2180
  5584  0011BC                     u2181:
  5585  0011BC  EFE5  F008         	goto	l3524
  5586  0011C0                     u2180:
  5587  0011C0                     
  5588                           ;main.c: 960:                 WriteSTLED316SErr('2');
  5589  0011C0  0E32               	movlw	50
  5590  0011C2  ECF4  F00A         	call	_WriteSTLED316SErr
  5591  0011C6                     
  5592                           ;main.c: 961:                 MotorBREAK();
  5593  0011C6  ECC8  F00F         	call	_MotorBREAK	;wreg free
  5594  0011CA                     l3524:
  5595                           
  5596                           ;main.c: 963:         } while (IR_SENSORF != 1);
  5597  0011CA  0403               	decf	_IR_SENSORF^0,w,c
  5598  0011CC  1004               	iorwf	(_IR_SENSORF+1)^0,w,c
  5599  0011CE  A4D8               	btfss	status,2,c
  5600  0011D0  EFEC  F008         	goto	u2191
  5601  0011D4  EFEE  F008         	goto	u2190
  5602  0011D8                     u2191:
  5603  0011D8  EFCF  F008         	goto	l3516
  5604  0011DC                     u2190:
  5605  0011DC                     
  5606                           ;main.c: 965:         errorcounter = 30;
  5607  0011DC  0E1E               	movlw	30
  5608  0011DE  6E4A               	movwf	_errorcounter^0,c	;volatile
  5609  0011E0  0E00               	movlw	0
  5610  0011E2  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  5611  0011E4  0E00               	movlw	0
  5612  0011E6  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  5613  0011E8  0E00               	movlw	0
  5614  0011EA  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  5615  0011EC                     
  5616                           ;main.c: 967:         delay_1ms(Motor_Stop_Delay_Time);
  5617  0011EC  C011  F030         	movff	_Motor_Stop_Delay_Time,delay_1ms@time
  5618  0011F0  C012  F031         	movff	_Motor_Stop_Delay_Time+1,delay_1ms@time+1
  5619  0011F4  EC18  F00F         	call	_delay_1ms	;wreg free
  5620  0011F8                     
  5621                           ;main.c: 968:         MotorBREAK();
  5622  0011F8  ECC8  F00F         	call	_MotorBREAK	;wreg free
  5623                           
  5624                           ;main.c: 970:         if (vibration_mode == 1) {
  5625  0011FC  0424               	decf	_vibration_mode^0,w,c
  5626  0011FE  A4D8               	btfss	status,2,c
  5627  001200  EF04  F009         	goto	u2201
  5628  001204  EF06  F009         	goto	u2200
  5629  001208                     u2201:
  5630  001208  EF1B  F009         	goto	l369
  5631  00120C                     u2200:
  5632  00120C                     
  5633                           ;main.c: 971:             LATCbits.LATC1 = 1;
  5634  00120C  828B               	bsf	139,1,c	;volatile
  5635  00120E                     
  5636                           ;main.c: 972:             delay_1ms(Vmotor_Time);
  5637  00120E  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  5638  001212  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5639  001216  EC18  F00F         	call	_delay_1ms	;wreg free
  5640  00121A                     
  5641                           ;main.c: 974:             LATCbits.LATC1 = 0;
  5642  00121A  928B               	bcf	139,1,c	;volatile
  5643  00121C                     
  5644                           ;main.c: 975:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5645  00121C  0E04               	movlw	4
  5646  00121E  6E3A               	movwf	(??_Homing_Again_Auto+1)^0,c
  5647  001220  0E0C               	movlw	12
  5648  001222  6E39               	movwf	??_Homing_Again_Auto^0,c
  5649  001224  0E34               	movlw	52
  5650  001226                     u3097:
  5651  001226  2EE8               	decfsz	wreg,f,c
  5652  001228  D7FE               	bra	u3097
  5653  00122A  2E39               	decfsz	??_Homing_Again_Auto^0,f,c
  5654  00122C  D7FC               	bra	u3097
  5655  00122E  2E3A               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5656  001230  D7FA               	bra	u3097
  5657                           
  5658                           ;main.c: 976:         } else {
  5659  001232  EF22  F009         	goto	l3542
  5660  001236                     l369:
  5661                           
  5662                           ;main.c: 977:             LATCbits.LATC1 = 0;
  5663  001236  928B               	bcf	139,1,c	;volatile
  5664  001238                     
  5665                           ;main.c: 978:             delay_1ms(Vmotor_Time);
  5666  001238  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  5667  00123C  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5668  001240  EC18  F00F         	call	_delay_1ms	;wreg free
  5669  001244                     l3542:
  5670                           
  5671                           ;main.c: 981:         if (Stop == 1)
  5672  001244  0427               	decf	_Stop^0,w,c
  5673  001246  A4D8               	btfss	status,2,c
  5674  001248  EF28  F009         	goto	u2211
  5675  00124C  EF2A  F009         	goto	u2210
  5676  001250                     u2211:
  5677  001250  EF2C  F009         	goto	l3546
  5678  001254                     u2210:
  5679  001254  EF34  F009         	goto	l372
  5680  001258                     l3546:
  5681                           
  5682                           ;main.c: 936:     while (Stop == 0) {
  5683  001258  5027               	movf	_Stop^0,w,c
  5684  00125A  B4D8               	btfsc	status,2,c
  5685  00125C  EF32  F009         	goto	u2221
  5686  001260  EF34  F009         	goto	u2220
  5687  001264                     u2221:
  5688  001264  EF7F  F008         	goto	l362
  5689  001268                     u2220:
  5690  001268                     l372:
  5691                           
  5692                           ;main.c: 986:     LATAbits.LATA2 = 0;
  5693  001268  9489               	bcf	137,2,c	;volatile
  5694  00126A                     
  5695                           ;main.c: 988:     if (NUM == 0 || Stop == 1) {
  5696  00126A  500B               	movf	_NUM^0,w,c
  5697  00126C  100C               	iorwf	(_NUM+1)^0,w,c
  5698  00126E  B4D8               	btfsc	status,2,c
  5699  001270  EF3C  F009         	goto	u2231
  5700  001274  EF3E  F009         	goto	u2230
  5701  001278                     u2231:
  5702  001278  EF46  F009         	goto	l3552
  5703  00127C                     u2230:
  5704  00127C  0427               	decf	_Stop^0,w,c
  5705  00127E  A4D8               	btfss	status,2,c
  5706  001280  EF44  F009         	goto	u2241
  5707  001284  EF46  F009         	goto	u2240
  5708  001288                     u2241:
  5709  001288  EF61  F009         	goto	l3562
  5710  00128C                     u2240:
  5711  00128C                     l3552:
  5712                           
  5713                           ;main.c: 990:         if (vibration_mode == 1) {
  5714  00128C  0424               	decf	_vibration_mode^0,w,c
  5715  00128E  A4D8               	btfss	status,2,c
  5716  001290  EF4C  F009         	goto	u2251
  5717  001294  EF4E  F009         	goto	u2250
  5718  001298                     u2251:
  5719  001298  EF61  F009         	goto	l3562
  5720  00129C                     u2250:
  5721  00129C                     
  5722                           ;main.c: 991:             LATCbits.LATC1 = 1;
  5723  00129C  828B               	bsf	139,1,c	;volatile
  5724  00129E                     
  5725                           ;main.c: 992:             delay_1ms(Vmotor_Time);
  5726  00129E  C04E  F030         	movff	_Vmotor_Time,delay_1ms@time
  5727  0012A2  C04F  F031         	movff	_Vmotor_Time+1,delay_1ms@time+1
  5728  0012A6  EC18  F00F         	call	_delay_1ms	;wreg free
  5729  0012AA                     
  5730                           ;main.c: 994:             LATCbits.LATC1 = 0;
  5731  0012AA  928B               	bcf	139,1,c	;volatile
  5732  0012AC                     
  5733                           ;main.c: 995:             _delay((unsigned long)((300)*(8000000/4000.0)));
  5734  0012AC  0E04               	movlw	4
  5735  0012AE  6E3A               	movwf	(??_Homing_Again_Auto+1)^0,c
  5736  0012B0  0E0C               	movlw	12
  5737  0012B2  6E39               	movwf	??_Homing_Again_Auto^0,c
  5738  0012B4  0E34               	movlw	52
  5739  0012B6                     u3107:
  5740  0012B6  2EE8               	decfsz	wreg,f,c
  5741  0012B8  D7FE               	bra	u3107
  5742  0012BA  2E39               	decfsz	??_Homing_Again_Auto^0,f,c
  5743  0012BC  D7FC               	bra	u3107
  5744  0012BE  2E3A               	decfsz	(??_Homing_Again_Auto+1)^0,f,c
  5745  0012C0  D7FA               	bra	u3107
  5746  0012C2                     l3562:
  5747                           
  5748                           ;main.c: 1000:     NUM = 0;
  5749  0012C2  0E00               	movlw	0
  5750  0012C4  6E0C               	movwf	(_NUM+1)^0,c
  5751  0012C6  0E00               	movlw	0
  5752  0012C8  6E0B               	movwf	_NUM^0,c
  5753  0012CA                     
  5754                           ;main.c: 1001:     OpMode = AUTO_MODE;
  5755  0012CA  0E02               	movlw	2
  5756  0012CC  6E22               	movwf	_OpMode^0,c	;volatile
  5757  0012CE  0012               	return		;funcret
  5758  0012D0                     __end_of_Homing_Again_Auto:
  5759                           	callstack 0
  5760                           
  5761 ;; *************** function _readWeighingData *****************
  5762 ;; Defined at:
  5763 ;;		line 1030 in file "main.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  i               2    8[COMRAM] int 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;Total ram usage:        2 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    3
  5784 ;; This function calls:
  5785 ;;		_Write1USART
  5786 ;;		_flushOut
  5787 ;; This function is called by:
  5788 ;;		_Homing_Again_Manual
  5789 ;;		_Homing_Again_Auto
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text27
  5794  001B9E                     __ptext27:
  5795                           	callstack 0
  5796  001B9E                     _readWeighingData:
  5797                           	callstack 26
  5798  001B9E                     
  5799                           ;main.c: 1031:     int i;;main.c: 1033:     Serial_Buffer_Out[0] = 0xA5;
  5800  001B9E  0EA5               	movlw	165
  5801  001BA0  0100               	movlb	0	; () banked
  5802  001BA2  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  5803                           
  5804                           ;main.c: 1034:     Serial_Buffer_Out[1] = 0x45;
  5805  001BA4  0E45               	movlw	69
  5806  001BA6  6F61               	movwf	(_Serial_Buffer_Out+1)& (0+255),b
  5807                           
  5808                           ;main.c: 1035:     Serial_Buffer_Out[2] = 0x00;
  5809  001BA8  0E00               	movlw	0
  5810  001BAA  6F62               	movwf	(_Serial_Buffer_Out+2)& (0+255),b
  5811                           
  5812                           ;main.c: 1036:     Serial_Buffer_Out[3] = 0x45;
  5813  001BAC  0E45               	movlw	69
  5814  001BAE  6F63               	movwf	(_Serial_Buffer_Out+3)& (0+255),b
  5815                           
  5816                           ;main.c: 1037:     Serial_Buffer_Out[4] = 0x5A;
  5817  001BB0  0E5A               	movlw	90
  5818  001BB2  6F64               	movwf	(_Serial_Buffer_Out+4)& (0+255),b
  5819  001BB4                     
  5820                           ; BSR set to: 0
  5821                           ;main.c: 1039:     INTCONbits.GIE = 0;
  5822  001BB4  9EF2               	bcf	242,7,c	;volatile
  5823                           
  5824                           ;main.c: 1040:     for (i = 0; i < 5; i++) {
  5825  001BB6  0E00               	movlw	0
  5826  001BB8  6E33               	movwf	(readWeighingData@i+1)^0,c
  5827  001BBA  0E00               	movlw	0
  5828  001BBC  6E32               	movwf	readWeighingData@i^0,c
  5829  001BBE                     l3086:
  5830                           
  5831                           ;main.c: 1041:         Write1USART(Serial_Buffer_Out[i]);
  5832  001BBE  0E60               	movlw	low _Serial_Buffer_Out
  5833  001BC0  2432               	addwf	readWeighingData@i^0,w,c
  5834  001BC2  6ED9               	movwf	fsr2l,c
  5835  001BC4  0E00               	movlw	high _Serial_Buffer_Out
  5836  001BC6  2033               	addwfc	(readWeighingData@i+1)^0,w,c
  5837  001BC8  6EDA               	movwf	fsr2h,c
  5838  001BCA  50DF               	movf	indf2,w,c
  5839  001BCC  EC90  F00F         	call	_Write1USART
  5840  001BD0                     
  5841                           ;main.c: 1042:     }
  5842  001BD0  4A32               	infsnz	readWeighingData@i^0,f,c
  5843  001BD2  2A33               	incf	(readWeighingData@i+1)^0,f,c
  5844  001BD4  BE33               	btfsc	(readWeighingData@i+1)^0,7,c
  5845  001BD6  EFF6  F00D         	goto	u1781
  5846  001BDA  5033               	movf	(readWeighingData@i+1)^0,w,c
  5847  001BDC  E109               	bnz	u1780
  5848  001BDE  0E05               	movlw	5
  5849  001BE0  5C32               	subwf	readWeighingData@i^0,w,c
  5850  001BE2  A0D8               	btfss	status,0,c
  5851  001BE4  EFF6  F00D         	goto	u1781
  5852  001BE8  EFF8  F00D         	goto	u1780
  5853  001BEC                     u1781:
  5854  001BEC  EFDF  F00D         	goto	l3086
  5855  001BF0                     u1780:
  5856  001BF0                     
  5857                           ;main.c: 1043:     INTCONbits.GIE = 1;
  5858  001BF0  8EF2               	bsf	242,7,c	;volatile
  5859  001BF2                     
  5860                           ;main.c: 1045:     flushOut();
  5861  001BF2  ECC5  F00E         	call	_flushOut	;wreg free
  5862  001BF6  0012               	return		;funcret
  5863  001BF8                     __end_of_readWeighingData:
  5864                           	callstack 0
  5865                           
  5866 ;; *************** function _flushOut *****************
  5867 ;; Defined at:
  5868 ;;		line 1019 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  i               2    6[COMRAM] int 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;Total ram usage:        2 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    2
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;;		_readWeighingData
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text28
  5898  001D8A                     __ptext28:
  5899                           	callstack 0
  5900  001D8A                     _flushOut:
  5901                           	callstack 28
  5902  001D8A                     
  5903                           ;main.c: 1020:     int i;;main.c: 1022:     for (i = 0; i < 16; i++) {
  5904  001D8A  0E00               	movlw	0
  5905  001D8C  6E31               	movwf	(flushOut@i+1)^0,c
  5906  001D8E  0E00               	movlw	0
  5907  001D90  6E30               	movwf	flushOut@i^0,c
  5908  001D92                     l2748:
  5909                           
  5910                           ;main.c: 1023:         Serial_Buffer_Out[i] = 0x00;
  5911  001D92  0E60               	movlw	low _Serial_Buffer_Out
  5912  001D94  2430               	addwf	flushOut@i^0,w,c
  5913  001D96  6ED9               	movwf	fsr2l,c
  5914  001D98  0E00               	movlw	high _Serial_Buffer_Out
  5915  001D9A  2031               	addwfc	(flushOut@i+1)^0,w,c
  5916  001D9C  6EDA               	movwf	fsr2h,c
  5917  001D9E  0E00               	movlw	0
  5918  001DA0  6EDF               	movwf	indf2,c
  5919  001DA2                     
  5920                           ;main.c: 1024:     }
  5921  001DA2  4A30               	infsnz	flushOut@i^0,f,c
  5922  001DA4  2A31               	incf	(flushOut@i+1)^0,f,c
  5923  001DA6  BE31               	btfsc	(flushOut@i+1)^0,7,c
  5924  001DA8  EFDF  F00E         	goto	u1491
  5925  001DAC  5031               	movf	(flushOut@i+1)^0,w,c
  5926  001DAE  E109               	bnz	u1490
  5927  001DB0  0E10               	movlw	16
  5928  001DB2  5C30               	subwf	flushOut@i^0,w,c
  5929  001DB4  A0D8               	btfss	status,0,c
  5930  001DB6  EFDF  F00E         	goto	u1491
  5931  001DBA  EFE1  F00E         	goto	u1490
  5932  001DBE                     u1491:
  5933  001DBE  EFC9  F00E         	goto	l2748
  5934  001DC2                     u1490:
  5935  001DC2  0012               	return		;funcret
  5936  001DC4                     __end_of_flushOut:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function _Write1USART *****************
  5940 ;; Defined at:
  5941 ;;		line 47 in file "usart.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  data            1    wreg     unsigned char 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  data            1    6[COMRAM] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;Total ram usage:        1 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    2
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_main
  5966 ;;		_readWeighingData
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text29
  5971  001F20                     __ptext29:
  5972                           	callstack 0
  5973  001F20                     _Write1USART:
  5974                           	callstack 28
  5975                           
  5976                           ;incstack = 0
  5977                           ;Write1USART@data stored from wreg
  5978  001F20  6E30               	movwf	Write1USART@data^0,c
  5979  001F22                     
  5980                           ;usart.c: 48:     TXREG1 = data;
  5981  001F22  C030  FFAE         	movff	Write1USART@data,4014	;volatile
  5982  001F26                     l567:
  5983  001F26  A2AD               	btfss	173,1,c	;volatile
  5984  001F28  EF98  F00F         	goto	u1481
  5985  001F2C  EF9A  F00F         	goto	u1480
  5986  001F30                     u1481:
  5987  001F30  EF93  F00F         	goto	l567
  5988  001F34                     u1480:
  5989  001F34  0012               	return		;funcret
  5990  001F36                     __end_of_Write1USART:
  5991                           	callstack 0
  5992                           
  5993 ;; *************** function _WriteSTLED316SMode *****************
  5994 ;; Defined at:
  5995 ;;		line 184 in file "Display.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  msg             1    wreg     unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  msg             1   14[COMRAM] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;Total ram usage:        3 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    3
  6016 ;; This function calls:
  6017 ;;		_STLED316s_SPI_SendData
  6018 ;; This function is called by:
  6019 ;;		_Homing_Again_Auto
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text30
  6024  0014E8                     __ptext30:
  6025                           	callstack 0
  6026  0014E8                     _WriteSTLED316SMode:
  6027                           	callstack 26
  6028                           
  6029                           ;incstack = 0
  6030                           ;WriteSTLED316SMode@msg stored from wreg
  6031  0014E8  6E38               	movwf	WriteSTLED316SMode@msg^0,c
  6032  0014EA                     
  6033                           ;Display.c: 185:     LATCbits.LATC4 = 0;
  6034  0014EA  988B               	bcf	139,4,c	;volatile
  6035  0014EC                     
  6036                           ;Display.c: 187:     STLED316s_SPI_SendData(0x00);
  6037  0014EC  0E00               	movlw	0
  6038  0014EE  EC22  F00D         	call	_STLED316s_SPI_SendData
  6039  0014F2                     
  6040                           ;Display.c: 190:     LATCbits.LATC4 = 1;
  6041  0014F2  888B               	bsf	139,4,c	;volatile
  6042  0014F4                     
  6043                           ;Display.c: 192:     LATCbits.LATC4 = 0;
  6044  0014F4  988B               	bcf	139,4,c	;volatile
  6045                           
  6046                           ;Display.c: 194:     STLED316s_SPI_SendData(0x00);
  6047  0014F6  0E00               	movlw	0
  6048  0014F8  EC22  F00D         	call	_STLED316s_SPI_SendData
  6049                           
  6050                           ;Display.c: 196:     switch (msg) {
  6051  0014FC  EFC0  F00A         	goto	l3120
  6052  001500                     l3102:
  6053                           
  6054                           ;Display.c: 198:             STLED316s_SPI_SendData(0x79);
  6055  001500  0E79               	movlw	121
  6056  001502  EC22  F00D         	call	_STLED316s_SPI_SendData
  6057                           
  6058                           ;Display.c: 199:             STLED316s_SPI_SendData(0x3F);
  6059  001506  0E3F               	movlw	63
  6060  001508  EC22  F00D         	call	_STLED316s_SPI_SendData
  6061                           
  6062                           ;Display.c: 200:             break;
  6063  00150C  EFED  F00A         	goto	l455
  6064  001510                     l3104:
  6065                           
  6066                           ;Display.c: 202:             STLED316s_SPI_SendData(0x3F);
  6067  001510  0E3F               	movlw	63
  6068  001512  EC22  F00D         	call	_STLED316s_SPI_SendData
  6069                           
  6070                           ;Display.c: 203:             STLED316s_SPI_SendData(0x73);
  6071  001516  0E73               	movlw	115
  6072  001518  EC22  F00D         	call	_STLED316s_SPI_SendData
  6073                           
  6074                           ;Display.c: 204:             break;
  6075  00151C  EFED  F00A         	goto	l455
  6076  001520                     l3106:
  6077                           
  6078                           ;Display.c: 206:             STLED316s_SPI_SendData(0x39);
  6079  001520  0E39               	movlw	57
  6080  001522  EC22  F00D         	call	_STLED316s_SPI_SendData
  6081                           
  6082                           ;Display.c: 207:             STLED316s_SPI_SendData(0x77);
  6083  001526  0E77               	movlw	119
  6084  001528  EC22  F00D         	call	_STLED316s_SPI_SendData
  6085                           
  6086                           ;Display.c: 208:             break;
  6087  00152C  EFED  F00A         	goto	l455
  6088  001530                     l3108:
  6089                           
  6090                           ;Display.c: 210:             STLED316s_SPI_SendData(0x00);
  6091  001530  0E00               	movlw	0
  6092  001532  EC22  F00D         	call	_STLED316s_SPI_SendData
  6093                           
  6094                           ;Display.c: 211:             STLED316s_SPI_SendData(0x00);
  6095  001536  0E00               	movlw	0
  6096  001538  EC22  F00D         	call	_STLED316s_SPI_SendData
  6097                           
  6098                           ;Display.c: 212:             break;
  6099  00153C  EFED  F00A         	goto	l455
  6100  001540                     l3110:
  6101                           
  6102                           ;Display.c: 214:             STLED316s_SPI_SendData(0x00);
  6103  001540  0E00               	movlw	0
  6104  001542  EC22  F00D         	call	_STLED316s_SPI_SendData
  6105                           
  6106                           ;Display.c: 215:             STLED316s_SPI_SendData(0x3F);
  6107  001546  0E3F               	movlw	63
  6108  001548  EC22  F00D         	call	_STLED316s_SPI_SendData
  6109                           
  6110                           ;Display.c: 216:             break;
  6111  00154C  EFED  F00A         	goto	l455
  6112  001550                     l3112:
  6113                           
  6114                           ;Display.c: 218:             STLED316s_SPI_SendData(0x79);
  6115  001550  0E79               	movlw	121
  6116  001552  EC22  F00D         	call	_STLED316s_SPI_SendData
  6117                           
  6118                           ;Display.c: 219:             STLED316s_SPI_SendData(0x06);
  6119  001556  0E06               	movlw	6
  6120  001558  EC22  F00D         	call	_STLED316s_SPI_SendData
  6121                           
  6122                           ;Display.c: 220:             break;
  6123  00155C  EFED  F00A         	goto	l455
  6124  001560                     l3114:
  6125                           
  6126                           ;Display.c: 222:             STLED316s_SPI_SendData(0x77);
  6127  001560  0E77               	movlw	119
  6128  001562  EC22  F00D         	call	_STLED316s_SPI_SendData
  6129                           
  6130                           ;Display.c: 223:             STLED316s_SPI_SendData(0x3E);
  6131  001566  0E3E               	movlw	62
  6132  001568  EC22  F00D         	call	_STLED316s_SPI_SendData
  6133                           
  6134                           ;Display.c: 224:             break;
  6135  00156C  EFED  F00A         	goto	l455
  6136  001570                     l3116:
  6137                           
  6138                           ;Display.c: 226:             STLED316s_SPI_SendData(0x00);
  6139  001570  0E00               	movlw	0
  6140  001572  EC22  F00D         	call	_STLED316s_SPI_SendData
  6141                           
  6142                           ;Display.c: 227:             STLED316s_SPI_SendData(0x3E);
  6143  001576  0E3E               	movlw	62
  6144  001578  EC22  F00D         	call	_STLED316s_SPI_SendData
  6145                           
  6146                           ;Display.c: 228:             break;
  6147  00157C  EFED  F00A         	goto	l455
  6148  001580                     l3120:
  6149  001580  5038               	movf	WriteSTLED316SMode@msg^0,w,c
  6150  001582  6E36               	movwf	??_WriteSTLED316SMode^0,c
  6151  001584  6A37               	clrf	(??_WriteSTLED316SMode+1)^0,c
  6152                           
  6153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6154                           ; Switch size 1, requested type "simple"
  6155                           ; Number of cases is 1, Range of values is 0 to 0
  6156                           ; switch strategies available:
  6157                           ; Name         Instructions Cycles
  6158                           ; simple_byte            4     3 (average)
  6159                           ;	Chosen strategy is simple_byte
  6160  001586  5037               	movf	(??_WriteSTLED316SMode+1)^0,w,c
  6161  001588  0A00               	xorlw	0	; case 0
  6162  00158A  B4D8               	btfsc	status,2,c
  6163  00158C  EFCA  F00A         	goto	l4456
  6164  001590  EFED  F00A         	goto	l455
  6165  001594                     l4456:
  6166                           
  6167                           ; Switch size 1, requested type "simple"
  6168                           ; Number of cases is 8, Range of values is 65 to 88
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte           25    13 (average)
  6172                           ;	Chosen strategy is simple_byte
  6173  001594  5036               	movf	??_WriteSTLED316SMode^0,w,c
  6174  001596  0A41               	xorlw	65	; case 65
  6175  001598  B4D8               	btfsc	status,2,c
  6176  00159A  EFB0  F00A         	goto	l3114
  6177  00159E  0A02               	xorlw	2	; case 67
  6178  0015A0  B4D8               	btfsc	status,2,c
  6179  0015A2  EF90  F00A         	goto	l3106
  6180  0015A6  0A06               	xorlw	6	; case 69
  6181  0015A8  B4D8               	btfsc	status,2,c
  6182  0015AA  EF80  F00A         	goto	l3102
  6183  0015AE  0A02               	xorlw	2	; case 71
  6184  0015B0  B4D8               	btfsc	status,2,c
  6185  0015B2  EFA0  F00A         	goto	l3110
  6186  0015B6  0A08               	xorlw	8	; case 79
  6187  0015B8  B4D8               	btfsc	status,2,c
  6188  0015BA  EF88  F00A         	goto	l3104
  6189  0015BE  0A1C               	xorlw	28	; case 83
  6190  0015C0  B4D8               	btfsc	status,2,c
  6191  0015C2  EFA8  F00A         	goto	l3112
  6192  0015C6  0A05               	xorlw	5	; case 86
  6193  0015C8  B4D8               	btfsc	status,2,c
  6194  0015CA  EFB8  F00A         	goto	l3116
  6195  0015CE  0A0E               	xorlw	14	; case 88
  6196  0015D0  B4D8               	btfsc	status,2,c
  6197  0015D2  EF98  F00A         	goto	l3108
  6198  0015D6  EFED  F00A         	goto	l455
  6199  0015DA                     l455:
  6200                           
  6201                           ;Display.c: 235:     LATCbits.LATC4 = 1;
  6202  0015DA  888B               	bsf	139,4,c	;volatile
  6203                           
  6204                           ;Display.c: 237:     LATCbits.LATC4 = 0;
  6205  0015DC  988B               	bcf	139,4,c	;volatile
  6206  0015DE                     
  6207                           ;Display.c: 239:     STLED316s_SPI_SendData(0x0D);
  6208  0015DE  0E0D               	movlw	13
  6209  0015E0  EC22  F00D         	call	_STLED316s_SPI_SendData
  6210  0015E4                     
  6211                           ;Display.c: 241:     LATCbits.LATC4 = 1;
  6212  0015E4  888B               	bsf	139,4,c	;volatile
  6213  0015E6  0012               	return		;funcret
  6214  0015E8                     __end_of_WriteSTLED316SMode:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _WriteSTLED316SErr *****************
  6218 ;; Defined at:
  6219 ;;		line 278 in file "Display.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  msg             1    wreg     unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  msg             1   14[COMRAM] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:        3 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    3
  6240 ;; This function calls:
  6241 ;;		_STLED316s_SPI_SendData
  6242 ;; This function is called by:
  6243 ;;		_MotorPosition_Init
  6244 ;;		_Homing_Again_Manual
  6245 ;;		_Homing_Again_Auto
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text31
  6250  0015E8                     __ptext31:
  6251                           	callstack 0
  6252  0015E8                     _WriteSTLED316SErr:
  6253                           	callstack 26
  6254                           
  6255                           ;incstack = 0
  6256                           ;WriteSTLED316SErr@msg stored from wreg
  6257  0015E8  6E38               	movwf	WriteSTLED316SErr@msg^0,c
  6258  0015EA                     
  6259                           ;Display.c: 279:     LATCbits.LATC4 = 0;
  6260  0015EA  988B               	bcf	139,4,c	;volatile
  6261  0015EC                     
  6262                           ;Display.c: 281:     STLED316s_SPI_SendData(0x00);
  6263  0015EC  0E00               	movlw	0
  6264  0015EE  EC22  F00D         	call	_STLED316s_SPI_SendData
  6265  0015F2                     
  6266                           ;Display.c: 284:     LATCbits.LATC4 = 1;
  6267  0015F2  888B               	bsf	139,4,c	;volatile
  6268  0015F4                     
  6269                           ;Display.c: 286:     LATCbits.LATC4 = 0;
  6270  0015F4  988B               	bcf	139,4,c	;volatile
  6271                           
  6272                           ;Display.c: 288:     STLED316s_SPI_SendData(0x00);
  6273  0015F6  0E00               	movlw	0
  6274  0015F8  EC22  F00D         	call	_STLED316s_SPI_SendData
  6275                           
  6276                           ;Display.c: 290:     switch (msg) {
  6277  0015FC  EF38  F00B         	goto	l3062
  6278  001600                     l3046:
  6279                           
  6280                           ;Display.c: 292:             STLED316s_SPI_SendData(0x79);
  6281  001600  0E79               	movlw	121
  6282  001602  EC22  F00D         	call	_STLED316s_SPI_SendData
  6283                           
  6284                           ;Display.c: 293:             STLED316s_SPI_SendData(0x77);
  6285  001606  0E77               	movlw	119
  6286  001608  EC22  F00D         	call	_STLED316s_SPI_SendData
  6287                           
  6288                           ;Display.c: 294:             break;
  6289  00160C  EF61  F00B         	goto	l474
  6290  001610                     l3048:
  6291                           
  6292                           ;Display.c: 296:             STLED316s_SPI_SendData(0x79);
  6293  001610  0E79               	movlw	121
  6294  001612  EC22  F00D         	call	_STLED316s_SPI_SendData
  6295                           
  6296                           ;Display.c: 297:             STLED316s_SPI_SendData(0x3F);
  6297  001616  0E3F               	movlw	63
  6298  001618  EC22  F00D         	call	_STLED316s_SPI_SendData
  6299                           
  6300                           ;Display.c: 298:             break;
  6301  00161C  EF61  F00B         	goto	l474
  6302  001620                     l3050:
  6303                           
  6304                           ;Display.c: 300:             STLED316s_SPI_SendData(0x79);
  6305  001620  0E79               	movlw	121
  6306  001622  EC22  F00D         	call	_STLED316s_SPI_SendData
  6307                           
  6308                           ;Display.c: 301:             STLED316s_SPI_SendData(0x06);
  6309  001626  0E06               	movlw	6
  6310  001628  EC22  F00D         	call	_STLED316s_SPI_SendData
  6311                           
  6312                           ;Display.c: 302:             break;
  6313  00162C  EF61  F00B         	goto	l474
  6314  001630                     l3052:
  6315                           
  6316                           ;Display.c: 304:             STLED316s_SPI_SendData(0x79);
  6317  001630  0E79               	movlw	121
  6318  001632  EC22  F00D         	call	_STLED316s_SPI_SendData
  6319                           
  6320                           ;Display.c: 305:             STLED316s_SPI_SendData(0x5B);
  6321  001636  0E5B               	movlw	91
  6322  001638  EC22  F00D         	call	_STLED316s_SPI_SendData
  6323                           
  6324                           ;Display.c: 306:             break;
  6325  00163C  EF61  F00B         	goto	l474
  6326  001640                     l3054:
  6327                           
  6328                           ;Display.c: 308:             STLED316s_SPI_SendData(0x00);
  6329  001640  0E00               	movlw	0
  6330  001642  EC22  F00D         	call	_STLED316s_SPI_SendData
  6331                           
  6332                           ;Display.c: 309:             STLED316s_SPI_SendData(0x3F);
  6333  001646  0E3F               	movlw	63
  6334  001648  EC22  F00D         	call	_STLED316s_SPI_SendData
  6335                           
  6336                           ;Display.c: 310:             break;
  6337  00164C  EF61  F00B         	goto	l474
  6338  001650                     l3056:
  6339                           
  6340                           ;Display.c: 312:             STLED316s_SPI_SendData(0x79);
  6341  001650  0E79               	movlw	121
  6342  001652  EC22  F00D         	call	_STLED316s_SPI_SendData
  6343                           
  6344                           ;Display.c: 313:             STLED316s_SPI_SendData(0x06);
  6345  001656  0E06               	movlw	6
  6346  001658  EC22  F00D         	call	_STLED316s_SPI_SendData
  6347                           
  6348                           ;Display.c: 314:             break;
  6349  00165C  EF61  F00B         	goto	l474
  6350  001660                     l3058:
  6351                           
  6352                           ;Display.c: 316:             STLED316s_SPI_SendData(0x77);
  6353  001660  0E77               	movlw	119
  6354  001662  EC22  F00D         	call	_STLED316s_SPI_SendData
  6355                           
  6356                           ;Display.c: 317:             STLED316s_SPI_SendData(0x3E);
  6357  001666  0E3E               	movlw	62
  6358  001668  EC22  F00D         	call	_STLED316s_SPI_SendData
  6359                           
  6360                           ;Display.c: 318:             break;
  6361  00166C  EF61  F00B         	goto	l474
  6362  001670                     l3062:
  6363  001670  5038               	movf	WriteSTLED316SErr@msg^0,w,c
  6364  001672  6E36               	movwf	??_WriteSTLED316SErr^0,c
  6365  001674  6A37               	clrf	(??_WriteSTLED316SErr+1)^0,c
  6366                           
  6367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6368                           ; Switch size 1, requested type "simple"
  6369                           ; Number of cases is 1, Range of values is 0 to 0
  6370                           ; switch strategies available:
  6371                           ; Name         Instructions Cycles
  6372                           ; simple_byte            4     3 (average)
  6373                           ;	Chosen strategy is simple_byte
  6374  001676  5037               	movf	(??_WriteSTLED316SErr+1)^0,w,c
  6375  001678  0A00               	xorlw	0	; case 0
  6376  00167A  B4D8               	btfsc	status,2,c
  6377  00167C  EF42  F00B         	goto	l4458
  6378  001680  EF61  F00B         	goto	l474
  6379  001684                     l4458:
  6380                           
  6381                           ; Switch size 1, requested type "simple"
  6382                           ; Number of cases is 7, Range of values is 48 to 83
  6383                           ; switch strategies available:
  6384                           ; Name         Instructions Cycles
  6385                           ; simple_byte           22    12 (average)
  6386                           ;	Chosen strategy is simple_byte
  6387  001684  5036               	movf	??_WriteSTLED316SErr^0,w,c
  6388  001686  0A30               	xorlw	48	; case 48
  6389  001688  B4D8               	btfsc	status,2,c
  6390  00168A  EF08  F00B         	goto	l3048
  6391  00168E  0A01               	xorlw	1	; case 49
  6392  001690  B4D8               	btfsc	status,2,c
  6393  001692  EF10  F00B         	goto	l3050
  6394  001696  0A03               	xorlw	3	; case 50
  6395  001698  B4D8               	btfsc	status,2,c
  6396  00169A  EF18  F00B         	goto	l3052
  6397  00169E  0A73               	xorlw	115	; case 65
  6398  0016A0  B4D8               	btfsc	status,2,c
  6399  0016A2  EF30  F00B         	goto	l3058
  6400  0016A6  0A04               	xorlw	4	; case 69
  6401  0016A8  B4D8               	btfsc	status,2,c
  6402  0016AA  EF00  F00B         	goto	l3046
  6403  0016AE  0A02               	xorlw	2	; case 71
  6404  0016B0  B4D8               	btfsc	status,2,c
  6405  0016B2  EF20  F00B         	goto	l3054
  6406  0016B6  0A14               	xorlw	20	; case 83
  6407  0016B8  B4D8               	btfsc	status,2,c
  6408  0016BA  EF28  F00B         	goto	l3056
  6409  0016BE  EF61  F00B         	goto	l474
  6410  0016C2                     l474:
  6411                           
  6412                           ;Display.c: 323:     LATCbits.LATC4 = 1;
  6413  0016C2  888B               	bsf	139,4,c	;volatile
  6414                           
  6415                           ;Display.c: 325:     LATCbits.LATC4 = 0;
  6416  0016C4  988B               	bcf	139,4,c	;volatile
  6417  0016C6                     
  6418                           ;Display.c: 327:     STLED316s_SPI_SendData(0x0D);
  6419  0016C6  0E0D               	movlw	13
  6420  0016C8  EC22  F00D         	call	_STLED316s_SPI_SendData
  6421  0016CC                     
  6422                           ;Display.c: 329:     LATCbits.LATC4 = 1;
  6423  0016CC  888B               	bsf	139,4,c	;volatile
  6424  0016CE  0012               	return		;funcret
  6425  0016D0                     __end_of_WriteSTLED316SErr:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _STLED316s_SPI_SendData *****************
  6429 ;; Defined at:
  6430 ;;		line 88 in file "Display.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  Data            1    wreg     unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  Data            1    8[COMRAM] unsigned char 
  6435 ;;  t               1   11[COMRAM] unsigned char 
  6436 ;;  i               1   10[COMRAM] unsigned char 
  6437 ;;  temp            1    9[COMRAM] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;Total ram usage:        6 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    2
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_InitSTLED316
  6458 ;;		_WriteSTLED316SData
  6459 ;;		_WriteSTLED316SMode
  6460 ;;		_WriteSTLED316SVibMode
  6461 ;;		_WriteSTLED316SErr
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text32
  6466  001A44                     __ptext32:
  6467                           	callstack 0
  6468  001A44                     _STLED316s_SPI_SendData:
  6469                           	callstack 27
  6470                           
  6471                           ;incstack = 0
  6472                           ;STLED316s_SPI_SendData@Data stored from wreg
  6473  001A44  6E32               	movwf	STLED316s_SPI_SendData@Data^0,c
  6474  001A46                     
  6475                           ;Display.c: 89:     char i, temp, t;;Display.c: 91:     for (i = 0; i < 8; i++) {
  6476  001A46  0E00               	movlw	0
  6477  001A48  6E34               	movwf	STLED316s_SPI_SendData@i^0,c
  6478  001A4A                     l420:
  6479                           
  6480                           ;Display.c: 92:         LATCbits.LATC3 = 0;
  6481  001A4A  968B               	bcf	139,3,c	;volatile
  6482  001A4C                     
  6483                           ;Display.c: 93:         temp = Data & (0x1 << i);
  6484  001A4C  C034  F030         	movff	STLED316s_SPI_SendData@i,??_STLED316s_SPI_SendData
  6485  001A50  0E01               	movlw	1
  6486  001A52  6E31               	movwf	(??_STLED316s_SPI_SendData+1)^0,c
  6487  001A54  2A30               	incf	??_STLED316s_SPI_SendData^0,f,c
  6488  001A56  EF2F  F00D         	goto	u1514
  6489  001A5A                     u1515:
  6490  001A5A  90D8               	bcf	status,0,c
  6491  001A5C  3631               	rlcf	(??_STLED316s_SPI_SendData+1)^0,f,c
  6492  001A5E                     u1514:
  6493  001A5E  2E30               	decfsz	??_STLED316s_SPI_SendData^0,f,c
  6494  001A60  EF2D  F00D         	goto	u1515
  6495  001A64  5031               	movf	(??_STLED316s_SPI_SendData+1)^0,w,c
  6496  001A66  1432               	andwf	STLED316s_SPI_SendData@Data^0,w,c
  6497  001A68  6E33               	movwf	STLED316s_SPI_SendData@temp^0,c
  6498  001A6A                     
  6499                           ;Display.c: 94:         if (temp)
  6500  001A6A  5033               	movf	STLED316s_SPI_SendData@temp^0,w,c
  6501  001A6C  B4D8               	btfsc	status,2,c
  6502  001A6E  EF3B  F00D         	goto	u1521
  6503  001A72  EF3D  F00D         	goto	u1520
  6504  001A76                     u1521:
  6505  001A76  EF40  F00D         	goto	l422
  6506  001A7A                     u1520:
  6507  001A7A                     
  6508                           ;Display.c: 95:             LATCbits.LATC5 = 1;
  6509  001A7A  8A8B               	bsf	139,5,c	;volatile
  6510  001A7C  EF41  F00D         	goto	l2772
  6511  001A80                     l422:
  6512                           
  6513                           ;Display.c: 97:             LATCbits.LATC5 = 0;
  6514  001A80  9A8B               	bcf	139,5,c	;volatile
  6515  001A82                     l2772:
  6516                           
  6517                           ;Display.c: 98:         for (t = 0; t < 5; t++);
  6518  001A82  0E00               	movlw	0
  6519  001A84  6E35               	movwf	STLED316s_SPI_SendData@t^0,c
  6520  001A86                     l2778:
  6521  001A86  2A35               	incf	STLED316s_SPI_SendData@t^0,f,c
  6522  001A88  0E04               	movlw	4
  6523  001A8A  6435               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6524  001A8C  EF4A  F00D         	goto	u1531
  6525  001A90  EF4C  F00D         	goto	u1530
  6526  001A94                     u1531:
  6527  001A94  EF43  F00D         	goto	l2778
  6528  001A98                     u1530:
  6529  001A98                     
  6530                           ;Display.c: 99:         LATCbits.LATC3 = 1;
  6531  001A98  868B               	bsf	139,3,c	;volatile
  6532  001A9A                     
  6533                           ;Display.c: 100:         for (t = 0; t < 5; t++);
  6534  001A9A  0E00               	movlw	0
  6535  001A9C  6E35               	movwf	STLED316s_SPI_SendData@t^0,c
  6536  001A9E                     l2788:
  6537  001A9E  2A35               	incf	STLED316s_SPI_SendData@t^0,f,c
  6538  001AA0  0E04               	movlw	4
  6539  001AA2  6435               	cpfsgt	STLED316s_SPI_SendData@t^0,c
  6540  001AA4  EF56  F00D         	goto	u1541
  6541  001AA8  EF58  F00D         	goto	u1540
  6542  001AAC                     u1541:
  6543  001AAC  EF4F  F00D         	goto	l2788
  6544  001AB0                     u1540:
  6545  001AB0                     
  6546                           ;Display.c: 101:     }
  6547  001AB0  2A34               	incf	STLED316s_SPI_SendData@i^0,f,c
  6548  001AB2  0E07               	movlw	7
  6549  001AB4  6434               	cpfsgt	STLED316s_SPI_SendData@i^0,c
  6550  001AB6  EF5F  F00D         	goto	u1551
  6551  001ABA  EF61  F00D         	goto	u1550
  6552  001ABE                     u1551:
  6553  001ABE  EF25  F00D         	goto	l420
  6554  001AC2                     u1550:
  6555  001AC2  0012               	return		;funcret
  6556  001AC4                     __end_of_STLED316s_SPI_SendData:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _Read_IR *****************
  6560 ;; Defined at:
  6561 ;;		line 734 in file "main.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    6[COMRAM] unsigned int 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;Total ram usage:        2 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    2
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_MotorPosition_Init
  6586 ;;		_Homing_Again_Manual
  6587 ;;		_Homing_Again_Auto
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text33
  6592  001ECE                     __ptext33:
  6593                           	callstack 0
  6594  001ECE                     _Read_IR:
  6595                           	callstack 27
  6596  001ECE                     
  6597                           ;main.c: 736:     if (PORTAbits.RA1 == 1)
  6598  001ECE  A280               	btfss	128,1,c	;volatile
  6599  001ED0  EF6C  F00F         	goto	u1771
  6600  001ED4  EF6E  F00F         	goto	u1770
  6601  001ED8                     u1771:
  6602  001ED8  EF74  F00F         	goto	l3030
  6603  001EDC                     u1770:
  6604  001EDC                     
  6605                           ;main.c: 737:     {;main.c: 738:         return 0;
  6606  001EDC  0E00               	movlw	0
  6607  001EDE  6E31               	movwf	(?_Read_IR+1)^0,c
  6608  001EE0  0E00               	movlw	0
  6609  001EE2  6E30               	movwf	?_Read_IR^0,c
  6610  001EE4  EF78  F00F         	goto	l304
  6611  001EE8                     l3030:
  6612                           
  6613                           ;main.c: 740:     {;main.c: 741:         return 1;
  6614  001EE8  0E00               	movlw	0
  6615  001EEA  6E31               	movwf	(?_Read_IR+1)^0,c
  6616  001EEC  0E01               	movlw	1
  6617  001EEE  6E30               	movwf	?_Read_IR^0,c
  6618  001EF0                     l304:
  6619  001EF0  0012               	return		;funcret
  6620  001EF2                     __end_of_Read_IR:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _MotorON *****************
  6624 ;; Defined at:
  6625 ;;		line 40 in file "MotorDriver.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    3
  6646 ;; This function calls:
  6647 ;;		_Set_RG3
  6648 ;; This function is called by:
  6649 ;;		_MotorPosition_Init
  6650 ;;		_Homing_Again_Manual
  6651 ;;		_Homing_Again_Auto
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text34
  6656  001F86                     __ptext34:
  6657                           	callstack 0
  6658  001F86                     _MotorON:
  6659                           	callstack 26
  6660  001F86                     
  6661                           ;MotorDriver.c: 41:     LATGbits.LATG3 = 1;
  6662  001F86  868F               	bsf	143,3,c	;volatile
  6663                           
  6664                           ;MotorDriver.c: 42:     LATGbits.LATG4 = 1;
  6665  001F88  888F               	bsf	143,4,c	;volatile
  6666  001F8A                     
  6667                           ;MotorDriver.c: 44:     Set_RG3();
  6668  001F8A  ECD9  F00F         	call	_Set_RG3	;wreg free
  6669  001F8E  0012               	return		;funcret
  6670  001F90                     __end_of_MotorON:
  6671                           	callstack 0
  6672                           
  6673 ;; *************** function _Set_RG3 *****************
  6674 ;; Defined at:
  6675 ;;		line 28 in file "MotorDriver.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, status,2
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    2
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_MotorON
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text35
  6704  001FB2                     __ptext35:
  6705                           	callstack 0
  6706  001FB2                     _Set_RG3:
  6707                           	callstack 26
  6708  001FB2                     
  6709                           ;MotorDriver.c: 31:     CCP4CON = 0x08;
  6710  001FB2  0E08               	movlw	8
  6711  001FB4  6E73               	movwf	115,c	;volatile
  6712  001FB6                     
  6713                           ;MotorDriver.c: 32:     T4CONbits.TMR4ON = 1;
  6714  001FB6  8476               	bsf	118,2,c	;volatile
  6715  001FB8  0012               	return		;funcret
  6716  001FBA                     __end_of_Set_RG3:
  6717                           	callstack 0
  6718                           
  6719 ;; *************** function _MotorBREAK *****************
  6720 ;; Defined at:
  6721 ;;		line 47 in file "MotorDriver.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;		None
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;Total ram usage:        0 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    3
  6742 ;; This function calls:
  6743 ;;		_Clr_RG3
  6744 ;; This function is called by:
  6745 ;;		_MotorPosition_Init
  6746 ;;		_Homing_Again_Manual
  6747 ;;		_Homing_Again_Auto
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text36
  6752  001F90                     __ptext36:
  6753                           	callstack 0
  6754  001F90                     _MotorBREAK:
  6755                           	callstack 26
  6756  001F90                     
  6757                           ;MotorDriver.c: 49:     Clr_RG3();
  6758  001F90  ECDD  F00F         	call	_Clr_RG3	;wreg free
  6759  001F94                     
  6760                           ;MotorDriver.c: 51:     LATGbits.LATG3 = 1;
  6761  001F94  868F               	bsf	143,3,c	;volatile
  6762  001F96                     
  6763                           ;MotorDriver.c: 52:     LATGbits.LATG4 = 1;
  6764  001F96  888F               	bsf	143,4,c	;volatile
  6765  001F98  0012               	return		;funcret
  6766  001F9A                     __end_of_MotorBREAK:
  6767                           	callstack 0
  6768                           
  6769 ;; *************** function _Clr_RG3 *****************
  6770 ;; Defined at:
  6771 ;;		line 35 in file "MotorDriver.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;		None
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;Total ram usage:        0 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    2
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_MotorBREAK
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text37
  6800  001FBA                     __ptext37:
  6801                           	callstack 0
  6802  001FBA                     _Clr_RG3:
  6803                           	callstack 26
  6804  001FBA                     
  6805                           ;MotorDriver.c: 36:     CCP4CON = 0x00;
  6806  001FBA  0E00               	movlw	0
  6807  001FBC  6E73               	movwf	115,c	;volatile
  6808  001FBE                     
  6809                           ;MotorDriver.c: 37:     T4CONbits.TMR4ON = 0;
  6810  001FBE  9476               	bcf	118,2,c	;volatile
  6811  001FC0  0012               	return		;funcret
  6812  001FC2                     __end_of_Clr_RG3:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _AD_capture_BattVoltage *****************
  6816 ;; Defined at:
  6817 ;;		line 1062 in file "main.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;		None
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:        2 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    3
  6838 ;; This function calls:
  6839 ;;		_delay_1ms
  6840 ;; This function is called by:
  6841 ;;		_main
  6842 ;;		_Homing_Again_Manual
  6843 ;;		_Homing_Again_Auto
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text38
  6848  001CD6                     __ptext38:
  6849                           	callstack 0
  6850  001CD6                     _AD_capture_BattVoltage:
  6851                           	callstack 26
  6852  001CD6                     
  6853                           ;main.c: 1064:     ADCON0bits.CHS0 = 0;
  6854  001CD6  94C2               	bcf	194,2,c	;volatile
  6855                           
  6856                           ;main.c: 1065:     ADCON0bits.CHS1 = 0;
  6857  001CD8  96C2               	bcf	194,3,c	;volatile
  6858                           
  6859                           ;main.c: 1066:     ADCON0bits.CHS2 = 0;
  6860  001CDA  98C2               	bcf	194,4,c	;volatile
  6861                           
  6862                           ;main.c: 1067:     ADCON0bits.CHS3 = 0;
  6863  001CDC  9AC2               	bcf	194,5,c	;volatile
  6864                           
  6865                           ;main.c: 1069:     ADCON0bits.ADON = 1;
  6866  001CDE  80C2               	bsf	194,0,c	;volatile
  6867  001CE0                     
  6868                           ;main.c: 1070:     delay_1ms(5);
  6869  001CE0  0E00               	movlw	0
  6870  001CE2  6E31               	movwf	(delay_1ms@time+1)^0,c
  6871  001CE4  0E05               	movlw	5
  6872  001CE6  6E30               	movwf	delay_1ms@time^0,c
  6873  001CE8  EC18  F00F         	call	_delay_1ms	;wreg free
  6874  001CEC                     
  6875                           ;main.c: 1071:     ADCON0bits.GO = 1;
  6876  001CEC  82C2               	bsf	194,1,c	;volatile
  6877  001CEE                     l398:
  6878                           
  6879                           ;main.c: 1073:     while (ADCON0bits.GO == 1) {
  6880  001CEE  B2C2               	btfsc	194,1,c	;volatile
  6881  001CF0  EF7C  F00E         	goto	u1761
  6882  001CF4  EF7E  F00E         	goto	u1760
  6883  001CF8                     u1761:
  6884  001CF8  EF77  F00E         	goto	l398
  6885  001CFC                     u1760:
  6886  001CFC                     
  6887                           ;main.c: 1077:     VOLTAGE = (ADRESH * 256) | (ADRESL);
  6888  001CFC  50C3               	movf	195,w,c	;volatile
  6889  001CFE  CFC4 F033          	movff	4036,??_AD_capture_BattVoltage	;volatile
  6890  001D02  6A34               	clrf	(??_AD_capture_BattVoltage+1)^0,c
  6891  001D04  C033  F034         	movff	??_AD_capture_BattVoltage,??_AD_capture_BattVoltage+1
  6892  001D08  6A33               	clrf	??_AD_capture_BattVoltage^0,c
  6893  001D0A  1033               	iorwf	??_AD_capture_BattVoltage^0,w,c
  6894  001D0C  6E01               	movwf	_VOLTAGE^0,c
  6895  001D0E  5034               	movf	(??_AD_capture_BattVoltage+1)^0,w,c
  6896  001D10  6E02               	movwf	(_VOLTAGE+1)^0,c
  6897  001D12  0012               	return		;funcret
  6898  001D14                     __end_of_AD_capture_BattVoltage:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _delay_1ms *****************
  6902 ;; Defined at:
  6903 ;;		line 724 in file "main.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  time            2    6[COMRAM] unsigned int 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;Total ram usage:        3 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    2
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_MotorPosition_Init
  6928 ;;		_Homing_Again_Manual
  6929 ;;		_Homing_Again_Auto
  6930 ;;		_AD_capture_BattVoltage
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text39
  6935  001E30                     __ptext39:
  6936                           	callstack 0
  6937  001E30                     _delay_1ms:
  6938                           	callstack 27
  6939  001E30                     
  6940                           ;main.c: 725:     while (time > 0) {
  6941  001E30  EF24  F00F         	goto	l297
  6942  001E34                     l2756:
  6943                           
  6944                           ;main.c: 726:         _delay((unsigned long)((1)*(8000000/4000.0)));
  6945  001E34  0E03               	movlw	3
  6946  001E36  6E32               	movwf	??_delay_1ms^0,c
  6947  001E38  0E98               	movlw	152
  6948  001E3A                     u3117:
  6949  001E3A  2EE8               	decfsz	wreg,f,c
  6950  001E3C  D7FE               	bra	u3117
  6951  001E3E  2E32               	decfsz	??_delay_1ms^0,f,c
  6952  001E40  D7FC               	bra	u3117
  6953  001E42                     
  6954                           ;main.c: 727:         time--;
  6955  001E42  0630               	decf	delay_1ms@time^0,f,c
  6956  001E44  A0D8               	btfss	status,0,c
  6957  001E46  0631               	decf	(delay_1ms@time+1)^0,f,c
  6958  001E48                     l297:
  6959                           
  6960                           ;main.c: 725:     while (time > 0) {
  6961  001E48  5030               	movf	delay_1ms@time^0,w,c
  6962  001E4A  1031               	iorwf	(delay_1ms@time+1)^0,w,c
  6963  001E4C  A4D8               	btfss	status,2,c
  6964  001E4E  EF2B  F00F         	goto	u1501
  6965  001E52  EF2D  F00F         	goto	u1500
  6966  001E56                     u1501:
  6967  001E56  EF1A  F00F         	goto	l2756
  6968  001E5A                     u1500:
  6969  001E5A  0012               	return		;funcret
  6970  001E5C                     __end_of_delay_1ms:
  6971                           	callstack 0
  6972                           
  6973 ;; *************** function _high_isr *****************
  6974 ;; Defined at:
  6975 ;;		line 627 in file "main.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;		None
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  i               1    5[COMRAM] unsigned char 
  6980 ;;  c               1    4[COMRAM] unsigned char 
  6981 ;;  Temp            1    3[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;Total ram usage:        5 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    1
  6998 ;; This function calls:
  6999 ;;		_Low_Power_Indicator
  7000 ;;		_Read1USART
  7001 ;;		i2_Write1USART
  7002 ;; This function is called by:
  7003 ;;		Interrupt level 2
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	intcode
  7008  000008                     __pintcode:
  7009                           	callstack 0
  7010  000008                     _high_isr:
  7011                           	callstack 25
  7012                           
  7013                           ;incstack = 0
  7014  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7015  00000A  CFD9 F02B          	movff	fsr2l,??_high_isr
  7016  00000E  CFDA F02C          	movff	fsr2h,??_high_isr+1
  7017  000012                     
  7018                           ;main.c: 628:     unsigned char c, i;;main.c: 629:     unsigned char Temp;;main.c: 631: 
      +                              if ((PIR1bits.RC1IF))
  7019  000012  AA9E               	btfss	158,5,c	;volatile
  7020  000014  EF0E  F000         	goto	i2u271_41
  7021  000018  EF10  F000         	goto	i2u271_40
  7022  00001C                     i2u271_41:
  7023  00001C  EFE3  F000         	goto	i2l264
  7024  000020                     i2u271_40:
  7025  000020                     
  7026                           ;main.c: 632:     {;main.c: 634:         c = Read1USART();
  7027  000020  EC54  F00F         	call	_Read1USART	;wreg free
  7028  000024  6E2E               	movwf	high_isr@c^0,c
  7029  000026                     
  7030                           ;main.c: 636:         if ((c == 0xA5) && ((Serial_Flag == 0) || (Busy == 1))) {
  7031  000026  0EA5               	movlw	165
  7032  000028  182E               	xorwf	high_isr@c^0,w,c
  7033  00002A  A4D8               	btfss	status,2,c
  7034  00002C  EF1A  F000         	goto	i2u272_41
  7035  000030  EF1C  F000         	goto	i2u272_40
  7036  000034                     i2u272_41:
  7037  000034  EF3E  F000         	goto	i2l4052
  7038  000038                     i2u272_40:
  7039  000038  5029               	movf	_Serial_Flag^0,w,c
  7040  00003A  B4D8               	btfsc	status,2,c
  7041  00003C  EF22  F000         	goto	i2u273_41
  7042  000040  EF24  F000         	goto	i2u273_40
  7043  000044                     i2u273_41:
  7044  000044  EF2C  F000         	goto	i2l4046
  7045  000048                     i2u273_40:
  7046  000048  0425               	decf	_Busy^0,w,c
  7047  00004A  A4D8               	btfss	status,2,c
  7048  00004C  EF2A  F000         	goto	i2u274_41
  7049  000050  EF2C  F000         	goto	i2u274_40
  7050  000054                     i2u274_41:
  7051  000054  EF3E  F000         	goto	i2l4052
  7052  000058                     i2u274_40:
  7053  000058                     i2l4046:
  7054                           
  7055                           ;main.c: 637:             Serial_GData = 1;
  7056  000058  0E01               	movlw	1
  7057  00005A  6E28               	movwf	_Serial_GData^0,c
  7058                           
  7059                           ;main.c: 638:             Serial_Count = 0;
  7060  00005C  0E00               	movlw	0
  7061  00005E  6E1C               	movwf	(_Serial_Count+1)^0,c
  7062  000060  0E00               	movlw	0
  7063  000062  6E1B               	movwf	_Serial_Count^0,c
  7064  000064                     
  7065                           ;main.c: 639:             Serial_Buffer[Serial_Count] = c;
  7066  000064  0E80               	movlw	low _Serial_Buffer
  7067  000066  241B               	addwf	_Serial_Count^0,w,c
  7068  000068  6ED9               	movwf	fsr2l,c
  7069  00006A  0E00               	movlw	high _Serial_Buffer
  7070  00006C  201C               	addwfc	(_Serial_Count+1)^0,w,c
  7071  00006E  6EDA               	movwf	fsr2h,c
  7072  000070  C02E  FFDF         	movff	high_isr@c,indf2
  7073  000074                     i2l4050:
  7074                           
  7075                           ;main.c: 640:             Serial_Count++;
  7076  000074  4A1B               	infsnz	_Serial_Count^0,f,c
  7077  000076  2A1C               	incf	(_Serial_Count+1)^0,f,c
  7078                           
  7079                           ;main.c: 641:         } else if (Serial_GData == 1) {
  7080  000078  EFED  F000         	goto	i2l4118
  7081  00007C                     i2l4052:
  7082  00007C  0428               	decf	_Serial_GData^0,w,c
  7083  00007E  A4D8               	btfss	status,2,c
  7084  000080  EF44  F000         	goto	i2u275_41
  7085  000084  EF46  F000         	goto	i2u275_40
  7086  000088                     i2u275_41:
  7087  000088  EFED  F000         	goto	i2l4118
  7088  00008C                     i2u275_40:
  7089  00008C                     
  7090                           ;main.c: 642:             Serial_Buffer[Serial_Count] = c;
  7091  00008C  0E80               	movlw	low _Serial_Buffer
  7092  00008E  241B               	addwf	_Serial_Count^0,w,c
  7093  000090  6ED9               	movwf	fsr2l,c
  7094  000092  0E00               	movlw	high _Serial_Buffer
  7095  000094  201C               	addwfc	(_Serial_Count+1)^0,w,c
  7096  000096  6EDA               	movwf	fsr2h,c
  7097  000098  C02E  FFDF         	movff	high_isr@c,indf2
  7098  00009C                     
  7099                           ;main.c: 644:             if (Serial_Count < 5) {
  7100  00009C  501C               	movf	(_Serial_Count+1)^0,w,c
  7101  00009E  E107               	bnz	i2u276_41
  7102  0000A0  0E05               	movlw	5
  7103  0000A2  5C1B               	subwf	_Serial_Count^0,w,c
  7104  0000A4  B0D8               	btfsc	status,0,c
  7105  0000A6  EF57  F000         	goto	i2u276_41
  7106  0000AA  EF59  F000         	goto	i2u276_40
  7107  0000AE                     i2u276_41:
  7108  0000AE  EFDF  F000         	goto	i2l4112
  7109  0000B2                     i2u276_40:
  7110  0000B2                     
  7111                           ;main.c: 645:                 if (c == 0x5A) {
  7112  0000B2  0E5A               	movlw	90
  7113  0000B4  182E               	xorwf	high_isr@c^0,w,c
  7114  0000B6  A4D8               	btfss	status,2,c
  7115  0000B8  EF60  F000         	goto	i2u277_41
  7116  0000BC  EF62  F000         	goto	i2u277_40
  7117  0000C0                     i2u277_41:
  7118  0000C0  EF3A  F000         	goto	i2l4050
  7119  0000C4                     i2u277_40:
  7120  0000C4                     
  7121                           ;main.c: 646:                     Temp = Serial_Buffer[1] + Serial_Buffer[2];
  7122  0000C4  0100               	movlb	0	; () banked
  7123  0000C6  5181               	movf	(_Serial_Buffer+1)& (0+255),w,b
  7124  0000C8  2582               	addwf	(_Serial_Buffer+2)& (0+255),w,b
  7125  0000CA  6E2D               	movwf	high_isr@Temp^0,c
  7126                           
  7127                           ;main.c: 648:                     if (Temp == Serial_Buffer[3]) {
  7128  0000CC  502D               	movf	high_isr@Temp^0,w,c
  7129  0000CE  1983               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  7130  0000D0  A4D8               	btfss	status,2,c
  7131  0000D2  EF6D  F000         	goto	i2u278_41
  7132  0000D6  EF6F  F000         	goto	i2u278_40
  7133  0000DA                     i2u278_41:
  7134  0000DA  EFB2  F000         	goto	i2l4092
  7135  0000DE                     i2u278_40:
  7136  0000DE                     
  7137                           ; BSR set to: 0
  7138                           ;main.c: 649:                         if (Busy == 0 || Serial_Buffer[2] == 0xF5) {
  7139  0000DE  5025               	movf	_Busy^0,w,c
  7140  0000E0  B4D8               	btfsc	status,2,c
  7141  0000E2  EF75  F000         	goto	i2u279_41
  7142  0000E6  EF77  F000         	goto	i2u279_40
  7143  0000EA                     i2u279_41:
  7144  0000EA  EF80  F000         	goto	i2l275
  7145  0000EE                     i2u279_40:
  7146  0000EE                     
  7147                           ; BSR set to: 0
  7148  0000EE  0EF5               	movlw	245
  7149  0000F0  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7150  0000F2  A4D8               	btfss	status,2,c
  7151  0000F4  EF7E  F000         	goto	i2u280_41
  7152  0000F8  EF80  F000         	goto	i2u280_40
  7153  0000FC                     i2u280_41:
  7154  0000FC  EF98  F000         	goto	i2l273
  7155  000100                     i2u280_40:
  7156  000100                     i2l275:
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;main.c: 650:                             INTCONbits.GIE = 0;
  7160  000100  9EF2               	bcf	242,7,c	;volatile
  7161  000102                     
  7162                           ; BSR set to: 0
  7163                           ;main.c: 651:                             for (i = 0; i < 5; i++) {
  7164  000102  0E00               	movlw	0
  7165  000104  6E2F               	movwf	high_isr@i^0,c
  7166  000106                     i2l4072:
  7167                           
  7168                           ;main.c: 652:                                 Write1USART(Serial_Buffer[i]);
  7169  000106  0E80               	movlw	low _Serial_Buffer
  7170  000108  242F               	addwf	high_isr@i^0,w,c
  7171  00010A  6ED9               	movwf	fsr2l,c
  7172  00010C  6ADA               	clrf	fsr2h,c
  7173  00010E  0E00               	movlw	high _Serial_Buffer
  7174  000110  22DA               	addwfc	fsr2h,f,c
  7175  000112  50DF               	movf	indf2,w,c
  7176  000114  EC9B  F00F         	call	i2_Write1USART
  7177  000118                     
  7178                           ;main.c: 653:                             }
  7179  000118  2A2F               	incf	high_isr@i^0,f,c
  7180  00011A  0E04               	movlw	4
  7181  00011C  642F               	cpfsgt	high_isr@i^0,c
  7182  00011E  EF93  F000         	goto	i2u281_41
  7183  000122  EF95  F000         	goto	i2u281_40
  7184  000126                     i2u281_41:
  7185  000126  EF83  F000         	goto	i2l4072
  7186  00012A                     i2u281_40:
  7187  00012A                     
  7188                           ;main.c: 654:                             INTCONbits.GIE = 1;
  7189  00012A  8EF2               	bsf	242,7,c	;volatile
  7190                           
  7191                           ;main.c: 655:                         } else {
  7192  00012C  EFA8  F000         	goto	i2l4090
  7193  000130                     i2l273:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;main.c: 656:                             INTCONbits.GIE = 0;
  7197  000130  9EF2               	bcf	242,7,c	;volatile
  7198  000132                     
  7199                           ; BSR set to: 0
  7200                           ;main.c: 657:                             for (i = 0; i < 5; i++) {
  7201  000132  0E00               	movlw	0
  7202  000134  6E2F               	movwf	high_isr@i^0,c
  7203  000136                     i2l4084:
  7204                           
  7205                           ;main.c: 658:                                 Write1USART(0x16);
  7206  000136  0E16               	movlw	22
  7207  000138  EC9B  F00F         	call	i2_Write1USART
  7208  00013C                     
  7209                           ;main.c: 659:                             }
  7210  00013C  2A2F               	incf	high_isr@i^0,f,c
  7211  00013E  0E04               	movlw	4
  7212  000140  642F               	cpfsgt	high_isr@i^0,c
  7213  000142  EFA5  F000         	goto	i2u282_41
  7214  000146  EFA7  F000         	goto	i2u282_40
  7215  00014A                     i2u282_41:
  7216  00014A  EF9B  F000         	goto	i2l4084
  7217  00014E                     i2u282_40:
  7218  00014E                     
  7219                           ;main.c: 660:                             INTCONbits.GIE = 1;
  7220  00014E  8EF2               	bsf	242,7,c	;volatile
  7221  000150                     i2l4090:
  7222                           
  7223                           ;main.c: 663:                         Serial_Flag = 1;
  7224  000150  0E01               	movlw	1
  7225  000152  6E29               	movwf	_Serial_Flag^0,c
  7226                           
  7227                           ;main.c: 664:                         Serial_Count = 0;
  7228  000154  0E00               	movlw	0
  7229  000156  6E1C               	movwf	(_Serial_Count+1)^0,c
  7230  000158  0E00               	movlw	0
  7231  00015A  6E1B               	movwf	_Serial_Count^0,c
  7232                           
  7233                           ;main.c: 665:                         OpMode = AUTO_MODE;
  7234  00015C  0E02               	movlw	2
  7235  00015E  6E22               	movwf	_OpMode^0,c	;volatile
  7236                           
  7237                           ;main.c: 667:                     } else {
  7238  000160  EFC8  F000         	goto	i2l4106
  7239  000164                     i2l4092:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;main.c: 668:                         Serial_Flag = 0;
  7243  000164  0E00               	movlw	0
  7244  000166  6E29               	movwf	_Serial_Flag^0,c
  7245                           
  7246                           ;main.c: 669:                         Serial_Count = 0;
  7247  000168  0E00               	movlw	0
  7248  00016A  6E1C               	movwf	(_Serial_Count+1)^0,c
  7249  00016C  0E00               	movlw	0
  7250  00016E  6E1B               	movwf	_Serial_Count^0,c
  7251  000170                     
  7252                           ; BSR set to: 0
  7253                           ;main.c: 671:                         INTCONbits.GIE = 0;
  7254  000170  9EF2               	bcf	242,7,c	;volatile
  7255                           
  7256                           ;main.c: 672:                         for (i = 0; i < 5; i++) {
  7257  000172  0E00               	movlw	0
  7258  000174  6E2F               	movwf	high_isr@i^0,c
  7259  000176                     i2l4100:
  7260                           
  7261                           ;main.c: 673:                             Write1USART(0x15);
  7262  000176  0E15               	movlw	21
  7263  000178  EC9B  F00F         	call	i2_Write1USART
  7264  00017C                     
  7265                           ;main.c: 674:                         }
  7266  00017C  2A2F               	incf	high_isr@i^0,f,c
  7267  00017E  0E04               	movlw	4
  7268  000180  642F               	cpfsgt	high_isr@i^0,c
  7269  000182  EFC5  F000         	goto	i2u283_41
  7270  000186  EFC7  F000         	goto	i2u283_40
  7271  00018A                     i2u283_41:
  7272  00018A  EFBB  F000         	goto	i2l4100
  7273  00018E                     i2u283_40:
  7274  00018E                     
  7275                           ;main.c: 675:                         INTCONbits.GIE = 1;
  7276  00018E  8EF2               	bsf	242,7,c	;volatile
  7277  000190                     i2l4106:
  7278                           
  7279                           ;main.c: 678:                     if (Serial_Buffer[2] == 0xF5 && OpMode == AUTO_MODE) {
  7280  000190  0EF5               	movlw	245
  7281  000192  0100               	movlb	0	; () banked
  7282  000194  1982               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7283  000196  A4D8               	btfss	status,2,c
  7284  000198  EFD0  F000         	goto	i2u284_41
  7285  00019C  EFD2  F000         	goto	i2u284_40
  7286  0001A0                     i2u284_41:
  7287  0001A0  EF3A  F000         	goto	i2l4050
  7288  0001A4                     i2u284_40:
  7289  0001A4                     
  7290                           ; BSR set to: 0
  7291  0001A4  0E02               	movlw	2
  7292  0001A6  1822               	xorwf	_OpMode^0,w,c	;volatile
  7293  0001A8  A4D8               	btfss	status,2,c
  7294  0001AA  EFD9  F000         	goto	i2u285_41
  7295  0001AE  EFDB  F000         	goto	i2u285_40
  7296  0001B2                     i2u285_41:
  7297  0001B2  EF3A  F000         	goto	i2l4050
  7298  0001B6                     i2u285_40:
  7299  0001B6                     
  7300                           ; BSR set to: 0
  7301                           ;main.c: 679:                         Stop = 1;
  7302  0001B6  0E01               	movlw	1
  7303  0001B8  6E27               	movwf	_Stop^0,c
  7304  0001BA  EF3A  F000         	goto	i2l4050
  7305  0001BE                     i2l4112:
  7306                           
  7307                           ;main.c: 683:                 Serial_GData = 0;
  7308  0001BE  0E00               	movlw	0
  7309  0001C0  6E28               	movwf	_Serial_GData^0,c
  7310  0001C2  EF3A  F000         	goto	i2l4050
  7311  0001C6                     i2l264:
  7312                           
  7313                           ;main.c: 689:         if (RCSTA1bits.OERR == 1) {
  7314  0001C6  A2AC               	btfss	172,1,c	;volatile
  7315  0001C8  EFE8  F000         	goto	i2u286_41
  7316  0001CC  EFEA  F000         	goto	i2u286_40
  7317  0001D0                     i2u286_41:
  7318  0001D0  EFED  F000         	goto	i2l4118
  7319  0001D4                     i2u286_40:
  7320  0001D4                     
  7321                           ;main.c: 690:             RCSTA1bits.OERR = 0;
  7322  0001D4  92AC               	bcf	172,1,c	;volatile
  7323                           
  7324                           ;main.c: 691:             RCSTA1bits.CREN = 0;
  7325  0001D6  98AC               	bcf	172,4,c	;volatile
  7326                           
  7327                           ;main.c: 692:             RCSTA1bits.CREN = 1;
  7328  0001D8  88AC               	bsf	172,4,c	;volatile
  7329  0001DA                     i2l4118:
  7330                           
  7331                           ;main.c: 696:     if (TMR1IF_triggered == 1) {
  7332  0001DA  041D               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7333  0001DC  A4D8               	btfss	status,2,c
  7334  0001DE  EFF3  F000         	goto	i2u287_41
  7335  0001E2  EFF5  F000         	goto	i2u287_40
  7336  0001E6                     i2u287_41:
  7337  0001E6  EF3B  F001         	goto	i2l4136
  7338  0001EA                     i2u287_40:
  7339  0001EA                     
  7340                           ;main.c: 697:         if (errorcounter > 0) {
  7341  0001EA  BE4D               	btfsc	(_errorcounter+3)^0,7,c	;volatile
  7342  0001EC  EF02  F001         	goto	i2u288_41
  7343  0001F0  504D               	movf	(_errorcounter+3)^0,w,c	;volatile
  7344  0001F2  104C               	iorwf	(_errorcounter+2)^0,w,c	;volatile
  7345  0001F4  104B               	iorwf	(_errorcounter+1)^0,w,c	;volatile
  7346  0001F6  E108               	bnz	i2u288_40
  7347  0001F8  044A               	decf	_errorcounter^0,w,c	;volatile
  7348  0001FA  A0D8               	btfss	status,0,c
  7349  0001FC  EF02  F001         	goto	i2u288_41
  7350  000200  EF04  F001         	goto	i2u288_40
  7351  000204                     i2u288_41:
  7352  000204  EF0E  F001         	goto	i2l4124
  7353  000208                     i2u288_40:
  7354  000208                     
  7355                           ;main.c: 698:             errorcounter--;
  7356  000208  0EFF               	movlw	255
  7357  00020A  264A               	addwf	_errorcounter^0,f,c	;volatile
  7358  00020C  0EFF               	movlw	255
  7359  00020E  224B               	addwfc	(_errorcounter+1)^0,f,c	;volatile
  7360  000210  0EFF               	movlw	255
  7361  000212  224C               	addwfc	(_errorcounter+2)^0,f,c	;volatile
  7362  000214  0EFF               	movlw	255
  7363  000216  224D               	addwfc	(_errorcounter+3)^0,f,c	;volatile
  7364                           
  7365                           ;main.c: 699:         } else {
  7366  000218  EF16  F001         	goto	i2l4126
  7367  00021C                     i2l4124:
  7368                           
  7369                           ;main.c: 700:             errorcounter = 0;
  7370  00021C  0E00               	movlw	0
  7371  00021E  6E4A               	movwf	_errorcounter^0,c	;volatile
  7372  000220  0E00               	movlw	0
  7373  000222  6E4B               	movwf	(_errorcounter+1)^0,c	;volatile
  7374  000224  0E00               	movlw	0
  7375  000226  6E4C               	movwf	(_errorcounter+2)^0,c	;volatile
  7376  000228  0E00               	movlw	0
  7377  00022A  6E4D               	movwf	(_errorcounter+3)^0,c	;volatile
  7378  00022C                     i2l4126:
  7379                           
  7380                           ;main.c: 703:         if (LowPowerCounter > 0) {
  7381  00022C  BE49               	btfsc	(_LowPowerCounter+3)^0,7,c	;volatile
  7382  00022E  EF23  F001         	goto	i2u289_41
  7383  000232  5049               	movf	(_LowPowerCounter+3)^0,w,c	;volatile
  7384  000234  1048               	iorwf	(_LowPowerCounter+2)^0,w,c	;volatile
  7385  000236  1047               	iorwf	(_LowPowerCounter+1)^0,w,c	;volatile
  7386  000238  E108               	bnz	i2u289_40
  7387  00023A  0446               	decf	_LowPowerCounter^0,w,c	;volatile
  7388  00023C  A0D8               	btfss	status,0,c
  7389  00023E  EF23  F001         	goto	i2u289_41
  7390  000242  EF25  F001         	goto	i2u289_40
  7391  000246                     i2u289_41:
  7392  000246  EF2F  F001         	goto	i2l4130
  7393  00024A                     i2u289_40:
  7394  00024A                     
  7395                           ;main.c: 704:             LowPowerCounter--;
  7396  00024A  0EFF               	movlw	255
  7397  00024C  2646               	addwf	_LowPowerCounter^0,f,c	;volatile
  7398  00024E  0EFF               	movlw	255
  7399  000250  2247               	addwfc	(_LowPowerCounter+1)^0,f,c	;volatile
  7400  000252  0EFF               	movlw	255
  7401  000254  2248               	addwfc	(_LowPowerCounter+2)^0,f,c	;volatile
  7402  000256  0EFF               	movlw	255
  7403  000258  2249               	addwfc	(_LowPowerCounter+3)^0,f,c	;volatile
  7404                           
  7405                           ;main.c: 705:         } else {
  7406  00025A  EF39  F001         	goto	i2l4134
  7407  00025E                     i2l4130:
  7408                           
  7409                           ;main.c: 706:             LowPowerCounter = 20;
  7410  00025E  0E14               	movlw	20
  7411  000260  6E46               	movwf	_LowPowerCounter^0,c	;volatile
  7412  000262  0E00               	movlw	0
  7413  000264  6E47               	movwf	(_LowPowerCounter+1)^0,c	;volatile
  7414  000266  0E00               	movlw	0
  7415  000268  6E48               	movwf	(_LowPowerCounter+2)^0,c	;volatile
  7416  00026A  0E00               	movlw	0
  7417  00026C  6E49               	movwf	(_LowPowerCounter+3)^0,c	;volatile
  7418  00026E                     
  7419                           ;main.c: 707:             Low_Power_Indicator();
  7420  00026E  ECFD  F00E         	call	_Low_Power_Indicator	;wreg free
  7421  000272                     i2l4134:
  7422                           
  7423                           ;main.c: 710:         TMR1IF_triggered = 0;
  7424  000272  0E00               	movlw	0
  7425  000274  6E1D               	movwf	_TMR1IF_triggered^0,c	;volatile
  7426  000276                     i2l4136:
  7427                           
  7428                           ;main.c: 713:     if (TMR1IF) {
  7429  000276  A09E               	btfss	3998,0,c	;volatile
  7430  000278  EF40  F001         	goto	i2u290_41
  7431  00027C  EF42  F001         	goto	i2u290_40
  7432  000280                     i2u290_41:
  7433  000280  EF49  F001         	goto	i2l294
  7434  000284                     i2u290_40:
  7435  000284                     
  7436                           ;main.c: 714:         TMR1 = 0x9E57;
  7437  000284  0E9E               	movlw	158
  7438  000286  6ECF               	movwf	207,c	;volatile
  7439  000288  0E57               	movlw	87
  7440  00028A  6ECE               	movwf	206,c	;volatile
  7441  00028C                     
  7442                           ;main.c: 715:         TMR1IF = 0;
  7443  00028C  909E               	bcf	3998,0,c	;volatile
  7444                           
  7445                           ;main.c: 716:         TMR1IF_triggered = 1;
  7446  00028E  0E01               	movlw	1
  7447  000290  6E1D               	movwf	_TMR1IF_triggered^0,c	;volatile
  7448  000292                     i2l294:
  7449  000292  C02C  FFDA         	movff	??_high_isr+1,fsr2h
  7450  000296  C02B  FFD9         	movff	??_high_isr,fsr2l
  7451  00029A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7452  00029C  0011               	retfie		f
  7453  00029E                     __end_of_high_isr:
  7454                           	callstack 0
  7455                           
  7456 ;; *************** function i2_Write1USART *****************
  7457 ;; Defined at:
  7458 ;;		line 47 in file "usart.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  data            1    wreg     unsigned char 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  data            1    0[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7476 ;;Total ram usage:        1 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_high_isr
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text41
  7486  001F36                     __ptext41:
  7487                           	callstack 0
  7488  001F36                     i2_Write1USART:
  7489                           	callstack 25
  7490                           
  7491                           ;incstack = 0
  7492                           ;i2Write1USART@data stored from wreg
  7493  001F36  6E2A               	movwf	i2Write1USART@data^0,c
  7494  001F38                     
  7495                           ;usart.c: 48:     TXREG1 = data;
  7496  001F38  C02A  FFAE         	movff	i2Write1USART@data,4014	;volatile
  7497  001F3C                     i2l567:
  7498  001F3C  A2AD               	btfss	173,1,c	;volatile
  7499  001F3E  EFA3  F00F         	goto	i2u230_41
  7500  001F42  EFA5  F00F         	goto	i2u230_40
  7501  001F46                     i2u230_41:
  7502  001F46  EF9E  F00F         	goto	i2l567
  7503  001F4A                     i2u230_40:
  7504  001F4A  0012               	return		;funcret
  7505  001F4C                     __end_ofi2_Write1USART:
  7506                           	callstack 0
  7507                           
  7508 ;; *************** function _Read1USART *****************
  7509 ;; Defined at:
  7510 ;;		line 56 in file "usart.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  result          1    0[COMRAM] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      unsigned char 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;Total ram usage:        1 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_high_isr
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text42
  7538  001EA8                     __ptext42:
  7539                           	callstack 0
  7540  001EA8                     _Read1USART:
  7541                           	callstack 25
  7542  001EA8                     
  7543                           ;usart.c: 57:     char result;;usart.c: 59:     if (RCSTA1bits.OERR) {
  7544  001EA8  A2AC               	btfss	172,1,c	;volatile
  7545  001EAA  EF59  F00F         	goto	i2u227_41
  7546  001EAE  EF5B  F00F         	goto	i2u227_40
  7547  001EB2                     i2u227_41:
  7548  001EB2  EF63  F00F         	goto	i2l573
  7549  001EB6                     i2u227_40:
  7550  001EB6                     
  7551                           ;usart.c: 60:         RCSTA1bits.CREN = 0;
  7552  001EB6  98AC               	bcf	172,4,c	;volatile
  7553                           
  7554                           ;usart.c: 61:         result = RCREG1;
  7555  001EB8  CFAF F02A          	movff	4015,Read1USART@result	;volatile
  7556                           
  7557                           ;usart.c: 62:         result = RCREG1;
  7558  001EBC  CFAF F02A          	movff	4015,Read1USART@result	;volatile
  7559                           
  7560                           ;usart.c: 63:         RCSTA1bits.CREN = 1;
  7561  001EC0  88AC               	bsf	172,4,c	;volatile
  7562                           
  7563                           ;usart.c: 64:     } else {
  7564  001EC2  EF65  F00F         	goto	i2l3582
  7565  001EC6                     i2l573:
  7566                           
  7567                           ;usart.c: 65:         result = RCREG1;
  7568  001EC6  CFAF F02A          	movff	4015,Read1USART@result	;volatile
  7569  001ECA                     i2l3582:
  7570                           
  7571                           ;usart.c: 68:     return result;
  7572  001ECA  502A               	movf	Read1USART@result^0,w,c
  7573  001ECC  0012               	return		;funcret
  7574  001ECE                     __end_of_Read1USART:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _Low_Power_Indicator *****************
  7578 ;; Defined at:
  7579 ;;		line 1080 in file "main.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_high_isr
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text43
  7607  001DFA                     __ptext43:
  7608                           	callstack 0
  7609  001DFA                     _Low_Power_Indicator:
  7610                           	callstack 25
  7611  001DFA                     
  7612                           ;main.c: 1082:     if (VOLTAGE <= 0x0366)
  7613  001DFA  0E67               	movlw	103
  7614  001DFC  5C01               	subwf	_VOLTAGE^0,w,c
  7615  001DFE  0E03               	movlw	3
  7616  001E00  5802               	subwfb	(_VOLTAGE+1)^0,w,c
  7617  001E02  B0D8               	btfsc	status,0,c
  7618  001E04  EF06  F00F         	goto	i2u228_41
  7619  001E08  EF08  F00F         	goto	i2u228_40
  7620  001E0C                     i2u228_41:
  7621  001E0C  EF0B  F00F         	goto	i2l3590
  7622  001E10                     i2u228_40:
  7623  001E10                     
  7624                           ;main.c: 1083:     {;main.c: 1085:         LATDbits.LATD1 = 1;
  7625  001E10  828C               	bsf	140,1,c	;volatile
  7626                           
  7627                           ;main.c: 1087:     } else if (VOLTAGE >= 0x03C0)
  7628  001E12  EF17  F00F         	goto	i2l407
  7629  001E16                     i2l3590:
  7630  001E16  0EC0               	movlw	192
  7631  001E18  5C01               	subwf	_VOLTAGE^0,w,c
  7632  001E1A  0E03               	movlw	3
  7633  001E1C  5802               	subwfb	(_VOLTAGE+1)^0,w,c
  7634  001E1E  A0D8               	btfss	status,0,c
  7635  001E20  EF14  F00F         	goto	i2u229_41
  7636  001E24  EF16  F00F         	goto	i2u229_40
  7637  001E28                     i2u229_41:
  7638  001E28  EF17  F00F         	goto	i2l407
  7639  001E2C                     i2u229_40:
  7640  001E2C                     
  7641                           ;main.c: 1088:     {;main.c: 1089:         LATDbits.LATD1 = 0;
  7642  001E2C  928C               	bcf	140,1,c	;volatile
  7643  001E2E                     i2l407:
  7644  001E2E  0012               	return		;funcret
  7645  001E30                     __end_of_Low_Power_Indicator:
  7646                           	callstack 0
  7647  0000                     
  7648                           	psect	rparam
  7649  0000                     
  7650                           	psect	temp
  7651  000051                     btemp:
  7652                           	callstack 0
  7653  000051                     	ds	1
  7654  0000                     int$flags	set	btemp
  7655  0000                     wtemp8	set	btemp+1
  7656  0000                     ttemp5	set	btemp+1
  7657  0000                     ttemp6	set	btemp+4
  7658  0000                     ttemp7	set	btemp+8
  7659                           
  7660                           	psect	config
  7661                           
  7662                           ;Config register CONFIG1L @ 0x7FF8
  7663                           ;	Watchdog Timer Enable bit
  7664                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
  7665                           ;	PLL Prescaler Selection bits
  7666                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7667                           ;	Stack Overflow/Underflow Reset Enable bit
  7668                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  7669                           ;	Extended Instruction Set Enable bit
  7670                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7671                           ;	Background Debugger Enable bit
  7672                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  7673  7FF8                     	org	32760
  7674  7FF8  AE                 	db	174
  7675                           
  7676                           ;Config register CONFIG1H @ 0x7FF9
  7677                           ;	CPU System Clock Postscaler
  7678                           ;	CPUDIV = OSC1, No CPU system clock divide
  7679                           ;	Code Protection bit
  7680                           ;	CP0 = OFF, Program memory is not code-protected
  7681  7FF9                     	org	32761
  7682  7FF9  F7                 	db	247
  7683                           
  7684                           ;Config register CONFIG2L @ 0x7FFA
  7685                           ;	Oscillator Selection bits
  7686                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
  7687                           ;	Fail-Safe Clock Monitor Enable bit
  7688                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7689                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  7690                           ;	IESO = OFF, Two-Speed Start-up disabled
  7691  7FFA                     	org	32762
  7692  7FFA  03                 	db	3
  7693                           
  7694                           ;Config register CONFIG2H @ 0x7FFB
  7695                           ;	Watchdog Timer Postscaler Select bits
  7696                           ;	WDTPS = 2048, 1:2048
  7697  7FFB                     	org	32763
  7698  7FFB  FB                 	db	251
  7699                           
  7700                           ;Config register CONFIG3L @ 0x7FFC
  7701                           ;	unspecified, using default values
  7702  7FFC                     	org	32764
  7703  7FFC  F8                 	db	248
  7704                           
  7705                           ;Config register CONFIG3H @ 0x7FFD
  7706                           ;	ECCP2 MUX bit
  7707                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  7708                           ;	MSSP Address Masking Mode Select bit
  7709                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
  7710  7FFD                     	org	32765
  7711  7FFD  F1                 	db	241
  7712                           tosu	equ	0xFFF
  7713                           tosh	equ	0xFFE
  7714                           tosl	equ	0xFFD
  7715                           stkptr	equ	0xFFC
  7716                           pclatu	equ	0xFFB
  7717                           pclath	equ	0xFFA
  7718                           pcl	equ	0xFF9
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           indf0	equ	0xFEF
  7726                           postinc0	equ	0xFEE
  7727                           postdec0	equ	0xFED
  7728                           preinc0	equ	0xFEC
  7729                           plusw0	equ	0xFEB
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           postinc1	equ	0xFE6
  7735                           postdec1	equ	0xFE5
  7736                           preinc1	equ	0xFE4
  7737                           plusw1	equ	0xFE3
  7738                           fsr1h	equ	0xFE2
  7739                           fsr1l	equ	0xFE1
  7740                           bsr	equ	0xFE0
  7741                           indf2	equ	0xFDF
  7742                           postinc2	equ	0xFDE
  7743                           postdec2	equ	0xFDD
  7744                           preinc2	equ	0xFDC
  7745                           plusw2	equ	0xFDB
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      80
    BANK0           160      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_i2c
    _main->_write_i2c
    _read_i2c->___aldiv
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _WriteSTLED316SVibMode->_STLED316s_SPI_SendData
    _ToggleVIB_Mode->_write_i2c
    _write_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Address->_i2c_Wait
    _MotorPosition_Init->_WriteSTLED316SErr
    _InitSTLED316->_STLED316s_SPI_SendData
    _Homing_Again_Manual->_WriteSTLED316SData
    _WriteSTLED316SData->___awdiv
    _Homing_Again_Auto->_WriteSTLED316SErr
    _Homing_Again_Auto->_WriteSTLED316SMode
    _readWeighingData->_flushOut
    _WriteSTLED316SMode->_STLED316s_SPI_SendData
    _WriteSTLED316SErr->_STLED316s_SPI_SendData
    _AD_capture_BattVoltage->_delay_1ms

Critical Paths under _high_isr in COMRAM

    _high_isr->_Read1USART
    _high_isr->i2_Write1USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   20362
                                             26 COMRAM     2     2      0
             _AD_capture_BattVoltage
                  _Homing_Again_Auto
                _Homing_Again_Manual
                       _InitSTLED316
                         _InitTimer1
                 _MotorPosition_Init
                     _ToggleVIB_Mode
                        _Write1USART
                 _WriteSTLED316SData
              _WriteSTLED316SVibMode
                              _flush
                           _flushOut
                           _i2c_Init
                               _init
                          _initMotor
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    1718
                                             20 COMRAM     6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      45
                                              7 COMRAM     4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush                                                2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SVibMode                                1     1      0     227
                                             12 COMRAM     1     1      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _ToggleVIB_Mode                                       0     0      0    2356
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    2356
                                             20 COMRAM     6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              7 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     296
                                              7 COMRAM     3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              6 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MotorPosition_Init                                   2     2      0    1314
                                             15 COMRAM     2     2      0
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSTLED316                                         5     5      0     381
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Manual                                  2     2      0    5269
                                             23 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                 _WriteSTLED316SData
                  _WriteSTLED316SErr
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (1) _WriteSTLED316SData                                   9     6      3    2710
                                             14 COMRAM     9     6      3
                            _Get7Seg
             _STLED316s_SPI_SendData
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Get7Seg                                              5     3      2     207
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Homing_Again_Auto                                    2     2      0    2786
                                             15 COMRAM     2     2      0
             _AD_capture_BattVoltage
                         _MotorBREAK
                            _MotorON
                            _Read_IR
                  _WriteSTLED316SErr
                 _WriteSTLED316SMode
                          _delay_1ms
                   _readWeighingData
 ---------------------------------------------------------------------------------
 (2) _readWeighingData                                     2     2      0     158
                                              8 COMRAM     2     2      0
                        _Write1USART
                           _flushOut
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      68
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SMode                                   3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _WriteSTLED316SErr                                    3     3      0     227
                                             12 COMRAM     3     3      0
             _STLED316s_SPI_SendData
 ---------------------------------------------------------------------------------
 (2) _STLED316s_SPI_SendData                               6     6      0     205
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _Read_IR                                              2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MotorON                                              0     0      0       0
                            _Set_RG3
 ---------------------------------------------------------------------------------
 (3) _Set_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorBREAK                                           0     0      0       0
                            _Clr_RG3
 ---------------------------------------------------------------------------------
 (3) _Clr_RG3                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_capture_BattVoltage                               2     2      0    1087
                                              9 COMRAM     2     2      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            3     1      2    1087
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                             5     5      0     319
                                              1 COMRAM     5     5      0
                _Low_Power_Indicator
                         _Read1USART
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Low_Power_Indicator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_capture_BattVoltage
     _delay_1ms
   _Homing_Again_Auto
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _WriteSTLED316SMode
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _Homing_Again_Manual
     _AD_capture_BattVoltage
       _delay_1ms
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SData
       _Get7Seg
       _STLED316s_SPI_SendData
       ___awdiv
       ___awmod
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
     _readWeighingData
       _Write1USART
       _flushOut
   _InitSTLED316
     _STLED316s_SPI_SendData
   _InitTimer1
   _MotorPosition_Init
     _MotorBREAK
       _Clr_RG3
     _MotorON
       _Set_RG3
     _Read_IR
     _WriteSTLED316SErr
       _STLED316s_SPI_SendData
     _delay_1ms
   _ToggleVIB_Mode
     _write_i2c
       ___aldiv
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Write1USART
   _WriteSTLED316SData
     _Get7Seg
     _STLED316s_SPI_SendData
     ___awdiv
     ___awmod
   _WriteSTLED316SVibMode
     _STLED316s_SPI_SendData
   _flush
   _flushOut
   _i2c_Init
   _init
   _initMotor
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _write_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait

 _high_isr (ROOT)
   _Low_Power_Indicator
   _Read1USART
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      30       5       30.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      50       1       85.1%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 16 14:06:31 2022

                              _i 0005                    ??_i2c_Address 0032  
                   ___awdiv@sign 0035                    ?_InitSTLED316 002A  
   __size_of_Low_Power_Indicator 0036                      i2c_Read@ack 0033  
                            l200 074A                              l211 080E  
                            l203 0792                              l300 1E5A  
                            l212 0800                              l204 0784  
                            l207 07D0                              l304 1EF0  
                            l232 0A34                              l208 07C2  
                            l401 1D12                              l225 096C  
                            l322 0D20                              l314 14E6  
                            l242 0B52                              l170 0502  
                            l420 1A4A                              l340 0F10  
                            l180 0564                              l181 056A  
                            l422 1A80                              l326 0D46  
                            l414 1A42                              l319 1D4E  
                            l511 1F1E                              l247 0BFA  
                            l336 0EB2                              l520 1FB0  
                            l192 06AE                              l425 1A98  
                            l362 10FE                              l450 19B6  
                            l346 1028                              l194 06C8  
                            l523 1FA0                              l195 071C  
                            l428 1AC2                              l372 1268  
                            l444 179A                              l356 10A8  
                            l532 1F5E                              l540 1C8E  
                            l196 06DE                              l517 1EA6  
                            l197 06F0                              l526 1FA8  
                            l382 1D88                              l606 1B24  
                            l455 15DA                              l391 1BF0  
                            l359 10F2                              l535 1DEE  
                            l543 1B9C                              l199 0758  
                            l632 1FC0                              l464 15E6  
                            l392 1BF6                              l720 13DA  
                            l608 1B32                              l536 1DF0  
                            l297 1E48                              l377 12CE  
                            l369 1236                              l529 1F78  
                            l609 1B34                              l537 1DF8  
                            l482 16CE                              l474 16C2  
                            l570 1F34                              l626 1F6C  
                            l635 1F8E                              l387 1DC2  
                            l395 1F08                              l564 1E80  
                            l629 1FB8                              l469 1C44  
                            l398 1CEE                              l638 1F98  
                            l567 1F26                              l872 185E  
                            l885 190E                              _GIE 007F97  
                            _PR4 000F77                              _NUM 000B  
         __size_ofi2_Write1USART 0016                     ___awmod@sign 0035  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                  ??_i2c_Restart 0031                             l3000 199E  
                           l3010 19B4                             l3002 19A4  
                           l3012 1CD6                             l3100 14F4  
                           l3004 19AA                             l3020 1C46  
                           l3014 1CE0                             l3030 1EE8  
                           l3022 1ECE                             l3110 1540  
                           l3102 1500                             l3006 19AC  
                           l3016 1CEC                             l3024 1EDC  
                           l3040 15EC                             l3112 1550  
                           l3104 1510                             l3120 1580  
                           l3008 19AE                             l3200 1B22  
                           l3018 1CFC                             l3034 1F86  
                           l3050 1620                             l3042 15F2  
                           l3122 15DE                             l3114 1560  
                           l3106 1520                             l3210 19EE  
                           l3202 19BA                             l3130 1F9A  
                           l3036 1F8A                             l3052 1630  
                           l3044 15F4                             l3124 15E4  
                           l3116 1570                             l3108 1530  
                           l3220 1A16                             l3212 19F0  
                           l3204 19BE                             l3300 1D14  
                           l3140 1DD8                             l3132 1F9E  
                           l3054 1640                             l3046 1600  
                           l3062 1670                             l3038 15EA  
                           l3222 1A1E                             l3214 19F8  
                           l3206 19C4                             l3310 1D4C  
                           l3302 1D24                             l3150 1AE0  
                           l3230 1F64                             l3142 1DE8  
                           l3134 1DC6                             l3072 1F90  
                           l3064 16C6                             l3056 1650  
                           l3048 1610                             l3080 1BB4  
                           l3400 0E8E                             l3224 1A20  
                           l3216 19FA                             l3208 19C6  
                           l3304 1D2C                             l3320 1C0C  
                           l3312 1BFA                             l3160 1AEA  
                           l3152 1AE2                             l3144 1AC4  
                           l3232 1F66                             l3240 1E78  
                           l3136 1DCA                             l3074 1F94  
                           l3066 16CC                             l3058 1660  
                           l3090 1BD4                             l3402 0EA0  
                           l3410 0EDC                             l3226 1A40  
                           l3218 1A14                             l3242 1EF2  
                           l3306 1D30                             l3330 1C42  
                           l3322 1C1C                             l3314 1BFC  
                           l3234 1F0A                             l3170 1AF4  
                           l3162 1AEC                             l3154 1AE4  
                           l3146 1AC8                             l3138 1DD0  
                           l3250 1B36                             l3076 1F96  
                           l3092 1BF2                             l3500 1130  
                           l3420 0F36                             l3412 0EEC  
                           l3404 0EB4                             l3340 0D06  
                           l3332 0CE6                             l3244 1EFE  
                           l3260 13E2                             l3308 1D32  
                           l3324 1C2C                             l3316 1C02  
                           l3236 1F0E                             l3180 1AFE  
                           l3172 1AF6                             l3164 1AEE  
                           l3156 1AE6                             l3148 1ADE  
                           l3228 1F60                             l3252 1B94  
                           l3094 14EA                             l3086 1BBE  
                           l3078 1B9E                             l3510 116C  
                           l3502 1140                             l3430 0F78  
                           l3422 0F46                             l3414 0EFE  
                           l3406 0EC0                             l3350 0D48  
                           l3334 0CF6                             l3246 1F00  
                           l3270 1432                             l3262 13FA  
                           l3326 1C38                             l3318 1C04  
                           l3190 1B18                             l3182 1B00  
                           l3174 1AF8                             l3166 1AF0  
                           l3158 1AE8                             l3238 1E5C  
                           l3096 14EC                             l3088 1BD0  
                           l3520 11C0                             l3512 117E  
                           l3504 114C                             l2800 16DC  
                           l3440 0FD4                             l3432 0F9A  
                           l3416 0F12                             l3424 0F5C  
                           l3408 0EC2                             l3360 0D78  
                           l3352 0D4C                             l3344 0D26  
                           l3336 0CF8                             l3248 1F02  
                           l3280 1474                             l3272 1436  
                           l3264 140A                             l3256 13DC  
                           l3328 1C3A                             l3192 1B1A  
                           l3184 1B02                             l3176 1AFA  
                           l3168 1AF2                             l3600 02A8  
                           l3098 14F2                             l3530 11F8  
                           l3522 11C6                             l3514 118E  
                           l3506 1162                             l2810 1704  
                           l2802 16E4                             l3450 102A  
                           l3442 0FE6                             l3434 0FA8  
                           l3418 0F24                             l3370 0DB4  
                           l3362 0D88                             l3354 0D50  
                           l3346 0D28                             l3338 0D04  
                           l3290 14B6                             l3282 148A  
                           l3274 1448                             l3266 1416  
                           l3258 13DE                             l3194 1B1C  
                           l3186 1B04                             l3178 1AFC  
                           l3610 02BE                             l3602 02AE  
                           l2740 1F22                             l3540 1238  
                           l3532 120C                             l3524 11CA  
                           l3516 119E                             l3508 1168  
                           l2812 170C                             l2804 16EC  
                           l3460 1070                             l3452 103C  
                           l3444 0FF6                             l3436 0FB8  
                           l3428 0F70                             l3380 0E08  
                           l3372 0DC6                             l3364 0D94  
                           l3356 0D5C                             l3348 0D3A  
                           l3292 14C2                             l3284 1490  
                           l3276 1458                             l3268 142C  
                           l2900 13CA                             l3196 1B1E  
                           l3188 1B16                             l3700 0488  
                           l3620 02D6                             l3612 02C0  
                           l3604 02B2                             l2750 1DA2  
                           l2742 1D8A                             l3550 127C  
                           l3542 1244                             l3534 120E  
                           l3526 11DC                             l3518 11AA  
                           l2814 1714                             l2806 16F4  
                           l2822 172C                             l2910 17B6  
                           l3470 10A4                             l3462 107C  
                           l3454 104C                             l3438 0FC6  
                           l3390 0E40                             l3382 0E0E  
                           l3374 0DD6                             l3366 0DAA  
                           l3358 0D60                             l3446 1004  
                           l3294 14C6                             l3286 1494  
                           l3278 1468                             l2734 1E82  
                           l3198 1B20                             l3702 0494  
                           l3710 04B8                             l3630 02E0  
                           l3622 02D8                             l3614 02C2  
                           l3606 02B6                             l2760 1A46  
                           l2752 1DA6                             l3560 12AC  
                           l3552 128C                             l3536 121A  
                           l3528 11EC                             l3480 10CA  
                           l3472 10AA                             l2816 171C  
                           l2808 16FC                             l2824 1798  
                           l2920 17DC                             l2912 17BA  
                           l2904 179C                             l3464 107E  
                           l3456 105E                             l3448 1016  
                           l3392 0E56                             l3384 0E12  
                           l3376 0DE6                             l3368 0DB0  
                           l3296 14DC                             l3288 14A6  
                           l2736 1E82                             l2832 1FAA  
                           l2840 1F70                             l3800 0826  
                           l3720 0536                             l3712 0504  
                           l3704 04A0                             l3640 0328  
                           l3632 02F0                             l3624 02DA  
                           l3616 02D2                             l3608 02BA  
                           l2754 1E30                             l2770 1A7A  
                           l3554 129C                             l3562 12C2  
                           l3538 121C                             l3490 1100  
                           l3546 1258                             l3482 10D6  
                           l3474 10B2                             l2818 1724  
                           l2930 1812                             l2922 17EE  
                           l2914 17C8                             l2906 17A0  
                           l3458 106E                             l3466 1094  
                           l3394 0E68                             l3386 0E24  
                           l3378 0DF2                             l3298 14E4  
                           l2738 1E98                             l2850 1F5A  
                           l2834 1FAE                             l2842 1F74  
                           l4450 0C72                             l3802 0834  
                           l3810 0854                             l3730 056C  
                           l3722 053A                             l3714 0520  
                           l4442 04CC                             l3706 04AC  
                           l3650 0344                             l3642 032A  
                           l3634 0306                             l3626 02DC  
                           l3618 02D4                             l2756 1E34  
                           l2852 1FB2                             l2780 1A88  
                           l2772 1A82                             l2748 1D92  
                           l3564 12CA                             l3556 129E  
                           l3548 126A                             l3492 1104  
                           l3484 10D8                             l3476 10B8  
                           l2932 1828                             l2924 17F6  
                           l2940 183E                             l2916 17D0  
                           l2908 17AE                             l3468 109C  
                           l3396 0E6E                             l3388 0E34  
                           l2860 12D0                             l2844 1F4E  
                           l2836 1FA2                             l3572 1D58  
                           l4452 0CCC                             l3900 0A98  
                           l3820 0892                             l3804 0848  
                           l4444 066A                             l3740 05B2  
                           l3732 0588                             l3724 053C  
                           l3716 0522                             l3660 0382  
                           l3652 035E                             l3644 032E  
                           l3636 030A                             l3628 02DE  
                           l2758 1E42                             l2854 1FB6  
                           l2790 1AA0                             l2782 1A9A  
                           l2766 1A4C                             l3558 12AA  
                           l3494 1108                             l3478 10C8  
                           l4454 1742                             l2942 184E  
                           l2934 1830                             l2926 17FE  
                           l2918 17D4                             l2950 1864  
                           l3398 0E7E                             l2870 1304  
                           l2862 12D4                             l2846 1F52  
                           l2838 1FA6                             l3574 1D68  
                           l3566 1D50                             l3910 0AF0  
                           l3902 0AB0                             l4446 09FE  
                           l3830 08DC                             l3822 08AA  
                           l3814 0868                             l3806 084C  
                           l3750 05F6                             l3742 05C4  
                           l3734 058A                             l3726 0556  
                           l3718 0526                             l3670 03DA  
                           l3662 039E                             l3646 033E  
                           l3654 0360                             l3638 030C  
                           l2856 1FBA                             l2792 1AB0  
                           l2768 1A6A                             l4456 1594  
                           l3496 1114                             l3488 10F8  
                           l2944 1856                             l2936 1832  
                           l2928 180C                             l2960 1894  
                           l2952 1872                             l2880 1346  
                           l2872 1314                             l2864 12E2  
                           l2848 1F56                             l3576 1D6C  
                           l4448 0BCC                             l3920 0B16  
                           l3912 0AF4                             l3904 0ACC  
                           l3840 0918                             l3832 08E4  
                           l3816 087A                             l3824 08B2  
                           l3808 0850                             l3760 063E  
                           l3752 0610                             l3744 05D6  
                           l3736 058E                             l3728 0558  
                           l3680 0418                             l3672 03DC  
                           l3664 03A6                             l3656 0378  
                           l3648 0342                             l2858 1FBE  
                           l2794 1AB2                             l2778 1A86  
                           l4458 1684                             l3498 1118  
                           l2938 1838                             l2970 18DA  
                           l2962 18A6                             l2954 187A  
                           l2890 1398                             l2882 1352  
                           l2874 1318                             l2866 12F2  
                           l3922 0B1E                             l3914 0AF8  
                           l3906 0AE4                             l3850 0964  
                           l3842 092E                             l3834 08F4  
                           l3826 08C4                             l3818 088A  
                           l3770 06A8                             l3762 064A  
                           l3754 0616                             l3746 05E8  
                           l3738 05A0                             l3690 044A  
                           l3682 041A                             l3674 03F8  
                           l3666 03BC                             l3658 0380  
                           l2788 1A9E                             l2796 16D0  
                           l2980 1906                             l2972 18E2  
                           l2964 18AE                             l2956 187E  
                           l2948 1860                             l2892 139A  
                           l2884 1360                             l2876 1328  
                           l2868 12F6                             l3940 0B70  
                           l3916 0AFC                             l3908 0AEC  
                           l3932 0B54                             l3860 0982  
                           l3844 0938                             l3836 0904  
                           l3828 08D4                             l3780 070E  
                           l3772 06AC                             l3756 0622  
                           l3748 05F4                             l3692 044C  
                           l3684 041E                             l3676 03FA  
                           l3668 03D2                             l3596 02A2  
                           l2798 16D4                             l2974 18E8  
                           l2966 18B6                             l2958 188C  
                           l2990 1952                             l2894 13A4  
                           l2886 136A                             l2878 133E  
                           l3950 0BAC                             l3942 0B78  
                           l3926 0B38                             l3918 0B14  
                           l3870 09BA                             l3862 0992  
                           l3838 0908                             l3854 096E  
                           l3790 07A0                             l3782 072A  
                           l3774 06B0                             l3758 0632  
                           l3766 0656                             l3694 0466  
                           l3686 042E                             l3678 03FC  
                           l3598 02A4                             l2968 18C4  
                           l2976 18EE                             l2992 1976  
                           l2984 1910                             l2888 1388  
                           l2896 13AA                             l3960 0C18  
                           l3944 0B84                             l3936 0B5C  
                           l3928 0B4A                             l3872 09C6  
                           l3880 09EA                             l3864 0996  
                           l3856 0976                             l3848 0952  
                           l3792 07B6                             l3784 073E  
                           l3776 06EC                             l3768 0698  
                           l3696 046C                             l3688 043E  
                           l2978 18FE                             l2994 1986  
                           l2986 1948                             l2898 13BA  
                           l3970 0C3A                             l3946 0B94  
                           l3954 0BB8                             l3938 0B6C  
                           l3962 0C1C                             l3890 0A5A  
                           l3882 0A36                             l3874 09D2  
                           l3866 099E                             l3858 097A  
                           l3794 07DE                             l3786 0766  
                           l3778 06F6                             l3698 047C  
                           l2996 1996                             l2988 1950  
                           l3972 0C3C                             l3964 0C2C  
                           l3956 0BFC                             l3948 0BA0  
                           l3892 0A6A                             l3884 0A50  
                           l3876 09DE                             l3868 09AE  
                           l3980 0C5C                             l3796 07F4  
                           l3788 0778                             l2998 199C  
                           l3974 0C56                             l3966 0C30  
                           l3958 0C16                             l3894 0A7A  
                           l3886 0A52                             l3982 0CA0  
                           l3798 0816                             l3968 0C34  
                           l3896 0A7E                             l3984 0CB0  
                           l3898 0A80                             l3986 0CB8  
                           u2000 0EFE                             u2001 0EFA  
                           u2010 0F10                             u2011 0F0C  
                           u2100 1028                             u2020 0F24  
                           u2101 1024                             u2021 0F20  
                           u2110 103C                             u2030 0F36  
                           u2111 1038                             u2031 0F32  
                           u2200 120C                             u2120 104C  
                           u2040 0F6C                             u2201 1208  
                           u2121 1048                             u2041 0F68  
                           u2210 1254                             u2130 105E  
                           u2050 0F92                             u2211 1250  
                           u2131 105A                             u2051 0F8C  
                           u1500 1E5A                             u2220 1268  
                           u2140 106E                             u2060 0F94  
                           u1501 1E56                             u2221 1264  
                           u2141 106A                             u2230 127C  
                           u2150 10C8                             u2070 0FD4  
                           u2310 033E                             u2231 1278  
                           u2151 10C4                             u2071 0FD0  
                           u3007 0ECC                             u2311 033A  
                           u1520 1A7A                             u2240 128C  
                           u2160 1162                             u2080 0FE6  
                           u1600 1388                             u2400 05D6  
                           u2320 03BC                             u1521 1A76  
                           u2241 1288                             u2161 115E  
                           u2081 0FE2                             u3017 0F50  
                           u1601 1384                             u2401 05D2  
                           u2321 03B8                             u1530 1A98  
                           u1514 1A5E                             u2250 129C  
                           u2170 117E                             u2090 1016  
                           u1610 13BA                             u2410 05E8  
                           u2330 03D2                             u1531 1A94  
                           u1515 1A5A                             u3107 12B6  
                           u2251 1298                             u2171 117A  
                           u2091 1012                             u3027 0FA0  
                           u1611 13B6                             u2411 05E4  
                           u2331 03CE                             u1540 1AB0  
                           u2180 11C0                             u1620 17AE  
                           u1700 18A6                             u1460 1E98  
                           u2260 1D88                             u2500 0792  
                           u2420 06DE                             u2340 042E  
                           u3117 1E3A                             u1541 1AAC  
                           u2181 11BC                             u1621 17AA  
                           u1701 18A2                             u3037 0FBE  
                           u1461 1E94                             u2261 1D84  
                           u2501 078E                             u2421 06DA  
                           u2341 042A                             u1550 1AC2  
                           u2190 11DC                             u1630 17C8  
                           u1710 18C4                             u1470 1EA6  
                           u2510 07A0                             u2430 06EC  
                           u2350 043E                             u1551 1ABE  
                           u2191 11D8                             u1631 17C4  
                           u1711 18C0                             u3047 0FFC  
                           u1471 1EA2                             u2511 079C  
                           u2431 06E8                             u2351 043A  
                           u1480 1F34                             u1640 17EE  
                           u1720 18DA                             u1560 12E2  
                           u1800 1B32                             u2600 088A  
                           u2520 07B6                             u2440 071C  
                           u2360 0536                             u1481 1F30  
                           u1641 17EA                             u1721 18D6  
                           u3057 1088                             u1561 12DE  
                           u1801 1B2E                             u2601 0886  
                           u2521 07B2                             u2441 0718  
                           u2361 0532                             u1490 1DC2  
                           u1650 180C                             u1730 18FE  
                           u1570 1304                             u2610 08C4  
                           u2530 07D0                             u2450 072A  
                           u2370 05A0                             u1491 1DBE  
                           u3067 10E2                             u1651 1808  
                           u1731 18FA                             u1571 1300  
                           u2611 08C0                             u2531 07CC  
                           u2451 0726                             u2371 059C  
                           u1660 1828                             u1740 1986  
                           u1900 0DAA                             u1820 142C  
                           u1580 133E                             u2700 0C2C  
                           u2620 08D4                             u2540 07DE  
                           u2460 073E                             u2380 05B2  
                           u3077 1122                             u1661 1824  
                           u1741 1982                             u1901 0DA6  
                           u1821 1428                             u1581 133A  
                           u2701 0C28                             u2621 08D0  
                           u2541 07DA                             u2461 073A  
                           u2381 05AE                             u1670 184E  
                           u1750 1996                             u1910 0DC6  
                           u1830 1448                             u1590 1360  
                           u2630 0918                             u2550 07F4  
                           u2470 0758                             u2390 05C4  
                           u3087 1184                             u1671 184A  
                           u1751 1992                             u1911 0DC2  
                           u1815 19DC                             u1831 1444  
                           u1591 135C                             u2631 0914  
                           u2551 07F0                             u2471 0754  
                           u2391 05C0                             u1760 1CFC  
                           u1680 1872                             u1920 0E08  
                           u1840 148A                             u2640 094E  
                           u2560 080E                             u2480 0766  
                           u1761 1CF8                             u3097 1226  
                           u1681 186E                             u1921 0E04  
                           u1841 1486                             u2641 094A  
                           u2561 080A                             u2481 0762  
                           u1770 1EDC                             u1690 188C  
                           u1930 0E24                             u1850 14A6  
                           u2650 0992                             u2570 0834  
                           u2490 0778                             _PEN2 007B5A  
                           u1771 1ED8                             u1691 1888  
                           u1931 0E20                             u1851 14A2  
                           u2651 098E                             u2571 0830  
                           u2491 0774                             u1780 1BF0  
                           u1940 0E56                             u1860 1D24  
                           u2660 0A6A                             u2580 0864  
                           u1781 1BEC                             u1941 0E52  
                           u1861 1D20                             u2661 0A66  
                           u2581 0860                             u1950 0E68  
                           u1870 1C1C                             u1790 1DE8  
                           u2670 0A7A                             u2590 087A  
                           u1951 0E64                             u1871 1C18  
                           u1791 1DE4                             u2671 0A76  
                           u2591 0876                             u1960 0E8E  
                           u1880 0CF6                             u2680 0B34  
                           u1961 0E8A                             u1881 0CF2  
                           u2681 0B30                             u1970 0EA0  
                           u1890 0D3A                             u2690 0B6C  
                           u1971 0E9C                             u1891 0D36  
                           u2691 0B68                             u1980 0EB2  
                           u1981 0EAE                             u2917 02FA  
                           u1990 0EEC                             u1991 0EE8  
                           u2927 0700                             u2937 0B06  
                           u2947 13EC                             u2957 144E  
                           u2967 14D0                             u2977 0D10  
                           _SEN2 007B58                             u2987 0D6A  
                           u2997 0DCC                             _TMR1 000FCE  
                           _Busy 0025                             _Stop 0027  
                           _data 0023   __end_of_AD_capture_BattVoltage 1D14  
                           _main 02A2                             _init 1AC4  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
             _MotorPosition_Init 13DC                             btemp 0051  
                           start 029E                  __end_of_Get7Seg 179C  
                __end_of_Clr_RG3 1FC2      __end_of_Homing_Again_Manual 10AA  
                   ___param_bank 000000                     high_isr@Temp 002D  
            ?_MotorPosition_Init 002A                  __end_of_Read_IR 1EF2  
                __end_of_Set_RG3 1FBA                   ??_InitSTLED316 0036  
                __end_of_MotorON 1F90                     _BAUDCON1bits 000F7E  
                __end_of___aldiv 13DC                            ?_main 002A  
                          ?_init 002A                  __end_of___awdiv 1860  
                          _ADRES 000FC3                  __end_of___awmod 1910  
                ___awdiv@divisor 0032                            _T1CON 000FCD  
                          _T4CON 000F76                            _RCEN2 007B5B  
                          i2l407 1E2E                            i2l280 014E  
                          i2l264 01C6                            i2l273 0130  
                          i2l283 018E                            i2l275 0100  
                          i2l277 012A                            i2l294 0292  
                          i2l570 1F4A                            i2l573 1EC6  
                          i2l575 1ECC                            i2l567 1F3C  
                ___awdiv@counter 0034                            _RSEN2 007B59  
                          _ETemp 0015                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TRISF 000F97                            _TRISG 000F98  
            __end_of_i2c_Address 1F60             ??_MotorPosition_Init 0039  
                          _flush 1D50                       _Read1USART 1EA8  
               _TMR1IF_triggered 001D                            tablat 000FF5  
       ??_STLED316s_SPI_SendData 0030              __end_of_i2c_Restart 1FA2  
                          ttemp5 0052                            ttemp6 0055  
                          ttemp7 0059                            status 000FD8  
                          wtemp8 0052                    i2_Write1USART 1F36  
          _WriteSTLED316SVibMode 1BF8                  __initialization 1C90  
                     _InitTimer1 1EF2                     __end_of_main 0CE6  
                   __end_of_init 1B36                 __end_of_i2c_Init 1F20  
               __end_of_i2c_Read 1DFA                 __end_of_i2c_Wait 1EA8  
               __end_of_i2c_Stop 1FAA        __size_of_readWeighingData 005A  
                         ??_main 0044                           ??_init 0030  
                  __activetblptr 000002                           _ACKEN2 007B5C  
                         _ACKDT2 007B5D                           ?_flush 002A  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
               ___awdiv@dividend 0030               __size_of_i2c_Start 0008  
                      ??_Get7Seg 0032               __size_of_i2c_Write 000C  
                         i2l4100 0176                           i2l4110 01B6  
                         i2l4102 017C                           i2l4120 01EA  
                         i2l4104 017E                           i2l4112 01BE  
                         i2l4040 0026                           i2l4130 025E  
                         i2l4122 0208                           i2l4106 0190  
                         i2l4050 0074                           i2l4042 0038  
                         i2l4140 028C                           i2l4132 026E  
                         i2l4124 021C                           i2l4116 01D4  
                         i2l4108 01A4                           i2l4060 00C4  
                         i2l4044 0048                           i2l4052 007C  
                         i2l4036 0012                           i2l4134 0272  
                         i2l4126 022C                           i2l4062 00DE  
                         i2l4054 008C                           i2l4118 01DA  
                         i2l4046 0058                           i2l4038 0020  
                         i2l4128 024A                           i2l4136 0276  
                         i2l4072 0106                           i2l4064 00EE  
                         i2l4056 009C                           i2l4048 0064  
                         i2l4138 0284                           i2l4090 0150  
                         i2l4074 0118                           i2l4066 0102  
                         i2l4058 00B2                           i2l4084 0136  
                         i2l4076 011A                           i2l4092 0164  
                         i2l4094 0170                           i2l4086 013C  
                         i2l4078 0132                           i2l4088 013E  
                         i2l3580 1EB6                           i2l3590 1E16  
                         i2l3582 1ECA                           i2l3592 1E2C  
                         i2l3586 1DFA                           i2l3578 1EA8  
                         i2l3594 1F38                           i2l3588 1E10  
                         _RCREG1 000FAF                        ??_Clr_RG3 0030  
                         _SPBRG1 000FB0                           _TMR1IE 007CE8  
                         _TMR1IF 007CF0                           _TRISD5 007CAD  
                         _TRISD6 007CAE                   ?i2_Write1USART 002A  
                         _TXREG1 000FAE                       _MotorBREAK 1F90  
                      ??_Read_IR 0032                        ??_Set_RG3 0030  
                read_i2c@address 003E                           _OpMode 0022  
                      ??_MotorON 0030                 __end_of_high_isr 029E  
                      ??___aldiv 0038                        ??___awdiv 0034  
                      ??___awmod 0034                   _PWM_Duty_Cycle 001E  
               __end_of_flushOut 1DC4                 __end_of_read_i2c 1B9E  
                    _i2c_Address 1F4C                           clear_0 1CB6  
                         clear_1 1CC2                 ___awdiv@quotient 0036  
                ___awmod@divisor 0032                  ___awmod@counter 0034  
               Read1USART@result 002A       __end_of_WriteSTLED316SData 19B8  
     __end_of_WriteSTLED316SMode 15E8                           flush@i 0030  
                  i2c_Write@data 0031                     __pdataCOMRAM 0046  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      _i2c_Restart 1F9A  
                    ?_Read1USART 002A             __end_of_InitSTLED316 1A44  
                     __accesstop 0060                       _i_RUN_ZERO 0009  
        __end_of__initialization 1CC8  __size_of_STLED316s_SPI_SendData 0080  
            _Low_Power_Indicator 1DFA                _WriteSTLED316SErr 15E8  
                  ___rparam_used 000001           ?_WriteSTLED316SVibMode 002A  
             ?_WriteSTLED316SErr 002A                   __pcstackCOMRAM 002A  
                    ?_InitTimer1 002A                    __end_of_flush 1D8A  
             __size_of_delay_1ms 002C                __end_of_i2c_Start 1FB2  
            ??_WriteSTLED316SErr 0036                __end_of_i2c_Write 1F7A  
           ?_Low_Power_Indicator 002A                          ??_flush 0030  
                      ?_i2c_Init 002A                        ?_i2c_Read 0031  
                     __pbssBANK0 0060                        ?_i2c_Wait 002A  
                ??i2_Write1USART 002A                        ?_i2c_Stop 002A  
             __size_of_initUSART 0026        __end_of_WriteSTLED316SErr 16D0  
                  ??_Write1USART 0030               __size_of_initMotor 000E  
                    ?_MotorBREAK 002A          __size_of_ToggleVIB_Mode 003C  
                        _CCP4CON 000F73              __size_of_Read1USART 0026  
          ??_Low_Power_Indicator 002A           _STLED316s_SPI_SendData 1A44  
               _readWeighingData 1B9E               i2c_Address@address 0032  
                        _SPBRGH1 000F7F                          _SSP2ADD 000F6E  
                        _SSP2BUF 000F6F                          _NUM_REC 0007  
            __size_of_InitTimer1 0018                          _VOLTAGE 0001  
                      ?_high_isr 002A                       ??_i2c_Init 0030  
                     ??_i2c_Read 0033                          _PWM_reg 0050  
                     ??_i2c_Wait 0030                          _Get7Seg 16D0  
    WriteSTLED316SVibMode@v_mode 0036                       ??_i2c_Stop 0031  
                        _Clr_RG3 1FBA                __end_of_delay_1ms 1E5C  
              i2Write1USART@data 002A                        ?_flushOut 002A  
                      ?_read_i2c 003E                      _Serial_Flag 0029  
             __size_of_write_i2c 004A                          _Read_IR 1ECE  
          WriteSTLED316SMode@msg 0038                          _Set_RG3 1FB2  
                        __Hparam 0000                          __Lparam 0000  
                        _MotorON 1F86              __end_of_Write1USART 1F36  
     WriteSTLED316SData@NUM_DIG0 003B       WriteSTLED316SData@NUM_DIG1 003D  
                        ___aldiv 12D0                      _Motor_Speed 0013  
                        ___awdiv 179C                          ___awmod 1860  
                   Get7Seg@Digit 0030     __size_of_Homing_Again_Manual 03C4  
                        __pcinit 1C90                          __ramtop 1000  
              __end_of_initUSART 1E82                          __ptext0 02A2  
                        __ptext1 1B36                          __ptext2 1F9A  
                        __ptext3 1DC4                          __ptext4 1E5C  
                        __ptext5 1F60                          __ptext6 1AC4  
                        __ptext7 1F0A                          __ptext8 1D50  
                        __ptext9 1BF8                __end_of_initMotor 1F6E  
                      _T3CONbits 000F79              __size_of_MotorBREAK 000A  
               ___awmod@dividend 0030                 ___aldiv@dividend 0030  
                      _T4CONbits 000F76                    delay_1ms@time 0030  
          __size_of_InitSTLED316 008C      __size_of_MotorPosition_Init 010C  
                     _pause_Time 0021                        _EAdd_High 0019  
                     ??_high_isr 002B             end_of_initialization 1CC8  
     __size_of_WriteSTLED316SErr 00E8             i2c_Address@l_address 0033  
                     ??_flushOut 0030                       ??_read_i2c 0042  
                  __Lmediumconst 0000          WriteSTLED316SData@data3 003F  
        WriteSTLED316SData@data4 0040                 ___aldiv@quotient 003A  
                        postdec1 000FE5                          postinc0 000FEE  
                   ?_i2c_Address 0031                     _InitSTLED316 19B8  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
              __end_of_write_i2c 1C90                        _TRISCbits 000F94  
                   ?_i2c_Restart 002A         ??_AD_capture_BattVoltage 0033  
                   ??_Read1USART 002A               _WriteSTLED316SData 1910  
        ??_WriteSTLED316SVibMode 0036               _WriteSTLED316SMode 14E8  
                    _Write1USART 1F20              ?_WriteSTLED316SData 0038  
            ?_WriteSTLED316SMode 002A                     ??_InitTimer1 0030  
                 _ToggleVIB_Mode 1D14                        _Device_ID 000F  
                    _Vmotor_Time 004E                    __pidataCOMRAM 1F7A  
             __end_of_Read1USART 1ECE                    _Serial_Buffer 0080  
                      _i2c_Start 1FAA                        _i2c_Write 1F6E  
           ??_WriteSTLED316SData 003B              start_initialization 1C90  
           ??_WriteSTLED316SMode 0036               __end_of_InitTimer1 1F0A  
                _LowPowerCounter 0046         __end_of_readWeighingData 1BF8  
              __size_of_i2c_Init 0016                __size_of_i2c_Read 0036  
              __size_of_i2c_Wait 0026                     ??_MotorBREAK 0030  
              __size_of_i2c_Stop 0008           __end_of_ToggleVIB_Mode 1D50  
        ?_STLED316s_SPI_SendData 002A                       ?_i2c_Start 002A  
                     ?_i2c_Write 002A                      __pbssCOMRAM 0001  
             __end_of_MotorBREAK 1F9A  __size_of_AD_capture_BattVoltage 003E  
                       ?_Get7Seg 0030              _Homing_Again_Manual 0CE6  
                       ?_Clr_RG3 002A                __size_of_high_isr 0296  
          __end_ofi2_Write1USART 1F4C                         ?_Read_IR 0030  
              __size_of_flushOut 003A                        _delay_1ms 1E30  
              __size_of_read_i2c 0068                _Homing_Again_Auto 10AA  
                       ?_Set_RG3 002A                  ?_ToggleVIB_Mode 002A  
                       ?_MotorON 002A   __end_of_STLED316s_SPI_SendData 1AC4  
    __end_of_Low_Power_Indicator 1E30               ?_Homing_Again_Auto 002A  
                      __pintcode 0008                         ?___aldiv 0030  
                       ?___awdiv 0030                         ?___awmod 0030  
           ?_Homing_Again_Manual 002A                     _errorcounter 004A  
            ??_Homing_Again_Auto 0039             __size_of_i2c_Address 0014  
           WriteSTLED316SErr@msg 0038                        _initUSART 1E5C  
                      _initMotor 1F60                      Get7Seg@Data 0034  
                 __size_of_flush 003A                  Write1USART@data 0030  
           __size_of_i2c_Restart 0008                  ___aldiv@divisor 0034  
                ___aldiv@counter 0038        __end_of_Homing_Again_Auto 12D0  
                       _LATAbits 000F89                         _EAdd_Low 0017  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATGbits 000F8F                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                       ?_delay_1ms 0030  
              readWeighingData@i 0032                         i2u230_40 1F4A  
                       i2u230_41 1F46                         i2u227_40 1EB6  
                       i2u227_41 1EB2                         i2u228_40 1E10  
                       i2u228_41 1E0C                         i2u229_40 1E2C  
                       i2u229_41 1E28                         i2u271_40 0020  
                       i2u271_41 001C                         i2u280_40 0100  
                       i2u272_40 0038                         i2u280_41 00FC  
                       i2u272_41 0034                         i2u281_40 012A  
                       i2u273_40 0048                         i2u281_41 0126  
                       i2u273_41 0044                         _PIR1bits 000F9E  
                       i2u290_40 0284                         i2u282_40 014E  
                       i2u274_40 0058                         i2u290_41 0280  
                       i2u282_41 014A                         i2u274_41 0054  
                       i2u283_40 018E                         i2u275_40 008C  
                       i2u283_41 018A                         i2u275_41 0088  
                       i2u284_40 01A4                         i2u276_40 00B2  
                       i2u284_41 01A0                         i2u276_41 00AE  
                       i2u285_40 01B6                         i2u277_40 00C4  
                       i2u285_41 01B2                         i2u277_41 00C0  
                       i2u286_40 01D4                         i2u278_40 00DE  
                       i2u286_41 01D0                         i2u278_41 00DA  
                       i2u287_40 01EA                         i2u279_40 00EE  
                       i2u287_41 01E6                         i2u279_41 00EA  
                       i2u288_40 0208                         i2u288_41 0204  
                       i2u289_40 024A                         i2u289_41 0246  
                       _RCONbits 000FD0           _AD_capture_BattVoltage 1CD6  
                       _SSP2CON1 000F6C                         _SSP2CON2 000F6B  
                       _SSP2STAT 000F6D            ??_Homing_Again_Manual 0041  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                      high_isr@c 002E                        high_isr@i 002F  
                    ??_i2c_Start 0031                      ??_i2c_Write 0031  
     __end_of_MotorPosition_Init 14E8                       ?_initUSART 002A  
          _delay_motor_stop_time 001F                       ?_initMotor 002A  
                   _Serial_GData 0028                        _write_i2c 1C46  
                      copy_data0 1CA4           InitSTLED316@Brightness 0038  
                   _Serial_Count 001B                         _i2c_Init 1F0A  
                       _i2c_Read 1DC4                         _i2c_Wait 1E82  
                       _i2c_Stop 1FA2                 __size_of_Get7Seg 00CC  
                   ?_Write1USART 002A                 __size_of_Clr_RG3 0008  
 __size_of_WriteSTLED316SVibMode 004E    __end_of_WriteSTLED316SVibMode 1C46  
                      flushOut@i 0030                       _ANCON0bits 000FC1  
                       __Hrparam 0000                 __size_of_Read_IR 0024  
                       __Lrparam 0000                 __size_of_Set_RG3 0008  
               __size_of_MotorON 000A                 __size_of___aldiv 010C  
               __size_of___awdiv 00C4                 __size_of___awmod 00B0  
                 _vibration_mode 0024                         __ptext10 1D14  
                       __ptext11 1C46                         __ptext20 19B8  
                       __ptext12 1F6E                         __ptext21 0CE6  
                       __ptext13 1FA2                         __ptext30 14E8  
                       __ptext22 1910                         __ptext14 1FAA  
                       __ptext31 15E8                         __ptext23 1860  
                       __ptext15 1F4C                         __ptext32 1A44  
                       __ptext24 179C                         __ptext16 1E82  
                       __ptext41 1F36                         __ptext33 1ECE  
                       __ptext25 16D0                         __ptext17 12D0  
                       __ptext42 1EA8                         __ptext34 1F86  
                       __ptext26 10AA                         __ptext18 13DC  
                       __ptext43 1DFA                         __ptext35 1FB2  
                       __ptext27 1B9E                         __ptext19 1EF2  
                       __ptext36 1F90                         __ptext28 1D8A  
                       __ptext37 1FBA                         __ptext29 1F20  
                       __ptext38 1CD6                         __ptext39 1E30  
                     ?_write_i2c 003E                 write_i2c@address 003E  
                       _high_isr 0008                read_i2c@read_byte 0042  
                       _flushOut 1D8A                         _read_i2c 1B36  
                  __size_of_main 0A44       __size_of_Homing_Again_Auto 0226  
                  __size_of_init 0072                ?_readWeighingData 002A  
                    ??_delay_1ms 0032               ??_readWeighingData 0032  
                       _vib_Time 0020            _Motor_Stop_Delay_Time 0011  
                       int$flags 0051                _Serial_Buffer_Out 0060  
     STLED316s_SPI_SendData@Data 0032                       _INTCONbits 000FF2  
                    ??_initUSART 0030      __size_of_WriteSTLED316SData 00A8  
     STLED316s_SPI_SendData@temp 0033      __size_of_WriteSTLED316SMode 0100  
                    ??_initMotor 0030                         intlevel2 0000  
                   _motor_status 0026                 ??_ToggleVIB_Mode 0044  
                i2c_Address@mode 0031                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3         WriteSTLED316SData@v_mode 003A  
       WriteSTLED316SData@number 0038                       _IR_SENSORF 0003  
               _Motor_Pause_Time 000D               _Serial_Temp_Buffer 0070  
        STLED316s_SPI_SendData@i 0034          STLED316s_SPI_SendData@t 0035  
                   ___aldiv@sign 0039                       _WDTCONbits 000FC0  
                    ??_write_i2c 0044              i2c_Read@i2cReadData 0034  
                  write_i2c@data 0042          ?_AD_capture_BattVoltage 002A  
           __size_of_Write1USART 0016  
